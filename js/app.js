"use strict";
var main;
(function() {
var $rt_seed = 2463534242;
function $rt_nextId() {
    var x = $rt_seed;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
}
function $rt_compare(a, b) {
    return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
}
function $rt_isInstance(obj, cls) {
    return obj !== null && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
}
function $rt_isAssignable(from, to) {
    if (from === to) {
        return true;
    }
    if (to.$meta.item !== null) {
        return from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
    }
    var supertypes = from.$meta.supertypes;
    for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            return true;
        }
    }
    return false;
}
function $rt_createArray(cls, sz) {
    var data = new Array(sz);
    var arr = new $rt_array(cls, data);
    if (sz > 0) {
        var i = 0;
        do  {
            data[i] = null;
            i = i + 1 | 0;
        }while (i < sz);
    }
    return arr;
}
function $rt_wrapArray(cls, data) {
    return new $rt_array(cls, data);
}
function $rt_createUnfilledArray(cls, sz) {
    return new $rt_array(cls, new Array(sz));
}
function $rt_createLongArray(sz) {
    var data = new Array(sz);
    var arr = new $rt_array($rt_longcls(), data);
    for (var i = 0;i < sz;i = i + 1 | 0) {
        data[i] = Long_ZERO;
    }
    return arr;
}
function $rt_createNumericArray(cls, nativeArray) {
    return new $rt_array(cls, nativeArray);
}
function $rt_createCharArray(sz) {
    return $rt_createNumericArray($rt_charcls(), new Uint16Array(sz));
}
function $rt_createByteArray(sz) {
    return $rt_createNumericArray($rt_bytecls(), new Int8Array(sz));
}
function $rt_createShortArray(sz) {
    return $rt_createNumericArray($rt_shortcls(), new Int16Array(sz));
}
function $rt_createIntArray(sz) {
    return $rt_createNumericArray($rt_intcls(), new Int32Array(sz));
}
function $rt_createBooleanArray(sz) {
    return $rt_createNumericArray($rt_booleancls(), new Int8Array(sz));
}
function $rt_createFloatArray(sz) {
    return $rt_createNumericArray($rt_floatcls(), new Float32Array(sz));
}
function $rt_createDoubleArray(sz) {
    return $rt_createNumericArray($rt_doublecls(), new Float64Array(sz));
}
function $rt_arraycls(cls) {
    var result = cls.$array;
    if (result === null) {
        var arraycls = {  };
        var name = "[" + cls.$meta.binaryName;
        arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false };
        arraycls.classObject = null;
        arraycls.$array = null;
        result = arraycls;
        cls.$array = arraycls;
    }
    return result;
}
function $rt_createcls() {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
}
function $rt_createPrimitiveCls(name, binaryName) {
    var cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    return cls;
}
var $rt_booleanclsCache = null;
function $rt_booleancls() {
    if ($rt_booleanclsCache === null) {
        $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
    }
    return $rt_booleanclsCache;
}
var $rt_charclsCache = null;
function $rt_charcls() {
    if ($rt_charclsCache === null) {
        $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
    }
    return $rt_charclsCache;
}
var $rt_byteclsCache = null;
function $rt_bytecls() {
    if ($rt_byteclsCache === null) {
        $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
    }
    return $rt_byteclsCache;
}
var $rt_shortclsCache = null;
function $rt_shortcls() {
    if ($rt_shortclsCache === null) {
        $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
    }
    return $rt_shortclsCache;
}
var $rt_intclsCache = null;
function $rt_intcls() {
    if ($rt_intclsCache === null) {
        $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
    }
    return $rt_intclsCache;
}
var $rt_longclsCache = null;
function $rt_longcls() {
    if ($rt_longclsCache === null) {
        $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
    }
    return $rt_longclsCache;
}
var $rt_floatclsCache = null;
function $rt_floatcls() {
    if ($rt_floatclsCache === null) {
        $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
    }
    return $rt_floatclsCache;
}
var $rt_doubleclsCache = null;
function $rt_doublecls() {
    if ($rt_doubleclsCache === null) {
        $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
    }
    return $rt_doubleclsCache;
}
var $rt_voidclsCache = null;
function $rt_voidcls() {
    if ($rt_voidclsCache === null) {
        $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
    }
    return $rt_voidclsCache;
}
function $rt_throw(ex) {
    throw $rt_exception(ex);
}
function $rt_exception(ex) {
    var err = ex.$jsException;
    if (!err) {
        err = new Error("Java exception thrown");
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(err);
        }
        err.$javaException = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
}
function $rt_fillStack(err, ex) {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        var stack = $rt_decodeStack(err.stack);
        var javaStack = $rt_createArray($rt_objcls(), stack.length);
        var elem;
        var noStack = false;
        for (var i = 0;i < stack.length;++i) {
            var element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
}
function $rt_createMultiArray(cls, dimensions) {
    var first = 0;
    for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    var arrays = new Array($rt_primitiveArrayCount(dimensions, first));
    var firstDim = dimensions[first] | 0;
    for (i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
}
function $rt_createByteMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
}
function $rt_createCharMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
}
function $rt_createBooleanMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_booleancls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createBooleanArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
}
function $rt_createShortMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
}
function $rt_createIntMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
}
function $rt_createLongMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
}
function $rt_createFloatMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
}
function $rt_createDoubleMultiArray(dimensions) {
    var arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
}
function $rt_primitiveArrayCount(dimensions, start) {
    var val = dimensions[start + 1] | 0;
    for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
}
function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
    var limit = arrays.length;
    for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        var dim = dimensions[i];
        var index = 0;
        var packedIndex = 0;
        while (index < limit) {
            var arr = $rt_createUnfilledArray(cls, dim);
            for (var j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
}
function $rt_assertNotNaN(value) {
    if (typeof value === 'number' && isNaN(value)) {
        throw "NaN";
    }
    return value;
}
var $rt_stdoutBuffer = "";
var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : function(ch) {
    if (ch === 0xA) {
        if (console) {
            console.info($rt_stdoutBuffer);
        }
        $rt_stdoutBuffer = "";
    } else {
        $rt_stdoutBuffer += String.fromCharCode(ch);
    }
};
var $rt_stderrBuffer = "";
var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : function(ch) {
    if (ch === 0xA) {
        if (console) {
            console.error($rt_stderrBuffer);
        }
        $rt_stderrBuffer = "";
    } else {
        $rt_stderrBuffer += String.fromCharCode(ch);
    }
};
var $rt_packageData = null;
function $rt_packages(data) {
    var i = 0;
    var packages = new Array(data.length);
    for (var j = 0;j < data.length;++j) {
        var prefixIndex = data[i++];
        var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
}
function $rt_metadata(data) {
    var packages = $rt_packageData;
    var i = 0;
    while (i < data.length) {
        var cls = data[i++];
        cls.$meta = {  };
        var m = cls.$meta;
        var className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            var packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        var superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        var flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        var clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        var virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (var j = 0;j < virtualMethods.length;j += 2) {
                var name = virtualMethods[j];
                var func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (var k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
}
function $rt_threadStarter(f) {
    return function() {
        var args = Array.prototype.slice.apply(arguments);
        $rt_startThread(function() {
            f.apply(this, args);
        });
    };
}
function $rt_mainStarter(f) {
    return function(args, callback) {
        if (!args) {
            args = [];
        }
        var javaArgs = $rt_createArray($rt_objcls(), args.length);
        for (var i = 0;i < args.length;++i) {
            javaArgs.data[i] = $rt_str(args[i]);
        }
        $rt_startThread(function() {
            f.call(null, javaArgs);
        }, callback);
    };
}
var $rt_stringPool_instance;
function $rt_stringPool(strings) {
    $rt_stringPool_instance = new Array(strings.length);
    for (var i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
}
function $rt_s(index) {
    return $rt_stringPool_instance[index];
}
function $rt_eraseClinit(target) {
    return target.$clinit = function() {
    };
}
var $rt_numberConversionView = new DataView(new ArrayBuffer(8));
function $rt_doubleToLongBits(n) {
    $rt_numberConversionView.setFloat64(0, n, true);
    return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
}
function $rt_longBitsToDouble(n) {
    $rt_numberConversionView.setInt32(0, n.lo, true);
    $rt_numberConversionView.setInt32(4, n.hi, true);
    return $rt_numberConversionView.getFloat64(0, true);
}
function $rt_floatToIntBits(n) {
    $rt_numberConversionView.setFloat32(0, n);
    return $rt_numberConversionView.getInt32(0);
}
function $rt_intBitsToFloat(n) {
    $rt_numberConversionView.setInt32(0, n);
    return $rt_numberConversionView.getFloat32(0);
}
function $rt_javaException(e) {
    return e instanceof Error && typeof e.$javaException === 'object' ? e.$javaException : null;
}
function $rt_jsException(e) {
    return typeof e.$jsException === 'object' ? e.$jsException : null;
}
function $rt_wrapException(err) {
    var ex = err.$javaException;
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err.$javaException = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
}
function $dbg_class(obj) {
    var cls = obj.constructor;
    var arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    var clsName = "";
    if (cls === $rt_booleancls()) {
        clsName = "boolean";
    } else if (cls === $rt_bytecls()) {
        clsName = "byte";
    } else if (cls === $rt_shortcls()) {
        clsName = "short";
    } else if (cls === $rt_charcls()) {
        clsName = "char";
    } else if (cls === $rt_intcls()) {
        clsName = "int";
    } else if (cls === $rt_longcls()) {
        clsName = "long";
    } else if (cls === $rt_floatcls()) {
        clsName = "float";
    } else if (cls === $rt_doublecls()) {
        clsName = "double";
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
}
function Long(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
}
Long.prototype.__teavm_class__ = function() {
    return "long";
};
Long.prototype.toString = function() {
    var result = [];
    var n = this;
    var positive = Long_isPositive(n);
    if (!positive) {
        n = Long_neg(n);
    }
    var radix = new Long(10, 0);
    do  {
        var divRem = Long_divRem(n, radix);
        result.push(String.fromCharCode(48 + divRem[1].lo));
        n = divRem[0];
    }while (n.lo !== 0 || n.hi !== 0);
    result = (result.reverse()).join('');
    return positive ? result : "-" + result;
};
Long.prototype.valueOf = function() {
    return Long_toNumber(this);
};
var Long_ZERO = new Long(0, 0);
var Long_MAX_NORMAL = 1 << 18;
function Long_fromInt(val) {
    return val >= 0 ? new Long(val, 0) : new Long(val,  -1);
}
function Long_fromNumber(val) {
    if (val >= 0) {
        return new Long(val | 0, val / 0x100000000 | 0);
    } else {
        return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
    }
}
function Long_toNumber(val) {
    var lo = val.lo;
    var hi = val.hi;
    if (lo < 0) {
        lo += 0x100000000;
    }
    return 0x100000000 * hi + lo;
}
var $rt_imul = Math.imul || function(a, b) {
    var ah = a >>> 16 & 0xFFFF;
    var al = a & 0xFFFF;
    var bh = b >>> 16 & 0xFFFF;
    var bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
};
var $rt_udiv = function(a, b) {
    if (a < 0) {
        a += 0x100000000;
    }
    if (b < 0) {
        b += 0x100000000;
    }
    return a / b | 0;
};
var $rt_umod = function(a, b) {
    if (a < 0) {
        a += 0x100000000;
    }
    if (b < 0) {
        b += 0x100000000;
    }
    return a % b | 0;
};
function $rt_setCloneMethod(target, f) {
    target.$clone = f;
}
function $rt_cls(cls) {
    return jl_Class_getClass(cls);
}
function $rt_str(str) {
    if (str === null) {
        return null;
    }
    var characters = $rt_createCharArray(str.length);
    var charsBuffer = characters.data;
    for (var i = 0; i < str.length; i = (i + 1) | 0) {
        charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
    }
    return jl_String__init_(characters);
}
function $rt_ustr(str) {
    if (str === null) {
        return null;
    }
    var data = str.$characters.data;
    var result = "";
    for (var i = 0; i < data.length; i = (i + 1) | 0) {
        result += String.fromCharCode(data[i]);
    }
    return result;
}
function $rt_objcls() { return jl_Object; }
function $rt_nullCheck(val) {
    if (val === null) {
        $rt_throw(jl_NullPointerException__init_());
    }
    return val;
}
function $rt_intern(str) {
    return str;
}
function $rt_getThread() {
    return jl_Thread_currentThread();
}
function $rt_setThread(t) {
    return jl_Thread_setCurrentThread(t);
}
function $rt_createException(message) {
    return jl_RuntimeException__init_(message);
}
function $rt_createStackElement(className, methodName, fileName, lineNumber) {
    return null;
}
function $rt_setStack(e, stack) {
}
var $java = Object.create(null);
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
function jl_Object__init_() {
    var var_0 = new jl_Object();
    jl_Object__init_0(var_0);
    return var_0;
}
function jl_Object_monitorEnterSync($o) {
    var var$2;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread0;
    else if ($o.$monitor.$owner !== jl_Thread_currentThread0) {
        var$2 = new jl_IllegalStateException;
        jl_Throwable__init_(var$2, $rt_s(0));
        $rt_throw(var$2);
    }
    $o = $o.$monitor;
    $o.$count = $o.$count + 1 | 0;
}
function jl_Object_monitorExitSync($o) {
    var var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread0) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count - 1 | 0;
        var$2.$count = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $o = new jl_IllegalMonitorStateException;
    jl_Throwable__init_0($o);
    $rt_throw($o);
}
function jl_Object_monitorEnter($o) {
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread0;
    if ($o.$monitor.$owner !== jl_Thread_currentThread0)
        jl_Object_monitorEnterWait($o, 1);
    else {
        $o = $o.$monitor;
        $o.$count = $o.$count + 1 | 0;
    }
}
function jl_Object_createMonitor($o) {
    $o.$monitor = jl_Object$Monitor__init_();
}
function jl_Object_monitorEnterWait(var$1, var$2) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Object_monitorEnterWait0($o, $count, $callback) {
    var $thread_0, $monitor, var$6;
    $thread_0 = jl_Thread_currentThread0;
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        otpp_AsyncCallbackWrapper_complete($callback, null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        otpp_AsyncCallbackWrapper_complete($callback, null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueueJs$js_body$_30();
    $monitor = $monitor.$enteringThreads;
    var$6 = new jl_Object$monitorEnterWait$lambda$_6_0;
    var$6.$_0 = $thread_0;
    var$6.$_1 = $o;
    var$6.$_2 = $count;
    var$6.$_3 = $callback;
    $callback = var$6;
    $monitor.push($callback);
}
function jl_Object_monitorExit($o) {
    var var$2;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread0) {
        var$2 = $o.$monitor;
        var$2.$count = var$2.$count - 1 | 0;
        if (var$2.$count <= 0) {
            var$2.$owner = null;
            if (var$2.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static(var$2.$enteringThreads)) {
                var$2 = new jl_Object$monitorExit$lambda$_8_0;
                var$2.$_00 = $o;
                otp_Platform_postpone(var$2);
            } else
                jl_Object_isEmptyMonitor($o);
        }
        return;
    }
    $o = new jl_IllegalMonitorStateException;
    jl_Throwable__init_0($o);
    $rt_throw($o);
}
function jl_Object_isEmptyMonitor($this) {
    var $monitor;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        if ($monitor.$owner === null && !($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))) {
            if ($monitor.$notifyListeners === null)
                break a;
            if (otp_PlatformQueue_isEmpty$static($monitor.$notifyListeners))
                break a;
        }
        return 0;
    }
    $this.$monitor = null;
    return 1;
}
function jl_Object__init_0($this) {
    return;
}
function jl_Object_getClass($this) {
    return jl_Class_getClass($this.constructor);
}
function jl_Object_hashCode($this) {
    return jl_Object_identity($this);
}
function jl_Object_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Object_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    var$1 = jl_StringBuilder_append(jl_StringBuilder_append(var$1, jl_Class_getName(jl_Object_getClass($this))), $rt_s(1));
    var$2 = jl_Object_identity($this);
    if (!var$2)
        var$3 = $rt_s(2);
    else {
        var$4 = (((32 - jl_Integer_numberOfLeadingZeros(var$2) | 0) + 4 | 0) - 1 | 0) / 4 | 0;
        var$5 = $rt_createCharArray(var$4);
        var$6 = var$5.data;
        var$4 = (var$4 - 1 | 0) * 4 | 0;
        var$7 = 0;
        while (var$4 >= 0) {
            var$8 = var$7 + 1 | 0;
            var$6[var$7] = jl_Character_forDigit(var$2 >>> var$4 & 15, 16);
            var$4 = var$4 - 4 | 0;
            var$7 = var$8;
        }
        var$3 = jl_String__init_(var$5);
    }
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(var$1, var$3));
}
function jl_Object_identity($this) {
    var $platformThis, var$2;
    $platformThis = $this;
    if (!$platformThis.$id$) {
        var$2 = $rt_nextId();
        $platformThis.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_clone($this) {
    var $result, var$2, var$3;
    if (!$rt_isInstance($this, jl_Cloneable) && $this.constructor.$meta.item === null) {
        $result = new jl_CloneNotSupportedException;
        jl_Throwable__init_0($result);
        $rt_throw($result);
    }
    $result = otp_Platform_clone($this);
    var$2 = $result;
    var$3 = $rt_nextId();
    var$2.$id$ = var$3;
    return $result;
}
function jl_Object_notifyAll($this) {
    var $listeners, $listener;
    if (!($this.$monitor !== null && $this.$monitor.$owner === jl_Thread_currentThread0 ? 1 : 0)) {
        $listeners = new jl_IllegalMonitorStateException;
        jl_Throwable__init_0($listeners);
        $rt_throw($listeners);
    }
    $listeners = $this.$monitor.$notifyListeners;
    if ($listeners === null)
        return;
    while (!otp_PlatformQueue_isEmpty$static($listeners)) {
        $listener = otp_PlatformQueue_remove$static($listeners);
        if (!$listener.$expired())
            otp_Platform_postpone($listener);
    }
    $this.$monitor.$notifyListeners = null;
}
function nle_Client() {
    jl_Object.call(this);
}
var nle_Client_rootElement = null;
var nle_Client_instance = null;
var nle_Client_isCrashed = 0;
function nle_Client__init_() {
    var var_0 = new nle_Client();
    nle_Client__init_0(var_0);
    return var_0;
}
function nle_Client__init_0($this) {
    return;
}
function nle_Client_main($args) {
    var $ex2, $e, var$4, var$5, $s, var$7, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$7 = $thread.pop();$s = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$e = $thread.pop();$ex2 = $thread.pop();$args = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nle_Client__clinit_();
        jl_String__clinit_();
        jl_Integer__clinit_();
        jl_Character__clinit_();
        ju_Locale__clinit_();
        ju_Calendar__clinit_();
        ju_GregorianCalendar__clinit_();
        otcit_CachedDateTimeZone__clinit_();
        otcit_DateTimeZoneProvider__clinit_();
        jl_Long__clinit_();
        jl_Boolean__clinit_();
        ju_TimeZone__clinit_();
        nms_NextTickListEntry__clinit_();
        nmc_Minecraft__clinit_();
        nms_Material__clinit_();
        nms_BlockSand__clinit_();
        nms_EnumMobType__clinit_();
        nms_BlockRedstoneTorch__clinit_();
        jn_ByteOrder__clinit_();
        jnc_CodingErrorAction__clinit_();
        jnc_CoderResult__clinit_();
        cjj_Deflate__clinit_();
        cjj_Tree__clinit_();
        cjj_CRC32__clinit_();
        jl_Thread__clinit_();
        nms_ItemArmor__clinit_();
        nPs_LocalStorageManager__clinit_();
        nle_AssetRepository__clinit_();
        nms_GLAllocation__clinit_();
        nle_Base64__clinit_();
        nle_BaseNCodec__clinit_();
        jnc_Charset$Charsets__clinit_();
        nms_TileEntity__clinit_();
        nle_BaseNCodec$CodecPolicy__clinit_();
        nms_AxisAlignedBB__clinit_();
        nms_Vec3D__clinit_();
        nms_GameSettings__clinit_();
        cjj_Inflate__clinit_();
        nms_World__clinit_();
        jl_Float__clinit_();
        jl_Double__clinit_();
        nms_RenderPlayer__clinit_();
        nms_RenderEngine__clinit_();
        nms_GuiIngame__clinit_();
        nms_GuiMainMenu__clinit_();
        nms_Entity__clinit_();
        nms_MathHelper__clinit_();
        nms_GuiContainer__clinit_();
        cjj_InfBlocks__clinit_();
        nPg_FixedFunctionShader__clinit_();
        cjj_InfTree__clinit_();
        cjj_InfCodes__clinit_();
        nms_EntityMinecart__clinit_();
        nms_RenderHelper__clinit_();
        nms_ClippingHelperImplementation__clinit_();
        ju_Collections__clinit_();
        jl_ClassLoader__clinit_();
        nms_FontAllowedCharacters__clinit_();
        nms_TileEntityRenderer__clinit_();
        jur_AbstractSet__clinit_();
        jur_FSet__clinit_();
        jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
        jur_AbstractCharClass__clinit_();
        otci_Base64Impl__clinit_();
        nms_ColorizerGrass__clinit_();
        nms_ColorizerFoliage__clinit_();
        jl_AbstractStringBuilder$Constants__clinit_();
        otcit_DoubleAnalyzer__clinit_();
        otcit_FloatAnalyzer__clinit_();
        nms_EnumArt__clinit_();
        ju_TreeSet__clinit_();
        nms_SpawnerAnimals__clinit_();
        nms_MobSpawnerBase__clinit_();
        nms_EnumCreatureType__clinit_();
        nms_EntityList__clinit_();
        nms_WorldGenBigTree__clinit_();
        nms_EnumSkyBlock__clinit_();
        nms_NoiseGenerator2__clinit_();
        jlr_Modifier__clinit_();
        nle_Client_registerErrorHandler$js_body$_5();
        $ex2 = window.classicConfig;
        if ($ex2 === null)
            $e = null;
        else {
            $e = $rt_createArray(jl_String, $ex2.length);
            $args = $e.data;
            var$4 = 0;
            var$5 = $args.length;
            while (var$4 < var$5) {
                $args[var$4] = $rt_str($ex2[var$4]);
                var$4 = var$4 + 1 | 0;
            }
        }
        a: {
            try {
                $args = $e.data;
                $ex2 = window.document;
                $s = $args[0];
                $ex2 = $ex2.getElementById($rt_ustr($s));
                nle_Client_rootElement = $ex2;
                $s = $args[1];
                $ptr = 1;
                continue main;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof nle_Client$AbortedLaunchException) {
                } else if ($$je instanceof jl_Throwable) {
                    $ex2 = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        jl_Throwable_printStackTrace($ex2, ji_PrintWriter__init_(ji_StringWriter__init_(), 0));
        return;
    case 1:
        b: {
            c: {
                d: {
                    try {
                        nlea_EaglerAdapterImpl2_initializeContext($ex2, $s);
                        if ($rt_suspending()) {
                            break main;
                        }
                        break d;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof nle_Client$AbortedLaunchException) {
                        } else if ($$je instanceof jl_Throwable) {
                            $ex2 = $$je;
                            break c;
                        } else {
                            throw $$e;
                        }
                    }
                    return;
                }
                try {
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                        $ex2 = $$je;
                    } else {
                        throw $$e;
                    }
                }
            }
            jl_Throwable_printStackTrace($ex2, ji_PrintWriter__init_(ji_StringWriter__init_(), 0));
            return;
        }
        e: {
            ji_PrintStream_println(jl_System_out(), $rt_s(3));
            nle_Client_instance = nmc_Minecraft__init_();
            $s = nle_Client_instance;
            var$7 = new nms_Session;
            nms_Session_$callClinit();
            var$7.$inventory = $rt_s(4);
            $s.$field_6320_i = var$7;
            $e = nlea_EaglerAdapterImpl2_loadLocalStorage($rt_s(5));
            $args = nlea_EaglerAdapterImpl2_loadLocalStorage($rt_s(6));
            if ($e !== null)
                try {
                    $ex2 = nPn_NBTBase_readTag(ji_DataInputStream__init_(ji_ByteArrayInputStream__init_($e)));
                    if ($ex2 !== null && $ex2 instanceof nPn_NBTTagCompound)
                        nPs_LocalStorageManager_gameSettingsStorage = $ex2;
                    break e;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_IOException) {
                    } else {
                        throw $$e;
                    }
                }
        }
        f: {
            if ($args !== null)
                try {
                    $ex2 = nPn_NBTBase_readTag(ji_DataInputStream__init_(ji_ByteArrayInputStream__init_($args)));
                    if ($ex2 !== null && $ex2 instanceof nPn_NBTTagCompound)
                        nPs_LocalStorageManager_levelSettingsStorage = $ex2;
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_IOException) {
                    } else {
                        throw $$e;
                    }
                }
        }
        if (nPs_LocalStorageManager_gameSettingsStorage === null)
            nPs_LocalStorageManager_gameSettingsStorage = nPn_NBTTagCompound__init_();
        if (nPs_LocalStorageManager_levelSettingsStorage === null)
            nPs_LocalStorageManager_levelSettingsStorage = nPn_NBTTagCompound__init_();
        nlea_EaglerAdapterImpl2_canvas.focus();
        nlea_EaglerAdapterImpl2_canvasBack.focus();
        $ex2 = nle_Client_instance;
        $ptr = 2;
    case 2:
        nmc_Minecraft_run($ex2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($args, $ex2, $e, var$4, var$5, $s, var$7, $ptr);
}
function nle_Client__clinit_() {
    nle_Client_rootElement = null;
    nle_Client_instance = null;
    nle_Client_isCrashed = 0;
}
function nle_Client_registerErrorHandler$js_body$_5() {
    window.minecraftError = null;
    window.onerror = function(message, file, line, column, errorObj) {
        if (errorObj) {
            window.minecraftError = errorObj;
            window.minecraftErrorL = "" + line + ":" + column;
            nle_Client_handleNativeError$jsocb$_0();
        } else {
            alert("a native browser exception was thrown but your browser does not support fith argument in onerror");
        }
    };
}
function nle_Client_handleNativeError$jsocb$_0() {
    var var$1, var$2;
    var$1 = window.minecraftError;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(var$2, $rt_s(7));
    jl_StringBuilder_append(var$2, $rt_s(8));
    jl_AbstractStringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(9)), $rt_str(window.minecraftErrorL)), 10);
    jl_AbstractStringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(10)), $rt_str(var$1.name)), 10);
    jl_AbstractStringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(11)), $rt_str(var$1.message)), 10);
    jl_StringBuilder_append(var$2, $rt_s(12));
    jl_AbstractStringBuilder_append(jl_StringBuilder_append(var$2, $rt_str(var$1.stack)), 10);
}
function jlr_AnnotatedElement() {
}
function jl_Class() {
    var a = this; jl_Object.call(a);
    a.$name = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
var jl_Class_reflectionInitialized = 0;
function jl_Class_getClass($cls) {
    var $result, var$3;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null) {
        $result = new jl_Class;
        $result.$platformClass = $cls;
        var$3 = $result;
        $cls.classObject = var$3;
    }
    return $result;
}
function jl_Class_getPlatformClass($this) {
    return $this.$platformClass;
}
function jl_Class_isInstance($this, $obj) {
    var var$2;
    $obj = $obj;
    var$2 = $this.$platformClass;
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, var$2) ? 1 : 0;
}
function jl_Class_isAssignableFrom($this, $obj) {
    return otp_Platform_isAssignable($obj.$platformClass, $this.$platformClass);
}
function jl_Class_getName($this) {
    if ($this.$name === null)
        $this.$name = $rt_str($this.$platformClass.$meta.name);
    return $this.$name;
}
function jl_Class_isPrimitive($this) {
    return $this.$platformClass.$meta.primitive ? 1 : 0;
}
function jl_Class_isArray($this) {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
}
function jl_Class_getComponentType($this) {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
}
function jl_Class_createMetadata() {
    nms_TileEntitySign.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_EntityLiving.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canEntityBeSeen",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "getEntityTexture",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "canBeCollidedWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "canBePushed",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_373_s",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "func_421_b",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "func_391_y",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "spawnExplosionParticle",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_350_p",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setPositionAndRotation2",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_floatcls(), $rt_floatcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setSize",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "heal",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_9280_g",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "damageEntity",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getSoundVolume",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "func_434_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onDeath",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "fall",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_435_b",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isOnLadder",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "isEntityAlive",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "onLivingUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_424_C",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_418_b_",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "faceEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "updateRotation",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_floatcls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "func_6392_F",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getCanSpawnHere",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_4034_G",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getSwingProgress",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getPosition",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : nms_Vec3D,
            callable : null
        }, {
            name : "func_4037_H",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_Vec3D,
            callable : null
        }, {
            name : "getLook",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : nms_Vec3D,
            callable : null
        }, {
            name : "rayTrace",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_floatcls()],
            returnType : nms_MovingObjectPosition,
            callable : null
        }, {
            name : "func_6391_i",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getHeldItem",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "func_9282_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_bytecls()],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_EntitySpider.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_402_h",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_doublecls(),
            callable : null
        }, {
            name : "findPlayerToAttack",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : nms_Entity,
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "attackEntity",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_Entity, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntityMobs.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onLivingUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "findPlayerToAttack",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : nms_Entity,
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "attackEntity",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_Entity, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_439_a",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getCanSpawnHere",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }];
    nms_EntityPig.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "interact",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntitySheep.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }];
    nms_EntityCow.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getSoundVolume",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "interact",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_booleancls(),
            callable : null
        }];
    nms_EntityChicken.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onLivingUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "fall",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntityCreeper.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_9282_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_bytecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_418_b_",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "onDeath",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "attackEntity",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_Entity, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_440_b",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_floatcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntitySkeleton.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "onLivingUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "attackEntity",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_Entity, $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getHeldItem",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_EntityZombie.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onLivingUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntitySlime.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_441_c",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_418_b_",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setEntityDead",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onCollideWithPlayer",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getCanSpawnHere",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "getSoundVolume",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }];
    nms_EntityZombieSimple.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_439_a",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_floatcls(),
            callable : null
        }];
    nms_EntityGhast.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_418_b_",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_4050_a",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getSoundVolume",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "getCanSpawnHere",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_6391_i",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntityPainting.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_intcls(), $rt_intcls(), $rt_intcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_412_b",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_411_c",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_410_i",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "canBeCollidedWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_EntityArrow.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, nms_EntityLiving],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_408_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setVelocity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onCollideWithPlayer",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_392_h_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }];
    nms_EntitySnowball.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_384_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, nms_EntityLiving],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_467_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_floatcls(), $rt_floatcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setVelocity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onCollideWithPlayer",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_392_h_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }];
    nms_EntityItem.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_doublecls(), $rt_doublecls(), $rt_doublecls(), nms_ItemStack],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "handleWaterMovement",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_466_g",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_355_a",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onCollideWithPlayer",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_EntityTNTPrimed.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canBeCollidedWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "explode",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_392_h_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }];
    nms_EntityFallingSand.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_floatcls(), $rt_floatcls(), $rt_floatcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canBeCollidedWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_392_h_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "func_465_i",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_World,
            callable : null
        }];
    nms_EntityMinecart.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_383_b_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity],
            returnType : nms_AxisAlignedBB,
            callable : null
        }, {
            name : "func_372_f_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_AxisAlignedBB,
            callable : null
        }, {
            name : "canBePushed",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_402_h",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_doublecls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_9280_g",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canBeCollidedWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "setEntityDead",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_515_a",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : nms_Vec3D,
            callable : null
        }, {
            name : "func_514_g",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : nms_Vec3D,
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_392_h_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "applyEntityCollision",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getSizeInventory",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getStackInSlot",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "decrStackSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "setInventorySlotContents",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), nms_ItemStack],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getInvName",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getInventoryStackLimit",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "onInventoryChanged",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "interact",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "setPositionAndRotation2",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_floatcls(), $rt_floatcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setVelocity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_EntityBoat.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_383_b_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity],
            returnType : nms_AxisAlignedBB,
            callable : null
        }, {
            name : "func_372_f_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_AxisAlignedBB,
            callable : null
        }, {
            name : "canBePushed",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World, $rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_402_h",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_doublecls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "func_9280_g",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canBeCollidedWith",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "setPositionAndRotation2",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls(), $rt_floatcls(), $rt_floatcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "setVelocity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_doublecls(), $rt_doublecls(), $rt_doublecls()],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_366_i_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "func_392_h_",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_floatcls(),
            callable : null
        }, {
            name : "interact",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_EntityPlayer],
            returnType : $rt_booleancls(),
            callable : null
        }];
    nms_TileEntityMobSpawner.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "anyPlayerInRange",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "updateEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "updateDelay",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }];
    nms_TileEntityFurnace.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getSizeInventory",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getStackInSlot",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "decrStackSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "setInventorySlotContents",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), nms_ItemStack],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getInvName",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "readFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getInventoryStackLimit",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getCookProgressScaled",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getBurnTimeRemainingScaled",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "isBurning",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "updateEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canSmelt",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "smeltItem",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getSmeltingResultItem",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_intcls()],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getItemBurnTime",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [nms_ItemStack],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_TileEntityChest.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getSizeInventory",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getStackInSlot",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls()],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "decrStackSize",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), $rt_intcls()],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "setInventorySlotContents",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [$rt_intcls(), nms_ItemStack],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getInvName",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "readFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "writeToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getInventoryStackLimit",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }];
    nms_EntityPigZombie.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_World],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "onUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getCanSpawnHere",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "writeEntityToNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "readEntityFromNBT",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_NBTTagCompound],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "findPlayerToAttack",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : nms_Entity,
            callable : null
        }, {
            name : "onLivingUpdate",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "canAttackEntity",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [nms_Entity, $rt_intcls()],
            returnType : $rt_booleancls(),
            callable : null
        }, {
            name : "becomeAngryAt",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [nms_Entity],
            returnType : $rt_voidcls(),
            callable : null
        }, {
            name : "getLivingSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getHurtSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDeathSound",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "getDropItemId",
            modifiers : 0,
            accessLevel : 2,
            parameterTypes : [],
            returnType : $rt_intcls(),
            callable : null
        }, {
            name : "getHeldItem",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : nms_ItemStack,
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : null
        }];
}
function jl_Class_getDeclaredConstructors($this) {
    var $jsMethods, $count, $i, $jsMethod, $jsParameterTypes, $parameterTypes, var$7, $j, var$9, var$10, $jsClass, var$12;
    if (!jl_Class_isPrimitive($this) && !jl_Class_isArray($this)) {
        if ($this.$declaredConstructors === null) {
            if (!jl_Class_reflectionInitialized) {
                jl_Class_reflectionInitialized = 1;
                jl_Class_createMetadata();
            }
            $jsMethods = $this.$platformClass.$meta.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                $jsMethod = $jsMethods[$i];
                if (jl_String_equals($rt_str($jsMethod.name), $rt_s(13))) {
                    $jsParameterTypes = $jsMethod.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    var$7 = $parameterTypes.data;
                    $j = 0;
                    var$9 = var$7.length;
                    while ($j < var$9) {
                        var$7[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    var$7 = $this.$declaredConstructors.data;
                    var$9 = $count + 1 | 0;
                    var$10 = new jlr_Constructor;
                    $jsClass = $rt_str($jsMethod.name);
                    var$12 = $jsMethod.modifiers;
                    $j = $jsMethod.accessLevel;
                    $jsParameterTypes = otji_JS_functionAsObject($jsMethod.callable, "call");
                    var$10.$declaringClass = $this;
                    var$10.$name0 = $jsClass;
                    var$10.$modifiers = var$12;
                    var$10.$accessLevel = $j;
                    var$10.$parameterTypes = $parameterTypes;
                    var$10.$callable = $jsParameterTypes;
                    var$7[$count] = var$10;
                    $count = var$9;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredConstructors = ju_Arrays_copyOf($this.$declaredConstructors, $count);
        }
        return $this.$declaredConstructors.$clone();
    }
    return $rt_createArray(jlr_Constructor, 0);
}
function jl_Class_getConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor, var$6;
    var$2 = jl_Class_getDeclaredConstructors($this).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            jl_Throwable__init_0($constructor);
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        var$6 = !(jlr_Constructor_getModifiers($constructor) & 1) ? 0 : 1;
        if (var$6 && ju_Arrays_equals(jlr_Constructor_getParameterTypes($constructor), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
function jl_Class_getSuperclass($this) {
    return jl_Class_getClass($this.$platformClass.$meta.superclass);
}
function jl_Class_getClassLoader($this) {
    return jl_ClassLoader_systemClassLoader;
}
function jl_Class_newInstance($this) {
    var $instance;
    $instance = $this.$platformClass;
    if (!otp_Platform_newInstancePrepared) {
        otp_Platform_prepareNewInstance();
        otp_Platform_newInstancePrepared = 1;
    }
    $instance = otp_Platform_newInstanceImpl($instance);
    if ($instance !== null)
        return $instance;
    $instance = new jl_InstantiationException;
    jl_Throwable__init_0($instance);
    $rt_throw($instance);
}
function jl_Class_getResourceAsStream($this, $name) {
    var $cls, $prefix, $index;
    if (jl_String_startsWith($name, $rt_s(14)))
        return jl_ClassLoader_getResourceAsStream(jl_Class_getClassLoader($this), jl_String_substring($name, 1));
    $cls = $this;
    while (jl_Class_isArray($cls)) {
        $cls = jl_Class_getComponentType($cls);
    }
    $prefix = jl_Class_getName($cls);
    $index = jl_String_lastIndexOf($prefix, 46);
    if ($index >= 0) {
        $cls = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($cls);
        $name = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($cls, jl_String_replace(jl_String_substring0($prefix, 0, $index + 1 | 0), 46, 47)), $name));
    }
    return jl_ClassLoader_getResourceAsStream(jl_Class_getClassLoader($this), $name);
}
function otji_JS() {
    jl_Object.call(this);
}
function otji_JS__init_() {
    var var_0 = new otji_JS();
    otji_JS__init_0(var_0);
    return var_0;
}
function otji_JS__init_0($this) {
    return;
}
function otji_JS_function(var$1, var$2) {
    var name = 'jso$functor$' + var$2;
    if (!var$1[name]) {
        var fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        var$1[name] = function() {
            return fn;
        };
    }
    return var$1[name]();
}
function otji_JS_functionAsObject(var$1, var$2) {
    if (typeof var$1 !== "function") return var$1;
    var result = {};
    result[var$2] = var$1;
    return result;
}
function otp_Platform() {
    jl_Object.call(this);
}
var otp_Platform_newInstancePrepared = 0;
function otp_Platform__init_() {
    var var_0 = new otp_Platform();
    otp_Platform__init_0(var_0);
    return var_0;
}
function otp_Platform__init_0($this) {
    return;
}
function otp_Platform_clone(var$1) {
    var copy = new var$1.constructor();
    for (var field in var$1) {
        if (!var$1.hasOwnProperty(field)) {
            continue;
        }
        copy[field] = var$1[field];
    }
    return copy;
}
function otp_Platform_isAssignable($from, $to) {
    var $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function otp_Platform_prepareNewInstance() {
    var c = '$$constructor$$';
    jl_String[c] = jl_String__init_0;
    jl_Object[c] = jl_Object__init_0;
    jl_NoClassDefFoundError[c] = jl_NoClassDefFoundError__init_;
    jl_LinkageError[c] = jl_LinkageError__init_;
    jl_Error[c] = jl_Error__init_;
    jl_Throwable[c] = jl_Throwable__init_0;
    jl_NoSuchFieldError[c] = jl_NoSuchFieldError__init_;
    jl_IncompatibleClassChangeError[c] = jl_IncompatibleClassChangeError__init_;
    jl_NoSuchMethodError[c] = jl_NoSuchMethodError__init_;
    jl_RuntimeException[c] = jl_RuntimeException__init_0;
    jl_Exception[c] = jl_Exception__init_;
    jl_StringBuilder[c] = jl_StringBuilder__init_;
    jl_AbstractStringBuilder[c] = jl_AbstractStringBuilder__init_;
    nle_Client[c] = nle_Client__init_0;
    ji_StringWriter[c] = ji_StringWriter__init_0;
    otji_JS[c] = otji_JS__init_0;
    otp_Platform[c] = otp_Platform__init_0;
    nmc_Minecraft[c] = nmc_Minecraft__init_0;
    nlea_EaglerAdapterImpl2[c] = nlea_EaglerAdapterImpl2__init_;
    nlea_EaglerAdapterImpl2$2[c] = nlea_EaglerAdapterImpl2$2__init_;
    nlea_EaglerAdapterImpl2$3[c] = nlea_EaglerAdapterImpl2$3__init_;
    nlea_EaglerAdapterImpl2$4[c] = nlea_EaglerAdapterImpl2$4__init_;
    nlea_EaglerAdapterImpl2$5[c] = nlea_EaglerAdapterImpl2$5__init_;
    nlea_EaglerAdapterImpl2$6[c] = nlea_EaglerAdapterImpl2$6__init_;
    nlea_EaglerAdapterImpl2$7[c] = nlea_EaglerAdapterImpl2$7__init_;
    nlea_EaglerAdapterImpl2$8[c] = nlea_EaglerAdapterImpl2$8__init_;
    nlea_EaglerAdapterImpl2$9[c] = nlea_EaglerAdapterImpl2$9__init_;
    nlea_EaglerAdapterImpl2$10[c] = nlea_EaglerAdapterImpl2$10__init_;
    nlea_EaglerAdapterImpl2$11[c] = nlea_EaglerAdapterImpl2$11__init_;
    ju_LinkedList[c] = ju_LinkedList__init_;
    ji_IOException[c] = ji_IOException__init_;
    nle_Client$AbortedLaunchException[c] = nle_Client$AbortedLaunchException__init_;
    jl_StringBuffer[c] = jl_StringBuffer__init_;
    jl_String$_clinit_$lambda$_81_0[c] = jl_String$_clinit_$lambda$_81_0__init_;
    otci_IntegerUtil[c] = otci_IntegerUtil__init_;
    jl_System[c] = jl_System__init_;
    jl_ConsoleOutputStreamStdout[c] = jl_ConsoleOutputStreamStdout__init_;
    nms_ModelBiped[c] = nms_ModelBiped__init_;
    nms_TextureWaterFX[c] = nms_TextureWaterFX__init_;
    nms_TextureLavaFX[c] = nms_TextureLavaFX__init_;
    jl_Thread[c] = jl_Thread__init_;
    nPs_LocalStorageManager[c] = nPs_LocalStorageManager__init_;
    nPn_NBTTagCompound[c] = nPn_NBTTagCompound__init_0;
    jt_SimpleDateFormat[c] = jt_SimpleDateFormat__init_;
    ju_HashMap[c] = ju_HashMap__init_;
    nle_AssetRepository[c] = nle_AssetRepository__init_;
    nle_SHA1Digest[c] = nle_SHA1Digest__init_;
    jnci_UTF8Charset[c] = jnci_UTF8Charset__init_;
    ju_Random[c] = ju_Random__init_;
    olo_GL11[c] = olo_GL11__init_;
    olo_EaglerAdapterGL30[c] = olo_EaglerAdapterGL30__init_;
    ju_ArrayList[c] = ju_ArrayList__init_;
    nPn_NBTTagEnd[c] = nPn_NBTTagEnd__init_;
    jl_IllegalArgumentException[c] = jl_IllegalArgumentException__init_;
    ju_Arrays[c] = ju_Arrays__init_;
    jl_NullPointerException[c] = jl_NullPointerException__init_0;
    nms_GLAllocation[c] = nms_GLAllocation__init_;
    nms_RenderBlocks[c] = nms_RenderBlocks__init_;
    nle_Base64[c] = nle_Base64__init_;
    nPn_NBTTagByte[c] = nPn_NBTTagByte__init_;
    nPn_NBTTagShort[c] = nPn_NBTTagShort__init_;
    nPn_NBTTagInt[c] = nPn_NBTTagInt__init_;
    nPn_NBTTagLong[c] = nPn_NBTTagLong__init_;
    nPn_NBTTagFloat[c] = nPn_NBTTagFloat__init_;
    nPn_NBTTagDouble[c] = nPn_NBTTagDouble__init_;
    nPn_NBTTagByteArray[c] = nPn_NBTTagByteArray__init_;
    nPn_NBTTagString[c] = nPn_NBTTagString__init_;
    nPn_NBTTagList[c] = nPn_NBTTagList__init_;
    jt_DateFormatSymbols[c] = jt_DateFormatSymbols__init_;
    ji_ByteArrayOutputStream[c] = ji_ByteArrayOutputStream__init_;
    jnc_Charset$Charsets[c] = jnc_Charset$Charsets__init_;
    cjj_Inflater[c] = cjj_Inflater__init_;
    cjj_ZStream[c] = cjj_ZStream__init_;
    otjb_Performance[c] = otjb_Performance__init_;
    nms_TileEntitySign[c] = nms_TileEntitySign__init_;
    nms_TileEntity[c] = nms_TileEntity__init_;
    jl_CloneNotSupportedException[c] = jl_CloneNotSupportedException__init_;
    nms_Material[c] = nms_Material__init_;
    otciu_CLDRHelper[c] = otciu_CLDRHelper__init_;
    otpp_ResourceAccessor[c] = otpp_ResourceAccessor__init_;
    cjj_GZIPException[c] = cjj_GZIPException__init_;
    nms_MaterialTransparent[c] = nms_MaterialTransparent__init_;
    nms_MaterialLiquid[c] = nms_MaterialLiquid__init_;
    nms_MaterialLogic[c] = nms_MaterialLogic__init_;
    ju_GregorianCalendar[c] = ju_GregorianCalendar__init_;
    cjj_Adler32[c] = cjj_Adler32__init_;
    jl_IndexOutOfBoundsException[c] = jl_IndexOutOfBoundsException__init_;
    jl_ArrayStoreException[c] = jl_ArrayStoreException__init_;
    jlr_Array[c] = jlr_Array__init_;
    otcit_DateTimeZoneProvider[c] = otcit_DateTimeZoneProvider__init_;
    ju_PriorityQueue[c] = ju_PriorityQueue__init_;
    otcit_DateTimeZoneProvider$1[c] = otcit_DateTimeZoneProvider$1__init_;
    ju_HashSet[c] = ju_HashSet__init_;
    otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0[c] = otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0__init_;
    jl_Math[c] = jl_Math__init_;
    otci_Base46[c] = otci_Base46__init_;
    otciu_UnicodeHelper[c] = otciu_UnicodeHelper__init_;
    jl_StringIndexOutOfBoundsException[c] = jl_StringIndexOutOfBoundsException__init_;
    nms_GuiScreen[c] = nms_GuiScreen__init_;
    nms_Gui[c] = nms_Gui__init_;
    nms_GuiConflictWarning[c] = nms_GuiConflictWarning__init_;
    ji_EOFException[c] = ji_EOFException__init_;
    jl_IllegalStateException[c] = jl_IllegalStateException__init_;
    ju_NoSuchElementException[c] = ju_NoSuchElementException__init_;
    nms_MinecraftError[c] = nms_MinecraftError__init_;
    nms_GameSettings[c] = nms_GameSettings__init_;
    oli_Keyboard[c] = oli_Keyboard__init_;
    jl_ConsoleOutputStreamStderr[c] = jl_ConsoleOutputStreamStderr__init_;
    jl_NegativeArraySizeException[c] = jl_NegativeArraySizeException__init_;
    olug_GLU[c] = olug_GLU__init_;
    jl_InterruptedException[c] = jl_InterruptedException__init_;
    nPgv_Matrix4f[c] = nPgv_Matrix4f__init_;
    nPgv_Vector3f[c] = nPgv_Vector3f__init_;
    nPgv_Vector4f[c] = nPgv_Vector4f__init_;
    nms_MouseHelper[c] = nms_MouseHelper__init_;
    nms_GuiMainMenu[c] = nms_GuiMainMenu__init_;
    nms_GuiGameOver[c] = nms_GuiGameOver__init_;
    nle_BaseNCodec$Context[c] = nle_BaseNCodec$Context__init_;
    ju_ConcurrentModificationException[c] = ju_ConcurrentModificationException__init_;
    oli_Mouse[c] = oli_Mouse__init_;
    nms_RenderManager[c] = nms_RenderManager__init_;
    nms_RenderList[c] = nms_RenderList__init_;
    nms_MathHelper[c] = nms_MathHelper__init_;
    nms_CraftingInventoryCB[c] = nms_CraftingInventoryCB__init_;
    nms_GuiUnused[c] = nms_GuiUnused__init_;
    cjj_InfTree[c] = cjj_InfTree__init_;
    nms_RenderItem[c] = nms_RenderItem__init_;
    nms_InventoryCraftResult[c] = nms_InventoryCraftResult__init_;
    ji_UTFDataFormatException[c] = ji_UTFDataFormatException__init_;
    jl_IllegalMonitorStateException[c] = jl_IllegalMonitorStateException__init_;
    nms_RenderSpider[c] = nms_RenderSpider__init_;
    nms_ModelPig[c] = nms_ModelPig__init_;
    nms_ModelSheep2[c] = nms_ModelSheep2__init_;
    nms_ModelSheep1[c] = nms_ModelSheep1__init_;
    nms_ModelCow[c] = nms_ModelCow__init_;
    nms_ModelChicken[c] = nms_ModelChicken__init_;
    nms_RenderCreeper[c] = nms_RenderCreeper__init_;
    nms_ModelSkeleton[c] = nms_ModelSkeleton__init_;
    nms_ModelZombie[c] = nms_ModelZombie__init_;
    nms_RenderPlayer[c] = nms_RenderPlayer__init_;
    nms_RenderGhast[c] = nms_RenderGhast__init_;
    nms_RenderEntity[c] = nms_RenderEntity__init_;
    nms_RenderPainting[c] = nms_RenderPainting__init_;
    nms_RenderArrow[c] = nms_RenderArrow__init_;
    nms_RenderSnowball[c] = nms_RenderSnowball__init_;
    nms_RenderFireball[c] = nms_RenderFireball__init_;
    nms_RenderTNTPrimed[c] = nms_RenderTNTPrimed__init_;
    nms_RenderFallingSand[c] = nms_RenderFallingSand__init_;
    nms_RenderMinecart[c] = nms_RenderMinecart__init_;
    nms_RenderBoat[c] = nms_RenderBoat__init_;
    nms_RenderFish[c] = nms_RenderFish__init_;
    jl_Object$Monitor[c] = jl_Object$Monitor__init_0;
    nms_ModelSpider[c] = nms_ModelSpider__init_;
    nms_ModelCreeper[c] = nms_ModelCreeper__init_;
    nms_ModelGhast[c] = nms_ModelGhast__init_;
    nms_ModelMinecart[c] = nms_ModelMinecart__init_;
    nms_ModelBoat[c] = nms_ModelBoat__init_;
    jl_AssertionError[c] = jl_AssertionError__init_;
    jn_ReadOnlyBufferException[c] = jn_ReadOnlyBufferException__init_;
    jl_UnsupportedOperationException[c] = jl_UnsupportedOperationException__init_;
    jn_BufferOverflowException[c] = jn_BufferOverflowException__init_;
    jn_BufferUnderflowException[c] = jn_BufferUnderflowException__init_;
    nms_GuiIngameMenu[c] = nms_GuiIngameMenu__init_;
    nms_Frustrum[c] = nms_Frustrum__init_;
    nms_CraftingManager[c] = nms_CraftingManager__init_;
    jl_ArithmeticException[c] = jl_ArithmeticException__init_;
    jnc_CharacterCodingException[c] = jnc_CharacterCodingException__init_;
    nms_RenderHelper[c] = nms_RenderHelper__init_;
    nms_GuiChat[c] = nms_GuiChat__init_;
    nms_ClippingHelperImplementation[c] = nms_ClippingHelperImplementation__init_;
    nms_ClippingHelper[c] = nms_ClippingHelper__init_;
    nms_WorldProvider[c] = nms_WorldProvider__init_;
    ji_UnsupportedEncodingException[c] = ji_UnsupportedEncodingException__init_;
    jl_NumberFormatException[c] = jl_NumberFormatException__init_;
    jl_SystemClassLoader[c] = jl_SystemClassLoader__init_;
    nms_RecipesTools[c] = nms_RecipesTools__init_;
    nms_RecipesWeapons[c] = nms_RecipesWeapons__init_;
    nms_RecipesIngots[c] = nms_RecipesIngots__init_;
    nms_RecipesFood[c] = nms_RecipesFood__init_;
    nms_RecipesCrafting[c] = nms_RecipesCrafting__init_;
    nms_RecipesArmor[c] = nms_RecipesArmor__init_;
    ju_Collections[c] = ju_Collections__init_;
    ju_Collections$_clinit_$lambda$_61_0[c] = ju_Collections$_clinit_$lambda$_61_0__init_;
    ju_Collections$_clinit_$lambda$_61_1[c] = ju_Collections$_clinit_$lambda$_61_1__init_;
    ju_Collections$5[c] = ju_Collections$5__init_;
    ju_Collections$6[c] = ju_Collections$6__init_;
    ju_Collections$3[c] = ju_Collections$3__init_;
    ju_Date[c] = ju_Date__init_;
    nms_TileEntityRenderer[c] = nms_TileEntityRenderer__init_;
    nms_MovementInput[c] = nms_MovementInput__init_;
    cjj_CRC32[c] = cjj_CRC32__init_;
    cjj_GZIPHeader[c] = cjj_GZIPHeader__init_;
    jur_Pattern[c] = jur_Pattern__init_;
    nms_FontAllowedCharacters[c] = nms_FontAllowedCharacters__init_;
    ju_LinkedList$Entry[c] = ju_LinkedList$Entry__init_;
    nlea_EaglerAdapterImpl2$14[c] = nlea_EaglerAdapterImpl2$14__init_;
    jl_OutOfMemoryError[c] = jl_OutOfMemoryError__init_;
    jl_VirtualMachineError[c] = jl_VirtualMachineError__init_;
    nms_TileEntitySignRenderer[c] = nms_TileEntitySignRenderer__init_;
    nms_TileEntityMobSpawner[c] = nms_TileEntityMobSpawner__init_;
    nms_TileEntityMobSpawnerRenderer[c] = nms_TileEntityMobSpawnerRenderer__init_;
    nms_SignModel[c] = nms_SignModel__init_;
    jur_AheadFSet[c] = jur_AheadFSet__init_;
    jur_FinalSet[c] = jur_FinalSet__init_;
    jur_NonCapJointSet[c] = jur_NonCapJointSet__init_;
    jur_JointSet[c] = jur_JointSet__init_;
    jur_CharClass[c] = jur_CharClass__init_;
    jur_AbstractCharClass$PredefinedCharacterClasses[c] = jur_AbstractCharClass$PredefinedCharacterClasses__init_;
    jur_FSet$PossessiveFSet[c] = jur_FSet$PossessiveFSet__init_;
    ju_BitSet[c] = ju_BitSet__init_;
    jur_SOLSet[c] = jur_SOLSet__init_;
    jur_PreviousMatch[c] = jur_PreviousMatch__init_;
    jur_EOISet[c] = jur_EOISet__init_;
    jur_DotAllSet[c] = jur_DotAllSet__init_;
    jur_AbstractLineTerminator$1[c] = jur_AbstractLineTerminator$1__init_;
    jur_AbstractLineTerminator$2[c] = jur_AbstractLineTerminator$2__init_;
    jur_AbstractCharClass$LazySpace[c] = jur_AbstractCharClass$LazySpace__init_;
    jur_AbstractCharClass$LazyDigit[c] = jur_AbstractCharClass$LazyDigit__init_;
    jur_AbstractCharClass$LazyLower[c] = jur_AbstractCharClass$LazyLower__init_;
    jur_AbstractCharClass$LazyUpper[c] = jur_AbstractCharClass$LazyUpper__init_;
    jur_AbstractCharClass$LazyASCII[c] = jur_AbstractCharClass$LazyASCII__init_;
    jur_AbstractCharClass$LazyAlpha[c] = jur_AbstractCharClass$LazyAlpha__init_;
    jur_AbstractCharClass$LazyAlnum[c] = jur_AbstractCharClass$LazyAlnum__init_;
    jur_AbstractCharClass$LazyPunct[c] = jur_AbstractCharClass$LazyPunct__init_;
    jur_AbstractCharClass$LazyGraph[c] = jur_AbstractCharClass$LazyGraph__init_;
    jur_AbstractCharClass$LazyPrint[c] = jur_AbstractCharClass$LazyPrint__init_;
    jur_AbstractCharClass$LazyBlank[c] = jur_AbstractCharClass$LazyBlank__init_;
    jur_AbstractCharClass$LazyCntrl[c] = jur_AbstractCharClass$LazyCntrl__init_;
    jur_AbstractCharClass$LazyXDigit[c] = jur_AbstractCharClass$LazyXDigit__init_;
    jur_AbstractCharClass$LazyJavaLowerCase[c] = jur_AbstractCharClass$LazyJavaLowerCase__init_;
    jur_AbstractCharClass$LazyJavaUpperCase[c] = jur_AbstractCharClass$LazyJavaUpperCase__init_;
    jur_AbstractCharClass$LazyJavaWhitespace[c] = jur_AbstractCharClass$LazyJavaWhitespace__init_;
    jur_AbstractCharClass$LazyJavaMirrored[c] = jur_AbstractCharClass$LazyJavaMirrored__init_;
    jur_AbstractCharClass$LazyJavaDefined[c] = jur_AbstractCharClass$LazyJavaDefined__init_;
    jur_AbstractCharClass$LazyJavaDigit[c] = jur_AbstractCharClass$LazyJavaDigit__init_;
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable[c] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_;
    jur_AbstractCharClass$LazyJavaISOControl[c] = jur_AbstractCharClass$LazyJavaISOControl__init_;
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart[c] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_;
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart[c] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_;
    jur_AbstractCharClass$LazyJavaLetter[c] = jur_AbstractCharClass$LazyJavaLetter__init_;
    jur_AbstractCharClass$LazyJavaLetterOrDigit[c] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_;
    jur_AbstractCharClass$LazyJavaSpaceChar[c] = jur_AbstractCharClass$LazyJavaSpaceChar__init_;
    jur_AbstractCharClass$LazyJavaTitleCase[c] = jur_AbstractCharClass$LazyJavaTitleCase__init_;
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart[c] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_;
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart[c] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_;
    jur_AbstractCharClass$LazyWord[c] = jur_AbstractCharClass$LazyWord__init_;
    jur_AbstractCharClass$LazyNonWord[c] = jur_AbstractCharClass$LazyNonWord__init_;
    jur_AbstractCharClass$LazyNonSpace[c] = jur_AbstractCharClass$LazyNonSpace__init_;
    jur_AbstractCharClass$LazyNonDigit[c] = jur_AbstractCharClass$LazyNonDigit__init_;
    jur_AbstractCharClass$LazySpecialsBlock[c] = jur_AbstractCharClass$LazySpecialsBlock__init_;
    nms_WorldChunkManager[c] = nms_WorldChunkManager__init_;
    otci_Base64Impl[c] = otci_Base64Impl__init_;
    otcit_DateTimeZoneBuilder[c] = otcit_DateTimeZoneBuilder__init_;
    nms_ColorizerGrass[c] = nms_ColorizerGrass__init_;
    nms_ColorizerFoliage[c] = nms_ColorizerFoliage__init_;
    nms_TileEntityFurnace[c] = nms_TileEntityFurnace__init_;
    nms_TileEntityChest[c] = nms_TileEntityChest__init_;
    jnc_BufferUnderflowException[c] = jnc_BufferUnderflowException__init_;
    jnc_BufferOverflowException[c] = jnc_BufferOverflowException__init_;
    nms_NBTTagCompound[c] = nms_NBTTagCompound__init_;
    ju_Objects[c] = ju_Objects__init_;
    nms_CompressedStreamTools[c] = nms_CompressedStreamTools__init_;
    jl_AbstractStringBuilder$Constants[c] = jl_AbstractStringBuilder$Constants__init_;
    otcit_DoubleAnalyzer[c] = otcit_DoubleAnalyzer__init_;
    otcit_DoubleAnalyzer$Result[c] = otcit_DoubleAnalyzer$Result__init_;
    otcit_FloatAnalyzer[c] = otcit_FloatAnalyzer__init_;
    otcit_FloatAnalyzer$Result[c] = otcit_FloatAnalyzer$Result__init_;
    juz_Inflater[c] = juz_Inflater__init_;
    juz_CRC32[c] = juz_CRC32__init_;
    nms_NBTTagEnd[c] = nms_NBTTagEnd__init_;
    nms_NBTTagByte[c] = nms_NBTTagByte__init_;
    nms_NBTTagShort[c] = nms_NBTTagShort__init_;
    nms_NBTTagInt[c] = nms_NBTTagInt__init_;
    nms_NBTTagLong[c] = nms_NBTTagLong__init_;
    nms_NBTTagFloat[c] = nms_NBTTagFloat__init_;
    nms_NBTTagDouble[c] = nms_NBTTagDouble__init_;
    nms_NBTTagByteArray[c] = nms_NBTTagByteArray__init_;
    nms_NBTTagString[c] = nms_NBTTagString__init_;
    nms_NBTTagList[c] = nms_NBTTagList__init_;
    jl_ArrayIndexOutOfBoundsException[c] = jl_ArrayIndexOutOfBoundsException__init_;
    juz_DataFormatException[c] = juz_DataFormatException__init_;
    ju_TreeSet[c] = ju_TreeSet__init_;
    nms_WorldProviderHell[c] = nms_WorldProviderHell__init_;
    ju_TreeMap[c] = ju_TreeMap__init_;
    nms_MobSpawnerBase[c] = nms_MobSpawnerBase__init_;
    nms_SpawnerAnimals[c] = nms_SpawnerAnimals__init_;
    jlr_AccessibleObject[c] = jlr_AccessibleObject__init_;
    nms_MobSpawnerSwamp[c] = nms_MobSpawnerSwamp__init_;
    nms_MobSpawnerDesert[c] = nms_MobSpawnerDesert__init_;
    nms_MobSpawnerHell[c] = nms_MobSpawnerHell__init_;
    juz_Deflater[c] = juz_Deflater__init_;
    cjj_Deflater[c] = cjj_Deflater__init_;
    nms_WorldGenTrees[c] = nms_WorldGenTrees__init_;
    nms_WorldGenBigTree[c] = nms_WorldGenBigTree__init_;
    nms_CraftingInventoryWorkbenchCB[c] = nms_CraftingInventoryWorkbenchCB__init_;
    nms_EntityList[c] = nms_EntityList__init_;
    nms_MapGenCaves[c] = nms_MapGenCaves__init_;
    nms_MapGenBase[c] = nms_MapGenBase__init_;
    nms_MapGenCavesHell[c] = nms_MapGenCavesHell__init_;
    cjj_Tree[c] = cjj_Tree__init_;
    nms_NoiseGenerator2[c] = nms_NoiseGenerator2__init_;
    nms_NoiseGeneratorPerlin[c] = nms_NoiseGeneratorPerlin__init_;
    jl_NoSuchMethodException[c] = jl_NoSuchMethodException__init_;
    jl_ReflectiveOperationException[c] = jl_ReflectiveOperationException__init_;
    nms_Teleporter[c] = nms_Teleporter__init_;
    jlr_Modifier[c] = jlr_Modifier__init_;
    nms_WorldGenDungeons[c] = nms_WorldGenDungeons__init_;
    nms_WorldGenReed[c] = nms_WorldGenReed__init_;
    nms_WorldGenPumpkin[c] = nms_WorldGenPumpkin__init_;
    nms_WorldGenCactus[c] = nms_WorldGenCactus__init_;
    nms_WorldGenFire[c] = nms_WorldGenFire__init_;
    nms_WorldGenLightStone1[c] = nms_WorldGenLightStone1__init_;
    nms_WorldGenLightStone2[c] = nms_WorldGenLightStone2__init_;
    jl_InstantiationException[c] = jl_InstantiationException__init_;
    jl_IllegalAccessException[c] = jl_IllegalAccessException__init_;
    otcir_Converter[c] = otcir_Converter__init_;
    otcir_Flags[c] = otcir_Flags__init_;
    jl_StrictMath[c] = jl_StrictMath__init_;
    nms_Path[c] = nms_Path__init_;
    nms_MCHashTable[c] = nms_MCHashTable__init_;
}
function otp_Platform_newInstanceImpl(var$1) {
    if ($rt_resuming()) {
        var $r = $rt_nativeThread().pop();
        var$1.$$constructor$$($r);
        if ($rt_suspending()) {
            return $rt_nativeThread().push($r);
        }
        return $r;
    }
    if (!var$1.hasOwnProperty('$$constructor$$')) {
        return null;
    }
    var $r = new var$1();
    var$1.$$constructor$$($r);
    if ($rt_suspending()) {
        return $rt_nativeThread().push($r);
    }
    return $r;
}
function otp_Platform_startThread(var$1) {
    return setTimeout(function() {
        $rt_threadStarter(otp_Platform_launchThread)(var$1);
    }, 0);
}
function otp_Platform_launchThread($runnable) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$runnable = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        $runnable.$run();
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($runnable, $ptr);
}
function otp_Platform_postpone($runnable) {
    otp_Platform_schedule($runnable, 0);
}
function otp_Platform_schedule(var$1, var$2) {
    return setTimeout(function() {
        otp_Platform_launchThread(var$1);
    }, var$2);
}
function otp_Platform_stringFromCharCode($charCode) {
    return String.fromCharCode($charCode);
}
function otp_Platform_getArrayItem($cls) {
    return $cls.$meta.item;
}
function otp_Platform_createQueueJs$js_body$_30() {
    return [];
}
function ji_Serializable() {
}
function jl_Comparable() {
}
function jl_CharSequence() {
}
function jl_String() {
    var a = this; jl_Object.call(a);
    a.$characters = null;
    a.$hashCode = 0;
}
var jl_String_CASE_INSENSITIVE_ORDER = null;
function jl_String__init_1() {
    var var_0 = new jl_String();
    jl_String__init_0(var_0);
    return var_0;
}
function jl_String__init_(var_0) {
    var var_1 = new jl_String();
    jl_String__init_2(var_1, var_0);
    return var_1;
}
function jl_String__init_3(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_5(var_0, var_1) {
    var var_2 = new jl_String();
    jl_String__init_6(var_2, var_0, var_1);
    return var_2;
}
function jl_String__init_7(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_8(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_0($this) {
    $this.$characters = $rt_createCharArray(0);
}
function jl_String__init_2($this, $characters) {
    var var$2, $i;
    $characters = $characters.data;
    var$2 = $characters.length;
    $this.$characters = $rt_createCharArray(var$2);
    $i = 0;
    while ($i < var$2) {
        $this.$characters.data[$i] = $characters[$i];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_4($this, $value, $offset, $count) {
    var $i, var$5;
    $this.$characters = $rt_createCharArray($count);
    $i = 0;
    while ($i < $count) {
        var$5 = $value.data;
        $this.$characters.data[$i] = var$5[$i + $offset | 0];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_6($this, $bytes, $charset) {
    $charset = jnc_Charset_decode($charset, jn_ByteBuffer_wrap($bytes, 0, $bytes.data.length));
    if (jn_CharBuffer_hasArray($charset) && !$charset.$position && $charset.$limit == $charset.$capacity)
        $this.$characters = jn_CharBuffer_array($charset);
    else {
        $this.$characters = $rt_createCharArray(jn_Buffer_remaining($charset));
        jn_CharBuffer_get($charset, $this.$characters);
    }
}
function jl_String__init_8($this, $codePoints, $offset, $count) {
    var $charCount, $i, var$6, var$7, $codePoint, var$9;
    $this.$characters = $rt_createCharArray($count * 2 | 0);
    $charCount = 0;
    $i = 0;
    while ($i < $count) {
        var$6 = $codePoints.data;
        var$7 = $offset + 1 | 0;
        $codePoint = var$6[$offset];
        if ($codePoint < 65536) {
            var$6 = $this.$characters.data;
            var$9 = $charCount + 1 | 0;
            var$6[$charCount] = $codePoint & 65535;
        } else {
            var$6 = $this.$characters.data;
            $offset = $charCount + 1 | 0;
            var$6[$charCount] = jl_Character_highSurrogate($codePoint);
            var$6 = $this.$characters.data;
            var$9 = $offset + 1 | 0;
            var$6[$offset] = jl_Character_lowSurrogate($codePoint);
        }
        $i = $i + 1 | 0;
        $offset = var$7;
        $charCount = var$9;
    }
    if ($charCount < $this.$characters.data.length)
        $this.$characters = ju_Arrays_copyOf0($this.$characters, $charCount);
}
function jl_String_charAt($this, $index) {
    var var$2;
    if ($index >= 0 && $index < $this.$characters.data.length)
        return $this.$characters.data[$index];
    var$2 = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function jl_String_length($this) {
    return $this.$characters.data.length;
}
function jl_String_isEmpty($this) {
    return $this.$characters.data.length ? 0 : 1;
}
function jl_String_compareTo($this, $anotherString) {
    var $l, $i, $a;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min(jl_String_length($this), jl_String_length($anotherString));
    $i = 0;
    while (true) {
        if ($i >= $l)
            return jl_String_length($this) - jl_String_length($anotherString) | 0;
        $a = jl_String_charAt($this, $i) - jl_String_charAt($anotherString, $i) | 0;
        if ($a)
            break;
        $i = $i + 1 | 0;
    }
    return $a;
}
function jl_String_compareToIgnoreCase($this, $anotherString) {
    var $l, $i, $a;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min(jl_String_length($this), jl_String_length($anotherString));
    $i = 0;
    while (true) {
        if ($i >= $l)
            return jl_String_length($this) - jl_String_length($anotherString) | 0;
        $a = jl_Character_toLowerCase(jl_String_charAt($this, $i)) - jl_Character_toLowerCase(jl_String_charAt($anotherString, $i)) | 0;
        if ($a)
            break;
        $i = $i + 1 | 0;
    }
    return $a;
}
function jl_String_startsWith0($this, $prefix, $toffset) {
    var $i, var$4, var$5;
    if (($toffset + jl_String_length($prefix) | 0) > jl_String_length($this))
        return 0;
    $i = 0;
    while ($i < jl_String_length($prefix)) {
        var$4 = jl_String_charAt($prefix, $i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != jl_String_charAt($this, $toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
}
function jl_String_startsWith($this, $prefix) {
    if ($this === $prefix)
        return 1;
    return jl_String_startsWith0($this, $prefix, 0);
}
function jl_String_indexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$characters.data.length)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$characters.data.length - 1 | 0))
            return (-1);
        if ($this.$characters.data[$i] == $hi && $this.$characters.data[$i + 1 | 0] == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf0($this, $ch) {
    return jl_String_indexOf($this, $ch, 0);
}
function jl_String_lastIndexOf0($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo, var$7;
    $i = jl_Math_min($fromIndex, jl_String_length($this) - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$characters.data[$i] == $lo) {
            var$7 = $this.$characters.data;
            $ch = $i - 1 | 0;
            if (var$7[$ch] == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return $ch;
}
function jl_String_lastIndexOf($this, $ch) {
    return jl_String_lastIndexOf0($this, $ch, jl_String_length($this) - 1 | 0);
}
function jl_String_indexOf1($this, $str, $fromIndex) {
    var $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = jl_String_length($this) - jl_String_length($str) | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= jl_String_length($str))
                break a;
            if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($str, $j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf2($this, $str) {
    return jl_String_indexOf1($this, $str, 0);
}
function jl_String_lastIndexOf1($this, $str, $fromIndex) {
    var $i, $j;
    $i = jl_Math_min($fromIndex, jl_String_length($this) - jl_String_length($str) | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= jl_String_length($str))
                break a;
            if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($str, $j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jl_String_substring0($this, $beginIndex, $endIndex) {
    var var$3;
    if ($beginIndex <= $endIndex)
        return jl_String__init_3($this.$characters, $beginIndex, $endIndex - $beginIndex | 0);
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0(var$3);
    $rt_throw(var$3);
}
function jl_String_substring($this, $beginIndex) {
    return jl_String_substring0($this, $beginIndex, jl_String_length($this));
}
function jl_String_subSequence($this, $beginIndex, $endIndex) {
    return jl_String_substring0($this, $beginIndex, $endIndex);
}
function jl_String_replace($this, $oldChar, $newChar) {
    var $buffer, var$4, $i;
    if ($oldChar == $newChar)
        return $this;
    $buffer = $rt_createCharArray(jl_String_length($this));
    var$4 = $buffer.data;
    $i = 0;
    while ($i < jl_String_length($this)) {
        var$4[$i] = jl_String_charAt($this, $i) != $oldChar ? jl_String_charAt($this, $i) : $newChar;
        $i = $i + 1 | 0;
    }
    return jl_String__init_($buffer);
}
function jl_String_replace0($this, $target, $replacement) {
    var $sb, $sz, $i, $j;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($sb);
    $sz = jl_String_length($this) - jl_String_length($target) | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= jl_String_length($target)) {
                    jl_StringBuilder_append0($sb, $replacement);
                    $i = $i + (jl_String_length($target) - 1 | 0) | 0;
                    break a;
                }
                if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($target, $j))
                    break;
                $j = $j + 1 | 0;
            }
            jl_AbstractStringBuilder_append($sb, jl_String_charAt($this, $i));
        }
        $i = $i + 1 | 0;
    }
    jl_StringBuilder_append0($sb, jl_String_substring($this, $i));
    return jl_AbstractStringBuilder_toString($sb);
}
function jl_String_trim($this) {
    var $lower, $upper;
    $lower = 0;
    $upper = jl_String_length($this) - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if (jl_String_charAt($this, $lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && jl_String_charAt($this, $upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return jl_String_substring0($this, $lower, $upper + 1 | 0);
}
function jl_String_toString($this) {
    return $this;
}
function jl_String_toCharArray($this) {
    var $array, var$2, $i, var$4;
    $array = $rt_createCharArray($this.$characters.data.length);
    var$2 = $array.data;
    $i = 0;
    var$4 = var$2.length;
    while ($i < var$4) {
        var$2[$i] = $this.$characters.data[$i];
        $i = $i + 1 | 0;
    }
    return $array;
}
function jl_String_valueOf($obj) {
    return $obj === null ? $rt_s(15) : $obj.$toString();
}
function jl_String_valueOf0($i) {
    var var$2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$2, $i));
}
function jl_String_equals($this, $other) {
    var $str, $i;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    if (jl_String_length($str) != jl_String_length($this))
        return 0;
    $i = 0;
    while ($i < jl_String_length($str)) {
        if (jl_String_charAt($this, $i) != jl_String_charAt($str, $i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jl_String_getBytes($this, $charset) {
    var $buffer, $result;
    $buffer = jnc_Charset_encode($charset, jn_CharBuffer_wrap($this.$characters));
    if (!$buffer.$position && $buffer.$limit == $buffer.$capacity)
        return $buffer.$array0;
    $result = $rt_createByteArray(jn_Buffer_remaining($buffer));
    jn_ByteBuffer_get($buffer, $result);
    return $result;
}
function jl_String_hashCode($this) {
    var var$1, var$2, var$3, $c;
    a: {
        if (!$this.$hashCode) {
            var$1 = $this.$characters.data;
            var$2 = var$1.length;
            var$3 = 0;
            while (true) {
                if (var$3 >= var$2)
                    break a;
                $c = var$1[var$3];
                $this.$hashCode = (31 * $this.$hashCode | 0) + $c | 0;
                var$3 = var$3 + 1 | 0;
            }
        }
    }
    return $this.$hashCode;
}
function jl_String_toLowerCase($this) {
    var $codePoints, var$2, $codePointCount, $i, var$5, var$6, var$7;
    if (jl_String_isEmpty($this))
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    var$2 = $codePoints.data;
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$5 = $this.$characters.data;
                var$6 = $i + 1 | 0;
                if (jl_Character_isLowSurrogate(var$5[var$6])) {
                    var$7 = $codePointCount + 1 | 0;
                    var$2[$codePointCount] = jl_Character_toLowerCase0(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$6]));
                    $i = var$6;
                    break a;
                }
            }
            var$7 = $codePointCount + 1 | 0;
            var$2[$codePointCount] = jl_Character_toLowerCase($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$7;
    }
    return jl_String__init_7($codePoints, 0, $codePointCount);
}
function jl_String_toUpperCase($this) {
    var $codePoints, var$2, $codePointCount, $i, var$5, var$6, var$7;
    if (jl_String_isEmpty($this))
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    var$2 = $codePoints.data;
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$5 = $this.$characters.data;
                var$6 = $i + 1 | 0;
                if (jl_Character_isLowSurrogate(var$5[var$6])) {
                    var$7 = $codePointCount + 1 | 0;
                    var$2[$codePointCount] = jl_Character_toUpperCase(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$6]));
                    $i = var$6;
                    break a;
                }
            }
            var$7 = $codePointCount + 1 | 0;
            var$2[$codePointCount] = jl_Character_toUpperCase0($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$7;
    }
    return jl_String__init_7($codePoints, 0, $codePointCount);
}
function jl_String_split($this, $regex) {
    var var$2, var$3;
    if ($regex === null) {
        $regex = new jl_NullPointerException;
        jl_Throwable__init_($regex, $rt_s(16));
        $rt_throw($regex);
    }
    jur_AbstractSet_counter = 1;
    var$2 = jur_Pattern__init_0();
    var$3 = new jur_Lexer;
    var$3.$mode = 1;
    var$3.$orig = $regex;
    var$3.$pattern = $rt_createCharArray(jl_String_length($regex) + 2 | 0);
    jl_System_arraycopy(jl_String_toCharArray($regex), 0, var$3.$pattern, 0, jl_String_length($regex));
    var$3.$pattern.data[var$3.$pattern.data.length - 1 | 0] = 0;
    var$3.$pattern.data[var$3.$pattern.data.length - 2 | 0] = 0;
    var$3.$patternFullLength = var$3.$pattern.data.length;
    var$3.$flags = 0;
    jur_Lexer_movePointer(var$3);
    jur_Lexer_movePointer(var$3);
    var$2.$lexemes = var$3;
    var$2.$flags0 = 0;
    var$2.$start = jur_Pattern_processExpression(var$2, (-1), var$2.$flags0, null);
    if (!jur_Lexer_isEmpty(var$2.$lexemes))
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), var$2.$lexemes.$orig, var$2.$lexemes.$curToc));
    if (var$2.$needsBackRefReplacement)
        var$2.$start.$processSecondPass();
    return jur_Pattern_split(var$2, $this);
}
function jl_String_compareTo0($this, var$1) {
    return jl_String_compareTo($this, var$1);
}
function jl_String__clinit_() {
    jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_81_0;
}
function jl_Throwable() {
    var a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
function jl_Throwable__init_1() {
    var var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
}
function jl_Throwable__init_2(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_3(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_4(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_0($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
}
function jl_Throwable__init_($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
function jl_Throwable__init_4($this, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$cause = $cause;
}
function jl_Throwable_fillInStackTrace($this) {
    return $this;
}
function jl_Throwable_getMessage($this) {
    return $this.$message;
}
function jl_Throwable_getLocalizedMessage($this) {
    return $this.$getMessage();
}
function jl_Throwable_printStackTrace0($this) {
    jl_Throwable_printStackTrace1($this, jl_System_err());
}
function jl_Throwable_printStackTrace1($this, $stream) {
    var $message, $element, var$4, var$5, var$6;
    ji_PrintStream_print($stream, jl_Class_getName(jl_Object_getClass($this)));
    $message = $this.$getMessage();
    if ($message !== null) {
        $element = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($element);
        ji_PrintStream_print($stream, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($element, $rt_s(18)), $message)));
    }
    a: {
        ji_PrintStream_println0($stream);
        if ($this.$stackTrace !== null) {
            var$4 = $this.$stackTrace.data;
            var$5 = var$4.length;
            var$6 = 0;
            while (true) {
                if (var$6 >= var$5)
                    break a;
                $element = var$4[var$6];
                ji_PrintStream_print($stream, $rt_s(19));
                ji_PrintStream_println1($stream, $element);
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        ji_PrintStream_print($stream, $rt_s(20));
        jl_Throwable_printStackTrace1($this.$cause, $stream);
    }
}
function jl_Throwable_printStackTrace($this, $stream) {
    var $message, $element, var$4, var$5, var$6;
    ji_PrintWriter_print($stream, jl_Class_getName(jl_Object_getClass($this)));
    $message = $this.$getMessage();
    if ($message !== null) {
        $element = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($element);
        ji_PrintWriter_print($stream, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($element, $rt_s(18)), $message)));
    }
    a: {
        ji_PrintWriter_println($stream);
        if ($this.$stackTrace !== null) {
            var$4 = $this.$stackTrace.data;
            var$5 = var$4.length;
            var$6 = 0;
            while (true) {
                if (var$6 >= var$5)
                    break a;
                $element = var$4[var$6];
                ji_PrintWriter_print($stream, $rt_s(21));
                ji_PrintWriter_println0($stream, $element);
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        ji_PrintWriter_print($stream, $rt_s(20));
        jl_Throwable_printStackTrace($this.$cause, $stream);
    }
}
function jl_Error() {
    jl_Throwable.call(this);
}
function jl_Error__init_0() {
    var var_0 = new jl_Error();
    jl_Error__init_(var_0);
    return var_0;
}
function jl_Error__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_LinkageError() {
    jl_Error.call(this);
}
function jl_LinkageError__init_0() {
    var var_0 = new jl_LinkageError();
    jl_LinkageError__init_(var_0);
    return var_0;
}
function jl_LinkageError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_NoClassDefFoundError() {
    jl_LinkageError.call(this);
}
function jl_NoClassDefFoundError__init_0() {
    var var_0 = new jl_NoClassDefFoundError();
    jl_NoClassDefFoundError__init_(var_0);
    return var_0;
}
function jl_NoClassDefFoundError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_AbstractStringBuilder() {
    var a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length0 = 0;
}
function jl_AbstractStringBuilder__init_0() {
    var var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_0);
    return var_0;
}
function jl_AbstractStringBuilder__init_1(var_0) {
    var var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_2(var_1, var_0);
    return var_1;
}
function jl_AbstractStringBuilder__init_($this) {
    jl_AbstractStringBuilder__init_2($this, 16);
}
function jl_AbstractStringBuilder__init_2($this, $capacity) {
    $this.$buffer = $rt_createCharArray($capacity);
}
function jl_AbstractStringBuilder_append0($this, $value, $radix) {
    return jl_AbstractStringBuilder_insert($this, $this.$length0, $value, $radix);
}
function jl_AbstractStringBuilder_insert($this, $target, $value, $radix) {
    var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value;
    }
    a: {
        if ($value < $radix) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = 2147483647 / $radix | 0;
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if (var$10 > $value) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (var$10 > $posLimit)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$5 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (var$10 <= 0)
                    break a;
                var$5 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$5[$positive] = jl_Character_forDigit($value / var$10 | 0, $radix);
                $value = $value % var$10 | 0;
                var$10 = var$10 / $radix | 0;
                $positive = $target;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
    var $positive, var$5, var$6, var$7, $sz, $pos, $pos_0;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (Long_lt($value, var$5)) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value.lo, $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            while (true) {
                $pos_0 = Long_mul($pos, var$5);
                if (Long_le($pos_0, $pos))
                    break;
                if (Long_gt($pos_0, $value))
                    break;
                $sz = $sz + 1 | 0;
                $pos = $pos_0;
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $sz = $target;
            else {
                var$6 = $this.$buffer.data;
                $sz = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_le($pos, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                $target = $sz + 1 | 0;
                var$6[$sz] = jl_Character_forDigit(Long_div($value, $pos).lo, $radix);
                $value = Long_rem($value, $pos);
                $pos = Long_div($pos, var$5);
                $sz = $target;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_insert1($this, $target, $value) {
    var $mantissa, var$4, $number, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i, $intDigit;
    $mantissa = $rt_compare($value, 0.0);
    if (!$mantissa) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 46;
        $this.$buffer.data[$target] = 48;
        return $this;
    }
    if (!$mantissa) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 48;
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 46;
        $this.$buffer.data[$mantissa] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 97;
        $this.$buffer.data[$target] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if ($mantissa > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $mantissa = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 73;
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 110;
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 102;
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 110;
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 116;
        $this.$buffer.data[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign;
    $intPart = 1;
    $sz = 1;
    if ($negative) {
        $negative = 1;
        $sz = 2;
    }
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else if ($exp < 0) {
            $mantissa = $mantissa / jl_AbstractStringBuilder$Constants_intPowersOfTen.data[ -$exp] | 0;
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + $digits | 0) | 0);
    if (!$negative)
        $negative = $target;
    else {
        var$4 = $this.$buffer.data;
        $negative = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $negative = $target;
        else {
            var$4 = $this.$buffer.data;
            $negative = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = 69;
        if ($exp >= 0)
            $mantissa = $target;
        else {
            $exp =  -$exp;
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        if ($exp < 10)
            $zeros = $mantissa;
        else {
            var$4 = $this.$buffer.data;
            $zeros = $mantissa + 1 | 0;
            var$4[$mantissa] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[$zeros] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_insert2($this, $target, $value) {
    var $zeros, var$4, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $pos, $i, $intDigit;
    $zeros = $rt_compare($value, 0.0);
    if (!$zeros) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 46;
        $this.$buffer.data[$target] = 48;
        return $this;
    }
    if (!$zeros) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 48;
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 46;
        $this.$buffer.data[$zeros] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 97;
        $this.$buffer.data[$target] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if ($zeros > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $zeros = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $zeros = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 73;
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 110;
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 102;
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 105;
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 110;
        var$4 = $this.$buffer.data;
        $zeros = $target + 1 | 0;
        var$4[$target] = 105;
        var$4 = $this.$buffer.data;
        $target = $zeros + 1 | 0;
        var$4[$zeros] = 116;
        $this.$buffer.data[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_doubleAnalysisResult;
    otcit_DoubleAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa0;
    $exp = $number.$exponent0;
    $negative = $number.$sign0;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 18;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros0($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else if ($exp < 0) {
            $mantissa = Long_div($mantissa, jl_AbstractStringBuilder$Constants_longPowersOfTen.data[ -$exp]);
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if (!($exp > (-100) && $exp < 100))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + $digits | 0) | 0);
    if (!$negative)
        $negative = $target;
    else {
        var$4 = $this.$buffer.data;
        $negative = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = new Long(1569325056, 23283064);
    $i = 0;
    while ($i < $digits) {
        if (Long_le($pos, Long_ZERO))
            $intDigit = 0;
        else {
            $intDigit = Long_div($mantissa, $pos).lo;
            $mantissa = Long_rem($mantissa, $pos);
        }
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $negative = $target;
        else {
            var$4 = $this.$buffer.data;
            $negative = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = Long_div($pos, Long_fromInt(10));
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = 69;
        if ($exp >= 0)
            $zeros = $target;
        else {
            $exp =  -$exp;
            var$4 = $this.$buffer.data;
            $zeros = $target + 1 | 0;
            var$4[$target] = 45;
        }
        if ($exp >= 100) {
            var$4 = $this.$buffer.data;
            $target = $zeros + 1 | 0;
            var$4[$zeros] = (48 + ($exp / 100 | 0) | 0) & 65535;
            $exp = $exp % 100 | 0;
            var$4 = $this.$buffer.data;
            $intPart = $target + 1 | 0;
            var$4[$target] = (48 + ($exp / 10 | 0) | 0) & 65535;
        } else if ($exp < 10)
            $intPart = $zeros;
        else {
            var$4 = $this.$buffer.data;
            $intPart = $zeros + 1 | 0;
            var$4[$zeros] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[$intPart] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
    var $result, $zeros, var$4;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    $zeros = var$4 * 100 | 0;
    if ($n % $zeros | 0)
        $zeros = var$4;
    else
        $result = $result | 2;
    if (!($n % ($zeros * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
}
function jl_AbstractStringBuilder_trailingDecimalZeros0($n) {
    var $zeros, $result, $bit, $i;
    $zeros = Long_fromInt(1);
    $result = 0;
    $bit = 16;
    $i = jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data.length - 1 | 0;
    while ($i >= 0) {
        if (Long_eq(Long_rem($n, Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i])), Long_ZERO)) {
            $result = $result | $bit;
            $zeros = Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i]);
        }
        $bit = $bit >>> 1;
        $i = $i + (-1) | 0;
    }
    return $result;
}
function jl_AbstractStringBuilder_append($this, $c) {
    return $this.$insert0($this.$length0, $c);
}
function jl_AbstractStringBuilder_insert3($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
}
function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
    var $newLength;
    if ($this.$buffer.data.length >= $capacity)
        return;
    $newLength = $this.$buffer.data.length >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max($this.$buffer.data.length * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf0($this.$buffer, $newLength);
}
function jl_AbstractStringBuilder_toString($this) {
    return jl_String__init_3($this.$buffer, 0, $this.$length0);
}
function jl_AbstractStringBuilder_append1($this, $chars, $offset, $len) {
    return $this.$insert1($this.$length0, $chars, $offset, $len);
}
function jl_AbstractStringBuilder_insert4($this, $index, $chars, $offset, $len) {
    var var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        $len = $index + 1 | 0;
        var$8 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = $len;
        $offset = var$8;
    }
    return $this;
}
function jl_AbstractStringBuilder_append2($this, $chars) {
    return $this.$append3($chars, 0, $chars.data.length);
}
function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
    var $sz, $i;
    $sz = $this.$length0 - $start | 0;
    $this.$ensureCapacity(($this.$length0 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer.data[$end + $i | 0] = $this.$buffer.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length0 = $this.$length0 + ($end - $start | 0) | 0;
}
function jl_Appendable() {
}
function jl_StringBuilder() {
    jl_AbstractStringBuilder.call(this);
}
function jl_StringBuilder__init_0() {
    var var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_(var_0);
    return var_0;
}
function jl_StringBuilder__init_($this) {
    jl_AbstractStringBuilder__init_($this);
}
function jl_StringBuilder_append($this, $string) {
    jl_StringBuilder_insert($this, $this.$length0, $string);
    return $this;
}
function jl_StringBuilder_append1($this, $value) {
    jl_AbstractStringBuilder_append0($this, $value, 10);
    return $this;
}
function jl_StringBuilder_append2($this, $value) {
    jl_StringBuilder_insert0($this, $this.$length0, $value);
    return $this;
}
function jl_StringBuilder_append3($this, $value) {
    jl_StringBuilder_insert1($this, $this.$length0, $value);
    return $this;
}
function jl_StringBuilder_append4($this, $value) {
    jl_StringBuilder_insert2($this, $this.$length0, $value);
    return $this;
}
function jl_StringBuilder_append5($this, $c) {
    jl_AbstractStringBuilder_append($this, $c);
    return $this;
}
function jl_StringBuilder_append6($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append1($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_append7($this, $chars) {
    jl_AbstractStringBuilder_append2($this, $chars);
    return $this;
}
function jl_StringBuilder_append0($this, $obj) {
    jl_StringBuilder_insert3($this, $this.$length0, $obj);
    return $this;
}
function jl_StringBuilder_append8($this, $b) {
    jl_StringBuilder_insert4($this, $this.$length0, $b);
    return $this;
}
function jl_StringBuilder_insert0($this, $target, $value) {
    jl_AbstractStringBuilder_insert0($this, $target, $value, 10);
    return $this;
}
function jl_StringBuilder_insert1($this, $target, $value) {
    jl_AbstractStringBuilder_insert1($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert2($this, $target, $value) {
    jl_AbstractStringBuilder_insert2($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert5($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert4($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_insert3($this, $index, $obj) {
    jl_StringBuilder_insert($this, $index, $obj === null ? $rt_s(15) : $obj.$toString());
    return $this;
}
function jl_StringBuilder_insert4($this, $index, $b) {
    jl_StringBuilder_insert($this, $index, !$b ? $rt_s(22) : $rt_s(23));
    return $this;
}
function jl_StringBuilder_insert6($this, $index, $c) {
    jl_AbstractStringBuilder_insert3($this, $index, $c);
    return $this;
}
function jl_StringBuilder_delete($this, $start, $end) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$3 = $rt_compare($start, $end);
    if (var$3 <= 0 && $start <= $this.$length0) {
        if (var$3) {
            var$4 = $this.$length0 - $end | 0;
            $this.$length0 = $this.$length0 - ($end - $start | 0) | 0;
            var$3 = 0;
            while (var$3 < var$4) {
                var$5 = $this.$buffer.data;
                var$6 = $start + 1 | 0;
                var$7 = $this.$buffer.data;
                var$8 = $end + 1 | 0;
                var$5[$start] = var$7[$end];
                var$3 = var$3 + 1 | 0;
                $start = var$6;
                $end = var$8;
            }
        }
        return $this;
    }
    var$9 = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0(var$9);
    $rt_throw(var$9);
}
function jl_StringBuilder_deleteCharAt($this, $index) {
    var var$2, var$3, var$4, var$5;
    if ($index >= 0 && $index < $this.$length0) {
        $this.$length0 = $this.$length0 - 1 | 0;
        while ($index < $this.$length0) {
            var$2 = $this.$buffer.data;
            var$3 = $this.$buffer.data;
            var$4 = $index + 1 | 0;
            var$2[$index] = var$3[var$4];
            $index = var$4;
        }
        return $this;
    }
    var$5 = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0(var$5);
    $rt_throw(var$5);
}
function jl_StringBuilder_insert($this, $index, $string) {
    var var$3, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length0) {
        a: {
            if ($string === null)
                $string = $rt_s(15);
            else if (jl_String_isEmpty($string))
                break a;
            jl_AbstractStringBuilder_ensureCapacity($this, $this.$length0 + jl_String_length($string) | 0);
            var$3 = $this.$length0 - 1 | 0;
            while (var$3 >= $index) {
                $this.$buffer.data[var$3 + jl_String_length($string) | 0] = $this.$buffer.data[var$3];
                var$3 = var$3 + (-1) | 0;
            }
            $this.$length0 = $this.$length0 + jl_String_length($string) | 0;
            var$3 = 0;
            while (var$3 < jl_String_length($string)) {
                var$4 = $this.$buffer.data;
                var$5 = $index + 1 | 0;
                var$4[$index] = jl_String_charAt($string, var$3);
                var$3 = var$3 + 1 | 0;
                $index = var$5;
            }
        }
        return $this;
    }
    $string = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0($string);
    $rt_throw($string);
}
function jl_StringBuilder_setLength($this, var$1) {
    $this.$length0 = var$1;
}
function jl_StringBuilder_getChars($this, var$1, var$2, var$3, var$4) {
    var var$5, var$6, var$7, var$8, var$9;
    if (var$1 > var$2) {
        var$5 = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_(var$5, $rt_s(24));
        $rt_throw(var$5);
    }
    while (var$1 < var$2) {
        var$6 = var$3.data;
        var$7 = var$4 + 1 | 0;
        var$8 = $this.$buffer.data;
        var$9 = var$1 + 1 | 0;
        var$6[var$4] = var$8[var$1];
        var$4 = var$7;
        var$1 = var$9;
    }
}
function jl_StringBuilder_insert7($this, var$1, var$2, var$3, var$4) {
    jl_AbstractStringBuilder_insert4($this, var$1, var$2, var$3, var$4);
    return $this;
}
function jl_StringBuilder_append9($this, var$1, var$2, var$3) {
    jl_AbstractStringBuilder_append1($this, var$1, var$2, var$3);
    return $this;
}
function jl_StringBuilder_length($this) {
    return $this.$length0;
}
function jl_StringBuilder_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuilder_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuilder_insert8($this, var$1, var$2) {
    return jl_StringBuilder_insert4($this, var$1, var$2);
}
function jl_StringBuilder_insert9($this, var$1, var$2) {
    return jl_StringBuilder_insert3($this, var$1, var$2);
}
function jl_StringBuilder_insert10($this, var$1, var$2) {
    jl_AbstractStringBuilder_insert3($this, var$1, var$2);
    return $this;
}
function jl_StringBuilder_insert11($this, var$1, var$2) {
    return jl_StringBuilder_insert2($this, var$1, var$2);
}
function jl_StringBuilder_insert12($this, var$1, var$2) {
    return jl_StringBuilder_insert1($this, var$1, var$2);
}
function jl_StringBuilder_insert13($this, var$1, var$2) {
    return jl_StringBuilder_insert0($this, var$1, var$2);
}
function jl_StringBuilder_insert14($this, var$1, var$2) {
    return jl_StringBuilder_insert($this, var$1, var$2);
}
function jl_Number() {
    jl_Object.call(this);
}
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
var jl_Integer_TYPE = null;
var jl_Integer_integerCache = null;
function jl_Integer__init_(var_0) {
    var var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
}
function jl_Integer__init_0($this, $value) {
    $this.$value = $value;
}
function jl_Integer_toString($i, $radix) {
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return jl_AbstractStringBuilder_append0(jl_AbstractStringBuilder__init_1(20), $i, $radix).$toString();
}
function jl_Integer_parseInt($s, $radix) {
    var $negative, $index, $value, var$6, $digit, var$8, var$9;
    if ($radix >= 2 && $radix <= 36) {
        if ($s !== null && !jl_String_isEmpty($s)) {
            a: {
                $negative = 0;
                $index = 0;
                switch (jl_String_charAt($s, 0)) {
                    case 43:
                        $index = 1;
                        break a;
                    case 45:
                        $negative = 1;
                        $index = 1;
                        break a;
                    default:
                }
            }
            $value = 0;
            if ($index == jl_String_length($s)) {
                $s = new jl_NumberFormatException;
                jl_Throwable__init_0($s);
                $rt_throw($s);
            }
            while ($index < jl_String_length($s)) {
                var$6 = $index + 1 | 0;
                $digit = jl_Character_getNumericValue(jl_String_charAt($s, $index));
                if ($digit < 0) {
                    var$8 = new jl_NumberFormatException;
                    var$9 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$9);
                    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(25)), $s)));
                    $rt_throw(var$8);
                }
                if ($digit >= $radix) {
                    var$8 = new jl_NumberFormatException;
                    var$9 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$9);
                    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$9, $rt_s(26)), $radix), $rt_s(18)), $s)));
                    $rt_throw(var$8);
                }
                $value = $rt_imul($radix, $value) + $digit | 0;
                if ($value < 0) {
                    if (var$6 == jl_String_length($s) && $value == (-2147483648) && $negative)
                        return (-2147483648);
                    var$8 = new jl_NumberFormatException;
                    var$9 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$9);
                    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(27)), $s)));
                    $rt_throw(var$8);
                }
                $index = var$6;
            }
            if ($negative)
                $value =  -$value;
            return $value;
        }
        $s = new jl_NumberFormatException;
        jl_Throwable__init_($s, $rt_s(28));
        $rt_throw($s);
    }
    var$8 = new jl_NumberFormatException;
    $s = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($s);
    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append($s, $rt_s(29)), $radix)));
    $rt_throw(var$8);
}
function jl_Integer_parseInt0($s) {
    return jl_Integer_parseInt($s, 10);
}
function jl_Integer_valueOf($i) {
    var var$2;
    if ($i >= (-128) && $i <= 127) {
        a: {
            if (jl_Integer_integerCache === null) {
                jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
                var$2 = 0;
                while (true) {
                    if (var$2 >= jl_Integer_integerCache.data.length)
                        break a;
                    jl_Integer_integerCache.data[var$2] = jl_Integer__init_(var$2 - 128 | 0);
                    var$2 = var$2 + 1 | 0;
                }
            }
        }
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
}
function jl_Integer_intValue($this) {
    return $this.$value;
}
function jl_Integer_toString0($this) {
    return jl_Integer_toString($this.$value, 10);
}
function jl_Integer_hashCode($this) {
    return $this.$value >>> 4 ^ $this.$value << 28 ^ $this.$value << 8 ^ $this.$value >>> 24;
}
function jl_Integer_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value == $this.$value ? 1 : 0;
}
function jl_Integer_compareTo($this, $other) {
    return $rt_compare($this.$value, $other.$value);
}
function jl_Integer_numberOfLeadingZeros($i) {
    var $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 >>> 8;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i >>> 4;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 >>> 2;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i >>> 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_numberOfTrailingZeros($i) {
    var $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 << 8;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i << 4;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 << 2;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_rotateLeft($i, $distance) {
    var var$3;
    var$3 = $distance & 31;
    return $i << var$3 | $i >>> (32 - var$3 | 0);
}
function jl_Integer_compareTo0($this, var$1) {
    return jl_Integer_compareTo($this, var$1);
}
function jl_Integer__clinit_() {
    jl_Integer_TYPE = $rt_cls($rt_intcls());
}
function jl_IncompatibleClassChangeError() {
    jl_LinkageError.call(this);
}
function jl_IncompatibleClassChangeError__init_0() {
    var var_0 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_(var_0);
    return var_0;
}
function jl_IncompatibleClassChangeError__init_1(var_0) {
    var var_1 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_2(var_1, var_0);
    return var_1;
}
function jl_IncompatibleClassChangeError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_IncompatibleClassChangeError__init_2($this, $message) {
    jl_Throwable__init_($this, $message);
}
function jl_NoSuchFieldError() {
    jl_IncompatibleClassChangeError.call(this);
}
function jl_NoSuchFieldError__init_0() {
    var var_0 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_(var_0);
    return var_0;
}
function jl_NoSuchFieldError__init_1(var_0) {
    var var_1 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_2(var_1, var_0);
    return var_1;
}
function jl_NoSuchFieldError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_NoSuchFieldError__init_2($this, $message) {
    jl_IncompatibleClassChangeError__init_2($this, $message);
}
function jl_NoSuchMethodError() {
    jl_IncompatibleClassChangeError.call(this);
}
function jl_NoSuchMethodError__init_0() {
    var var_0 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_(var_0);
    return var_0;
}
function jl_NoSuchMethodError__init_1(var_0) {
    var var_1 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_2(var_1, var_0);
    return var_1;
}
function jl_NoSuchMethodError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_NoSuchMethodError__init_2($this, $message) {
    jl_IncompatibleClassChangeError__init_2($this, $message);
}
function jl_Exception() {
    jl_Throwable.call(this);
}
function jl_Exception__init_0() {
    var var_0 = new jl_Exception();
    jl_Exception__init_(var_0);
    return var_0;
}
function jl_Exception__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_RuntimeException() {
    jl_Exception.call(this);
}
function jl_RuntimeException__init_1() {
    var var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_0(var_0);
    return var_0;
}
function jl_RuntimeException__init_(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_2(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_0($this) {
    jl_Throwable__init_0($this);
}
function jl_RuntimeException__init_2($this, $message) {
    jl_Throwable__init_($this, $message);
}
function otj_JSObject() {
}
function otjde_EventTarget() {
}
function otjde_FocusEventTarget() {
}
function otjde_MouseEventTarget() {
}
function otjde_KeyboardEventTarget() {
}
function otjde_LoadEventTarget() {
}
function otjb_WindowEventTarget() {
}
function otjb_StorageProvider() {
}
function otjc_JSArrayReader() {
}
function otjb_Window() {
    jl_Object.call(this);
}
function otjb_Window_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_get$exported$2(var$0, var$1) {
    return var$0.$get1(var$1);
}
function otjb_Window_removeEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otjb_Window_dispatchEvent$exported$4(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
}
function otjb_Window_getLength$exported$5(var$0) {
    return var$0.$getLength();
}
function otjb_Window_addEventListener$exported$6(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function nlea_EaglerAdapterImpl2() {
    jl_Object.call(this);
}
var nlea_EaglerAdapterImpl2_isAnisotropicPatched = 0;
var nlea_EaglerAdapterImpl2_doc = null;
var nlea_EaglerAdapterImpl2_parent = null;
var nlea_EaglerAdapterImpl2_canvas = null;
var nlea_EaglerAdapterImpl2_canvasContext = null;
var nlea_EaglerAdapterImpl2_canvasBack = null;
var nlea_EaglerAdapterImpl2_webgl = null;
var nlea_EaglerAdapterImpl2_win = null;
var nlea_EaglerAdapterImpl2_loadedPackage = null;
var nlea_EaglerAdapterImpl2_contextmenu = null;
var nlea_EaglerAdapterImpl2_mousedown = null;
var nlea_EaglerAdapterImpl2_mouseup = null;
var nlea_EaglerAdapterImpl2_mousemove = null;
var nlea_EaglerAdapterImpl2_keydown = null;
var nlea_EaglerAdapterImpl2_keyup = null;
var nlea_EaglerAdapterImpl2_keypress = null;
var nlea_EaglerAdapterImpl2_wheel = null;
var nlea_EaglerAdapterImpl2_identifier = null;
var nlea_EaglerAdapterImpl2_mouseEvents = null;
var nlea_EaglerAdapterImpl2_keyEvents = null;
var nlea_EaglerAdapterImpl2_mouseX = 0;
var nlea_EaglerAdapterImpl2_mouseY = 0;
var nlea_EaglerAdapterImpl2_mouseDX = 0.0;
var nlea_EaglerAdapterImpl2_mouseDY = 0.0;
var nlea_EaglerAdapterImpl2_width = 0;
var nlea_EaglerAdapterImpl2_height = 0;
var nlea_EaglerAdapterImpl2_enableRepeatEvents = 0;
var nlea_EaglerAdapterImpl2_isWindowFocused = 0;
var nlea_EaglerAdapterImpl2_progId = 0;
var nlea_EaglerAdapterImpl2_viewportCache = null;
var nlea_EaglerAdapterImpl2_uploadBuffer = null;
var nlea_EaglerAdapterImpl2_mat2 = null;
var nlea_EaglerAdapterImpl2_mat3 = null;
var nlea_EaglerAdapterImpl2_mat4 = null;
var nlea_EaglerAdapterImpl2_currentProgram = 0;
var nlea_EaglerAdapterImpl2_imageLoadCanvas = null;
var nlea_EaglerAdapterImpl2_imageLoadContext = null;
var nlea_EaglerAdapterImpl2_currentEvent = null;
var nlea_EaglerAdapterImpl2_currentEventK = null;
var nlea_EaglerAdapterImpl2_buttonStates = null;
var nlea_EaglerAdapterImpl2_keyStates = null;
var nlea_EaglerAdapterImpl2_mouseUngrabTimer = Long_ZERO;
var nlea_EaglerAdapterImpl2_mouseUngrabTimeout = 0;
var nlea_EaglerAdapterImpl2_needsPointerLock = 0;
var nlea_EaglerAdapterImpl2_pointerLockFlag = 0;
var nlea_EaglerAdapterImpl2_dateFormatSS = null;
var nlea_EaglerAdapterImpl2_playbackId = 0;
var nlea_EaglerAdapterImpl2_loadedSoundFiles = null;
var nlea_EaglerAdapterImpl2_audioctx = null;
var nlea_EaglerAdapterImpl2_playbackOffsetDelay = 0.0;
var nlea_EaglerAdapterImpl2_activeSoundEffects = null;
var nlea_EaglerAdapterImpl2_connected = 0;
var nlea_EaglerAdapterImpl2_LWJGLKeyNames = null;
var nlea_EaglerAdapterImpl2_LWJGLKeyCodes = null;
var nlea_EaglerAdapterImpl2_appendbufferindex = 0;
var nlea_EaglerAdapterImpl2_appendbuffer = null;
var nlea_EaglerAdapterImpl2_unpressCTRL = 0;
function nlea_EaglerAdapterImpl2_$callClinit() {
    nlea_EaglerAdapterImpl2_$callClinit = $rt_eraseClinit(nlea_EaglerAdapterImpl2);
    nlea_EaglerAdapterImpl2__clinit_();
}
function nlea_EaglerAdapterImpl2__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2();
    nlea_EaglerAdapterImpl2__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2__init_($this) {
    nlea_EaglerAdapterImpl2_$callClinit();
}
function nlea_EaglerAdapterImpl2__wgetShaderHeader() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return $rt_s(30);
}
function nlea_EaglerAdapterImpl2_loadResourceBytes($path) {
    nlea_EaglerAdapterImpl2_$callClinit();
    if (jl_String_startsWith($path, $rt_s(14)))
        $path = jl_String_substring($path, 1);
    return ju_HashMap_get(nle_AssetRepository_filePool, $path);
}
function nlea_EaglerAdapterImpl2_fileContents($path) {
    var $contents;
    nlea_EaglerAdapterImpl2_$callClinit();
    $contents = nlea_EaglerAdapterImpl2_loadResourceBytes($path);
    if ($contents === null)
        return null;
    return jl_String__init_5($contents, jnc_Charset_forName($rt_s(31)));
}
function nlea_EaglerAdapterImpl2_downloadAssetPack(var$1) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            nlea_EaglerAdapterImpl2_downloadAssetPack0(var$1, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function nlea_EaglerAdapterImpl2_downloadAssetPack0($assetPackageURI, $cb) {
    var $request, var$4;
    nlea_EaglerAdapterImpl2_$callClinit();
    $request = new XMLHttpRequest();
    var$4 = "arraybuffer";
    $request.responseType = var$4;
    $request.open("GET", $rt_ustr($assetPackageURI), !!1);
    $assetPackageURI = new nlea_EaglerAdapterImpl2$1;
    $assetPackageURI.$val$request = $request;
    $assetPackageURI.$val$cb = $cb;
    $assetPackageURI = otji_JS_function($assetPackageURI, "stateChanged");
    $request.onreadystatechange = $assetPackageURI;
    $request.send();
}
function nlea_EaglerAdapterImpl2_initializeContext($rootElement, $assetPackageURI) {
    var $s, var$4, $e, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$e = $thread.pop();var$4 = $thread.pop();$s = $thread.pop();$assetPackageURI = $thread.pop();$rootElement = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nlea_EaglerAdapterImpl2_$callClinit();
        nlea_EaglerAdapterImpl2_parent = $rootElement;
        $s = $rt_str(nlea_EaglerAdapterImpl2_parent.getAttribute("style"));
        var$4 = nlea_EaglerAdapterImpl2_parent;
        $e = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($e);
        if ($s === null)
            $s = $rt_s(17);
        $s = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($e, $s), $rt_s(32)));
        var$4.setAttribute("style", $rt_ustr($s));
        nlea_EaglerAdapterImpl2_win = window;
        nlea_EaglerAdapterImpl2_doc = nlea_EaglerAdapterImpl2_win.document;
        nlea_EaglerAdapterImpl2_canvas = nlea_EaglerAdapterImpl2_doc.createElement("canvas");
        nlea_EaglerAdapterImpl2_width = $rootElement.clientWidth;
        nlea_EaglerAdapterImpl2_height = $rootElement.clientHeight;
        $e = nlea_EaglerAdapterImpl2_canvas;
        var$4 = nlea_EaglerAdapterImpl2_width;
        $e.width = var$4;
        $e = nlea_EaglerAdapterImpl2_canvas;
        var$4 = nlea_EaglerAdapterImpl2_height;
        $e.height = var$4;
        nlea_EaglerAdapterImpl2_canvasContext = nlea_EaglerAdapterImpl2_canvas.getContext("2d");
        nlea_EaglerAdapterImpl2_canvas.setAttribute("id", "deevis589723589");
        $e = nlea_EaglerAdapterImpl2_canvas;
        $rootElement.appendChild($e);
        nlea_EaglerAdapterImpl2_canvasBack = nlea_EaglerAdapterImpl2_doc.createElement("canvas");
        $rootElement = nlea_EaglerAdapterImpl2_canvasBack;
        $e = nlea_EaglerAdapterImpl2_width;
        $rootElement.width = $e;
        $rootElement = nlea_EaglerAdapterImpl2_canvasBack;
        $e = nlea_EaglerAdapterImpl2_height;
        $rootElement.height = $e;
        $rootElement = nlea_EaglerAdapterImpl2_canvasBack;
        var$4 = nlea_EaglerAdapterImpl2_youEagler$js_body$_27();
        nlea_EaglerAdapterImpl2_webgl = $rootElement.getContext("webgl2", var$4);
        if (nlea_EaglerAdapterImpl2_webgl === null) {
            $rootElement = new jl_RuntimeException;
            $assetPackageURI = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($assetPackageURI);
            jl_Throwable__init_($rootElement, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($assetPackageURI, $rt_s(33)), $rt_str(window.navigator.userAgent)), $rt_s(34))));
            $rt_throw($rootElement);
        }
        nlea_EaglerAdapterImpl2_setContextVar$js_body$_14(nlea_EaglerAdapterImpl2_webgl);
        nlea_EaglerAdapterImpl2_webgl.getExtension("EXT_texture_filter_anisotropic");
        $rootElement = nlea_EaglerAdapterImpl2_win;
        var$4 = new nlea_EaglerAdapterImpl2$2;
        nlea_EaglerAdapterImpl2_contextmenu = var$4;
        $rootElement.addEventListener("contextmenu", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_canvas;
        var$4 = new nlea_EaglerAdapterImpl2$3;
        nlea_EaglerAdapterImpl2_mousedown = var$4;
        $rootElement.addEventListener("mousedown", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_canvas;
        var$4 = new nlea_EaglerAdapterImpl2$4;
        nlea_EaglerAdapterImpl2_mouseup = var$4;
        $rootElement.addEventListener("mouseup", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_canvas;
        var$4 = new nlea_EaglerAdapterImpl2$5;
        nlea_EaglerAdapterImpl2_mousemove = var$4;
        $rootElement.addEventListener("mousemove", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_win;
        var$4 = new nlea_EaglerAdapterImpl2$6;
        nlea_EaglerAdapterImpl2_keydown = var$4;
        $rootElement.addEventListener("keydown", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_win;
        var$4 = new nlea_EaglerAdapterImpl2$7;
        nlea_EaglerAdapterImpl2_keyup = var$4;
        $rootElement.addEventListener("keyup", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_win;
        var$4 = new nlea_EaglerAdapterImpl2$8;
        nlea_EaglerAdapterImpl2_keypress = var$4;
        $rootElement.addEventListener("keypress", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_canvas;
        var$4 = new nlea_EaglerAdapterImpl2$9;
        nlea_EaglerAdapterImpl2_wheel = var$4;
        $rootElement.addEventListener("wheel", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_win;
        var$4 = new nlea_EaglerAdapterImpl2$10;
        $rootElement.addEventListener("blur", otji_JS_function(var$4, "handleEvent"));
        $rootElement = nlea_EaglerAdapterImpl2_win;
        var$4 = new nlea_EaglerAdapterImpl2$11;
        $rootElement.addEventListener("focus", otji_JS_function(var$4, "handleEvent"));
        nlea_EaglerAdapterImpl2_onBeforeCloseRegister$js_body$_10();
        nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24();
        $ptr = 1;
    case 1:
        nlea_EaglerAdapterImpl2_downloadAssetPack($assetPackageURI);
        if ($rt_suspending()) {
            break main;
        }
        a: {
            try {
                nle_AssetRepository_install(nlea_EaglerAdapterImpl2_loadedPackage);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $e = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($e);
        }
        nlea_EaglerAdapterImpl2_audioctx = otjw_AudioContext_create$js_body$_44();
        ju_LinkedList_clear(nlea_EaglerAdapterImpl2_mouseEvents);
        ju_LinkedList_clear(nlea_EaglerAdapterImpl2_keyEvents);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($rootElement, $assetPackageURI, $s, var$4, $e, $ptr);
}
function nlea_EaglerAdapterImpl2__wglEnable($p1) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.enable($p1);
}
function nlea_EaglerAdapterImpl2__wglDisable($p1) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.disable($p1);
}
function nlea_EaglerAdapterImpl2__wglCreateProgram() {
    var var$1, var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$1 = new nlea_EaglerAdapterImpl2$ProgramGL;
    var$1.$obj = nlea_EaglerAdapterImpl2_webgl.createProgram();
    var$2 = nlea_EaglerAdapterImpl2_progId + 1 | 0;
    nlea_EaglerAdapterImpl2_progId = var$2;
    var$1.$hashcode = var$2;
    return var$1;
}
function nlea_EaglerAdapterImpl2__wglCreateShader($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = new nlea_EaglerAdapterImpl2$ShaderGL;
    var$2.$obj0 = nlea_EaglerAdapterImpl2_webgl.createShader($p1);
    return var$2;
}
function nlea_EaglerAdapterImpl2__wglAttachShader($p1, $p2) {
    var var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$3 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    $p2 = $p2.$obj0;
    var$3.attachShader($p1, $p2);
}
function nlea_EaglerAdapterImpl2__wglDetachShader($p1, $p2) {
    var var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$3 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    $p2 = $p2.$obj0;
    var$3.detachShader($p1, $p2);
}
function nlea_EaglerAdapterImpl2__wglCompileShader($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj0;
    var$2.compileShader($p1);
}
function nlea_EaglerAdapterImpl2__wglLinkProgram($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    var$2.linkProgram($p1);
}
function nlea_EaglerAdapterImpl2__wglShaderSource($p1, $p2) {
    var var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$3 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj0;
    var$3.shaderSource($p1, $rt_ustr($p2));
}
function nlea_EaglerAdapterImpl2__wglGetShaderInfoLog($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj0;
    return $rt_str(var$2.getShaderInfoLog($p1));
}
function nlea_EaglerAdapterImpl2__wglGetProgramInfoLog($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    return $rt_str(var$2.getProgramInfoLog($p1));
}
function nlea_EaglerAdapterImpl2__wglGetShaderCompiled($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj0;
    return var$2.getShaderParameter($p1, 35713) != 1 ? 0 : 1;
}
function nlea_EaglerAdapterImpl2__wglGetProgramLinked($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    return var$2.getProgramParameter($p1, 35714) != 1 ? 0 : 1;
}
function nlea_EaglerAdapterImpl2__wglDeleteShader($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj0;
    var$2.deleteShader($p1);
}
function nlea_EaglerAdapterImpl2__wglCreateBuffer() {
    var var$1;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$1 = new nlea_EaglerAdapterImpl2$BufferGL;
    var$1.$obj1 = nlea_EaglerAdapterImpl2_webgl.createBuffer();
    return var$1;
}
function nlea_EaglerAdapterImpl2__wglBindBuffer($p1, $p2) {
    var var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$3 = nlea_EaglerAdapterImpl2_webgl;
    $p2 = $p2 !== null ? $p2.$obj1 : null;
    var$3.bindBuffer($p1, $p2);
}
function nlea_EaglerAdapterImpl2__wglBufferData($p1, $p2, $p3) {
    var var$4;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$4 = nlea_EaglerAdapterImpl2_webgl;
    $p2 = $p2;
    var$4.bufferData($p1, $p2, $p3);
}
function nlea_EaglerAdapterImpl2__wglEnableVertexAttribArray($p1) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.enableVertexAttribArray($p1);
}
function nlea_EaglerAdapterImpl2__wglGetUniformLocation($p1, $p2) {
    var $u;
    nlea_EaglerAdapterImpl2_$callClinit();
    $u = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    $u = $u.getUniformLocation($p1, $rt_ustr($p2));
    if ($u === null)
        $p1 = null;
    else {
        $p1 = new nlea_EaglerAdapterImpl2$UniformGL;
        $p1.$obj2 = $u;
    }
    return $p1;
}
function nlea_EaglerAdapterImpl2__wglBindAttributeLocation($p1, $p2, $p3) {
    var var$4;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$4 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1.$obj;
    var$4.bindAttribLocation($p1, $p2, $rt_ustr($p3));
}
function nlea_EaglerAdapterImpl2__wglUniform1f($p1, $p2) {
    var var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    if ($p1 !== null) {
        var$3 = nlea_EaglerAdapterImpl2_webgl;
        $p1 = $p1.$obj2;
        var$3.uniform1f($p1, $p2);
    }
}
function nlea_EaglerAdapterImpl2__wglUniform3f($p1, $p2, $p3, $p4) {
    var var$5;
    nlea_EaglerAdapterImpl2_$callClinit();
    if ($p1 !== null) {
        var$5 = nlea_EaglerAdapterImpl2_webgl;
        $p1 = $p1.$obj2;
        var$5.uniform3f($p1, $p2, $p3, $p4);
    }
}
function nlea_EaglerAdapterImpl2__wglUniform4f($p1, $p2, $p3, $p4, $p5) {
    var var$6, var$7;
    nlea_EaglerAdapterImpl2_$callClinit();
    if ($p1 !== null) {
        var$6 = nlea_EaglerAdapterImpl2_webgl;
        var$7 = $p1.$obj2;
        var$6.uniform4f(var$7, $p2, $p3, $p4, $p5);
    }
}
function nlea_EaglerAdapterImpl2__wglUniform1i($p1, $p2) {
    var var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    if ($p1 !== null) {
        var$3 = nlea_EaglerAdapterImpl2_webgl;
        $p1 = $p1.$obj2;
        var$3.uniform1i($p1, $p2);
    }
}
function nlea_EaglerAdapterImpl2__wglUniformMat4fv($p1, $mat) {
    var var$3, var$4;
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_mat4.set($mat.data);
    if ($p1 !== null) {
        var$3 = nlea_EaglerAdapterImpl2_webgl;
        var$4 = $p1.$obj2;
        $p1 = nlea_EaglerAdapterImpl2_mat4;
        var$3.uniformMatrix4fv(var$4, !!0, $p1);
    }
}
function nlea_EaglerAdapterImpl2__wglUseProgram($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    if ($p1 !== null && nlea_EaglerAdapterImpl2_currentProgram != $p1.$hashcode) {
        nlea_EaglerAdapterImpl2_currentProgram = $p1.$hashcode;
        var$2 = nlea_EaglerAdapterImpl2_webgl;
        $p1 = $p1.$obj;
        var$2.useProgram($p1);
    }
}
function nlea_EaglerAdapterImpl2__wglVertexAttribPointer($p1, $p2, $p3, $p4, $p5, $p6) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.vertexAttribPointer($p1, $p2, $p3, !!$p4, $p5, $p6);
}
function nlea_EaglerAdapterImpl2__wglCreateVertexArray() {
    var var$1;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$1 = new nlea_EaglerAdapterImpl2$BufferArrayGL;
    var$1.$obj3 = nlea_EaglerAdapterImpl2_webgl.createVertexArray();
    var$1.$isQuadBufferBound = 0;
    return var$1;
}
function nlea_EaglerAdapterImpl2__wglBindVertexArray($p1) {
    var var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_webgl;
    $p1 = $p1 !== null ? $p1.$obj3 : null;
    var$2.bindVertexArray($p1);
}
function nlea_EaglerAdapterImpl2_loadPNG($data) {
    var $arr, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$arr = $thread.pop();$data = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nlea_EaglerAdapterImpl2_$callClinit();
        $arr = new ArrayBuffer($data.data.length);
        (new Uint8Array($arr)).set($data.data);
        $ptr = 1;
    case 1:
        $tmp = nlea_EaglerAdapterImpl2_loadPNG0($arr);
        if ($rt_suspending()) {
            break main;
        }
        $arr = $tmp;
        return $arr;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($data, $arr, $ptr);
}
function nlea_EaglerAdapterImpl2_loadPNG0(var$1) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            nlea_EaglerAdapterImpl2_loadPNG00(var$1, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function nlea_EaglerAdapterImpl2_loadPNG00($data, $ret) {
    var $toLoad, $src, var$5;
    nlea_EaglerAdapterImpl2_$callClinit();
    $toLoad = nlea_EaglerAdapterImpl2_doc.createElement("img");
    $src = new nlea_EaglerAdapterImpl2$12;
    $src.$val$toLoad = $toLoad;
    $src.$val$ret = $ret;
    $toLoad.addEventListener("load", otji_JS_function($src, "handleEvent"));
    var$5 = new nlea_EaglerAdapterImpl2$13;
    var$5.$val$toLoad0 = $toLoad;
    var$5.$val$ret0 = $ret;
    $toLoad.addEventListener("error", otji_JS_function(var$5, "handleEvent"));
    $src = $rt_str(nlea_EaglerAdapterImpl2_getDataURL$js_body$_121($data, "image/png"));
    if ($src === null)
        otpp_AsyncCallbackWrapper_complete($ret, null);
    else {
        $data = $rt_ustr($src);
        $toLoad.src = $data;
    }
}
function nlea_EaglerAdapterImpl2_getEventKey() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_currentEventK === null ? (-1) : nlea_EaglerAdapterImpl2_remapKey(nlea_EaglerAdapterImpl2_currentEventK.which);
}
function nlea_EaglerAdapterImpl2_getEventKeyState() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_currentEventK === null ? 0 : jl_String_equals($rt_str(nlea_EaglerAdapterImpl2_currentEventK.type), $rt_s(35)) ? 0 : 1;
}
function nlea_EaglerAdapterImpl2_isKeyDown($p1) {
    nlea_EaglerAdapterImpl2_$callClinit();
    if (nlea_EaglerAdapterImpl2_unpressCTRL) {
        nlea_EaglerAdapterImpl2_keyStates.data[28] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[29] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[157] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[219] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[220] = 0;
    }
    return nlea_EaglerAdapterImpl2_keyStates.data[$p1];
}
function nlea_EaglerAdapterImpl2_updateDisplay() {
    var var$1, var$2, var$3, var$4, $ww, $hh, var$7, var$8, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$hh = $thread.pop();$ww = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();var$1 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nlea_EaglerAdapterImpl2_$callClinit();
        nlea_EaglerAdapterImpl2_commitContext$js_body$_153(nlea_EaglerAdapterImpl2_webgl);
        var$1 = nlea_EaglerAdapterImpl2_canvasContext;
        var$2 = nlea_EaglerAdapterImpl2_canvasBack;
        var$3 = nlea_EaglerAdapterImpl2_canvas.width;
        var$4 = nlea_EaglerAdapterImpl2_canvas.height;
        var$1.drawImage(var$2, 0.0, 0.0, var$3, var$4);
        $ww = nlea_EaglerAdapterImpl2_canvas.clientWidth;
        $hh = nlea_EaglerAdapterImpl2_canvas.clientHeight;
        if (!($ww == nlea_EaglerAdapterImpl2_width && $hh == nlea_EaglerAdapterImpl2_height)) {
            nlea_EaglerAdapterImpl2_width = $ww;
            nlea_EaglerAdapterImpl2_height = $hh;
            var$2 = nlea_EaglerAdapterImpl2_canvasBack;
            var$7 = $ww;
            var$2.width = var$7;
            var$2 = nlea_EaglerAdapterImpl2_canvasBack;
            var$7 = $hh;
            var$2.height = var$7;
        }
        try {
            var$8 = Long_fromInt(1);
            $ptr = 1;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_InterruptedException) {
            } else {
                throw $$e;
            }
        }
        return;
    case 1:
        a: {
            try {
                jl_Thread_sleep(var$8);
                if ($rt_suspending()) {
                    break main;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_InterruptedException) {
                } else {
                    throw $$e;
                }
            }
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$1, var$2, var$3, var$4, $ww, $hh, var$7, var$8, $ptr);
}
function nlea_EaglerAdapterImpl2_enableRepeatEvents0($b) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_enableRepeatEvents = $b;
}
function nlea_EaglerAdapterImpl2_isFocused() {
    var $yee, $dee;
    nlea_EaglerAdapterImpl2_$callClinit();
    $yee = document.pointerLockElement != null ? 1 : 0;
    $dee = nlea_EaglerAdapterImpl2_pointerLockFlag;
    nlea_EaglerAdapterImpl2_pointerLockFlag = $yee;
    if (!$dee && $yee) {
        nlea_EaglerAdapterImpl2_mouseDX = 0.0;
        nlea_EaglerAdapterImpl2_mouseDY = 0.0;
    }
    a: {
        b: {
            if (nlea_EaglerAdapterImpl2_isWindowFocused) {
                if (!$dee)
                    break b;
                if ($yee)
                    break b;
            }
            $dee = 0;
            break a;
        }
        $dee = 1;
    }
    return $dee;
}
function nlea_EaglerAdapterImpl2_getCanvasWidth() {
    var $w, var$2, var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    $w = nlea_EaglerAdapterImpl2_parent.clientWidth;
    if ($w != nlea_EaglerAdapterImpl2_width) {
        var$2 = nlea_EaglerAdapterImpl2_canvas;
        var$3 = $w;
        var$2.width = var$3;
        var$2 = nlea_EaglerAdapterImpl2_canvasBack;
        var$3 = $w;
        var$2.width = var$3;
        nlea_EaglerAdapterImpl2_width = $w;
    }
    return $w;
}
function nlea_EaglerAdapterImpl2_getCanvasHeight() {
    var $h, var$2, var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    $h = nlea_EaglerAdapterImpl2_parent.clientHeight;
    if ($h != nlea_EaglerAdapterImpl2_height) {
        var$2 = nlea_EaglerAdapterImpl2_canvas;
        var$3 = $h;
        var$2.height = var$3;
        var$2 = nlea_EaglerAdapterImpl2_canvasBack;
        var$3 = $h;
        var$2.height = var$3;
        nlea_EaglerAdapterImpl2_height = $h;
    }
    return $h;
}
function nlea_EaglerAdapterImpl2_loadLocalStorage($key) {
    var var$2, $s;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$2 = nlea_EaglerAdapterImpl2_win.localStorage;
    $s = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($s);
    $s = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($s, $rt_s(36)), $key));
    $s = $rt_str(var$2.getItem($rt_ustr($s)));
    if ($s === null)
        return null;
    return nle_BaseNCodec_decode(nle_Base64__init_0(), $s);
}
function nlea_EaglerAdapterImpl2_saveLocalStorage($key, $data) {
    var var$3, var$4, var$5, var$6;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$3 = nlea_EaglerAdapterImpl2_win.localStorage;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    var$5 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(36)), $key));
    $key = new jl_String;
    if ($data !== null && $data.data.length) {
        var$4 = nle_Base64__init_1(0, nle_BaseNCodec_CHUNK_SEPARATOR, 0);
        var$6 = nle_BaseNCodec_getEncodedLength(var$4, $data);
        if (Long_gt(var$6, Long_fromInt(2147483647))) {
            $key = new jl_IllegalArgumentException;
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_Throwable__init_($key, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(var$4, $rt_s(37)), var$6), $rt_s(38)), 2147483647)));
            $rt_throw($key);
        }
        $data = nle_BaseNCodec_encode(var$4, $data);
    }
    jl_String__init_6($key, $data, jnc_Charset_forName($rt_s(31)));
    var$3.setItem($rt_ustr(var$5), $rt_ustr($key));
}
function nlea_EaglerAdapterImpl2_maxMemory() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return Long_fromInt(1073741824);
}
function nlea_EaglerAdapterImpl2_totalMemory() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return Long_fromInt(1073741824);
}
function nlea_EaglerAdapterImpl2_freeMemory() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return Long_ZERO;
}
function nlea_EaglerAdapterImpl2__wArrayByteLength($obj) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return $obj.byteLength;
}
function nlea_EaglerAdapterImpl2_remapKey($k) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return $k <= nlea_EaglerAdapterImpl2_LWJGLKeyCodes.data.length && $k >= 0 ? nlea_EaglerAdapterImpl2_LWJGLKeyCodes.data[$k] : (-1);
}
function nlea_EaglerAdapterImpl2_writeFile($path, $data) {
    nlea_EaglerAdapterImpl2_$callClinit();
}
function nlea_EaglerAdapterImpl2_readFile($path) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return null;
}
function nlea_EaglerAdapterImpl2_getFileSize($path) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return 0;
}
function nlea_EaglerAdapterImpl2_renameFile($oldPath, $newPath) {
    nlea_EaglerAdapterImpl2_$callClinit();
}
function nlea_EaglerAdapterImpl2_deleteFile($path) {
    nlea_EaglerAdapterImpl2_$callClinit();
}
function nlea_EaglerAdapterImpl2_access$000() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_loadedPackage;
}
function nlea_EaglerAdapterImpl2_access$100() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_buttonStates;
}
function nlea_EaglerAdapterImpl2_access$200() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_mouseEvents;
}
function nlea_EaglerAdapterImpl2_access$300() {
    nlea_EaglerAdapterImpl2_$callClinit();
    if (Long_gt(Long_sub(jl_System_currentTimeMillis(), nlea_EaglerAdapterImpl2_mouseUngrabTimer), Long_fromInt(3000)) && nlea_EaglerAdapterImpl2_needsPointerLock && !(document.pointerLockElement != null ? 1 : 0)) {
        nlea_EaglerAdapterImpl2_canvas.requestPointerLock();
        if (document.pointerLockElement != null ? 1 : 0)
            nlea_EaglerAdapterImpl2_needsPointerLock = 0;
    }
}
function nlea_EaglerAdapterImpl2_access$1000() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_keyStates;
}
function nlea_EaglerAdapterImpl2_access$1100($x0) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return $x0.which;
}
function nlea_EaglerAdapterImpl2_access$1200($x0) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_remapKey($x0);
}
function nlea_EaglerAdapterImpl2_access$1300() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_keyEvents;
}
function nlea_EaglerAdapterImpl2_access$1502($x0) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_isWindowFocused = $x0;
    return $x0;
}
function nlea_EaglerAdapterImpl2_access$1700() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_imageLoadCanvas;
}
function nlea_EaglerAdapterImpl2_access$1800() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_imageLoadContext;
}
function nlea_EaglerAdapterImpl2_access$1900($x0) {
    nlea_EaglerAdapterImpl2_$callClinit();
    URL.revokeObjectURL($rt_ustr($x0));
}
function nlea_EaglerAdapterImpl2_access$2000() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_mouseUngrabTimeout;
}
function nlea_EaglerAdapterImpl2_access$2002($x0) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_mouseUngrabTimeout = $x0;
    return $x0;
}
function nlea_EaglerAdapterImpl2_access$2100() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_mouseUngrabTimer;
}
function nlea_EaglerAdapterImpl2__clinit_() {
    var var$1, var$2;
    nlea_EaglerAdapterImpl2_isAnisotropicPatched = 0;
    nlea_EaglerAdapterImpl2_doc = null;
    nlea_EaglerAdapterImpl2_parent = null;
    nlea_EaglerAdapterImpl2_canvas = null;
    nlea_EaglerAdapterImpl2_canvasContext = null;
    nlea_EaglerAdapterImpl2_canvasBack = null;
    nlea_EaglerAdapterImpl2_webgl = null;
    nlea_EaglerAdapterImpl2_win = null;
    nlea_EaglerAdapterImpl2_loadedPackage = null;
    nlea_EaglerAdapterImpl2_contextmenu = null;
    nlea_EaglerAdapterImpl2_mousedown = null;
    nlea_EaglerAdapterImpl2_mouseup = null;
    nlea_EaglerAdapterImpl2_mousemove = null;
    nlea_EaglerAdapterImpl2_keydown = null;
    nlea_EaglerAdapterImpl2_keyup = null;
    nlea_EaglerAdapterImpl2_keypress = null;
    nlea_EaglerAdapterImpl2_wheel = null;
    nlea_EaglerAdapterImpl2_identifier = $rt_createArray(jl_String, 0);
    nlea_EaglerAdapterImpl2_mouseEvents = ju_LinkedList__init_0();
    nlea_EaglerAdapterImpl2_keyEvents = ju_LinkedList__init_0();
    nlea_EaglerAdapterImpl2_mouseX = 0;
    nlea_EaglerAdapterImpl2_mouseY = 0;
    nlea_EaglerAdapterImpl2_mouseDX = 0.0;
    nlea_EaglerAdapterImpl2_mouseDY = 0.0;
    nlea_EaglerAdapterImpl2_width = 0;
    nlea_EaglerAdapterImpl2_height = 0;
    nlea_EaglerAdapterImpl2_enableRepeatEvents = 0;
    nlea_EaglerAdapterImpl2_isWindowFocused = 1;
    nlea_EaglerAdapterImpl2_progId = 0;
    nlea_EaglerAdapterImpl2_viewportCache = $rt_createIntArray(4);
    nlea_EaglerAdapterImpl2_uploadBuffer = new Uint8Array(new ArrayBuffer(4194304));
    nlea_EaglerAdapterImpl2_mat2 = new Float32Array(4);
    nlea_EaglerAdapterImpl2_mat3 = new Float32Array(9);
    nlea_EaglerAdapterImpl2_mat4 = new Float32Array(16);
    nlea_EaglerAdapterImpl2_currentProgram = (-1);
    nlea_EaglerAdapterImpl2_imageLoadCanvas = null;
    nlea_EaglerAdapterImpl2_imageLoadContext = null;
    nlea_EaglerAdapterImpl2_currentEvent = null;
    nlea_EaglerAdapterImpl2_currentEventK = null;
    nlea_EaglerAdapterImpl2_buttonStates = $rt_createBooleanArray(8);
    nlea_EaglerAdapterImpl2_keyStates = $rt_createBooleanArray(256);
    nlea_EaglerAdapterImpl2_mouseUngrabTimer = Long_ZERO;
    nlea_EaglerAdapterImpl2_mouseUngrabTimeout = 0;
    nlea_EaglerAdapterImpl2_needsPointerLock = 0;
    nlea_EaglerAdapterImpl2_pointerLockFlag = 0;
    nlea_EaglerAdapterImpl2_dateFormatSS = jt_SimpleDateFormat__init_0($rt_s(39));
    nlea_EaglerAdapterImpl2_playbackId = 0;
    nlea_EaglerAdapterImpl2_loadedSoundFiles = ju_HashMap__init_0();
    nlea_EaglerAdapterImpl2_audioctx = null;
    nlea_EaglerAdapterImpl2_playbackOffsetDelay = 0.029999999329447746;
    nlea_EaglerAdapterImpl2_activeSoundEffects = ju_HashMap__init_0();
    nlea_EaglerAdapterImpl2_connected = 0;
    var$1 = $rt_createArray(jl_String, 256);
    var$2 = var$1.data;
    var$2[0] = $rt_s(40);
    var$2[1] = $rt_s(41);
    var$2[2] = $rt_s(42);
    var$2[3] = $rt_s(43);
    var$2[4] = $rt_s(44);
    var$2[5] = $rt_s(45);
    var$2[6] = $rt_s(46);
    var$2[7] = $rt_s(47);
    var$2[8] = $rt_s(48);
    var$2[9] = $rt_s(49);
    var$2[10] = $rt_s(50);
    var$2[11] = $rt_s(2);
    var$2[12] = $rt_s(51);
    var$2[13] = $rt_s(52);
    var$2[14] = $rt_s(53);
    var$2[15] = $rt_s(54);
    var$2[16] = $rt_s(55);
    var$2[17] = $rt_s(56);
    var$2[18] = $rt_s(57);
    var$2[19] = $rt_s(58);
    var$2[20] = $rt_s(59);
    var$2[21] = $rt_s(60);
    var$2[22] = $rt_s(61);
    var$2[23] = $rt_s(62);
    var$2[24] = $rt_s(63);
    var$2[25] = $rt_s(64);
    var$2[26] = $rt_s(65);
    var$2[27] = $rt_s(66);
    var$2[28] = $rt_s(67);
    var$2[29] = $rt_s(68);
    var$2[30] = $rt_s(69);
    var$2[31] = $rt_s(70);
    var$2[32] = $rt_s(71);
    var$2[33] = $rt_s(72);
    var$2[34] = $rt_s(73);
    var$2[35] = $rt_s(74);
    var$2[36] = $rt_s(75);
    var$2[37] = $rt_s(76);
    var$2[38] = $rt_s(77);
    var$2[39] = $rt_s(78);
    var$2[40] = $rt_s(79);
    var$2[41] = $rt_s(80);
    var$2[42] = $rt_s(81);
    var$2[43] = $rt_s(82);
    var$2[44] = $rt_s(83);
    var$2[45] = $rt_s(84);
    var$2[46] = $rt_s(85);
    var$2[47] = $rt_s(86);
    var$2[48] = $rt_s(87);
    var$2[49] = $rt_s(88);
    var$2[50] = $rt_s(89);
    var$2[51] = $rt_s(90);
    var$2[52] = $rt_s(91);
    var$2[53] = $rt_s(92);
    var$2[54] = $rt_s(93);
    var$2[55] = $rt_s(94);
    var$2[56] = $rt_s(95);
    var$2[57] = $rt_s(96);
    var$2[58] = $rt_s(97);
    var$2[59] = $rt_s(98);
    var$2[60] = $rt_s(99);
    var$2[61] = $rt_s(100);
    var$2[62] = $rt_s(101);
    var$2[63] = $rt_s(102);
    var$2[64] = $rt_s(103);
    var$2[65] = $rt_s(104);
    var$2[66] = $rt_s(105);
    var$2[67] = $rt_s(106);
    var$2[68] = $rt_s(107);
    var$2[69] = $rt_s(108);
    var$2[70] = $rt_s(109);
    var$2[71] = $rt_s(110);
    var$2[72] = $rt_s(111);
    var$2[73] = $rt_s(112);
    var$2[74] = $rt_s(113);
    var$2[75] = $rt_s(114);
    var$2[76] = $rt_s(115);
    var$2[77] = $rt_s(116);
    var$2[78] = $rt_s(117);
    var$2[79] = $rt_s(118);
    var$2[80] = $rt_s(119);
    var$2[81] = $rt_s(120);
    var$2[82] = $rt_s(121);
    var$2[83] = $rt_s(122);
    var$2[84] = $rt_s(15);
    var$2[85] = $rt_s(15);
    var$2[86] = $rt_s(15);
    var$2[87] = $rt_s(123);
    var$2[88] = $rt_s(124);
    var$2[89] = $rt_s(15);
    var$2[90] = $rt_s(15);
    var$2[91] = $rt_s(15);
    var$2[92] = $rt_s(15);
    var$2[93] = $rt_s(15);
    var$2[94] = $rt_s(15);
    var$2[95] = $rt_s(15);
    var$2[96] = $rt_s(15);
    var$2[97] = $rt_s(15);
    var$2[98] = $rt_s(15);
    var$2[99] = $rt_s(15);
    var$2[100] = $rt_s(125);
    var$2[101] = $rt_s(126);
    var$2[102] = $rt_s(127);
    var$2[103] = $rt_s(128);
    var$2[104] = $rt_s(129);
    var$2[105] = $rt_s(130);
    var$2[106] = $rt_s(15);
    var$2[107] = $rt_s(15);
    var$2[108] = $rt_s(15);
    var$2[109] = $rt_s(15);
    var$2[110] = $rt_s(15);
    var$2[111] = $rt_s(15);
    var$2[112] = $rt_s(131);
    var$2[113] = $rt_s(132);
    var$2[114] = $rt_s(15);
    var$2[115] = $rt_s(15);
    var$2[116] = $rt_s(15);
    var$2[117] = $rt_s(15);
    var$2[118] = $rt_s(15);
    var$2[119] = $rt_s(15);
    var$2[120] = $rt_s(15);
    var$2[121] = $rt_s(133);
    var$2[122] = $rt_s(15);
    var$2[123] = $rt_s(134);
    var$2[124] = $rt_s(15);
    var$2[125] = $rt_s(135);
    var$2[126] = $rt_s(15);
    var$2[127] = $rt_s(15);
    var$2[128] = $rt_s(15);
    var$2[129] = $rt_s(15);
    var$2[130] = $rt_s(15);
    var$2[131] = $rt_s(15);
    var$2[132] = $rt_s(15);
    var$2[133] = $rt_s(15);
    var$2[134] = $rt_s(15);
    var$2[135] = $rt_s(15);
    var$2[136] = $rt_s(15);
    var$2[137] = $rt_s(15);
    var$2[138] = $rt_s(15);
    var$2[139] = $rt_s(15);
    var$2[140] = $rt_s(15);
    var$2[141] = $rt_s(136);
    var$2[142] = $rt_s(15);
    var$2[143] = $rt_s(15);
    var$2[144] = $rt_s(137);
    var$2[145] = $rt_s(138);
    var$2[146] = $rt_s(139);
    var$2[147] = $rt_s(140);
    var$2[148] = $rt_s(141);
    var$2[149] = $rt_s(142);
    var$2[150] = $rt_s(143);
    var$2[151] = $rt_s(144);
    var$2[152] = $rt_s(15);
    var$2[153] = $rt_s(15);
    var$2[154] = $rt_s(15);
    var$2[155] = $rt_s(15);
    var$2[156] = $rt_s(145);
    var$2[157] = $rt_s(146);
    var$2[158] = $rt_s(15);
    var$2[159] = $rt_s(15);
    var$2[160] = $rt_s(15);
    var$2[161] = $rt_s(15);
    var$2[162] = $rt_s(15);
    var$2[163] = $rt_s(15);
    var$2[164] = $rt_s(15);
    var$2[165] = $rt_s(15);
    var$2[166] = $rt_s(15);
    var$2[167] = $rt_s(147);
    var$2[168] = $rt_s(15);
    var$2[169] = $rt_s(15);
    var$2[170] = $rt_s(15);
    var$2[171] = $rt_s(15);
    var$2[172] = $rt_s(15);
    var$2[173] = $rt_s(15);
    var$2[174] = $rt_s(15);
    var$2[175] = $rt_s(15);
    var$2[176] = $rt_s(15);
    var$2[177] = $rt_s(15);
    var$2[178] = $rt_s(15);
    var$2[179] = $rt_s(148);
    var$2[180] = $rt_s(15);
    var$2[181] = $rt_s(149);
    var$2[182] = $rt_s(15);
    var$2[183] = $rt_s(150);
    var$2[184] = $rt_s(151);
    var$2[185] = $rt_s(15);
    var$2[186] = $rt_s(15);
    var$2[187] = $rt_s(15);
    var$2[188] = $rt_s(15);
    var$2[189] = $rt_s(15);
    var$2[190] = $rt_s(15);
    var$2[191] = $rt_s(15);
    var$2[192] = $rt_s(15);
    var$2[193] = $rt_s(15);
    var$2[194] = $rt_s(15);
    var$2[195] = $rt_s(15);
    var$2[196] = $rt_s(152);
    var$2[197] = $rt_s(153);
    var$2[198] = $rt_s(15);
    var$2[199] = $rt_s(154);
    var$2[200] = $rt_s(155);
    var$2[201] = $rt_s(156);
    var$2[202] = $rt_s(15);
    var$2[203] = $rt_s(157);
    var$2[204] = $rt_s(15);
    var$2[205] = $rt_s(158);
    var$2[206] = $rt_s(15);
    var$2[207] = $rt_s(159);
    var$2[208] = $rt_s(160);
    var$2[209] = $rt_s(161);
    var$2[210] = $rt_s(162);
    var$2[211] = $rt_s(163);
    var$2[212] = $rt_s(15);
    var$2[213] = $rt_s(15);
    var$2[214] = $rt_s(15);
    var$2[215] = $rt_s(15);
    var$2[216] = $rt_s(15);
    var$2[217] = $rt_s(15);
    var$2[218] = $rt_s(164);
    var$2[219] = $rt_s(165);
    var$2[220] = $rt_s(166);
    var$2[221] = $rt_s(167);
    var$2[222] = $rt_s(168);
    var$2[223] = $rt_s(169);
    var$2[224] = $rt_s(15);
    var$2[225] = $rt_s(15);
    var$2[226] = $rt_s(15);
    var$2[227] = $rt_s(15);
    var$2[228] = $rt_s(15);
    var$2[229] = $rt_s(15);
    var$2[230] = $rt_s(15);
    var$2[231] = $rt_s(15);
    var$2[232] = $rt_s(15);
    var$2[233] = $rt_s(15);
    var$2[234] = $rt_s(15);
    var$2[235] = $rt_s(15);
    var$2[236] = $rt_s(15);
    var$2[237] = $rt_s(15);
    var$2[238] = $rt_s(15);
    var$2[239] = $rt_s(15);
    var$2[240] = $rt_s(15);
    var$2[241] = $rt_s(15);
    var$2[242] = $rt_s(15);
    var$2[243] = $rt_s(15);
    var$2[244] = $rt_s(15);
    var$2[245] = $rt_s(15);
    var$2[246] = $rt_s(15);
    var$2[247] = $rt_s(15);
    var$2[248] = $rt_s(15);
    var$2[249] = $rt_s(15);
    var$2[250] = $rt_s(15);
    var$2[251] = $rt_s(15);
    var$2[252] = $rt_s(15);
    var$2[253] = $rt_s(15);
    var$2[254] = $rt_s(15);
    var$2[255] = $rt_s(15);
    nlea_EaglerAdapterImpl2_LWJGLKeyNames = var$1;
    var$1 = $rt_createIntArray(224);
    var$2 = var$1.data;
    var$2[0] = (-1);
    var$2[1] = (-1);
    var$2[2] = (-1);
    var$2[3] = (-1);
    var$2[4] = (-1);
    var$2[5] = (-1);
    var$2[6] = (-1);
    var$2[7] = (-1);
    var$2[8] = 14;
    var$2[9] = 15;
    var$2[10] = (-1);
    var$2[11] = (-1);
    var$2[12] = (-1);
    var$2[13] = 28;
    var$2[14] = (-1);
    var$2[15] = (-1);
    var$2[16] = 42;
    var$2[17] = 29;
    var$2[18] = 56;
    var$2[19] = (-1);
    var$2[20] = (-1);
    var$2[21] = (-1);
    var$2[22] = (-1);
    var$2[23] = (-1);
    var$2[24] = (-1);
    var$2[25] = (-1);
    var$2[26] = (-1);
    var$2[27] = 1;
    var$2[28] = (-1);
    var$2[29] = (-1);
    var$2[30] = (-1);
    var$2[31] = (-1);
    var$2[32] = 57;
    var$2[33] = 210;
    var$2[34] = 201;
    var$2[35] = 207;
    var$2[36] = 199;
    var$2[37] = 203;
    var$2[38] = 200;
    var$2[39] = 205;
    var$2[40] = 208;
    var$2[41] = 205;
    var$2[42] = 208;
    var$2[43] = (-1);
    var$2[44] = (-1);
    var$2[45] = 210;
    var$2[46] = 211;
    var$2[47] = 211;
    var$2[48] = 11;
    var$2[49] = 2;
    var$2[50] = 3;
    var$2[51] = 4;
    var$2[52] = 5;
    var$2[53] = 6;
    var$2[54] = 7;
    var$2[55] = 8;
    var$2[56] = 9;
    var$2[57] = 10;
    var$2[58] = (-1);
    var$2[59] = (-1);
    var$2[60] = (-1);
    var$2[61] = (-1);
    var$2[62] = (-1);
    var$2[63] = (-1);
    var$2[64] = (-1);
    var$2[65] = 30;
    var$2[66] = 48;
    var$2[67] = 46;
    var$2[68] = 32;
    var$2[69] = 18;
    var$2[70] = 33;
    var$2[71] = 34;
    var$2[72] = 35;
    var$2[73] = 23;
    var$2[74] = 36;
    var$2[75] = 37;
    var$2[76] = 38;
    var$2[77] = 50;
    var$2[78] = 49;
    var$2[79] = 24;
    var$2[80] = 25;
    var$2[81] = 16;
    var$2[82] = 19;
    var$2[83] = 31;
    var$2[84] = 20;
    var$2[85] = 22;
    var$2[86] = 47;
    var$2[87] = 17;
    var$2[88] = 45;
    var$2[89] = 21;
    var$2[90] = 44;
    var$2[91] = (-1);
    var$2[92] = (-1);
    var$2[93] = (-1);
    var$2[94] = (-1);
    var$2[95] = (-1);
    var$2[96] = (-1);
    var$2[97] = (-1);
    var$2[98] = (-1);
    var$2[99] = (-1);
    var$2[100] = (-1);
    var$2[101] = (-1);
    var$2[102] = (-1);
    var$2[103] = (-1);
    var$2[104] = (-1);
    var$2[105] = (-1);
    var$2[106] = (-1);
    var$2[107] = (-1);
    var$2[108] = (-1);
    var$2[109] = 12;
    var$2[110] = 52;
    var$2[111] = 53;
    var$2[112] = (-1);
    var$2[113] = (-1);
    var$2[114] = (-1);
    var$2[115] = (-1);
    var$2[116] = (-1);
    var$2[117] = (-1);
    var$2[118] = (-1);
    var$2[119] = (-1);
    var$2[120] = (-1);
    var$2[121] = (-1);
    var$2[122] = (-1);
    var$2[123] = (-1);
    var$2[124] = (-1);
    var$2[125] = (-1);
    var$2[126] = (-1);
    var$2[127] = (-1);
    var$2[128] = (-1);
    var$2[129] = (-1);
    var$2[130] = (-1);
    var$2[131] = (-1);
    var$2[132] = (-1);
    var$2[133] = (-1);
    var$2[134] = (-1);
    var$2[135] = (-1);
    var$2[136] = (-1);
    var$2[137] = (-1);
    var$2[138] = (-1);
    var$2[139] = (-1);
    var$2[140] = (-1);
    var$2[141] = (-1);
    var$2[142] = (-1);
    var$2[143] = (-1);
    var$2[144] = (-1);
    var$2[145] = (-1);
    var$2[146] = (-1);
    var$2[147] = (-1);
    var$2[148] = (-1);
    var$2[149] = (-1);
    var$2[150] = (-1);
    var$2[151] = (-1);
    var$2[152] = (-1);
    var$2[153] = (-1);
    var$2[154] = (-1);
    var$2[155] = (-1);
    var$2[156] = (-1);
    var$2[157] = (-1);
    var$2[158] = (-1);
    var$2[159] = (-1);
    var$2[160] = (-1);
    var$2[161] = (-1);
    var$2[162] = (-1);
    var$2[163] = (-1);
    var$2[164] = (-1);
    var$2[165] = (-1);
    var$2[166] = (-1);
    var$2[167] = (-1);
    var$2[168] = (-1);
    var$2[169] = (-1);
    var$2[170] = (-1);
    var$2[171] = (-1);
    var$2[172] = (-1);
    var$2[173] = (-1);
    var$2[174] = (-1);
    var$2[175] = (-1);
    var$2[176] = (-1);
    var$2[177] = (-1);
    var$2[178] = (-1);
    var$2[179] = (-1);
    var$2[180] = (-1);
    var$2[181] = (-1);
    var$2[182] = (-1);
    var$2[183] = (-1);
    var$2[184] = (-1);
    var$2[185] = (-1);
    var$2[186] = 39;
    var$2[187] = 13;
    var$2[188] = 51;
    var$2[189] = 12;
    var$2[190] = 52;
    var$2[191] = 53;
    var$2[192] = (-1);
    var$2[193] = (-1);
    var$2[194] = (-1);
    var$2[195] = (-1);
    var$2[196] = (-1);
    var$2[197] = (-1);
    var$2[198] = (-1);
    var$2[199] = (-1);
    var$2[200] = (-1);
    var$2[201] = (-1);
    var$2[202] = (-1);
    var$2[203] = (-1);
    var$2[204] = (-1);
    var$2[205] = (-1);
    var$2[206] = (-1);
    var$2[207] = (-1);
    var$2[208] = (-1);
    var$2[209] = (-1);
    var$2[210] = (-1);
    var$2[211] = (-1);
    var$2[212] = (-1);
    var$2[213] = (-1);
    var$2[214] = (-1);
    var$2[215] = (-1);
    var$2[216] = (-1);
    var$2[217] = (-1);
    var$2[218] = (-1);
    var$2[219] = (-1);
    var$2[220] = 26;
    var$2[221] = 43;
    var$2[222] = 27;
    var$2[223] = 40;
    nlea_EaglerAdapterImpl2_LWJGLKeyCodes = var$1;
    nlea_EaglerAdapterImpl2_appendbufferindex = 0;
    nlea_EaglerAdapterImpl2_appendbuffer = new Int32Array(new ArrayBuffer(2100000));
    nlea_EaglerAdapterImpl2_unpressCTRL = 0;
}
function nlea_EaglerAdapterImpl2_onBeforeCloseRegister$js_body$_10() {
    window.onbeforeunload = function() {
        nlea_EaglerAdapterImpl2_onWindowUnload$jsocb$_1();
        return false;
    };
}
function nlea_EaglerAdapterImpl2_onWindowUnload$jsocb$_1() {
    var var$1, $$je;
    nlea_EaglerAdapterImpl2_$callClinit();
    a: {
        try {
            var$1 = ji_ByteArrayOutputStream__init_0();
            nPn_NBTBase_writeTag(nPs_LocalStorageManager_gameSettingsStorage, ji_DataOutputStream__init_(var$1));
            nlea_EaglerAdapterImpl2_saveLocalStorage($rt_s(5), ji_ByteArrayOutputStream_toByteArray(var$1));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
    }
    b: {
        try {
            var$1 = ji_ByteArrayOutputStream__init_0();
            nPn_NBTBase_writeTag(nPs_LocalStorageManager_levelSettingsStorage, ji_DataOutputStream__init_(var$1));
            nlea_EaglerAdapterImpl2_saveLocalStorage($rt_s(6), ji_ByteArrayOutputStream_toByteArray(var$1));
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
    }
}
function nlea_EaglerAdapterImpl2_setContextVar$js_body$_14(var$1) {
    window.currentContext = var$1;
}
function nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24() {
    if (!nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24.$native) {
        nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24.$native = function() {
            return (function() {
                window.eagsFileChooser = {
                inputElement: null,
                openFileChooser: function(ext, mime){
                var el = window.eagsFileChooser.inputElement = document.createElement("input");
                el.type = "file";
                el.multiple = false;
                el.addEventListener("change", function(evt){
                var f = window.eagsFileChooser.inputElement.files;
                if(f.length == 0){
                window.eagsFileChooser.getFileChooserResult = null;
                }else{
                (async function(){
                window.eagsFileChooser.getFileChooserResult = await f[0].arrayBuffer();
                window.eagsFileChooser.getFileChooserResultName = f[0].name;
                })();
                }
                });
                window.eagsFileChooser.getFileChooserResult = null;
                window.eagsFileChooser.getFileChooserResultName = null;
                el.accept = mime;
                el.click();
                },
                getFileChooserResult: null,
                getFileChooserResultName: null
                };
            })();
        };
        nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24 = nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24.$native;
    }
    return nlea_EaglerAdapterImpl2_initFileChooser$js_body$_24();
}
function nlea_EaglerAdapterImpl2_youEagler$js_body$_27() {
    return { antialias : false, depth : true, powerPreference : "high-performance", desynchronized : false, preserveDrawingBuffer : false, premultipliedAlpha : false, alpha : false };
}
function nlea_EaglerAdapterImpl2_getDataURL$js_body$_121(var$1, var$2) {
    return URL.createObjectURL(new Blob([var$1], { type : var$2 }));
}
function nlea_EaglerAdapterImpl2_commitContext$js_body$_153(var$1) {
    if (var$1.commit) var$1.commit();
}
function nle_Client$AbortedLaunchException() {
    jl_RuntimeException.call(this);
}
function nle_Client$AbortedLaunchException__init_0() {
    var var_0 = new nle_Client$AbortedLaunchException();
    nle_Client$AbortedLaunchException__init_(var_0);
    return var_0;
}
function nle_Client$AbortedLaunchException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_AutoCloseable() {
}
function ji_Closeable() {
}
function ji_Flushable() {
}
function ji_Writer() {
    jl_Object.call(this);
    this.$lock = null;
}
function ji_Writer__init_() {
    var var_0 = new ji_Writer();
    ji_Writer__init_0(var_0);
    return var_0;
}
function ji_Writer__init_0($this) {
    $this.$lock = $this;
}
function ji_StringWriter() {
    ji_Writer.call(this);
    this.$buf = null;
}
function ji_StringWriter__init_() {
    var var_0 = new ji_StringWriter();
    ji_StringWriter__init_0(var_0);
    return var_0;
}
function ji_StringWriter__init_0($this) {
    var var$1;
    ji_Writer__init_0($this);
    var$1 = new jl_StringBuffer;
    jl_AbstractStringBuilder__init_2(var$1, 16);
    $this.$buf = var$1;
    $this.$lock = $this.$buf;
}
function ji_StringWriter_close($this) {
    return;
}
function ji_StringWriter_flush($this) {
    return;
}
function ji_StringWriter_write($this, $cbuf, $offset, $count) {
    var var$4, var$5;
    if ($offset >= 0) {
        var$4 = $cbuf.data.length;
        if ($offset <= var$4 && $count >= 0 && $count <= (var$4 - $offset | 0)) {
            if (!$count)
                return;
            jl_AbstractStringBuilder_append1($this.$buf, $cbuf, $offset, $count);
            return;
        }
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0(var$5);
    $rt_throw(var$5);
}
function ji_PrintWriter() {
    var a = this; ji_Writer.call(a);
    a.$out0 = null;
    a.$ioError = 0;
    a.$autoflush = 0;
}
function ji_PrintWriter__init_0(var_0) {
    var var_1 = new ji_PrintWriter();
    ji_PrintWriter__init_1(var_1, var_0);
    return var_1;
}
function ji_PrintWriter__init_(var_0, var_1) {
    var var_2 = new ji_PrintWriter();
    ji_PrintWriter__init_2(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintWriter__init_1($this, $out) {
    var var$2, var$3, var$4;
    var$2 = new ji_OutputStreamWriter;
    var$3 = ji_OutputStreamWriter_nullCheck($out);
    $out = jnci_UTF8Charset__init_0();
    var$3 = ji_OutputStreamWriter_nullCheck(var$3);
    var$4 = jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(jnci_UTF8Charset_newEncoder($out), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE);
    ji_Writer__init_0(var$2);
    var$2.$bufferData = $rt_createByteArray(512);
    var$2.$buffer0 = jn_ByteBuffer_wrap0(var$2.$bufferData);
    var$2.$out1 = ji_OutputStreamWriter_nullCheck(var$3);
    var$2.$encoder = var$4;
    ji_PrintWriter__init_2($this, var$2, 0);
}
function ji_PrintWriter__init_2($this, $wr, $autoflush) {
    if ($wr !== null) {
        $this.$lock = $wr;
        $this.$autoflush = $autoflush;
        $this.$out0 = $wr;
        return;
    }
    $wr = new jl_NullPointerException;
    jl_Throwable__init_0($wr);
    $rt_throw($wr);
}
function ji_PrintWriter_close($this) {
    var $$je;
    if ($this.$out0 !== null) {
        a: {
            try {
                $this.$out0.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                } else {
                    throw $$e;
                }
            }
            ji_PrintWriter_setError($this);
        }
        $this.$out0 = null;
    }
}
function ji_PrintWriter_flush($this) {
    var $$je;
    a: {
        if ($this.$out0 === null)
            ji_PrintWriter_setError($this);
        else {
            try {
                $this.$out0.$flush();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                } else {
                    throw $$e;
                }
            }
            ji_PrintWriter_setError($this);
        }
    }
}
function ji_PrintWriter_print($this, $str) {
    if ($str === null)
        $str = jl_String_valueOf(null);
    ji_PrintWriter_write($this, $str);
}
function ji_PrintWriter_println($this) {
    ji_PrintWriter_print($this, $rt_s(170));
    if ($this.$autoflush)
        ji_PrintWriter_flush($this);
}
function ji_PrintWriter_println0($this, $obj) {
    ji_PrintWriter_println1($this, jl_String_valueOf($obj));
}
function ji_PrintWriter_println1($this, $str) {
    ji_PrintWriter_print($this, $str);
    ji_PrintWriter_println($this);
}
function ji_PrintWriter_setError($this) {
    $this.$ioError = 1;
}
function ji_PrintWriter_write0($this, $buf) {
    ji_PrintWriter_write1($this, $buf, 0, $buf.data.length);
}
function ji_PrintWriter_write1($this, $buf, $offset, $count) {
    var $$je;
    a: {
        if ($this.$out0 === null)
            ji_PrintWriter_setError($this);
        else {
            try {
                $this.$out0.$write0($buf, $offset, $count);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                } else {
                    throw $$e;
                }
            }
            ji_PrintWriter_setError($this);
        }
    }
}
function ji_PrintWriter_write($this, $str) {
    ji_PrintWriter_write0($this, jl_String_toCharArray($str));
}
function otci_IntegerUtil() {
    jl_Object.call(this);
}
function otci_IntegerUtil__init_0() {
    var var_0 = new otci_IntegerUtil();
    otci_IntegerUtil__init_(var_0);
    return var_0;
}
function otci_IntegerUtil__init_($this) {
    return;
}
function otjc_JSString() {
    jl_Object.call(this);
}
function jl_System() {
    jl_Object.call(this);
}
var jl_System_outCache = null;
var jl_System_errCache = null;
function jl_System__init_0() {
    var var_0 = new jl_System();
    jl_System__init_(var_0);
    return var_0;
}
function jl_System__init_($this) {
    return;
}
function jl_System_out() {
    if (jl_System_outCache === null)
        jl_System_outCache = ji_PrintStream__init_(new jl_ConsoleOutputStreamStdout, 0);
    return jl_System_outCache;
}
function jl_System_err() {
    if (jl_System_errCache === null)
        jl_System_errCache = ji_PrintStream__init_(new jl_ConsoleOutputStreamStderr, 0);
    return jl_System_errCache;
}
function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
    var $srcType, $targetType, $srcArray, $i, var$10, var$11, var$12;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
            a: {
                b: {
                    if ($src !== $dest) {
                        $srcType = jl_Class_getComponentType(jl_Object_getClass($src));
                        $targetType = jl_Class_getComponentType(jl_Object_getClass($dest));
                        if ($srcType !== null && $targetType !== null) {
                            if ($srcType === $targetType)
                                break b;
                            if (!jl_Class_isPrimitive($srcType) && !jl_Class_isPrimitive($targetType)) {
                                $srcArray = $src;
                                $i = 0;
                                var$10 = $srcPos;
                                while ($i < $length) {
                                    var$11 = $srcArray.data;
                                    var$12 = var$10 + 1 | 0;
                                    if (!jl_Class_isInstance($targetType, var$11[var$10])) {
                                        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                        $src = new jl_ArrayStoreException;
                                        jl_Throwable__init_0($src);
                                        $rt_throw($src);
                                    }
                                    $i = $i + 1 | 0;
                                    var$10 = var$12;
                                }
                                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                return;
                            }
                            if (!jl_Class_isPrimitive($srcType))
                                break a;
                            if (jl_Class_isPrimitive($targetType))
                                break b;
                            else
                                break a;
                        }
                        $src = new jl_ArrayStoreException;
                        jl_Throwable__init_0($src);
                        $rt_throw($src);
                    }
                }
                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                return;
            }
            $src = new jl_ArrayStoreException;
            jl_Throwable__init_0($src);
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_0($src);
        $rt_throw($src);
    }
    $dest = new jl_NullPointerException;
    jl_Throwable__init_($dest, $rt_s(171));
    $rt_throw($dest);
}
function jl_System_doArrayCopy(var$1, var$2, var$3, var$4, var$5) {
    if (var$1 !== var$3 || var$4 < var$2) {
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[var$4++] = var$1.data[var$2++];
        }
    } else {
        var$2 = (var$2 + var$5) | 0;
        var$4 = (var$4 + var$5) | 0;
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[--var$4] = var$1.data[--var$2];
        }
    }
}
function jl_System_currentTimeMillis() {
    return Long_fromNumber(new Date().getTime());
}
function jl_System_nanoTime() {
    return Long_fromNumber(performance.now() * 1000000.0);
}
function jl_Runnable() {
}
function nmc_Minecraft() {
    var a = this; jl_Object.call(a);
    a.$field_6327_b = null;
    a.$displayWidth = 0;
    a.$displayHeight = 0;
    a.$timer = null;
    a.$theWorld = null;
    a.$field_6323_f = null;
    a.$thePlayer = null;
    a.$field_6321_h = null;
    a.$field_6320_i = null;
    a.$field_6317_l = 0;
    a.$field_6316_m = 0;
    a.$renderEngine = null;
    a.$fontRenderer = null;
    a.$currentScreen = null;
    a.$loadingScreen = null;
    a.$field_9243_r = null;
    a.$ticksRan = 0;
    a.$field_6282_S = 0;
    a.$field_9236_T = 0;
    a.$field_9235_U = 0;
    a.$field_6310_s = null;
    a.$field_6309_t = 0;
    a.$ingameGUI = null;
    a.$field_6307_v = 0;
    a.$field_9242_w = null;
    a.$objectMouseOver = null;
    a.$gameSettings = null;
    a.$mouseHelper = null;
    a.$field_9232_X = null;
    a.$field_9231_Y = null;
    a.$running = 0;
    a.$field_6292_I = null;
    a.$field_6291_J = 0;
    a.$field_6290_K = Long_ZERO;
    a.$field_6289_L = 0;
    a.$field_6302_aa = 0;
    a.$field_6288_M = 0;
    a.$field_6287_N = Long_ZERO;
    a.$field_6300_ab = 0;
}
var nmc_Minecraft_field_9240_E = null;
var nmc_Minecraft_field_9239_F = null;
var nmc_Minecraft_field_9238_G = 0;
var nmc_Minecraft_mc = null;
function nmc_Minecraft__init_() {
    var var_0 = new nmc_Minecraft();
    nmc_Minecraft__init_0(var_0);
    return var_0;
}
function nmc_Minecraft__init_0($this) {
    var var$1;
    var$1 = new nms_Timer;
    var$1.$timerSpeed = 1.0;
    var$1.$elapsedPartialTicks = 0.0;
    var$1.$timeSyncAdjustment = 1.0;
    var$1.$ticksPerSecond = 20.0;
    var$1.$lastSyncSysClock = jl_System_currentTimeMillis();
    var$1.$lastSyncHRClock = Long_div(jl_System_nanoTime(), Long_fromInt(1000000));
    $this.$timer = var$1;
    $this.$field_6320_i = null;
    $this.$field_6317_l = 1;
    $this.$field_6316_m = 0;
    $this.$currentScreen = null;
    var$1 = new nms_LoadingScreenRenderer;
    var$1.$field_1004_a = $rt_s(17);
    var$1.$field_1007_c = $rt_s(17);
    var$1.$field_1006_d = jl_System_currentTimeMillis();
    var$1.$field_1005_e = 0;
    var$1.$mc = $this;
    $this.$loadingScreen = var$1;
    var$1 = new nms_EntityRenderer;
    var$1.$field_1387_i = 0.0;
    var$1.$field_1385_k = null;
    var$1.$field_1384_l = jl_System_currentTimeMillis();
    var$1.$field_1383_m = new ju_Random;
    var$1.$field_1394_b = 0;
    var$1.$field_1393_c = 0;
    var$1.$field_1392_d = nms_GLAllocation_createDirectFloatBuffer(16);
    var$1.$mc0 = $this;
    var$1.$field_1395_a = nms_ItemRenderer__init_($this);
    $this.$field_9243_r = var$1;
    $this.$ticksRan = 0;
    $this.$field_6282_S = 0;
    $this.$field_6310_s = null;
    $this.$field_6309_t = 0;
    $this.$field_6307_v = 0;
    $this.$field_9242_w = nms_ModelBiped__init_0(0.0);
    $this.$objectMouseOver = null;
    $this.$field_9232_X = nms_TextureWaterFX__init_0();
    $this.$field_9231_Y = nms_TextureLavaFX__init_0();
    $this.$running = 1;
    $this.$field_6292_I = $rt_s(17);
    $this.$field_6291_J = 0;
    $this.$field_6290_K = Long_fromInt(-1);
    $this.$field_6289_L = 0;
    $this.$field_6302_aa = 0;
    $this.$field_6288_M = 0;
    $this.$field_6287_N = jl_System_currentTimeMillis();
    $this.$field_6300_ab = 0;
    $this.$field_9236_T = nlea_EaglerAdapterImpl2_getCanvasWidth();
    $this.$field_9235_U = nlea_EaglerAdapterImpl2_getCanvasHeight();
    var$1 = new nms_ThreadSleepForever;
    jl_Thread__init_0(var$1, $rt_s(172));
    var$1.$mc1 = $this;
    var$1.$daemon = 1;
    jl_Thread_start(var$1);
    $this.$displayWidth = nlea_EaglerAdapterImpl2_getCanvasWidth();
    $this.$displayHeight = nlea_EaglerAdapterImpl2_getCanvasHeight();
    nmc_Minecraft_mc = $this;
}
function nmc_Minecraft_startGame($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();var$1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nms_RenderManager_$callClinit();
        nms_RenderManager_instance.$field_4236_f = nms_ItemRenderer__init_($this);
        $this.$gameSettings = nms_GameSettings__init_0($this);
        var$1 = new nms_RenderEngine;
        var$2 = $this.$gameSettings;
        nms_RenderEngine_textureMap = ju_HashMap__init_0();
        var$1.$textureNameToImageMap = ju_HashMap__init_0();
        var$1.$singleIntBuffer = nms_GLAllocation_createDirectIntBuffer(1);
        var$1.$imageDataB1 = nms_GLAllocation_createDirectByteBuffer(1048576);
        var$1.$imageDataB2 = nms_GLAllocation_createDirectByteBuffer(1048576);
        var$1.$textureList = ju_ArrayList__init_0();
        var$1.$clampTexture = 0;
        var$1.$blurTexture = 0;
        var$1.$options = var$2;
        $this.$renderEngine = var$1;
        var$2 = new nms_FontRenderer;
        var$3 = $this.$gameSettings;
        var$1 = $rt_s(173);
        var$4 = $this.$renderEngine;
        $ptr = 1;
    case 1:
        nms_FontRenderer__init_(var$2, var$3, var$1, var$4);
        if ($rt_suspending()) {
            break main;
        }
        $this.$fontRenderer = var$2;
        $ptr = 2;
    case 2:
        nmc_Minecraft_loadScreen($this);
        if ($rt_suspending()) {
            break main;
        }
        $this.$mouseHelper = new nms_MouseHelper;
        nmc_Minecraft_checkGLError($this, $rt_s(174));
        olo_EaglerAdapterGL30_glEnable(3553);
        nlea_EaglerAdapterImpl2_$callClinit();
        nlea_EaglerAdapterImpl2_webgl.clearDepth((-1.0));
        olo_EaglerAdapterGL30_glEnable(2929);
        olo_EaglerAdapterGL30_glDepthFunc(515);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glAlphaFunc(516, 0.10000000149011612);
        olo_EaglerAdapterGL30_glCullFace(1029);
        olo_EaglerAdapterGL30_glMatrixMode(5889);
        olo_EaglerAdapterGL30_glLoadIdentity();
        olo_EaglerAdapterGL30_glMatrixMode(5888);
        nmc_Minecraft_checkGLError($this, $rt_s(175));
        nms_RenderEngine_registerTextureFX($this.$renderEngine, $this.$field_9231_Y);
        nms_RenderEngine_registerTextureFX($this.$renderEngine, $this.$field_9232_X);
        var$1 = $this.$renderEngine;
        var$2 = new nms_TextureCompassFX;
        nms_Item_$callClinit();
        nms_TextureFX__init_(var$2, nms_Item_compass.$iconIndex);
        var$2.$angleDelta = 0.0;
        var$2.$currentAngle = 0.0;
        var$2.$field_1128_f = 1;
        var$5 = nlea_EaglerAdapterImpl2_loadResourceBytes($rt_s(176));
        $ptr = 3;
    case 3:
        $tmp = nlea_EaglerAdapterImpl2_loadPNG(var$5);
        if ($rt_suspending()) {
            break main;
        }
        var$3 = $tmp;
        var$2.$compassSpriteSheet = var$3.$data;
        var$2.$compassSpriteSheetLength = var$2.$compassSpriteSheet.data.length / 256 | 0;
        nms_RenderEngine_registerTextureFX(var$1, var$2);
        $this.$field_6323_f = nms_RenderGlobal__init_($this, $this.$renderEngine);
        olo_EaglerAdapterGL30_glViewport(0, 0, $this.$displayWidth, $this.$displayHeight);
        var$1 = new nms_EffectRenderer;
        var$2 = $this.$theWorld;
        var$3 = $this.$renderEngine;
        var$1.$field_1728_b = $rt_createArray(ju_List, 4);
        var$1.$rand = new ju_Random;
        if (var$2 !== null)
            var$1.$worldObj = var$2;
        var$1.$field_1731_c = var$3;
        var$6 = 0;
        while (var$6 < 4) {
            var$1.$field_1728_b.data[var$6] = ju_ArrayList__init_0();
            var$6 = var$6 + 1 | 0;
        }
        $this.$field_6321_h = var$1;
        nmc_Minecraft_checkGLError($this, $rt_s(177));
        var$1 = new nms_GuiIngame;
        nms_Gui__init_(var$1);
        var$1.$chatMessageList = ju_ArrayList__init_0();
        var$1.$rand0 = new ju_Random;
        var$1.$field_933_a = null;
        var$1.$updateCounter = 0;
        var$1.$field_9420_i = $rt_s(17);
        var$1.$field_9419_j = 0;
        var$1.$field_931_c = 1.0;
        var$1.$mc2 = $this;
        $this.$ingameGUI = var$1;
        nmc_Minecraft_displayGuiScreen($this, nms_GuiMainMenu__init_0());
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, var$1, var$2, var$3, var$4, var$5, var$6, $ptr);
}
function nmc_Minecraft_loadScreen($this) {
    var $xx, var$2, var$3, $tessellator, var$5, var$6, $marginX, var$8, var$9, $marginY, var$11, var$12, var$13, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();$marginY = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();$marginX = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();$tessellator = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$xx = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $xx = $this.$displayWidth;
        if ($xx > $this.$displayHeight)
            $xx = $this.$displayHeight;
        olo_EaglerAdapterGL30_glClear(16640);
        olo_EaglerAdapterGL30_glMatrixMode(5889);
        olo_EaglerAdapterGL30_glLoadIdentity();
        var$2 = $this.$displayWidth;
        var$3 = $this.$displayHeight;
        $tessellator = olo_EaglerAdapterGL30_getMatrix();
        var$5 = var$2 - 0.0;
        $tessellator.$m00 = 2.0 / var$5;
        $tessellator.$m01 = 0.0;
        $tessellator.$m02 = 0.0;
        $tessellator.$m03 = 0.0;
        $tessellator.$m10 = 0.0;
        var$6 = 0.0 - var$3;
        $tessellator.$m11 = 2.0 / var$6;
        $tessellator.$m12 = 0.0;
        $tessellator.$m13 = 0.0;
        $tessellator.$m20 = 0.0;
        $tessellator.$m21 = 0.0;
        $tessellator.$m22 = 0.0010000000474974513;
        $tessellator.$m23 = 0.0;
        $tessellator.$m30 =  -(var$2 + 0.0) / var$5;
        $tessellator.$m31 =  -(0.0 + var$3) / var$6;
        $tessellator.$m32 = 2.0;
        $tessellator.$m33 = 1.0;
        olo_EaglerAdapterGL30_glMatrixMode(5888);
        olo_EaglerAdapterGL30_glLoadIdentity();
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-2000.0));
        olo_EaglerAdapterGL30_glViewport(0, 0, $this.$displayWidth, $this.$displayHeight);
        olo_EaglerAdapterGL30_glClearColor(0.0, 0.0, 0.0, 0.0);
        nms_Tessellator_$callClinit();
        $tessellator = nms_Tessellator_instance;
        olo_EaglerAdapterGL30_glDisable(2896);
        olo_EaglerAdapterGL30_glEnable(3553);
        olo_EaglerAdapterGL30_glDisable(2912);
        $marginX = 3553;
        var$8 = $this.$renderEngine;
        var$9 = $rt_s(178);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$8, var$9);
        if ($rt_suspending()) {
            break main;
        }
        $marginY = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($marginX, $marginY);
        nms_Tessellator_startDrawingQuads($tessellator);
        nms_Tessellator_setColorOpaque_I($tessellator, 16777215);
        nms_Tessellator_addVertexWithUV($tessellator, 0.0, $this.$displayHeight, 0.0, 0.0, 0.0);
        nms_Tessellator_addVertexWithUV($tessellator, $this.$displayWidth, $this.$displayHeight, 0.0, 0.0, 0.0);
        nms_Tessellator_addVertexWithUV($tessellator, $this.$displayWidth, 0.0, 0.0, 0.0, 0.0);
        nms_Tessellator_addVertexWithUV($tessellator, 0.0, 0.0, 0.0, 0.0, 0.0);
        nms_Tessellator_draw($tessellator);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_Tessellator_startDrawingQuads($tessellator);
        nms_Tessellator_setColorOpaque_I($tessellator, 16777215);
        $marginX = ($this.$displayWidth - $xx | 0) / 2 | 0;
        $marginY = ($this.$displayHeight - $xx | 0) / 2 | 0;
        var$11 = $marginX;
        nms_Tessellator_addVertexWithUV($tessellator, var$11, $this.$displayHeight - $marginY | 0, 0.0, 0.0, 1.0);
        nms_Tessellator_addVertexWithUV($tessellator, $this.$displayWidth - $marginX | 0, $this.$displayHeight - $marginY | 0, 0.0, 1.0, 1.0);
        var$12 = $this.$displayWidth - $marginX | 0;
        var$13 = $marginY;
        nms_Tessellator_addVertexWithUV($tessellator, var$12, var$13, 0.0, 1.0, 0.0);
        nms_Tessellator_addVertexWithUV($tessellator, var$11, var$13, 0.0, 0.0, 0.0);
        nms_Tessellator_draw($tessellator);
        olo_EaglerAdapterGL30_glDisable(2896);
        olo_EaglerAdapterGL30_glDisable(2912);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glAlphaFunc(516, 0.10000000149011612);
        nlea_EaglerAdapterImpl2_$callClinit();
        nlea_EaglerAdapterImpl2_webgl.flush();
        $ptr = 2;
    case 2:
        nlea_EaglerAdapterImpl2_updateDisplay();
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $xx, var$2, var$3, $tessellator, var$5, var$6, $marginX, var$8, var$9, $marginY, var$11, var$12, var$13, $ptr);
}
function nmc_Minecraft_displayGuiScreen($this, $var1) {
    var $var2;
    if (!($this.$currentScreen instanceof nms_GuiUnused)) {
        if ($this.$currentScreen !== null)
            $this.$currentScreen.$onGuiClosed();
        if ($var1 === null && $this.$theWorld === null)
            $var1 = nms_GuiMainMenu__init_0();
        else if ($var1 === null && $this.$thePlayer.$health <= 0) {
            $var1 = new nms_GuiGameOver;
            nms_GuiScreen__init_($var1);
        }
        $this.$currentScreen = $var1;
        if ($var1 === null)
            nmc_Minecraft_func_6259_e($this);
        else {
            nmc_Minecraft_func_6273_f($this);
            $var2 = nms_ScaledResolution__init_($this.$displayWidth, $this.$displayHeight);
            nms_GuiScreen_setWorldAndResolution($var1, $this, $var2.$scaledWidth, $var2.$scaledHeight);
            $this.$field_6307_v = 0;
        }
    }
}
function nmc_Minecraft_checkGLError($this, $var1) {
    var $var2, $var3, var$4, var$5;
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    $var2 = nlea_EaglerAdapterImpl2_webgl.getError();
    if ($var2 == 37442)
        $var2 = (-144);
    if ($var2) {
        a: {
            switch ($var2) {
                case -144:
                    break;
                case 1280:
                    $var3 = $rt_s(179);
                    break a;
                case 1281:
                    $var3 = $rt_s(180);
                    break a;
                case 1282:
                    $var3 = $rt_s(181);
                    break a;
                case 1285:
                    $var3 = $rt_s(182);
                    break a;
                default:
                    $var3 = $rt_s(183);
                    break a;
            }
            $var3 = $rt_s(184);
        }
        ji_PrintStream_println(jl_System_out(), $rt_s(185));
        var$4 = jl_System_out();
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        ji_PrintStream_println(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(186)), $var1)));
        $var1 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        ji_PrintStream_println($var1, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$4, $var2), $rt_s(18)), $var3)));
    }
}
function nmc_Minecraft_run($this) {
    var $var15, $var1, $var3, $var17, var$5, $var4, $var19, $var6, $var20, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var20 = $thread.pop();$var6 = $thread.pop();$var19 = $thread.pop();$var4 = $thread.pop();var$5 = $thread.pop();$var17 = $thread.pop();$var3 = $thread.pop();$var1 = $thread.pop();$var15 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$running = 1;
        try {
            $ptr = 1;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var15 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var15);
        nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(187), $var15);
        return;
    case 1:
        a: {
            try {
                nmc_Minecraft_startGame($this);
                if ($rt_suspending()) {
                    break main;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var15 = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($var15);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(187), $var15);
            return;
        }
        b: {
            c: {
                d: {
                    try {
                        $var1 = jl_System_currentTimeMillis();
                        $var3 = 0;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof nms_MinecraftError) {
                            break d;
                        } else if ($$je instanceof jl_Throwable) {
                            $var17 = $$je;
                            break c;
                        } else {
                            throw $$e;
                        }
                    }
                    var$5 = null;
                    e: {
                        try {
                            if ($this.$running)
                                break e;
                            break b;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof nms_MinecraftError) {
                                break d;
                            } else if ($$je instanceof jl_Throwable) {
                                $var17 = $$je;
                                break c;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    f: {
                        try {
                            g: {
                                try {
                                    nms_AxisAlignedBB_clearBoundingBoxPool();
                                    nms_Vec3D_initialize();
                                    if ($this.$field_6316_m && $this.$theWorld !== null)
                                        break g;
                                    nms_Timer_updateTimer($this.$timer);
                                    break f;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof nms_MinecraftError) {
                                        break d;
                                    } else {
                                        throw $$e;
                                    }
                                }
                            }
                            try {
                                $var4 = $this.$timer.$renderPartialTicks;
                                nms_Timer_updateTimer($this.$timer);
                                $this.$timer.$renderPartialTicks = $var4;
                                break f;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof nms_MinecraftError) {
                                    break d;
                                } else {
                                    throw $$e;
                                }
                            }
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $var17 = $$je;
                                break c;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        $var19 = jl_System_nanoTime();
                        $var6 = 0;
                        if ($var6 < $this.$timer.$elapsedTicks) {
                            $this.$ticksRan = $this.$ticksRan + 1 | 0;
                            try {
                                $ptr = 2;
                                continue main;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof nms_MinecraftException) {
                                } else {
                                    throw $$e;
                                }
                            }
                            $this.$theWorld = null;
                            $ptr = 4;
                            continue main;
                        }
                        h: {
                            $var20 = Long_sub(jl_System_nanoTime(), $var19);
                            nmc_Minecraft_checkGLError($this, $rt_s(188));
                            olo_EaglerAdapterGL30_glEnable(3553);
                            if ($this.$theWorld !== null)
                                while (true) {
                                    if (!nms_World_func_6465_g($this.$theWorld))
                                        break h;
                                }
                        }
                        if ($this.$gameSettings.$limitFramerate) {
                            $var19 = Long_fromInt(5);
                            $ptr = 3;
                            continue main;
                        }
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                            if (!$this.$field_6307_v) {
                                if ($this.$field_6327_b !== null)
                                    nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                                $var17 = $this.$field_9243_r;
                                $var4 = $this.$timer.$renderPartialTicks;
                                $ptr = 7;
                                continue main;
                            }
                            if (!nlea_EaglerAdapterImpl2_isFocused()) {
                                $var19 = Long_fromInt(10);
                                $ptr = 6;
                                continue main;
                            }
                            if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                                nmc_Minecraft_func_6238_a($this, $var20);
                            else
                                $this.$field_6290_K = jl_System_nanoTime();
                            $ptr = 8;
                            continue main;
                        }
                        $ptr = 5;
                        continue main;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof nms_MinecraftError) {
                        } else if ($$je instanceof jl_Throwable) {
                            $var17 = $$je;
                            break c;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break b;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 2:
        a: {
            i: {
                try {
                    d: {
                        try {
                            nmc_Minecraft_runTick($this);
                            if ($rt_suspending()) {
                                break main;
                            }
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof nms_MinecraftException) {
                                break d;
                            } else {
                                throw $$e;
                            }
                        }
                        $var6 = $var6 + 1 | 0;
                        if ($var6 >= $this.$timer.$elapsedTicks) {
                            e: {
                                $var20 = Long_sub(jl_System_nanoTime(), $var19);
                                nmc_Minecraft_checkGLError($this, $rt_s(188));
                                olo_EaglerAdapterGL30_glEnable(3553);
                                if ($this.$theWorld !== null)
                                    while (true) {
                                        if (!nms_World_func_6465_g($this.$theWorld))
                                            break e;
                                    }
                            }
                            if ($this.$gameSettings.$limitFramerate) {
                                $var19 = Long_fromInt(5);
                                $ptr = 3;
                                continue main;
                            }
                            if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                                if (!$this.$field_6307_v) {
                                    if ($this.$field_6327_b !== null)
                                        nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                                    $var17 = $this.$field_9243_r;
                                    $var4 = $this.$timer.$renderPartialTicks;
                                    $ptr = 7;
                                    continue main;
                                }
                                if (!nlea_EaglerAdapterImpl2_isFocused()) {
                                    $var19 = Long_fromInt(10);
                                    $ptr = 6;
                                    continue main;
                                }
                                if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                                    nmc_Minecraft_func_6238_a($this, $var20);
                                else
                                    $this.$field_6290_K = jl_System_nanoTime();
                                $ptr = 8;
                                continue main;
                            }
                            $ptr = 5;
                            continue main;
                        }
                        $this.$ticksRan = $this.$ticksRan + 1 | 0;
                        try {
                            continue main;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof nms_MinecraftException) {
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $this.$theWorld = null;
                    $ptr = 4;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 3:
        a: {
            i: {
                try {
                    jl_Thread_sleep($var19);
                    if ($rt_suspending()) {
                        break main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                        if (!$this.$field_6307_v) {
                            if ($this.$field_6327_b !== null)
                                nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                            $var17 = $this.$field_9243_r;
                            $var4 = $this.$timer.$renderPartialTicks;
                            $ptr = 7;
                            continue main;
                        }
                        if (!nlea_EaglerAdapterImpl2_isFocused()) {
                            $var19 = Long_fromInt(10);
                            $ptr = 6;
                            continue main;
                        }
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                            nmc_Minecraft_func_6238_a($this, $var20);
                        else
                            $this.$field_6290_K = jl_System_nanoTime();
                        $ptr = 8;
                        continue main;
                    }
                    $ptr = 5;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 4:
        a: {
            i: {
                try {
                    nmc_Minecraft_func_6261_a($this, var$5);
                    if ($rt_suspending()) {
                        break main;
                    }
                    nmc_Minecraft_displayGuiScreen($this, nms_GuiConflictWarning__init_0());
                    $var6 = $var6 + 1 | 0;
                    if ($var6 < $this.$timer.$elapsedTicks) {
                        $this.$ticksRan = $this.$ticksRan + 1 | 0;
                        try {
                            $ptr = 2;
                            continue main;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof nms_MinecraftException) {
                            } else {
                                throw $$e;
                            }
                        }
                        $this.$theWorld = null;
                        continue main;
                    }
                    d: {
                        $var20 = Long_sub(jl_System_nanoTime(), $var19);
                        nmc_Minecraft_checkGLError($this, $rt_s(188));
                        olo_EaglerAdapterGL30_glEnable(3553);
                        if ($this.$theWorld !== null)
                            while (true) {
                                if (!nms_World_func_6465_g($this.$theWorld))
                                    break d;
                            }
                    }
                    if ($this.$gameSettings.$limitFramerate) {
                        $var19 = Long_fromInt(5);
                        $ptr = 3;
                        continue main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                        if (!$this.$field_6307_v) {
                            if ($this.$field_6327_b !== null)
                                nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                            $var17 = $this.$field_9243_r;
                            $var4 = $this.$timer.$renderPartialTicks;
                            $ptr = 7;
                            continue main;
                        }
                        if (!nlea_EaglerAdapterImpl2_isFocused()) {
                            $var19 = Long_fromInt(10);
                            $ptr = 6;
                            continue main;
                        }
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                            nmc_Minecraft_func_6238_a($this, $var20);
                        else
                            $this.$field_6290_K = jl_System_nanoTime();
                        $ptr = 8;
                        continue main;
                    }
                    $ptr = 5;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 5:
        a: {
            i: {
                try {
                    nlea_EaglerAdapterImpl2_updateDisplay();
                    if ($rt_suspending()) {
                        break main;
                    }
                    if (!$this.$field_6307_v) {
                        if ($this.$field_6327_b !== null)
                            nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                        $var17 = $this.$field_9243_r;
                        $var4 = $this.$timer.$renderPartialTicks;
                        $ptr = 7;
                        continue main;
                    }
                    if (!nlea_EaglerAdapterImpl2_isFocused()) {
                        $var19 = Long_fromInt(10);
                        $ptr = 6;
                        continue main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                        nmc_Minecraft_func_6238_a($this, $var20);
                    else
                        $this.$field_6290_K = jl_System_nanoTime();
                    $ptr = 8;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 6:
        a: {
            i: {
                try {
                    jl_Thread_sleep($var19);
                    if ($rt_suspending()) {
                        break main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                        nmc_Minecraft_func_6238_a($this, $var20);
                    else
                        $this.$field_6290_K = jl_System_nanoTime();
                    $ptr = 8;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 7:
        a: {
            i: {
                try {
                    nms_EntityRenderer_func_4136_b($var17, $var4);
                    if ($rt_suspending()) {
                        break main;
                    }
                    if (!nlea_EaglerAdapterImpl2_isFocused()) {
                        $var19 = Long_fromInt(10);
                        $ptr = 6;
                        continue main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                        nmc_Minecraft_func_6238_a($this, $var20);
                    else
                        $this.$field_6290_K = jl_System_nanoTime();
                    $ptr = 8;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 8:
        a: {
            i: {
                try {
                    jl_Thread_yield();
                    if ($rt_suspending()) {
                        break main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                        $ptr = 9;
                        continue main;
                    }
                    if (!(nlea_EaglerAdapterImpl2_getCanvasWidth() == $this.$displayWidth && nlea_EaglerAdapterImpl2_getCanvasHeight() == $this.$displayHeight)) {
                        $this.$displayWidth = nlea_EaglerAdapterImpl2_getCanvasWidth();
                        $this.$displayHeight = nlea_EaglerAdapterImpl2_getCanvasHeight();
                        if ($this.$displayWidth <= 0)
                            $this.$displayWidth = 1;
                        if ($this.$displayHeight <= 0)
                            $this.$displayHeight = 1;
                        nmc_Minecraft_resize($this, $this.$displayWidth, $this.$displayHeight);
                    }
                    nmc_Minecraft_checkGLError($this, $rt_s(190));
                    $var3 = $var3 + 1 | 0;
                    $this.$field_6316_m = $this.$currentScreen !== null && $this.$currentScreen.$doesGuiPauseGame() ? 1 : 0;
                    while (true) {
                        $var20 = jl_System_currentTimeMillis();
                        $var19 = Long_add($var1, Long_fromInt(1000));
                        if (Long_lt($var20, $var19))
                            break;
                        $var17 = jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder__init_0(), $var3), $rt_s(191));
                        nms_WorldRenderer_$callClinit();
                        $this.$field_6292_I = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1($var17, nms_WorldRenderer_field_1762_b), $rt_s(192)));
                        nms_WorldRenderer_field_1762_b = 0;
                        $var3 = 0;
                        $var1 = $var19;
                    }
                    if (!$this.$running)
                        break a;
                    nms_AxisAlignedBB_clearBoundingBoxPool();
                    nms_Vec3D_initialize();
                    if ($this.$field_6316_m && $this.$theWorld !== null) {
                        $var4 = $this.$timer.$renderPartialTicks;
                        nms_Timer_updateTimer($this.$timer);
                        $this.$timer.$renderPartialTicks = $var4;
                    } else
                        nms_Timer_updateTimer($this.$timer);
                    $var19 = jl_System_nanoTime();
                    $var6 = 0;
                    if ($var6 < $this.$timer.$elapsedTicks) {
                        $this.$ticksRan = $this.$ticksRan + 1 | 0;
                        try {
                            $ptr = 2;
                            continue main;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof nms_MinecraftException) {
                            } else {
                                throw $$e;
                            }
                        }
                        $this.$theWorld = null;
                        $ptr = 4;
                        continue main;
                    }
                    j: {
                        $var20 = Long_sub(jl_System_nanoTime(), $var19);
                        nmc_Minecraft_checkGLError($this, $rt_s(188));
                        olo_EaglerAdapterGL30_glEnable(3553);
                        if ($this.$theWorld !== null)
                            while (true) {
                                if (!nms_World_func_6465_g($this.$theWorld))
                                    break j;
                            }
                    }
                    if ($this.$gameSettings.$limitFramerate) {
                        $var19 = Long_fromInt(5);
                        $ptr = 3;
                        continue main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                        if (!$this.$field_6307_v) {
                            if ($this.$field_6327_b !== null)
                                nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                            $var17 = $this.$field_9243_r;
                            $var4 = $this.$timer.$renderPartialTicks;
                            $ptr = 7;
                            continue main;
                        }
                        if (!nlea_EaglerAdapterImpl2_isFocused()) {
                            $var19 = Long_fromInt(10);
                            $ptr = 6;
                            continue main;
                        }
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                            nmc_Minecraft_func_6238_a($this, $var20);
                        else
                            $this.$field_6290_K = jl_System_nanoTime();
                        continue main;
                    }
                    $ptr = 5;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    case 9:
        a: {
            i: {
                try {
                    nlea_EaglerAdapterImpl2_updateDisplay();
                    if ($rt_suspending()) {
                        break main;
                    }
                    if (!(nlea_EaglerAdapterImpl2_getCanvasWidth() == $this.$displayWidth && nlea_EaglerAdapterImpl2_getCanvasHeight() == $this.$displayHeight)) {
                        $this.$displayWidth = nlea_EaglerAdapterImpl2_getCanvasWidth();
                        $this.$displayHeight = nlea_EaglerAdapterImpl2_getCanvasHeight();
                        if ($this.$displayWidth <= 0)
                            $this.$displayWidth = 1;
                        if ($this.$displayHeight <= 0)
                            $this.$displayHeight = 1;
                        nmc_Minecraft_resize($this, $this.$displayWidth, $this.$displayHeight);
                    }
                    nmc_Minecraft_checkGLError($this, $rt_s(190));
                    $var3 = $var3 + 1 | 0;
                    $this.$field_6316_m = $this.$currentScreen !== null && $this.$currentScreen.$doesGuiPauseGame() ? 1 : 0;
                    while (true) {
                        $var20 = jl_System_currentTimeMillis();
                        $var19 = Long_add($var1, Long_fromInt(1000));
                        if (Long_lt($var20, $var19))
                            break;
                        $var17 = jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder__init_0(), $var3), $rt_s(191));
                        nms_WorldRenderer_$callClinit();
                        $this.$field_6292_I = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1($var17, nms_WorldRenderer_field_1762_b), $rt_s(192)));
                        nms_WorldRenderer_field_1762_b = 0;
                        $var3 = 0;
                        $var1 = $var19;
                    }
                    if (!$this.$running)
                        break a;
                    nms_AxisAlignedBB_clearBoundingBoxPool();
                    nms_Vec3D_initialize();
                    if ($this.$field_6316_m && $this.$theWorld !== null) {
                        $var4 = $this.$timer.$renderPartialTicks;
                        nms_Timer_updateTimer($this.$timer);
                        $this.$timer.$renderPartialTicks = $var4;
                    } else
                        nms_Timer_updateTimer($this.$timer);
                    $var19 = jl_System_nanoTime();
                    $var6 = 0;
                    if ($var6 < $this.$timer.$elapsedTicks) {
                        $this.$ticksRan = $this.$ticksRan + 1 | 0;
                        try {
                            $ptr = 2;
                            continue main;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof nms_MinecraftException) {
                            } else {
                                throw $$e;
                            }
                        }
                        $this.$theWorld = null;
                        $ptr = 4;
                        continue main;
                    }
                    k: {
                        $var20 = Long_sub(jl_System_nanoTime(), $var19);
                        nmc_Minecraft_checkGLError($this, $rt_s(188));
                        olo_EaglerAdapterGL30_glEnable(3553);
                        if ($this.$theWorld !== null)
                            while (true) {
                                if (!nms_World_func_6465_g($this.$theWorld))
                                    break k;
                            }
                    }
                    if ($this.$gameSettings.$limitFramerate) {
                        $var19 = Long_fromInt(5);
                        $ptr = 3;
                        continue main;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(8)) {
                        if (!$this.$field_6307_v) {
                            if ($this.$field_6327_b !== null)
                                nms_PlayerControllerSP_func_6467_a($this.$field_6327_b, $this.$timer.$renderPartialTicks);
                            $var17 = $this.$field_9243_r;
                            $var4 = $this.$timer.$renderPartialTicks;
                            $ptr = 7;
                            continue main;
                        }
                        if (!nlea_EaglerAdapterImpl2_isFocused()) {
                            $var19 = Long_fromInt(10);
                            $ptr = 6;
                            continue main;
                        }
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4))
                            nmc_Minecraft_func_6238_a($this, $var20);
                        else
                            $this.$field_6290_K = jl_System_nanoTime();
                        $ptr = 8;
                        continue main;
                    }
                    $ptr = 5;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof nms_MinecraftError) {
                    } else if ($$je instanceof jl_Throwable) {
                        $var17 = $$je;
                        break i;
                    } else {
                        throw $$e;
                    }
                }
                break a;
            }
            $this.$theWorld = null;
            jl_Throwable_printStackTrace0($var17);
            nms_UnexpectedThrowable__init_(new nms_UnexpectedThrowable, $rt_s(189), $var17);
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var15, $var1, $var3, $var17, var$5, $var4, $var19, $var6, $var20, $ptr);
}
function nmc_Minecraft_func_6238_a($this, $var1) {
    var $var5, var$3, $var8, $var7, $var9, $var11, $var12, $var13, $var14, $var16, $var18, var$13;
    if (Long_eq($this.$field_6290_K, Long_fromInt(-1)))
        $this.$field_6290_K = jl_System_nanoTime();
    $var5 = jl_System_nanoTime();
    nmc_Minecraft_field_9239_F.data[nmc_Minecraft_field_9238_G & (nmc_Minecraft_field_9240_E.data.length - 1 | 0)] = $var1;
    var$3 = nmc_Minecraft_field_9240_E.data;
    $var8 = nmc_Minecraft_field_9238_G;
    nmc_Minecraft_field_9238_G = $var8 + 1 | 0;
    var$3[$var8 & (nmc_Minecraft_field_9240_E.data.length - 1 | 0)] = Long_sub($var5, $this.$field_6290_K);
    $this.$field_6290_K = $var5;
    olo_EaglerAdapterGL30_glClear(256);
    olo_EaglerAdapterGL30_glMatrixMode(5889);
    olo_EaglerAdapterGL30_glLoadIdentity();
    olo_EaglerAdapterGL30_glOrtho(0.0, $this.$displayWidth, $this.$displayHeight, 0.0, 1000.0, 3000.0);
    olo_EaglerAdapterGL30_glMatrixMode(5888);
    olo_EaglerAdapterGL30_glLoadIdentity();
    olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-2000.0));
    olo_EaglerAdapterGL30_glDisable(3553);
    nms_Tessellator_$callClinit();
    $var7 = nms_Tessellator_instance;
    nms_Tessellator_startDrawing($var7, 7);
    nms_Tessellator_setColorOpaque_I($var7, 536870912);
    nms_Tessellator_addVertex($var7, 0.0, $this.$displayHeight - 83 | 0, 0.0);
    nms_Tessellator_addVertex($var7, 0.0, $this.$displayHeight, 0.0);
    nms_Tessellator_addVertex($var7, nmc_Minecraft_field_9240_E.data.length, $this.$displayHeight, 0.0);
    nms_Tessellator_addVertex($var7, nmc_Minecraft_field_9240_E.data.length, $this.$displayHeight - 83 | 0, 0.0);
    nms_Tessellator_setColorOpaque_I($var7, 538968064);
    nms_Tessellator_addVertex($var7, 0.0, $this.$displayHeight - 166 | 0, 0.0);
    nms_Tessellator_addVertex($var7, 0.0, $this.$displayHeight - 83 | 0, 0.0);
    nms_Tessellator_addVertex($var7, nmc_Minecraft_field_9240_E.data.length, $this.$displayHeight - 83 | 0, 0.0);
    nms_Tessellator_addVertex($var7, nmc_Minecraft_field_9240_E.data.length, $this.$displayHeight - 166 | 0, 0.0);
    nms_Tessellator_draw($var7);
    $var9 = Long_ZERO;
    $var11 = 0;
    while ($var11 < nmc_Minecraft_field_9240_E.data.length) {
        $var9 = Long_add($var9, nmc_Minecraft_field_9240_E.data[$var11]);
        $var11 = $var11 + 1 | 0;
    }
    $var8 = Long_div(Long_div($var9, Long_fromInt(200000)), Long_fromInt(nmc_Minecraft_field_9240_E.data.length)).lo;
    nms_Tessellator_startDrawing($var7, 7);
    nms_Tessellator_setColorOpaque_I($var7, 541065216);
    nms_Tessellator_addVertex($var7, 0.0, $this.$displayHeight - $var8 | 0, 0.0);
    nms_Tessellator_addVertex($var7, 0.0, $this.$displayHeight, 0.0);
    nms_Tessellator_addVertex($var7, nmc_Minecraft_field_9240_E.data.length, $this.$displayHeight, 0.0);
    nms_Tessellator_addVertex($var7, nmc_Minecraft_field_9240_E.data.length, $this.$displayHeight - $var8 | 0, 0.0);
    nms_Tessellator_draw($var7);
    nms_Tessellator_startDrawing($var7, 1);
    $var12 = 0;
    while ($var12 < nmc_Minecraft_field_9240_E.data.length) {
        $var13 = ((($var12 - nmc_Minecraft_field_9238_G | 0) & (nmc_Minecraft_field_9240_E.data.length - 1 | 0)) * 255 | 0) / nmc_Minecraft_field_9240_E.data.length | 0;
        $var14 = $rt_imul($var13, $var13) / 255 | 0;
        $var8 = $rt_imul($var14, $var14) / 255 | 0;
        if (Long_le(nmc_Minecraft_field_9240_E.data[$var12], Long_fromInt(16666666)))
            nms_Tessellator_setColorOpaque_I($var7, (-16777216) + ($var8 * 256 | 0) | 0);
        else
            nms_Tessellator_setColorOpaque_I($var7, (-16777216) + ($var8 * 65536 | 0) | 0);
        $var16 = Long_div(nmc_Minecraft_field_9240_E.data[$var12], Long_fromInt(200000));
        $var18 = Long_div(nmc_Minecraft_field_9239_F.data[$var12], Long_fromInt(200000));
        var$13 = $var12 + 0.5;
        nms_Tessellator_addVertex($var7, var$13, Long_toNumber(Long_sub(Long_fromInt($this.$displayHeight), $var16)) + 0.5, 0.0);
        nms_Tessellator_addVertex($var7, var$13, $this.$displayHeight + 0.5, 0.0);
        nms_Tessellator_setColorOpaque_I($var7, (((-16777216) + ($var8 * 65536 | 0) | 0) + ($var8 * 256 | 0) | 0) + ($var8 * 1 | 0) | 0);
        nms_Tessellator_addVertex($var7, var$13, Long_toNumber(Long_sub(Long_fromInt($this.$displayHeight), $var16)) + 0.5, 0.0);
        nms_Tessellator_addVertex($var7, var$13, Long_toNumber(Long_sub(Long_fromInt($this.$displayHeight), Long_sub($var16, $var18))) + 0.5, 0.0);
        $var12 = $var12 + 1 | 0;
    }
    nms_Tessellator_draw($var7);
    olo_EaglerAdapterGL30_glEnable(3553);
}
function nmc_Minecraft_func_6259_e($this) {
    if (nlea_EaglerAdapterImpl2_isFocused() && !$this.$field_6289_L) {
        $this.$field_6289_L = 1;
        nms_MouseHelper_func_774_a($this.$mouseHelper);
        nmc_Minecraft_displayGuiScreen($this, null);
        $this.$field_6302_aa = $this.$ticksRan + 10000 | 0;
    }
}
function nmc_Minecraft_func_6273_f($this) {
    if ($this.$field_6289_L) {
        if ($this.$thePlayer !== null)
            nms_EntityPlayerSP_func_458_k($this.$thePlayer);
        $this.$field_6289_L = 0;
        nms_MouseHelper_func_773_b($this.$mouseHelper);
    }
}
function nmc_Minecraft_func_6252_g($this) {
    if ($this.$currentScreen === null)
        nmc_Minecraft_displayGuiScreen($this, nms_GuiIngameMenu__init_0());
}
function nmc_Minecraft_func_6254_a($this, $var1, $var2) {
    var $var3, $var4, $var5, var$6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!$this.$field_6327_b.$field_1064_b && !(!$var1 && $this.$field_6282_S > 0)) {
            if ($var2 && $this.$objectMouseOver !== null && !$this.$objectMouseOver.$typeOfHit && !$var1) {
                $var3 = $this.$objectMouseOver.$blockX;
                $var4 = $this.$objectMouseOver.$blockY;
                $var5 = $this.$objectMouseOver.$blockZ;
                var$6 = $this.$field_6327_b;
                $var1 = $this.$objectMouseOver.$sideHit;
                $ptr = 1;
                continue main;
            }
            nms_PlayerControllerSP_func_6468_a($this.$field_6327_b);
        }
        return;
    case 1:
        nms_PlayerControllerSP_sendBlockRemoving(var$6, $var3, $var4, $var5, $var1);
        if ($rt_suspending()) {
            break main;
        }
        var$6 = $this.$field_6321_h;
        $var1 = $this.$objectMouseOver.$sideHit;
        $ptr = 2;
    case 2:
        nms_EffectRenderer_func_1191_a(var$6, $var3, $var4, $var5, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, var$6, $ptr);
}
function nmc_Minecraft_clickMouse($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var10, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            if (!(!$var1 && $this.$field_6282_S > 0)) {
                if (!$var1)
                    nms_EntityPlayer_func_457_w($this.$thePlayer);
                $var2 = 1;
                if ($this.$objectMouseOver === null) {
                    if (!$var1 && !($this.$field_6327_b instanceof nms_PlayerControllerTest))
                        $this.$field_6282_S = 10;
                } else if ($this.$objectMouseOver.$typeOfHit == 1) {
                    if (!$var1)
                        nms_EntityPlayer_attackTargetEntityWithCurrentItem($this.$thePlayer, $this.$objectMouseOver.$entityHit);
                    if ($var1 == 1)
                        nms_EntityPlayerSP_func_6415_a_($this.$thePlayer, $this.$objectMouseOver.$entityHit);
                } else if (!$this.$objectMouseOver.$typeOfHit) {
                    $var3 = $this.$objectMouseOver.$blockX;
                    $var4 = $this.$objectMouseOver.$blockY;
                    $var5 = $this.$objectMouseOver.$blockZ;
                    $var6 = $this.$objectMouseOver.$sideHit;
                    nms_Block_$callClinit();
                    $var7 = nms_Block_blocksList.data[nms_World_getBlockId($this.$theWorld, $var3, $var4, $var5)];
                    if ($var1) {
                        $var8 = nms_InventoryPlayer_getCurrentItem($this.$thePlayer.$inventory0);
                        $var9 = $var8 === null ? 0 : $var8.$stackSize;
                        if (nms_PlayerController_sendPlaceBlock($this.$field_6327_b, $this.$thePlayer, $this.$theWorld, $var8, $var3, $var4, $var5, $var6)) {
                            $var2 = 0;
                            nms_EntityPlayer_func_457_w($this.$thePlayer);
                        }
                        if ($var8 === null)
                            return;
                        if (!$var8.$stackSize)
                            $this.$thePlayer.$inventory0.$mainInventory.data[$this.$thePlayer.$inventory0.$currentItem] = null;
                        else if ($var8.$stackSize != $var9)
                            nms_ItemRenderer_func_9449_b($this.$field_9243_r.$field_1395_a);
                    } else {
                        nms_World_onBlockHit($this.$theWorld, $var3, $var4, $var5, $this.$objectMouseOver.$sideHit);
                        if ($var7 !== nms_Block_bedrock)
                            break a;
                        if ($this.$thePlayer.$field_9371_f >= 100)
                            break a;
                    }
                }
                if ($var2 && $var1 == 1) {
                    $var10 = nms_InventoryPlayer_getCurrentItem($this.$thePlayer.$inventory0);
                    if ($var10 !== null && nms_PlayerController_sendUseItem($this.$field_6327_b, $this.$thePlayer, $this.$theWorld, $var10))
                        nms_ItemRenderer_func_9450_c($this.$field_9243_r.$field_1395_a);
                }
            }
            return;
        }
        $var7 = $this.$field_6327_b;
        $var9 = $this.$objectMouseOver.$sideHit;
        $ptr = 1;
    case 1:
        nms_PlayerControllerSP_clickBlock($var7, $var3, $var4, $var5, $var9);
        if ($rt_suspending()) {
            break main;
        }
        if ($var2 && $var1 == 1) {
            $var10 = nms_InventoryPlayer_getCurrentItem($this.$thePlayer.$inventory0);
            if ($var10 !== null && nms_PlayerController_sendUseItem($this.$field_6327_b, $this.$thePlayer, $this.$theWorld, $var10))
                nms_ItemRenderer_func_9450_c($this.$field_9243_r.$field_1395_a);
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var10, $ptr);
}
function nmc_Minecraft_resize($this, $var1, $var2) {
    var $var3, $var4, $var5;
    if ($var1 <= 0)
        $var1 = 1;
    if ($var2 <= 0)
        $var2 = 1;
    $this.$displayWidth = $var1;
    $this.$displayHeight = $var2;
    if ($this.$currentScreen !== null) {
        $var3 = nms_ScaledResolution__init_($var1, $var2);
        $var4 = $var3.$scaledWidth;
        $var5 = $var3.$scaledHeight;
        nms_GuiScreen_setWorldAndResolution($this.$currentScreen, $this, $var4, $var5);
    }
}
function nmc_Minecraft_clickMiddleMouseButton($this) {
    var $var1;
    if ($this.$objectMouseOver !== null) {
        $var1 = nms_World_getBlockId($this.$theWorld, $this.$objectMouseOver.$blockX, $this.$objectMouseOver.$blockY, $this.$objectMouseOver.$blockZ);
        nms_Block_$callClinit();
        if ($var1 == nms_Block_grass.$blockID)
            $var1 = nms_Block_dirt.$blockID;
        if ($var1 == nms_Block_stairDouble.$blockID)
            $var1 = nms_Block_stairSingle.$blockID;
        if ($var1 == nms_Block_bedrock.$blockID)
            $var1 = nms_Block_stone.$blockID;
        nms_InventoryPlayer_setCurrentItem($this.$thePlayer.$inventory0, $var1, $this.$field_6327_b instanceof nms_PlayerControllerTest);
    }
}
function nmc_Minecraft_runTick($this) {
    var $var3, var$2, var$3, $var4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var3 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nms_GuiIngame_func_555_a($this.$ingameGUI);
        nms_EntityRenderer_func_910_a($this.$field_9243_r, 1.0);
        if ($this.$thePlayer !== null)
            nms_EntityPlayerSP_func_6420_o($this.$thePlayer);
        if (!$this.$field_6316_m && $this.$theWorld !== null)
            nms_PlayerControllerSP_func_6474_c($this.$field_6327_b);
        $var3 = 3553;
        var$2 = $this.$renderEngine;
        var$3 = $rt_s(193);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var4 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var3, $var4);
        if ($this.$currentScreen === null && $this.$thePlayer !== null && $this.$thePlayer.$health <= 0)
            nmc_Minecraft_displayGuiScreen($this, null);
        if ($this.$currentScreen !== null)
            $this.$field_6302_aa = $this.$ticksRan + 10000 | 0;
        if ($this.$currentScreen !== null) {
            var$3 = $this.$currentScreen;
            $ptr = 2;
            continue main;
        }
        if ($this.$currentScreen !== null && !$this.$currentScreen.$field_948_f) {
            if ($this.$theWorld !== null) {
                if ($this.$thePlayer !== null) {
                    $this.$field_6300_ab = $this.$field_6300_ab + 1 | 0;
                    if ($this.$field_6300_ab == 30) {
                        $this.$field_6300_ab = 0;
                        nms_World_func_705_f($this.$theWorld, $this.$thePlayer);
                    }
                }
                $this.$theWorld.$difficultySetting = $this.$gameSettings.$difficulty;
                if (!$this.$field_6316_m)
                    nms_EntityRenderer_func_911_a($this.$field_9243_r);
                if (!$this.$field_6316_m)
                    nms_RenderGlobal_func_945_d($this.$field_6323_f);
                if (!$this.$field_6316_m) {
                    var$3 = $this.$theWorld;
                    $ptr = 5;
                    continue main;
                }
                if (!$this.$field_6316_m) {
                    var$3 = $this.$theWorld;
                    $ptr = 8;
                    continue main;
                }
                if (!$this.$field_6316_m && $this.$theWorld !== null)
                    nms_World_randomDisplayUpdates($this.$theWorld, nms_MathHelper_floor_double($this.$thePlayer.$posX), nms_MathHelper_floor_double($this.$thePlayer.$posY), nms_MathHelper_floor_double($this.$thePlayer.$posZ));
                if (!$this.$field_6316_m)
                    nms_EffectRenderer_func_1193_a($this.$field_6321_h);
            }
            $this.$field_6287_N = jl_System_currentTimeMillis();
            return;
        }
        a: while (true) {
            if (!oli_Mouse_next()) {
                if ($this.$field_6282_S > 0)
                    $this.$field_6282_S = $this.$field_6282_S - 1 | 0;
                while (oli_Keyboard_next()) {
                    nms_EntityPlayerSP_func_460_a($this.$thePlayer, nlea_EaglerAdapterImpl2_getEventKey(), nlea_EaglerAdapterImpl2_getEventKeyState());
                    if (!nlea_EaglerAdapterImpl2_getEventKeyState())
                        continue;
                    if ($this.$currentScreen !== null)
                        nms_GuiScreen_handleKeyboardInput($this.$currentScreen);
                    else {
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 1)
                            nmc_Minecraft_func_6252_g($this);
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(6))
                            $this.$gameSettings.$thirdPersonView = $this.$gameSettings.$thirdPersonView ? 0 : 1;
                        if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindInventory.$keyCode)
                            nmc_Minecraft_displayGuiScreen($this, nms_GuiInventory__init_($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$craftingInventory));
                        if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindDrop.$keyCode)
                            nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$thePlayer, nms_InventoryPlayer_decrStackSize($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$currentItem, 1), 0);
                    }
                    $var4 = 0;
                    while ($var4 < 9) {
                        if (nlea_EaglerAdapterImpl2_getEventKey() == (2 + $var4 | 0))
                            $this.$thePlayer.$inventory0.$currentItem = $var4;
                        $var4 = $var4 + 1 | 0;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() != $this.$gameSettings.$keyBindToggleFog.$keyCode)
                        continue;
                    nms_GameSettings_setOptionValue($this.$gameSettings, 4, !nlea_EaglerAdapterImpl2_isKeyDown(42) && !nlea_EaglerAdapterImpl2_isKeyDown(54) ? 1 : (-1));
                }
                if ($this.$currentScreen === null) {
                    if (oli_Mouse_isButtonDown(0) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                        $var3 = 0;
                        $ptr = 7;
                        continue main;
                    }
                    if (oli_Mouse_isButtonDown(1) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                        $var3 = 1;
                        $ptr = 10;
                        continue main;
                    }
                }
                $var3 = 0;
                $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
                $ptr = 4;
                continue main;
            }
            if (Long_gt(Long_sub(jl_System_currentTimeMillis(), $this.$field_6287_N), Long_fromInt(200)))
                continue;
            $var3 = oli_Mouse_getEventDWheel();
            if ($var3)
                nms_InventoryPlayer_changeCurrentItem($this.$thePlayer.$inventory0, $var3);
            b: {
                if ($this.$currentScreen !== null) {
                    if ($this.$currentScreen === null)
                        break b;
                    else {
                        var$3 = $this.$currentScreen;
                        $ptr = 3;
                        continue main;
                    }
                }
                if (!$this.$field_6289_L && oli_Mouse_getEventButtonState())
                    nmc_Minecraft_func_6259_e($this);
                else {
                    if (!oli_Mouse_getEventButton() && oli_Mouse_getEventButtonState()) {
                        $var3 = 0;
                        $ptr = 6;
                        continue main;
                    }
                    if (oli_Mouse_getEventButton() == 1 && oli_Mouse_getEventButtonState())
                        break a;
                    if (oli_Mouse_getEventButton() == 2 && oli_Mouse_getEventButtonState())
                        nmc_Minecraft_clickMiddleMouseButton($this);
                }
            }
        }
        $var3 = 1;
        $ptr = 9;
        continue main;
    case 2:
        nms_GuiScreen_handleInput(var$3);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$currentScreen !== null)
            $this.$currentScreen.$updateScreen();
        if ($this.$currentScreen !== null && !$this.$currentScreen.$field_948_f) {
            if ($this.$theWorld !== null) {
                if ($this.$thePlayer !== null) {
                    $this.$field_6300_ab = $this.$field_6300_ab + 1 | 0;
                    if ($this.$field_6300_ab == 30) {
                        $this.$field_6300_ab = 0;
                        nms_World_func_705_f($this.$theWorld, $this.$thePlayer);
                    }
                }
                $this.$theWorld.$difficultySetting = $this.$gameSettings.$difficulty;
                if (!$this.$field_6316_m)
                    nms_EntityRenderer_func_911_a($this.$field_9243_r);
                if (!$this.$field_6316_m)
                    nms_RenderGlobal_func_945_d($this.$field_6323_f);
                if (!$this.$field_6316_m) {
                    var$3 = $this.$theWorld;
                    $ptr = 5;
                    continue main;
                }
                if (!$this.$field_6316_m) {
                    var$3 = $this.$theWorld;
                    $ptr = 8;
                    continue main;
                }
                if (!$this.$field_6316_m && $this.$theWorld !== null)
                    nms_World_randomDisplayUpdates($this.$theWorld, nms_MathHelper_floor_double($this.$thePlayer.$posX), nms_MathHelper_floor_double($this.$thePlayer.$posY), nms_MathHelper_floor_double($this.$thePlayer.$posZ));
                if (!$this.$field_6316_m)
                    nms_EffectRenderer_func_1193_a($this.$field_6321_h);
            }
            $this.$field_6287_N = jl_System_currentTimeMillis();
            return;
        }
        c: while (true) {
            if (!oli_Mouse_next()) {
                if ($this.$field_6282_S > 0)
                    $this.$field_6282_S = $this.$field_6282_S - 1 | 0;
                while (oli_Keyboard_next()) {
                    nms_EntityPlayerSP_func_460_a($this.$thePlayer, nlea_EaglerAdapterImpl2_getEventKey(), nlea_EaglerAdapterImpl2_getEventKeyState());
                    if (!nlea_EaglerAdapterImpl2_getEventKeyState())
                        continue;
                    if ($this.$currentScreen !== null)
                        nms_GuiScreen_handleKeyboardInput($this.$currentScreen);
                    else {
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 1)
                            nmc_Minecraft_func_6252_g($this);
                        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(6))
                            $this.$gameSettings.$thirdPersonView = $this.$gameSettings.$thirdPersonView ? 0 : 1;
                        if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindInventory.$keyCode)
                            nmc_Minecraft_displayGuiScreen($this, nms_GuiInventory__init_($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$craftingInventory));
                        if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindDrop.$keyCode)
                            nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$thePlayer, nms_InventoryPlayer_decrStackSize($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$currentItem, 1), 0);
                    }
                    $var4 = 0;
                    while ($var4 < 9) {
                        if (nlea_EaglerAdapterImpl2_getEventKey() == (2 + $var4 | 0))
                            $this.$thePlayer.$inventory0.$currentItem = $var4;
                        $var4 = $var4 + 1 | 0;
                    }
                    if (nlea_EaglerAdapterImpl2_getEventKey() != $this.$gameSettings.$keyBindToggleFog.$keyCode)
                        continue;
                    nms_GameSettings_setOptionValue($this.$gameSettings, 4, !nlea_EaglerAdapterImpl2_isKeyDown(42) && !nlea_EaglerAdapterImpl2_isKeyDown(54) ? 1 : (-1));
                }
                if ($this.$currentScreen === null) {
                    if (oli_Mouse_isButtonDown(0) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                        $var3 = 0;
                        $ptr = 7;
                        continue main;
                    }
                    if (oli_Mouse_isButtonDown(1) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                        $var3 = 1;
                        $ptr = 10;
                        continue main;
                    }
                }
                $var3 = 0;
                $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
                $ptr = 4;
                continue main;
            }
            if (Long_gt(Long_sub(jl_System_currentTimeMillis(), $this.$field_6287_N), Long_fromInt(200)))
                continue;
            $var3 = oli_Mouse_getEventDWheel();
            if ($var3)
                nms_InventoryPlayer_changeCurrentItem($this.$thePlayer.$inventory0, $var3);
            d: {
                if ($this.$currentScreen !== null) {
                    if ($this.$currentScreen === null)
                        break d;
                    else {
                        var$3 = $this.$currentScreen;
                        $ptr = 3;
                        continue main;
                    }
                }
                if (!$this.$field_6289_L && oli_Mouse_getEventButtonState())
                    nmc_Minecraft_func_6259_e($this);
                else {
                    if (!oli_Mouse_getEventButton() && oli_Mouse_getEventButtonState()) {
                        $var3 = 0;
                        $ptr = 6;
                        continue main;
                    }
                    if (oli_Mouse_getEventButton() == 1 && oli_Mouse_getEventButtonState())
                        break c;
                    if (oli_Mouse_getEventButton() == 2 && oli_Mouse_getEventButtonState())
                        nmc_Minecraft_clickMiddleMouseButton($this);
                }
            }
        }
        $var3 = 1;
        $ptr = 9;
        continue main;
    case 3:
        nms_GuiScreen_handleMouseInput(var$3);
        if ($rt_suspending()) {
            break main;
        }
        while (true) {
            while (true) {
                if (!oli_Mouse_next()) {
                    if ($this.$field_6282_S > 0)
                        $this.$field_6282_S = $this.$field_6282_S - 1 | 0;
                    while (oli_Keyboard_next()) {
                        nms_EntityPlayerSP_func_460_a($this.$thePlayer, nlea_EaglerAdapterImpl2_getEventKey(), nlea_EaglerAdapterImpl2_getEventKeyState());
                        if (!nlea_EaglerAdapterImpl2_getEventKeyState())
                            continue;
                        if ($this.$currentScreen !== null)
                            nms_GuiScreen_handleKeyboardInput($this.$currentScreen);
                        else {
                            if (nlea_EaglerAdapterImpl2_getEventKey() == 1)
                                nmc_Minecraft_func_6252_g($this);
                            if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(6))
                                $this.$gameSettings.$thirdPersonView = $this.$gameSettings.$thirdPersonView ? 0 : 1;
                            if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindInventory.$keyCode)
                                nmc_Minecraft_displayGuiScreen($this, nms_GuiInventory__init_($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$craftingInventory));
                            if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindDrop.$keyCode)
                                nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$thePlayer, nms_InventoryPlayer_decrStackSize($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$currentItem, 1), 0);
                        }
                        $var4 = 0;
                        while ($var4 < 9) {
                            if (nlea_EaglerAdapterImpl2_getEventKey() == (2 + $var4 | 0))
                                $this.$thePlayer.$inventory0.$currentItem = $var4;
                            $var4 = $var4 + 1 | 0;
                        }
                        if (nlea_EaglerAdapterImpl2_getEventKey() != $this.$gameSettings.$keyBindToggleFog.$keyCode)
                            continue;
                        nms_GameSettings_setOptionValue($this.$gameSettings, 4, !nlea_EaglerAdapterImpl2_isKeyDown(42) && !nlea_EaglerAdapterImpl2_isKeyDown(54) ? 1 : (-1));
                    }
                    if ($this.$currentScreen === null) {
                        if (oli_Mouse_isButtonDown(0) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                            $var3 = 0;
                            $ptr = 7;
                            continue main;
                        }
                        if (oli_Mouse_isButtonDown(1) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                            $var3 = 1;
                            $ptr = 10;
                            continue main;
                        }
                    }
                    $var3 = 0;
                    $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
                    $ptr = 4;
                    continue main;
                }
                if (Long_gt(Long_sub(jl_System_currentTimeMillis(), $this.$field_6287_N), Long_fromInt(200)))
                    continue;
                else
                    break;
            }
            $var3 = oli_Mouse_getEventDWheel();
            if ($var3)
                nms_InventoryPlayer_changeCurrentItem($this.$thePlayer.$inventory0, $var3);
            if ($this.$currentScreen !== null) {
                if ($this.$currentScreen === null)
                    continue;
                else {
                    var$3 = $this.$currentScreen;
                    continue main;
                }
            }
            if (!$this.$field_6289_L && oli_Mouse_getEventButtonState()) {
                nmc_Minecraft_func_6259_e($this);
                continue;
            }
            if (!oli_Mouse_getEventButton() && oli_Mouse_getEventButtonState()) {
                $var3 = 0;
                $ptr = 6;
                continue main;
            }
            if (oli_Mouse_getEventButton() == 1 && oli_Mouse_getEventButtonState())
                break;
            if (oli_Mouse_getEventButton() != 2)
                continue;
            if (!oli_Mouse_getEventButtonState())
                continue;
            nmc_Minecraft_clickMiddleMouseButton($this);
        }
        $var3 = 1;
        $ptr = 9;
        continue main;
    case 4:
        nmc_Minecraft_func_6254_a($this, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$theWorld !== null) {
            if ($this.$thePlayer !== null) {
                $this.$field_6300_ab = $this.$field_6300_ab + 1 | 0;
                if ($this.$field_6300_ab == 30) {
                    $this.$field_6300_ab = 0;
                    nms_World_func_705_f($this.$theWorld, $this.$thePlayer);
                }
            }
            $this.$theWorld.$difficultySetting = $this.$gameSettings.$difficulty;
            if (!$this.$field_6316_m)
                nms_EntityRenderer_func_911_a($this.$field_9243_r);
            if (!$this.$field_6316_m)
                nms_RenderGlobal_func_945_d($this.$field_6323_f);
            if (!$this.$field_6316_m) {
                var$3 = $this.$theWorld;
                $ptr = 5;
                continue main;
            }
            if (!$this.$field_6316_m) {
                var$3 = $this.$theWorld;
                $ptr = 8;
                continue main;
            }
            if (!$this.$field_6316_m && $this.$theWorld !== null)
                nms_World_randomDisplayUpdates($this.$theWorld, nms_MathHelper_floor_double($this.$thePlayer.$posX), nms_MathHelper_floor_double($this.$thePlayer.$posY), nms_MathHelper_floor_double($this.$thePlayer.$posZ));
            if (!$this.$field_6316_m)
                nms_EffectRenderer_func_1193_a($this.$field_6321_h);
        }
        $this.$field_6287_N = jl_System_currentTimeMillis();
        return;
    case 5:
        nms_World_func_633_c(var$3);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$field_6316_m) {
            if (!$this.$field_6316_m && $this.$theWorld !== null)
                nms_World_randomDisplayUpdates($this.$theWorld, nms_MathHelper_floor_double($this.$thePlayer.$posX), nms_MathHelper_floor_double($this.$thePlayer.$posY), nms_MathHelper_floor_double($this.$thePlayer.$posZ));
            if (!$this.$field_6316_m)
                nms_EffectRenderer_func_1193_a($this.$field_6321_h);
            $this.$field_6287_N = jl_System_currentTimeMillis();
            return;
        }
        var$3 = $this.$theWorld;
        $ptr = 8;
        continue main;
    case 6:
        nmc_Minecraft_clickMouse($this, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_6302_aa = $this.$ticksRan;
        while (true) {
            if (oli_Mouse_getEventButton() == 1 && oli_Mouse_getEventButtonState()) {
                $var3 = 1;
                $ptr = 9;
                continue main;
            }
            if (oli_Mouse_getEventButton() == 2 && oli_Mouse_getEventButtonState())
                nmc_Minecraft_clickMiddleMouseButton($this);
            while (true) {
                while (true) {
                    if (!oli_Mouse_next()) {
                        if ($this.$field_6282_S > 0)
                            $this.$field_6282_S = $this.$field_6282_S - 1 | 0;
                        while (oli_Keyboard_next()) {
                            nms_EntityPlayerSP_func_460_a($this.$thePlayer, nlea_EaglerAdapterImpl2_getEventKey(), nlea_EaglerAdapterImpl2_getEventKeyState());
                            if (!nlea_EaglerAdapterImpl2_getEventKeyState())
                                continue;
                            if ($this.$currentScreen !== null)
                                nms_GuiScreen_handleKeyboardInput($this.$currentScreen);
                            else {
                                if (nlea_EaglerAdapterImpl2_getEventKey() == 1)
                                    nmc_Minecraft_func_6252_g($this);
                                if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(6))
                                    $this.$gameSettings.$thirdPersonView = $this.$gameSettings.$thirdPersonView ? 0 : 1;
                                if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindInventory.$keyCode)
                                    nmc_Minecraft_displayGuiScreen($this, nms_GuiInventory__init_($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$craftingInventory));
                                if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindDrop.$keyCode)
                                    nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$thePlayer, nms_InventoryPlayer_decrStackSize($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$currentItem, 1), 0);
                            }
                            $var4 = 0;
                            while ($var4 < 9) {
                                if (nlea_EaglerAdapterImpl2_getEventKey() == (2 + $var4 | 0))
                                    $this.$thePlayer.$inventory0.$currentItem = $var4;
                                $var4 = $var4 + 1 | 0;
                            }
                            if (nlea_EaglerAdapterImpl2_getEventKey() != $this.$gameSettings.$keyBindToggleFog.$keyCode)
                                continue;
                            nms_GameSettings_setOptionValue($this.$gameSettings, 4, !nlea_EaglerAdapterImpl2_isKeyDown(42) && !nlea_EaglerAdapterImpl2_isKeyDown(54) ? 1 : (-1));
                        }
                        if ($this.$currentScreen === null) {
                            if (oli_Mouse_isButtonDown(0) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                                $var3 = 0;
                                $ptr = 7;
                                continue main;
                            }
                            if (oli_Mouse_isButtonDown(1) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                                $var3 = 1;
                                $ptr = 10;
                                continue main;
                            }
                        }
                        $var3 = 0;
                        $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
                        $ptr = 4;
                        continue main;
                    }
                    if (Long_gt(Long_sub(jl_System_currentTimeMillis(), $this.$field_6287_N), Long_fromInt(200)))
                        continue;
                    else
                        break;
                }
                $var3 = oli_Mouse_getEventDWheel();
                if ($var3)
                    nms_InventoryPlayer_changeCurrentItem($this.$thePlayer.$inventory0, $var3);
                if ($this.$currentScreen !== null) {
                    if ($this.$currentScreen === null)
                        continue;
                    else {
                        var$3 = $this.$currentScreen;
                        $ptr = 3;
                        continue main;
                    }
                }
                if ($this.$field_6289_L)
                    break;
                if (!oli_Mouse_getEventButtonState())
                    break;
                nmc_Minecraft_func_6259_e($this);
            }
            if (oli_Mouse_getEventButton())
                continue;
            if (!oli_Mouse_getEventButtonState())
                continue;
            else
                break;
        }
        $var3 = 0;
        continue main;
    case 7:
        nmc_Minecraft_clickMouse($this, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_6302_aa = $this.$ticksRan;
        if (oli_Mouse_isButtonDown(1) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
            $var3 = 1;
            $ptr = 10;
            continue main;
        }
        $var3 = 0;
        $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
        $ptr = 4;
        continue main;
    case 8:
        nms_World_tick(var$3);
        if ($rt_suspending()) {
            break main;
        }
        if (!$this.$field_6316_m && $this.$theWorld !== null)
            nms_World_randomDisplayUpdates($this.$theWorld, nms_MathHelper_floor_double($this.$thePlayer.$posX), nms_MathHelper_floor_double($this.$thePlayer.$posY), nms_MathHelper_floor_double($this.$thePlayer.$posZ));
        if (!$this.$field_6316_m)
            nms_EffectRenderer_func_1193_a($this.$field_6321_h);
        $this.$field_6287_N = jl_System_currentTimeMillis();
        return;
    case 9:
        nmc_Minecraft_clickMouse($this, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_6302_aa = $this.$ticksRan;
        while (true) {
            if (oli_Mouse_getEventButton() == 2 && oli_Mouse_getEventButtonState())
                nmc_Minecraft_clickMiddleMouseButton($this);
            while (true) {
                while (true) {
                    if (!oli_Mouse_next()) {
                        if ($this.$field_6282_S > 0)
                            $this.$field_6282_S = $this.$field_6282_S - 1 | 0;
                        while (oli_Keyboard_next()) {
                            nms_EntityPlayerSP_func_460_a($this.$thePlayer, nlea_EaglerAdapterImpl2_getEventKey(), nlea_EaglerAdapterImpl2_getEventKeyState());
                            if (!nlea_EaglerAdapterImpl2_getEventKeyState())
                                continue;
                            if ($this.$currentScreen !== null)
                                nms_GuiScreen_handleKeyboardInput($this.$currentScreen);
                            else {
                                if (nlea_EaglerAdapterImpl2_getEventKey() == 1)
                                    nmc_Minecraft_func_6252_g($this);
                                if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(6))
                                    $this.$gameSettings.$thirdPersonView = $this.$gameSettings.$thirdPersonView ? 0 : 1;
                                if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindInventory.$keyCode)
                                    nmc_Minecraft_displayGuiScreen($this, nms_GuiInventory__init_($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$craftingInventory));
                                if (nlea_EaglerAdapterImpl2_getEventKey() == $this.$gameSettings.$keyBindDrop.$keyCode)
                                    nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$thePlayer, nms_InventoryPlayer_decrStackSize($this.$thePlayer.$inventory0, $this.$thePlayer.$inventory0.$currentItem, 1), 0);
                            }
                            $var4 = 0;
                            while ($var4 < 9) {
                                if (nlea_EaglerAdapterImpl2_getEventKey() == (2 + $var4 | 0))
                                    $this.$thePlayer.$inventory0.$currentItem = $var4;
                                $var4 = $var4 + 1 | 0;
                            }
                            if (nlea_EaglerAdapterImpl2_getEventKey() != $this.$gameSettings.$keyBindToggleFog.$keyCode)
                                continue;
                            nms_GameSettings_setOptionValue($this.$gameSettings, 4, !nlea_EaglerAdapterImpl2_isKeyDown(42) && !nlea_EaglerAdapterImpl2_isKeyDown(54) ? 1 : (-1));
                        }
                        if ($this.$currentScreen === null) {
                            if (oli_Mouse_isButtonDown(0) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                                $var3 = 0;
                                $ptr = 7;
                                continue main;
                            }
                            if (oli_Mouse_isButtonDown(1) && ($this.$ticksRan - $this.$field_6302_aa | 0) >= $this.$timer.$ticksPerSecond / 4.0 && $this.$field_6289_L) {
                                $var3 = 1;
                                $ptr = 10;
                                continue main;
                            }
                        }
                        $var3 = 0;
                        $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
                        $ptr = 4;
                        continue main;
                    }
                    if (Long_gt(Long_sub(jl_System_currentTimeMillis(), $this.$field_6287_N), Long_fromInt(200)))
                        continue;
                    else
                        break;
                }
                $var3 = oli_Mouse_getEventDWheel();
                if ($var3)
                    nms_InventoryPlayer_changeCurrentItem($this.$thePlayer.$inventory0, $var3);
                if ($this.$currentScreen !== null) {
                    if ($this.$currentScreen === null)
                        continue;
                    else {
                        var$3 = $this.$currentScreen;
                        $ptr = 3;
                        continue main;
                    }
                }
                if ($this.$field_6289_L)
                    break;
                if (!oli_Mouse_getEventButtonState())
                    break;
                nmc_Minecraft_func_6259_e($this);
            }
            if (!oli_Mouse_getEventButton() && oli_Mouse_getEventButtonState()) {
                $var3 = 0;
                $ptr = 6;
                continue main;
            }
            if (oli_Mouse_getEventButton() != 1)
                continue;
            if (!oli_Mouse_getEventButtonState())
                continue;
            else
                break;
        }
        $var3 = 1;
        continue main;
    case 10:
        nmc_Minecraft_clickMouse($this, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_6302_aa = $this.$ticksRan;
        $var3 = 0;
        $var4 = $this.$currentScreen === null && oli_Mouse_isButtonDown(0) && $this.$field_6289_L ? 1 : 0;
        $ptr = 4;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var3, var$2, var$3, $var4, $ptr);
}
function nmc_Minecraft_func_6247_b($this, $var1) {
    var var$2, $var2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = null;
        $ptr = 1;
    case 1:
        nmc_Minecraft_func_6261_a($this, var$2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = nms_World__init_($rt_s(194), $var1, ju_Random_nextLong(new ju_Random), null);
        if (!$var2.$field_1033_r) {
            $var1 = $rt_s(195);
            $ptr = 2;
            continue main;
        }
        $var1 = $rt_s(196);
        $ptr = 3;
        continue main;
    case 2:
        nmc_Minecraft_func_6263_a($this, $var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    case 3:
        nmc_Minecraft_func_6263_a($this, $var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $var2, $ptr);
}
function nmc_Minecraft_func_6237_k($this) {
    var $var1, $var3, $var7, var$4, var$5, var$6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$var7 = $thread.pop();$var3 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$thePlayer.$dimension != (-1))
            $this.$thePlayer.$dimension = (-1);
        else
            $this.$thePlayer.$dimension = 0;
        nms_World_setEntityDead($this.$theWorld, $this.$thePlayer);
        $this.$thePlayer.$isDead = 0;
        $var1 = $this.$thePlayer.$posX;
        $var3 = $this.$thePlayer.$posZ;
        if ($this.$thePlayer.$dimension != (-1)) {
            $var1 = $var1 * 8.0;
            $var3 = $var3 * 8.0;
            nms_Entity_setLocationAndAngles($this.$thePlayer, $var1, $this.$thePlayer.$posY, $var3, $this.$thePlayer.$rotationYaw, $this.$thePlayer.$rotationPitch);
            $var7 = $this.$theWorld;
            var$4 = $this.$thePlayer;
            var$5 = 0;
            $ptr = 1;
            continue main;
        }
        $var1 = $var1 / 8.0;
        $var3 = $var3 / 8.0;
        nms_Entity_setLocationAndAngles($this.$thePlayer, $var1, $this.$thePlayer.$posY, $var3, $this.$thePlayer.$rotationYaw, $this.$thePlayer.$rotationPitch);
        $var7 = $this.$theWorld;
        var$4 = $this.$thePlayer;
        var$5 = 0;
        $ptr = 3;
        continue main;
    case 1:
        nms_World_func_4084_a($var7, var$4, var$5);
        if ($rt_suspending()) {
            break main;
        }
        $var7 = nms_World__init_0($this.$theWorld, nms_WorldProvider__init_0());
        var$4 = $rt_s(197);
        var$6 = $this.$thePlayer;
        $ptr = 2;
    case 2:
        nmc_Minecraft_func_6256_a($this, $var7, var$4, var$6);
        if ($rt_suspending()) {
            break main;
        }
        $this.$thePlayer.$worldObj0 = $this.$theWorld;
        nms_Entity_setLocationAndAngles($this.$thePlayer, $var1, $this.$thePlayer.$posY, $var3, $this.$thePlayer.$rotationYaw, $this.$thePlayer.$rotationPitch);
        $var7 = $this.$theWorld;
        var$4 = $this.$thePlayer;
        var$5 = 0;
        $ptr = 5;
        continue main;
    case 3:
        nms_World_func_4084_a($var7, var$4, var$5);
        if ($rt_suspending()) {
            break main;
        }
        $var7 = new nms_World;
        var$4 = $this.$theWorld;
        var$6 = new nms_WorldProviderHell;
        nms_WorldProvider__init_(var$6);
        nms_World__init_1($var7, var$4, var$6);
        var$4 = $rt_s(198);
        var$6 = $this.$thePlayer;
        $ptr = 4;
    case 4:
        nmc_Minecraft_func_6256_a($this, $var7, var$4, var$6);
        if ($rt_suspending()) {
            break main;
        }
        $this.$thePlayer.$worldObj0 = $this.$theWorld;
        nms_Entity_setLocationAndAngles($this.$thePlayer, $var1, $this.$thePlayer.$posY, $var3, $this.$thePlayer.$rotationYaw, $this.$thePlayer.$rotationPitch);
        $var7 = $this.$theWorld;
        var$4 = $this.$thePlayer;
        var$5 = 0;
        $ptr = 5;
    case 5:
        nms_World_func_4084_a($var7, var$4, var$5);
        if ($rt_suspending()) {
            break main;
        }
        nms_Teleporter_func_4107_a(nms_Teleporter__init_0(), $this.$theWorld, $this.$thePlayer);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var3, $var7, var$4, var$5, var$6, $ptr);
}
function nmc_Minecraft_func_6261_a($this, $var1) {
    var var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = $rt_s(17);
        $ptr = 1;
    case 1:
        nmc_Minecraft_func_6263_a($this, $var1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $ptr);
}
function nmc_Minecraft_func_6263_a($this, $var1, $var2) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$3 = null;
        $ptr = 1;
    case 1:
        nmc_Minecraft_func_6256_a($this, $var1, $var2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nmc_Minecraft_func_6256_a($this, $var1, $var2, $var3) {
    var var$4, var$5, var$6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nms_LoadingScreenRenderer_func_596_a($this.$loadingScreen, $var2);
        var$4 = $this.$loadingScreen;
        var$5 = $rt_s(17);
        $ptr = 1;
    case 1:
        nms_LoadingScreenRenderer_displayLoadingString(var$4, var$5);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$theWorld !== null) {
            var$4 = $this.$theWorld;
            var$5 = $this.$loadingScreen;
            $ptr = 2;
            continue main;
        }
        $this.$theWorld = $var1;
        var$6 = jl_System_out();
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        ji_PrintStream_println(var$6, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(199)), $this.$thePlayer)));
        if ($var1 === null) {
            $this.$thePlayer = null;
            $this.$field_6287_N = Long_ZERO;
            return;
        }
        if ($var3 === null)
            $this.$thePlayer = null;
        $ptr = 3;
        continue main;
    case 2:
        nms_World_func_651_a(var$4, var$5);
        if ($rt_suspending()) {
            break main;
        }
        $this.$theWorld = $var1;
        var$6 = jl_System_out();
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        ji_PrintStream_println(var$6, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(199)), $this.$thePlayer)));
        if ($var1 === null) {
            $this.$thePlayer = null;
            $this.$field_6287_N = Long_ZERO;
            return;
        }
        if ($var3 === null)
            $this.$thePlayer = null;
        $ptr = 3;
    case 3:
        nmc_Minecraft_func_6255_d($this, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        ji_PrintStream_println($var2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(200)), $this.$thePlayer)));
        if ($this.$thePlayer === null) {
            $this.$thePlayer = nms_PlayerController_func_4087_b($this.$field_6327_b, $var1);
            nms_EntityPlayer_preparePlayerToSpawn($this.$thePlayer);
            nms_PlayerControllerSP_flipPlayer($this.$field_6327_b, $this.$thePlayer);
        }
        $this.$thePlayer.$field_787_a = nms_MovementInputFromOptions__init_($this.$gameSettings);
        if ($this.$field_6323_f !== null)
            nms_RenderGlobal_func_946_a($this.$field_6323_f, $var1);
        if ($this.$field_6321_h !== null)
            nms_EffectRenderer_func_1188_a($this.$field_6321_h, $var1);
        nms_World_func_608_a($var1, $this.$thePlayer);
        if (!$var1.$field_1033_r) {
            $this.$field_6287_N = Long_ZERO;
            return;
        }
        $var2 = $this.$loadingScreen;
        $ptr = 4;
    case 4:
        nms_World_func_651_a($var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_6287_N = Long_ZERO;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, var$5, var$6, $ptr);
}
function nmc_Minecraft_func_6255_d($this, $var1) {
    var var$2, $var2, var$4, var$5, $var5, $var6, $var7, $var8, var$10, $var3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();var$10 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$var2 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nms_LoadingScreenRenderer_func_596_a($this.$loadingScreen, $var1);
        $var1 = $this.$loadingScreen;
        var$2 = $rt_s(201);
        $ptr = 1;
    case 1:
        nms_LoadingScreenRenderer_displayLoadingString($var1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = 128;
        var$4 = 289;
        var$5 = (-128);
        $var5 = var$5;
        while ($var5 <= $var2) {
            $var6 = $this.$theWorld.$spawnX;
            $var7 = $this.$theWorld.$spawnZ;
            if ($this.$thePlayer !== null) {
                $var6 = $this.$thePlayer.$posX | 0;
                $var7 = $this.$thePlayer.$posZ | 0;
            }
            $var8 = var$5;
            if ($var8 <= $var2) {
                $var1 = $this.$loadingScreen;
                var$10 = 0 + 1 | 0;
                $var3 = (0 * 100 | 0) / var$4 | 0;
                $ptr = 3;
                continue main;
            }
            $var5 = $var5 + 16 | 0;
        }
        $var1 = $this.$loadingScreen;
        var$2 = $rt_s(202);
        $ptr = 2;
    case 2:
        nms_LoadingScreenRenderer_displayLoadingString($var1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        nms_World_func_656_j($this.$theWorld);
        return;
    case 3:
        nms_LoadingScreenRenderer_setLoadingProgress($var1, $var3);
        if ($rt_suspending()) {
            break main;
        }
        nms_World_getBlockId($this.$theWorld, $var6 + $var5 | 0, 64, $var7 + $var8 | 0);
        while (nms_World_func_6465_g($this.$theWorld)) {
        }
        $var8 = $var8 + 16 | 0;
        $var3 = var$10;
        while (true) {
            if ($var8 <= $var2) {
                $var1 = $this.$loadingScreen;
                var$10 = $var3 + 1 | 0;
                $var3 = ($var3 * 100 | 0) / var$4 | 0;
                continue main;
            }
            $var5 = $var5 + 16 | 0;
            if ($var5 > $var2)
                break;
            $var6 = $this.$theWorld.$spawnX;
            $var7 = $this.$theWorld.$spawnZ;
            if ($this.$thePlayer !== null) {
                $var6 = $this.$thePlayer.$posX | 0;
                $var7 = $this.$thePlayer.$posZ | 0;
            }
            $var8 = var$5;
        }
        $var1 = $this.$loadingScreen;
        var$2 = $rt_s(202);
        $ptr = 2;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $var2, var$4, var$5, $var5, $var6, $var7, $var8, var$10, $var3, $ptr);
}
function nmc_Minecraft_func_6241_m($this) {
    return nms_RenderGlobal_func_953_b($this.$field_6323_f);
}
function nmc_Minecraft_func_6262_n($this) {
    return nms_RenderGlobal_func_957_c($this.$field_6323_f);
}
function nmc_Minecraft_func_6245_o($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$1, $rt_s(203)), nms_EffectRenderer_func_1190_b($this.$field_6321_h)), $rt_s(204)), nms_World_func_687_d($this.$theWorld)));
}
function nmc_Minecraft_respawn($this) {
    var $var1, var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!$this.$theWorld.$worldProvider.$func_6477_d()) {
            $ptr = 1;
            continue main;
        }
        nms_World_func_4076_b($this.$theWorld);
        nms_World_func_9424_o($this.$theWorld);
        $var1 = 0;
        if ($this.$thePlayer !== null) {
            $var1 = $this.$thePlayer.$field_620_ab;
            nms_World_setEntityDead($this.$theWorld, $this.$thePlayer);
        }
        $this.$thePlayer = nms_PlayerController_func_4087_b($this.$field_6327_b, $this.$theWorld);
        nms_EntityPlayer_preparePlayerToSpawn($this.$thePlayer);
        nms_PlayerControllerSP_flipPlayer($this.$field_6327_b, $this.$thePlayer);
        nms_World_func_608_a($this.$theWorld, $this.$thePlayer);
        $this.$thePlayer.$field_787_a = nms_MovementInputFromOptions__init_($this.$gameSettings);
        $this.$thePlayer.$field_620_ab = $var1;
        var$2 = $rt_s(205);
        $ptr = 2;
        continue main;
    case 1:
        nmc_Minecraft_func_6237_k($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_World_func_4076_b($this.$theWorld);
        nms_World_func_9424_o($this.$theWorld);
        $var1 = 0;
        if ($this.$thePlayer !== null) {
            $var1 = $this.$thePlayer.$field_620_ab;
            nms_World_setEntityDead($this.$theWorld, $this.$thePlayer);
        }
        $this.$thePlayer = nms_PlayerController_func_4087_b($this.$field_6327_b, $this.$theWorld);
        nms_EntityPlayer_preparePlayerToSpawn($this.$thePlayer);
        nms_PlayerControllerSP_flipPlayer($this.$field_6327_b, $this.$thePlayer);
        nms_World_func_608_a($this.$theWorld, $this.$thePlayer);
        $this.$thePlayer.$field_787_a = nms_MovementInputFromOptions__init_($this.$gameSettings);
        $this.$thePlayer.$field_620_ab = $var1;
        var$2 = $rt_s(205);
        $ptr = 2;
    case 2:
        nmc_Minecraft_func_6255_d($this, var$2);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$currentScreen instanceof nms_GuiGameOver)
            nmc_Minecraft_displayGuiScreen($this, null);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $ptr);
}
function nmc_Minecraft__clinit_() {
    nmc_Minecraft_field_9240_E = $rt_createLongArray(512);
    nmc_Minecraft_field_9239_F = $rt_createLongArray(512);
    nmc_Minecraft_field_9238_G = 0;
}
function nms_Session() {
    jl_Object.call(this);
    this.$inventory = null;
}
var nms_Session_registeredBlocksList = null;
function nms_Session_$callClinit() {
    nms_Session_$callClinit = $rt_eraseClinit(nms_Session);
    nms_Session__clinit_();
}
function nms_Session__clinit_() {
    var var$1;
    nms_Session_registeredBlocksList = ju_ArrayList__init_0();
    var$1 = nms_Session_registeredBlocksList;
    nms_Block_$callClinit();
    ju_ArrayList_add(var$1, nms_Block_stone);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_cobblestone);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_brick);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_dirt);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_planks);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_wood);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_leaves);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_torchWood);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_stairSingle);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_glass);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_cobblestoneMossy);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_sapling);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_plantYellow);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_plantRed);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_mushroomBrown);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_mushroomRed);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_sand);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_gravel);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_sponge);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_cloth);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_oreCoal);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_oreIron);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_oreGold);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_blockSteel);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_blockGold);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_bookShelf);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_tnt);
    ju_ArrayList_add(nms_Session_registeredBlocksList, nms_Block_obsidian);
    ji_PrintStream_println2(jl_System_out(), nms_Session_registeredBlocksList.$size);
}
function nPs_LocalStorageManager() {
    jl_Object.call(this);
}
var nPs_LocalStorageManager_gameSettingsStorage = null;
var nPs_LocalStorageManager_levelSettingsStorage = null;
function nPs_LocalStorageManager__init_0() {
    var var_0 = new nPs_LocalStorageManager();
    nPs_LocalStorageManager__init_(var_0);
    return var_0;
}
function nPs_LocalStorageManager__init_($this) {
    return;
}
function nPs_LocalStorageManager__clinit_() {
    nPs_LocalStorageManager_gameSettingsStorage = null;
    nPs_LocalStorageManager_levelSettingsStorage = null;
}
function otjde_EventListener() {
}
function nlea_EaglerAdapterImpl2$2() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$2__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$2();
    nlea_EaglerAdapterImpl2$2__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$2__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$2_handleEvent($this, $evt) {
    $evt.preventDefault();
    $evt.stopPropagation();
}
function nlea_EaglerAdapterImpl2$2_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$2_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$2_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$2_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$3() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$3__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$3();
    nlea_EaglerAdapterImpl2$3__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$3__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$3_handleEvent($this, $evt) {
    var $b, var$3;
    $b = $evt.button;
    var$3 = nlea_EaglerAdapterImpl2_access$100();
    if ($b == 1)
        $b = 2;
    else if ($b == 2)
        $b = 1;
    var$3.data[$b] = 1;
    ju_AbstractList_add(nlea_EaglerAdapterImpl2_access$200(), $evt);
    $evt.preventDefault();
    $evt.stopPropagation();
    nlea_EaglerAdapterImpl2_access$300();
}
function nlea_EaglerAdapterImpl2$3_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$3_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$3_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$3_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$4() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$4__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$4();
    nlea_EaglerAdapterImpl2$4__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$4__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$4_handleEvent($this, $evt) {
    var $b, var$3;
    $b = $evt.button;
    var$3 = nlea_EaglerAdapterImpl2_access$100();
    if ($b == 1)
        $b = 2;
    else if ($b == 2)
        $b = 1;
    var$3.data[$b] = 0;
    ju_AbstractList_add(nlea_EaglerAdapterImpl2_access$200(), $evt);
    $evt.preventDefault();
    $evt.stopPropagation();
}
function nlea_EaglerAdapterImpl2$4_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$4_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$4_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$4_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$5() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$5__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$5();
    nlea_EaglerAdapterImpl2$5__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$5__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$5_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_mouseX = $evt.offsetX;
    nlea_EaglerAdapterImpl2_mouseY = nlea_EaglerAdapterImpl2_canvas.clientHeight - $evt.offsetY | 0;
    nlea_EaglerAdapterImpl2_mouseDX = nlea_EaglerAdapterImpl2_mouseDX + $evt.movementX;
    nlea_EaglerAdapterImpl2_mouseDY = nlea_EaglerAdapterImpl2_mouseDY +  -$evt.movementY;
    $evt.preventDefault();
    $evt.stopPropagation();
}
function nlea_EaglerAdapterImpl2$5_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$5_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$5_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$5_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$6() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$6__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$6();
    nlea_EaglerAdapterImpl2$6__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$6__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$6_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_access$1000().data[nlea_EaglerAdapterImpl2_access$1200(nlea_EaglerAdapterImpl2_access$1100($evt))] = 1;
    ju_AbstractList_add(nlea_EaglerAdapterImpl2_access$1300(), $evt);
    $evt.preventDefault();
    $evt.stopPropagation();
    nlea_EaglerAdapterImpl2_access$300();
}
function nlea_EaglerAdapterImpl2$6_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$6_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$6_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$6_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$7() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$7__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$7();
    nlea_EaglerAdapterImpl2$7__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$7__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$7_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_access$1000().data[nlea_EaglerAdapterImpl2_access$1200(nlea_EaglerAdapterImpl2_access$1100($evt))] = 0;
    ju_AbstractList_add(nlea_EaglerAdapterImpl2_access$1300(), $evt);
    $evt.preventDefault();
    $evt.stopPropagation();
}
function nlea_EaglerAdapterImpl2$7_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$7_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$7_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$7_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$8() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$8__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$8();
    nlea_EaglerAdapterImpl2$8__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$8__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$8_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_$callClinit();
    if (nlea_EaglerAdapterImpl2_enableRepeatEvents && ($evt.repeat ? 1 : 0))
        ju_AbstractList_add(nlea_EaglerAdapterImpl2_access$1300(), $evt);
    $evt.preventDefault();
    $evt.stopPropagation();
}
function nlea_EaglerAdapterImpl2$8_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$8_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$8_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$8_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$9() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$9__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$9();
    nlea_EaglerAdapterImpl2$9__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$9__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$9_handleEvent($this, $evt) {
    ju_AbstractList_add(nlea_EaglerAdapterImpl2_access$200(), $evt);
    $evt.preventDefault();
    $evt.stopPropagation();
}
function nlea_EaglerAdapterImpl2$9_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$9_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$9_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$9_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$10() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$10__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$10();
    nlea_EaglerAdapterImpl2$10__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$10__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$10_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_access$1502(0);
}
function nlea_EaglerAdapterImpl2$10_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$10_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$10_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$10_handleEvent0(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$11() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$11__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$11();
    nlea_EaglerAdapterImpl2$11__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$11__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$11_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_access$1502(1);
    nlea_EaglerAdapterImpl2_access$300();
}
function nlea_EaglerAdapterImpl2$11_handleEvent0($this, var$1) {
    nlea_EaglerAdapterImpl2$11_handleEvent($this, var$1);
}
function nlea_EaglerAdapterImpl2$11_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$11_handleEvent0(var$0, var$1);
}
function otjw_AudioContext() {
    jl_Object.call(this);
}
function otjw_AudioContext_create$js_body$_44() {
    var Context = window.AudioContext || window.webkitAudioContext;
    return new Context();
}
function nle_AssetRepository() {
    jl_Object.call(this);
}
var nle_AssetRepository_filePool = null;
function nle_AssetRepository__init_0() {
    var var_0 = new nle_AssetRepository();
    nle_AssetRepository__init_(var_0);
    return var_0;
}
function nle_AssetRepository__init_($this) {
    return;
}
function nle_AssetRepository_install($pkg) {
    var $in2, $in, $header, var$5, $dg, $path, $digest, $digest2, $len, $file, var$12;
    $in2 = ji_ByteArrayInputStream__init_($pkg);
    $in = ji_DataInputStream__init_($in2);
    $header = $rt_createByteArray(8);
    ji_DataInputStream_read($in, $header);
    if (!jl_String_equals($rt_s(206), jl_String__init_5($header, jnc_Charset_forName($rt_s(31))))) {
        $in2 = new ji_IOException;
        jl_Throwable__init_($in2, $rt_s(207));
        $rt_throw($in2);
    }
    ji_DataInputStream_readUTF($in);
    var$5 = new ji_DataInputStream;
    $in = new cjj_InflaterInputStream;
    $dg = cjj_Inflater__init_0(0);
    ji_FilterInputStream__init_($in, $in2);
    $in.$closed = 0;
    $in.$eof = 0;
    $in.$close_in = 1;
    $in.$myinflater = 0;
    $in.$byte1 = $rt_createByteArray(1);
    $in.$b = $rt_createByteArray(512);
    $in.$inflater = $dg;
    $in.$buf0 = $rt_createByteArray(512);
    $in.$close_in = 1;
    $in.$myinflater = 1;
    ji_DataInputStream__init_0(var$5, $in);
    $dg = nle_SHA1Digest__init_0();
    while (true) {
        $in = ji_DataInputStream_readUTF(var$5);
        if (!jl_String_equals($rt_s(208), $in)) {
            if (ji_FilterInputStream_available(var$5) <= 0 && jl_String_equals($rt_s(209), $in))
                return;
            $in2 = new ji_IOException;
            jl_Throwable__init_($in2, $rt_s(207));
            $rt_throw($in2);
        }
        $path = ji_DataInputStream_readUTF(var$5);
        $digest = $rt_createByteArray(20);
        $digest2 = $rt_createByteArray(20);
        ji_DataInputStream_read(var$5, $digest);
        $len = ji_DataInputStream_readInt(var$5);
        $file = $rt_createByteArray($len);
        ji_DataInputStream_read(var$5, $file);
        if (ju_HashMap_containsKey(nle_AssetRepository_filePool, $path))
            continue;
        a: {
            nle_GeneralDigest_update($dg, $file, 0, $len);
            nle_SHA1Digest_doFinal($dg, $digest2, 0);
            if ($digest === $digest2)
                $len = 1;
            else {
                if ($digest !== null && $digest2 !== null) {
                    $pkg = $digest.data;
                    $header = $digest2.data;
                    $len = $pkg.length;
                    if ($len == $header.length) {
                        var$12 = 0;
                        while (var$12 < $len) {
                            if ($pkg[var$12] != $header[var$12]) {
                                $len = 0;
                                break a;
                            }
                            var$12 = var$12 + 1 | 0;
                        }
                        $len = 1;
                        break a;
                    }
                }
                $len = 0;
            }
        }
        if (!$len) {
            $in2 = new ji_IOException;
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            jl_Throwable__init_($in2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(210)), $path)));
            $rt_throw($in2);
        }
        ju_HashMap_putImpl(nle_AssetRepository_filePool, $path, $file);
        if (!jl_String_equals($rt_s(211), ji_DataInputStream_readUTF(var$5)))
            break;
    }
    $in2 = new ji_IOException;
    jl_Throwable__init_($in2, $rt_s(207));
    $rt_throw($in2);
}
function nle_AssetRepository__clinit_() {
    nle_AssetRepository_filePool = ju_HashMap__init_0();
}
function ji_IOException() {
    jl_Exception.call(this);
}
function ji_IOException__init_0() {
    var var_0 = new ji_IOException();
    ji_IOException__init_(var_0);
    return var_0;
}
function ji_IOException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_StringBuffer() {
    jl_AbstractStringBuilder.call(this);
}
function jl_StringBuffer__init_0() {
    var var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_(var_0);
    return var_0;
}
function jl_StringBuffer__init_($this) {
    jl_AbstractStringBuilder__init_($this);
}
function jl_StringBuffer_append($this, $c) {
    jl_AbstractStringBuilder_append($this, $c);
    return $this;
}
function jl_StringBuffer_append0($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append1($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_append1($this, $chars) {
    jl_AbstractStringBuilder_append2($this, $chars);
    return $this;
}
function jl_StringBuffer_insert($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert4($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_insert0($this, $index, $c) {
    jl_AbstractStringBuilder_insert3($this, $index, $c);
    return $this;
}
function jl_StringBuffer_insert1($this, var$1, var$2, var$3, var$4) {
    jl_AbstractStringBuilder_insert4($this, var$1, var$2, var$3, var$4);
    return $this;
}
function jl_StringBuffer_append2($this, var$1, var$2, var$3) {
    jl_AbstractStringBuilder_append1($this, var$1, var$2, var$3);
    return $this;
}
function jl_StringBuffer_charAt($this, var$1) {
    var var$2;
    if (var$1 >= 0 && var$1 < $this.$length0)
        return $this.$buffer.data[var$1];
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function jl_StringBuffer_length($this) {
    return $this.$length0;
}
function jl_StringBuffer_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuffer_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuffer_insert2($this, var$1, var$2) {
    jl_AbstractStringBuilder_insert3($this, var$1, var$2);
    return $this;
}
function ju_Comparator() {
}
function jl_String$_clinit_$lambda$_81_0() {
    jl_Object.call(this);
}
function jl_String$_clinit_$lambda$_81_0__init_0() {
    var var_0 = new jl_String$_clinit_$lambda$_81_0();
    jl_String$_clinit_$lambda$_81_0__init_(var_0);
    return var_0;
}
function jl_String$_clinit_$lambda$_81_0__init_(var$0) {
    return;
}
function jl_Character() {
    jl_Object.call(this);
    this.$value0 = 0;
}
var jl_Character_TYPE = null;
var jl_Character_digitMapping = null;
var jl_Character_classMapping = null;
var jl_Character_characterCache = null;
var jl_Character_$$metadata$$0 = null;
var jl_Character_$$metadata$$1 = null;
function jl_Character__init_(var_0) {
    var var_1 = new jl_Character();
    jl_Character__init_0(var_1, var_0);
    return var_1;
}
function jl_Character__init_0($this, $value) {
    $this.$value0 = $value;
}
function jl_Character_valueOf($value) {
    var $result;
    if ($value >= jl_Character_characterCache.data.length)
        return jl_Character__init_($value);
    $result = jl_Character_characterCache.data[$value];
    if ($result === null) {
        $result = jl_Character__init_($value);
        jl_Character_characterCache.data[$value] = $result;
    }
    return $result;
}
function jl_Character_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Character && $other.$value0 == $this.$value0 ? 1 : 0;
}
function jl_Character_hashCode($this) {
    return $this.$value0;
}
function jl_Character_toString($c) {
    var var$2, var$3;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_2(var$2, var$3);
    return var$2;
}
function jl_Character_isSupplementaryCodePoint($codePoint) {
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
}
function jl_Character_isHighSurrogate($ch) {
    return ($ch & 64512) != 55296 ? 0 : 1;
}
function jl_Character_isLowSurrogate($ch) {
    return ($ch & 64512) != 56320 ? 0 : 1;
}
function jl_Character_isSurrogate($ch) {
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
}
function jl_Character_isSurrogatePair($high, $low) {
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
}
function jl_Character_toCodePoint($high, $low) {
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
}
function jl_Character_highSurrogate($codePoint) {
    return (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
}
function jl_Character_lowSurrogate($codePoint) {
    return (56320 | $codePoint & 1023) & 65535;
}
function jl_Character_toLowerCase($ch) {
    return jl_Character_toLowerCase0($ch) & 65535;
}
function jl_Character_toLowerCase0($ch) {
    return otp_Platform_stringFromCharCode($ch).toLowerCase().charCodeAt(0);
}
function jl_Character_toUpperCase0($ch) {
    return jl_Character_toUpperCase($ch) & 65535;
}
function jl_Character_toUpperCase($codePoint) {
    return otp_Platform_stringFromCharCode($codePoint).toUpperCase().charCodeAt(0);
}
function jl_Character_digit($ch, $radix) {
    if ($radix >= 2 && $radix <= 36) {
        $ch = jl_Character_getNumericValue($ch);
        if ($ch >= $radix)
            $ch = (-1);
    } else
        $ch = (-1);
    return $ch;
}
function jl_Character_getNumericValue($codePoint) {
    var var$2, var$3, var$4, $digitMapping, var$6, $l, $u, $idx, $val;
    if (jl_Character_digitMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_obtainDigitMapping$$create();
        var$2 = (jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null);
        var$3 = otci_CharFlow__init_(jl_String_toCharArray(var$2));
        var$4 = otci_Base46_decode(var$3);
        $digitMapping = $rt_createIntArray(var$4);
        var$6 = $digitMapping.data;
        $l = 0;
        while ($l < var$4) {
            var$6[$l] = otci_Base46_decode(var$3);
            $l = $l + 1 | 0;
        }
        jl_Character_digitMapping = $digitMapping;
    }
    $digitMapping = jl_Character_digitMapping.data;
    $l = 0;
    $u = ($digitMapping.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$4 = $idx * 2 | 0;
        $val = $rt_compare($codePoint, $digitMapping[var$4]);
        if ($val > 0)
            $l = $idx + 1 | 0;
        else {
            if ($val >= 0)
                return $digitMapping[var$4 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
}
function jl_Character_forDigit($digit, $radix) {
    if ($radix >= 2 && $radix <= 36 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
}
function jl_Character_toChars($codePoint) {
    var var$2, var$3;
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    var$2 = $rt_createCharArray(2);
    var$3 = var$2.data;
    var$3[0] = jl_Character_highSurrogate($codePoint);
    var$3[1] = jl_Character_lowSurrogate($codePoint);
    return var$2;
}
function jl_Character_getType($codePoint) {
    var $u, $classes, $l, $i, $range;
    $u = $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
    if ($u && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    if (jl_Character_classMapping === null) {
        if (jl_Character_$$metadata$$1 === null)
            jl_Character_$$metadata$$1 = jl_Character_obtainClasses$$create();
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
    }
    $classes = jl_Character_classMapping.data;
    $l = 0;
    $u = $classes.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = $classes[$i];
        if ($codePoint >= $range.$end)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start1)
                return $range.$data0.data[$codePoint - $range.$start1 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
}
function jl_Character_isLetterOrDigit($codePoint) {
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
}
function jl_Character_isIdentifierIgnorable($codePoint) {
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
}
function jl_Character_isSpaceChar($codePoint) {
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isWhitespace($codePoint) {
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
}
function jl_Character_compareTo($this, $anotherCharacter) {
    return $this.$value0 - $anotherCharacter.$value0 | 0;
}
function jl_Character_compareTo0($this, var$1) {
    return jl_Character_compareTo($this, var$1);
}
function jl_Character__clinit_() {
    jl_Character_TYPE = $rt_cls($rt_charcls());
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
}
function jl_Character_obtainDigitMapping$$create() {
    return {"value" : "oD#*% .%%2%)6%-:%1>%5B%9F%=J%AN%Eo%Is%Mw%Q{%U!\'Y&\'^*\'b.\'f2\'j6\'n:\'r>\'vB\'zF\'!#J\'&#N\'*#R\'.#V\'2#Z\'6#_\':#c\'>#g\'B#k\'F#o\'J#s\'N#w\'R#6)I:)M>)QB)UF)YJ)^N)bR)fV)jZ)n_)rc)vg)zk)!#o)&#s)*#w).#{)2#!+6#&+:#*+>#.+B#2+F#6+J#:+N#>+R#{R# !T#%&T#)*T#-.T#12T#56T#9:T#=>T#ABT#E6a# :a#%>a#)Ba#-Fa#1Ja#5Na#9Ra#=Va#AZa#E:s# >s#%Bs#)Fs#-Js#1Ns#5Rs#9Vs#=Zs#A_s#EZ:% _:%%c:%)g:%-k:%1o:%5s:%9w:%={:%A!<%E2F% 6F%%:F%)>F%-BF%1FF%5JF%9NF%=RF%AVF%EgP% kP%%oP%)sP%-wP%1{P%5!R%9&R%=*R%A.R%E>]% B]%%F]%)J]%-N]%1R]%5V]%9Z]%=_]%Ac]%Esg% wg%%{g%)!i%-&"
    + "i%1*i%5.i%92i%=6i%A:i%EJs% Ns%%Rs%)Vs%-Zs%1_s%5cs%9gs%=ks%Aos%E!!\' &!\'%*!\').!\'-2!\'16!\'5:!\'9>!\'=B!\'AF!\'EV,\' Z,\'%_,\')c,\'-g,\'1k,\'5o,\'9s,\'=w,\'A{,\'E.8\' 28\'%68\'):8\'->8\'1B8\'5F8\'9J8\'=N8\'AR8\'EcB\' gB\'%kB\')oB\'-sB\'1wB\'5{B\'9!D\'=&D\'A*D\'E>L\' BL\'%FL\')JL\'-NL\'1RL\'5VL\'9ZL\'=_L\'AcL\'EsV\' wV\'%{V\')!X\'-&X\'1*X\'5.X\'92X\'=6X\'A:X\'EB_\' F_\'%J_\')N_\'-R_\'1V_\'5Z_\'9__\'=c_\'Ag_\'Esw\' ww\'%{w\')!y\'-&y\'1*y\'5.y\'92y\'=6y\'A:y\'EB!) F!)%J!))N!)-R!)1V!)5Z!)9_!)=c!)Ag!)Egi+ ki+%oi+)si+-wi+1{i+5!k+9&k+=*k+A.k+Eom+ sm+%wm+){m+-!o+1&o+5*o+9.o+=2o+A6o+E>,- B,-%F"
    + ",-)J,--N,-1R,-5V,-9Z,-=_,-Ac,-E>8- B8-%F8-)J8--N8-1R8-5V8-9Z8-=_8-Ac8-E{F- !H-%&H-)*H--.H-12H-56H-9:H-=>H-ABH-E_H- cH-%gH-)kH--oH-1sH-5wH-9{H-=!J-A&J-E!Z- &Z-%*Z-).Z--2Z-16Z-5:Z-9>Z-=BZ-AFZ-E2c- 6c-%:c-)>c--Bc-1Fc-5Jc-9Nc-=Rc-AVc-EJo- No-%Ro-)Vo--Zo-1_o-5co-9go-=ko-Aoo-E.q- 2q-%6q-):q-->q-1Bq-5Fq-9Jq-=Nq-ARq-E&4r *4r%.4r)24r-64r1:4r5>4r9B4r=F4rAJ4rE{or !qr%&qr)*qr-.qr12qr56qr9:qr=>qrABqrE&ur *ur%.ur)2ur-6ur1:ur5>ur9Bur=FurAJurE**t .*t%2*t)6*t-:*t1>*t5B*t9F*t=J*tAN*tEN,t R,t%V,t)Z,t-_,t1c,t5g,t9k,t=o,tAs,tE_"
    + "4t c4t%g4t)k4t-o4t1s4t5w4t9{4t=!6tA&6tEgXt kXt%oXt)sXt-wXt1{Xt5!Zt9&Zt=*ZtA.ZtE{c@# !e@#%&e@#)*e@#-.e@#12e@#56e@#9:e@#=>e@#ABe@#Ece@#Ige@#Mke@#Qoe@#Use@#Ywe@#^{e@#b!g@#f&g@#j*g@#n.g@#r2g@#v6g@#z:g@#!#>g@#&#Bg@#*#Fg@#.#Jg@#2#Ng@#6#Rg@#:#Vg@#>#Zg@#B#_g@#F#cg@#J#gg@#N#kg@#R#*i@#I.i@#M2i@#Q6i@#U:i@#Y>i@#^Bi@#bFi@#fJi@#jNi@#nRi@#rVi@#vZi@#z_i@#!#ci@#&#gi@#*#ki@#.#oi@#2#si@#6#wi@#:#{i@#>#!k@#B#&k@#F#*k@#J#.k@#N#2k@#R#s&D# w&D#%{&D#)!(D#-&(D#1*(D#5.(D#92(D#=6(D#A:(D#E2.H# 6.H#%:.H#)>.H#-B.H#1F.H#5J.H#9N.H#=R.H#AV."
    + "H#EwuH# {uH#%!wH#)&wH#-*wH#1.wH#52wH#96wH#=:wH#A>wH#Ew$J# {$J#%!&J#)&&J#-*&J#1.&J#52&J#96&J#=:&J#A>&J#E{*J# !,J#%&,J#)*,J#-.,J#12,J#56,J#9:,J#=>,J#AB,J#E_8J# c8J#%g8J#)k8J#-o8J#1s8J#5w8J#9{8J#=!:J#A&:J#E2RJ# 6RJ#%:RJ#)>RJ#-BRJ#1FRJ#5JRJ#9NRJ#=RRJ#AVRJ#ENqJ# RqJ#%VqJ#)ZqJ#-_qJ#1cqJ#5gqJ#9kqJ#=oqJ#AsqJ#E&}J# *}J#%.}J#)2}J#-6}J#1:}J#5>}J#9B}J#=F}J#AJ}J#Eg@L# k@L#%o@L#)s@L#-w@L#1{@L#5!BL#9&BL#=*BL#A.BL#EZJL# _JL#%cJL#)gJL#-kJL#1oJL#5sJL#9wJL#={JL#A!LL#ENTL# RTL#%VTL#)ZTL#-_TL#1cTL#5gTL#9kTL#=oTL#AsTL#E:{L# >{L#"
    + "%B{L#)F{L#-J{L#1N{L#5R{L#9V{L#=Z{L#A_{L#ERkN# VkN#%ZkN#)_kN#-ckN#1gkN#5kkN#9okN#=skN#AwkN#E_$P# c$P#%g$P#)k$P#-o$P#1s$P#5w$P#9{$P#=!&P#A&&P#E.,P# 2,P#%6,P#):,P#->,P#1B,P#5F,P#9J,P#=N,P#AR,P#EFau# Jau#%Nau#)Rau#-Vau#1Zau#5_au#9cau#=gau#Akau#Eouu# suu#%wuu#){uu#-!wu#1&wu#5*wu#9.wu#=2wu#A6wu#EF0N% J0N%%N0N%)R0N%-V0N%1Z0N%5_0N%9c0N%=g0N%Ak0N%Eo0N% s0N%%w0N%){0N%-!2N%1&2N%5*2N%9.2N%=22N%A62N%E:2N% >2N%%B2N%)F2N%-J2N%1N2N%5R2N%9V2N%=Z2N%A_2N%Ec2N% g2N%%k2N%)o2N%-s2N%1w2N%5{2N%9!4N%=&4N%A*4N%E.4N% 24N%%64N%):4N%->"
    + "4N%1B4N%5F4N%9J4N%=N4N%AR4N%ERJR% VJR%%ZJR%)_JR%-cJR%1gJR%5kJR%9oJR%=sJR%AwJR%E>qR% BqR%%FqR%)JqR%-NqR%1RqR%5VqR%9ZqR%=_qR%AcqR%E:FV% >FV%%BFV%)FFV%-JFV%1NFV%5RFV%9VFV%=ZFV%A_FV%E"};
}
function jl_Character_obtainClasses$$create() {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91 Y#FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,AVF6 F)A6G01GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F# F#A#\' "

    + "I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F. F%G$A,F3G$Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1 J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(AcG%)FP\')G&)\'I&\'I#F(A%J+Y(^+G*^*A$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%FEI)G)I#G#A$Y&"
    + "J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFG[ G&!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[AA1G.H%\'H$G-A0^#"
    + "!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^AA#b=I! BP CP !#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y&%Y+U#Y%"
    + "596Y.AQ^; b=:! A-b=7$ A;^-A%-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+F<A&^EA-F1^@ L+^?L)=L0^AL+^HL0b= & &b UG!&A+^b&b   %b O(!&A1F6%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#A#!#B$AQ&E##F(\'F$\'F%\'F8I#G#)^%A%L\'^#;=A\'FUY%A)I#F"
    + "SI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C)A)b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]1A2b&L& 76A1FbA#FWAIF-;=A#G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0"
    + "A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^-A%=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9b 1# b&X% A*F7A+F)b 9# F\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@b !# F>L+&A)F7G,L%Y&b \'# F8A*)\')FVG0Y(A%L5J+A0G$)FNI$G%I#G#Y#1Y%A,1A#F:A(J+A\'G$FEG&)G) J+Y%&I#A*FD\'Y#&A*G#)FQI$G*I#F%Y%G%9A#J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'AcF( & F% F0 F+"
    + "9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+ 9 9\'&AAFQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&A(J+AWF<A#G$I#G%)G&A%J+L#Y$=b  $ FMI$G*)G#9b E! BACAJ+L*A-&b A# F)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A>FZb (% F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#b ($ L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b ^K b&P1  Q*b (a b&(* b Z\'#b&Z) A(F"
    + "@ J+A%Y#b A! F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%A=&b W@!&A)b&T, b .5#b&@% ARF$A2F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =.!b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^]A8^dG$=b ;# L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 16 G( G2A#G( G# G&b 6$ FNA$G(E(A#J+A%&=b Q& FMG%J+A&;b  5 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN="
    + "L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.A$b=>! A$^_AZ^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=7, A+^.A$^,A&b=U! A-b=:! A(^-A5^-A%^YA)^+A\'^IA)^?b 3! ^- b=F!  ^%A$^JA#^\'A$^>A#b=(# A-^/A#^%A%^$A&^$A.^\'b K6 &b   %b   %b 6<#&AJ&b T !&A,&b =$ &A#&b  ;!&A/&b PU!&b @Q b&?) b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b D8 1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
}
function ji_OutputStream() {
    jl_Object.call(this);
}
function ji_OutputStream_write($this, $b) {
    ji_DataOutputStream_write($this, $b, 0, $b.data.length);
}
function ji_OutputStream_write0($this, $b, $off, $len) {
    var $i, var$5, var$6;
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $off + 1 | 0;
        $this.$write3(var$5[$off]);
        $i = $i + 1 | 0;
        $off = var$6;
    }
}
function ji_OutputStream_close($this) {
    return;
}
function ji_OutputStream_flush($this) {
    return;
}
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out2 = null;
}
function ji_FilterOutputStream__init_(var_0) {
    var var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterOutputStream__init_0($this, $out) {
    $this.$out2 = $out;
}
function ji_FilterOutputStream_close($this) {
    var $$je;
    a: {
        try {
            $this.$out2.$flush();
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
    }
    $this.$out2.$close();
}
function ji_PrintStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$errorState = 0;
    a.$sb = null;
    a.$buffer1 = null;
    a.$charset = null;
}
function ji_PrintStream__init_(var_0, var_1) {
    var var_2 = new ji_PrintStream();
    ji_PrintStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintStream__init_0($this, $out, $autoFlush) {
    ji_FilterOutputStream__init_0($this, $out);
    $out = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($out);
    $this.$sb = $out;
    $this.$buffer1 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    $this.$charset = jnci_UTF8Charset__init_0();
}
function ji_PrintStream_write($this, $b, $off, $len) {
    var $$je;
    if ($this.$out2 === null)
        $this.$errorState = 1;
    if (!($this.$errorState ? 0 : 1))
        return;
    a: {
        try {
            $this.$out2.$write2($b, $off, $len);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
        $this.$errorState = 1;
    }
}
function ji_PrintStream_print0($this, $s, $begin, $end) {
    var $destBytes, $src, $dest, $encoder, $overflow;
    $destBytes = $s.data;
    $src = jn_CharBuffer_wrap0($s, $begin, $end - $begin | 0);
    $destBytes = $rt_createByteArray(jl_Math_max(16, jl_Math_min($destBytes.length, 1024)));
    $dest = jn_ByteBuffer_wrap0($destBytes);
    $encoder = jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(jnci_UTF8Charset_newEncoder($this.$charset), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE);
    while (true) {
        $overflow = jnc_CoderResult_isOverflow(jnc_CharsetEncoder_encode($encoder, $src, $dest, 1));
        ji_PrintStream_write($this, $destBytes, 0, $dest.$position);
        jn_Buffer_clear($dest);
        if (!$overflow)
            break;
    }
    while (true) {
        $overflow = jnc_CoderResult_isOverflow(jnc_CharsetEncoder_flush($encoder, $dest));
        ji_PrintStream_write($this, $destBytes, 0, $dest.$position);
        jn_Buffer_clear($dest);
        if (!$overflow)
            break;
    }
}
function ji_PrintStream_print1($this, $c) {
    $this.$buffer1.data[0] = $c;
    ji_PrintStream_print0($this, $this.$buffer1, 0, 1);
}
function ji_PrintStream_print($this, $s) {
    jl_StringBuilder_append($this.$sb, $s);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println2($this, $i) {
    jl_AbstractStringBuilder_append(jl_StringBuilder_append1($this.$sb, $i), 10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println($this, $s) {
    jl_AbstractStringBuilder_append(jl_StringBuilder_append($this.$sb, $s), 10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println1($this, $s) {
    jl_AbstractStringBuilder_append(jl_StringBuilder_append0($this.$sb, $s), 10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println0($this) {
    ji_PrintStream_print1($this, 10);
}
function ji_PrintStream_printSB($this) {
    var $buffer;
    $buffer = $this.$sb.$length0 <= $this.$buffer1.data.length ? $this.$buffer1 : $rt_createCharArray($this.$sb.$length0);
    jl_StringBuilder_getChars($this.$sb, 0, $this.$sb.$length0, $buffer, 0);
    ji_PrintStream_print0($this, $buffer, 0, $this.$sb.$length0);
    jl_StringBuilder_setLength($this.$sb, 0);
}
function jl_ConsoleOutputStreamStdout() {
    ji_OutputStream.call(this);
}
function jl_ConsoleOutputStreamStdout__init_0() {
    var var_0 = new jl_ConsoleOutputStreamStdout();
    jl_ConsoleOutputStreamStdout__init_(var_0);
    return var_0;
}
function jl_ConsoleOutputStreamStdout__init_($this) {
    return;
}
function jl_ConsoleOutputStreamStdout_write($this, $b) {
    $rt_putStdout($b);
}
function nms_Timer() {
    var a = this; jl_Object.call(a);
    a.$ticksPerSecond = 0.0;
    a.$lastHRTime = 0.0;
    a.$elapsedTicks = 0;
    a.$renderPartialTicks = 0.0;
    a.$timerSpeed = 0.0;
    a.$elapsedPartialTicks = 0.0;
    a.$lastSyncSysClock = Long_ZERO;
    a.$lastSyncHRClock = Long_ZERO;
    a.$timeSyncAdjustment = 0.0;
}
function nms_Timer_updateTimer($this) {
    var $var1, $var3, $var5, $var9, $var11;
    $var1 = jl_System_currentTimeMillis();
    $var3 = Long_sub($var1, $this.$lastSyncSysClock);
    $var5 = Long_div(jl_System_nanoTime(), Long_fromInt(1000000));
    if (Long_gt($var3, Long_fromInt(1000))) {
        $var9 = Long_toNumber($var3) / Long_toNumber(Long_sub($var5, $this.$lastSyncHRClock));
        $this.$timeSyncAdjustment = $this.$timeSyncAdjustment + ($var9 - $this.$timeSyncAdjustment) * 0.20000000298023224;
        $this.$lastSyncSysClock = $var1;
        $this.$lastSyncHRClock = $var5;
    }
    if (Long_lt($var3, Long_ZERO)) {
        $this.$lastSyncSysClock = $var1;
        $this.$lastSyncHRClock = $var5;
    }
    $var11 = Long_toNumber($var5) / 1000.0;
    $var9 = ($var11 - $this.$lastHRTime) * $this.$timeSyncAdjustment;
    $this.$lastHRTime = $var11;
    if ($var9 < 0.0)
        $var9 = 0.0;
    if ($var9 > 1.0)
        $var9 = 1.0;
    $this.$elapsedPartialTicks = $this.$elapsedPartialTicks + $var9 * $this.$timerSpeed * $this.$ticksPerSecond;
    $this.$elapsedTicks = $this.$elapsedPartialTicks | 0;
    $this.$elapsedPartialTicks = $this.$elapsedPartialTicks - $this.$elapsedTicks;
    if ($this.$elapsedTicks > 10)
        $this.$elapsedTicks = 10;
    $this.$renderPartialTicks = $this.$elapsedPartialTicks;
}
function nms_IProgressUpdate() {
}
function nms_LoadingScreenRenderer() {
    var a = this; jl_Object.call(a);
    a.$field_1004_a = null;
    a.$mc = null;
    a.$field_1007_c = null;
    a.$field_1006_d = Long_ZERO;
    a.$field_1005_e = 0;
}
function nms_LoadingScreenRenderer_func_596_a($this, $var1) {
    $this.$field_1005_e = 0;
    nms_LoadingScreenRenderer_func_597_c($this, $var1);
}
function nms_LoadingScreenRenderer_func_594_b($this, $var1) {
    $this.$field_1005_e = 1;
    nms_LoadingScreenRenderer_func_597_c($this, $this.$field_1007_c);
}
function nms_LoadingScreenRenderer_func_597_c($this, $var1) {
    var $var2, $var3, $var4;
    a: {
        if (!$this.$mc.$running) {
            if ($this.$field_1005_e)
                break a;
            $var1 = new nms_MinecraftError;
            jl_Throwable__init_0($var1);
            $rt_throw($var1);
        }
        $this.$field_1007_c = $var1;
        $var2 = nms_ScaledResolution__init_($this.$mc.$displayWidth, $this.$mc.$displayHeight);
        $var3 = $var2.$scaledWidth;
        $var4 = $var2.$scaledHeight;
        olo_EaglerAdapterGL30_glClear(256);
        olo_EaglerAdapterGL30_glMatrixMode(5889);
        olo_EaglerAdapterGL30_glLoadIdentity();
        olo_EaglerAdapterGL30_glOrtho(0.0, $var3, $var4, 0.0, 100.0, 300.0);
        olo_EaglerAdapterGL30_glMatrixMode(5888);
        olo_EaglerAdapterGL30_glLoadIdentity();
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-200.0));
    }
}
function nms_LoadingScreenRenderer_displayLoadingString($this, $var1) {
    var var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!$this.$mc.$running) {
            if ($this.$field_1005_e)
                return;
            $var1 = new nms_MinecraftError;
            jl_Throwable__init_0($var1);
            $rt_throw($var1);
        }
        $this.$field_1006_d = Long_ZERO;
        $this.$field_1004_a = $var1;
        var$2 = (-1);
        $ptr = 1;
    case 1:
        nms_LoadingScreenRenderer_setLoadingProgress($this, var$2);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_1006_d = Long_ZERO;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $ptr);
}
function nms_LoadingScreenRenderer_setLoadingProgress($this, $var1) {
    var $var4, $var2, $var5, $var6, var$6, var$7, $var7, var$9, $var8, var$11, var$12, $var12, $var13, var$15, var$16, $var11, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var11 = $thread.pop();var$16 = $thread.pop();var$15 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();$var8 = $thread.pop();var$9 = $thread.pop();$var7 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var2 = $thread.pop();$var4 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            if (!$this.$mc.$running) {
                if ($this.$field_1005_e)
                    break a;
                $var4 = new nms_MinecraftError;
                jl_Throwable__init_0($var4);
                $rt_throw($var4);
            }
            $var2 = jl_System_currentTimeMillis();
            if (Long_ge(Long_sub($var2, $this.$field_1006_d), Long_fromInt(20))) {
                $this.$field_1006_d = $var2;
                $var4 = nms_ScaledResolution__init_($this.$mc.$displayWidth, $this.$mc.$displayHeight);
                $var5 = $var4.$scaledWidth;
                $var6 = $var4.$scaledHeight;
                olo_EaglerAdapterGL30_glClear(256);
                olo_EaglerAdapterGL30_glMatrixMode(5889);
                olo_EaglerAdapterGL30_glLoadIdentity();
                var$6 = $var5;
                var$7 = $var6;
                olo_EaglerAdapterGL30_glOrtho(0.0, var$6, var$7, 0.0, 100.0, 300.0);
                olo_EaglerAdapterGL30_glMatrixMode(5888);
                olo_EaglerAdapterGL30_glLoadIdentity();
                olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-200.0));
                olo_EaglerAdapterGL30_glClear(16640);
                nms_Tessellator_$callClinit();
                $var7 = nms_Tessellator_instance;
                $var4 = $this.$mc.$renderEngine;
                var$9 = $rt_s(212);
                $ptr = 1;
                continue main;
            }
        }
        return;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var4, var$9);
        if ($rt_suspending()) {
            break main;
        }
        $var8 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(3553, $var8);
        nms_Tessellator_startDrawingQuads($var7);
        nms_Tessellator_setColorOpaque_I($var7, 4210752);
        var$11 = $var6 / 32.0;
        nms_Tessellator_addVertexWithUV($var7, 0.0, var$7, 0.0, 0.0, var$11);
        var$12 = $var5 / 32.0;
        nms_Tessellator_addVertexWithUV($var7, var$6, var$7, 0.0, var$12, var$11);
        nms_Tessellator_addVertexWithUV($var7, var$6, 0.0, 0.0, var$12, 0.0);
        nms_Tessellator_addVertexWithUV($var7, 0.0, 0.0, 0.0, 0.0, 0.0);
        nms_Tessellator_draw($var7);
        if ($var1 >= 0) {
            $var12 = ($var5 / 2 | 0) - 50 | 0;
            $var13 = ($var6 / 2 | 0) + 16 | 0;
            olo_EaglerAdapterGL30_glDisable(3553);
            nms_Tessellator_startDrawingQuads($var7);
            nms_Tessellator_setColorOpaque_I($var7, 8421504);
            var$6 = $var12;
            var$15 = $var13;
            nms_Tessellator_addVertex($var7, var$6, var$15, 0.0);
            var$12 = $var13 + 2 | 0;
            nms_Tessellator_addVertex($var7, var$6, var$12, 0.0);
            var$16 = $var12 + 100 | 0;
            nms_Tessellator_addVertex($var7, var$16, var$12, 0.0);
            nms_Tessellator_addVertex($var7, var$16, var$15, 0.0);
            nms_Tessellator_setColorOpaque_I($var7, 8454016);
            nms_Tessellator_addVertex($var7, var$6, var$15, 0.0);
            nms_Tessellator_addVertex($var7, var$6, var$12, 0.0);
            var$16 = $var12 + $var1 | 0;
            nms_Tessellator_addVertex($var7, var$16, var$12, 0.0);
            nms_Tessellator_addVertex($var7, var$16, var$15, 0.0);
            nms_Tessellator_draw($var7);
            olo_EaglerAdapterGL30_glEnable(3553);
        }
        $var4 = $this.$mc.$fontRenderer;
        $var7 = $this.$field_1007_c;
        $var1 = ($var5 - nms_FontRenderer_getStringWidth($this.$mc.$fontRenderer, $this.$field_1007_c) | 0) / 2 | 0;
        $var11 = ($var6 / 2 | 0) - 4 | 0;
        nms_FontRenderer_drawStringWithShadow($var4, $var7, $var1, $var11 - 16 | 0, 16777215);
        nms_FontRenderer_drawStringWithShadow($this.$mc.$fontRenderer, $this.$field_1004_a, ($var5 - nms_FontRenderer_getStringWidth($this.$mc.$fontRenderer, $this.$field_1004_a) | 0) / 2 | 0, $var11 + 8 | 0, 16777215);
        $ptr = 2;
    case 2:
        nlea_EaglerAdapterImpl2_updateDisplay();
        if ($rt_suspending()) {
            break main;
        }
        try {
            $ptr = 3;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
            } else {
                throw $$e;
            }
        }
        return;
    case 3:
        b: {
            try {
                jl_Thread_yield();
                if ($rt_suspending()) {
                    break main;
                }
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var4, $var2, $var5, $var6, var$6, var$7, $var7, var$9, $var8, var$11, var$12, $var12, $var13, var$15, var$16, $var11, $ptr);
}
function nms_EntityRenderer() {
    var a = this; jl_Object.call(a);
    a.$mc0 = null;
    a.$field_1387_i = 0.0;
    a.$field_1395_a = null;
    a.$field_1386_j = 0;
    a.$field_1385_k = null;
    a.$field_1384_l = Long_ZERO;
    a.$field_1383_m = null;
    a.$field_1394_b = 0;
    a.$field_1393_c = 0;
    a.$field_1392_d = null;
    a.$field_4270_e = 0.0;
    a.$field_4269_f = 0.0;
    a.$field_4268_g = 0.0;
    a.$field_1382_n = 0.0;
    a.$field_1381_o = 0.0;
}
function nms_EntityRenderer_func_911_a($this) {
    var $var1, $var2, $var3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17;
    $this.$field_1382_n = $this.$field_1381_o;
    $var1 = nms_World_getLightBrightness($this.$mc0.$theWorld, nms_MathHelper_floor_double($this.$mc0.$thePlayer.$posX), nms_MathHelper_floor_double($this.$mc0.$thePlayer.$posY), nms_MathHelper_floor_double($this.$mc0.$thePlayer.$posZ));
    $var2 = (3 - $this.$mc0.$gameSettings.$renderDistance | 0) / 3.0;
    $var3 = $var1 * (1.0 - $var2) + $var2;
    $this.$field_1381_o = $this.$field_1381_o + ($var3 - $this.$field_1381_o) * 0.10000000149011612;
    $this.$field_1386_j = $this.$field_1386_j + 1 | 0;
    nms_ItemRenderer_func_895_a($this.$field_1395_a);
    if ($this.$mc0.$field_6288_M)
        a: {
            if ($this.$mc0.$gameSettings.$fancyGraphics) {
                var$4 = $this.$mc0.$thePlayer;
                var$5 = $this.$mc0.$theWorld;
                var$6 = nms_MathHelper_floor_double(var$4.$posX);
                var$7 = nms_MathHelper_floor_double(var$4.$posY);
                var$8 = nms_MathHelper_floor_double(var$4.$posZ);
                var$9 = 0;
                var$10 = var$7 + 16 | 0;
                var$11 = var$7 - 16 | 0;
                while (true) {
                    if (var$9 >= 150)
                        break a;
                    var$7 = (var$6 + ju_Random_nextInt($this.$field_1383_m, 16) | 0) - ju_Random_nextInt($this.$field_1383_m, 16) | 0;
                    var$12 = (var$8 + ju_Random_nextInt($this.$field_1383_m, 16) | 0) - ju_Random_nextInt($this.$field_1383_m, 16) | 0;
                    var$13 = nms_World_func_696_e(var$5, var$7, var$12);
                    var$14 = nms_World_getBlockId(var$5, var$7, var$13 - 1 | 0, var$12);
                    if (var$13 <= var$10 && var$13 >= var$11) {
                        $var1 = ju_Random_nextFloat($this.$field_1383_m);
                        $var2 = ju_Random_nextFloat($this.$field_1383_m);
                        if (var$14 > 0) {
                            var$4 = $this.$mc0.$field_6321_h;
                            var$15 = new nms_EntityRainFX;
                            var$16 = var$7 + $var1;
                            var$17 = var$13 + 0.10000000149011612;
                            nms_Block_$callClinit();
                            nms_EntityRainFX__init_(var$15, var$5, var$16, var$17 - nms_Block_blocksList.data[var$14].$minY, var$12 + $var2);
                            nms_EffectRenderer_func_1192_a(var$4, var$15);
                        }
                    }
                    var$9 = var$9 + 1 | 0;
                }
            }
        }
}
function nms_EntityRenderer_func_910_a($this, $var1) {
    var $var2, $var6, $var7, $var8, $var10, $var11, $var13, $var14, $var15, $var16, $var17, $var18;
    if ($this.$mc0.$thePlayer !== null) {
        $var2 = 4.0;
        $this.$mc0.$objectMouseOver = nms_EntityLiving_rayTrace($this.$mc0.$thePlayer, $var2, $var1);
        $var6 = nms_EntityLiving_getPosition($this.$mc0.$thePlayer, $var1);
        if ($this.$mc0.$objectMouseOver !== null)
            $var2 = nms_Vec3D_distanceTo($this.$mc0.$objectMouseOver.$hitVec, $var6);
        if ($this.$mc0.$field_6327_b instanceof nms_PlayerControllerTest)
            $var2 = 32.0;
        else if ($var2 > 3.0)
            $var2 = 3.0;
        $var7 = nms_EntityLiving_getLook($this.$mc0.$thePlayer, $var1);
        $var8 = nms_Vec3D_addVector($var6, $var7.$xCoord * $var2, $var7.$yCoord * $var2, $var7.$zCoord * $var2);
        $this.$field_1385_k = null;
        $var10 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$mc0.$theWorld, $this.$mc0.$thePlayer, nms_AxisAlignedBB_expands(nms_AxisAlignedBB_addCoord($this.$mc0.$thePlayer.$boundingBox, $var7.$xCoord * $var2, $var7.$yCoord * $var2, $var7.$zCoord * $var2), 1.0, 1.0, 1.0));
        $var11 = 0.0;
        $var13 = 0;
        while ($var13 < $var10.$size) {
            $var14 = ju_ArrayList_get($var10, $var13);
            if ($var14.$canBeCollidedWith()) {
                $var15 = $var14.$func_4035_j_();
                $var16 = $var14.$boundingBox;
                $var2 = $var15;
                $var16 = nms_AxisAlignedBB_expands($var16, $var2, $var2, $var2);
                $var17 = nms_AxisAlignedBB_func_1169_a($var16, $var6, $var8);
                if (nms_AxisAlignedBB_isVecInside($var16, $var6)) {
                    if (!(0.0 >= $var11 && $var11 !== 0.0)) {
                        $this.$field_1385_k = $var14;
                        $var11 = 0.0;
                    }
                } else if ($var17 !== null) {
                    $var18 = nms_Vec3D_distanceTo($var6, $var17.$hitVec);
                    if (!($var18 >= $var11 && $var11 !== 0.0)) {
                        $this.$field_1385_k = $var14;
                        $var11 = $var18;
                    }
                }
            }
            $var13 = $var13 + 1 | 0;
        }
        if ($this.$field_1385_k !== null && !($this.$mc0.$field_6327_b instanceof nms_PlayerControllerTest))
            $this.$mc0.$objectMouseOver = nms_MovingObjectPosition__init_($this.$field_1385_k);
    }
}
function nms_EntityRenderer_hurtCameraEffect($this, $var1) {
    var $var2, $var3, $var4;
    $var2 = $this.$mc0.$thePlayer;
    $var3 = $var2.$hurtTime - $var1;
    if ($var2.$health <= 0)
        olo_EaglerAdapterGL30_glRotatef(40.0 - 8000.0 / ($var2.$deathTime + $var1 + 200.0), 0.0, 0.0, 1.0);
    if ($var3 >= 0.0) {
        $var1 = $var3 / $var2.$field_9332_M;
        $var1 = nms_MathHelper_sin($var1 * $var1 * $var1 * $var1 * 3.1415927410125732);
        $var4 = $var2.$field_9331_N;
        olo_EaglerAdapterGL30_glRotatef( -$var4, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef( -$var1 * 14.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef($var4, 0.0, 1.0, 0.0);
    }
}
function nms_EntityRenderer_func_917_f($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6;
    if (!$this.$mc0.$gameSettings.$thirdPersonView) {
        $var2 = $this.$mc0.$thePlayer;
        $var3 = $var2.$field_9290_aS - $var2.$field_9291_aR;
        $var4 = $var2.$field_9290_aS + $var3 * $var1;
        $var5 = $var2.$field_775_e + ($var2.$field_774_f - $var2.$field_775_e) * $var1;
        $var6 = $var2.$field_9329_Q + ($var2.$field_9328_R - $var2.$field_9329_Q) * $var1;
        $var3 = $var4 * 3.1415927410125732;
        olo_EaglerAdapterGL30_glTranslatef(nms_MathHelper_sin($var3) * $var5 * 0.5,  -jl_Math_abs(nms_MathHelper_cos($var3) * $var5), 0.0);
        olo_EaglerAdapterGL30_glRotatef(nms_MathHelper_sin($var3) * $var5 * 3.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef(jl_Math_abs(nms_MathHelper_cos($var3 + 0.20000000298023224) * $var5) * 5.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef($var6, 1.0, 0.0, 0.0);
    }
}
function nms_EntityRenderer_orientCamera($this, $var1) {
    var $var2, $var13, $var17, $var9, $var3, $var5, $var7, $var11, $var12, $var20, $var21, $var22, $var15, $var19, var$16, $var23, $var24, var$19, var$20, var$21;
    $var2 = $this.$mc0.$thePlayer;
    $var13 = $var2.$prevPosX;
    $var17 = $var2.$posX - $var2.$prevPosX;
    $var9 = $var1;
    $var3 = $var13 + $var17 * $var9;
    $var5 = $var2.$prevPosY + ($var2.$posY - $var2.$prevPosY) * $var9;
    $var7 = $var2.$prevPosZ + ($var2.$posZ - $var2.$prevPosZ) * $var9;
    if (!$this.$mc0.$gameSettings.$thirdPersonView)
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-0.10000000149011612));
    else {
        $var9 = 4.0;
        $var11 = $var2.$rotationYaw;
        $var12 = $var2.$rotationPitch;
        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(2)) {
            $var12 = $var12 + 180.0;
            $var9 = 6.0;
        }
        $var20 = $var11 / 180.0 * 3.1415927410125732;
        $var21 =  -nms_MathHelper_sin($var20);
        $var22 = $var12 / 180.0 * 3.1415927410125732;
        $var13 = $var21 * nms_MathHelper_cos($var22) * $var9;
        $var15 = nms_MathHelper_cos($var20) * nms_MathHelper_cos($var22) * $var9;
        $var17 =  -nms_MathHelper_sin($var22) * $var9;
        $var19 = 0;
        $var13 = $var3 - $var13;
        $var17 = $var5 - $var17;
        var$16 = $var7 - $var15;
        while ($var19 < 8) {
            $var20 = (($var19 & 1) * 2 | 0) - 1 | 0;
            $var21 = (($var19 >> 1 & 1) * 2 | 0) - 1 | 0;
            $var22 = (($var19 >> 2 & 1) * 2 | 0) - 1 | 0;
            $var20 = $var20 * 0.10000000149011612;
            $var21 = $var21 * 0.10000000149011612;
            $var22 = $var22 * 0.10000000149011612;
            $var23 = $this.$mc0.$theWorld;
            $var24 = $var20;
            $var15 = $var3 + $var24;
            var$19 = $var21;
            var$20 = $var5 + var$19;
            var$21 = $var22;
            $var23 = nms_World_rayTraceBlocks($var23, nms_Vec3D_createVector($var15, var$20, $var7 + var$21), nms_Vec3D_createVector($var13 + $var24 + var$21, $var17 + var$19, var$16 + var$21));
            if ($var23 !== null) {
                $var24 = nms_Vec3D_distanceTo($var23.$hitVec, nms_Vec3D_createVector($var3, $var5, $var7));
                if ($var24 < $var9)
                    $var9 = $var24;
            }
            $var19 = $var19 + 1 | 0;
        }
        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(2))
            olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef($var2.$rotationPitch - $var12, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef($var2.$rotationYaw - $var11, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0,  -$var9);
        olo_EaglerAdapterGL30_glRotatef($var11 - $var2.$rotationYaw, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef($var12 - $var2.$rotationPitch, 1.0, 0.0, 0.0);
    }
    olo_EaglerAdapterGL30_glRotatef($var2.$prevRotationPitch + ($var2.$rotationPitch - $var2.$prevRotationPitch) * $var1, 1.0, 0.0, 0.0);
    olo_EaglerAdapterGL30_glRotatef($var2.$prevRotationYaw + ($var2.$rotationYaw - $var2.$prevRotationYaw) * $var1 + 180.0, 0.0, 1.0, 0.0);
}
function nms_EntityRenderer_setupCameraTransform($this, $var1, $var2) {
    var var$3, $var5, $var4, var$6, $var3;
    $this.$field_1387_i = 256 >> $this.$mc0.$gameSettings.$renderDistance;
    olo_EaglerAdapterGL30_glMatrixMode(5889);
    olo_EaglerAdapterGL30_glLoadIdentity();
    if ($this.$mc0.$gameSettings.$anaglyph)
        olo_EaglerAdapterGL30_glTranslatef( -(($var2 * 2 | 0) - 1 | 0) * 0.07000000029802322, 0.0, 0.0);
    var$3 = $this.$mc0.$thePlayer;
    $var5 = 70.0;
    if (nms_Entity_isInsideOfMaterial(var$3, nms_Material_water))
        $var5 = 60.0;
    if (var$3.$health <= 0)
        $var5 = $var5 / ((1.0 - 500.0 / (var$3.$deathTime + $var1 + 500.0)) * 2.0 + 1.0);
    olo_EaglerAdapterGL30_gluPerspective($var5, $this.$mc0.$displayWidth / $this.$mc0.$displayHeight, 0.05000000074505806, $this.$field_1387_i);
    olo_EaglerAdapterGL30_glMatrixMode(5888);
    olo_EaglerAdapterGL30_glLoadIdentity();
    if ($this.$mc0.$gameSettings.$anaglyph)
        olo_EaglerAdapterGL30_glTranslatef((($var2 * 2 | 0) - 1 | 0) * 0.10000000149011612, 0.0, 0.0);
    nms_EntityRenderer_hurtCameraEffect($this, $var1);
    if ($this.$mc0.$gameSettings.$viewBobbing)
        nms_EntityRenderer_func_917_f($this, $var1);
    $var4 = $this.$mc0.$thePlayer.$field_4133_d + ($this.$mc0.$thePlayer.$field_4134_c - $this.$mc0.$thePlayer.$field_4133_d) * $var1;
    if ($var4 > 0.0) {
        var$6 = $var4 * $var4;
        $var5 = 5.0 / (var$6 + 5.0) - $var4 * 0.03999999910593033;
        $var3 = $var5 * $var5;
        olo_EaglerAdapterGL30_glRotatef(var$6 * 1500.0, 0.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glScalef(1.0 / $var3, 1.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef( -$var4 * $var4 * 1500.0, 0.0, 1.0, 1.0);
    }
    nms_EntityRenderer_orientCamera($this, $var1);
}
function nms_EntityRenderer_func_4135_b($this, $var1, $var2) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glLoadIdentity();
        if ($this.$mc0.$gameSettings.$anaglyph)
            olo_EaglerAdapterGL30_glTranslatef((($var2 * 2 | 0) - 1 | 0) * 0.10000000149011612, 0.0, 0.0);
        olo_EaglerAdapterGL30_glPushMatrix();
        nms_EntityRenderer_hurtCameraEffect($this, $var1);
        if ($this.$mc0.$gameSettings.$viewBobbing)
            nms_EntityRenderer_func_917_f($this, $var1);
        a: {
            if (!$this.$mc0.$gameSettings.$thirdPersonView) {
                if (nlea_EaglerAdapterImpl2_getEventKey() != 33)
                    break a;
                if (!nlea_EaglerAdapterImpl2_isKeyDown(2))
                    break a;
            }
            olo_EaglerAdapterGL30_glPopMatrix();
            if ($this.$mc0.$gameSettings.$thirdPersonView) {
                if ($this.$mc0.$gameSettings.$viewBobbing)
                    nms_EntityRenderer_func_917_f($this, $var1);
                return;
            }
            var$3 = $this.$field_1395_a;
            $ptr = 1;
            continue main;
        }
        var$3 = $this.$field_1395_a;
        $ptr = 2;
        continue main;
    case 1:
        nms_ItemRenderer_renderOverlays(var$3, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_EntityRenderer_hurtCameraEffect($this, $var1);
        if ($this.$mc0.$gameSettings.$viewBobbing)
            nms_EntityRenderer_func_917_f($this, $var1);
        return;
    case 2:
        nms_ItemRenderer_renderItemInFirstPerson(var$3, $var1);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        if ($this.$mc0.$gameSettings.$thirdPersonView) {
            if ($this.$mc0.$gameSettings.$viewBobbing)
                nms_EntityRenderer_func_917_f($this, $var1);
            return;
        }
        var$3 = $this.$field_1395_a;
        $ptr = 1;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_EntityRenderer_func_4136_b($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var10, $var11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (nlea_EaglerAdapterImpl2_isFocused())
            $this.$field_1384_l = jl_System_currentTimeMillis();
        else if (Long_gt(Long_sub(jl_System_currentTimeMillis(), $this.$field_1384_l), Long_fromInt(500)))
            nmc_Minecraft_func_6252_g($this.$mc0);
        if ($this.$mc0.$field_6289_L) {
            nms_MouseHelper_func_772_c($this.$mc0.$mouseHelper);
            $var2 = $this.$mc0.$gameSettings.$mouseSensitivity * 0.6000000238418579 + 0.20000000298023224;
            $var3 = $var2 * $var2 * $var2 * 8.0;
            $var4 = $this.$mc0.$mouseHelper.$field_1114_a * $var3;
            $var5 = $this.$mc0.$mouseHelper.$field_1113_b * $var3;
            $var6 = 1;
            if ($this.$mc0.$gameSettings.$invertMouse)
                $var6 = (-1);
            nms_Entity_func_346_d($this.$mc0.$thePlayer, $var4, $var5 * $var6);
        }
        if (!$this.$mc0.$field_6307_v) {
            $var7 = nms_ScaledResolution__init_($this.$mc0.$displayWidth, $this.$mc0.$displayHeight);
            $var8 = $var7.$scaledWidth;
            $var9 = $var7.$scaledHeight;
            $var10 = $rt_imul(nlea_EaglerAdapterImpl2_mouseX, $var8) / $this.$mc0.$displayWidth | 0;
            $var11 = ($var9 - ($rt_imul(nlea_EaglerAdapterImpl2_mouseY, $var9) / $this.$mc0.$displayHeight | 0) | 0) - 1 | 0;
            if ($this.$mc0.$theWorld !== null) {
                $ptr = 1;
                continue main;
            }
            olo_EaglerAdapterGL30_glViewport(0, 0, $this.$mc0.$displayWidth, $this.$mc0.$displayHeight);
            olo_EaglerAdapterGL30_glClearColor(0.0, 0.0, 0.0, 0.0);
            olo_EaglerAdapterGL30_glClear(16640);
            olo_EaglerAdapterGL30_glMatrixMode(5889);
            olo_EaglerAdapterGL30_glLoadIdentity();
            olo_EaglerAdapterGL30_glMatrixMode(5888);
            olo_EaglerAdapterGL30_glLoadIdentity();
            nms_EntityRenderer_func_905_b($this);
            if ($this.$mc0.$currentScreen !== null) {
                olo_EaglerAdapterGL30_glClear(256);
                $var7 = $this.$mc0.$currentScreen;
                $ptr = 2;
                continue main;
            }
        }
        return;
    case 1:
        nms_EntityRenderer_func_4134_c($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(2)) {
            if ($this.$mc0.$currentScreen === null)
                return;
            olo_EaglerAdapterGL30_glClear(256);
            $var7 = $this.$mc0.$currentScreen;
            $ptr = 2;
            continue main;
        }
        $var7 = $this.$mc0.$ingameGUI;
        $var8 = $this.$mc0.$currentScreen === null ? 0 : 1;
        $ptr = 3;
        continue main;
    case 2:
        $var7.$drawScreen($var10, $var11, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    case 3:
        nms_GuiIngame_renderGameOverlay($var7, $var1, $var8, $var10, $var11);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$mc0.$currentScreen === null)
            return;
        olo_EaglerAdapterGL30_glClear(256);
        $var7 = $this.$mc0.$currentScreen;
        $ptr = 2;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var10, $var11, $ptr);
}
function nms_EntityRenderer_func_4134_c($this, $var1) {
    var $var2, $var3, $var4, $var7, $var9, var$7, $var5, $var11, $var12, var$11, $var13, var$13, var$14, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();$var13 = $thread.pop();var$11 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var5 = $thread.pop();var$7 = $thread.pop();$var9 = $thread.pop();$var7 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nms_EntityRenderer_func_910_a($this, $var1);
        $var2 = $this.$mc0.$thePlayer;
        $var3 = $this.$mc0.$field_6323_f;
        $var4 = $this.$mc0.$field_6321_h;
        $var7 = $var2.$lastTickPosX;
        $var9 = $var2.$posX - $var2.$lastTickPosX;
        var$7 = $var1;
        $var5 = $var7 + $var9 * var$7;
        $var7 = $var2.$lastTickPosY + ($var2.$posY - $var2.$lastTickPosY) * var$7;
        $var9 = $var2.$lastTickPosZ + ($var2.$posZ - $var2.$lastTickPosZ) * var$7;
        $var11 = 0;
        if ($var11 >= 2) {
            olo_EaglerAdapterGL30_glColorMask(1, 1, 1, 0);
            return;
        }
        if ($this.$mc0.$gameSettings.$anaglyph) {
            if ($var11)
                olo_EaglerAdapterGL30_glColorMask(1, 0, 0, 0);
            else
                olo_EaglerAdapterGL30_glColorMask(0, 1, 1, 0);
        }
        olo_EaglerAdapterGL30_glViewport(0, 0, $this.$mc0.$displayWidth, $this.$mc0.$displayHeight);
        nms_EntityRenderer_updateFogColor($this, $var1);
        olo_EaglerAdapterGL30_glClear(16640);
        olo_EaglerAdapterGL30_glEnable(2884);
        nms_EntityRenderer_setupCameraTransform($this, $var1, $var11);
        nms_ClippingHelperImplementation_func_1155_a();
        if ($this.$mc0.$gameSettings.$renderDistance < 2) {
            nms_EntityRenderer_func_4140_a($this, (-1));
            $ptr = 6;
            continue main;
        }
        olo_EaglerAdapterGL30_glEnable(2912);
        nms_EntityRenderer_func_4140_a($this, 1);
        $var12 = nms_Frustrum__init_0();
        nms_Frustrum_func_343_a($var12, $var5, $var7, $var9);
        nms_RenderGlobal_func_960_a($this.$mc0.$field_6323_f, $var12, $var1);
        var$11 = $this.$mc0.$field_6323_f;
        $var13 = 0;
        $ptr = 1;
    case 1:
        nms_RenderGlobal_func_948_a(var$11, $var2, $var13);
        if ($rt_suspending()) {
            break main;
        }
        nms_EntityRenderer_func_4140_a($this, 0);
        olo_EaglerAdapterGL30_glEnable(2912);
        $var13 = 3553;
        var$11 = $this.$mc0.$renderEngine;
        var$13 = $rt_s(193);
        $ptr = 2;
    case 2:
        $tmp = nms_RenderEngine_getTexture(var$11, var$13);
        if ($rt_suspending()) {
            break main;
        }
        var$14 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var13, var$14);
        nms_RenderHelper_disableStandardItemLighting();
        nms_RenderGlobal_func_943_a($var3, $var2, 0, var$7);
        nms_RenderHelper_enableStandardItemLighting();
        var$11 = nms_EntityLiving_getPosition($var2, $var1);
        $ptr = 3;
    case 3:
        nms_RenderGlobal_func_951_a($var3, var$11, $var12, $var1);
        if ($rt_suspending()) {
            break main;
        }
        $ptr = 4;
    case 4:
        nms_EffectRenderer_func_1187_b($var4, $var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_RenderHelper_disableStandardItemLighting();
        nms_EntityRenderer_func_4140_a($this, 0);
        $ptr = 5;
    case 5:
        nms_EffectRenderer_func_1189_a($var4, $var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$mc0.$objectMouseOver !== null && nms_Entity_isInsideOfMaterial($var2, nms_Material_water)) {
            olo_EaglerAdapterGL30_glDisable(3008);
            $var12 = $this.$mc0.$objectMouseOver;
            $var13 = 0;
            var$11 = nms_InventoryPlayer_getCurrentItem($var2.$inventory0);
            $ptr = 8;
            continue main;
        }
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        nms_EntityRenderer_func_4140_a($this, 0);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glDisable(2884);
        $var13 = 3553;
        $var12 = $this.$mc0.$renderEngine;
        var$11 = $rt_s(193);
        $ptr = 7;
        continue main;
    case 6:
        nms_RenderGlobal_func_4142_a($var3, $var1);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glEnable(2912);
        nms_EntityRenderer_func_4140_a($this, 1);
        $var12 = nms_Frustrum__init_0();
        nms_Frustrum_func_343_a($var12, $var5, $var7, $var9);
        nms_RenderGlobal_func_960_a($this.$mc0.$field_6323_f, $var12, $var1);
        var$11 = $this.$mc0.$field_6323_f;
        $var13 = 0;
        $ptr = 1;
        continue main;
    case 7:
        $tmp = nms_RenderEngine_getTexture($var12, var$11);
        if ($rt_suspending()) {
            break main;
        }
        var$14 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var13, var$14);
        if (!$this.$mc0.$gameSettings.$fancyGraphics)
            nms_RenderGlobal_func_943_a($var3, $var2, 1, var$7);
        else {
            olo_EaglerAdapterGL30_glColorMask(0, 0, 0, 0);
            $var13 = nms_RenderGlobal_func_943_a($var3, $var2, 1, var$7);
            olo_EaglerAdapterGL30_glColorMask(1, 1, 1, 1);
            if ($this.$mc0.$gameSettings.$anaglyph) {
                if ($var11)
                    olo_EaglerAdapterGL30_glColorMask(1, 0, 0, 0);
                else
                    olo_EaglerAdapterGL30_glColorMask(0, 1, 1, 0);
            }
            if ($var13 > 0)
                nms_RenderGlobal_func_944_a($var3, 1, var$7);
        }
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glDisable(3042);
        if ($this.$mc0.$objectMouseOver !== null && !nms_Entity_isInsideOfMaterial($var2, nms_Material_water)) {
            olo_EaglerAdapterGL30_glDisable(3008);
            $var12 = $this.$mc0.$objectMouseOver;
            $var13 = 0;
            var$11 = nms_InventoryPlayer_getCurrentItem($var2.$inventory0);
            $ptr = 11;
            continue main;
        }
        olo_EaglerAdapterGL30_glDisable(2912);
        nms_EntityRenderer_func_4140_a($this, 0);
        olo_EaglerAdapterGL30_glEnable(2912);
        $ptr = 9;
        continue main;
    case 8:
        nms_RenderGlobal_func_959_a($var3, $var2, $var12, $var13, var$11, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_RenderGlobal_drawSelectionBox($var3, $var2, $this.$mc0.$objectMouseOver, 0, nms_InventoryPlayer_getCurrentItem($var2.$inventory0), $var1);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        nms_EntityRenderer_func_4140_a($this, 0);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glDisable(2884);
        $var13 = 3553;
        $var12 = $this.$mc0.$renderEngine;
        var$11 = $rt_s(193);
        $ptr = 7;
        continue main;
    case 9:
        nms_RenderGlobal_func_4141_b($var3, $var1);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glDisable(2912);
        nms_EntityRenderer_func_4140_a($this, 1);
        olo_EaglerAdapterGL30_glClear(256);
        $ptr = 10;
    case 10:
        nms_EntityRenderer_func_4135_b($this, $var1, $var11);
        if ($rt_suspending()) {
            break main;
        }
        if (!$this.$mc0.$gameSettings.$anaglyph)
            return;
        $var11 = $var11 + 1 | 0;
        if ($var11 >= 2) {
            olo_EaglerAdapterGL30_glColorMask(1, 1, 1, 0);
            return;
        }
        if ($this.$mc0.$gameSettings.$anaglyph) {
            if ($var11)
                olo_EaglerAdapterGL30_glColorMask(1, 0, 0, 0);
            else
                olo_EaglerAdapterGL30_glColorMask(0, 1, 1, 0);
        }
        olo_EaglerAdapterGL30_glViewport(0, 0, $this.$mc0.$displayWidth, $this.$mc0.$displayHeight);
        nms_EntityRenderer_updateFogColor($this, $var1);
        olo_EaglerAdapterGL30_glClear(16640);
        olo_EaglerAdapterGL30_glEnable(2884);
        nms_EntityRenderer_setupCameraTransform($this, $var1, $var11);
        nms_ClippingHelperImplementation_func_1155_a();
        if ($this.$mc0.$gameSettings.$renderDistance < 2) {
            nms_EntityRenderer_func_4140_a($this, (-1));
            $ptr = 6;
            continue main;
        }
        olo_EaglerAdapterGL30_glEnable(2912);
        nms_EntityRenderer_func_4140_a($this, 1);
        $var12 = nms_Frustrum__init_0();
        nms_Frustrum_func_343_a($var12, $var5, $var7, $var9);
        nms_RenderGlobal_func_960_a($this.$mc0.$field_6323_f, $var12, $var1);
        var$11 = $this.$mc0.$field_6323_f;
        $var13 = 0;
        $ptr = 1;
        continue main;
    case 11:
        nms_RenderGlobal_func_959_a($var3, $var2, $var12, $var13, var$11, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_RenderGlobal_drawSelectionBox($var3, $var2, $this.$mc0.$objectMouseOver, 0, nms_InventoryPlayer_getCurrentItem($var2.$inventory0), $var1);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glDisable(2912);
        nms_EntityRenderer_func_4140_a($this, 0);
        olo_EaglerAdapterGL30_glEnable(2912);
        $ptr = 9;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var7, $var9, var$7, $var5, $var11, $var12, var$11, $var13, var$13, var$14, $ptr);
}
function nms_EntityRenderer_func_905_b($this) {
    var $var1, $var2, $var3;
    $var1 = nms_ScaledResolution__init_($this.$mc0.$displayWidth, $this.$mc0.$displayHeight);
    $var2 = $var1.$scaledWidth;
    $var3 = $var1.$scaledHeight;
    olo_EaglerAdapterGL30_glClear(256);
    olo_EaglerAdapterGL30_glMatrixMode(5889);
    olo_EaglerAdapterGL30_glLoadIdentity();
    olo_EaglerAdapterGL30_glOrtho(0.0, $var2, $var3, 0.0, 1000.0, 3000.0);
    olo_EaglerAdapterGL30_glMatrixMode(5888);
    olo_EaglerAdapterGL30_glLoadIdentity();
    olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-2000.0));
}
function nms_EntityRenderer_updateFogColor($this, $var1) {
    var $var2, $var3, $var11, $var5, $var6, $var7, $var8, $var9, $var10, $var12, $var13;
    $var2 = $this.$mc0.$theWorld;
    $var3 = $this.$mc0.$thePlayer;
    $var11 = 1.0 - jl_Math_pow(1.0 / (4 - $this.$mc0.$gameSettings.$renderDistance | 0), 0.25);
    $var5 = nms_World_func_4079_a($var2, $this.$mc0.$thePlayer, $var1);
    $var6 = $var5.$xCoord;
    $var7 = $var5.$yCoord;
    $var8 = $var5.$zCoord;
    $var9 = nms_World_func_4082_d($var2, $var1);
    $this.$field_4270_e = $var9.$xCoord;
    $this.$field_4269_f = $var9.$yCoord;
    $this.$field_4268_g = $var9.$zCoord;
    $this.$field_4270_e = $this.$field_4270_e + ($var6 - $this.$field_4270_e) * $var11;
    $this.$field_4269_f = $this.$field_4269_f + ($var7 - $this.$field_4269_f) * $var11;
    $this.$field_4268_g = $this.$field_4268_g + ($var8 - $this.$field_4268_g) * $var11;
    if (nms_Entity_isInsideOfMaterial($var3, nms_Material_water)) {
        $this.$field_4270_e = 0.019999999552965164;
        $this.$field_4269_f = 0.019999999552965164;
        $this.$field_4268_g = 0.20000000298023224;
    } else if (nms_Entity_isInsideOfMaterial($var3, nms_Material_lava)) {
        $this.$field_4270_e = 0.6000000238418579;
        $this.$field_4269_f = 0.10000000149011612;
        $this.$field_4268_g = 0.0;
    }
    $var10 = $this.$field_1382_n + ($this.$field_1381_o - $this.$field_1382_n) * $var1;
    $this.$field_4270_e = $this.$field_4270_e * $var10;
    $this.$field_4269_f = $this.$field_4269_f * $var10;
    $this.$field_4268_g = $this.$field_4268_g * $var10;
    if ($this.$mc0.$gameSettings.$anaglyph) {
        $var11 = ($this.$field_4270_e * 30.0 + $this.$field_4269_f * 59.0 + $this.$field_4268_g * 11.0) / 100.0;
        $var12 = ($this.$field_4270_e * 30.0 + $this.$field_4269_f * 70.0) / 100.0;
        $var13 = ($this.$field_4270_e * 30.0 + $this.$field_4268_g * 70.0) / 100.0;
        $this.$field_4270_e = $var11;
        $this.$field_4269_f = $var12;
        $this.$field_4268_g = $var13;
    }
    olo_EaglerAdapterGL30_glClearColor($this.$field_4270_e, $this.$field_4269_f, $this.$field_4268_g, 0.0);
}
function nms_EntityRenderer_func_4140_a($this, $var1) {
    var $var2, var$3, var$4, var$5, var$6;
    $var2 = $this.$mc0.$thePlayer;
    var$3 = $this.$field_4270_e;
    var$4 = $this.$field_4269_f;
    var$5 = $this.$field_4268_g;
    jn_FloatBuffer_clear($this.$field_1392_d);
    jn_FloatBufferImpl_put(jn_FloatBufferImpl_put(jn_FloatBufferImpl_put(jn_FloatBufferImpl_put($this.$field_1392_d, var$3), var$4), var$5), 1.0);
    jn_FloatBuffer_flip($this.$field_1392_d);
    var$6 = $this.$field_1392_d;
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_fogColorR = jn_FloatBufferImpl_get(var$6);
    olo_EaglerAdapterGL30_fogColorG = jn_FloatBufferImpl_get(var$6);
    olo_EaglerAdapterGL30_fogColorB = jn_FloatBufferImpl_get(var$6);
    olo_EaglerAdapterGL30_fogColorA = jn_FloatBufferImpl_get(var$6);
    olo_EaglerAdapterGL30_glNormal3f(0.0, (-1.0), 0.0);
    olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
    if (nms_Entity_isInsideOfMaterial($var2, nms_Material_water)) {
        olo_EaglerAdapterGL30_glFogi(2917, 2048);
        olo_EaglerAdapterGL30_glFogf(2914, 0.10000000149011612);
    } else if (nms_Entity_isInsideOfMaterial($var2, nms_Material_lava)) {
        olo_EaglerAdapterGL30_glFogi(2917, 2048);
        olo_EaglerAdapterGL30_glFogf(2914, 2.0);
    } else {
        olo_EaglerAdapterGL30_glFogi(2917, 9729);
        olo_EaglerAdapterGL30_glFogf(2915, $this.$field_1387_i * 0.25);
        olo_EaglerAdapterGL30_glFogf(2916, $this.$field_1387_i);
        if ($var1 < 0) {
            olo_EaglerAdapterGL30_glFogf(2915, 0.0);
            olo_EaglerAdapterGL30_glFogf(2916, $this.$field_1387_i * 0.800000011920929);
        }
        if ($this.$mc0.$theWorld.$worldProvider.$field_4220_c)
            olo_EaglerAdapterGL30_glFogf(2915, 0.0);
    }
    olo_EaglerAdapterGL30_glEnable(2903);
}
function nms_ModelBase() {
    var a = this; jl_Object.call(a);
    a.$field_1244_k = 0.0;
    a.$field_1243_l = 0;
}
function nms_ModelBase__init_() {
    var var_0 = new nms_ModelBase();
    nms_ModelBase__init_0(var_0);
    return var_0;
}
function nms_ModelBase__init_0($this) {
    $this.$field_1243_l = 0;
}
function nms_ModelBiped() {
    var a = this; nms_ModelBase.call(a);
    a.$bipedHead = null;
    a.$field_1285_b = null;
    a.$field_1284_c = null;
    a.$bipedRightArm = null;
    a.$bipedLeftArm = null;
    a.$bipedRightLeg = null;
    a.$bipedLeftLeg = null;
    a.$field_1279_h = 0;
    a.$field_1278_i = 0;
    a.$field_1277_j = 0;
}
function nms_ModelBiped__init_1() {
    var var_0 = new nms_ModelBiped();
    nms_ModelBiped__init_(var_0);
    return var_0;
}
function nms_ModelBiped__init_0(var_0) {
    var var_1 = new nms_ModelBiped();
    nms_ModelBiped__init_2(var_1, var_0);
    return var_1;
}
function nms_ModelBiped__init_3(var_0, var_1) {
    var var_2 = new nms_ModelBiped();
    nms_ModelBiped__init_4(var_2, var_0, var_1);
    return var_2;
}
function nms_ModelBiped__init_($this) {
    nms_ModelBiped__init_2($this, 0.0);
}
function nms_ModelBiped__init_2($this, $var1) {
    nms_ModelBiped__init_4($this, $var1, 0.0);
}
function nms_ModelBiped__init_4($this, $var1, $var2) {
    var var$3, var$4;
    nms_ModelBase__init_0($this);
    $this.$field_1279_h = 0;
    $this.$field_1278_i = 0;
    $this.$field_1277_j = 0;
    $this.$bipedHead = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$bipedHead, (-4.0), (-8.0), (-4.0), 8, 8, 8, $var1);
    var$3 = $this.$bipedHead;
    var$4 = 0.0 + $var2;
    nms_ModelRenderer_setPosition(var$3, 0.0, var$4, 0.0);
    $this.$field_1285_b = nms_ModelRenderer__init_(32, 0);
    nms_ModelRenderer_addBox($this.$field_1285_b, (-4.0), (-8.0), (-4.0), 8, 8, 8, $var1 + 0.5);
    nms_ModelRenderer_setPosition($this.$field_1285_b, 0.0, var$4, 0.0);
    $this.$field_1284_c = nms_ModelRenderer__init_(16, 16);
    nms_ModelRenderer_addBox($this.$field_1284_c, (-4.0), 0.0, (-2.0), 8, 12, 4, $var1);
    nms_ModelRenderer_setPosition($this.$field_1284_c, 0.0, var$4, 0.0);
    $this.$bipedRightArm = nms_ModelRenderer__init_(40, 16);
    nms_ModelRenderer_addBox($this.$bipedRightArm, (-3.0), (-2.0), (-2.0), 4, 12, 4, $var1);
    var$3 = $this.$bipedRightArm;
    var$4 = 2.0 + $var2;
    nms_ModelRenderer_setPosition(var$3, (-5.0), var$4, 0.0);
    $this.$bipedLeftArm = nms_ModelRenderer__init_(40, 16);
    $this.$bipedLeftArm.$mirror = 1;
    nms_ModelRenderer_addBox($this.$bipedLeftArm, (-1.0), (-2.0), (-2.0), 4, 12, 4, $var1);
    nms_ModelRenderer_setPosition($this.$bipedLeftArm, 5.0, var$4, 0.0);
    $this.$bipedRightLeg = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$bipedRightLeg, (-2.0), 0.0, (-2.0), 4, 12, 4, $var1);
    var$3 = $this.$bipedRightLeg;
    $var2 = 12.0 + $var2;
    nms_ModelRenderer_setPosition(var$3, (-2.0), $var2, 0.0);
    $this.$bipedLeftLeg = nms_ModelRenderer__init_(0, 16);
    $this.$bipedLeftLeg.$mirror = 1;
    nms_ModelRenderer_addBox($this.$bipedLeftLeg, (-2.0), 0.0, (-2.0), 4, 12, 4, $var1);
    nms_ModelRenderer_setPosition($this.$bipedLeftLeg, 2.0, $var2, 0.0);
}
function nms_ModelBiped_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    $this.$setRotationAngles($var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$bipedHead, $var6);
    nms_ModelRenderer_render($this.$field_1284_c, $var6);
    nms_ModelRenderer_render($this.$bipedRightArm, $var6);
    nms_ModelRenderer_render($this.$bipedLeftArm, $var6);
    nms_ModelRenderer_render($this.$bipedRightLeg, $var6);
    nms_ModelRenderer_render($this.$bipedLeftLeg, $var6);
    nms_ModelRenderer_render($this.$field_1285_b, $var6);
}
function nms_ModelBiped_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7, $var7, $var8, $var9;
    $this.$bipedHead.$rotateAngleY = $var4 / 57.2957763671875;
    $this.$bipedHead.$rotateAngleX = $var5 / 57.2957763671875;
    $this.$field_1285_b.$rotateAngleY = $this.$bipedHead.$rotateAngleY;
    $this.$field_1285_b.$rotateAngleX = $this.$bipedHead.$rotateAngleX;
    var$7 = $this.$bipedRightArm;
    $var1 = $var1 * 0.6661999821662903;
    $var4 = $var1 + 3.1415927410125732;
    var$7.$rotateAngleX = nms_MathHelper_cos($var4) * 2.0 * $var2 * 0.5;
    $this.$bipedLeftArm.$rotateAngleX = nms_MathHelper_cos($var1) * 2.0 * $var2 * 0.5;
    $this.$bipedRightArm.$rotateAngleZ = 0.0;
    $this.$bipedLeftArm.$rotateAngleZ = 0.0;
    $this.$bipedRightLeg.$rotateAngleX = nms_MathHelper_cos($var1) * 1.399999976158142 * $var2;
    $this.$bipedLeftLeg.$rotateAngleX = nms_MathHelper_cos($var4) * 1.399999976158142 * $var2;
    $this.$bipedRightLeg.$rotateAngleY = 0.0;
    $this.$bipedLeftLeg.$rotateAngleY = 0.0;
    if ($this.$field_1243_l) {
        var$7 = $this.$bipedRightArm;
        var$7.$rotateAngleX = var$7.$rotateAngleX + (-0.6283185482025146);
        var$7 = $this.$bipedLeftArm;
        var$7.$rotateAngleX = var$7.$rotateAngleX + (-0.6283185482025146);
        $this.$bipedRightLeg.$rotateAngleX = (-1.2566370964050293);
        $this.$bipedLeftLeg.$rotateAngleX = (-1.2566370964050293);
        $this.$bipedRightLeg.$rotateAngleY = 0.3141592741012573;
        $this.$bipedLeftLeg.$rotateAngleY = (-0.3141592741012573);
    }
    if ($this.$field_1279_h)
        $this.$bipedLeftArm.$rotateAngleX = $this.$bipedLeftArm.$rotateAngleX * 0.5 - 0.3141592741012573;
    if ($this.$field_1278_i)
        $this.$bipedRightArm.$rotateAngleX = $this.$bipedRightArm.$rotateAngleX * 0.5 - 0.3141592741012573;
    $this.$bipedRightArm.$rotateAngleY = 0.0;
    $this.$bipedLeftArm.$rotateAngleY = 0.0;
    if ($this.$field_1244_k > (-9990.0)) {
        $var7 = $this.$field_1244_k;
        $this.$field_1284_c.$rotateAngleY = nms_MathHelper_sin(nms_MathHelper_sqrt_float($var7) * 3.1415927410125732 * 2.0) * 0.20000000298023224;
        $this.$bipedRightArm.$offsetZ = nms_MathHelper_sin($this.$field_1284_c.$rotateAngleY) * 5.0;
        $this.$bipedRightArm.$offsetX =  -nms_MathHelper_cos($this.$field_1284_c.$rotateAngleY) * 5.0;
        $this.$bipedLeftArm.$offsetZ =  -nms_MathHelper_sin($this.$field_1284_c.$rotateAngleY) * 5.0;
        $this.$bipedLeftArm.$offsetX = nms_MathHelper_cos($this.$field_1284_c.$rotateAngleY) * 5.0;
        var$7 = $this.$bipedRightArm;
        var$7.$rotateAngleY = var$7.$rotateAngleY + $this.$field_1284_c.$rotateAngleY;
        var$7 = $this.$bipedLeftArm;
        var$7.$rotateAngleY = var$7.$rotateAngleY + $this.$field_1284_c.$rotateAngleY;
        var$7 = $this.$bipedLeftArm;
        var$7.$rotateAngleX = var$7.$rotateAngleX + $this.$field_1284_c.$rotateAngleY;
        $var1 = 1.0 - $this.$field_1244_k;
        $var1 = $var1 * $var1;
        $var8 = nms_MathHelper_sin((1.0 - $var1 * $var1) * 3.1415927410125732);
        $var9 = nms_MathHelper_sin($this.$field_1244_k * 3.1415927410125732) *  -($this.$bipedHead.$rotateAngleX - 0.699999988079071) * 0.75;
        $this.$bipedRightArm.$rotateAngleX = $this.$bipedRightArm.$rotateAngleX - ($var8 * 1.2 + $var9);
        var$7 = $this.$bipedRightArm;
        var$7.$rotateAngleY = var$7.$rotateAngleY + $this.$field_1284_c.$rotateAngleY * 2.0;
        $this.$bipedRightArm.$rotateAngleZ = nms_MathHelper_sin($this.$field_1244_k * 3.1415927410125732) * (-0.4000000059604645);
    }
    if (!$this.$field_1277_j) {
        $this.$field_1284_c.$rotateAngleX = 0.0;
        $this.$bipedRightLeg.$offsetZ = 0.0;
        $this.$bipedLeftLeg.$offsetZ = 0.0;
        $this.$bipedRightLeg.$offsetY = 12.0;
        $this.$bipedLeftLeg.$offsetY = 12.0;
        $this.$bipedHead.$offsetY = 0.0;
    } else {
        $this.$field_1284_c.$rotateAngleX = 0.5;
        var$7 = $this.$bipedRightLeg;
        var$7.$rotateAngleX = var$7.$rotateAngleX - 0.0;
        var$7 = $this.$bipedLeftLeg;
        var$7.$rotateAngleX = var$7.$rotateAngleX - 0.0;
        var$7 = $this.$bipedRightArm;
        var$7.$rotateAngleX = var$7.$rotateAngleX + 0.4000000059604645;
        var$7 = $this.$bipedLeftArm;
        var$7.$rotateAngleX = var$7.$rotateAngleX + 0.4000000059604645;
        $this.$bipedRightLeg.$offsetZ = 4.0;
        $this.$bipedLeftLeg.$offsetZ = 4.0;
        $this.$bipedRightLeg.$offsetY = 9.0;
        $this.$bipedLeftLeg.$offsetY = 9.0;
        $this.$bipedHead.$offsetY = 1.0;
    }
    var$7 = $this.$bipedRightArm;
    $var2 = var$7.$rotateAngleZ;
    $var1 = $var3 * 0.09000000357627869;
    var$7.$rotateAngleZ = $var2 + nms_MathHelper_cos($var1) * 0.05000000074505806 + 0.05000000074505806;
    var$7 = $this.$bipedLeftArm;
    var$7.$rotateAngleZ = var$7.$rotateAngleZ - (nms_MathHelper_cos($var1) * 0.05000000074505806 + 0.05000000074505806);
    var$7 = $this.$bipedRightArm;
    $var1 = var$7.$rotateAngleX;
    $var2 = $var3 * 0.06700000166893005;
    var$7.$rotateAngleX = $var1 + nms_MathHelper_sin($var2) * 0.05000000074505806;
    var$7 = $this.$bipedLeftArm;
    var$7.$rotateAngleX = var$7.$rotateAngleX - nms_MathHelper_sin($var2) * 0.05000000074505806;
}
function nms_TextureFX() {
    var a = this; jl_Object.call(a);
    a.$field_1127_a = null;
    a.$field_1126_b = 0;
    a.$field_1131_c = 0;
    a.$field_1130_d = 0;
    a.$field_1129_e = 0;
    a.$field_1128_f = 0;
}
function nms_TextureFX__init_0(var_0) {
    var var_1 = new nms_TextureFX();
    nms_TextureFX__init_(var_1, var_0);
    return var_1;
}
function nms_TextureFX__init_($this, $var1) {
    $this.$field_1127_a = $rt_createByteArray(1024);
    $this.$field_1131_c = 0;
    $this.$field_1130_d = 0;
    $this.$field_1129_e = 1;
    $this.$field_1128_f = 0;
    $this.$field_1126_b = $var1;
}
function nms_TextureWaterFX() {
    var a = this; nms_TextureFX.call(a);
    a.$field_1158_g = null;
    a.$field_1157_h = null;
    a.$field_1156_i = null;
    a.$field_1155_j = null;
    a.$tickCounter = 0;
}
function nms_TextureWaterFX__init_0() {
    var var_0 = new nms_TextureWaterFX();
    nms_TextureWaterFX__init_(var_0);
    return var_0;
}
function nms_TextureWaterFX__init_($this) {
    nms_Block_$callClinit();
    nms_TextureFX__init_($this, nms_Block_waterStill.$blockIndexInTexture);
    $this.$field_1158_g = $rt_createFloatArray(256);
    $this.$field_1157_h = $rt_createFloatArray(256);
    $this.$field_1156_i = $rt_createFloatArray(256);
    $this.$field_1155_j = $rt_createFloatArray(256);
    $this.$tickCounter = 0;
}
function nms_TextureWaterFX_func_783_a($this) {
    var $var1, $var2, $var3, $var4, $var5, $var6, var$7, $var9, $var2_0, $var12, $var13, $var10, $var11, $var8;
    $this.$tickCounter = $this.$tickCounter + 1 | 0;
    $var1 = 0;
    while ($var1 < 16) {
        $var2 = 0;
        while ($var2 < 16) {
            $var3 = 0.0;
            $var4 = $var1 - 1 | 0;
            while ($var4 <= ($var1 + 1 | 0)) {
                $var5 = $var4 & 15;
                $var6 = $var2 & 15;
                $var3 = $var3 + $this.$field_1158_g.data[$var5 + ($var6 * 16 | 0) | 0];
                $var4 = $var4 + 1 | 0;
            }
            var$7 = $this.$field_1157_h.data;
            $var9 = $var1 + ($var2 * 16 | 0) | 0;
            var$7[$var9] = $var3 / 3.299999952316284 + $this.$field_1156_i.data[$var9] * 0.800000011920929;
            $var2 = $var2 + 1 | 0;
        }
        $var1 = $var1 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 16) {
        $var2_0 = 0;
        while ($var2_0 < 16) {
            $var12 = $this.$field_1156_i.data;
            $var1 = $var2 + ($var2_0 * 16 | 0) | 0;
            $var12[$var1] = $var12[$var1] + $this.$field_1155_j.data[$var1] * 0.05000000074505806;
            if ($this.$field_1156_i.data[$var1] < 0.0)
                $this.$field_1156_i.data[$var1] = 0.0;
            $var12 = $this.$field_1155_j.data;
            $var12[$var1] = $var12[$var1] - 0.10000000149011612;
            if (jl_Math_random() < 0.05)
                $this.$field_1155_j.data[$var1] = 0.5;
            $var2_0 = $var2_0 + 1 | 0;
        }
        $var2 = $var2 + 1 | 0;
    }
    $var12 = $this.$field_1157_h;
    $this.$field_1157_h = $this.$field_1158_g;
    $this.$field_1158_g = $var12;
    $var2 = 0;
    while ($var2 < 256) {
        $var3 = $this.$field_1158_g.data[$var2];
        if ($var3 > 1.0)
            $var3 = 1.0;
        if ($var3 < 0.0)
            $var3 = 0.0;
        $var13 = $var3 * $var3;
        $var9 = 32.0 + $var13 * 32.0 | 0;
        $var10 = 50.0 + $var13 * 64.0 | 0;
        $var11 = 255;
        $var8 = 146.0 + $var13 * 50.0 | 0;
        if ($this.$field_1131_c) {
            $var1 = $var9 * 30 | 0;
            $var9 = (($var1 + ($var10 * 59 | 0) | 0) + 2805 | 0) / 100 | 0;
            $var10 = ($var1 + ($var10 * 70 | 0) | 0) / 100 | 0;
            $var11 = ($var1 + 17850 | 0) / 100 | 0;
        }
        $var12 = $this.$field_1127_a.data;
        $var2_0 = $var2 * 4 | 0;
        $var12[$var2_0 + 0 | 0] = $var9 << 24 >> 24;
        $this.$field_1127_a.data[$var2_0 + 1 | 0] = $var10 << 24 >> 24;
        $this.$field_1127_a.data[$var2_0 + 2 | 0] = $var11 << 24 >> 24;
        $this.$field_1127_a.data[$var2_0 + 3 | 0] = $var8 << 24 >> 24;
        $var2 = $var2 + 1 | 0;
    }
}
function nms_TextureLavaFX() {
    var a = this; nms_TextureFX.call(a);
    a.$field_1147_g = null;
    a.$field_1146_h = null;
    a.$field_1145_i = null;
    a.$field_1144_j = null;
}
function nms_TextureLavaFX__init_0() {
    var var_0 = new nms_TextureLavaFX();
    nms_TextureLavaFX__init_(var_0);
    return var_0;
}
function nms_TextureLavaFX__init_($this) {
    nms_Block_$callClinit();
    nms_TextureFX__init_($this, nms_Block_lavaStill.$blockIndexInTexture);
    $this.$field_1147_g = $rt_createFloatArray(256);
    $this.$field_1146_h = $rt_createFloatArray(256);
    $this.$field_1145_i = $rt_createFloatArray(256);
    $this.$field_1144_j = $rt_createFloatArray(256);
}
function nms_TextureLavaFX_func_783_a($this) {
    var $var1, $var2, $var3, $var4, $var5, $var6, $var8, $var7, $var9, var$10, $var10, $var11, $var2_0, var$14;
    $var1 = 0;
    while ($var1 < 16) {
        $var2 = 0;
        while ($var2 < 16) {
            $var3 = 0.0;
            $var4 = nms_MathHelper_sin($var2 * 3.1415927410125732 * 2.0 / 16.0) * 1.2000000476837158 | 0;
            $var5 = nms_MathHelper_sin($var1 * 3.1415927410125732 * 2.0 / 16.0) * 1.2000000476837158 | 0;
            $var6 = $var1 - 1 | 0;
            while (true) {
                $var8 = $var1 + 1 | 0;
                if ($var6 > $var8)
                    break;
                $var7 = $var2 - 1 | 0;
                while ($var7 <= ($var2 + 1 | 0)) {
                    $var8 = ($var6 + $var4 | 0) & 15;
                    $var9 = ($var7 + $var5 | 0) & 15;
                    $var3 = $var3 + $this.$field_1147_g.data[$var8 + ($var9 * 16 | 0) | 0];
                    $var7 = $var7 + 1 | 0;
                }
                $var6 = $var6 + 1 | 0;
            }
            var$10 = $this.$field_1146_h.data;
            $var10 = $var1 + ($var2 * 16 | 0) | 0;
            $var3 = $var3 / 10.0;
            $var11 = $this.$field_1145_i.data;
            $var4 = ($var1 + 0 | 0) & 15;
            $var2_0 = (($var2 + 0 | 0) & 15) * 16 | 0;
            var$14 = $var11[$var4 + $var2_0 | 0];
            $var11 = $this.$field_1145_i.data;
            $var8 = $var8 & 15;
            var$14 = var$14 + $var11[$var8 + $var2_0 | 0];
            $var11 = $this.$field_1145_i.data;
            $var2 = $var2 + 1 | 0;
            $var2_0 = ($var2 & 15) * 16 | 0;
            var$10[$var10] = $var3 + (var$14 + $var11[$var8 + $var2_0 | 0] + $this.$field_1145_i.data[$var4 + $var2_0 | 0]) / 4.0 * 0.800000011920929;
            $var11 = $this.$field_1145_i.data;
            $var11[$var10] = $var11[$var10] + $this.$field_1144_j.data[$var10] * 0.009999999776482582;
            if ($this.$field_1145_i.data[$var10] < 0.0)
                $this.$field_1145_i.data[$var10] = 0.0;
            $var11 = $this.$field_1144_j.data;
            $var11[$var10] = $var11[$var10] - 0.05999999865889549;
            if (jl_Math_random() < 0.005)
                $this.$field_1144_j.data[$var10] = 1.5;
        }
        $var1 = $var1 + 1 | 0;
    }
    $var11 = $this.$field_1146_h;
    $this.$field_1146_h = $this.$field_1147_g;
    $this.$field_1147_g = $var11;
    $var2_0 = 0;
    while ($var2_0 < 256) {
        $var3 = $this.$field_1147_g.data[$var2_0] * 2.0;
        if ($var3 > 1.0)
            $var3 = 1.0;
        if ($var3 < 0.0)
            $var3 = 0.0;
        $var8 = $var3 * 100.0 + 155.0 | 0;
        var$14 = $var3 * $var3;
        $var9 = var$14 * 255.0 | 0;
        $var10 = var$14 * $var3 * $var3 * 128.0 | 0;
        if ($this.$field_1131_c) {
            $var4 = $var8 * 30 | 0;
            $var8 = (($var4 + ($var9 * 59 | 0) | 0) + ($var10 * 11 | 0) | 0) / 100 | 0;
            $var9 = ($var4 + ($var9 * 70 | 0) | 0) / 100 | 0;
            $var10 = ($var4 + ($var10 * 70 | 0) | 0) / 100 | 0;
        }
        $var11 = $this.$field_1127_a.data;
        $var1 = $var2_0 * 4 | 0;
        $var11[$var1 + 0 | 0] = $var8 << 24 >> 24;
        $this.$field_1127_a.data[$var1 + 1 | 0] = $var9 << 24 >> 24;
        $this.$field_1127_a.data[$var1 + 2 | 0] = $var10 << 24 >> 24;
        $this.$field_1127_a.data[$var1 + 3 | 0] = (-1);
        $var2_0 = $var2_0 + 1 | 0;
    }
}
function olo_EaglerAdapterGL30() {
    nlea_EaglerAdapterImpl2.call(this);
}
var olo_EaglerAdapterGL30_isWebGL = 0;
var olo_EaglerAdapterGL30_texObjects = null;
var olo_EaglerAdapterGL30_enableTexture2D = 0;
var olo_EaglerAdapterGL30_enableLighting = 0;
var olo_EaglerAdapterGL30_enableAlphaTest = 0;
var olo_EaglerAdapterGL30_alphaThresh = 0.0;
var olo_EaglerAdapterGL30_isCompilingDisplayList = 0;
var olo_EaglerAdapterGL30_compilingDisplayList = null;
var olo_EaglerAdapterGL30_enableColorArray = 0;
var olo_EaglerAdapterGL30_enableNormalArray = 0;
var olo_EaglerAdapterGL30_enableTex0Array = 0;
var olo_EaglerAdapterGL30_colorR = 0.0;
var olo_EaglerAdapterGL30_colorG = 0.0;
var olo_EaglerAdapterGL30_colorB = 0.0;
var olo_EaglerAdapterGL30_colorA = 0.0;
var olo_EaglerAdapterGL30_normalX = 0.0;
var olo_EaglerAdapterGL30_normalY = 0.0;
var olo_EaglerAdapterGL30_normalZ = 0.0;
var olo_EaglerAdapterGL30_tex0X = 0.0;
var olo_EaglerAdapterGL30_tex0Y = 0.0;
var olo_EaglerAdapterGL30_enableColorMaterial = 0;
var olo_EaglerAdapterGL30_fogColorR = 0.0;
var olo_EaglerAdapterGL30_fogColorG = 0.0;
var olo_EaglerAdapterGL30_fogColorB = 0.0;
var olo_EaglerAdapterGL30_fogColorA = 0.0;
var olo_EaglerAdapterGL30_fogMode = 0;
var olo_EaglerAdapterGL30_fogEnabled = 0;
var olo_EaglerAdapterGL30_fogPremultiply = 0;
var olo_EaglerAdapterGL30_fogStart = 0.0;
var olo_EaglerAdapterGL30_fogEnd = 0.0;
var olo_EaglerAdapterGL30_fogDensity = 0.0;
var olo_EaglerAdapterGL30_bytesUploaded = 0;
var olo_EaglerAdapterGL30_vertexDrawn = 0;
var olo_EaglerAdapterGL30_triangleDrawn = 0;
var olo_EaglerAdapterGL30_matrixMode = 0;
var olo_EaglerAdapterGL30_matModelV = null;
var olo_EaglerAdapterGL30_matModelPointer = 0;
var olo_EaglerAdapterGL30_matProjV = null;
var olo_EaglerAdapterGL30_matProjPointer = 0;
var olo_EaglerAdapterGL30_matTexV = null;
var olo_EaglerAdapterGL30_matTexPointer = 0;
var olo_EaglerAdapterGL30_quadsToTrianglesBuffer = null;
var olo_EaglerAdapterGL30_currentArray = null;
var olo_EaglerAdapterGL30_displayLists = null;
var olo_EaglerAdapterGL30_displayListsInitialized = null;
var olo_EaglerAdapterGL30_deevis = null;
var olo_EaglerAdapterGL30_lightPos0vec0 = null;
var olo_EaglerAdapterGL30_lightPos1vec0 = null;
var olo_EaglerAdapterGL30_lightPos0vec = null;
var olo_EaglerAdapterGL30_lightPos1vec = null;
var olo_EaglerAdapterGL30_displayListId = 0;
var olo_EaglerAdapterGL30_shader = null;
var olo_EaglerAdapterGL30_blankUploadArray = null;
var olo_EaglerAdapterGL30_occlusion_vao = null;
var olo_EaglerAdapterGL30_occlusion_vbo = null;
var olo_EaglerAdapterGL30_occlusion_program = null;
var olo_EaglerAdapterGL30_occlusion_matrix_m = null;
var olo_EaglerAdapterGL30_occlusion_matrix_p = null;
var olo_EaglerAdapterGL30_queryObjs = null;
var olo_EaglerAdapterGL30_cachedOcclusionP = null;
var olo_EaglerAdapterGL30_occlusionModel = null;
var olo_EaglerAdapterGL30_occlusionProj = null;
var olo_EaglerAdapterGL30_unprojA = null;
var olo_EaglerAdapterGL30_unprojB = null;
var olo_EaglerAdapterGL30_unprojC = null;
var olo_EaglerAdapterGL30_lastBandwidthReset = Long_ZERO;
var olo_EaglerAdapterGL30_lastBandwidth = 0;
function olo_EaglerAdapterGL30_$callClinit() {
    olo_EaglerAdapterGL30_$callClinit = $rt_eraseClinit(olo_EaglerAdapterGL30);
    olo_EaglerAdapterGL30__clinit_();
}
function olo_EaglerAdapterGL30__init_0() {
    var var_0 = new olo_EaglerAdapterGL30();
    olo_EaglerAdapterGL30__init_(var_0);
    return var_0;
}
function olo_EaglerAdapterGL30__init_($this) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2__init_($this);
}
function olo_EaglerAdapterGL30_glEnable($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch ($p1) {
            case 2884:
                nlea_EaglerAdapterImpl2__wglEnable(2884);
                break a;
            case 2896:
                olo_EaglerAdapterGL30_enableLighting = 1;
                break a;
            case 2903:
                olo_EaglerAdapterGL30_enableColorMaterial = 1;
                break a;
            case 2912:
                olo_EaglerAdapterGL30_fogEnabled = 1;
                break a;
            case 2929:
                nlea_EaglerAdapterImpl2__wglEnable(2929);
                break a;
            case 3008:
                olo_EaglerAdapterGL30_enableAlphaTest = 1;
                break a;
            case 3042:
                nlea_EaglerAdapterImpl2__wglEnable(3042);
                break a;
            case 3553:
                olo_EaglerAdapterGL30_enableTexture2D = 1;
                break a;
            case 32823:
                nlea_EaglerAdapterImpl2__wglEnable(32823);
                break a;
            case 32826:
                break;
            default:
                break a;
        }
    }
}
function olo_EaglerAdapterGL30_glDepthFunc($p1) {
    var $f;
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        $f = 518;
        switch ($p1) {
            case 514:
                $f = 514;
                break a;
            case 515:
                $f = 518;
                break a;
            case 516:
                $f = 513;
                break a;
            default:
        }
    }
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.depthFunc($f);
}
function olo_EaglerAdapterGL30_glAlphaFunc($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_alphaThresh = $p2;
}
function olo_EaglerAdapterGL30_glCullFace($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.cullFace($p1);
}
function olo_EaglerAdapterGL30_glMatrixMode($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_matrixMode = $p1;
}
function olo_EaglerAdapterGL30_getMatrix() {
    olo_EaglerAdapterGL30_$callClinit();
    switch (olo_EaglerAdapterGL30_matrixMode) {
        case 5888:
            break;
        case 5889:
            return olo_EaglerAdapterGL30_matProjV.data[olo_EaglerAdapterGL30_matProjPointer];
        case 5890:
            return olo_EaglerAdapterGL30_matTexV.data[olo_EaglerAdapterGL30_matTexPointer];
        default:
    }
    return olo_EaglerAdapterGL30_matModelV.data[olo_EaglerAdapterGL30_matModelPointer];
}
function olo_EaglerAdapterGL30_glLoadIdentity() {
    olo_EaglerAdapterGL30_$callClinit();
    nPgv_Matrix4f_setIdentity(olo_EaglerAdapterGL30_getMatrix());
}
function olo_EaglerAdapterGL30_glViewport($p1, $p2, $p3, $p4) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_viewportCache.data[0] = $p1;
    nlea_EaglerAdapterImpl2_viewportCache.data[1] = $p2;
    nlea_EaglerAdapterImpl2_viewportCache.data[2] = $p3;
    nlea_EaglerAdapterImpl2_viewportCache.data[3] = $p4;
    nlea_EaglerAdapterImpl2_webgl.viewport($p1, $p2, $p3, $p4);
}
function olo_EaglerAdapterGL30_glClear($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.clear($p1);
}
function olo_EaglerAdapterGL30_glOrtho($left, $right, $bottom, $top, $zNear, $zFar) {
    var $res, var$8, var$9, var$10;
    olo_EaglerAdapterGL30_$callClinit();
    $res = olo_EaglerAdapterGL30_getMatrix();
    var$8 = $right - $left;
    $res.$m00 = 2.0 / var$8;
    $res.$m01 = 0.0;
    $res.$m02 = 0.0;
    $res.$m03 = 0.0;
    $res.$m10 = 0.0;
    var$9 = $top - $bottom;
    $res.$m11 = 2.0 / var$9;
    $res.$m12 = 0.0;
    $res.$m13 = 0.0;
    $res.$m20 = 0.0;
    $res.$m21 = 0.0;
    var$10 = $zFar - $zNear;
    $res.$m22 = 2.0 / var$10;
    $res.$m23 = 0.0;
    $res.$m30 =  -($right + $left) / var$8;
    $res.$m31 =  -($top + $bottom) / var$9;
    $res.$m32 = ($zFar + $zNear) / var$10;
    $res.$m33 = 1.0;
}
function olo_EaglerAdapterGL30_glTranslatef($p1, $p2, $p3) {
    var var$4;
    olo_EaglerAdapterGL30_$callClinit();
    nPgv_Vector3f_set(olo_EaglerAdapterGL30_deevis, $p1, $p2, $p3);
    var$4 = olo_EaglerAdapterGL30_getMatrix();
    nPgv_Matrix4f_translate(var$4, olo_EaglerAdapterGL30_deevis, var$4);
    if (!olo_EaglerAdapterGL30_isCompilingDisplayList)
        return;
    var$4 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$4, $rt_s(213));
    $rt_throw(var$4);
}
function olo_EaglerAdapterGL30_glClearColor($p1, $p2, $p3, $p4) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.clearColor($p1, $p2, $p3, $p4);
}
function olo_EaglerAdapterGL30_glDisable($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch ($p1) {
            case 2884:
                nlea_EaglerAdapterImpl2__wglDisable(2884);
                break a;
            case 2896:
                olo_EaglerAdapterGL30_enableLighting = 0;
                break a;
            case 2903:
                olo_EaglerAdapterGL30_enableColorMaterial = 0;
                break a;
            case 2912:
                olo_EaglerAdapterGL30_fogEnabled = 0;
                break a;
            case 2929:
                nlea_EaglerAdapterImpl2__wglDisable(2929);
                break a;
            case 3008:
                olo_EaglerAdapterGL30_enableAlphaTest = 0;
                break a;
            case 3042:
                nlea_EaglerAdapterImpl2__wglDisable(3042);
                break a;
            case 3553:
                olo_EaglerAdapterGL30_enableTexture2D = 0;
                break a;
            case 32823:
                nlea_EaglerAdapterImpl2__wglDisable(32823);
                break a;
            case 32826:
                break;
            default:
                break a;
        }
    }
}
function olo_EaglerAdapterGL30_glColor4f($p1, $p2, $p3, $p4) {
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_colorR = $p1;
    olo_EaglerAdapterGL30_colorG = $p2;
    olo_EaglerAdapterGL30_colorB = $p3;
    olo_EaglerAdapterGL30_colorA = $p4;
}
function olo_EaglerAdapterGL30_glTexImage2D($p1, $p2, $p3, $p4, $p5, $p6, $p7, $p8, $p9) {
    var var$10, var$11, var$12, var$13;
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    if ($p9 === null) {
        var$10 = nlea_EaglerAdapterImpl2_webgl;
        var$11 = null;
        var$10.texImage2D(3553, $p2, 32856, $p4, $p5, $p6, 6408, 5121, var$11);
    } else {
        var$12 = jn_Buffer_remaining($p9);
        var$10 = nlea_EaglerAdapterImpl2_uploadBuffer;
        var$13 = 0;
        while (var$13 < var$12) {
            $p7 = (jn_ByteBufferImpl_get($p9) & 255) << 16 >> 16;
            var$10[var$13] = $p7;
            var$13 = var$13 + 1 | 0;
        }
        $p9 = new Uint8Array(nlea_EaglerAdapterImpl2_uploadBuffer.buffer, 0, var$12);
        nlea_EaglerAdapterImpl2_webgl.texImage2D(3553, $p2, 32856, $p4, $p5, $p6, 6408, 5121, $p9);
    }
}
function olo_EaglerAdapterGL30_glPushMatrix() {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch (olo_EaglerAdapterGL30_matrixMode) {
            case 5888:
                break;
            case 5889:
                if (olo_EaglerAdapterGL30_matProjPointer >= (olo_EaglerAdapterGL30_matProjV.data.length - 1 | 0)) {
                    ji_PrintStream_println(jl_System_err(), $rt_s(214));
                    break a;
                }
                olo_EaglerAdapterGL30_matProjPointer = olo_EaglerAdapterGL30_matProjPointer + 1 | 0;
                nPgv_Matrix4f_load(olo_EaglerAdapterGL30_matProjV.data[olo_EaglerAdapterGL30_matProjPointer], olo_EaglerAdapterGL30_matProjV.data[olo_EaglerAdapterGL30_matProjPointer - 1 | 0]);
                break a;
            case 5890:
                if (olo_EaglerAdapterGL30_matTexPointer >= (olo_EaglerAdapterGL30_matTexV.data.length - 1 | 0)) {
                    ji_PrintStream_println(jl_System_err(), $rt_s(215));
                    break a;
                }
                olo_EaglerAdapterGL30_matTexPointer = olo_EaglerAdapterGL30_matTexPointer + 1 | 0;
                nPgv_Matrix4f_load(olo_EaglerAdapterGL30_matTexV.data[olo_EaglerAdapterGL30_matTexPointer], olo_EaglerAdapterGL30_matTexV.data[olo_EaglerAdapterGL30_matTexPointer - 1 | 0]);
                break a;
            default:
        }
        if (olo_EaglerAdapterGL30_matModelPointer >= (olo_EaglerAdapterGL30_matModelV.data.length - 1 | 0))
            ji_PrintStream_println(jl_System_err(), $rt_s(216));
        else {
            olo_EaglerAdapterGL30_matModelPointer = olo_EaglerAdapterGL30_matModelPointer + 1 | 0;
            nPgv_Matrix4f_load(olo_EaglerAdapterGL30_matModelV.data[olo_EaglerAdapterGL30_matModelPointer], olo_EaglerAdapterGL30_matModelV.data[olo_EaglerAdapterGL30_matModelPointer - 1 | 0]);
        }
    }
}
function olo_EaglerAdapterGL30_glRotatef($p1, $p2, $p3, $p4) {
    var var$5;
    olo_EaglerAdapterGL30_$callClinit();
    nPgv_Vector3f_set(olo_EaglerAdapterGL30_deevis, $p2, $p3, $p4);
    var$5 = olo_EaglerAdapterGL30_getMatrix();
    nPgv_Matrix4f_rotate(var$5, $p1 * 0.01745329238474369, olo_EaglerAdapterGL30_deevis, var$5);
    if (!olo_EaglerAdapterGL30_isCompilingDisplayList)
        return;
    var$5 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$5, $rt_s(213));
    $rt_throw(var$5);
}
function olo_EaglerAdapterGL30_glPopMatrix() {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch (olo_EaglerAdapterGL30_matrixMode) {
            case 5888:
                break;
            case 5889:
                if (olo_EaglerAdapterGL30_matProjPointer <= 0) {
                    ji_PrintStream_println(jl_System_err(), $rt_s(217));
                    break a;
                }
                olo_EaglerAdapterGL30_matProjPointer = olo_EaglerAdapterGL30_matProjPointer - 1 | 0;
                break a;
            case 5890:
                if (olo_EaglerAdapterGL30_matTexPointer <= 0) {
                    ji_PrintStream_println(jl_System_err(), $rt_s(218));
                    break a;
                }
                olo_EaglerAdapterGL30_matTexPointer = olo_EaglerAdapterGL30_matTexPointer - 1 | 0;
                break a;
            default:
        }
        if (olo_EaglerAdapterGL30_matModelPointer <= 0)
            ji_PrintStream_println(jl_System_err(), $rt_s(219));
        else
            olo_EaglerAdapterGL30_matModelPointer = olo_EaglerAdapterGL30_matModelPointer - 1 | 0;
    }
}
function olo_EaglerAdapterGL30_glGetFloat($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch ($p1) {
            case 2982:
                break;
            case 2983:
                nPgv_Matrix4f_store(olo_EaglerAdapterGL30_matProjV.data[olo_EaglerAdapterGL30_matProjPointer], $p2);
                break a;
            default:
        }
        nPgv_Matrix4f_store(olo_EaglerAdapterGL30_matModelV.data[olo_EaglerAdapterGL30_matModelPointer], $p2);
    }
}
function olo_EaglerAdapterGL30_glScalef($p1, $p2, $p3) {
    var var$4;
    olo_EaglerAdapterGL30_$callClinit();
    nPgv_Vector3f_set(olo_EaglerAdapterGL30_deevis, $p1, $p2, $p3);
    nPgv_Matrix4f_scale(olo_EaglerAdapterGL30_getMatrix(), olo_EaglerAdapterGL30_deevis);
    if (!olo_EaglerAdapterGL30_isCompilingDisplayList)
        return;
    var$4 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$4, $rt_s(213));
    $rt_throw(var$4);
}
function olo_EaglerAdapterGL30_glBlendFunc($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_fogPremultiply = $p1 == 1 && $p2 == 771 ? 1 : 0;
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.blendFunc($p1, $p2);
}
function olo_EaglerAdapterGL30_glDepthMask($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.depthMask(!!$p1);
}
function olo_EaglerAdapterGL30_glColorMask($p1, $p2, $p3, $p4) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.colorMask(!!$p1, !!$p2, !!$p3, !!$p4);
}
function olo_EaglerAdapterGL30_glBindTexture($p1, $p2) {
    var $t, var$4;
    olo_EaglerAdapterGL30_$callClinit();
    $t = nPg_GLObjectMap_get(olo_EaglerAdapterGL30_texObjects, $p2);
    nlea_EaglerAdapterImpl2_$callClinit();
    var$4 = nlea_EaglerAdapterImpl2_webgl;
    $t = $t !== null ? $t.$obj4 : null;
    var$4.bindTexture(3553, $t);
}
function olo_EaglerAdapterGL30_glTexParameteri($p1, $p2, $p3) {
    olo_EaglerAdapterGL30_$callClinit();
    if (!($p3 != 33071 && $p3 != 10496))
        $p3 = 33071;
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.texParameteri($p1, $p2, $p3);
}
function olo_EaglerAdapterGL30_glNormal3f($p1, $p2, $p3) {
    var $len;
    olo_EaglerAdapterGL30_$callClinit();
    $len = jl_Math_sqrt($p1 * $p1 + $p2 * $p2 + $p3 * $p3);
    olo_EaglerAdapterGL30_normalX = $p1 / $len;
    olo_EaglerAdapterGL30_normalY = $p2 / $len;
    olo_EaglerAdapterGL30_normalZ = $p3 / $len;
}
function olo_EaglerAdapterGL30__wglBindVertexArray0($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_currentArray = $p1;
    nlea_EaglerAdapterImpl2__wglBindVertexArray($p1);
}
function olo_EaglerAdapterGL30_glCallList($p1) {
    var $d;
    olo_EaglerAdapterGL30_$callClinit();
    if (!olo_EaglerAdapterGL30_isCompilingDisplayList) {
        $d = ju_HashMap_get(olo_EaglerAdapterGL30_displayListsInitialized, jl_Integer_valueOf($p1));
        if ($d !== null && $d.$listLength > 0) {
            olo_EaglerAdapterGL30_bindTheShader($d.$shaderMode | 0 | (olo_EaglerAdapterGL30_enableColorMaterial && olo_EaglerAdapterGL30_enableLighting ? 8 : 0) | (!olo_EaglerAdapterGL30_fogEnabled ? 0 : 16) | (!olo_EaglerAdapterGL30_enableAlphaTest ? 0 : 32) | (!olo_EaglerAdapterGL30_enableTexture2D ? 0 : 64));
            olo_EaglerAdapterGL30__wglBindVertexArray0($d.$glarray);
            olo_EaglerAdapterGL30__wglDrawQuadArrays(0, $d.$listLength);
            olo_EaglerAdapterGL30_vertexDrawn = olo_EaglerAdapterGL30_vertexDrawn + (($d.$listLength * 6 | 0) / 4 | 0) | 0;
            olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($d.$listLength / 2 | 0) | 0;
        }
    }
}
function olo_EaglerAdapterGL30_glNewList($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    if (!olo_EaglerAdapterGL30_isCompilingDisplayList) {
        olo_EaglerAdapterGL30_compilingDisplayList = ju_HashMap_get(olo_EaglerAdapterGL30_displayLists, jl_Integer_valueOf($p1));
        if (olo_EaglerAdapterGL30_compilingDisplayList !== null) {
            olo_EaglerAdapterGL30_compilingDisplayList.$shaderMode = (-1);
            olo_EaglerAdapterGL30_compilingDisplayList.$listLength = 0;
            olo_EaglerAdapterGL30_isCompilingDisplayList = 1;
        }
    }
}
function olo_EaglerAdapterGL30_glEndList() {
    var $f, var$2, var$3, $l;
    olo_EaglerAdapterGL30_$callClinit();
    if (olo_EaglerAdapterGL30_isCompilingDisplayList) {
        olo_EaglerAdapterGL30_isCompilingDisplayList = 0;
        nlea_EaglerAdapterImpl2_$callClinit();
        $f = nlea_EaglerAdapterImpl2_appendbuffer.buffer;
        var$2 = nlea_EaglerAdapterImpl2_appendbufferindex;
        var$3 = new Int32Array($f, 0, var$2);
        nlea_EaglerAdapterImpl2_appendbufferindex = 0;
        $l = nlea_EaglerAdapterImpl2__wArrayByteLength(var$3);
        if ($l > 0) {
            if (olo_EaglerAdapterGL30_compilingDisplayList.$glbuffer === null) {
                ju_HashMap_putImpl(olo_EaglerAdapterGL30_displayListsInitialized, jl_Integer_valueOf(olo_EaglerAdapterGL30_compilingDisplayList.$id), olo_EaglerAdapterGL30_compilingDisplayList);
                olo_EaglerAdapterGL30_compilingDisplayList.$glarray = nlea_EaglerAdapterImpl2__wglCreateVertexArray();
                olo_EaglerAdapterGL30_compilingDisplayList.$glbuffer = nlea_EaglerAdapterImpl2__wglCreateBuffer();
                $f = nPg_FixedFunctionShader_instance(olo_EaglerAdapterGL30_compilingDisplayList.$shaderMode);
                olo_EaglerAdapterGL30__wglBindVertexArray0(olo_EaglerAdapterGL30_compilingDisplayList.$glarray);
                nlea_EaglerAdapterImpl2__wglBindBuffer(34962, olo_EaglerAdapterGL30_compilingDisplayList.$glbuffer);
                nPg_FixedFunctionShader_setupArrayForProgram($f);
            }
            nlea_EaglerAdapterImpl2__wglBindBuffer(34962, olo_EaglerAdapterGL30_compilingDisplayList.$glbuffer);
            nlea_EaglerAdapterImpl2__wglBufferData(34962, var$3, 35044);
            olo_EaglerAdapterGL30_bytesUploaded = olo_EaglerAdapterGL30_bytesUploaded + $l | 0;
        }
    }
}
function olo_EaglerAdapterGL30_glColor3f($p1, $p2, $p3) {
    olo_EaglerAdapterGL30_$callClinit();
    olo_EaglerAdapterGL30_colorR = $p1;
    olo_EaglerAdapterGL30_colorG = $p2;
    olo_EaglerAdapterGL30_colorB = $p3;
    olo_EaglerAdapterGL30_colorA = 1.0;
}
function olo_EaglerAdapterGL30_glPolygonOffset($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.polygonOffset($p1, $p2);
}
function olo_EaglerAdapterGL30_glEnableVertexAttrib($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch ($p1) {
            case 32885:
                break;
            case 32886:
                olo_EaglerAdapterGL30_enableColorArray = 1;
                break a;
            case 32887:
                break a;
            case 32888:
                olo_EaglerAdapterGL30_enableTex0Array = 1;
                break a;
            default:
                break a;
        }
        olo_EaglerAdapterGL30_enableNormalArray = 1;
    }
}
function olo_EaglerAdapterGL30_glDisableVertexAttrib($p1) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch ($p1) {
            case 32885:
                break;
            case 32886:
                olo_EaglerAdapterGL30_enableColorArray = 0;
                break a;
            case 32887:
                break a;
            case 32888:
                olo_EaglerAdapterGL30_enableTex0Array = 0;
                break a;
            default:
                break a;
        }
        olo_EaglerAdapterGL30_enableNormalArray = 0;
    }
}
function olo_EaglerAdapterGL30_getShaderModeFlag0() {
    olo_EaglerAdapterGL30_$callClinit();
    return 0 | (!olo_EaglerAdapterGL30_enableColorArray ? 0 : 1) | (!olo_EaglerAdapterGL30_enableNormalArray ? 0 : 2) | (!olo_EaglerAdapterGL30_enableTex0Array ? 0 : 4);
}
function olo_EaglerAdapterGL30_bindTheShader($mode) {
    var $s;
    olo_EaglerAdapterGL30_$callClinit();
    $s = nPg_FixedFunctionShader_instance($mode);
    olo_EaglerAdapterGL30_shader = $s;
    nPg_FixedFunctionShader_useProgram($s);
    if (olo_EaglerAdapterGL30_enableAlphaTest)
        nPg_FixedFunctionShader_setAlphaTest($s, olo_EaglerAdapterGL30_alphaThresh);
    nPg_FixedFunctionShader_setColor($s, olo_EaglerAdapterGL30_colorR, olo_EaglerAdapterGL30_colorG, olo_EaglerAdapterGL30_colorB, olo_EaglerAdapterGL30_colorA);
    if (olo_EaglerAdapterGL30_fogEnabled) {
        nPg_FixedFunctionShader_setFogMode($s, (!olo_EaglerAdapterGL30_fogPremultiply ? 0 : 2) + olo_EaglerAdapterGL30_fogMode | 0);
        nPg_FixedFunctionShader_setFogColor($s, olo_EaglerAdapterGL30_fogColorR, olo_EaglerAdapterGL30_fogColorG, olo_EaglerAdapterGL30_fogColorB, olo_EaglerAdapterGL30_fogColorA);
        nPg_FixedFunctionShader_setFogDensity($s, olo_EaglerAdapterGL30_fogDensity);
        nPg_FixedFunctionShader_setFogStartEnd($s, olo_EaglerAdapterGL30_fogStart, olo_EaglerAdapterGL30_fogEnd);
    }
    nPg_FixedFunctionShader_setModelMatrix($s, olo_EaglerAdapterGL30_matModelV.data[olo_EaglerAdapterGL30_matModelPointer]);
    nPg_FixedFunctionShader_setProjectionMatrix($s, olo_EaglerAdapterGL30_matProjV.data[olo_EaglerAdapterGL30_matProjPointer]);
    nPg_FixedFunctionShader_setTextureMatrix($s, olo_EaglerAdapterGL30_matTexV.data[olo_EaglerAdapterGL30_matTexPointer]);
    if (olo_EaglerAdapterGL30_enableColorMaterial && olo_EaglerAdapterGL30_enableLighting) {
        nPg_FixedFunctionShader_setNormal($s, olo_EaglerAdapterGL30_normalX, olo_EaglerAdapterGL30_normalY, olo_EaglerAdapterGL30_normalZ);
        nPg_FixedFunctionShader_setLightPositions($s, olo_EaglerAdapterGL30_lightPos0vec, olo_EaglerAdapterGL30_lightPos1vec);
    }
    nPg_FixedFunctionShader_setTex0Coords($s, olo_EaglerAdapterGL30_tex0X, olo_EaglerAdapterGL30_tex0Y);
}
function olo_EaglerAdapterGL30_glDrawArrays($p1, $p2, $p3, $buffer) {
    var var$5;
    olo_EaglerAdapterGL30_$callClinit();
    if (olo_EaglerAdapterGL30_isCompilingDisplayList) {
        if ($p1 != 7)
            ji_PrintStream_println(jl_System_err(), $rt_s(220));
        else {
            if (olo_EaglerAdapterGL30_compilingDisplayList.$shaderMode == (-1))
                olo_EaglerAdapterGL30_compilingDisplayList.$shaderMode = olo_EaglerAdapterGL30_getShaderModeFlag0();
            else if (olo_EaglerAdapterGL30_compilingDisplayList.$shaderMode != olo_EaglerAdapterGL30_getShaderModeFlag0())
                ji_PrintStream_println(jl_System_err(), $rt_s(221));
            var$5 = olo_EaglerAdapterGL30_compilingDisplayList;
            var$5.$listLength = var$5.$listLength + $p3 | 0;
            nlea_EaglerAdapterImpl2_$callClinit();
            $buffer = $buffer;
            if ((nlea_EaglerAdapterImpl2_appendbufferindex + $buffer.length | 0) < nlea_EaglerAdapterImpl2_appendbuffer.length) {
                var$5 = nlea_EaglerAdapterImpl2_appendbuffer;
                $p1 = nlea_EaglerAdapterImpl2_appendbufferindex;
                var$5.set($buffer, $p1);
                nlea_EaglerAdapterImpl2_appendbufferindex = nlea_EaglerAdapterImpl2_appendbufferindex + $buffer.length | 0;
            }
        }
    } else {
        olo_EaglerAdapterGL30_bytesUploaded = olo_EaglerAdapterGL30_bytesUploaded + nlea_EaglerAdapterImpl2__wArrayByteLength($buffer) | 0;
        olo_EaglerAdapterGL30_vertexDrawn = olo_EaglerAdapterGL30_vertexDrawn + $p3 | 0;
        olo_EaglerAdapterGL30_bindTheShader(0 | (!olo_EaglerAdapterGL30_enableColorArray ? 0 : 1) | (!olo_EaglerAdapterGL30_enableNormalArray ? 0 : 2) | (!olo_EaglerAdapterGL30_enableTex0Array ? 0 : 4) | (olo_EaglerAdapterGL30_enableColorMaterial && olo_EaglerAdapterGL30_enableLighting ? 8 : 0) | (!olo_EaglerAdapterGL30_fogEnabled ? 0 : 16) | (!olo_EaglerAdapterGL30_enableAlphaTest ? 0 : 32) | (!olo_EaglerAdapterGL30_enableTexture2D ? 0 : 64));
        olo_EaglerAdapterGL30__wglBindVertexArray0(olo_EaglerAdapterGL30_shader.$genericArray);
        nlea_EaglerAdapterImpl2__wglBindBuffer(34962, olo_EaglerAdapterGL30_shader.$genericBuffer);
        if (!olo_EaglerAdapterGL30_shader.$bufferIsInitialized) {
            olo_EaglerAdapterGL30_shader.$bufferIsInitialized = 1;
            nlea_EaglerAdapterImpl2__wglBufferData(34962, olo_EaglerAdapterGL30_blankUploadArray, 35048);
        }
        var$5 = nlea_EaglerAdapterImpl2_webgl;
        $buffer = $buffer;
        var$5.bufferSubData(34962, 0, $buffer);
        if ($p1 == 7) {
            olo_EaglerAdapterGL30__wglDrawQuadArrays($p2, $p3);
            olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($p3 / 2 | 0) | 0;
        } else {
            a: {
                b: {
                    switch ($p1) {
                        case 1:
                            break;
                        case 2:
                        case 4:
                            break b;
                        case 3:
                            $p1 = 3;
                            olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($p3 - 1 | 0) | 0;
                            break a;
                        case 5:
                            $p1 = 5;
                            olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($p3 - 2 | 0) | 0;
                            break a;
                        case 6:
                            $p1 = 6;
                            olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($p3 - 2 | 0) | 0;
                            break a;
                        default:
                            break b;
                    }
                    $p1 = 1;
                    olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($p3 / 2 | 0) | 0;
                    break a;
                }
                $p1 = 4;
                olo_EaglerAdapterGL30_triangleDrawn = olo_EaglerAdapterGL30_triangleDrawn + ($p3 / 3 | 0) | 0;
            }
            nlea_EaglerAdapterImpl2_webgl.drawArrays($p1, $p2, $p3);
        }
    }
}
function olo_EaglerAdapterGL30__wglDrawQuadArrays($p2, $p3) {
    var $upload, var$4, $i, $v1, $v2, $v3, $v4, var$10;
    olo_EaglerAdapterGL30_$callClinit();
    if (olo_EaglerAdapterGL30_quadsToTrianglesBuffer === null) {
        if (olo_EaglerAdapterGL30_isWebGL)
            $upload = jn_IntBuffer_wrap($rt_createIntArray(49200));
        else {
            var$4 = jn_ByteBufferImpl__init_(196800, 1);
            var$4.$order = jn_ByteOrder_BIG_ENDIAN;
            $upload = jn_ByteBufferImpl_asIntBuffer(var$4);
        }
        $i = 0;
        while ($i < 16384) {
            $v1 = $i * 4 | 0;
            $v2 = $v1 + 1 | 0;
            $v3 = $v1 + 2 | 0;
            $v4 = $v1 + 3 | 0;
            var$10 = $v2 << 16;
            jn_IntBufferImpl_put($upload, $v1 | var$10);
            jn_IntBufferImpl_put($upload, $v4 | var$10);
            jn_IntBufferImpl_put($upload, $v3 | $v4 << 16);
            $i = $i + 1 | 0;
        }
        jn_IntBuffer_flip($upload);
        olo_EaglerAdapterGL30_quadsToTrianglesBuffer = nlea_EaglerAdapterImpl2__wglCreateBuffer();
        nlea_EaglerAdapterImpl2__wglBindBuffer(34963, olo_EaglerAdapterGL30_quadsToTrianglesBuffer);
        $v3 = jn_Buffer_remaining($upload);
        var$4 = new Int32Array(nlea_EaglerAdapterImpl2_uploadBuffer.buffer);
        $v4 = 0;
        while ($v4 < $v3) {
            var$10 = jn_IntBufferImpl_get($upload);
            var$4[$v4] = var$10;
            $v4 = $v4 + 1 | 0;
        }
        $upload = nlea_EaglerAdapterImpl2_uploadBuffer.buffer;
        $v3 = $v3 * 4 | 0;
        var$4 = new Uint8Array($upload, 0, $v3);
        nlea_EaglerAdapterImpl2_webgl.bufferData(34963, var$4, 35044);
    }
    if (!olo_EaglerAdapterGL30_currentArray.$isQuadBufferBound) {
        olo_EaglerAdapterGL30_currentArray.$isQuadBufferBound = 1;
        nlea_EaglerAdapterImpl2__wglBindBuffer(34963, olo_EaglerAdapterGL30_quadsToTrianglesBuffer);
    }
    $v3 = ($p3 * 6 | 0) / 4 | 0;
    $p2 = ($p2 * 6 | 0) / 4 | 0;
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_webgl.drawElements(4, $v3, 5123, $p2);
}
function olo_EaglerAdapterGL30_glFogi($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        if ($p1 == 2917) {
            b: {
                switch ($p2) {
                    case 2048:
                        break;
                    case 9729:
                        break b;
                    default:
                        break b;
                }
                olo_EaglerAdapterGL30_fogMode = 2;
                break a;
            }
            olo_EaglerAdapterGL30_fogMode = 1;
        }
    }
}
function olo_EaglerAdapterGL30_glFogf($p1, $p2) {
    olo_EaglerAdapterGL30_$callClinit();
    a: {
        switch ($p1) {
            case 2914:
                break;
            case 2915:
                olo_EaglerAdapterGL30_fogStart = $p2;
                break a;
            case 2916:
                olo_EaglerAdapterGL30_fogEnd = $p2;
                break a;
            default:
                break a;
        }
        olo_EaglerAdapterGL30_fogDensity = $p2;
    }
}
function olo_EaglerAdapterGL30_gluPerspective($fovy, $aspect, $zNear, $zFar) {
    var $res, var$6, $cotangent;
    olo_EaglerAdapterGL30_$callClinit();
    $res = olo_EaglerAdapterGL30_getMatrix();
    var$6 = $fovy * 0.01745329238474369 * 0.5;
    $cotangent = jl_Math_cos(var$6) / jl_Math_sin(var$6);
    $res.$m00 = $cotangent / $aspect;
    $res.$m01 = 0.0;
    $res.$m02 = 0.0;
    $res.$m03 = 0.0;
    $res.$m10 = 0.0;
    $res.$m11 = $cotangent;
    $res.$m12 = 0.0;
    $res.$m13 = 0.0;
    $res.$m20 = 0.0;
    $res.$m21 = 0.0;
    $fovy = $zFar + $zNear;
    $aspect = $zFar - $zNear;
    $res.$m22 = $fovy / $aspect;
    $res.$m23 = (-1.0);
    $res.$m30 = 0.0;
    $res.$m31 = 0.0;
    $res.$m32 = 2.0 * $zFar * $zNear / $aspect;
    $res.$m33 = 0.0;
}
function olo_EaglerAdapterGL30__clinit_() {
    var $i, var$2, var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    olo_EaglerAdapterGL30_isWebGL = 1;
    olo_EaglerAdapterGL30_texObjects = nPg_GLObjectMap__init_(256);
    olo_EaglerAdapterGL30_enableTexture2D = 0;
    olo_EaglerAdapterGL30_enableLighting = 0;
    olo_EaglerAdapterGL30_enableAlphaTest = 0;
    olo_EaglerAdapterGL30_alphaThresh = 0.10000000149011612;
    olo_EaglerAdapterGL30_isCompilingDisplayList = 0;
    olo_EaglerAdapterGL30_compilingDisplayList = null;
    olo_EaglerAdapterGL30_enableColorArray = 0;
    olo_EaglerAdapterGL30_enableNormalArray = 0;
    olo_EaglerAdapterGL30_enableTex0Array = 0;
    olo_EaglerAdapterGL30_colorR = 1.0;
    olo_EaglerAdapterGL30_colorG = 1.0;
    olo_EaglerAdapterGL30_colorB = 1.0;
    olo_EaglerAdapterGL30_colorA = 1.0;
    olo_EaglerAdapterGL30_normalX = 1.0;
    olo_EaglerAdapterGL30_normalY = 0.0;
    olo_EaglerAdapterGL30_normalZ = 0.0;
    olo_EaglerAdapterGL30_tex0X = 0.0;
    olo_EaglerAdapterGL30_tex0Y = 0.0;
    olo_EaglerAdapterGL30_enableColorMaterial = 0;
    olo_EaglerAdapterGL30_fogColorR = 1.0;
    olo_EaglerAdapterGL30_fogColorG = 1.0;
    olo_EaglerAdapterGL30_fogColorB = 1.0;
    olo_EaglerAdapterGL30_fogColorA = 1.0;
    olo_EaglerAdapterGL30_fogMode = 1;
    olo_EaglerAdapterGL30_fogEnabled = 0;
    olo_EaglerAdapterGL30_fogPremultiply = 0;
    olo_EaglerAdapterGL30_fogStart = 1.0;
    olo_EaglerAdapterGL30_fogEnd = 1.0;
    olo_EaglerAdapterGL30_fogDensity = 1.0;
    olo_EaglerAdapterGL30_bytesUploaded = 0;
    olo_EaglerAdapterGL30_vertexDrawn = 0;
    olo_EaglerAdapterGL30_triangleDrawn = 0;
    olo_EaglerAdapterGL30_matrixMode = 5888;
    olo_EaglerAdapterGL30_matModelV = $rt_createArray(nPgv_Matrix4f, 32);
    olo_EaglerAdapterGL30_matModelPointer = 0;
    olo_EaglerAdapterGL30_matProjV = $rt_createArray(nPgv_Matrix4f, 6);
    olo_EaglerAdapterGL30_matProjPointer = 0;
    olo_EaglerAdapterGL30_matTexV = $rt_createArray(nPgv_Matrix4f, 16);
    olo_EaglerAdapterGL30_matTexPointer = 0;
    $i = 0;
    while ($i < olo_EaglerAdapterGL30_matModelV.data.length) {
        var$2 = olo_EaglerAdapterGL30_matModelV.data;
        var$3 = new nPgv_Matrix4f;
        nPgv_Matrix4f_setIdentity(var$3);
        var$2[$i] = var$3;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < olo_EaglerAdapterGL30_matProjV.data.length) {
        var$2 = olo_EaglerAdapterGL30_matProjV.data;
        var$3 = new nPgv_Matrix4f;
        nPgv_Matrix4f_setIdentity(var$3);
        var$2[$i] = var$3;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < olo_EaglerAdapterGL30_matTexV.data.length) {
        var$2 = olo_EaglerAdapterGL30_matTexV.data;
        var$3 = new nPgv_Matrix4f;
        nPgv_Matrix4f_setIdentity(var$3);
        var$2[$i] = var$3;
        $i = $i + 1 | 0;
    }
    olo_EaglerAdapterGL30_quadsToTrianglesBuffer = null;
    olo_EaglerAdapterGL30_currentArray = null;
    olo_EaglerAdapterGL30_displayLists = ju_HashMap__init_0();
    olo_EaglerAdapterGL30_displayListsInitialized = ju_HashMap__init_0();
    olo_EaglerAdapterGL30_deevis = new nPgv_Vector3f;
    olo_EaglerAdapterGL30_lightPos0vec0 = new nPgv_Vector4f;
    olo_EaglerAdapterGL30_lightPos1vec0 = new nPgv_Vector4f;
    olo_EaglerAdapterGL30_lightPos0vec = new nPgv_Vector4f;
    olo_EaglerAdapterGL30_lightPos1vec = new nPgv_Vector4f;
    olo_EaglerAdapterGL30_displayListId = 0;
    olo_EaglerAdapterGL30_shader = null;
    olo_EaglerAdapterGL30_blankUploadArray = new Int32Array(525000);
    olo_EaglerAdapterGL30_occlusion_vao = null;
    olo_EaglerAdapterGL30_occlusion_vbo = null;
    olo_EaglerAdapterGL30_occlusion_program = null;
    olo_EaglerAdapterGL30_occlusion_matrix_m = null;
    olo_EaglerAdapterGL30_occlusion_matrix_p = null;
    olo_EaglerAdapterGL30_queryObjs = nPg_GLObjectMap__init_(256);
    var$3 = new nPgv_Matrix4f;
    nPgv_Matrix4f_setIdentity(var$3);
    olo_EaglerAdapterGL30_cachedOcclusionP = nPgv_Matrix4f_setZero(var$3);
    olo_EaglerAdapterGL30_occlusionModel = $rt_createFloatArray(16);
    olo_EaglerAdapterGL30_occlusionProj = $rt_createFloatArray(16);
    var$3 = new nPgv_Matrix4f;
    nPgv_Matrix4f_setIdentity(var$3);
    olo_EaglerAdapterGL30_unprojA = var$3;
    var$3 = new nPgv_Matrix4f;
    nPgv_Matrix4f_setIdentity(var$3);
    olo_EaglerAdapterGL30_unprojB = var$3;
    olo_EaglerAdapterGL30_unprojC = new nPgv_Vector4f;
    olo_EaglerAdapterGL30_lastBandwidthReset = Long_ZERO;
    olo_EaglerAdapterGL30_lastBandwidth = 0;
}
function olo_GL11() {
    olo_EaglerAdapterGL30.call(this);
}
function olo_GL11__init_0() {
    var var_0 = new olo_GL11();
    olo_GL11__init_(var_0);
    return var_0;
}
function olo_GL11__init_($this) {
    olo_EaglerAdapterGL30__init_($this);
}
function jl_Thread() {
    var a = this; jl_Object.call(a);
    a.$id0 = Long_ZERO;
    a.$daemon = 0;
    a.$timeSliceStart = Long_ZERO;
    a.$yieldCount = 0;
    a.$finishedLock = null;
    a.$interruptHandler = null;
    a.$name1 = null;
    a.$alive = 0;
    a.$target = null;
}
var jl_Thread_mainThread = null;
var jl_Thread_currentThread0 = null;
var jl_Thread_nextId = Long_ZERO;
var jl_Thread_activeCount = 0;
function jl_Thread__init_1() {
    var var_0 = new jl_Thread();
    jl_Thread__init_(var_0);
    return var_0;
}
function jl_Thread__init_2(var_0) {
    var var_1 = new jl_Thread();
    jl_Thread__init_0(var_1, var_0);
    return var_1;
}
function jl_Thread__init_3(var_0, var_1) {
    var var_2 = new jl_Thread();
    jl_Thread__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Thread__init_($this) {
    jl_Thread__init_4($this, null, null);
}
function jl_Thread__init_0($this, $name) {
    jl_Thread__init_4($this, null, $name);
}
function jl_Thread__init_4($this, $target, $name) {
    var var$3;
    $this.$finishedLock = new jl_Object;
    $this.$alive = 1;
    $this.$name1 = $name;
    $this.$target = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = Long_add(var$3, Long_fromInt(1));
    $this.$id0 = var$3;
}
function jl_Thread_start($this) {
    var var$1;
    var$1 = new jl_Thread$start$lambda$_4_0;
    var$1.$_01 = $this;
    otp_Platform_startThread(var$1);
}
function jl_Thread_setCurrentThread($thread_0) {
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
}
function jl_Thread_currentThread() {
    return jl_Thread_currentThread0;
}
function jl_Thread_setDaemon($this, $daemon) {
    $this.$daemon = $daemon;
}
function jl_Thread_yield() {
    var $currentThread, var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$currentThread = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $currentThread = jl_Thread_currentThread0;
        var$2 = $currentThread.$yieldCount + 1 | 0;
        $currentThread.$yieldCount = var$2;
        if (var$2 < 30)
            return;
        jl_Thread_currentThread0.$yieldCount = 0;
        if (Long_ge(Long_add($currentThread.$timeSliceStart, Long_fromInt(100)), jl_System_currentTimeMillis()))
            return;
        $ptr = 1;
    case 1:
        jl_Thread_switchContext($currentThread);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($currentThread, var$2, $ptr);
}
function jl_Thread_switchContext(var$1) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Thread_switchContext0(var$1, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Thread_switchContext0($thread_0, $callback) {
    var var$3;
    var$3 = new jl_Thread$switchContext$lambda$_18_0;
    var$3.$_02 = $thread_0;
    var$3.$_10 = $callback;
    otp_Platform_postpone(var$3);
}
function jl_Thread_sleep(var$1) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Thread_sleep0(var$1, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Thread_sleep0($millis, $callback) {
    var $current, $handler;
    $current = jl_Thread_currentThread0;
    $handler = new jl_Thread$SleepHandler;
    $handler.$thread = $current;
    $handler.$callback = $callback;
    $handler.$scheduleId = otp_Platform_schedule($handler, Long_ge($millis, Long_fromInt(2147483647)) ? 2147483647 : $millis.lo);
    $current.$interruptHandler = $handler;
}
function jl_Thread__clinit_() {
    jl_Thread_mainThread = jl_Thread__init_2($rt_s(222));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = Long_fromInt(1);
    jl_Thread_activeCount = 1;
}
function nms_ThreadSleepForever() {
    jl_Thread.call(this);
    this.$mc1 = null;
}
function nms_ThreadSleepForever_run($this) {
    var var$1, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        while ($this.$mc1.$running) {
            try {
                var$1 = Long_fromInt(2147483647);
                $ptr = 1;
                continue main;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_InterruptedException) {
                } else {
                    throw $$e;
                }
            }
        }
        return;
    case 1:
        a: {
            try {
                jl_Thread_sleep(var$1);
                if ($rt_suspending()) {
                    break main;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_InterruptedException) {
                } else {
                    throw $$e;
                }
            }
        }
        while ($this.$mc1.$running) {
            try {
                var$1 = Long_fromInt(2147483647);
                continue main;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_InterruptedException) {
                } else {
                    throw $$e;
                }
            }
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, var$1, $ptr);
}
function ji_InputStream() {
    jl_Object.call(this);
}
function ji_InputStream_read($this, $b) {
    return $this.$read0($b, 0, $b.data.length);
}
function ji_FilterInputStream() {
    ji_InputStream.call(this);
    this.$in = null;
}
function ji_FilterInputStream__init_0(var_0) {
    var var_1 = new ji_FilterInputStream();
    ji_FilterInputStream__init_(var_1, var_0);
    return var_1;
}
function ji_FilterInputStream__init_($this, $in) {
    $this.$in = $in;
}
function ji_FilterInputStream_available($this) {
    return $this.$in.$available();
}
function ji_FilterInputStream_close($this) {
    $this.$in.$close();
}
function ji_FilterInputStream_read($this, $buffer) {
    return $this.$read0($buffer, 0, $buffer.data.length);
}
function ji_DataInput() {
}
function ji_DataInputStream() {
    ji_FilterInputStream.call(this);
    this.$buff = null;
}
function ji_DataInputStream__init_(var_0) {
    var var_1 = new ji_DataInputStream();
    ji_DataInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_DataInputStream__init_0($this, $in) {
    ji_FilterInputStream__init_($this, $in);
    $this.$buff = $rt_createByteArray(8);
}
function ji_DataInputStream_read($this, $buffer) {
    var var$2;
    var$2 = $buffer.data;
    return $this.$in.$read0($buffer, 0, var$2.length);
}
function ji_DataInputStream_readByte($this) {
    var $temp, var$2;
    $temp = $this.$in.$read1();
    if ($temp >= 0)
        return $temp << 24 >> 24;
    var$2 = new ji_EOFException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function ji_DataInputStream_readToBuff($this, $count) {
    var $offset, $bytesRead;
    $offset = 0;
    while ($offset < $count) {
        $bytesRead = $this.$in.$read0($this.$buff, $offset, $count - $offset | 0);
        if ($bytesRead == (-1))
            return $bytesRead;
        $offset = $offset + $bytesRead | 0;
    }
    return $offset;
}
function ji_DataInputStream_readDouble($this) {
    return $rt_longBitsToDouble(ji_DataInputStream_readLong($this));
}
function ji_DataInputStream_readFloat($this) {
    return $rt_intBitsToFloat(ji_DataInputStream_readInt($this));
}
function ji_DataInputStream_readFully($this, $buffer) {
    ji_DataInputStream_readFully0($this, $buffer, 0, $buffer.data.length);
}
function ji_DataInputStream_readFully0($this, $buffer, $offset, $length) {
    var var$4, $result;
    if ($length < 0) {
        var$4 = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if (!$length)
        return;
    if ($this.$in === null) {
        var$4 = new jl_NullPointerException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($buffer === null) {
        var$4 = new jl_NullPointerException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($offset >= 0 && $offset <= ($buffer.data.length - $length | 0)) {
        while ($length > 0) {
            $result = $this.$in.$read0($buffer, $offset, $length);
            if ($result < 0) {
                var$4 = new ji_EOFException;
                jl_Throwable__init_0(var$4);
                $rt_throw(var$4);
            }
            $offset = $offset + $result | 0;
            $length = $length - $result | 0;
        }
        return;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function ji_DataInputStream_readInt($this) {
    var var$1;
    if (ji_DataInputStream_readToBuff($this, 4) < 0) {
        var$1 = new ji_EOFException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    return ($this.$buff.data[0] & 255) << 24 | ($this.$buff.data[1] & 255) << 16 | ($this.$buff.data[2] & 255) << 8 | $this.$buff.data[3] & 255;
}
function ji_DataInputStream_readLong($this) {
    var var$1;
    if (ji_DataInputStream_readToBuff($this, 8) < 0) {
        var$1 = new ji_EOFException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    return Long_or(Long_shl(Long_and(Long_fromInt(($this.$buff.data[0] & 255) << 24 | ($this.$buff.data[1] & 255) << 16 | ($this.$buff.data[2] & 255) << 8 | $this.$buff.data[3] & 255), new Long(4294967295, 0)), 32), Long_and(Long_fromInt(($this.$buff.data[4] & 255) << 24 | ($this.$buff.data[5] & 255) << 16 | ($this.$buff.data[6] & 255) << 8 | $this.$buff.data[7] & 255), new Long(4294967295, 0)));
}
function ji_DataInputStream_readShort($this) {
    var var$1;
    if (ji_DataInputStream_readToBuff($this, 2) < 0) {
        var$1 = new ji_EOFException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    return (($this.$buff.data[0] & 255) << 24 >> 16 | $this.$buff.data[1] & 255) << 16 >> 16;
}
function ji_DataInputStream_readUnsignedShort($this) {
    var var$1;
    if (ji_DataInputStream_readToBuff($this, 2) < 0) {
        var$1 = new ji_EOFException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    return (($this.$buff.data[0] & 255) << 8 | $this.$buff.data[1] & 255) & 65535;
}
function ji_DataInputStream_readUTF($this) {
    return ji_DataInputStream_decodeUTF($this, ji_DataInputStream_readUnsignedShort($this));
}
function ji_DataInputStream_decodeUTF($this, $utfSize) {
    var var$2, var$3;
    var$2 = $rt_createByteArray($utfSize);
    var$3 = $rt_createCharArray($utfSize);
    ji_DataInputStream_readFully0($this, var$2, 0, $utfSize);
    return ji_DataInputStream_convertUTF8WithBuf(var$2, var$3, 0, $utfSize);
}
function ji_DataInputStream_convertUTF8WithBuf($buf, $out, $offset, $utfSize) {
    var $count, $s, var$7, var$8, $b, $ch, $a, var$12, $b_0, $c;
    $count = 0;
    $s = 0;
    a: {
        while ($count < $utfSize) {
            var$7 = $buf.data;
            var$8 = $out.data;
            $b = $count + 1 | 0;
            $ch = var$7[$offset + $count | 0] & 65535;
            var$8[$s] = $ch;
            $a = var$8[$s];
            if ($ch < 128)
                $s = $s + 1 | 0;
            else if (($a & 224) == 192) {
                if ($b >= $utfSize) {
                    var$12 = new ji_UTFDataFormatException;
                    jl_Throwable__init_(var$12, $rt_s(223));
                    $rt_throw(var$12);
                }
                $ch = $b + 1 | 0;
                $b = var$7[$offset + $b | 0];
                if (($b & 192) != 128) {
                    var$12 = new ji_UTFDataFormatException;
                    jl_Throwable__init_(var$12, $rt_s(224));
                    $rt_throw(var$12);
                }
                $b_0 = $s + 1 | 0;
                var$8[$s] = (($a & 31) << 6 | $b & 63) & 65535;
                $s = $b_0;
                $b = $ch;
            } else {
                if (($a & 240) != 224) {
                    var$12 = new ji_UTFDataFormatException;
                    jl_Throwable__init_(var$12, $rt_s(224));
                    $rt_throw(var$12);
                }
                $count = $b + 1 | 0;
                if ($count >= $utfSize) {
                    var$12 = new ji_UTFDataFormatException;
                    jl_Throwable__init_(var$12, $rt_s(224));
                    $rt_throw(var$12);
                }
                $b_0 = var$7[$offset + $b | 0];
                $b = $count + 1 | 0;
                $c = var$7[$offset + $count | 0];
                if (($b_0 & 192) != 128)
                    break a;
                if (($c & 192) != 128)
                    break a;
                $count = $s + 1 | 0;
                var$8[$s] = (($a & 15) << 12 | ($b_0 & 63) << 6 | $c & 63) & 65535;
                $s = $count;
            }
            $count = $b;
        }
        return jl_String__init_3($out, 0, $s);
    }
    var$12 = new ji_UTFDataFormatException;
    jl_Throwable__init_(var$12, $rt_s(224));
    $rt_throw(var$12);
}
function ji_ByteArrayInputStream() {
    var a = this; ji_InputStream.call(a);
    a.$buf1 = null;
    a.$pos = 0;
    a.$mark = 0;
    a.$count0 = 0;
}
function ji_ByteArrayInputStream__init_(var_0) {
    var var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_ByteArrayInputStream__init_0($this, $buf) {
    var var$2;
    var$2 = $buf.data.length;
    $this.$buf1 = $buf;
    $this.$pos = 0;
    $this.$mark = 0;
    $this.$count0 = 0 + var$2 | 0;
}
function ji_ByteArrayInputStream_read($this) {
    var var$1, var$2, var$3;
    if ($this.$pos >= $this.$count0)
        var$1 = (-1);
    else {
        var$2 = $this.$buf1.data;
        var$3 = $this.$pos;
        $this.$pos = var$3 + 1 | 0;
        var$1 = var$2[var$3] & 255;
    }
    return var$1;
}
function ji_ByteArrayInputStream_read0($this, $b, $off, $len) {
    var $bytesToRead, $i, var$6, var$7, var$8;
    $bytesToRead = jl_Math_min($len, $this.$count0 - $this.$pos | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        $len = $off + 1 | 0;
        var$7 = $this.$buf1.data;
        var$8 = $this.$pos;
        $this.$pos = var$8 + 1 | 0;
        var$6[$off] = var$7[var$8];
        $i = $i + 1 | 0;
        $off = $len;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
}
function ji_ByteArrayInputStream_available($this) {
    return $this.$count0 - $this.$pos | 0;
}
function ji_ByteArrayInputStream_close($this) {
    return;
}
function nPn_NBTBase() {
    jl_Object.call(this);
    this.$key = null;
}
function nPn_NBTBase__init_() {
    var var_0 = new nPn_NBTBase();
    nPn_NBTBase__init_0(var_0);
    return var_0;
}
function nPn_NBTBase__init_0($this) {
    $this.$key = null;
}
function nPn_NBTBase_getKey($this) {
    if ($this.$key !== null)
        return $this.$key;
    return $rt_s(17);
}
function nPn_NBTBase_readTag($datainput) {
    var $byte0, $nbtbase;
    $byte0 = ji_DataInputStream_readByte($datainput);
    if (!$byte0) {
        $datainput = new nPn_NBTTagEnd;
        nPn_NBTBase__init_0($datainput);
        return $datainput;
    }
    $nbtbase = nPn_NBTBase_createTagOfType($byte0);
    $nbtbase.$key = ji_DataInputStream_readUTF($datainput);
    $nbtbase.$readTagContents($datainput);
    return $nbtbase;
}
function nPn_NBTBase_writeTag($nbtbase, $dataoutput) {
    ji_DataOutputStream_writeByte($dataoutput, $nbtbase.$getType0());
    if (!$nbtbase.$getType0())
        return;
    ji_DataOutputStream_writeUTF($dataoutput, nPn_NBTBase_getKey($nbtbase));
    $nbtbase.$writeTagContents($dataoutput);
}
function nPn_NBTBase_createTagOfType($byte0) {
    var var$2;
    switch ($byte0) {
        case 0:
            var$2 = new nPn_NBTTagEnd;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 1:
            var$2 = new nPn_NBTTagByte;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 2:
            var$2 = new nPn_NBTTagShort;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 3:
            var$2 = new nPn_NBTTagInt;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 4:
            var$2 = new nPn_NBTTagLong;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 5:
            var$2 = new nPn_NBTTagFloat;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 6:
            var$2 = new nPn_NBTTagDouble;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 7:
            var$2 = new nPn_NBTTagByteArray;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 8:
            var$2 = new nPn_NBTTagString;
            nPn_NBTBase__init_0(var$2);
            return var$2;
        case 9:
            return nPn_NBTTagList__init_0();
        case 10:
            return nPn_NBTTagCompound__init_();
        default:
    }
    return null;
}
function nPn_NBTTagCompound() {
    nPn_NBTBase.call(this);
    this.$tagMap = null;
}
function nPn_NBTTagCompound__init_() {
    var var_0 = new nPn_NBTTagCompound();
    nPn_NBTTagCompound__init_0(var_0);
    return var_0;
}
function nPn_NBTTagCompound__init_0($this) {
    nPn_NBTBase__init_0($this);
    $this.$tagMap = ju_HashMap__init_0();
}
function nPn_NBTTagCompound_writeTagContents($this, $dataoutput) {
    var $iterator;
    $iterator = ju_HashMap$2_iterator(ju_HashMap_values($this.$tagMap));
    while (ju_HashMap$AbstractMapIterator_hasNext($iterator)) {
        nPn_NBTBase_writeTag(ju_HashMap$ValueIterator_next($iterator), $dataoutput);
    }
    ji_DataOutputStream_writeByte($dataoutput, 0);
}
function nPn_NBTTagCompound_readTagContents($this, $datainput) {
    var var$2;
    ju_HashMap_clear($this.$tagMap);
    while (true) {
        var$2 = nPn_NBTBase_readTag($datainput);
        if (!var$2.$getType0())
            break;
        ju_HashMap_putImpl($this.$tagMap, nPn_NBTBase_getKey(var$2), var$2);
    }
}
function nPn_NBTTagCompound_getType($this) {
    return 10;
}
function jl_Iterable() {
}
function ju_Collection() {
}
function ju_AbstractCollection() {
    jl_Object.call(this);
}
function ju_AbstractCollection_isEmpty($this) {
    return $this.$size0() ? 0 : 1;
}
function ju_AbstractCollection_contains($this, $o) {
    var $iter, $e;
    $iter = $this.$iterator();
    a: {
        while ($iter.$hasNext()) {
            b: {
                $e = $iter.$next0();
                if ($e !== null) {
                    if (!$e.$equals($o))
                        break b;
                    else
                        break a;
                }
                if ($o === null)
                    break a;
            }
        }
        return 0;
    }
    return 1;
}
function ju_AbstractCollection_toArray($this) {
    var $arr, var$2, $i, $iter, var$5;
    $arr = $rt_createArray(jl_Object, ju_HashSet_size($this));
    var$2 = $arr.data;
    $i = 0;
    $iter = ju_HashSet_iterator($this);
    while (ju_HashMap$AbstractMapIterator_hasNext($iter)) {
        var$5 = $i + 1 | 0;
        var$2[$i] = ju_HashMap$KeyIterator_next($iter);
        $i = var$5;
    }
    return $arr;
}
function ju_AbstractCollection_toArray0($this, $a) {
    var var$2, $i, $i_0, $iter, var$6;
    var$2 = $a.data;
    $i = $this.$size;
    $i_0 = var$2.length;
    if ($i_0 < $i)
        $a = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($a)), $i);
    else
        while ($i < $i_0) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i_0 = 0;
    $iter = ju_AbstractList_iterator($this);
    while (ju_AbstractList$1_hasNext($iter)) {
        var$2 = $a.data;
        var$6 = $i_0 + 1 | 0;
        var$2[$i_0] = ju_AbstractList$1_next($iter);
        $i_0 = var$6;
    }
    return $a;
}
function ju_AbstractCollection_addAll($this, $c) {
    var $changed, $iter;
    $changed = 0;
    $iter = $c.$iterator();
    while ($iter.$hasNext()) {
        if (!$this.$add($iter.$next0()))
            continue;
        $changed = 1;
    }
    return $changed;
}
function ju_AbstractCollection_removeAll($this, $c) {
    var $changed, $iter;
    $changed = 0;
    $iter = ju_AbstractList_iterator($this);
    while (ju_AbstractList$1_hasNext($iter)) {
        if ($c.$contains(ju_AbstractList$1_next($iter))) {
            ju_AbstractList$1_remove($iter);
            $changed = 1;
        }
    }
    return $changed;
}
function ju_List() {
}
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
function ju_AbstractList_add($this, $e) {
    ju_AbstractSequentialList_add($this, $this.$size1, $e);
    return 1;
}
function ju_AbstractList_iterator($this) {
    var var$1;
    var$1 = new ju_AbstractList$1;
    var$1.$this$0 = $this;
    var$1.$modCount0 = var$1.$this$0.$modCount;
    var$1.$size2 = var$1.$this$0.$size;
    var$1.$removeIndex = (-1);
    return var$1;
}
function ju_AbstractList_indexOf($this, $o) {
    var $sz, $i, $e;
    $sz = $this.$size;
    $i = 0;
    a: {
        while ($i < $sz) {
            b: {
                $e = ju_ArrayList_get($this, $i);
                if ($o !== null) {
                    if (!$o.$equals($e))
                        break b;
                    else
                        break a;
                }
                if ($e === null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return $i;
}
function ju_AbstractList_hashCode($this) {
    var $hashCode, $iter, $elem;
    $hashCode = 1;
    $iter = ju_AbstractList_iterator($this);
    while (ju_AbstractList$1_hasNext($iter)) {
        $elem = ju_AbstractList$1_next($iter);
        $hashCode = (31 * $hashCode | 0) + ($elem === null ? 0 : $elem.$hashCode0()) | 0;
    }
    return $hashCode;
}
function ju_AbstractList_equals($this, $other) {
    var $list, $i;
    if (!$rt_isInstance($other, ju_List))
        return 0;
    $list = $other;
    if ($this.$size != $list.$size)
        return 0;
    $i = 0;
    while ($i < $list.$size) {
        if (!ju_Objects_equals(ju_ArrayList_get($this, $i), ju_ArrayList_get($list, $i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function ju_AbstractSequentialList() {
    ju_AbstractList.call(this);
}
function ju_AbstractSequentialList_add($this, $index, $element) {
    if ($index >= 0) {
        ju_LinkedList$SequentialListIterator_add(ju_LinkedList_listIterator($this, $index), $element);
        return;
    }
    $element = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0($element);
    $rt_throw($element);
}
function ju_AbstractSequentialList_remove($this, $index) {
    var $iter, $elem;
    if ($index >= 0) {
        $iter = ju_LinkedList_listIterator($this, $index);
        $elem = ju_LinkedList$SequentialListIterator_next($iter);
        ju_LinkedList$SequentialListIterator_remove($iter);
        return $elem;
    }
    $iter = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0($iter);
    $rt_throw($iter);
}
function ju_Queue() {
}
function ju_Deque() {
}
function ju_LinkedList() {
    var a = this; ju_AbstractSequentialList.call(a);
    a.$firstEntry = null;
    a.$lastEntry = null;
    a.$size1 = 0;
}
function ju_LinkedList__init_0() {
    var var_0 = new ju_LinkedList();
    ju_LinkedList__init_(var_0);
    return var_0;
}
function ju_LinkedList__init_($this) {
    return;
}
function ju_LinkedList_size($this) {
    return $this.$size1;
}
function ju_LinkedList_clear($this) {
    $this.$firstEntry = null;
    $this.$lastEntry = null;
    $this.$size1 = 0;
    $this.$modCount = $this.$modCount + 1 | 0;
}
function ju_LinkedList_listIterator($this, $index) {
    var $prev, $next, $i;
    if ($index < 0) {
        $prev = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_0($prev);
        $rt_throw($prev);
    }
    if ($index <= ($this.$size1 / 2 | 0)) {
        $next = $this.$firstEntry;
        $i = 0;
        while ($i < $index) {
            $next = $next.$next1;
            $i = $i + 1 | 0;
        }
        return ju_LinkedList$SequentialListIterator__init_($this, $next, $next === null ? null : $next.$previous, $index);
    }
    if ($index > $this.$size1) {
        $prev = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_0($prev);
        $rt_throw($prev);
    }
    $prev = $this.$lastEntry;
    $i = $index;
    while ($i < $this.$size1) {
        $prev = $prev.$previous;
        $i = $i + 1 | 0;
    }
    return ju_LinkedList$SequentialListIterator__init_($this, $prev === null ? null : $prev.$next1, $prev, $index);
}
function otjt_ArrayBuffer() {
    jl_Object.call(this);
}
function otjt_ArrayBufferView() {
    jl_Object.call(this);
}
function otjt_Uint8Array() {
    otjt_ArrayBufferView.call(this);
}
function otjt_Float32Array() {
    otjt_ArrayBufferView.call(this);
}
function jl_Cloneable() {
}
function jt_Format() {
    jl_Object.call(this);
}
function jt_DateFormat() {
    jt_Format.call(this);
    this.$calendar = null;
}
function jt_SimpleDateFormat() {
    var a = this; jt_DateFormat.call(a);
    a.$dateFormatSymbols = null;
    a.$elements = null;
    a.$pattern0 = null;
    a.$locale = null;
}
function jt_SimpleDateFormat__init_1() {
    var var_0 = new jt_SimpleDateFormat();
    jt_SimpleDateFormat__init_(var_0);
    return var_0;
}
function jt_SimpleDateFormat__init_0(var_0) {
    var var_1 = new jt_SimpleDateFormat();
    jt_SimpleDateFormat__init_2(var_1, var_0);
    return var_1;
}
function jt_SimpleDateFormat__init_($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = ju_Locale_defaultLocale;
    var$2 = var$1.$languageCode;
    var$3 = var$1.$countryCode;
    if (otciu_CLDRHelper_$$metadata$$14 === null)
        otciu_CLDRHelper_$$metadata$$14 = otciu_CLDRHelper_getDateFormatMap$$create();
    var$4 = otciu_CLDRHelper_$$metadata$$14;
    var$1 = otciu_CLDRHelper_getCode(var$2, var$3);
    jt_SimpleDateFormat__init_2($this, ((var$4.hasOwnProperty($rt_ustr(var$1)) ? var$4[$rt_ustr(var$1)] : var$4.hasOwnProperty($rt_ustr(var$2)) ? var$4[$rt_ustr(var$2)] : var$4.root).mediumFormat !== null ? $rt_str((var$4.hasOwnProperty($rt_ustr(var$1)) ? var$4[$rt_ustr(var$1)] : var$4.hasOwnProperty($rt_ustr(var$2)) ? var$4[$rt_ustr(var$2)] : var$4.root).mediumFormat) : null));
}
function jt_SimpleDateFormat__init_2($this, $pattern) {
    var var$2, var$3;
    var$2 = ju_Locale_defaultLocale;
    var$3 = jt_DateFormatSymbols__init_0(var$2);
    $this.$calendar = ju_Calendar_getInstance();
    $this.$dateFormatSymbols = jt_DateFormatSymbols_clone(var$3);
    $this.$locale = ju_Locale_defaultLocale;
    jt_SimpleDateFormat_applyPattern($this, $pattern);
    $this.$locale = var$2;
}
function jt_SimpleDateFormat_applyPattern($this, $pattern) {
    var var$2, var$3;
    $this.$pattern0 = $pattern;
    $pattern = new jt_SimpleDatePatternParser;
    var$2 = $this.$dateFormatSymbols;
    var$3 = $this.$locale;
    $pattern.$elements0 = ju_ArrayList__init_0();
    $pattern.$symbols = var$2;
    $pattern.$locale0 = var$3;
    jt_SimpleDatePatternParser_parsePattern($pattern, $this.$pattern0);
    $this.$elements = ju_AbstractCollection_toArray0($pattern.$elements0, $rt_createArray(jt_DateFormatElement, 0));
}
function ju_Map() {
}
function ju_Map_computeIfAbsent($this, $key, $mappingFunction) {
    var $v, $newValue;
    $v = ju_HashMap_get($this, $key);
    if ($v !== null)
        return $v;
    $newValue = otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0_apply($mappingFunction, $key);
    if ($newValue !== null)
        ju_HashMap_putImpl($this, $key, $newValue);
    return $newValue;
}
function ju_AbstractMap() {
    var a = this; jl_Object.call(a);
    a.$cachedKeySet = null;
    a.$cachedValues = null;
}
function ju_HashMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount1 = 0;
    a.$loadFactor = 0.0;
    a.$threshold = 0;
}
function ju_HashMap__init_0() {
    var var_0 = new ju_HashMap();
    ju_HashMap__init_(var_0);
    return var_0;
}
function ju_HashMap_newElementArray($this, $s) {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
}
function ju_HashMap__init_($this) {
    var var$1;
    var$1 = ju_HashMap_calculateCapacity(16);
    $this.$elementCount = 0;
    $this.$elementData = $rt_createArray(ju_HashMap$HashEntry, var$1);
    $this.$loadFactor = 0.75;
    ju_HashMap_computeThreshold($this);
}
function ju_HashMap_calculateCapacity($x) {
    var var$2;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    $x = var$2 | var$2 >> 1;
    $x = $x | $x >> 2;
    $x = $x | $x >> 4;
    $x = $x | $x >> 8;
    return ($x | $x >> 16) + 1 | 0;
}
function ju_HashMap_clear($this) {
    var var$1;
    if ($this.$elementCount > 0) {
        $this.$elementCount = 0;
        var$1 = $this.$elementData;
        ju_Arrays_fill(var$1, 0, var$1.data.length, null);
        $this.$modCount1 = $this.$modCount1 + 1 | 0;
    }
}
function ju_HashMap_computeThreshold($this) {
    $this.$threshold = $this.$elementData.data.length * $this.$loadFactor | 0;
}
function ju_HashMap_containsKey($this, $key) {
    return ju_HashMap_getEntry($this, $key) === null ? 0 : 1;
}
function ju_HashMap_containsValue($this, $value) {
    var $i, $entry, var$4;
    a: {
        if ($value === null) {
            $i = 0;
            b: while (true) {
                if ($i >= $this.$elementData.data.length)
                    break a;
                $entry = $this.$elementData.data[$i];
                while ($entry !== null) {
                    if ($entry.$value1 === null)
                        break b;
                    $entry = $entry.$next2;
                }
                $i = $i + 1 | 0;
            }
            return 1;
        }
        $i = 0;
        c: while (true) {
            if ($i >= $this.$elementData.data.length)
                break a;
            $entry = $this.$elementData.data[$i];
            while ($entry !== null) {
                var$4 = $entry.$value1;
                if ($value !== var$4 && !$value.$equals(var$4) ? 0 : 1)
                    break c;
                $entry = $entry.$next2;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function ju_HashMap_get($this, $key) {
    var $m;
    $m = ju_HashMap_getEntry($this, $key);
    if ($m === null)
        return null;
    return $m.$value1;
}
function ju_HashMap_getEntry($this, $key) {
    var $m, $hash;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode0();
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $hash & ($this.$elementData.data.length - 1 | 0), $hash);
    }
    return $m;
}
function ju_HashMap_findNonNullKeyEntry($this, $key, $index, $keyHash) {
    var $m;
    $m = $this.$elementData.data[$index];
    while ($m !== null && !($m.$origKeyHash == $keyHash && ju_HashMap_areEqualKeys($key, $m.$key0))) {
        $m = $m.$next2;
    }
    return $m;
}
function ju_HashMap_findNullKeyEntry($this) {
    var $m;
    $m = $this.$elementData.data[0];
    while ($m !== null && $m.$key0 !== null) {
        $m = $m.$next2;
    }
    return $m;
}
function ju_HashMap_keySet($this) {
    var var$1;
    if ($this.$cachedKeySet === null) {
        var$1 = new ju_HashMap$1;
        var$1.$this$00 = $this;
        $this.$cachedKeySet = var$1;
    }
    return $this.$cachedKeySet;
}
function ju_HashMap_put($this, $key, $value) {
    return ju_HashMap_putImpl($this, $key, $value);
}
function ju_HashMap_putImpl($this, $key, $value) {
    var $entry, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount1 = $this.$modCount1 + 1 | 0;
            $entry = ju_HashMap_createHashedEntry($this, null, 0, 0);
            $hash = $this.$elementCount + 1 | 0;
            $this.$elementCount = $hash;
            if ($hash > $this.$threshold)
                ju_HashMap_rehash($this);
        }
    } else {
        $hash = $key.$hashCode0();
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount1 = $this.$modCount1 + 1 | 0;
            $entry = ju_HashMap_createHashedEntry($this, $key, $index, $hash);
            $hash = $this.$elementCount + 1 | 0;
            $this.$elementCount = $hash;
            if ($hash > $this.$threshold)
                ju_HashMap_rehash($this);
        }
    }
    $result = $entry.$value1;
    $entry.$value1 = $value;
    return $result;
}
function ju_HashMap_createHashedEntry($this, $key, $index, $hash) {
    var $entry, var$5;
    $entry = new ju_HashMap$HashEntry;
    var$5 = null;
    $entry.$key0 = $key;
    $entry.$value1 = var$5;
    $entry.$origKeyHash = $hash;
    $entry.$next2 = $this.$elementData.data[$index];
    $this.$elementData.data[$index] = $entry;
    return $entry;
}
function ju_HashMap_rehash0($this, $capacity) {
    var $length, $newData, var$4, $i, $entry, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $rt_createArray(ju_HashMap$HashEntry, $length);
    var$4 = $newData.data;
    $i = 0;
    $length = $length - 1 | 0;
    while ($i < $this.$elementData.data.length) {
        $entry = $this.$elementData.data[$i];
        $this.$elementData.data[$i] = null;
        while ($entry !== null) {
            $index = $entry.$origKeyHash & $length;
            $next = $entry.$next2;
            $entry.$next2 = var$4[$index];
            var$4[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData = $newData;
    ju_HashMap_computeThreshold($this);
}
function ju_HashMap_rehash($this) {
    ju_HashMap_rehash0($this, $this.$elementData.data.length);
}
function ju_HashMap_remove($this, $key) {
    var $entry;
    $entry = ju_HashMap_removeEntry($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value1;
}
function ju_HashMap_removeEntry($this, $key) {
    var $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData.data[0];
            while ($entry !== null) {
                if ($entry.$key0 === null)
                    break a;
                $entry_0 = $entry.$next2;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = $key.$hashCode0();
            $index = $hash & ($this.$elementData.data.length - 1 | 0);
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key0))) {
                $entry_0 = $entry.$next2;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next2 = $entry.$next2;
    else
        $this.$elementData.data[$index] = $entry.$next2;
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
    return $entry;
}
function ju_HashMap_size($this) {
    return $this.$elementCount;
}
function ju_HashMap_values($this) {
    var var$1;
    if ($this.$cachedValues === null) {
        var$1 = new ju_HashMap$2;
        var$1.$this$01 = $this;
        $this.$cachedValues = var$1;
    }
    return $this.$cachedValues;
}
function ju_HashMap_areEqualKeys($key1, $key2) {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
}
function otjt_Int32Array() {
    otjt_ArrayBufferView.call(this);
}
function oti_AsyncCallback() {
}
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
    var var$2;
    var$2 = new otpp_AsyncCallbackWrapper;
    var$2.$realAsyncCallback = $realAsyncCallback;
    return var$2;
}
function otpp_AsyncCallbackWrapper_complete($this, $result) {
    $this.$realAsyncCallback.$complete($result);
}
function otpp_AsyncCallbackWrapper_error($this, $e) {
    $this.$realAsyncCallback.$error($e);
}
function otja_XMLHttpRequest() {
    jl_Object.call(this);
}
function otja_ReadyStateChangeHandler() {
}
function nlea_EaglerAdapterImpl2$1() {
    var a = this; jl_Object.call(a);
    a.$val$request = null;
    a.$val$cb = null;
}
function nlea_EaglerAdapterImpl2$1_stateChanged($this) {
    var $bl, var$2, $i;
    if ($this.$val$request.readyState == 4) {
        $bl = new Uint8Array($this.$val$request.response);
        var$2 = $rt_createByteArray($bl.byteLength);
        nlea_EaglerAdapterImpl2_$callClinit();
        nlea_EaglerAdapterImpl2_loadedPackage = var$2;
        $i = 0;
        while ($i < nlea_EaglerAdapterImpl2_access$000().data.length) {
            nlea_EaglerAdapterImpl2_access$000().data[$i] = $bl[$i] << 24 >> 24;
            $i = $i + 1 | 0;
        }
        otpp_AsyncCallbackWrapper_complete($this.$val$cb, $rt_s(225));
    }
}
function nlea_EaglerAdapterImpl2$1_stateChanged$exported$0(var$0) {
    nlea_EaglerAdapterImpl2$1_stateChanged(var$0);
}
function jnc_Charset() {
    var a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
function jnc_Charset_checkCanonicalName($name) {
    var $i, $c;
    if (jl_String_isEmpty($name))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart(jl_String_charAt($name, 0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < jl_String_length($name)) {
        a: {
            $c = jl_String_charAt($name, $i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
}
function jnc_Charset_isValidCharsetStart($c) {
    return !($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122) && $c < 65 && $c > 90 ? 0 : 1;
}
function jnc_Charset_forName($charsetName) {
    var $charset;
    if ($charsetName === null) {
        $charsetName = new jl_IllegalArgumentException;
        jl_Throwable__init_($charsetName, $rt_s(226));
        $rt_throw($charsetName);
    }
    jnc_Charset_checkCanonicalName($charsetName);
    $charset = ju_HashMap_get(jnc_Charset$Charsets_value, jl_String_toUpperCase($charsetName));
    if ($charset !== null)
        return $charset;
    $charset = new jnc_UnsupportedCharsetException;
    jl_Throwable__init_0($charset);
    $charset.$charsetName = $charsetName;
    $rt_throw($charset);
}
function jnc_Charset_decode($this, $bb) {
    var $e, $$je;
    a: {
        try {
            $bb = jnc_CharsetDecoder_decode(jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput(jnci_UTF8Charset_newDecoder($this), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $bb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $bb;
    }
    $rt_throw(jl_AssertionError__init_0($rt_s(227), $e));
}
function jnc_Charset_encode($this, $cb) {
    var $e, $$je;
    a: {
        try {
            $cb = jnc_CharsetEncoder_encode0(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(jnci_UTF8Charset_newEncoder($this), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $cb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $cb;
    }
    $rt_throw(jl_AssertionError__init_0($rt_s(227), $e));
}
function jnc_Charset_compareTo($this, $that) {
    return jl_String_compareToIgnoreCase($this.$canonicalName, $that.$canonicalName);
}
function jnc_Charset_compareTo0($this, var$1) {
    return jnc_Charset_compareTo($this, var$1);
}
function cjj_InflaterInputStream() {
    var a = this; ji_FilterInputStream.call(a);
    a.$inflater = null;
    a.$buf0 = null;
    a.$closed = 0;
    a.$eof = 0;
    a.$close_in = 0;
    a.$myinflater = 0;
    a.$byte1 = null;
    a.$b = null;
}
function cjj_InflaterInputStream_read($this) {
    var var$1;
    if ($this.$closed) {
        var$1 = new ji_IOException;
        jl_Throwable__init_(var$1, $rt_s(228));
        $rt_throw(var$1);
    }
    return cjj_InflaterInputStream_read0($this, $this.$byte1, 0, 1) == (-1) ? (-1) : $this.$byte1.data[0] & 255;
}
function cjj_InflaterInputStream_read0($this, $b, $off, $len) {
    var var$4, $n, $err;
    if ($this.$closed) {
        var$4 = new ji_IOException;
        jl_Throwable__init_(var$4, $rt_s(228));
        $rt_throw(var$4);
    }
    if ($b === null) {
        var$4 = new jl_NullPointerException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($off >= 0 && $len >= 0 && $len <= ($b.data.length - $off | 0)) {
        if (!$len)
            return 0;
        if ($this.$eof)
            return (-1);
        $n = 0;
        cjj_ZStream_setOutput($this.$inflater, $b, $off, $len);
        a: {
            while (!$this.$eof) {
                if (!$this.$inflater.$avail_in)
                    cjj_InflaterInputStream_fill($this);
                b: {
                    $err = cjj_Inflater_inflate($this.$inflater, 0);
                    $n = $n + ($this.$inflater.$next_out_index - $off | 0) | 0;
                    $off = $this.$inflater.$next_out_index;
                    switch ($err) {
                        case -3:
                            var$4 = new ji_IOException;
                            jl_Throwable__init_(var$4, $this.$inflater.$msg);
                            $rt_throw(var$4);
                        case 1:
                        case 2:
                            break;
                        default:
                            break b;
                    }
                    $this.$eof = 1;
                    if ($err == 2)
                        return (-1);
                }
                if (!$this.$inflater.$avail_out)
                    break a;
            }
        }
        return $n;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function cjj_InflaterInputStream_available($this) {
    var var$1;
    if (!$this.$closed) {
        if (!$this.$eof)
            return 1;
        return 0;
    }
    var$1 = new ji_IOException;
    jl_Throwable__init_(var$1, $rt_s(228));
    $rt_throw(var$1);
}
function cjj_InflaterInputStream_close($this) {
    if (!$this.$closed) {
        if ($this.$myinflater)
            cjj_Inflater_end($this.$inflater);
        if ($this.$close_in)
            $this.$in.$close();
        $this.$closed = 1;
    }
}
function cjj_InflaterInputStream_fill($this) {
    var var$1, $len;
    if ($this.$closed) {
        var$1 = new ji_IOException;
        jl_Throwable__init_(var$1, $rt_s(228));
        $rt_throw(var$1);
    }
    a: {
        $len = $this.$in.$read0($this.$buf0, 0, $this.$buf0.data.length);
        if ($len == (-1)) {
            if ($this.$inflater.$istate.$wrap4)
                break a;
            if (cjj_Inflater_finished($this.$inflater))
                break a;
            $this.$buf0.data[0] = 0;
            $len = 1;
        }
        cjj_ZStream_setInput($this.$inflater, $this.$buf0, 0, $len, 1);
        return;
    }
    if (Long_ne($this.$inflater.$istate.$was, Long_fromInt(-1))) {
        var$1 = new ji_IOException;
        jl_Throwable__init_(var$1, $rt_s(229));
        $rt_throw(var$1);
    }
    var$1 = new ji_EOFException;
    jl_Throwable__init_(var$1, $rt_s(230));
    $rt_throw(var$1);
}
function nle_GeneralDigest() {
    var a = this; jl_Object.call(a);
    a.$xBuf = null;
    a.$xBufOff = 0;
    a.$byteCount = Long_ZERO;
}
function nle_GeneralDigest_update0($this, $in) {
    var var$2, var$3;
    var$2 = $this.$xBuf.data;
    var$3 = $this.$xBufOff;
    $this.$xBufOff = var$3 + 1 | 0;
    var$2[var$3] = $in;
    if ($this.$xBufOff == $this.$xBuf.data.length) {
        nle_SHA1Digest_processWord($this, $this.$xBuf, 0);
        $this.$xBufOff = 0;
    }
    $this.$byteCount = Long_add($this.$byteCount, Long_fromInt(1));
}
function nle_GeneralDigest_update($this, $in, $inOff, $len) {
    a: {
        while ($this.$xBufOff) {
            if ($len <= 0)
                break a;
            nle_GeneralDigest_update0($this, $in.data[$inOff]);
            $inOff = $inOff + 1 | 0;
            $len = $len + (-1) | 0;
        }
    }
    while ($len > $this.$xBuf.data.length) {
        nle_SHA1Digest_processWord($this, $in, $inOff);
        $inOff = $inOff + $this.$xBuf.data.length | 0;
        $len = $len - $this.$xBuf.data.length | 0;
        $this.$byteCount = Long_add($this.$byteCount, Long_fromInt($this.$xBuf.data.length));
    }
    while ($len > 0) {
        nle_GeneralDigest_update0($this, $in.data[$inOff]);
        $inOff = $inOff + 1 | 0;
        $len = $len + (-1) | 0;
    }
}
function nle_GeneralDigest_finish($this) {
    var $bitLength;
    $bitLength = Long_shl($this.$byteCount, 3);
    nle_GeneralDigest_update0($this, (-128));
    while ($this.$xBufOff) {
        nle_GeneralDigest_update0($this, 0);
    }
    nle_SHA1Digest_processLength($this, $bitLength);
    nle_SHA1Digest_processBlock($this);
}
function nle_SHA1Digest() {
    var a = this; nle_GeneralDigest.call(a);
    a.$H1 = 0;
    a.$H2 = 0;
    a.$H3 = 0;
    a.$H4 = 0;
    a.$H5 = 0;
    a.$X = null;
    a.$xOff = 0;
}
function nle_SHA1Digest__init_0() {
    var var_0 = new nle_SHA1Digest();
    nle_SHA1Digest__init_(var_0);
    return var_0;
}
function nle_SHA1Digest__init_($this) {
    $this.$xBuf = $rt_createByteArray(4);
    $this.$xBufOff = 0;
    $this.$X = $rt_createIntArray(80);
    nle_SHA1Digest_reset($this);
}
function nle_SHA1Digest_processWord($this, $in, $inOff) {
    var var$3, var$4;
    var$3 = $in.data;
    $in = $this.$X.data;
    var$4 = $this.$xOff;
    $this.$xOff = var$4 + 1 | 0;
    $in[var$4] = (var$3[$inOff] & 255) << 24 | (var$3[$inOff + 1 | 0] & 255) << 16 | (var$3[$inOff + 2 | 0] & 255) << 8 | var$3[$inOff + 3 | 0] & 255;
    if ($this.$xOff == 16)
        nle_SHA1Digest_processBlock($this);
}
function nle_SHA1Digest_unpackWord($this, $word, $out, $outOff) {
    $out = $out.data;
    $out[$outOff] = $word >>> 24 << 24 >> 24;
    $out[$outOff + 1 | 0] = $word >>> 16 << 24 >> 24;
    $out[$outOff + 2 | 0] = $word >>> 8 << 24 >> 24;
    $out[$outOff + 3 | 0] = $word << 24 >> 24;
}
function nle_SHA1Digest_processLength($this, $bitLength) {
    if ($this.$xOff > 14)
        nle_SHA1Digest_processBlock($this);
    $this.$X.data[14] = $bitLength.hi;
    $this.$X.data[15] = Long_and($bitLength, Long_fromInt(-1)).lo;
}
function nle_SHA1Digest_doFinal($this, $out, $outOff) {
    nle_GeneralDigest_finish($this);
    nle_SHA1Digest_unpackWord($this, $this.$H1, $out, $outOff);
    nle_SHA1Digest_unpackWord($this, $this.$H2, $out, $outOff + 4 | 0);
    nle_SHA1Digest_unpackWord($this, $this.$H3, $out, $outOff + 8 | 0);
    nle_SHA1Digest_unpackWord($this, $this.$H4, $out, $outOff + 12 | 0);
    nle_SHA1Digest_unpackWord($this, $this.$H5, $out, $outOff + 16 | 0);
    nle_SHA1Digest_reset($this);
    return 20;
}
function nle_SHA1Digest_reset($this) {
    var $i;
    $this.$byteCount = Long_ZERO;
    $this.$xBufOff = 0;
    $i = 0;
    while ($i < $this.$xBuf.data.length) {
        $this.$xBuf.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$H1 = 1732584193;
    $this.$H2 = (-271733879);
    $this.$H3 = (-1732584194);
    $this.$H4 = 271733878;
    $this.$H5 = (-1009589776);
    $this.$xOff = 0;
    $i = 0;
    while ($i != $this.$X.data.length) {
        $this.$X.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function nle_SHA1Digest_h($this, $u, $v, $w) {
    return $u ^ $v ^ $w;
}
function nle_SHA1Digest_rotateLeft($this, $x, $n) {
    return $x << $n | $x >>> (32 - $n | 0);
}
function nle_SHA1Digest_processBlock($this) {
    var $i, $A, $B, $C, $D, $E, $j, $t, $j_0;
    $i = 16;
    while ($i <= 79) {
        $this.$X.data[$i] = nle_SHA1Digest_rotateLeft($this, $this.$X.data[$i - 3 | 0] ^ $this.$X.data[$i - 8 | 0] ^ $this.$X.data[$i - 14 | 0] ^ $this.$X.data[$i - 16 | 0], 1);
        $i = $i + 1 | 0;
    }
    $A = $this.$H1;
    $B = $this.$H2;
    $C = $this.$H3;
    $D = $this.$H4;
    $E = $this.$H5;
    $j = 0;
    while ($j <= 19) {
        $t = (((nle_SHA1Digest_rotateLeft($this, $A, 5) + ($B & $C | ($B ^ (-1)) & $D) | 0) + $E | 0) + $this.$X.data[$j] | 0) + 1518500249 | 0;
        $i = nle_SHA1Digest_rotateLeft($this, $B, 30);
        $j = $j + 1 | 0;
        $E = $D;
        $D = $C;
        $C = $i;
        $B = $A;
        $A = $t;
    }
    $j_0 = 20;
    while ($j_0 <= 39) {
        $t = (((nle_SHA1Digest_rotateLeft($this, $A, 5) + nle_SHA1Digest_h($this, $B, $C, $D) | 0) + $E | 0) + $this.$X.data[$j_0] | 0) + 1859775393 | 0;
        $i = nle_SHA1Digest_rotateLeft($this, $B, 30);
        $j_0 = $j_0 + 1 | 0;
        $E = $D;
        $D = $C;
        $C = $i;
        $B = $A;
        $A = $t;
    }
    $j = 40;
    while ($j <= 59) {
        $t = (((nle_SHA1Digest_rotateLeft($this, $A, 5) + ($B & $C | $B & $D | $C & $D) | 0) + $E | 0) + $this.$X.data[$j] | 0) + (-1894007588) | 0;
        $i = nle_SHA1Digest_rotateLeft($this, $B, 30);
        $j = $j + 1 | 0;
        $E = $D;
        $D = $C;
        $C = $i;
        $B = $A;
        $A = $t;
    }
    $j_0 = 60;
    while ($j_0 <= 79) {
        $t = (((nle_SHA1Digest_rotateLeft($this, $A, 5) + nle_SHA1Digest_h($this, $B, $C, $D) | 0) + $E | 0) + $this.$X.data[$j_0] | 0) + (-899497514) | 0;
        $i = nle_SHA1Digest_rotateLeft($this, $B, 30);
        $j_0 = $j_0 + 1 | 0;
        $E = $D;
        $D = $C;
        $C = $i;
        $B = $A;
        $A = $t;
    }
    $this.$H1 = $this.$H1 + $A | 0;
    $this.$H2 = $this.$H2 + $B | 0;
    $this.$H3 = $this.$H3 + $C | 0;
    $this.$H4 = $this.$H4 + $D | 0;
    $this.$H5 = $this.$H5 + $E | 0;
    $this.$xOff = 0;
    $i = 0;
    while ($i != $this.$X.data.length) {
        $this.$X.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function ju_Arrays() {
    jl_Object.call(this);
}
function ju_Arrays__init_0() {
    var var_0 = new ju_Arrays();
    ju_Arrays__init_(var_0);
    return var_0;
}
function ju_Arrays__init_($this) {
    return;
}
function ju_Arrays_copyOf0($array, $length) {
    var $result, var$4, $sz, $i;
    $array = $array.data;
    $result = $rt_createCharArray($length);
    var$4 = $result.data;
    $sz = jl_Math_min($length, $array.length);
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = $array[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf1($array, $length) {
    var $result, var$4, $sz, $i;
    $array = $array.data;
    $result = $rt_createByteArray($length);
    var$4 = $result.data;
    $sz = jl_Math_min($length, $array.length);
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = $array[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf($original, $newLength) {
    var var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_fill0($a, $val) {
    var var$3, var$4, var$5, var$6;
    $a = $a.data;
    var$3 = 0;
    var$4 = $a.length;
    if (var$3 > var$4) {
        var$5 = new jl_IllegalArgumentException;
        jl_Throwable__init_0(var$5);
        $rt_throw(var$5);
    }
    while (var$3 < var$4) {
        var$6 = var$3 + 1 | 0;
        $a[var$3] = $val;
        var$3 = var$6;
    }
}
function ju_Arrays_fill1($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6, var$7;
    if ($fromIndex > $toIndex) {
        var$5 = new jl_IllegalArgumentException;
        jl_Throwable__init_0(var$5);
        $rt_throw(var$5);
    }
    while ($fromIndex < $toIndex) {
        var$6 = $a.data;
        var$7 = $fromIndex + 1 | 0;
        var$6[$fromIndex] = $val;
        $fromIndex = var$7;
    }
}
function ju_Arrays_fill($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex) {
        $val = new jl_IllegalArgumentException;
        jl_Throwable__init_0($val);
        $rt_throw($val);
    }
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_sort($a, $c) {
    var var$3, $second, $chunkSize, var$6, $i, var$8, var$9, var$10, $i_0, var$12, $i_1, var$14, var$15, var$16, var$17;
    var$3 = $a.data.length;
    if (!var$3)
        return;
    $second = $rt_createArray(jl_Object, var$3);
    $chunkSize = 1;
    var$6 = $a;
    while ($chunkSize < var$3) {
        $i = 0;
        while (true) {
            var$8 = var$6.data;
            var$9 = var$8.length;
            if ($i >= var$9)
                break;
            var$10 = jl_Math_min(var$9, $i + $chunkSize | 0);
            $i_0 = $i + (2 * $chunkSize | 0) | 0;
            var$12 = jl_Math_min(var$9, $i_0);
            $i_1 = $i;
            var$9 = var$10;
            a: {
                b: {
                    while ($i != var$10) {
                        if (var$9 == var$12)
                            break b;
                        var$14 = var$8[$i];
                        var$15 = var$8[var$9];
                        if ($c.$compare(var$14, var$15) > 0) {
                            var$16 = $second.data;
                            var$17 = $i_1 + 1 | 0;
                            var$16[$i_1] = var$15;
                            var$9 = var$9 + 1 | 0;
                        } else {
                            var$16 = $second.data;
                            var$17 = $i_1 + 1 | 0;
                            var$16[$i_1] = var$14;
                            $i = $i + 1 | 0;
                        }
                        $i_1 = var$17;
                    }
                    while (true) {
                        if (var$9 >= var$12)
                            break a;
                        var$16 = $second.data;
                        $i = $i_1 + 1 | 0;
                        var$17 = var$9 + 1 | 0;
                        var$16[$i_1] = var$8[var$9];
                        $i_1 = $i;
                        var$9 = var$17;
                    }
                }
                while (true) {
                    if ($i >= var$10)
                        break a;
                    var$16 = $second.data;
                    var$9 = $i_1 + 1 | 0;
                    var$17 = $i + 1 | 0;
                    var$16[$i_1] = var$8[$i];
                    $i_1 = var$9;
                    $i = var$17;
                }
            }
            $i = $i_0;
        }
        $chunkSize = $chunkSize * 2 | 0;
        var$8 = var$6;
        var$6 = $second;
        $second = var$8;
    }
    c: {
        if (var$6 !== $a) {
            $i_1 = 0;
            while (true) {
                $a = var$6.data;
                if ($i_1 >= $a.length)
                    break c;
                $second.data[$i_1] = $a[$i_1];
                $i_1 = $i_1 + 1 | 0;
            }
        }
    }
}
function ju_Arrays_binarySearch($a, $key) {
    var var$3, var$4, var$5, var$6, var$7;
    $a = $a.data;
    var$3 = 0;
    var$4 = $a.length;
    if (var$3 > var$4) {
        var$5 = new jl_IllegalArgumentException;
        jl_Throwable__init_0(var$5);
        $rt_throw(var$5);
    }
    var$6 = var$4 - 1 | 0;
    a: {
        while (true) {
            var$4 = (var$3 + var$6 | 0) / 2 | 0;
            var$7 = $a[var$4];
            if (var$7 == $key)
                break;
            if ($key >= var$7) {
                var$3 = var$4 + 1 | 0;
                if (var$3 > var$6) {
                    var$4 =  -var$4 - 2 | 0;
                    break a;
                }
            } else {
                var$6 = var$4 - 1 | 0;
                if (var$6 < var$3) {
                    var$4 =  -var$4 - 1 | 0;
                    break a;
                }
            }
        }
    }
    return var$4;
}
function ju_Arrays_binarySearch0($a, $key) {
    var var$3, var$4, var$5, var$6, var$7;
    $a = $a.data;
    var$3 = 0;
    var$4 = $a.length;
    if (var$3 > var$4) {
        var$5 = new jl_IllegalArgumentException;
        jl_Throwable__init_0(var$5);
        $rt_throw(var$5);
    }
    var$6 = var$4 - 1 | 0;
    a: {
        while (true) {
            var$4 = (var$3 + var$6 | 0) / 2 | 0;
            var$7 = Long_compare($a[var$4], $key);
            if (!var$7)
                break;
            if (var$7 <= 0) {
                var$3 = var$4 + 1 | 0;
                if (var$3 > var$6) {
                    var$4 =  -var$4 - 2 | 0;
                    break a;
                }
            } else {
                var$6 = var$4 - 1 | 0;
                if (var$6 < var$3) {
                    var$4 =  -var$4 - 1 | 0;
                    break a;
                }
            }
        }
    }
    return var$4;
}
function ju_Arrays_equals($a, $a2) {
    var var$3, $i;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        $a2 = $a2.data;
        $a = $a.data;
        var$3 = $a.length;
        if (var$3 == $a2.length) {
            $i = 0;
            while ($i < var$3) {
                if (!ju_Objects_equals($a[$i], $a2[$i]))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
}
function ju_Arrays_hashCode($a) {
    var $hash, $i, var$4, var$5, $h;
    if ($a === null)
        return 0;
    $hash = (-1515898884);
    $i = 0;
    while (true) {
        var$4 = $a.data;
        if ($i >= var$4.length)
            break;
        var$5 = var$4[$i];
        $h = (var$5 !== null ? var$5.$hashCode0() : 0) ^ 528111840;
        $hash = jl_Integer_rotateLeft($h, 4) ^ ($h >>> 7 | $h << 25) ^ jl_Integer_rotateLeft($hash, 13);
        $i = $i + 1 | 0;
    }
    return $hash;
}
function jnci_UTF8Charset() {
    jnc_Charset.call(this);
}
function jnci_UTF8Charset__init_0() {
    var var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_(var_0);
    return var_0;
}
function jnci_UTF8Charset__init_($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray(jl_String, 0);
    var$2 = var$1.data;
    jnc_Charset_checkCanonicalName($rt_s(31));
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        jnc_Charset_checkCanonicalName(var$2[var$4]);
        var$4 = var$4 + 1 | 0;
    }
    $this.$canonicalName = $rt_s(31);
    $this.$aliases = var$1.$clone();
}
function jnci_UTF8Charset_newDecoder($this) {
    var var$1;
    var$1 = new jnci_UTF8Decoder;
    var$1.$replacement = $rt_s(231);
    var$1.$malformedAction = jnc_CodingErrorAction_REPORT;
    var$1.$unmappableAction = jnc_CodingErrorAction_REPORT;
    var$1.$charset0 = $this;
    var$1.$averageCharsPerByte = 0.3333333432674408;
    var$1.$maxCharsPerByte = 0.5;
    return var$1;
}
function jnci_UTF8Charset_newEncoder($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Encoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    var$1.$malformedAction0 = jnc_CodingErrorAction_REPORT;
    var$1.$unmappableAction0 = jnc_CodingErrorAction_REPORT;
    var$4 = var$3.length;
    if (var$4 && var$4 >= var$1.$maxBytesPerChar) {
        var$1.$charset1 = $this;
        var$1.$replacement0 = var$2.$clone();
        var$1.$averageBytesPerChar = 2.0;
        var$1.$maxBytesPerChar = 4.0;
        return var$1;
    }
    var$5 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$5, $rt_s(232));
    $rt_throw(var$5);
}
function ju_Random() {
    var a = this; jl_Object.call(a);
    a.$storedGaussian = 0.0;
    a.$haveStoredGaussian = 0;
}
function ju_Random__init_0() {
    var var_0 = new ju_Random();
    ju_Random__init_(var_0);
    return var_0;
}
function ju_Random__init_1(var_0) {
    var var_1 = new ju_Random();
    ju_Random__init_2(var_1, var_0);
    return var_1;
}
function ju_Random__init_($this) {
    return;
}
function ju_Random__init_2($this, $seed) {
    return;
}
function ju_Random_setSeed($this, $seed) {
    return;
}
function ju_Random_next($this, $bits) {
    if ($bits == 32)
        return ju_Random_nextDouble($this) * 4.294967295E9 + (-2.147483648E9) | 0;
    return ju_Random_nextDouble($this) * Long_toNumber(Long_shl(Long_fromInt(1), jl_Math_min(32, $bits))) | 0;
}
function ju_Random_nextInt0($this) {
    return ju_Random_next($this, 32);
}
function ju_Random_nextInt($this, $n) {
    return ju_Random_nextDouble($this) * $n | 0;
}
function ju_Random_nextLong($this) {
    return Long_or(Long_shl(Long_fromInt(ju_Random_nextInt0($this)), 32), Long_fromInt(ju_Random_nextInt0($this)));
}
function ju_Random_nextBoolean($this) {
    return ju_Random_nextInt0($this) % 2 | 0 ? 0 : 1;
}
function ju_Random_nextFloat($this) {
    return ju_Random_nextDouble($this);
}
function ju_Random_nextDouble($this) {
    return Math.random();
}
function ju_Random_nextGaussian($this) {
    var $v1, $v2, $s, $m;
    if ($this.$haveStoredGaussian) {
        $this.$haveStoredGaussian = 0;
        return $this.$storedGaussian;
    }
    while (true) {
        while (true) {
            $v1 = 2.0 * ju_Random_nextDouble($this) - 1.0;
            $v2 = 2.0 * ju_Random_nextDouble($this) - 1.0;
            $s = $v1 * $v1 + $v2 * $v2;
            if ($s >= 1.0)
                continue;
            else
                break;
        }
        if ($s === 0.0)
            continue;
        else
            break;
    }
    $m = jl_Math_sqrt((-2.0) * jl_Math_log($s) / $s);
    $this.$storedGaussian = $v2 * $m;
    $this.$haveStoredGaussian = 1;
    return $v1 * $m;
}
function nms_GLAllocation() {
    jl_Object.call(this);
}
var nms_GLAllocation_displayLists = null;
var nms_GLAllocation_textureNames = null;
function nms_GLAllocation__init_0() {
    var var_0 = new nms_GLAllocation();
    nms_GLAllocation__init_(var_0);
    return var_0;
}
function nms_GLAllocation__init_($this) {
    return;
}
function nms_GLAllocation_generateDisplayLists($i) {
    var $j, var$3, var$4, var$5, var$6, var$7;
    jl_Object_monitorEnterSync($rt_cls(nms_GLAllocation));
    try {
        olo_EaglerAdapterGL30_$callClinit();
        $j = olo_EaglerAdapterGL30_displayListId + 1 | 0;
        var$3 = 0;
        while (var$3 < $i) {
            var$4 = olo_EaglerAdapterGL30_displayListId + 1 | 0;
            olo_EaglerAdapterGL30_displayListId = var$4;
            var$5 = olo_EaglerAdapterGL30_displayLists;
            var$6 = jl_Integer_valueOf(var$4);
            var$7 = new olo_EaglerAdapterGL30$DisplayList;
            var$7.$id = var$4;
            var$7.$glarray = null;
            var$7.$glbuffer = null;
            var$7.$shaderMode = (-1);
            var$7.$listLength = 0;
            ju_HashMap_putImpl(var$5, var$6, var$7);
            var$3 = var$3 + 1 | 0;
        }
        ju_ArrayList_add(nms_GLAllocation_displayLists, jl_Integer_valueOf($j));
        ju_ArrayList_add(nms_GLAllocation_displayLists, jl_Integer_valueOf($i));
        return $j;
    } finally {
        jl_Object_monitorExitSync($rt_cls(nms_GLAllocation));
    }
}
function nms_GLAllocation_generateTextureNames($intbuffer) {
    var $i, var$3, var$4, var$5, $tx;
    jl_Object_monitorEnterSync($rt_cls(nms_GLAllocation));
    try {
        $i = $intbuffer.$position;
        while ($i < $intbuffer.$limit) {
            olo_EaglerAdapterGL30_$callClinit();
            var$3 = olo_EaglerAdapterGL30_texObjects;
            nlea_EaglerAdapterImpl2_$callClinit();
            var$4 = new nlea_EaglerAdapterImpl2$TextureGL;
            var$5 = nlea_EaglerAdapterImpl2_webgl.createTexture();
            var$4.$w = (-1);
            var$4.$h0 = (-1);
            var$4.$nearest = 1;
            var$4.$anisotropic = 0;
            var$4.$obj4 = var$5;
            $tx = nPg_GLObjectMap_register(var$3, var$4);
            jn_IntBufferImpl_put0($intbuffer, $i, $tx);
            ju_ArrayList_add(nms_GLAllocation_textureNames, jl_Integer_valueOf($tx));
            $i = $i + 1 | 0;
        }
    } finally {
        jl_Object_monitorExitSync($rt_cls(nms_GLAllocation));
    }
}
function nms_GLAllocation_createDirectByteBuffer($par0) {
    var var$2;
    var$2 = jn_ByteBuffer_wrap0($rt_createByteArray($par0));
    var$2.$order = jn_ByteOrder_BIG_ENDIAN;
    return var$2;
}
function nms_GLAllocation_createDirectIntBuffer($par0) {
    return jn_IntBuffer_wrap($rt_createIntArray($par0));
}
function nms_GLAllocation_createDirectFloatBuffer($par0) {
    var var$2, var$3, var$4, var$5;
    var$2 = $rt_createFloatArray($par0);
    var$3 = var$2.data.length;
    var$4 = new jn_FloatBufferOverArray;
    var$5 = 0 + var$3 | 0;
    jn_Buffer__init_(var$4, var$3);
    var$4.$position = 0;
    var$4.$limit = var$5;
    var$4.$start2 = 0;
    var$4.$readOnly = 0;
    var$4.$array1 = var$2;
    return var$4;
}
function nms_GLAllocation__clinit_() {
    nms_GLAllocation_displayLists = ju_ArrayList__init_0();
    nms_GLAllocation_textureNames = ju_ArrayList__init_0();
}
function nms_ItemRenderer() {
    var a = this; jl_Object.call(a);
    a.$mc3 = null;
    a.$field_9451_b = null;
    a.$field_9453_c = 0.0;
    a.$field_9452_d = 0.0;
    a.$field_1357_e = null;
}
function nms_ItemRenderer__init_(var_0) {
    var var_1 = new nms_ItemRenderer();
    nms_ItemRenderer__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemRenderer__init_0($this, $var1) {
    $this.$field_9451_b = null;
    $this.$field_9453_c = 0.0;
    $this.$field_9452_d = 0.0;
    $this.$field_1357_e = nms_RenderBlocks__init_0();
    $this.$mc3 = $var1;
}
function nms_ItemRenderer_renderItem($this, $var1) {
    var var$2, $var2, var$4, $var12, $var3, $var4, $var5, $var6, var$10, var$11, var$12, var$13, var$14, $var13, $var14, var$17, var$18, $var10, var$20, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$20 = $thread.pop();$var10 = $thread.pop();var$18 = $thread.pop();var$17 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var12 = $thread.pop();var$4 = $thread.pop();$var2 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        if ($var1.$itemID < 256) {
            nms_Block_$callClinit();
            if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var1.$itemID].$getRenderType())) {
                var$2 = 3553;
                $var2 = $this.$mc3.$renderEngine;
                var$4 = $rt_s(193);
                $ptr = 3;
                continue main;
            }
        }
        if ($var1.$itemID >= 256) {
            var$2 = 3553;
            var$4 = $this.$mc3.$renderEngine;
            $var2 = $rt_s(176);
            $ptr = 1;
            continue main;
        }
        var$2 = 3553;
        $var2 = $this.$mc3.$renderEngine;
        var$4 = $rt_s(193);
        $ptr = 2;
        continue main;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$4, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var12 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$2, $var12);
        nms_Tessellator_$callClinit();
        $var2 = nms_Tessellator_instance;
        $var3 = (((nms_ItemStack_getIconIndex($var1) % 16 | 0) * 16 | 0) + 0.0) / 256.0;
        $var4 = (((nms_ItemStack_getIconIndex($var1) % 16 | 0) * 16 | 0) + 15.989999771118164) / 256.0;
        $var5 = (((nms_ItemStack_getIconIndex($var1) / 16 | 0) * 16 | 0) + 0.0) / 256.0;
        $var6 = (((nms_ItemStack_getIconIndex($var1) / 16 | 0) * 16 | 0) + 15.989999771118164) / 256.0;
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glTranslatef(-0.0, (-0.30000001192092896), 0.0);
        olo_EaglerAdapterGL30_glScalef(1.5, 1.5, 1.5);
        olo_EaglerAdapterGL30_glRotatef(50.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef(335.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glTranslatef((-0.9375), (-0.0625), 0.0);
        nms_Tessellator_startDrawingQuads($var2);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, 1.0);
        var$10 = $var4;
        var$11 = $var6;
        nms_Tessellator_addVertexWithUV($var2, 0.0, 0.0, 0.0, var$10, var$11);
        var$12 = $var3;
        nms_Tessellator_addVertexWithUV($var2, 1.0, 0.0, 0.0, var$12, var$11);
        var$13 = $var5;
        nms_Tessellator_addVertexWithUV($var2, 1.0, 1.0, 0.0, var$12, var$13);
        nms_Tessellator_addVertexWithUV($var2, 0.0, 1.0, 0.0, var$10, var$13);
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, (-1.0));
        nms_Tessellator_addVertexWithUV($var2, 0.0, 1.0, (-0.0625), var$10, var$13);
        nms_Tessellator_addVertexWithUV($var2, 1.0, 1.0, (-0.0625), var$12, var$13);
        nms_Tessellator_addVertexWithUV($var2, 1.0, 0.0, (-0.0625), var$12, var$11);
        nms_Tessellator_addVertexWithUV($var2, 0.0, 0.0, (-0.0625), var$10, var$11);
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, (-1.0), 0.0, 0.0);
        $var12 = 0;
        var$14 = $var3 - $var4;
        while ($var12 < 16) {
            $var13 = $var12 / 16.0;
            $var14 = $var4 + var$14 * $var13 - 0.001953125;
            var$17 = 1.0 * $var13;
            var$18 = $var14;
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, (-0.0625), var$18, var$11);
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, 0.0, var$18, var$11);
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, 0.0, var$18, var$13);
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, (-0.0625), var$18, var$13);
            $var12 = $var12 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, 1.0, 0.0, 0.0);
        var$2 = 0;
        while (var$2 < 16) {
            $var13 = var$2 / 16.0;
            $var14 = $var4 + var$14 * $var13 - 0.001953125;
            var$17 = 1.0 * $var13 + 0.0625;
            var$18 = $var14;
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, (-0.0625), var$18, var$13);
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, 0.0, var$18, var$13);
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, 0.0, var$18, var$11);
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, (-0.0625), var$18, var$11);
            var$2 = var$2 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, 0.0, 1.0, 0.0);
        var$2 = 0;
        $var10 = $var5 - $var6;
        while (var$2 < 16) {
            $var13 = var$2 / 16.0;
            $var14 = $var6 + $var10 * $var13 - 0.001953125;
            var$11 = 1.0 * $var13 + 0.0625;
            var$18 = $var14;
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$11, 0.0, var$10, var$18);
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$11, 0.0, var$12, var$18);
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$11, (-0.0625), var$12, var$18);
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$11, (-0.0625), var$10, var$18);
            var$2 = var$2 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, 0.0, (-1.0), 0.0);
        var$2 = 0;
        while (var$2 < 16) {
            $var13 = var$2 / 16.0;
            $var14 = $var6 + $var10 * $var13 - 0.001953125;
            var$17 = 1.0 * $var13;
            var$20 = $var14;
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$17, 0.0, var$12, var$20);
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$17, 0.0, var$10, var$20);
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$17, (-0.0625), var$10, var$20);
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$17, (-0.0625), var$12, var$20);
            var$2 = var$2 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var2, var$4);
        if ($rt_suspending()) {
            break main;
        }
        $var12 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$2, $var12);
        nms_Tessellator_$callClinit();
        $var2 = nms_Tessellator_instance;
        $var3 = (((nms_ItemStack_getIconIndex($var1) % 16 | 0) * 16 | 0) + 0.0) / 256.0;
        $var4 = (((nms_ItemStack_getIconIndex($var1) % 16 | 0) * 16 | 0) + 15.989999771118164) / 256.0;
        $var5 = (((nms_ItemStack_getIconIndex($var1) / 16 | 0) * 16 | 0) + 0.0) / 256.0;
        $var6 = (((nms_ItemStack_getIconIndex($var1) / 16 | 0) * 16 | 0) + 15.989999771118164) / 256.0;
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glTranslatef(-0.0, (-0.30000001192092896), 0.0);
        olo_EaglerAdapterGL30_glScalef(1.5, 1.5, 1.5);
        olo_EaglerAdapterGL30_glRotatef(50.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef(335.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glTranslatef((-0.9375), (-0.0625), 0.0);
        nms_Tessellator_startDrawingQuads($var2);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, 1.0);
        var$10 = $var4;
        var$11 = $var6;
        nms_Tessellator_addVertexWithUV($var2, 0.0, 0.0, 0.0, var$10, var$11);
        var$12 = $var3;
        nms_Tessellator_addVertexWithUV($var2, 1.0, 0.0, 0.0, var$12, var$11);
        var$13 = $var5;
        nms_Tessellator_addVertexWithUV($var2, 1.0, 1.0, 0.0, var$12, var$13);
        nms_Tessellator_addVertexWithUV($var2, 0.0, 1.0, 0.0, var$10, var$13);
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, (-1.0));
        nms_Tessellator_addVertexWithUV($var2, 0.0, 1.0, (-0.0625), var$10, var$13);
        nms_Tessellator_addVertexWithUV($var2, 1.0, 1.0, (-0.0625), var$12, var$13);
        nms_Tessellator_addVertexWithUV($var2, 1.0, 0.0, (-0.0625), var$12, var$11);
        nms_Tessellator_addVertexWithUV($var2, 0.0, 0.0, (-0.0625), var$10, var$11);
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, (-1.0), 0.0, 0.0);
        $var12 = 0;
        var$14 = $var3 - $var4;
        while ($var12 < 16) {
            $var13 = $var12 / 16.0;
            $var14 = $var4 + var$14 * $var13 - 0.001953125;
            var$17 = 1.0 * $var13;
            var$18 = $var14;
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, (-0.0625), var$18, var$11);
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, 0.0, var$18, var$11);
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, 0.0, var$18, var$13);
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, (-0.0625), var$18, var$13);
            $var12 = $var12 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, 1.0, 0.0, 0.0);
        var$2 = 0;
        while (var$2 < 16) {
            $var13 = var$2 / 16.0;
            $var14 = $var4 + var$14 * $var13 - 0.001953125;
            var$17 = 1.0 * $var13 + 0.0625;
            var$18 = $var14;
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, (-0.0625), var$18, var$13);
            nms_Tessellator_addVertexWithUV($var2, var$17, 1.0, 0.0, var$18, var$13);
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, 0.0, var$18, var$11);
            nms_Tessellator_addVertexWithUV($var2, var$17, 0.0, (-0.0625), var$18, var$11);
            var$2 = var$2 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, 0.0, 1.0, 0.0);
        var$2 = 0;
        $var10 = $var5 - $var6;
        while (var$2 < 16) {
            $var13 = var$2 / 16.0;
            $var14 = $var6 + $var10 * $var13 - 0.001953125;
            var$11 = 1.0 * $var13 + 0.0625;
            var$18 = $var14;
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$11, 0.0, var$10, var$18);
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$11, 0.0, var$12, var$18);
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$11, (-0.0625), var$12, var$18);
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$11, (-0.0625), var$10, var$18);
            var$2 = var$2 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setNormal($var2, 0.0, (-1.0), 0.0);
        var$2 = 0;
        while (var$2 < 16) {
            $var13 = var$2 / 16.0;
            $var14 = $var6 + $var10 * $var13 - 0.001953125;
            var$17 = 1.0 * $var13;
            var$20 = $var14;
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$17, 0.0, var$12, var$20);
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$17, 0.0, var$10, var$20);
            nms_Tessellator_addVertexWithUV($var2, 0.0, var$17, (-0.0625), var$10, var$20);
            nms_Tessellator_addVertexWithUV($var2, 1.0, var$17, (-0.0625), var$12, var$20);
            var$2 = var$2 + 1 | 0;
        }
        nms_Tessellator_draw($var2);
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 3:
        $tmp = nms_RenderEngine_getTexture($var2, var$4);
        if ($rt_suspending()) {
            break main;
        }
        $var12 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$2, $var12);
        nms_RenderBlocks_func_1227_a($this.$field_1357_e, nms_Block_blocksList.data[$var1.$itemID]);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $var2, var$4, $var12, $var3, $var4, $var5, $var6, var$10, var$11, var$12, var$13, var$14, $var13, $var14, var$17, var$18, $var10, var$20, $ptr);
}
function nms_ItemRenderer_renderItemInFirstPerson($this, $var1) {
    var $var2, $var3, $var4, $var5, $var7, $var8, var$8, var$9, $var11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var11 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var2 = $this.$field_9452_d + ($this.$field_9453_c - $this.$field_9452_d) * $var1;
        $var3 = $this.$mc3.$thePlayer;
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glRotatef($var3.$prevRotationPitch + ($var3.$rotationPitch - $var3.$prevRotationPitch) * $var1, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef($var3.$prevRotationYaw + ($var3.$rotationYaw - $var3.$prevRotationYaw) * $var1, 0.0, 1.0, 0.0);
        nms_RenderHelper_enableStandardItemLighting();
        olo_EaglerAdapterGL30_glPopMatrix();
        $var4 = nms_World_getLightBrightness($this.$mc3.$theWorld, nms_MathHelper_floor_double($var3.$posX), nms_MathHelper_floor_double($var3.$posY), nms_MathHelper_floor_double($var3.$posZ));
        olo_EaglerAdapterGL30_glColor4f($var4, $var4, $var4, 1.0);
        $var5 = $this.$field_9451_b;
        if ($var3.$fishEntity !== null) {
            $var5 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_($var5, nms_Item_stick.$shiftedIndex);
        }
        if ($var5 === null) {
            olo_EaglerAdapterGL30_glPushMatrix();
            $var7 = nms_EntityLiving_getSwingProgress($var3, $var1);
            $var8 = nms_MathHelper_sin($var7 * 3.1415927410125732);
            olo_EaglerAdapterGL30_glTranslatef( -nms_MathHelper_sin(nms_MathHelper_sqrt_float($var7) * 3.1415927410125732) * 0.30000001192092896, nms_MathHelper_sin(nms_MathHelper_sqrt_float($var7) * 3.1415927410125732 * 2.0) * 0.4000000059604645,  -$var8 * 0.4000000059604645);
            olo_EaglerAdapterGL30_glTranslatef(0.64000004529953, (-0.6000000238418579) - (1.0 - $var2) * 0.6000000238418579, (-0.7199999690055847));
            olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glEnable(32826);
            $var1 = nms_EntityLiving_getSwingProgress($var3, $var1);
            $var4 = nms_MathHelper_sin($var1 * $var1 * 3.1415927410125732);
            olo_EaglerAdapterGL30_glRotatef(nms_MathHelper_sin(nms_MathHelper_sqrt_float($var1) * 3.1415927410125732) * 70.0, 0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glRotatef( -$var4 * 20.0, 0.0, 0.0, 1.0);
            var$8 = 3553;
            $var3 = $this.$mc3.$renderEngine;
            $var5 = $this.$mc3.$thePlayer.$texture;
            $ptr = 1;
            continue main;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        $var7 = nms_EntityLiving_getSwingProgress($var3, $var1);
        $var8 = nms_MathHelper_sin($var7 * 3.1415927410125732);
        olo_EaglerAdapterGL30_glTranslatef( -nms_MathHelper_sin(nms_MathHelper_sqrt_float($var7) * 3.1415927410125732) * 0.4000000059604645, nms_MathHelper_sin(nms_MathHelper_sqrt_float($var7) * 3.1415927410125732 * 2.0) * 0.20000000298023224,  -$var8 * 0.20000000298023224);
        olo_EaglerAdapterGL30_glTranslatef(0.5600000023841858, (-0.5199999809265137) - (1.0 - $var2) * 0.6000000238418579, (-0.7199999690055847));
        olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glEnable(32826);
        $var1 = nms_EntityLiving_getSwingProgress($var3, $var1);
        $var4 = nms_MathHelper_sin($var1 * $var1 * 3.1415927410125732);
        $var1 = nms_MathHelper_sin(nms_MathHelper_sqrt_float($var1) * 3.1415927410125732);
        olo_EaglerAdapterGL30_glRotatef( -$var4 * 20.0, 0.0, 1.0, 0.0);
        $var1 =  -$var1;
        olo_EaglerAdapterGL30_glRotatef($var1 * 20.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef($var1 * 80.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glScalef(0.4000000059604645, 0.4000000059604645, 0.4000000059604645);
        if (nms_ItemStack_getItem($var5).$shouldRotateAroundWhenRendering())
            olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 1.0, 0.0);
        $ptr = 2;
        continue main;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var3, $var5);
        if ($rt_suspending()) {
            break main;
        }
        var$9 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$8, var$9);
        olo_EaglerAdapterGL30_glTranslatef((-1.0), 3.5999999046325684, 3.5);
        olo_EaglerAdapterGL30_glRotatef(120.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef(200.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef((-135.0), 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glScalef(1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glTranslatef(5.599999904632568, 0.0, 0.0);
        nms_RenderManager_$callClinit();
        $var11 = nms_RenderManager_func_855_a(nms_RenderManager_instance, $this.$mc3.$thePlayer);
        olo_EaglerAdapterGL30_glScalef(1.0, 1.0, 1.0);
        nms_RenderPlayer_drawFirstPersonHand($var11);
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glDisable(32826);
        nms_RenderHelper_disableStandardItemLighting();
        return;
    case 2:
        nms_ItemRenderer_renderItem($this, $var5);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glDisable(32826);
        nms_RenderHelper_disableStandardItemLighting();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var7, $var8, var$8, var$9, $var11, $ptr);
}
function nms_ItemRenderer_renderOverlays($this, $var1) {
    var var$2, var$3, $var2, $var3, $var4, var$7, var$8, var$9, var$10, var$11, var$12, var$13, $var5, $var6, var$16, var$17, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$17 = $thread.pop();var$16 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glDisable(3008);
        if ($this.$mc3.$thePlayer.$fire <= 0 && !$this.$mc3.$thePlayer.$field_9299_bv) {
            if (!nms_Entity_func_345_I($this.$mc3.$thePlayer)) {
                if (!nms_Entity_isInsideOfMaterial($this.$mc3.$thePlayer, nms_Material_water)) {
                    olo_EaglerAdapterGL30_glEnable(3008);
                    return;
                }
                var$2 = $this.$mc3.$renderEngine;
                var$3 = $rt_s(233);
                $ptr = 3;
                continue main;
            }
            $var2 = nms_MathHelper_floor_double($this.$mc3.$thePlayer.$posX);
            $var3 = nms_MathHelper_floor_double($this.$mc3.$thePlayer.$posY);
            $var4 = nms_MathHelper_floor_double($this.$mc3.$thePlayer.$posZ);
            var$2 = $this.$mc3.$renderEngine;
            var$3 = $rt_s(193);
            $ptr = 2;
            continue main;
        }
        var$3 = $this.$mc3.$renderEngine;
        var$2 = $rt_s(193);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$3, var$2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(3553, $var2);
        nms_Tessellator_$callClinit();
        var$2 = nms_Tessellator_instance;
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 0.8999999761581421);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        $var2 = 0;
        while ($var2 < 2) {
            olo_EaglerAdapterGL30_glPushMatrix();
            nms_Block_$callClinit();
            $var3 = nms_Block_fire.$blockIndexInTexture + ($var2 * 16 | 0) | 0;
            $var4 = ($var3 & 15) << 4;
            $var3 = $var3 & 240;
            var$7 = $var4;
            var$8 = var$7 / 256.0;
            var$7 = (var$7 + 15.989999771118164) / 256.0;
            var$9 = $var3;
            var$10 = var$9 / 256.0;
            var$9 = (var$9 + 15.989999771118164) / 256.0;
            $var3 = ($var2 * 2 | 0) - 1 | 0;
            olo_EaglerAdapterGL30_glTranslatef( -$var3 * 0.23999999463558197, (-0.30000001192092896), 0.0);
            olo_EaglerAdapterGL30_glRotatef($var3 * 10.0, 0.0, 1.0, 0.0);
            nms_Tessellator_startDrawingQuads(var$2);
            var$11 = var$7;
            var$12 = var$9;
            nms_Tessellator_addVertexWithUV(var$2, (-0.5), (-0.5), (-0.5), var$11, var$12);
            var$13 = var$8;
            nms_Tessellator_addVertexWithUV(var$2, 0.5, (-0.5), (-0.5), var$13, var$12);
            var$12 = var$10;
            nms_Tessellator_addVertexWithUV(var$2, 0.5, 0.5, (-0.5), var$13, var$12);
            nms_Tessellator_addVertexWithUV(var$2, (-0.5), 0.5, (-0.5), var$11, var$12);
            nms_Tessellator_draw(var$2);
            olo_EaglerAdapterGL30_glPopMatrix();
            $var2 = $var2 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3042);
        if (!nms_Entity_func_345_I($this.$mc3.$thePlayer)) {
            if (!nms_Entity_isInsideOfMaterial($this.$mc3.$thePlayer, nms_Material_water)) {
                olo_EaglerAdapterGL30_glEnable(3008);
                return;
            }
            var$2 = $this.$mc3.$renderEngine;
            var$3 = $rt_s(233);
            $ptr = 3;
            continue main;
        }
        $var2 = nms_MathHelper_floor_double($this.$mc3.$thePlayer.$posX);
        $var3 = nms_MathHelper_floor_double($this.$mc3.$thePlayer.$posY);
        $var4 = nms_MathHelper_floor_double($this.$mc3.$thePlayer.$posZ);
        var$2 = $this.$mc3.$renderEngine;
        var$3 = $rt_s(193);
        $ptr = 2;
    case 2:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var5 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(3553, $var5);
        $var6 = nms_World_getBlockId($this.$mc3.$theWorld, $var2, $var3, $var4);
        nms_Block_$callClinit();
        if (nms_Block_blocksList.data[$var6] !== null) {
            $var2 = nms_Block_blocksList.data[$var6].$getBlockTextureFromSide(2);
            nms_Tessellator_$callClinit();
            var$2 = nms_Tessellator_instance;
            nms_Entity_getEntityBrightness($this.$mc3.$thePlayer, $var1);
            olo_EaglerAdapterGL30_glColor4f(0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.5);
            olo_EaglerAdapterGL30_glPushMatrix();
            var$7 = $var2 % 16 | 0;
            var$8 = var$7 / 256.0 - 0.0078125;
            var$7 = (var$7 + 15.989999771118164) / 256.0 + 0.0078125;
            var$9 = $var2 / 16 | 0;
            var$10 = var$9 / 256.0 - 0.0078125;
            var$9 = (var$9 + 15.989999771118164) / 256.0 + 0.0078125;
            nms_Tessellator_startDrawingQuads(var$2);
            var$16 = var$7;
            var$11 = var$9;
            nms_Tessellator_addVertexWithUV(var$2, (-1.0), (-1.0), (-0.5), var$16, var$11);
            var$17 = var$8;
            nms_Tessellator_addVertexWithUV(var$2, 1.0, (-1.0), (-0.5), var$17, var$11);
            var$11 = var$10;
            nms_Tessellator_addVertexWithUV(var$2, 1.0, 1.0, (-0.5), var$17, var$11);
            nms_Tessellator_addVertexWithUV(var$2, (-1.0), 1.0, (-0.5), var$16, var$11);
            nms_Tessellator_draw(var$2);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        }
        if (!nms_Entity_isInsideOfMaterial($this.$mc3.$thePlayer, nms_Material_water)) {
            olo_EaglerAdapterGL30_glEnable(3008);
            return;
        }
        var$2 = $this.$mc3.$renderEngine;
        var$3 = $rt_s(233);
        $ptr = 3;
    case 3:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(3553, $var2);
        nms_Tessellator_$callClinit();
        var$2 = nms_Tessellator_instance;
        var$7 = nms_Entity_getEntityBrightness($this.$mc3.$thePlayer, $var1);
        olo_EaglerAdapterGL30_glColor4f(var$7, var$7, var$7, 0.5);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        olo_EaglerAdapterGL30_glPushMatrix();
        var$7 =  -$this.$mc3.$thePlayer.$rotationYaw / 64.0;
        var$8 = $this.$mc3.$thePlayer.$rotationPitch / 64.0;
        nms_Tessellator_startDrawingQuads(var$2);
        var$16 = 4.0 + var$7;
        var$11 = 4.0 + var$8;
        nms_Tessellator_addVertexWithUV(var$2, (-1.0), (-1.0), (-0.5), var$16, var$11);
        var$17 = 0.0 + var$7;
        nms_Tessellator_addVertexWithUV(var$2, 1.0, (-1.0), (-0.5), var$17, var$11);
        var$11 = 0.0 + var$8;
        nms_Tessellator_addVertexWithUV(var$2, 1.0, 1.0, (-0.5), var$17, var$11);
        nms_Tessellator_addVertexWithUV(var$2, (-1.0), 1.0, (-0.5), var$16, var$11);
        nms_Tessellator_draw(var$2);
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glEnable(3008);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $var2, $var3, $var4, var$7, var$8, var$9, var$10, var$11, var$12, var$13, $var5, $var6, var$16, var$17, $ptr);
}
function nms_ItemRenderer_func_895_a($this) {
    var $var2, $var4, $var6, $var5;
    $this.$field_9452_d = $this.$field_9453_c;
    $var2 = nms_InventoryPlayer_getCurrentItem($this.$mc3.$thePlayer.$inventory0);
    $var4 = 0.4000000059604645;
    $var6 = ($var2 !== $this.$field_9451_b ? 0.0 : 1.0) - $this.$field_9453_c;
    $var5 = (-0.4000000059604645);
    if ($var6 >= $var5)
        $var5 = $var6;
    if ($var5 <= $var4)
        $var4 = $var5;
    $this.$field_9453_c = $this.$field_9453_c + $var4;
    if ($this.$field_9453_c < 0.10000000149011612)
        $this.$field_9451_b = $var2;
}
function nms_ItemRenderer_func_9449_b($this) {
    $this.$field_9453_c = 0.0;
}
function nms_ItemRenderer_func_9450_c($this) {
    $this.$field_9453_c = 0.0;
}
function nms_Block() {
    var a = this; jl_Object.call(a);
    a.$blockIndexInTexture = 0;
    a.$blockID = 0;
    a.$blockHardness = 0.0;
    a.$blockResistance = 0.0;
    a.$field_370_bf = 0.0;
    a.$minY = 0.0;
    a.$minZ = 0.0;
    a.$maxX = 0.0;
    a.$maxY = 0.0;
    a.$maxZ = 0.0;
    a.$stepSound = null;
    a.$field_357_bm = 0.0;
    a.$blockMaterial = null;
    a.$slipperiness = 0.0;
}
var nms_Block_soundPowderFootstep = null;
var nms_Block_soundWoodFootstep = null;
var nms_Block_soundGravelFootstep = null;
var nms_Block_soundGrassFootstep = null;
var nms_Block_soundStoneFootstep = null;
var nms_Block_soundMetalFootstep = null;
var nms_Block_soundGlassFootstep = null;
var nms_Block_soundClothFootstep = null;
var nms_Block_soundSandFootstep = null;
var nms_Block_blocksList = null;
var nms_Block_tickOnLoad = null;
var nms_Block_opaqueCubeLookup = null;
var nms_Block_isBlockContainer = null;
var nms_Block_lightOpacity = null;
var nms_Block_field_340_s = null;
var nms_Block_lightValue = null;
var nms_Block_stone = null;
var nms_Block_grass = null;
var nms_Block_dirt = null;
var nms_Block_cobblestone = null;
var nms_Block_planks = null;
var nms_Block_sapling = null;
var nms_Block_bedrock = null;
var nms_Block_waterStill = null;
var nms_Block_waterMoving = null;
var nms_Block_lavaStill = null;
var nms_Block_lavaMoving = null;
var nms_Block_sand = null;
var nms_Block_gravel = null;
var nms_Block_oreGold = null;
var nms_Block_oreIron = null;
var nms_Block_oreCoal = null;
var nms_Block_wood = null;
var nms_Block_leaves = null;
var nms_Block_sponge = null;
var nms_Block_glass = null;
var nms_Block_field_9267_N = null;
var nms_Block_field_9266_O = null;
var nms_Block_field_9265_P = null;
var nms_Block_field_9264_Q = null;
var nms_Block_field_9263_R = null;
var nms_Block_field_9262_S = null;
var nms_Block_field_9261_T = null;
var nms_Block_field_9260_U = null;
var nms_Block_field_9259_V = null;
var nms_Block_field_9258_W = null;
var nms_Block_field_9257_X = null;
var nms_Block_field_9256_Y = null;
var nms_Block_field_9255_Z = null;
var nms_Block_field_9269_aa = null;
var nms_Block_cloth = null;
var nms_Block_field_9268_ac = null;
var nms_Block_plantYellow = null;
var nms_Block_plantRed = null;
var nms_Block_mushroomBrown = null;
var nms_Block_mushroomRed = null;
var nms_Block_blockGold = null;
var nms_Block_blockSteel = null;
var nms_Block_stairDouble = null;
var nms_Block_stairSingle = null;
var nms_Block_brick = null;
var nms_Block_tnt = null;
var nms_Block_bookShelf = null;
var nms_Block_cobblestoneMossy = null;
var nms_Block_obsidian = null;
var nms_Block_torchWood = null;
var nms_Block_fire = null;
var nms_Block_mobSpawner = null;
var nms_Block_stairCompactPlanks = null;
var nms_Block_crate = null;
var nms_Block_redstoneWire = null;
var nms_Block_oreDiamond = null;
var nms_Block_blockDiamond = null;
var nms_Block_workbench = null;
var nms_Block_crops = null;
var nms_Block_tilledField = null;
var nms_Block_stoneOvenIdle = null;
var nms_Block_stoneOvenActive = null;
var nms_Block_signPost = null;
var nms_Block_doorWood = null;
var nms_Block_ladder = null;
var nms_Block_minecartTrack = null;
var nms_Block_stairCompactCobblestone = null;
var nms_Block_signWall = null;
var nms_Block_lever = null;
var nms_Block_pressurePlateStone = null;
var nms_Block_doorSteel = null;
var nms_Block_pressurePlatePlanks = null;
var nms_Block_oreRedstone = null;
var nms_Block_oreRedstoneGlowing = null;
var nms_Block_torchRedstoneIdle = null;
var nms_Block_torchRedstoneActive = null;
var nms_Block_button = null;
var nms_Block_snow = null;
var nms_Block_blockIce = null;
var nms_Block_blockSnow = null;
var nms_Block_cactus = null;
var nms_Block_blockClay = null;
var nms_Block_reed = null;
var nms_Block_jukebox = null;
var nms_Block_fence = null;
var nms_Block_pumpkin = null;
var nms_Block_bloodStone = null;
var nms_Block_slowSand = null;
var nms_Block_lightStone = null;
var nms_Block_portal = null;
var nms_Block_pumpkinLantern = null;
function nms_Block_$callClinit() {
    nms_Block_$callClinit = $rt_eraseClinit(nms_Block);
    nms_Block__clinit_();
}
function nms_Block__init_(var_0, var_1) {
    var var_2 = new nms_Block();
    nms_Block__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_Block__init_1(var_0, var_1, var_2) {
    var var_3 = new nms_Block();
    nms_Block__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_Block__init_0($this, $var1, $var2) {
    var var$3, var$4, var$5;
    nms_Block_$callClinit();
    $this.$stepSound = nms_Block_soundPowderFootstep;
    $this.$field_357_bm = 1.0;
    $this.$slipperiness = 0.6000000238418579;
    if (nms_Block_blocksList.data[$var1] !== null) {
        $var2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_Throwable__init_($var2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(234)), $var1), $rt_s(235)), nms_Block_blocksList.data[$var1]), $rt_s(236)), $this)));
        $rt_throw($var2);
    }
    $this.$blockMaterial = $var2;
    nms_Block_blocksList.data[$var1] = $this;
    $this.$blockID = $var1;
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
    nms_Block_opaqueCubeLookup.data[$var1] = $this.$isOpaqueCube();
    var$4 = nms_Block_lightOpacity;
    var$5 = !$this.$isOpaqueCube() ? 0 : 255;
    var$4.data[$var1] = var$5;
    nms_Block_field_340_s.data[$var1] = 0;
    nms_Block_isBlockContainer.data[$var1] = 0;
}
function nms_Block__init_2($this, $var1, $var2, $var3) {
    nms_Block_$callClinit();
    nms_Block__init_0($this, $var1, $var3);
    $this.$blockIndexInTexture = $var2;
}
function nms_Block_setStepSound($this, $var1) {
    $this.$stepSound = $var1;
    return $this;
}
function nms_Block_setLightOpacity($this, $var1) {
    nms_Block_lightOpacity.data[$this.$blockID] = $var1;
    return $this;
}
function nms_Block_setLightValue($this, $var1) {
    nms_Block_lightValue.data[$this.$blockID] = 15.0 * $var1 | 0;
    return $this;
}
function nms_Block_setResistance($this, $var1) {
    $this.$blockResistance = $var1 * 3.0;
    return $this;
}
function nms_Block_renderAsNormalBlock($this) {
    return 1;
}
function nms_Block_getRenderType($this) {
    return 0;
}
function nms_Block_setHardness($this, $var1) {
    var var$2;
    $this.$blockHardness = $var1;
    var$2 = $this.$blockResistance;
    $var1 = $var1 * 5.0;
    if (var$2 < $var1)
        $this.$blockResistance = $var1;
    return $this;
}
function nms_Block_setTickOnLoad($this, $var1) {
    nms_Block_tickOnLoad.data[$this.$blockID] = $var1;
}
function nms_Block_setBlockBounds($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    $this.$field_370_bf = $var1;
    $this.$minY = $var2;
    $this.$minZ = $var3;
    $this.$maxX = $var4;
    $this.$maxY = $var5;
    $this.$maxZ = $var6;
}
function nms_Block_getBlockBrightness($this, $var1, $var2, $var3, $var4) {
    return $var1.$getLightBrightness($var2, $var3, $var4);
}
function nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    return !$var5 && $this.$minY > 0.0 ? 1 : $var5 == 1 && $this.$maxY < 1.0 ? 1 : $var5 == 2 && $this.$minZ > 0.0 ? 1 : $var5 == 3 && $this.$maxZ < 1.0 ? 1 : $var5 == 4 && $this.$field_370_bf > 0.0 ? 1 : $var5 == 5 && $this.$maxX < 1.0 ? 1 : $var1.$isBlockOpaqueCube($var2, $var3, $var4) ? 0 : 1;
}
function nms_Block_getBlockTexture($this, $var1, $var2, $var3, $var4, $var5) {
    return $this.$getBlockTextureFromSideAndMetadata($var5, $var1.$getBlockMetadata($var2, $var3, $var4));
}
function nms_Block_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    return $this.$getBlockTextureFromSide($var1);
}
function nms_Block_getBlockTextureFromSide($this, $var1) {
    return $this.$blockIndexInTexture;
}
function nms_Block_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6, var$7, var$8, var$9;
    var$5 = $var2;
    var$6 = var$5 + $this.$field_370_bf;
    var$7 = $var3;
    var$8 = var$7 + $this.$minY;
    var$9 = $var4;
    return nms_AxisAlignedBB_getBoundingBoxFromPool(var$6, var$8, var$9 + $this.$minZ, var$5 + $this.$maxX, var$7 + $this.$maxY, var$9 + $this.$maxZ);
}
function nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = $this.$getCollisionBoundingBoxFromPool($var1, $var2, $var3, $var4);
    if ($var7 !== null && nms_AxisAlignedBB_intersectsWith($var5, $var7))
        ju_ArrayList_add($var6, $var7);
}
function nms_Block_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6, var$7, var$8, var$9;
    var$5 = $var2;
    var$6 = var$5 + $this.$field_370_bf;
    var$7 = $var3;
    var$8 = var$7 + $this.$minY;
    var$9 = $var4;
    return nms_AxisAlignedBB_getBoundingBoxFromPool(var$6, var$8, var$9 + $this.$minZ, var$5 + $this.$maxX, var$7 + $this.$maxY, var$9 + $this.$maxZ);
}
function nms_Block_isOpaqueCube($this) {
    return 1;
}
function nms_Block_canCollideCheck($this, $var1, $var2) {
    return $this.$isCollidable();
}
function nms_Block_isCollidable($this) {
    return 1;
}
function nms_Block_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_onBlockDestroyedByPlayer($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_tickRate($this) {
    return 10;
}
function nms_Block_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_Block_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_Block_quantityDropped($this, $var1) {
    return 1;
}
function nms_Block_idDropped($this, $var1, $var2) {
    return $this.$blockID;
}
function nms_Block_func_225_a($this, $var1) {
    return $this.$blockHardness < 0.0 ? 0.0 : nms_EntityPlayer_canHarvestBlock($var1, $this) ? nms_EntityPlayer_getCurrentPlayerStrVsBlock($var1, $this) / $this.$blockHardness / 30.0 : 1.0 / $this.$blockHardness / 100.0;
}
function nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$dropBlockAsItemWithChance($var1, $var2, $var3, $var4, $var5, 1.0);
}
function nms_Block_dropBlockAsItemWithChance($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8, var$9, var$10, var$11, $var9, $var17;
    $var7 = $this.$quantityDropped($var1.$rand1);
    $var8 = 0;
    var$9 = $var2;
    var$10 = $var3;
    var$11 = $var4;
    while ($var8 < $var7) {
        if (ju_Random_nextFloat($var1.$rand1) <= $var6) {
            $var9 = $this.$idDropped($var5, $var1.$rand1);
            if ($var9 > 0) {
                $var17 = nms_EntityItem__init_($var1, var$9 + ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448, var$10 + ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448, var$11 + ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448, nms_ItemStack__init_0($var9));
                $var17.$field_805_c = 10;
                nms_World_entityJoinedWorld($var1, $var17);
            }
        }
        $var8 = $var8 + 1 | 0;
    }
}
function nms_Block_func_227_a($this, $var1) {
    return $this.$blockResistance / 5.0;
}
function nms_Block_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7, var$8, var$9, $var7, $var8, $var9, $var10, $var11, $var12, $var13, $var14;
    $this.$setBlockBoundsBasedOnState($var1, $var2, $var3, $var4);
    var$7 =  -$var2;
    var$8 =  -$var3;
    var$9 =  -$var4;
    $var1 = nms_Vec3D_addVector($var5, var$7, var$8, var$9);
    $var5 = nms_Vec3D_addVector($var6, var$7, var$8, var$9);
    $var7 = nms_Vec3D_getIntermediateWithXValue($var1, $var5, $this.$field_370_bf);
    $var8 = nms_Vec3D_getIntermediateWithXValue($var1, $var5, $this.$maxX);
    $var9 = nms_Vec3D_getIntermediateWithYValue($var1, $var5, $this.$minY);
    $var10 = nms_Vec3D_getIntermediateWithYValue($var1, $var5, $this.$maxY);
    $var11 = nms_Vec3D_getIntermediateWithZValue($var1, $var5, $this.$minZ);
    $var12 = nms_Vec3D_getIntermediateWithZValue($var1, $var5, $this.$maxZ);
    if (!nms_Block_isVecInsideYZBounds($this, $var7))
        $var7 = null;
    if (!nms_Block_isVecInsideYZBounds($this, $var8))
        $var8 = null;
    if (!nms_Block_isVecInsideXZBounds($this, $var9))
        $var9 = null;
    if (!nms_Block_isVecInsideXZBounds($this, $var10))
        $var10 = null;
    if (!nms_Block_isVecInsideXYBounds($this, $var11))
        $var11 = null;
    if (!nms_Block_isVecInsideXYBounds($this, $var12))
        $var12 = null;
    $var13 = null;
    if ($var7 !== null)
        $var13 = $var7;
    if ($var8 !== null && !($var13 !== null && nms_Vec3D_distanceTo($var1, $var8) >= nms_Vec3D_distanceTo($var1, $var13)))
        $var13 = $var8;
    if ($var9 !== null && !($var13 !== null && nms_Vec3D_distanceTo($var1, $var9) >= nms_Vec3D_distanceTo($var1, $var13)))
        $var13 = $var9;
    if ($var10 !== null && !($var13 !== null && nms_Vec3D_distanceTo($var1, $var10) >= nms_Vec3D_distanceTo($var1, $var13)))
        $var13 = $var10;
    if ($var11 !== null && !($var13 !== null && nms_Vec3D_distanceTo($var1, $var11) >= nms_Vec3D_distanceTo($var1, $var13)))
        $var13 = $var11;
    if ($var12 !== null && !($var13 !== null && nms_Vec3D_distanceTo($var1, $var12) >= nms_Vec3D_distanceTo($var1, $var13)))
        $var13 = $var12;
    if ($var13 === null)
        return null;
    $var14 = (-1);
    if ($var13 === $var7)
        $var14 = 4;
    if ($var13 === $var8)
        $var14 = 5;
    if ($var13 === $var9)
        $var14 = 0;
    if ($var13 === $var10)
        $var14 = 1;
    if ($var13 === $var11)
        $var14 = 2;
    if ($var13 === $var12)
        $var14 = 3;
    return nms_MovingObjectPosition__init_0($var2, $var3, $var4, $var14, nms_Vec3D_addVector($var13, $var2, $var3, $var4));
}
function nms_Block_isVecInsideYZBounds($this, $var1) {
    return $var1 === null ? 0 : $var1.$yCoord >= $this.$minY && $var1.$yCoord <= $this.$maxY && $var1.$zCoord >= $this.$minZ && $var1.$zCoord <= $this.$maxZ ? 1 : 0;
}
function nms_Block_isVecInsideXZBounds($this, $var1) {
    return $var1 === null ? 0 : $var1.$xCoord >= $this.$field_370_bf && $var1.$xCoord <= $this.$maxX && $var1.$zCoord >= $this.$minZ && $var1.$zCoord <= $this.$maxZ ? 1 : 0;
}
function nms_Block_isVecInsideXYBounds($this, $var1) {
    return $var1 === null ? 0 : $var1.$xCoord >= $this.$field_370_bf && $var1.$xCoord <= $this.$maxX && $var1.$yCoord >= $this.$minY && $var1.$yCoord <= $this.$maxY ? 1 : 0;
}
function nms_Block_onBlockDestroyedByExplosion($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_Block_func_234_g($this) {
    return 0;
}
function nms_Block_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockId($var1, $var2, $var3, $var4);
    return $var5 && !nms_Block_blocksList.data[$var5].$blockMaterial.$getIsLiquid() ? 0 : 1;
}
function nms_Block_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    return 0;
}
function nms_Block_onEntityWalking($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_onBlockPlaced($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_onBlockClicked($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_velocityToAddToEntity($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    return;
}
function nms_Block_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_Block_colorMultiplier($this, $var1, $var2, $var3, $var4) {
    return 16777215;
}
function nms_Block_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return 0;
}
function nms_Block_canProvidePower($this) {
    return 0;
}
function nms_Block_onEntityCollidedWithBlock($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block_isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return 0;
}
function nms_Block_func_237_e($this) {
    return;
}
function nms_Block_harvestBlock($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$dropBlockAsItem($var1, $var2, $var3, $var4, $var5);
}
function nms_Block_canBlockStay($this, $var1, $var2, $var3, $var4) {
    return 1;
}
function nms_Block_onBlockPlacedBy($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Block__clinit_() {
    var $var0;
    nms_Block_soundPowderFootstep = nms_StepSound__init_($rt_s(237), 1.0, 1.0);
    nms_Block_soundWoodFootstep = nms_StepSound__init_($rt_s(238), 1.0, 1.0);
    nms_Block_soundGravelFootstep = nms_StepSound__init_($rt_s(239), 1.0, 1.0);
    nms_Block_soundGrassFootstep = nms_StepSound__init_($rt_s(240), 1.0, 1.0);
    nms_Block_soundStoneFootstep = nms_StepSound__init_($rt_s(237), 1.0, 1.0);
    nms_Block_soundMetalFootstep = nms_StepSound__init_($rt_s(237), 1.0, 1.5);
    nms_Block_soundGlassFootstep = nms_StepSoundStone__init_($rt_s(237), 1.0, 1.0);
    nms_Block_soundClothFootstep = nms_StepSound__init_($rt_s(241), 1.0, 1.0);
    nms_Block_soundSandFootstep = nms_StepSoundSand__init_($rt_s(242), 1.0, 1.0);
    nms_Block_blocksList = $rt_createArray(nms_Block, 256);
    nms_Block_tickOnLoad = $rt_createBooleanArray(256);
    nms_Block_opaqueCubeLookup = $rt_createBooleanArray(256);
    nms_Block_isBlockContainer = $rt_createBooleanArray(256);
    nms_Block_lightOpacity = $rt_createIntArray(256);
    nms_Block_field_340_s = $rt_createBooleanArray(256);
    nms_Block_lightValue = $rt_createIntArray(256);
    nms_Block_stone = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockStone__init_(1, 1), 1.5), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_grass = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockGrass__init_(2), 0.6000000238418579), nms_Block_soundGrassFootstep);
    nms_Block_dirt = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockDirt__init_(3, 2), 0.5), nms_Block_soundGravelFootstep);
    nms_Block_cobblestone = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_Block__init_1(4, 16, nms_Material_rock), 2.0), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_planks = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_Block__init_1(5, 4, nms_Material_wood), 2.0), 5.0), nms_Block_soundWoodFootstep);
    nms_Block_sapling = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSapling__init_(6, 15), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_bedrock = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_Block__init_1(7, 17, nms_Material_rock), (-1.0)), 6000000.0), nms_Block_soundStoneFootstep);
    nms_Block_waterStill = nms_Block_setLightOpacity(nms_Block_setHardness(nms_BlockFlowing__init_(8, nms_Material_water), 100.0), 3);
    nms_Block_waterMoving = nms_Block_setLightOpacity(nms_Block_setHardness(nms_BlockStationary__init_(9, nms_Material_water), 100.0), 3);
    nms_Block_lavaStill = nms_Block_setLightOpacity(nms_Block_setLightValue(nms_Block_setHardness(nms_BlockFlowing__init_(10, nms_Material_lava), 0.0), 1.0), 255);
    nms_Block_lavaMoving = nms_Block_setLightOpacity(nms_Block_setLightValue(nms_Block_setHardness(nms_BlockStationary__init_(11, nms_Material_lava), 100.0), 1.0), 255);
    nms_Block_sand = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSand__init_(12, 18), 0.5), nms_Block_soundSandFootstep);
    nms_Block_gravel = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockGravel__init_(13, 19), 0.6000000238418579), nms_Block_soundGravelFootstep);
    nms_Block_oreGold = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOre__init_(14, 32), 3.0), 5.0), nms_Block_soundStoneFootstep);
    nms_Block_oreIron = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOre__init_(15, 33), 3.0), 5.0), nms_Block_soundStoneFootstep);
    nms_Block_oreCoal = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOre__init_(16, 34), 3.0), 5.0), nms_Block_soundStoneFootstep);
    nms_Block_wood = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockLog__init_(17), 2.0), nms_Block_soundWoodFootstep);
    nms_Block_leaves = nms_Block_setStepSound(nms_Block_setLightOpacity(nms_Block_setHardness(nms_BlockLeaves__init_(18, 52), 0.20000000298023224), 1), nms_Block_soundGrassFootstep);
    nms_Block_sponge = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSponge__init_(19), 0.6000000238418579), nms_Block_soundGrassFootstep);
    nms_Block_glass = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockGlass__init_(20, 49, nms_Material_glass, 0), 0.30000001192092896), nms_Block_soundGlassFootstep);
    nms_Block_field_9267_N = null;
    nms_Block_field_9266_O = null;
    nms_Block_field_9265_P = null;
    nms_Block_field_9264_Q = null;
    nms_Block_field_9263_R = null;
    nms_Block_field_9262_S = null;
    nms_Block_field_9261_T = null;
    nms_Block_field_9260_U = null;
    nms_Block_field_9259_V = null;
    nms_Block_field_9258_W = null;
    nms_Block_field_9257_X = null;
    nms_Block_field_9256_Y = null;
    nms_Block_field_9255_Z = null;
    nms_Block_field_9269_aa = null;
    nms_Block_cloth = nms_Block_setStepSound(nms_Block_setHardness(nms_Block__init_1(35, 64, nms_Material_cloth), 0.800000011920929), nms_Block_soundClothFootstep);
    nms_Block_field_9268_ac = null;
    nms_Block_plantYellow = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockFlower__init_(37, 13), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_plantRed = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockFlower__init_(38, 12), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_mushroomBrown = nms_Block_setLightValue(nms_Block_setStepSound(nms_Block_setHardness(nms_BlockMushroom__init_(39, 29), 0.0), nms_Block_soundGrassFootstep), 0.125);
    nms_Block_mushroomRed = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockMushroom__init_(40, 28), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_blockGold = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOreBlock__init_(41, 39), 3.0), 10.0), nms_Block_soundMetalFootstep);
    nms_Block_blockSteel = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOreBlock__init_(42, 38), 5.0), 10.0), nms_Block_soundMetalFootstep);
    nms_Block_stairDouble = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockStep__init_(43, 1), 2.0), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_stairSingle = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockStep__init_(44, 0), 2.0), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_brick = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_Block__init_1(45, 7, nms_Material_rock), 2.0), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_tnt = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockTNT__init_(46, 8), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_bookShelf = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockBookshelf__init_(47, 35), 1.5), nms_Block_soundWoodFootstep);
    nms_Block_cobblestoneMossy = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_Block__init_1(48, 36, nms_Material_rock), 2.0), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_obsidian = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockObsidian__init_(49, 37), 10.0), 2000.0), nms_Block_soundStoneFootstep);
    nms_Block_torchWood = nms_Block_setStepSound(nms_Block_setLightValue(nms_Block_setHardness(nms_BlockTorch__init_(50, 80), 0.0), 0.9375), nms_Block_soundWoodFootstep);
    nms_Block_fire = nms_Block_setStepSound(nms_Block_setLightValue(nms_Block_setHardness(nms_BlockFire__init_(51, 31), 0.0), 1.0), nms_Block_soundWoodFootstep);
    nms_Block_mobSpawner = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockMobSpawner__init_(52, 65), 5.0), nms_Block_soundMetalFootstep);
    nms_Block_stairCompactPlanks = nms_BlockStairs__init_(53, nms_Block_planks);
    nms_Block_crate = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockChest__init_(54), 2.5), nms_Block_soundWoodFootstep);
    nms_Block_redstoneWire = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockRedstoneWire__init_(55, 84), 0.0), nms_Block_soundPowderFootstep);
    nms_Block_oreDiamond = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOre__init_(56, 50), 3.0), 5.0), nms_Block_soundStoneFootstep);
    nms_Block_blockDiamond = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockOreBlock__init_(57, 40), 5.0), 10.0), nms_Block_soundMetalFootstep);
    nms_Block_workbench = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockWorkbench__init_(58), 2.5), nms_Block_soundWoodFootstep);
    nms_Block_crops = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockCrops__init_(59, 88), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_tilledField = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSoil__init_(60), 0.6000000238418579), nms_Block_soundGravelFootstep);
    nms_Block_stoneOvenIdle = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockFurnace__init_(61, 0), 3.5), nms_Block_soundStoneFootstep);
    nms_Block_stoneOvenActive = nms_Block_setLightValue(nms_Block_setStepSound(nms_Block_setHardness(nms_BlockFurnace__init_(62, 1), 3.5), nms_Block_soundStoneFootstep), 0.875);
    nms_Block_signPost = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSign__init_(63, $rt_cls(nms_TileEntitySign), 1), 1.0), nms_Block_soundWoodFootstep);
    nms_Block_doorWood = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockDoor__init_(64, nms_Material_wood), 3.0), nms_Block_soundWoodFootstep);
    nms_Block_ladder = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockLadder__init_(65, 83), 0.4000000059604645), nms_Block_soundWoodFootstep);
    nms_Block_minecartTrack = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockMinecartTrack__init_(66, 128), 0.699999988079071), nms_Block_soundMetalFootstep);
    nms_Block_stairCompactCobblestone = nms_BlockStairs__init_(67, nms_Block_cobblestone);
    nms_Block_signWall = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSign__init_(68, $rt_cls(nms_TileEntitySign), 0), 1.0), nms_Block_soundWoodFootstep);
    nms_Block_lever = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockLever__init_(69, 96), 0.5), nms_Block_soundWoodFootstep);
    nms_Block_pressurePlateStone = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockPressurePlate__init_(70, nms_Block_stone.$blockIndexInTexture, nms_EnumMobType_mobs), 0.5), nms_Block_soundStoneFootstep);
    nms_Block_doorSteel = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockDoor__init_(71, nms_Material_iron), 5.0), nms_Block_soundMetalFootstep);
    nms_Block_pressurePlatePlanks = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockPressurePlate__init_(72, nms_Block_planks.$blockIndexInTexture, nms_EnumMobType_everything), 0.5), nms_Block_soundWoodFootstep);
    nms_Block_oreRedstone = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockRedstoneOre__init_(73, 51, 0), 3.0), 5.0), nms_Block_soundStoneFootstep);
    nms_Block_oreRedstoneGlowing = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_Block_setLightValue(nms_BlockRedstoneOre__init_(74, 51, 1), 0.625), 3.0), 5.0), nms_Block_soundStoneFootstep);
    nms_Block_torchRedstoneIdle = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockRedstoneTorch__init_(75, 115, 0), 0.0), nms_Block_soundWoodFootstep);
    nms_Block_torchRedstoneActive = nms_Block_setStepSound(nms_Block_setLightValue(nms_Block_setHardness(nms_BlockRedstoneTorch__init_(76, 99, 1), 0.0), 0.5), nms_Block_soundWoodFootstep);
    nms_Block_button = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockButton__init_(77, nms_Block_stone.$blockIndexInTexture), 0.5), nms_Block_soundStoneFootstep);
    nms_Block_snow = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSnow__init_(78, 66), 0.10000000149011612), nms_Block_soundClothFootstep);
    nms_Block_blockIce = nms_Block_setStepSound(nms_Block_setLightOpacity(nms_Block_setHardness(nms_BlockIce__init_(79, 67), 0.5), 3), nms_Block_soundGlassFootstep);
    nms_Block_blockSnow = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSnowBlock__init_(80, 66), 0.20000000298023224), nms_Block_soundClothFootstep);
    nms_Block_cactus = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockCactus__init_(81, 70), 0.4000000059604645), nms_Block_soundClothFootstep);
    nms_Block_blockClay = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockClay__init_(82, 72), 0.6000000238418579), nms_Block_soundGravelFootstep);
    nms_Block_reed = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockReed__init_(83, 73), 0.0), nms_Block_soundGrassFootstep);
    nms_Block_jukebox = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockJukeBox__init_(84, 74), 2.0), 10.0), nms_Block_soundStoneFootstep);
    nms_Block_fence = nms_Block_setStepSound(nms_Block_setResistance(nms_Block_setHardness(nms_BlockFence__init_(85, 4), 2.0), 5.0), nms_Block_soundWoodFootstep);
    nms_Block_pumpkin = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockPumpkin__init_(86, 102, 0), 1.0), nms_Block_soundWoodFootstep);
    nms_Block_bloodStone = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockBloodStone__init_(87, 103), 0.4000000059604645), nms_Block_soundStoneFootstep);
    nms_Block_slowSand = nms_Block_setStepSound(nms_Block_setHardness(nms_BlockSlowSand__init_(88, 104), 0.5), nms_Block_soundSandFootstep);
    nms_Block_lightStone = nms_Block_setLightValue(nms_Block_setStepSound(nms_Block_setHardness(nms_BlockLightStone__init_(89, 105, nms_Material_glass), 0.30000001192092896), nms_Block_soundGlassFootstep), 1.0);
    nms_Block_portal = nms_Block_setLightValue(nms_Block_setStepSound(nms_Block_setHardness(nms_BlockPortal__init_(90, 14), (-1.0)), nms_Block_soundGlassFootstep), 0.75);
    nms_Block_pumpkinLantern = nms_Block_setLightValue(nms_Block_setStepSound(nms_Block_setHardness(nms_BlockPumpkin__init_(91, 102, 1), 1.0), nms_Block_soundWoodFootstep), 1.0);
    $var0 = 0;
    while ($var0 < 256) {
        if (nms_Block_blocksList.data[$var0] !== null) {
            nms_Item_$callClinit();
            nms_Item_itemsList.data[$var0] = nms_ItemBlock__init_($var0 - 256 | 0);
        }
        $var0 = $var0 + 1 | 0;
    }
}
function ju_RandomAccess() {
}
function ju_ArrayList() {
    var a = this; ju_AbstractList.call(a);
    a.$array2 = null;
    a.$size = 0;
}
function ju_ArrayList__init_0() {
    var var_0 = new ju_ArrayList();
    ju_ArrayList__init_(var_0);
    return var_0;
}
function ju_ArrayList__init_1(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_2(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_3(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_4(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_($this) {
    ju_ArrayList__init_2($this, 10);
}
function ju_ArrayList__init_2($this, $initialCapacity) {
    $this.$array2 = $rt_createArray(jl_Object, $initialCapacity);
}
function ju_ArrayList__init_4($this, $c) {
    var $iter, $i;
    ju_ArrayList__init_2($this, $c.$size);
    $iter = ju_AbstractList_iterator($c);
    $i = 0;
    while ($i < $this.$array2.data.length) {
        $this.$array2.data[$i] = ju_AbstractList$1_next($iter);
        $i = $i + 1 | 0;
    }
    $this.$size = $this.$array2.data.length;
}
function ju_ArrayList_ensureCapacity($this, $minCapacity) {
    var $newLength;
    if ($this.$array2.data.length < $minCapacity) {
        $newLength = $this.$array2.data.length >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max($this.$array2.data.length * 2 | 0, 5));
        $this.$array2 = ju_Arrays_copyOf($this.$array2, $newLength);
    }
}
function ju_ArrayList_get($this, $index) {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array2.data[$index];
}
function ju_ArrayList_size($this) {
    return $this.$size;
}
function ju_ArrayList_set($this, $index, $element) {
    var $old;
    ju_ArrayList_checkIndex($this, $index);
    $old = $this.$array2.data[$index];
    $this.$array2.data[$index] = $element;
    return $old;
}
function ju_ArrayList_add($this, $element) {
    var var$2, var$3;
    ju_ArrayList_ensureCapacity($this, $this.$size + 1 | 0);
    var$2 = $this.$array2.data;
    var$3 = $this.$size;
    $this.$size = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
}
function ju_ArrayList_add0($this, $index, $element) {
    var $i;
    if ($index >= 0 && $index <= $this.$size) {
        ju_ArrayList_ensureCapacity($this, $this.$size + 1 | 0);
        $i = $this.$size;
        while ($i > $index) {
            $this.$array2.data[$i] = $this.$array2.data[$i - 1 | 0];
            $i = $i + (-1) | 0;
        }
        $this.$array2.data[$index] = $element;
        $this.$size = $this.$size + 1 | 0;
        $this.$modCount = $this.$modCount + 1 | 0;
        return;
    }
    $element = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0($element);
    $rt_throw($element);
}
function ju_ArrayList_remove($this, $i) {
    var $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array2.data[$i];
    $this.$size = $this.$size - 1 | 0;
    while ($i < $this.$size) {
        var$3 = $this.$array2.data;
        var$4 = $this.$array2.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array2.data[$this.$size] = null;
    $this.$modCount = $this.$modCount + 1 | 0;
    return $old;
}
function ju_ArrayList_remove0($this, $o) {
    var $index;
    $index = ju_AbstractList_indexOf($this, $o);
    if ($index < 0)
        return 0;
    ju_ArrayList_remove($this, $index);
    return 1;
}
function ju_ArrayList_clear($this) {
    ju_Arrays_fill($this.$array2, 0, $this.$size, null);
    $this.$size = 0;
}
function ju_ArrayList_checkIndex($this, $index) {
    var var$2;
    if ($index >= 0 && $index < $this.$size)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function nle_BaseNCodec() {
    var a = this; jl_Object.call(a);
    a.$PAD = 61;
    a.$pad = 0;
    a.$unencodedBlockSize = 0;
    a.$encodedBlockSize = 0;
    a.$lineLength = 0;
    a.$chunkSeparatorLength = 0;
    a.$decodingPolicy = null;
}
var nle_BaseNCodec_CHUNK_SEPARATOR = null;
function nle_BaseNCodec_compareUnsigned($xx, $yy) {
    $xx = $rt_compare($xx + (-2147483648) | 0, $yy + (-2147483648) | 0);
    return $xx < 0 ? (-1) : $xx ? 1 : 0;
}
function nle_BaseNCodec_available($this, $context) {
    return $context.$buffer2 === null ? 0 : $context.$pos0 - $context.$readPos | 0;
}
function nle_BaseNCodec_containsAlphabetOrPad($this, $arrayOctet) {
    var var$2, var$3, $element;
    if ($arrayOctet === null)
        return 0;
    $arrayOctet = $arrayOctet.data;
    var$2 = $arrayOctet.length;
    var$3 = 0;
    a: {
        while (var$3 < var$2) {
            $element = $arrayOctet[var$3];
            if ($this.$pad == $element)
                break a;
            if (nle_Base64_isInAlphabet($this, $element))
                break a;
            var$3 = var$3 + 1 | 0;
        }
        return 0;
    }
    return 1;
}
function nle_BaseNCodec_decode0($this, $pArray) {
    var var$2, $context, $result;
    if ($pArray !== null) {
        var$2 = $pArray.data.length;
        if (var$2) {
            $context = new nle_BaseNCodec$Context;
            nle_Base64_decode($this, $pArray, 0, var$2, $context);
            nle_Base64_decode($this, $pArray, 0, (-1), $context);
            $result = $rt_createByteArray($context.$pos0);
            nle_BaseNCodec_readResults($this, $result, 0, $result.data.length, $context);
            return $result;
        }
    }
    return $pArray;
}
function nle_BaseNCodec_decode($this, $pArray) {
    return nle_BaseNCodec_decode0($this, jl_String_getBytes($pArray, jnc_Charset_forName($rt_s(31))));
}
function nle_BaseNCodec_encode($this, $pArray) {
    var var$2;
    if ($pArray !== null) {
        var$2 = $pArray.data.length;
        if (var$2)
            return nle_BaseNCodec_encode0($this, $pArray, 0, var$2);
    }
    return $pArray;
}
function nle_BaseNCodec_encode0($this, $pArray, $offset, $length) {
    var $context, $buf;
    if ($pArray !== null && $pArray.data.length) {
        $context = new nle_BaseNCodec$Context;
        nle_Base64_encode($this, $pArray, $offset, $length, $context);
        nle_Base64_encode($this, $pArray, $offset, (-1), $context);
        $buf = $rt_createByteArray($context.$pos0 - $context.$readPos | 0);
        nle_BaseNCodec_readResults($this, $buf, 0, $buf.data.length, $context);
        return $buf;
    }
    return $pArray;
}
function nle_BaseNCodec_ensureBufferSize($this, $size, $context) {
    var var$3, var$4, var$5;
    if ($context.$buffer2 === null) {
        $context.$buffer2 = $rt_createByteArray(jl_Math_max($size, 8192));
        $context.$pos0 = 0;
        $context.$readPos = 0;
    } else if ((($context.$pos0 + $size | 0) - $context.$buffer2.data.length | 0) > 0) {
        $size = $context.$pos0 + $size | 0;
        var$3 = $context.$buffer2.data.length * 2 | 0;
        if (nle_BaseNCodec_compareUnsigned(var$3, $size) < 0)
            var$3 = $size;
        if (nle_BaseNCodec_compareUnsigned(var$3, 2147483639) <= 0)
            $size = var$3;
        else {
            if ($size < 0) {
                var$4 = new jl_OutOfMemoryError;
                $context = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($context);
                jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append2(jl_StringBuilder_append($context, $rt_s(243)), Long_and(Long_fromInt($size), new Long(4294967295, 0)))));
                $rt_throw(var$4);
            }
            if ($size <= 2147483639)
                $size = 2147483639;
        }
        var$5 = $rt_createByteArray($size);
        jl_System_arraycopy($context.$buffer2, 0, var$5, 0, $context.$buffer2.data.length);
        $context.$buffer2 = var$5;
        return var$5;
    }
    return $context.$buffer2;
}
function nle_BaseNCodec_getDefaultBufferSize($this) {
    return 8192;
}
function nle_BaseNCodec_getEncodedLength($this, $pArray) {
    var $len;
    $len = Long_mul(Long_fromInt((($pArray.data.length + $this.$unencodedBlockSize | 0) - 1 | 0) / $this.$unencodedBlockSize | 0), Long_fromInt($this.$encodedBlockSize));
    if ($this.$lineLength > 0)
        $len = Long_add($len, Long_mul(Long_div(Long_sub(Long_add($len, Long_fromInt($this.$lineLength)), Long_fromInt(1)), Long_fromInt($this.$lineLength)), Long_fromInt($this.$chunkSeparatorLength)));
    return $len;
}
function nle_BaseNCodec_isStrictDecoding($this) {
    return $this.$decodingPolicy !== nle_BaseNCodec$CodecPolicy_STRICT ? 0 : 1;
}
function nle_BaseNCodec_readResults($this, $b, $bPos, $bAvail, $context) {
    var $len;
    if ($context.$buffer2 === null)
        return !$context.$eof0 ? 0 : (-1);
    $len = jl_Math_min(nle_BaseNCodec_available($this, $context), $bAvail);
    jl_System_arraycopy($context.$buffer2, $context.$readPos, $b, $bPos, $len);
    $context.$readPos = $context.$readPos + $len | 0;
    if ($context.$readPos >= $context.$pos0)
        $context.$buffer2 = null;
    return $len;
}
function nle_BaseNCodec__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createByteArray(2);
    var$2 = var$1.data;
    var$2[0] = 13;
    var$2[1] = 10;
    nle_BaseNCodec_CHUNK_SEPARATOR = var$1;
}
function nle_Base64() {
    var a = this; nle_BaseNCodec.call(a);
    a.$encodeTable = null;
    a.$decodeTable = null;
    a.$lineSeparator = null;
    a.$decodeSize = 0;
    a.$encodeSize = 0;
}
var nle_Base64_STANDARD_ENCODE_TABLE = null;
var nle_Base64_URL_SAFE_ENCODE_TABLE = null;
var nle_Base64_DECODE_TABLE = null;
function nle_Base64__init_0() {
    var var_0 = new nle_Base64();
    nle_Base64__init_(var_0);
    return var_0;
}
function nle_Base64__init_1(var_0, var_1, var_2) {
    var var_3 = new nle_Base64();
    nle_Base64__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function nle_Base64__init_($this) {
    nle_Base64__init_2($this, 0, nle_BaseNCodec_CHUNK_SEPARATOR, 0);
}
function nle_Base64__init_2($this, $lineLength, $lineSeparator, $urlSafe) {
    var var$4, var$5, var$6, var$7, var$8;
    var$4 = nle_BaseNCodec$CodecPolicy_LENIANT;
    var$5 = $lineSeparator === null ? 0 : $lineSeparator.data.length;
    $this.$PAD = 61;
    $this.$unencodedBlockSize = 3;
    $this.$encodedBlockSize = 4;
    $this.$lineLength = !($lineLength > 0 && var$5 > 0 ? 1 : 0) ? 0 : ($lineLength / 4 | 0) * 4 | 0;
    $this.$chunkSeparatorLength = var$5;
    $this.$pad = 61;
    $this.$decodingPolicy = var$4;
    $this.$decodeTable = nle_Base64_DECODE_TABLE;
    if ($lineSeparator === null) {
        $this.$encodeSize = 4;
        $this.$lineSeparator = null;
    } else {
        if (nle_BaseNCodec_containsAlphabetOrPad($this, $lineSeparator)) {
            var$4 = jl_String__init_5($lineSeparator, jnc_Charset_forName($rt_s(31)));
            var$6 = new jl_IllegalArgumentException;
            var$7 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$7);
            jl_Throwable__init_(var$6, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(244)), var$4), $rt_s(245))));
            $rt_throw(var$6);
        }
        if ($lineLength <= 0) {
            $this.$encodeSize = 4;
            $this.$lineSeparator = null;
        } else {
            var$8 = $lineSeparator.data.length;
            $this.$encodeSize = 4 + var$8 | 0;
            $this.$lineSeparator = $rt_createByteArray(var$8);
            jl_System_arraycopy($lineSeparator, 0, $this.$lineSeparator, 0, var$8);
        }
    }
    $this.$decodeSize = $this.$encodeSize - 1 | 0;
    $this.$encodeTable = !$urlSafe ? nle_Base64_STANDARD_ENCODE_TABLE : nle_Base64_URL_SAFE_ENCODE_TABLE;
}
function nle_Base64_decode($this, $in, $inPos, $inAvail, $context) {
    var $i, var$6, $buffer, var$8, $b, $result, var$11, var$12;
    if ($context.$eof0)
        return;
    if ($inAvail < 0)
        $context.$eof0 = 1;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $inAvail)
                break a;
            var$6 = $in.data;
            $buffer = nle_BaseNCodec_ensureBufferSize($this, $this.$decodeSize, $context);
            var$8 = $inPos + 1 | 0;
            $b = var$6[$inPos];
            if ($b == $this.$pad)
                break;
            if ($b >= 0 && $b < nle_Base64_DECODE_TABLE.data.length) {
                $result = nle_Base64_DECODE_TABLE.data[$b];
                if ($result >= 0) {
                    $context.$modulus = ($context.$modulus + 1 | 0) % 4 | 0;
                    $context.$ibitWorkArea = ($context.$ibitWorkArea << 6) + $result | 0;
                    if (!$context.$modulus) {
                        $buffer = $buffer.data;
                        $inPos = $context.$pos0;
                        $context.$pos0 = $inPos + 1 | 0;
                        $buffer[$inPos] = ($context.$ibitWorkArea >> 16 & 255) << 24 >> 24;
                        $inPos = $context.$pos0;
                        $context.$pos0 = $inPos + 1 | 0;
                        $buffer[$inPos] = ($context.$ibitWorkArea >> 8 & 255) << 24 >> 24;
                        $b = $context.$pos0;
                        $context.$pos0 = $b + 1 | 0;
                        $buffer[$b] = ($context.$ibitWorkArea & 255) << 24 >> 24;
                    }
                }
            }
            $i = $i + 1 | 0;
            $inPos = var$8;
        }
        $context.$eof0 = 1;
    }
    b: {
        if ($context.$eof0 && $context.$modulus) {
            $buffer = nle_BaseNCodec_ensureBufferSize($this, $this.$decodeSize, $context);
            switch ($context.$modulus) {
                case 1:
                    break;
                case 2:
                    $in = $buffer.data;
                    nle_Base64_validateCharacter($this, 15, $context);
                    $context.$ibitWorkArea = $context.$ibitWorkArea >> 4;
                    $inAvail = $context.$pos0;
                    $context.$pos0 = $inAvail + 1 | 0;
                    $in[$inAvail] = ($context.$ibitWorkArea & 255) << 24 >> 24;
                    break b;
                case 3:
                    $in = $buffer.data;
                    nle_Base64_validateCharacter($this, 3, $context);
                    $context.$ibitWorkArea = $context.$ibitWorkArea >> 2;
                    var$8 = $context.$pos0;
                    $context.$pos0 = var$8 + 1 | 0;
                    $in[var$8] = ($context.$ibitWorkArea >> 8 & 255) << 24 >> 24;
                    $inPos = $context.$pos0;
                    $context.$pos0 = $inPos + 1 | 0;
                    $in[$inPos] = ($context.$ibitWorkArea & 255) << 24 >> 24;
                    break b;
                default:
                    var$11 = new jl_IllegalStateException;
                    var$12 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$12);
                    jl_Throwable__init_(var$11, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$12, $rt_s(246)), $context.$modulus)));
                    $rt_throw(var$11);
            }
            if (nle_BaseNCodec_isStrictDecoding($this)) {
                var$11 = new jl_IllegalArgumentException;
                jl_Throwable__init_(var$11, $rt_s(247));
                $rt_throw(var$11);
            }
        }
    }
}
function nle_Base64_encode($this, $in, $inPos, $inAvail, $context) {
    var $i, $buffer, $buffer_0, var$8, $b, var$10, $savedPos, var$12, var$13;
    if ($context.$eof0)
        return;
    a: {
        if ($inAvail >= 0) {
            $i = 0;
            while (true) {
                if ($i >= $inAvail)
                    break a;
                $buffer = $in.data;
                $buffer_0 = nle_BaseNCodec_ensureBufferSize($this, $this.$encodeSize, $context);
                $context.$modulus = ($context.$modulus + 1 | 0) % 3 | 0;
                var$8 = $inPos + 1 | 0;
                $b = $buffer[$inPos];
                if ($b < 0)
                    $b = $b + 256 | 0;
                $context.$ibitWorkArea = ($context.$ibitWorkArea << 8) + $b | 0;
                if (0 == $context.$modulus) {
                    var$10 = $buffer_0.data;
                    $inPos = $context.$pos0;
                    $context.$pos0 = $inPos + 1 | 0;
                    var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea >> 18 & 63];
                    $inPos = $context.$pos0;
                    $context.$pos0 = $inPos + 1 | 0;
                    var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea >> 12 & 63];
                    $inPos = $context.$pos0;
                    $context.$pos0 = $inPos + 1 | 0;
                    var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea >> 6 & 63];
                    $inPos = $context.$pos0;
                    $context.$pos0 = $inPos + 1 | 0;
                    var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea & 63];
                    $context.$currentLinePos = $context.$currentLinePos + 4 | 0;
                    if ($this.$lineLength > 0 && $this.$lineLength <= $context.$currentLinePos) {
                        jl_System_arraycopy($this.$lineSeparator, 0, $buffer_0, $context.$pos0, $this.$lineSeparator.data.length);
                        $context.$pos0 = $context.$pos0 + $this.$lineSeparator.data.length | 0;
                        $context.$currentLinePos = 0;
                    }
                }
                $i = $i + 1 | 0;
                $inPos = var$8;
            }
        }
        $context.$eof0 = 1;
        if (0 == $context.$modulus && !$this.$lineLength)
            return;
        b: {
            c: {
                $buffer = nle_BaseNCodec_ensureBufferSize($this, $this.$encodeSize, $context);
                $savedPos = $context.$pos0;
                switch ($context.$modulus) {
                    case 0:
                        break b;
                    case 1:
                        var$10 = $buffer.data;
                        $inPos = $context.$pos0;
                        $context.$pos0 = $inPos + 1 | 0;
                        var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea >> 2 & 63];
                        $inPos = $context.$pos0;
                        $context.$pos0 = $inPos + 1 | 0;
                        var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea << 4 & 63];
                        if ($this.$encodeTable !== nle_Base64_STANDARD_ENCODE_TABLE)
                            break b;
                        $inPos = $context.$pos0;
                        $context.$pos0 = $inPos + 1 | 0;
                        var$10[$inPos] = $this.$pad;
                        $inPos = $context.$pos0;
                        $context.$pos0 = $inPos + 1 | 0;
                        var$10[$inPos] = $this.$pad;
                        break b;
                    case 2:
                        break c;
                    default:
                }
                var$12 = new jl_IllegalStateException;
                var$13 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$13);
                jl_Throwable__init_(var$12, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$13, $rt_s(246)), $context.$modulus)));
                $rt_throw(var$12);
            }
            var$10 = $buffer.data;
            $inPos = $context.$pos0;
            $context.$pos0 = $inPos + 1 | 0;
            var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea >> 10 & 63];
            $inPos = $context.$pos0;
            $context.$pos0 = $inPos + 1 | 0;
            var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea >> 4 & 63];
            $inPos = $context.$pos0;
            $context.$pos0 = $inPos + 1 | 0;
            var$10[$inPos] = $this.$encodeTable.data[$context.$ibitWorkArea << 2 & 63];
            if ($this.$encodeTable === nle_Base64_STANDARD_ENCODE_TABLE) {
                $inPos = $context.$pos0;
                $context.$pos0 = $inPos + 1 | 0;
                var$10[$inPos] = $this.$pad;
            }
        }
        $context.$currentLinePos = $context.$currentLinePos + ($context.$pos0 - $savedPos | 0) | 0;
        if ($this.$lineLength > 0 && $context.$currentLinePos > 0) {
            jl_System_arraycopy($this.$lineSeparator, 0, $buffer, $context.$pos0, $this.$lineSeparator.data.length);
            $context.$pos0 = $context.$pos0 + $this.$lineSeparator.data.length | 0;
        }
    }
}
function nle_Base64_isInAlphabet($this, $octet) {
    return $octet >= 0 && $octet < $this.$decodeTable.data.length && $this.$decodeTable.data[$octet] != (-1) ? 1 : 0;
}
function nle_Base64_validateCharacter($this, $emptyBitsMask, $context) {
    var var$3;
    if (nle_BaseNCodec_isStrictDecoding($this) && $context.$ibitWorkArea & $emptyBitsMask) {
        var$3 = new jl_IllegalArgumentException;
        jl_Throwable__init_(var$3, $rt_s(248));
        $rt_throw(var$3);
    }
}
function nle_Base64__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createByteArray(64);
    var$2 = var$1.data;
    var$2[0] = 65;
    var$2[1] = 66;
    var$2[2] = 67;
    var$2[3] = 68;
    var$2[4] = 69;
    var$2[5] = 70;
    var$2[6] = 71;
    var$2[7] = 72;
    var$2[8] = 73;
    var$2[9] = 74;
    var$2[10] = 75;
    var$2[11] = 76;
    var$2[12] = 77;
    var$2[13] = 78;
    var$2[14] = 79;
    var$2[15] = 80;
    var$2[16] = 81;
    var$2[17] = 82;
    var$2[18] = 83;
    var$2[19] = 84;
    var$2[20] = 85;
    var$2[21] = 86;
    var$2[22] = 87;
    var$2[23] = 88;
    var$2[24] = 89;
    var$2[25] = 90;
    var$2[26] = 97;
    var$2[27] = 98;
    var$2[28] = 99;
    var$2[29] = 100;
    var$2[30] = 101;
    var$2[31] = 102;
    var$2[32] = 103;
    var$2[33] = 104;
    var$2[34] = 105;
    var$2[35] = 106;
    var$2[36] = 107;
    var$2[37] = 108;
    var$2[38] = 109;
    var$2[39] = 110;
    var$2[40] = 111;
    var$2[41] = 112;
    var$2[42] = 113;
    var$2[43] = 114;
    var$2[44] = 115;
    var$2[45] = 116;
    var$2[46] = 117;
    var$2[47] = 118;
    var$2[48] = 119;
    var$2[49] = 120;
    var$2[50] = 121;
    var$2[51] = 122;
    var$2[52] = 48;
    var$2[53] = 49;
    var$2[54] = 50;
    var$2[55] = 51;
    var$2[56] = 52;
    var$2[57] = 53;
    var$2[58] = 54;
    var$2[59] = 55;
    var$2[60] = 56;
    var$2[61] = 57;
    var$2[62] = 43;
    var$2[63] = 47;
    nle_Base64_STANDARD_ENCODE_TABLE = var$1;
    var$1 = $rt_createByteArray(64);
    var$2 = var$1.data;
    var$2[0] = 65;
    var$2[1] = 66;
    var$2[2] = 67;
    var$2[3] = 68;
    var$2[4] = 69;
    var$2[5] = 70;
    var$2[6] = 71;
    var$2[7] = 72;
    var$2[8] = 73;
    var$2[9] = 74;
    var$2[10] = 75;
    var$2[11] = 76;
    var$2[12] = 77;
    var$2[13] = 78;
    var$2[14] = 79;
    var$2[15] = 80;
    var$2[16] = 81;
    var$2[17] = 82;
    var$2[18] = 83;
    var$2[19] = 84;
    var$2[20] = 85;
    var$2[21] = 86;
    var$2[22] = 87;
    var$2[23] = 88;
    var$2[24] = 89;
    var$2[25] = 90;
    var$2[26] = 97;
    var$2[27] = 98;
    var$2[28] = 99;
    var$2[29] = 100;
    var$2[30] = 101;
    var$2[31] = 102;
    var$2[32] = 103;
    var$2[33] = 104;
    var$2[34] = 105;
    var$2[35] = 106;
    var$2[36] = 107;
    var$2[37] = 108;
    var$2[38] = 109;
    var$2[39] = 110;
    var$2[40] = 111;
    var$2[41] = 112;
    var$2[42] = 113;
    var$2[43] = 114;
    var$2[44] = 115;
    var$2[45] = 116;
    var$2[46] = 117;
    var$2[47] = 118;
    var$2[48] = 119;
    var$2[49] = 120;
    var$2[50] = 121;
    var$2[51] = 122;
    var$2[52] = 48;
    var$2[53] = 49;
    var$2[54] = 50;
    var$2[55] = 51;
    var$2[56] = 52;
    var$2[57] = 53;
    var$2[58] = 54;
    var$2[59] = 55;
    var$2[60] = 56;
    var$2[61] = 57;
    var$2[62] = 45;
    var$2[63] = 95;
    nle_Base64_URL_SAFE_ENCODE_TABLE = var$1;
    var$1 = $rt_createByteArray(123);
    var$2 = var$1.data;
    var$2[0] = (-1);
    var$2[1] = (-1);
    var$2[2] = (-1);
    var$2[3] = (-1);
    var$2[4] = (-1);
    var$2[5] = (-1);
    var$2[6] = (-1);
    var$2[7] = (-1);
    var$2[8] = (-1);
    var$2[9] = (-1);
    var$2[10] = (-1);
    var$2[11] = (-1);
    var$2[12] = (-1);
    var$2[13] = (-1);
    var$2[14] = (-1);
    var$2[15] = (-1);
    var$2[16] = (-1);
    var$2[17] = (-1);
    var$2[18] = (-1);
    var$2[19] = (-1);
    var$2[20] = (-1);
    var$2[21] = (-1);
    var$2[22] = (-1);
    var$2[23] = (-1);
    var$2[24] = (-1);
    var$2[25] = (-1);
    var$2[26] = (-1);
    var$2[27] = (-1);
    var$2[28] = (-1);
    var$2[29] = (-1);
    var$2[30] = (-1);
    var$2[31] = (-1);
    var$2[32] = (-1);
    var$2[33] = (-1);
    var$2[34] = (-1);
    var$2[35] = (-1);
    var$2[36] = (-1);
    var$2[37] = (-1);
    var$2[38] = (-1);
    var$2[39] = (-1);
    var$2[40] = (-1);
    var$2[41] = (-1);
    var$2[42] = (-1);
    var$2[43] = 62;
    var$2[44] = (-1);
    var$2[45] = 62;
    var$2[46] = (-1);
    var$2[47] = 63;
    var$2[48] = 52;
    var$2[49] = 53;
    var$2[50] = 54;
    var$2[51] = 55;
    var$2[52] = 56;
    var$2[53] = 57;
    var$2[54] = 58;
    var$2[55] = 59;
    var$2[56] = 60;
    var$2[57] = 61;
    var$2[58] = (-1);
    var$2[59] = (-1);
    var$2[60] = (-1);
    var$2[61] = (-1);
    var$2[62] = (-1);
    var$2[63] = (-1);
    var$2[64] = (-1);
    var$2[65] = 0;
    var$2[66] = 1;
    var$2[67] = 2;
    var$2[68] = 3;
    var$2[69] = 4;
    var$2[70] = 5;
    var$2[71] = 6;
    var$2[72] = 7;
    var$2[73] = 8;
    var$2[74] = 9;
    var$2[75] = 10;
    var$2[76] = 11;
    var$2[77] = 12;
    var$2[78] = 13;
    var$2[79] = 14;
    var$2[80] = 15;
    var$2[81] = 16;
    var$2[82] = 17;
    var$2[83] = 18;
    var$2[84] = 19;
    var$2[85] = 20;
    var$2[86] = 21;
    var$2[87] = 22;
    var$2[88] = 23;
    var$2[89] = 24;
    var$2[90] = 25;
    var$2[91] = (-1);
    var$2[92] = (-1);
    var$2[93] = (-1);
    var$2[94] = (-1);
    var$2[95] = 63;
    var$2[96] = (-1);
    var$2[97] = 26;
    var$2[98] = 27;
    var$2[99] = 28;
    var$2[100] = 29;
    var$2[101] = 30;
    var$2[102] = 31;
    var$2[103] = 32;
    var$2[104] = 33;
    var$2[105] = 34;
    var$2[106] = 35;
    var$2[107] = 36;
    var$2[108] = 37;
    var$2[109] = 38;
    var$2[110] = 39;
    var$2[111] = 40;
    var$2[112] = 41;
    var$2[113] = 42;
    var$2[114] = 43;
    var$2[115] = 44;
    var$2[116] = 45;
    var$2[117] = 46;
    var$2[118] = 47;
    var$2[119] = 48;
    var$2[120] = 49;
    var$2[121] = 50;
    var$2[122] = 51;
    nle_Base64_DECODE_TABLE = var$1;
}
function nPn_NBTTagEnd() {
    nPn_NBTBase.call(this);
}
function nPn_NBTTagEnd__init_0() {
    var var_0 = new nPn_NBTTagEnd();
    nPn_NBTTagEnd__init_(var_0);
    return var_0;
}
function nPn_NBTTagEnd__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagEnd_readTagContents($this, $datainput) {
    return;
}
function nPn_NBTTagEnd_writeTagContents($this, $dataoutput) {
    return;
}
function nPn_NBTTagEnd_getType($this) {
    return 0;
}
function ju_Locale() {
    var a = this; jl_Object.call(a);
    a.$countryCode = null;
    a.$languageCode = null;
    a.$variantCode = null;
}
var ju_Locale_defaultLocale = null;
var ju_Locale_CANADA = null;
var ju_Locale_CANADA_FRENCH = null;
var ju_Locale_CHINA = null;
var ju_Locale_CHINESE = null;
var ju_Locale_ENGLISH = null;
var ju_Locale_FRANCE = null;
var ju_Locale_FRENCH = null;
var ju_Locale_GERMAN = null;
var ju_Locale_GERMANY = null;
var ju_Locale_ITALIAN = null;
var ju_Locale_ITALY = null;
var ju_Locale_JAPAN = null;
var ju_Locale_JAPANESE = null;
var ju_Locale_KOREA = null;
var ju_Locale_KOREAN = null;
var ju_Locale_PRC = null;
var ju_Locale_SIMPLIFIED_CHINESE = null;
var ju_Locale_TAIWAN = null;
var ju_Locale_TRADITIONAL_CHINESE = null;
var ju_Locale_UK = null;
var ju_Locale_US = null;
var ju_Locale_ROOT = null;
function ju_Locale__init_(var_0, var_1) {
    var var_2 = new ju_Locale();
    ju_Locale__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_Locale__init_1(var_0, var_1, var_2) {
    var var_3 = new ju_Locale();
    ju_Locale__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_Locale__init_0($this, $language, $country) {
    ju_Locale__init_2($this, $language, $country, $rt_s(17));
}
function ju_Locale__init_2($this, $language, $country, $variant) {
    if ($language !== null && $country !== null && $variant !== null) {
        if (!jl_String_length($language) && !jl_String_length($country)) {
            $this.$languageCode = $rt_s(17);
            $this.$countryCode = $rt_s(17);
            $this.$variantCode = $variant;
            return;
        }
        $this.$languageCode = $language;
        $this.$countryCode = $country;
        $this.$variantCode = $variant;
        return;
    }
    $language = new jl_NullPointerException;
    jl_Throwable__init_0($language);
    $rt_throw($language);
}
function ju_Locale_equals($this, $object) {
    var $o;
    if ($object === $this)
        return 1;
    if (!($object instanceof ju_Locale))
        return 0;
    $o = $object;
    return jl_String_equals($this.$languageCode, $o.$languageCode) && jl_String_equals($this.$countryCode, $o.$countryCode) && jl_String_equals($this.$variantCode, $o.$variantCode) ? 1 : 0;
}
function ju_Locale_getCountry($this) {
    return $this.$countryCode;
}
function ju_Locale_getLanguage($this) {
    return $this.$languageCode;
}
function ju_Locale_hashCode($this) {
    return (jl_String_hashCode($this.$countryCode) + jl_String_hashCode($this.$languageCode) | 0) + jl_String_hashCode($this.$variantCode) | 0;
}
function ju_Locale__clinit_() {
    var $localeName, $countryIndex;
    ju_Locale_CANADA = ju_Locale__init_($rt_s(249), $rt_s(250));
    ju_Locale_CANADA_FRENCH = ju_Locale__init_($rt_s(251), $rt_s(250));
    ju_Locale_CHINA = ju_Locale__init_($rt_s(252), $rt_s(253));
    ju_Locale_CHINESE = ju_Locale__init_($rt_s(252), $rt_s(17));
    ju_Locale_ENGLISH = ju_Locale__init_($rt_s(249), $rt_s(17));
    ju_Locale_FRANCE = ju_Locale__init_($rt_s(251), $rt_s(254));
    ju_Locale_FRENCH = ju_Locale__init_($rt_s(251), $rt_s(17));
    ju_Locale_GERMAN = ju_Locale__init_($rt_s(255), $rt_s(17));
    ju_Locale_GERMANY = ju_Locale__init_($rt_s(255), $rt_s(256));
    ju_Locale_ITALIAN = ju_Locale__init_($rt_s(257), $rt_s(17));
    ju_Locale_ITALY = ju_Locale__init_($rt_s(257), $rt_s(258));
    ju_Locale_JAPAN = ju_Locale__init_($rt_s(259), $rt_s(260));
    ju_Locale_JAPANESE = ju_Locale__init_($rt_s(259), $rt_s(17));
    ju_Locale_KOREA = ju_Locale__init_($rt_s(261), $rt_s(262));
    ju_Locale_KOREAN = ju_Locale__init_($rt_s(261), $rt_s(17));
    ju_Locale_PRC = ju_Locale__init_($rt_s(252), $rt_s(253));
    ju_Locale_SIMPLIFIED_CHINESE = ju_Locale__init_($rt_s(252), $rt_s(253));
    ju_Locale_TAIWAN = ju_Locale__init_($rt_s(252), $rt_s(263));
    ju_Locale_TRADITIONAL_CHINESE = ju_Locale__init_($rt_s(252), $rt_s(263));
    ju_Locale_UK = ju_Locale__init_($rt_s(249), $rt_s(264));
    ju_Locale_US = ju_Locale__init_($rt_s(249), $rt_s(265));
    ju_Locale_ROOT = ju_Locale__init_($rt_s(17), $rt_s(17));
    if (otciu_CLDRHelper_$$metadata$$10 === null)
        otciu_CLDRHelper_$$metadata$$10 = otciu_CLDRHelper_getDefaultLocale$$create();
    $localeName = (otciu_CLDRHelper_$$metadata$$10.value !== null ? $rt_str(otciu_CLDRHelper_$$metadata$$10.value) : null);
    $countryIndex = jl_String_indexOf0($localeName, 95);
    ju_Locale_defaultLocale = ju_Locale__init_1(jl_String_substring0($localeName, 0, $countryIndex), jl_String_substring($localeName, $countryIndex + 1 | 0), $rt_s(17));
}
function jnc_Charset$Charsets() {
    jl_Object.call(this);
}
var jnc_Charset$Charsets_value = null;
function jnc_Charset$Charsets__init_0() {
    var var_0 = new jnc_Charset$Charsets();
    jnc_Charset$Charsets__init_(var_0);
    return var_0;
}
function jnc_Charset$Charsets__init_($this) {
    return;
}
function jnc_Charset$Charsets__clinit_() {
    jnc_Charset$Charsets_value = ju_HashMap__init_0();
    ju_HashMap_putImpl(jnc_Charset$Charsets_value, $rt_s(31), jnci_UTF8Charset__init_0());
}
function jl_IllegalArgumentException() {
    jl_RuntimeException.call(this);
}
function jl_IllegalArgumentException__init_0() {
    var var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_(var_0);
    return var_0;
}
function jl_IllegalArgumentException__init_1(var_0) {
    var var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalArgumentException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_IllegalArgumentException__init_2($this, $message) {
    jl_Throwable__init_($this, $message);
}
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
function jl_NullPointerException() {
    jl_RuntimeException.call(this);
}
function jl_NullPointerException__init_() {
    var var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_0(var_0);
    return var_0;
}
function jl_NullPointerException__init_0($this) {
    jl_Throwable__init_0($this);
}
function otjb_Performance() {
    jl_Object.call(this);
}
function otjb_Performance__init_0() {
    var var_0 = new otjb_Performance();
    otjb_Performance__init_(var_0);
    return var_0;
}
function otjb_Performance__init_($this) {
    return;
}
function jn_Buffer() {
    var a = this; jl_Object.call(a);
    a.$capacity = 0;
    a.$position = 0;
    a.$limit = 0;
    a.$mark0 = 0;
}
function jn_Buffer__init_0(var_0) {
    var var_1 = new jn_Buffer();
    jn_Buffer__init_(var_1, var_0);
    return var_1;
}
function jn_Buffer__init_($this, $capacity) {
    $this.$mark0 = (-1);
    $this.$capacity = $capacity;
    $this.$limit = $capacity;
}
function jn_Buffer_capacity($this) {
    return $this.$capacity;
}
function jn_Buffer_position($this) {
    return $this.$position;
}
function jn_Buffer_position0($this, $newPosition) {
    var var$2, var$3;
    if ($newPosition >= 0 && $newPosition <= $this.$limit) {
        $this.$position = $newPosition;
        if ($newPosition < $this.$mark0)
            $this.$mark0 = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(266)), $newPosition), $rt_s(267)), $this.$limit), $rt_s(245))));
    $rt_throw(var$2);
}
function jn_Buffer_limit($this) {
    return $this.$limit;
}
function jn_Buffer_limit0($this, $newLimit) {
    var var$2, var$3;
    if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
        if ($this.$mark0 > $newLimit)
            $this.$mark0 = (-1);
        $this.$limit = $newLimit;
        if ($this.$position > $this.$limit)
            $this.$position = $this.$limit;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(268)), $newLimit), $rt_s(267)), $this.$capacity), $rt_s(245))));
    $rt_throw(var$2);
}
function jn_Buffer_clear($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark0 = (-1);
    return $this;
}
function jn_Buffer_flip($this) {
    $this.$limit = $this.$position;
    $this.$position = 0;
    $this.$mark0 = (-1);
    return $this;
}
function jn_Buffer_remaining($this) {
    return $this.$limit - $this.$position | 0;
}
function jn_Buffer_hasRemaining($this) {
    return $this.$position >= $this.$limit ? 0 : 1;
}
function jn_FloatBuffer() {
    jn_Buffer.call(this);
}
function jn_FloatBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, $pos, var$7, var$8, $i, var$10;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            $pos = $offset + $length | 0;
            if ($pos > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$7, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(269)), $pos), $rt_s(270)), var$5)));
                $rt_throw(var$7);
            }
            if (jn_Buffer_remaining($this) < $length) {
                var$7 = new jn_BufferUnderflowException;
                jl_Throwable__init_0(var$7);
                $rt_throw(var$7);
            }
            if ($length < 0) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$7, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(271)), $length), $rt_s(272))));
                $rt_throw(var$7);
            }
            $pos = $this.$position;
            $i = 0;
            while ($i < $length) {
                var$10 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = jn_FloatBufferOverArray_getElement($this, $pos);
                $i = $i + 1 | 0;
                $offset = var$10;
                $pos = var$5;
            }
            $this.$position = $this.$position + $length | 0;
            return $this;
        }
    }
    $dst = $dst.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(273)), $offset), $rt_s(267)), $dst.length), $rt_s(34))));
    $rt_throw(var$8);
}
function jn_FloatBuffer_get0($this, $dst) {
    return jn_FloatBuffer_get($this, $dst, 0, $dst.data.length);
}
function jn_FloatBuffer_clear0($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_FloatBuffer_flip0($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_FloatBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_FloatBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_FloatBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_FloatBuffer_limit0($this, var$1) {
    jn_Buffer_limit0($this, var$1);
    return $this;
}
function nms_RenderBlocks() {
    var a = this; jl_Object.call(a);
    a.$blockAccess = null;
    a.$overrideBlockTexture = 0;
    a.$flipTexture = 0;
    a.$renderAllFaces = 0;
}
function nms_RenderBlocks__init_1(var_0) {
    var var_1 = new nms_RenderBlocks();
    nms_RenderBlocks__init_2(var_1, var_0);
    return var_1;
}
function nms_RenderBlocks__init_0() {
    var var_0 = new nms_RenderBlocks();
    nms_RenderBlocks__init_(var_0);
    return var_0;
}
function nms_RenderBlocks__init_2($this, $var1) {
    $this.$overrideBlockTexture = (-1);
    $this.$flipTexture = 0;
    $this.$renderAllFaces = 0;
    $this.$blockAccess = $var1;
}
function nms_RenderBlocks__init_($this) {
    $this.$overrideBlockTexture = (-1);
    $this.$flipTexture = 0;
    $this.$renderAllFaces = 0;
}
function nms_RenderBlocks_renderBlockUsingTexture($this, $var1, $var2, $var3, $var4, $var5) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$overrideBlockTexture = $var5;
        $ptr = 1;
    case 1:
        nms_RenderBlocks_renderBlockByRenderType($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $this.$overrideBlockTexture = (-1);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $ptr);
}
function nms_RenderBlocks_renderBlockByRenderType($this, $var1, $var2, $var3, $var4) {
    var $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = $var1.$getRenderType();
        $var1.$setBlockBoundsBasedOnState($this.$blockAccess, $var2, $var3, $var4);
        if (!$var5) {
            $ptr = 1;
            continue main;
        }
        a: {
            if ($var5 == 4) {
                $var2 = nms_RenderBlocks_renderBlockFluids($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 13) {
                $ptr = 2;
                continue main;
            }
            if ($var5 == 1) {
                $var2 = nms_RenderBlocks_renderBlockReed($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 6) {
                $var2 = nms_RenderBlocks_renderBlockCrops($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 2) {
                $var2 = nms_RenderBlocks_renderBlockTorch($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 3) {
                $var2 = nms_RenderBlocks_renderBlockFire($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 5) {
                $var2 = nms_RenderBlocks_renderBlockRedstoneWire($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 8) {
                $var2 = nms_RenderBlocks_renderBlockLadder($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 7) {
                $var2 = nms_RenderBlocks_renderBlockDoor($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 9) {
                $var2 = nms_RenderBlocks_renderBlockMinecartTrack($this, $var1, $var2, $var3, $var4);
                break a;
            }
            if ($var5 == 10) {
                $ptr = 3;
                continue main;
            }
            if ($var5 == 11) {
                $ptr = 4;
                continue main;
            }
            if ($var5 == 12) {
                $ptr = 5;
                continue main;
            }
            $var2 = 0;
        }
        return $var2;
    case 1:
        $tmp = nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    case 2:
        $tmp = nms_RenderBlocks_renderBlockCactus($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    case 3:
        $tmp = nms_RenderBlocks_renderBlockStairs($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    case 4:
        $tmp = nms_RenderBlocks_renderBlockFence($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    case 5:
        $tmp = nms_RenderBlocks_renderBlockLever($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $ptr);
}
function nms_RenderBlocks_renderBlockTorch($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7;
    $var5 = $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4);
    nms_Tessellator_$callClinit();
    $var6 = nms_Tessellator_instance;
    $var7 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var7 = 1.0;
    nms_Tessellator_setColorOpaque_F($var6, $var7, $var7, $var7);
    if ($var5 == 1)
        nms_RenderBlocks_renderTorchAtAngle($this, $var1, $var2 - 0.09999999403953552, $var3 + 0.20000000298023224, $var4, (-0.4000000059604645), 0.0);
    else if ($var5 == 2)
        nms_RenderBlocks_renderTorchAtAngle($this, $var1, $var2 + 0.09999999403953552, $var3 + 0.20000000298023224, $var4, 0.4000000059604645, 0.0);
    else if ($var5 == 3)
        nms_RenderBlocks_renderTorchAtAngle($this, $var1, $var2, $var3 + 0.20000000298023224, $var4 - 0.09999999403953552, 0.0, (-0.4000000059604645));
    else if ($var5 != 4)
        nms_RenderBlocks_renderTorchAtAngle($this, $var1, $var2, $var3, $var4, 0.0, 0.0);
    else
        nms_RenderBlocks_renderTorchAtAngle($this, $var1, $var2, $var3 + 0.20000000298023224, $var4 + 0.09999999403953552, 0.0, 0.4000000059604645);
    return 1;
}
function nms_RenderBlocks_renderBlockLever($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, var$10, $var13, $var14, $var15, $var16, $var17, $var18, $var19, $var20, $var21, $var25, $var29, var$22, var$23, var$24, var$25, $var30, $var26, $var27, $var28, var$30, var$31, var$32, $var12, var$34, var$35, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$35 = $thread.pop();var$34 = $thread.pop();$var12 = $thread.pop();var$32 = $thread.pop();var$31 = $thread.pop();var$30 = $thread.pop();$var28 = $thread.pop();$var27 = $thread.pop();$var26 = $thread.pop();$var30 = $thread.pop();var$25 = $thread.pop();var$24 = $thread.pop();var$23 = $thread.pop();var$22 = $thread.pop();$var29 = $thread.pop();$var25 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var16
        = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();var$10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4);
        $var6 = $var5 & 7;
        $var7 = ($var5 & 8) <= 0 ? 0 : 1;
        nms_Tessellator_$callClinit();
        $var8 = nms_Tessellator_instance;
        $var9 = $this.$overrideBlockTexture < 0 ? 0 : 1;
        if (!$var9) {
            nms_Block_$callClinit();
            $this.$overrideBlockTexture = nms_Block_cobblestone.$blockIndexInTexture;
        }
        var$10 = $rt_compare($var6, 5);
        if (!var$10)
            nms_Block_setBlockBounds($var1, 0.3125, 0.0, 0.25, 0.6875, 0.1875, 0.75);
        else if ($var6 == 6)
            nms_Block_setBlockBounds($var1, 0.25, 0.0, 0.3125, 0.75, 0.1875, 0.6875);
        else if ($var6 == 4)
            nms_Block_setBlockBounds($var1, 0.3125, 0.25, 0.8125, 0.6875, 0.75, 1.0);
        else if ($var6 == 3)
            nms_Block_setBlockBounds($var1, 0.3125, 0.25, 0.0, 0.6875, 0.75, 0.1875);
        else if ($var6 == 2)
            nms_Block_setBlockBounds($var1, 0.8125, 0.25, 0.3125, 1.0, 0.75, 0.6875);
        else if ($var6 == 1)
            nms_Block_setBlockBounds($var1, 0.0, 0.25, 0.3125, 0.1875, 0.75, 0.6875);
        $ptr = 1;
    case 1:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        if (!$var9)
            $this.$overrideBlockTexture = (-1);
        $var13 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
        if (nms_Block_lightValue.data[$var1.$blockID] > 0)
            $var13 = 1.0;
        nms_Tessellator_setColorOpaque_F($var8, $var13, $var13, $var13);
        $var14 = $var1.$getBlockTextureFromSide(0);
        if ($this.$overrideBlockTexture >= 0)
            $var14 = $this.$overrideBlockTexture;
        $var15 = ($var14 & 15) << 4;
        $var16 = $var14 & 240;
        $var13 = $var15;
        $var17 = $var13 / 256.0;
        $var18 = ($var13 + 15.989999771118164) / 256.0;
        $var13 = $var16;
        $var19 = $var13 / 256.0;
        $var20 = ($var13 + 15.989999771118164) / 256.0;
        $var21 = $rt_createArray(nms_Vec3D, 8).data;
        $var21[0] = nms_Vec3D_createVector((-0.0625), 0.0, (-0.0625));
        $var21[1] = nms_Vec3D_createVector(0.0625, 0.0, (-0.0625));
        $var21[2] = nms_Vec3D_createVector(0.0625, 0.0, 0.0625);
        $var21[3] = nms_Vec3D_createVector((-0.0625), 0.0, 0.0625);
        $var21[4] = nms_Vec3D_createVector((-0.0625), 0.625, (-0.0625));
        $var21[5] = nms_Vec3D_createVector(0.0625, 0.625, (-0.0625));
        $var21[6] = nms_Vec3D_createVector(0.0625, 0.625, 0.0625);
        $var21[7] = nms_Vec3D_createVector((-0.0625), 0.625, 0.0625);
        $var25 = 0;
        $var9 = $rt_compare($var6, 6);
        $var5 = $rt_compare($var6, 4);
        $var14 = $rt_compare($var6, 3);
        $var29 = $rt_compare($var6, 2);
        $var6 = $rt_compare($var6, 1);
        var$22 = $var2 + 0.5;
        $var13 = $var3;
        var$23 = $var13 + 0.5;
        var$24 = $var4 + 0.5;
        var$25 = $var13 + 0.125;
        while ($var25 < 8) {
            if (!$var7) {
                $var1 = $var21[$var25];
                $var1.$zCoord = $var1.$zCoord + 0.0625;
                nms_Vec3D_rotateAroundX($var21[$var25], (-0.6981317400932312));
            } else {
                $var1 = $var21[$var25];
                $var1.$zCoord = $var1.$zCoord - 0.0625;
                nms_Vec3D_rotateAroundX($var21[$var25], 0.6981317400932312);
            }
            if (!$var9)
                nms_Vec3D_rotateAroundY($var21[$var25], 1.5707963705062866);
            if (var$10 >= 0) {
                $var1 = $var21[$var25];
                $var1.$xCoord = $var1.$xCoord + var$22;
                $var1 = $var21[$var25];
                $var1.$yCoord = $var1.$yCoord + var$25;
                $var1 = $var21[$var25];
                $var1.$zCoord = $var1.$zCoord + var$24;
            } else {
                $var1 = $var21[$var25];
                $var1.$yCoord = $var1.$yCoord - 0.375;
                nms_Vec3D_rotateAroundX($var21[$var25], 1.5707963705062866);
                if (!$var5)
                    nms_Vec3D_rotateAroundY($var21[$var25], 0.0);
                if (!$var14)
                    nms_Vec3D_rotateAroundY($var21[$var25], 3.1415927410125732);
                if (!$var29)
                    nms_Vec3D_rotateAroundY($var21[$var25], 1.5707963705062866);
                if (!$var6)
                    nms_Vec3D_rotateAroundY($var21[$var25], (-1.5707963705062866));
                $var1 = $var21[$var25];
                $var1.$xCoord = $var1.$xCoord + var$22;
                $var1 = $var21[$var25];
                $var1.$yCoord = $var1.$yCoord + var$23;
                $var1 = $var21[$var25];
                $var1.$zCoord = $var1.$zCoord + var$24;
            }
            $var25 = $var25 + 1 | 0;
        }
        $var30 = null;
        $var26 = null;
        $var27 = null;
        $var28 = null;
        $var29 = 0;
        var$30 = ($var15 + 7 | 0) / 256.0;
        var$31 = (($var15 + 9 | 0) - 0.009999999776482582) / 256.0;
        var$32 = ($var16 + 6 | 0) / 256.0;
        $var12 = (($var16 + 8 | 0) - 0.009999999776482582) / 256.0;
        $var13 = (($var16 + 16 | 0) - 0.009999999776482582) / 256.0;
        while ($var29 < 6) {
            if (!$var29) {
                $var17 = var$30;
                $var18 = var$31;
                $var19 = var$32;
                $var20 = $var12;
            } else if ($var29 == 2) {
                $var17 = var$30;
                $var18 = var$31;
                $var19 = var$32;
                $var20 = $var13;
            }
            if (!$var29) {
                $var30 = $var21[0];
                $var26 = $var21[1];
                $var27 = $var21[2];
                $var28 = $var21[3];
            } else if ($var29 == 1) {
                $var30 = $var21[7];
                $var26 = $var21[6];
                $var27 = $var21[5];
                $var28 = $var21[4];
            } else if ($var29 == 2) {
                $var30 = $var21[1];
                $var26 = $var21[0];
                $var27 = $var21[4];
                $var28 = $var21[5];
            } else if ($var29 == 3) {
                $var30 = $var21[2];
                $var26 = $var21[1];
                $var27 = $var21[5];
                $var28 = $var21[6];
            } else if ($var29 == 4) {
                $var30 = $var21[3];
                $var26 = $var21[2];
                $var27 = $var21[6];
                $var28 = $var21[7];
            } else if ($var29 == 5) {
                $var30 = $var21[0];
                $var26 = $var21[3];
                $var27 = $var21[7];
                $var28 = $var21[4];
            }
            var$34 = $var30.$xCoord;
            var$22 = $var30.$yCoord;
            var$23 = $var30.$zCoord;
            var$25 = $var17;
            var$24 = $var20;
            nms_Tessellator_addVertexWithUV($var8, var$34, var$22, var$23, var$25, var$24);
            var$34 = $var26.$xCoord;
            var$22 = $var26.$yCoord;
            var$23 = $var26.$zCoord;
            var$35 = $var18;
            nms_Tessellator_addVertexWithUV($var8, var$34, var$22, var$23, var$35, var$24);
            var$34 = $var27.$xCoord;
            var$22 = $var27.$yCoord;
            var$23 = $var27.$zCoord;
            var$24 = $var19;
            nms_Tessellator_addVertexWithUV($var8, var$34, var$22, var$23, var$35, var$24);
            nms_Tessellator_addVertexWithUV($var8, $var28.$xCoord, $var28.$yCoord, $var28.$zCoord, var$25, var$24);
            $var29 = $var29 + 1 | 0;
        }
        return 1;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9, var$10, $var13, $var14, $var15, $var16, $var17, $var18, $var19, $var20, $var21, $var25, $var29, var$22, var$23, var$24, var$25, $var30, $var26, $var27, $var28, var$30, var$31, var$32, $var12, var$34, var$35, $ptr);
}
function nms_RenderBlocks_renderBlockFire($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, $var10, $var12, $var14, var$13, $var16, $var33, var$16, $var27, $var31, $var27_0, $var25, $var19, $var21, $var23, $var23_0, var$25, var$26, $var29, var$28, var$29, var$30, var$31, var$32, var$33;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1.$getBlockTextureFromSide(0);
    if ($this.$overrideBlockTexture >= 0)
        $var6 = $this.$overrideBlockTexture;
    $var7 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    nms_Tessellator_setColorOpaque_F($var5, $var7, $var7, $var7);
    $var8 = ($var6 & 15) << 4;
    $var9 = $var6 & 240;
    $var7 = $var8;
    $var10 = $var7 / 256.0;
    $var12 = ($var7 + 15.989999771118164) / 256.0;
    $var7 = $var9;
    $var14 = $var7 / 256.0;
    var$13 = $var7 + 15.989999771118164;
    $var16 = var$13 / 256.0;
    $var1 = $this.$blockAccess;
    $var6 = $var3 - 1 | 0;
    if (!$var1.$isBlockOpaqueCube($var2, $var6, $var4) && !nms_BlockFire_canBlockCatchFire(nms_Block_fire, $this.$blockAccess, $var2, $var6, $var4)) {
        if (((($var2 + $var3 | 0) + $var4 | 0) & 1) != 1) {
            $var33 = $var10;
            var$16 = $var12;
            $var27 = $var14;
            $var31 = $var16;
        } else {
            $var27 = ($var9 + 16 | 0) / 256.0;
            $var31 = (var$13 + 16.0) / 256.0;
            $var33 = $var10;
            var$16 = $var12;
        }
        if ((((($var2 / 2 | 0) + ($var3 / 2 | 0) | 0) + ($var4 / 2 | 0) | 0) & 1) != 1) {
            $var27_0 = $var33;
            $var33 = var$16;
            var$16 = $var27_0;
        }
        if (nms_BlockFire_canBlockCatchFire(nms_Block_fire, $this.$blockAccess, $var2 - 1 | 0, $var3, $var4)) {
            $var25 = $var2 + 0.20000000298023224;
            $var19 = $var3 + 1.399999976158142 + 0.0625;
            $var21 = $var4 + 1 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var25, $var19, $var21, $var33, $var27);
            $var23 = $var2 + 0 | 0;
            $var23_0 = ($var3 + 0 | 0) + 0.0625;
            nms_Tessellator_addVertexWithUV($var5, $var23, $var23_0, $var21, $var33, $var31);
            $var27_0 = $var4 + 0 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var23, $var23_0, $var27_0, var$16, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var25, $var19, $var27_0, var$16, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var25, $var19, $var27_0, var$16, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var23, $var23_0, $var27_0, var$16, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var23, $var23_0, $var21, $var33, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var25, $var19, $var21, $var33, $var27);
        }
        $var1 = nms_Block_fire;
        var$25 = $this.$blockAccess;
        $var8 = $var2 + 1 | 0;
        if (nms_BlockFire_canBlockCatchFire($var1, var$25, $var8, $var3, $var4)) {
            $var27_0 = $var8 - 0.20000000298023224;
            $var25 = $var3 + 1.399999976158142 + 0.0625;
            $var19 = $var4 + 0 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var25, $var19, var$16, $var27);
            $var21 = $var8 - 0 | 0;
            $var23 = ($var3 + 0 | 0) + 0.0625;
            nms_Tessellator_addVertexWithUV($var5, $var21, $var23, $var19, var$16, $var31);
            $var23_0 = $var4 + 1 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var21, $var23, $var23_0, $var33, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var25, $var23_0, $var33, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var25, $var23_0, $var33, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var21, $var23, $var23_0, $var33, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var21, $var23, $var19, var$16, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var25, $var19, var$16, $var27);
        }
        if (nms_BlockFire_canBlockCatchFire(nms_Block_fire, $this.$blockAccess, $var2, $var3, $var4 - 1 | 0)) {
            $var27_0 = $var2 + 0 | 0;
            $var25 = $var3 + 1.399999976158142 + 0.0625;
            $var19 = $var4 + 0.20000000298023224;
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var25, $var19, $var33, $var27);
            $var21 = ($var3 + 0 | 0) + 0.0625;
            $var23 = $var4 + 0 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var21, $var23, $var33, $var31);
            $var23_0 = $var8;
            nms_Tessellator_addVertexWithUV($var5, $var23_0, $var21, $var23, var$16, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var23_0, $var25, $var19, var$16, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var23_0, $var25, $var19, var$16, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var23_0, $var21, $var23, var$16, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var21, $var23, $var33, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var27_0, $var25, $var19, $var33, $var27);
        }
        $var1 = nms_Block_fire;
        var$25 = $this.$blockAccess;
        var$26 = $var4 + 1 | 0;
        if (nms_BlockFire_canBlockCatchFire($var1, var$25, $var2, $var3, var$26)) {
            $var21 = $var8;
            $var23 = $var3 + 1.399999976158142 + 0.0625;
            $var23_0 = var$26 - 0.20000000298023224;
            nms_Tessellator_addVertexWithUV($var5, $var21, $var23, $var23_0, var$16, $var27);
            $var27_0 = ($var3 + 0 | 0) + 0.0625;
            $var25 = var$26 - 0 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var21, $var27_0, $var25, var$16, $var31);
            $var19 = $var2 + 0 | 0;
            nms_Tessellator_addVertexWithUV($var5, $var19, $var27_0, $var25, $var33, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var19, $var23, $var23_0, $var33, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var19, $var23, $var23_0, $var33, $var27);
            nms_Tessellator_addVertexWithUV($var5, $var19, $var27_0, $var25, $var33, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var21, $var27_0, $var25, var$16, $var31);
            nms_Tessellator_addVertexWithUV($var5, $var21, $var23, $var23_0, var$16, $var27);
        }
        $var1 = nms_Block_fire;
        var$25 = $this.$blockAccess;
        $var3 = $var3 + 1 | 0;
        if (nms_BlockFire_canBlockCatchFire($var1, var$25, $var2, $var3, $var4)) {
            $var27_0 = $var2 + 0.5;
            $var21 = $var27_0 + 0.5;
            $var23 = $var27_0 - 0.5;
            $var27_0 = $var4 + 0.5;
            $var25 = $var27_0 + 0.5;
            $var27_0 = $var27_0 - 0.5;
            if ((($var2 + $var3 | 0) + $var4 | 0) & 1) {
                $var19 = $var2 + 0 | 0;
                $var21 = $var3 + (-0.20000000298023224);
                nms_Tessellator_addVertexWithUV($var5, $var19, $var21, $var25, $var12, $var14);
                $var23 = $var3 + 0 | 0;
                nms_Tessellator_addVertexWithUV($var5, $var19, $var23, $var27_0, $var12, $var16);
                $var23_0 = $var8;
                nms_Tessellator_addVertexWithUV($var5, $var23_0, $var23, $var27_0, $var10, $var16);
                nms_Tessellator_addVertexWithUV($var5, $var23_0, $var21, $var25, $var10, $var14);
                $var27 = ($var9 + 16 | 0) / 256.0;
                $var31 = (var$13 + 16.0) / 256.0;
                nms_Tessellator_addVertexWithUV($var5, $var23_0, $var21, $var27_0, $var12, $var27);
                nms_Tessellator_addVertexWithUV($var5, $var23_0, $var23, $var25, $var12, $var31);
                nms_Tessellator_addVertexWithUV($var5, $var19, $var23, $var25, $var10, $var31);
                nms_Tessellator_addVertexWithUV($var5, $var19, $var21, $var27_0, $var10, $var27);
            } else {
                $var23_0 = $var3 + (-0.20000000298023224);
                $var27 = $var4 + 0 | 0;
                nms_Tessellator_addVertexWithUV($var5, $var23, $var23_0, $var27, $var12, $var14);
                $var31 = $var3 + 0 | 0;
                nms_Tessellator_addVertexWithUV($var5, $var21, $var31, $var27, $var12, $var16);
                $var27_0 = var$26;
                nms_Tessellator_addVertexWithUV($var5, $var21, $var31, $var27_0, $var10, $var16);
                nms_Tessellator_addVertexWithUV($var5, $var23, $var23_0, $var27_0, $var10, $var14);
                $var25 = ($var9 + 16 | 0) / 256.0;
                $var19 = (var$13 + 16.0) / 256.0;
                nms_Tessellator_addVertexWithUV($var5, $var21, $var23_0, $var27_0, $var12, $var25);
                nms_Tessellator_addVertexWithUV($var5, $var23, $var31, $var27_0, $var12, $var19);
                nms_Tessellator_addVertexWithUV($var5, $var23, $var31, $var27, $var10, $var19);
                nms_Tessellator_addVertexWithUV($var5, $var21, $var23_0, $var27, $var10, $var25);
            }
        }
    } else {
        $var27_0 = $var2 + 0.5;
        $var19 = $var27_0 + 0.2;
        $var21 = $var27_0 - 0.2;
        $var23 = $var4 + 0.5;
        $var23_0 = $var23 + 0.2;
        $var25 = $var23 - 0.2;
        $var27 = $var27_0 - 0.3;
        $var29 = $var27_0 + 0.3;
        $var31 = $var23 - 0.3;
        $var33 = $var23 + 0.3;
        var$16 = $var3 + 1.399999976158142;
        var$28 = $var4 + 1 | 0;
        nms_Tessellator_addVertexWithUV($var5, $var27, var$16, var$28, $var12, $var14);
        var$29 = $var3 + 0 | 0;
        nms_Tessellator_addVertexWithUV($var5, $var19, var$29, var$28, $var12, $var16);
        var$30 = $var4 + 0 | 0;
        nms_Tessellator_addVertexWithUV($var5, $var19, var$29, var$30, $var10, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$16, var$30, $var10, $var14);
        nms_Tessellator_addVertexWithUV($var5, $var29, var$16, var$30, $var12, $var14);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$29, var$30, $var12, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$29, var$28, $var10, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var29, var$16, var$28, $var10, $var14);
        $var29 = ($var9 + 16 | 0) / 256.0;
        $var19 = (var$13 + 16.0) / 256.0;
        $var21 = $var2 + 1 | 0;
        nms_Tessellator_addVertexWithUV($var5, $var21, var$16, $var33, $var12, $var29);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$29, $var25, $var12, $var19);
        $var27 = $var2 + 0 | 0;
        nms_Tessellator_addVertexWithUV($var5, $var27, var$29, $var25, $var10, $var19);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$16, $var33, $var10, $var29);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$16, $var31, $var12, $var29);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$29, $var23_0, $var12, $var19);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$29, $var23_0, $var10, $var19);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$16, $var31, $var10, $var29);
        $var23_0 = $var27_0 - 0.5;
        $var31 = $var27_0 + 0.5;
        $var33 = $var23 - 0.5;
        var$31 = $var23 + 0.5;
        var$32 = $var27_0 - 0.4;
        var$33 = $var27_0 + 0.4;
        $var27_0 = $var23 - 0.4;
        $var25 = $var23 + 0.4;
        nms_Tessellator_addVertexWithUV($var5, var$32, var$16, var$30, $var10, $var29);
        nms_Tessellator_addVertexWithUV($var5, $var23_0, var$29, var$30, $var10, $var19);
        nms_Tessellator_addVertexWithUV($var5, $var23_0, var$29, var$28, $var12, $var19);
        nms_Tessellator_addVertexWithUV($var5, var$32, var$16, var$28, $var12, $var29);
        nms_Tessellator_addVertexWithUV($var5, var$33, var$16, var$28, $var10, $var29);
        nms_Tessellator_addVertexWithUV($var5, $var31, var$29, var$28, $var10, $var19);
        nms_Tessellator_addVertexWithUV($var5, $var31, var$29, var$30, $var12, $var19);
        nms_Tessellator_addVertexWithUV($var5, var$33, var$16, var$30, $var12, $var29);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$16, $var25, $var10, $var14);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$29, var$31, $var10, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$29, var$31, $var12, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$16, $var25, $var12, $var14);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$16, $var27_0, $var10, $var14);
        nms_Tessellator_addVertexWithUV($var5, $var21, var$29, $var33, $var10, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$29, $var33, $var12, $var16);
        nms_Tessellator_addVertexWithUV($var5, $var27, var$16, $var27_0, $var12, $var14);
    }
    return 1;
}
function nms_RenderBlocks_renderBlockRedstoneWire($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, $var18, $var10, $var12, $var14, $var16, $var20, $var21, var$17, $var22, var$19, $var23, var$21, $var25, $var26, $var27, $var28, $var29, var$27, var$28, var$29, var$30, var$31, $var24, var$33, var$34, var$35, var$36;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1.$getBlockTextureFromSideAndMetadata(1, $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4));
    if ($this.$overrideBlockTexture >= 0)
        $var6 = $this.$overrideBlockTexture;
    $var7 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    nms_Tessellator_setColorOpaque_F($var5, $var7, $var7, $var7);
    $var8 = ($var6 & 15) << 4;
    $var9 = $var6 & 240;
    $var18 = $var8;
    $var10 = $var18 / 256.0;
    $var12 = ($var18 + 15.989999771118164) / 256.0;
    $var18 = $var9;
    $var14 = $var18 / 256.0;
    $var16 = ($var18 + 15.989999771118164) / 256.0;
    $var1 = $this.$blockAccess;
    $var6 = $var2 - 1 | 0;
    $var20 = !nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var6, $var3, $var4) && !(!$this.$blockAccess.$isBlockOpaqueCube($var6, $var3, $var4) && nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var6, $var3 - 1 | 0, $var4)) ? 0 : 1;
    a: {
        b: {
            $var1 = $this.$blockAccess;
            $var9 = $var2 + 1 | 0;
            if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var9, $var3, $var4)) {
                if ($this.$blockAccess.$isBlockOpaqueCube($var9, $var3, $var4))
                    break b;
                if (!nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var9, $var3 - 1 | 0, $var4))
                    break b;
            }
            $var21 = 1;
            break a;
        }
        $var21 = 0;
    }
    c: {
        d: {
            $var1 = $this.$blockAccess;
            var$17 = $var4 - 1 | 0;
            if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, $var3, var$17)) {
                if ($this.$blockAccess.$isBlockOpaqueCube($var2, $var3, var$17))
                    break d;
                if (!nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var2, $var3 - 1 | 0, var$17))
                    break d;
            }
            $var22 = 1;
            break c;
        }
        $var22 = 0;
    }
    $var1 = $this.$blockAccess;
    var$19 = $var4 + 1 | 0;
    $var23 = !nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, $var3, var$19) && !(!$this.$blockAccess.$isBlockOpaqueCube($var2, $var3, var$19) && nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var2, $var3 - 1 | 0, var$19)) ? 0 : 1;
    $var1 = $this.$blockAccess;
    var$21 = $var3 + 1 | 0;
    if (!$var1.$isBlockOpaqueCube($var2, var$21, $var4)) {
        if ($this.$blockAccess.$isBlockOpaqueCube($var6, $var3, $var4) && nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var6, var$21, $var4))
            $var20 = 1;
        if ($this.$blockAccess.$isBlockOpaqueCube($var9, $var3, $var4) && nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var9, var$21, $var4))
            $var21 = 1;
        if ($this.$blockAccess.$isBlockOpaqueCube($var2, $var3, var$17) && nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var2, var$21, var$17))
            $var22 = 1;
        if ($this.$blockAccess.$isBlockOpaqueCube($var2, $var3, var$19) && nms_BlockRedstoneWire_isPowerProviderOrWire($this.$blockAccess, $var2, var$21, var$19))
            $var23 = 1;
    }
    $var25 = $var2 + 0 | 0;
    $var26 = $var9;
    $var27 = $var4 + 0 | 0;
    $var28 = var$19;
    $var29 = 0;
    if (!(!$var20 && !$var21) && !$var22 && !$var23)
        $var29 = 1;
    if (!(!$var22 && !$var23) && !$var21 && !$var20)
        $var29 = 2;
    if (!$var29) {
        var$27 = $var14;
        var$28 = $var16;
    } else {
        $var7 = $var8 + 16 | 0;
        $var10 = $var7 / 256.0;
        $var12 = ($var7 + 15.989999771118164) / 256.0;
        var$27 = $var14;
        var$28 = $var16;
    }
    if ($var29) {
        var$29 = $var25;
        var$30 = $var26;
        var$31 = $var27;
        $var24 = $var28;
    } else {
        if (!$var21 && !$var22 && !$var23 && !$var20) {
            var$29 = $var25;
            var$30 = $var26;
            var$31 = $var27;
            $var24 = $var28;
        } else {
            var$29 = !$var20 ? $var25 + 0.3125 : $var25;
            if (!$var20)
                $var10 = $var10 + 0.01953125;
            var$30 = !$var21 ? $var26 - 0.3125 : $var26;
            if (!$var21)
                $var12 = $var12 - 0.01953125;
            var$31 = !$var22 ? $var27 + 0.3125 : $var27;
            if (!$var22)
                var$27 = var$27 + 0.01953125;
            $var24 = !$var23 ? $var28 - 0.3125 : $var28;
            if (!$var23)
                var$28 = var$28 - 0.01953125;
        }
        var$33 = var$30 + 0.0;
        var$34 = $var3 + 0.03125;
        var$35 = $var24 + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$33, var$34, var$35, $var12, var$28);
        var$36 = var$31 - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$33, var$34, var$36, $var12, var$27);
        var$33 = var$29 - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$33, var$34, var$36, $var10, var$27);
        nms_Tessellator_addVertexWithUV($var5, var$33, var$34, var$35, $var10, var$28);
    }
    if ($var29 == 1) {
        var$34 = var$30 + 0.0;
        var$35 = $var3 + 0.03125;
        var$36 = $var24 + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$34, var$35, var$36, $var12, var$28);
        var$33 = var$31 - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$34, var$35, var$33, $var12, var$27);
        var$34 = var$29 - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$34, var$35, var$33, $var10, var$27);
        nms_Tessellator_addVertexWithUV($var5, var$34, var$35, var$36, $var10, var$28);
    }
    if ($var29 == 2) {
        var$35 = var$30 + 0.0;
        var$36 = $var3 + 0.03125;
        var$33 = $var24 + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$35, var$36, var$33, $var12, var$28);
        var$34 = var$31 - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$35, var$36, var$34, $var10, var$28);
        var$35 = var$29 - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$35, var$36, var$34, $var10, var$27);
        nms_Tessellator_addVertexWithUV($var5, var$35, var$36, var$33, $var12, var$27);
    }
    $var7 = $var8 + 16 | 0;
    var$33 = $var7 / 256.0;
    $var10 = ($var7 + 15.989999771118164) / 256.0;
    if (!$this.$blockAccess.$isBlockOpaqueCube($var2, var$21, $var4)) {
        if ($this.$blockAccess.$isBlockOpaqueCube($var6, $var3, $var4) && $this.$blockAccess.$getBlockId($var6, var$21, $var4) == nms_Block_redstoneWire.$blockID) {
            $var12 = $var2 + 0.03125;
            var$34 = var$21 + 0.0;
            var$35 = $var28 + 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, $var10, $var14);
            var$36 = ($var3 + 0 | 0) - 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, var$33, $var14);
            var$35 = $var27 - 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, var$33, $var16);
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, $var10, $var16);
        }
        if ($this.$blockAccess.$isBlockOpaqueCube($var9, $var3, $var4) && $this.$blockAccess.$getBlockId($var9, var$21, $var4) == nms_Block_redstoneWire.$blockID) {
            $var12 = $var26 - 0.03125;
            var$34 = ($var3 + 0 | 0) - 0.0;
            var$35 = $var28 + 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, var$33, $var16);
            var$36 = var$21 + 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, $var10, $var16);
            var$35 = $var27 - 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, $var10, $var14);
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, var$33, $var14);
        }
        if ($this.$blockAccess.$isBlockOpaqueCube($var2, $var3, var$17) && $this.$blockAccess.$getBlockId($var2, var$21, var$17) == nms_Block_redstoneWire.$blockID) {
            $var12 = $var26 + 0.0;
            var$34 = ($var3 + 0 | 0) - 0.0;
            var$35 = $var4 + 0.03125;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, var$33, $var16);
            var$36 = var$21 + 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, $var10, $var16);
            $var12 = $var25 - 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, $var10, $var14);
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, var$33, $var14);
        }
        if ($this.$blockAccess.$isBlockOpaqueCube($var2, $var3, var$19) && $this.$blockAccess.$getBlockId($var2, var$21, var$19) == nms_Block_redstoneWire.$blockID) {
            $var12 = $var26 + 0.0;
            var$34 = var$21 + 0.0;
            var$35 = $var28 - 0.03125;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$34, var$35, $var10, $var14);
            var$36 = ($var3 + 0 | 0) - 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var12, var$36, var$35, var$33, $var14);
            $var14 = $var25 - 0.0;
            nms_Tessellator_addVertexWithUV($var5, $var14, var$36, var$35, var$33, $var16);
            nms_Tessellator_addVertexWithUV($var5, $var14, var$34, var$35, $var10, $var16);
        }
    }
    return 1;
}
function nms_RenderBlocks_renderBlockMinecartTrack($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, $var10, $var19, $var11, $var13, $var15, $var17, $var20, $var22, $var24, $var25, $var28, var$21, var$22, var$23, var$24, var$25, var$26, var$27, var$28, var$29, var$30, var$31, var$32, var$33, var$34, var$35, var$36, var$37, var$38;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4);
    $var7 = $var1.$getBlockTextureFromSideAndMetadata(0, $var6);
    if ($this.$overrideBlockTexture >= 0)
        $var7 = $this.$overrideBlockTexture;
    $var8 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    nms_Tessellator_setColorOpaque_F($var5, $var8, $var8, $var8);
    $var9 = ($var7 & 15) << 4;
    $var10 = $var7 & 240;
    $var19 = $var9;
    $var11 = $var19 / 256.0;
    $var13 = ($var19 + 15.989999771118164) / 256.0;
    $var19 = $var10;
    $var15 = $var19 / 256.0;
    $var17 = ($var19 + 15.989999771118164) / 256.0;
    $var20 = $var2 + 1 | 0;
    $var22 = $var2 + 0 | 0;
    $var24 = $var4 + 0 | 0;
    $var25 = $var4 + 1 | 0;
    $var28 = $var3 + 0.0625;
    if ($var6 != 1 && $var6 != 2 && $var6 != 3 && $var6 != 7) {
        if ($var6 == 8) {
            var$21 = $var22;
            var$22 = $var20;
            var$23 = $var20;
            var$24 = $var25;
            $var19 = $var24;
            $var8 = $var24;
            var$25 = $var22;
            $var20 = var$22;
            $var22 = var$23;
            var$26 = $var25;
            $var24 = $var19;
            $var25 = $var8;
        } else if ($var6 != 9) {
            var$21 = $var20;
            $var8 = $var22;
            var$24 = $var24;
            $var19 = $var25;
            var$25 = $var20;
            $var20 = $var8;
            var$26 = $var24;
            $var24 = $var19;
        } else {
            var$21 = $var20;
            var$25 = $var22;
            $var8 = $var20;
            var$24 = $var25;
            var$26 = $var24;
            $var19 = $var24;
            $var20 = $var22;
            $var22 = $var8;
            $var24 = $var25;
            $var25 = $var19;
        }
    } else {
        var$21 = $var22;
        var$25 = $var20;
        var$24 = $var24;
        var$26 = $var25;
    }
    if ($var6 != 2 && $var6 != 4) {
        if ($var6 != 3 && $var6 != 5) {
            var$22 = $var28;
            $var8 = $var28;
            var$23 = $var28;
            $var19 = $var28;
            $var28 = $var8;
        } else {
            $var8 = $var28 + 1.0;
            var$22 = $var8;
            var$23 = $var28;
            $var19 = $var28;
            $var28 = $var8;
        }
    } else {
        $var19 = $var28 + 1.0;
        var$22 = $var28;
        var$23 = $var19;
    }
    var$27 = var$25;
    var$28 = var$23;
    var$29 = var$26;
    nms_Tessellator_addVertexWithUV($var5, var$27, var$28, var$29, $var13, $var15);
    var$30 = var$21;
    var$31 = var$22;
    var$32 = $var25;
    nms_Tessellator_addVertexWithUV($var5, var$30, var$31, var$32, $var13, $var17);
    var$33 = $var22;
    var$34 = $var28;
    var$35 = $var24;
    nms_Tessellator_addVertexWithUV($var5, var$33, var$34, var$35, $var11, $var17);
    var$36 = $var20;
    var$37 = $var19;
    var$38 = var$24;
    nms_Tessellator_addVertexWithUV($var5, var$36, var$37, var$38, $var11, $var15);
    nms_Tessellator_addVertexWithUV($var5, var$36, var$37, var$38, $var11, $var15);
    nms_Tessellator_addVertexWithUV($var5, var$33, var$34, var$35, $var11, $var17);
    nms_Tessellator_addVertexWithUV($var5, var$30, var$31, var$32, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var5, var$27, var$28, var$29, $var13, $var15);
    return 1;
}
function nms_RenderBlocks_renderBlockLadder($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, $var10, $var12, $var14, $var16, $var18, var$15, var$16, var$17, var$18;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1.$getBlockTextureFromSide(0);
    if ($this.$overrideBlockTexture >= 0)
        $var6 = $this.$overrideBlockTexture;
    $var7 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    nms_Tessellator_setColorOpaque_F($var5, $var7, $var7, $var7);
    $var8 = ($var6 & 15) << 4;
    $var9 = $var6 & 240;
    $var7 = $var8;
    $var10 = $var7 / 256.0;
    $var12 = ($var7 + 15.989999771118164) / 256.0;
    $var7 = $var9;
    $var14 = $var7 / 256.0;
    $var16 = ($var7 + 15.989999771118164) / 256.0;
    $var18 = $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4);
    if ($var18 == 5) {
        var$15 = $var2 + 0.05000000074505806;
        var$16 = ($var3 + 1 | 0) + 0.0;
        var$17 = ($var4 + 1 | 0) + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$15, var$16, var$17, $var10, $var14);
        var$18 = ($var3 + 0 | 0) - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$15, var$18, var$17, $var10, $var16);
        var$17 = ($var4 + 0 | 0) - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$15, var$18, var$17, $var12, $var16);
        nms_Tessellator_addVertexWithUV($var5, var$15, var$16, var$17, $var12, $var14);
    }
    if ($var18 == 4) {
        var$18 = ($var2 + 1 | 0) - 0.05000000074505806;
        var$15 = ($var3 + 0 | 0) - 0.0;
        var$17 = ($var4 + 1 | 0) + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$18, var$15, var$17, $var12, $var16);
        var$16 = ($var3 + 1 | 0) + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$18, var$16, var$17, $var12, $var14);
        var$17 = ($var4 + 0 | 0) - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$18, var$16, var$17, $var10, $var14);
        nms_Tessellator_addVertexWithUV($var5, var$18, var$15, var$17, $var10, $var16);
    }
    if ($var18 == 3) {
        var$15 = ($var2 + 1 | 0) + 0.0;
        var$16 = ($var3 + 0 | 0) - 0.0;
        var$17 = $var4 + 0.05000000074505806;
        nms_Tessellator_addVertexWithUV($var5, var$15, var$16, var$17, $var12, $var16);
        var$18 = ($var3 + 1 | 0) + 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$15, var$18, var$17, $var12, $var14);
        var$15 = ($var2 + 0 | 0) - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$15, var$18, var$17, $var10, $var14);
        nms_Tessellator_addVertexWithUV($var5, var$15, var$16, var$17, $var10, $var16);
    }
    if ($var18 == 2) {
        var$16 = ($var2 + 1 | 0) + 0.0;
        var$17 = ($var3 + 1 | 0) + 0.0;
        var$18 = ($var4 + 1 | 0) - 0.05000000074505806;
        nms_Tessellator_addVertexWithUV($var5, var$16, var$17, var$18, $var10, $var14);
        var$15 = ($var3 + 0 | 0) - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$16, var$15, var$18, $var10, $var16);
        var$16 = ($var2 + 0 | 0) - 0.0;
        nms_Tessellator_addVertexWithUV($var5, var$16, var$15, var$18, $var12, $var16);
        nms_Tessellator_addVertexWithUV($var5, var$16, var$17, var$18, $var12, $var14);
    }
    return 1;
}
function nms_RenderBlocks_renderBlockReed($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    nms_Tessellator_setColorOpaque_F($var5, $var6, $var6, $var6);
    nms_RenderBlocks_func_1239_a($this, $var1, $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4), $var2, $var3, $var4);
    return 1;
}
function nms_RenderBlocks_renderBlockCrops($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    nms_Tessellator_setColorOpaque_F($var5, $var6, $var6, $var6);
    nms_RenderBlocks_func_1245_b($this, $var1, $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4), $var2, $var3 - 0.0625, $var4);
    return 1;
}
function nms_RenderBlocks_renderTorchAtAngle($this, $var1, $var2, $var4, $var6, $var8, $var10) {
    var $var12, $var13, $var14, $var15, $var17, $var16, $var19, $var18, var$15, $var20, var$17, $var22, $var24, $var26, $var28, $var30, $var32, $var34, var$25, var$26, var$27, $var38, var$29;
    nms_Tessellator_$callClinit();
    $var12 = nms_Tessellator_instance;
    $var13 = $var1.$getBlockTextureFromSide(0);
    if ($this.$overrideBlockTexture >= 0)
        $var13 = $this.$overrideBlockTexture;
    $var14 = ($var13 & 15) << 4;
    $var15 = $var13 & 240;
    $var17 = $var14;
    $var16 = $var17 / 256.0;
    $var17 = ($var17 + 15.989999771118164) / 256.0;
    $var19 = $var15;
    $var18 = $var19 / 256.0;
    $var19 = ($var19 + 15.989999771118164) / 256.0;
    var$15 = $var16;
    $var20 = var$15 + 0.02734375;
    var$17 = $var18;
    $var22 = var$17 + 0.0234375;
    $var24 = var$15 + 0.03515625;
    $var26 = var$17 + 0.03125;
    $var2 = $var2 + 0.5;
    $var6 = $var6 + 0.5;
    $var28 = $var2 - 0.5;
    $var30 = $var2 + 0.5;
    $var32 = $var6 - 0.5;
    $var34 = $var6 + 0.5;
    var$25 = $var2 + $var8 * 0.375;
    var$26 = var$25 - 0.0625;
    var$27 = $var4 + 0.625;
    $var38 = $var6 + $var10 * 0.375;
    var$29 = $var38 - 0.0625;
    nms_Tessellator_addVertexWithUV($var12, var$26, var$27, var$29, $var20, $var22);
    $var38 = $var38 + 0.0625;
    nms_Tessellator_addVertexWithUV($var12, var$26, var$27, $var38, $var20, $var26);
    $var20 = var$25 + 0.0625;
    nms_Tessellator_addVertexWithUV($var12, $var20, var$27, $var38, $var24, $var26);
    nms_Tessellator_addVertexWithUV($var12, $var20, var$27, var$29, $var24, $var22);
    $var26 = $var2 - 0.0625;
    $var38 = $var4 + 1.0;
    nms_Tessellator_addVertexWithUV($var12, $var26, $var38, $var32, var$15, var$17);
    $var20 = $var26 + $var8;
    $var4 = $var4 + 0.0;
    $var24 = $var32 + $var10;
    var$29 = $var19;
    nms_Tessellator_addVertexWithUV($var12, $var20, $var4, $var24, var$15, var$29);
    $var22 = $var34 + $var10;
    var$25 = $var17;
    nms_Tessellator_addVertexWithUV($var12, $var20, $var4, $var22, var$25, var$29);
    nms_Tessellator_addVertexWithUV($var12, $var26, $var38, $var34, var$25, var$17);
    $var26 = $var2 + 0.0625;
    nms_Tessellator_addVertexWithUV($var12, $var26, $var38, $var34, var$15, var$17);
    $var2 = $var2 + $var8 + 0.0625;
    nms_Tessellator_addVertexWithUV($var12, $var2, $var4, $var22, var$15, var$29);
    nms_Tessellator_addVertexWithUV($var12, $var2, $var4, $var24, var$25, var$29);
    nms_Tessellator_addVertexWithUV($var12, $var26, $var38, $var32, var$25, var$17);
    $var2 = $var6 + 0.0625;
    nms_Tessellator_addVertexWithUV($var12, $var28, $var38, $var2, var$15, var$17);
    $var26 = $var28 + $var8;
    $var20 = $var2 + $var10;
    nms_Tessellator_addVertexWithUV($var12, $var26, $var4, $var20, var$15, var$29);
    $var8 = $var30 + $var8;
    nms_Tessellator_addVertexWithUV($var12, $var8, $var4, $var20, var$25, var$29);
    nms_Tessellator_addVertexWithUV($var12, $var30, $var38, $var2, var$25, var$17);
    $var2 = $var6 - 0.0625;
    nms_Tessellator_addVertexWithUV($var12, $var30, $var38, $var2, var$15, var$17);
    $var6 = $var2 + $var10;
    nms_Tessellator_addVertexWithUV($var12, $var8, $var4, $var6, var$15, var$29);
    nms_Tessellator_addVertexWithUV($var12, $var26, $var4, $var6, var$25, var$29);
    nms_Tessellator_addVertexWithUV($var12, $var28, $var38, $var2, var$25, var$17);
}
function nms_RenderBlocks_func_1239_a($this, $var1, $var2, $var3, $var5, $var7) {
    var $var9, $var10, $var11, $var12, var$10, $var13, $var15, $var17, $var19, $var21, $var23, $var25, $var27;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    $var10 = $var1.$getBlockTextureFromSideAndMetadata(0, $var2);
    if ($this.$overrideBlockTexture >= 0)
        $var10 = $this.$overrideBlockTexture;
    $var11 = ($var10 & 15) << 4;
    $var12 = $var10 & 240;
    var$10 = $var11;
    $var13 = var$10 / 256.0;
    $var15 = (var$10 + 15.989999771118164) / 256.0;
    var$10 = $var12;
    $var17 = var$10 / 256.0;
    $var19 = (var$10 + 15.989999771118164) / 256.0;
    $var3 = $var3 + 0.5;
    $var21 = $var3 - 0.44999998807907104;
    $var23 = $var3 + 0.44999998807907104;
    $var3 = $var7 + 0.5;
    $var25 = $var3 - 0.44999998807907104;
    $var27 = $var3 + 0.44999998807907104;
    $var3 = $var5 + 1.0;
    nms_Tessellator_addVertexWithUV($var9, $var21, $var3, $var25, $var13, $var17);
    $var5 = $var5 + 0.0;
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var25, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var27, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var3, $var27, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var3, $var27, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var27, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var25, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var3, $var25, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var3, $var27, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var27, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var25, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var3, $var25, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var3, $var25, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var25, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var27, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var3, $var27, $var15, $var17);
}
function nms_RenderBlocks_func_1245_b($this, $var1, $var2, $var3, $var5, $var7) {
    var $var9, $var10, $var11, $var12, var$10, $var13, $var15, $var17, $var19, $var21, $var23, $var25, $var27, var$19;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    $var10 = $var1.$getBlockTextureFromSideAndMetadata(0, $var2);
    if ($this.$overrideBlockTexture >= 0)
        $var10 = $this.$overrideBlockTexture;
    $var11 = ($var10 & 15) << 4;
    $var12 = $var10 & 240;
    var$10 = $var11;
    $var13 = var$10 / 256.0;
    $var15 = (var$10 + 15.989999771118164) / 256.0;
    var$10 = $var12;
    $var17 = var$10 / 256.0;
    $var19 = (var$10 + 15.989999771118164) / 256.0;
    $var3 = $var3 + 0.5;
    $var21 = $var3 - 0.25;
    $var23 = $var3 + 0.25;
    $var7 = $var7 + 0.5;
    $var25 = $var7 - 0.5;
    $var27 = $var7 + 0.5;
    var$19 = $var5 + 1.0;
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var25, $var13, $var17);
    $var5 = $var5 + 0.0;
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var25, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var27, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var27, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var27, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var27, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var25, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var25, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, var$19, $var27, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var27, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var25, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, var$19, $var25, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, var$19, $var25, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var25, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, $var5, $var27, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var23, var$19, $var27, $var15, $var17);
    $var21 = $var3 - 0.5;
    $var3 = $var3 + 0.5;
    $var23 = $var7 - 0.25;
    $var7 = $var7 + 0.25;
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var23, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var23, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var3, $var5, $var23, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var3, var$19, $var23, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var3, var$19, $var23, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var3, $var5, $var23, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var23, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var23, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var3, var$19, $var7, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var3, $var5, $var7, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var7, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var7, $var15, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, var$19, $var7, $var13, $var17);
    nms_Tessellator_addVertexWithUV($var9, $var21, $var5, $var7, $var13, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var3, $var5, $var7, $var15, $var19);
    nms_Tessellator_addVertexWithUV($var9, $var3, var$19, $var7, $var15, $var17);
}
function nms_RenderBlocks_renderBlockFluids($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, var$7, $var24, $var7, $var8, var$11, var$12, var$13, $var50, $var9, $var18, $var19, $var20, $var21, $var22, $var23, $var24_0, $var25, $var26, $var27, $var28, $var30, $var32, $var33, var$30, $var37, $var41, var$33, var$34, $var45, var$36, $var39, $var43, var$39, $var33_0, $var33_1, $var34, $var34_0, $var29, $var51, $var48, $var10, $var36, $var47;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3 + 1 | 0, $var4, 1);
    var$7 = $this.$blockAccess;
    $var24 = $var3 - 1 | 0;
    $var7 = $var1.$shouldSideBeRendered(var$7, $var2, $var24, $var4, 0);
    $var8 = $rt_createBooleanArray(4).data;
    var$7 = $this.$blockAccess;
    var$11 = $var4 - 1 | 0;
    $var8[0] = $var1.$shouldSideBeRendered(var$7, $var2, $var3, var$11, 2);
    var$7 = $this.$blockAccess;
    var$12 = $var4 + 1 | 0;
    $var8[1] = $var1.$shouldSideBeRendered(var$7, $var2, $var3, var$12, 3);
    var$7 = $this.$blockAccess;
    var$13 = $var2 - 1 | 0;
    $var8[2] = $var1.$shouldSideBeRendered(var$7, var$13, $var3, $var4, 4);
    var$7 = $this.$blockAccess;
    $var50 = $var2 + 1 | 0;
    $var8[3] = $var1.$shouldSideBeRendered(var$7, $var50, $var3, $var4, 5);
    if (!$var6 && !$var7 && !$var8[0] && !$var8[1] && !$var8[2] && !$var8[3])
        return 0;
    $var9 = 0;
    $var18 = $var1.$blockMaterial;
    $var19 = $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4);
    $var20 = nms_RenderBlocks_func_1224_a($this, $var2, $var3, $var4, $var18);
    $var21 = nms_RenderBlocks_func_1224_a($this, $var2, $var3, var$12, $var18);
    $var22 = nms_RenderBlocks_func_1224_a($this, $var50, $var3, var$12, $var18);
    $var23 = nms_RenderBlocks_func_1224_a($this, $var50, $var3, $var4, $var18);
    if (!(!$this.$renderAllFaces && !$var6)) {
        $var9 = 1;
        $var24_0 = $var1.$getBlockTextureFromSideAndMetadata(1, $var19);
        $var25 = nms_BlockFluids_func_293_a($this.$blockAccess, $var2, $var3, $var4, $var18);
        $var6 = $rt_compare($var25, (-999.0));
        if ($var6 > 0)
            $var24_0 = $var1.$getBlockTextureFromSideAndMetadata(2, $var19);
        $var26 = ($var24_0 & 15) << 4;
        $var27 = $var24_0 & 240;
        $var28 = ($var26 + 8.0) / 256.0;
        $var30 = ($var27 + 8.0) / 256.0;
        if ($var6 < 0)
            $var25 = 0.0;
        else {
            $var28 = ($var26 + 16 | 0) / 256.0;
            $var30 = ($var27 + 16 | 0) / 256.0;
        }
        $var32 = nms_MathHelper_sin($var25) * 8.0 / 256.0;
        $var33 = nms_MathHelper_cos($var25) * 8.0 / 256.0;
        $var25 = 1.0 * $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
        nms_Tessellator_setColorOpaque_F($var5, $var25, $var25, $var25);
        var$30 = $var2 + 0 | 0;
        $var25 = $var3;
        $var37 = $var25 + $var20;
        $var41 = $var4 + 0 | 0;
        var$33 = $var33;
        var$34 = $var28 - var$33;
        $var45 = $var32;
        var$36 = var$34 - $var45;
        $var39 = $var30 - var$33;
        nms_Tessellator_addVertexWithUV($var5, var$30, $var37, $var41, var$36, $var39 + $var45);
        var$36 = $var25 + $var21;
        $var43 = var$12;
        var$34 = var$34 + $var45;
        $var37 = $var30 + var$33;
        nms_Tessellator_addVertexWithUV($var5, var$30, var$36, $var43, var$34, $var37 + $var45);
        var$30 = $var50;
        var$34 = $var25 + $var22;
        $var28 = $var28 + var$33;
        nms_Tessellator_addVertexWithUV($var5, var$30, var$34, $var43, $var28 + $var45, $var37 - $var45);
        nms_Tessellator_addVertexWithUV($var5, var$30, $var25 + $var23, $var41, $var28 - $var45, $var39 - $var45);
    }
    if (!(!$this.$renderAllFaces && !$var7)) {
        $var25 = 0.5 * $var1.$getBlockBrightness($this.$blockAccess, $var2, $var24, $var4);
        nms_Tessellator_setColorOpaque_F($var5, $var25, $var25, $var25);
        nms_RenderBlocks_renderBottomFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTextureFromSide(0));
        $var9 = 1;
    }
    $var24 = 0;
    var$39 = $var3;
    var$34 = $var3 + 0 | 0;
    $var33_0 = $var2;
    $var33_1 = $var50;
    $var34 = $var4;
    $var34_0 = var$12;
    while ($var24 < 4) {
        $var6 = !$var24 ? var$11 : $var4;
        $var26 = $rt_compare($var24, 1);
        if (!$var26)
            $var6 = $var6 + 1 | 0;
        $var27 = $rt_compare($var24, 2);
        var$12 = !$var27 ? var$13 : $var2;
        if ($var24 == 3)
            var$12 = var$12 + 1 | 0;
        $var50 = $var1.$getBlockTextureFromSideAndMetadata($var24 + 2 | 0, $var19);
        $var29 = ($var50 & 15) << 4;
        $var51 = $var50 & 240;
        if (!(!$this.$renderAllFaces && !$var8[$var24])) {
            if (!$var24) {
                $var25 = $var20;
                $var32 = $var23;
                $var33 = $var33_0;
                $var48 = $var33_1;
                $var10 = $var34;
                $var36 = $var34;
            } else if (!$var26) {
                $var25 = $var22;
                $var32 = $var21;
                $var33 = $var33_1;
                $var48 = $var33_0;
                $var10 = $var34_0;
                $var36 = $var34_0;
            } else if ($var27) {
                $var25 = $var23;
                $var32 = $var22;
                $var33 = $var33_1;
                $var48 = $var33_1;
                $var10 = $var34;
                $var36 = $var34_0;
            } else {
                $var25 = $var21;
                $var32 = $var20;
                $var33 = $var33_0;
                $var48 = $var33_0;
                $var10 = $var34_0;
                $var36 = $var34;
            }
            $var9 = 1;
            $var37 = ($var29 + 0 | 0) / 256.0;
            $var39 = (($var29 + 16 | 0) - 0.01) / 256.0;
            $var47 = $var51;
            $var41 = ($var47 + (1.0 - $var25) * 16.0) / 256.0;
            $var43 = ($var47 + (1.0 - $var32) * 16.0) / 256.0;
            $var45 = (($var51 + 16 | 0) - 0.01) / 256.0;
            $var47 = $var1.$getBlockBrightness($this.$blockAccess, var$12, $var3, $var6);
            $var47 = 1.0 * ($var27 >= 0 ? $var47 * 0.6000000238418579 : $var47 * 0.800000011920929);
            nms_Tessellator_setColorOpaque_F($var5, $var47, $var47, $var47);
            var$36 = $var33;
            $var28 = var$39 + $var25;
            var$30 = $var10;
            nms_Tessellator_addVertexWithUV($var5, var$36, $var28, var$30, $var37, $var41);
            $var28 = $var48;
            $var41 = var$39 + $var32;
            var$33 = $var36;
            nms_Tessellator_addVertexWithUV($var5, $var28, $var41, var$33, $var39, $var43);
            nms_Tessellator_addVertexWithUV($var5, $var28, var$34, var$33, $var39, $var45);
            nms_Tessellator_addVertexWithUV($var5, var$36, var$34, var$30, $var37, $var45);
        }
        $var24 = $var24 + 1 | 0;
    }
    $var1.$minY = 0.0;
    $var1.$maxY = 1.0;
    return $var9;
}
function nms_RenderBlocks_func_1224_a($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, var$8, $var8, $var10, $var11, $var12;
    $var5 = 0;
    $var6 = 0.0;
    $var7 = 0;
    var$8 = $var2 + 1 | 0;
    while (true) {
        if ($var7 >= 4)
            return 1.0 - $var6 / $var5;
        $var8 = $var1 - ($var7 & 1) | 0;
        $var10 = $var3 - ($var7 >> 1 & 1) | 0;
        if ($this.$blockAccess.$getBlockMaterial($var8, var$8, $var10) === $var4)
            break;
        $var11 = $this.$blockAccess.$getBlockMaterial($var8, $var2, $var10);
        if ($var11 === $var4) {
            $var12 = $this.$blockAccess.$getBlockMetadata($var8, $var2, $var10);
            if (!($var12 < 8 && $var12)) {
                $var6 = $var6 + nms_BlockFluids_func_288_b($var12) * 10.0;
                $var5 = $var5 + 10 | 0;
            }
            $var6 = $var6 + nms_BlockFluids_func_288_b($var12);
            $var5 = $var5 + 1 | 0;
        } else if (!$var11.$func_878_a()) {
            $var6 = $var6 + 1.0;
            $var5 = $var5 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
    return 1.0;
}
function nms_RenderBlocks_func_1243_a($this, $var1, $var2, $var3, $var4, $var5) {
    var $var10, $var11, $var12, $var7;
    nms_Tessellator_$callClinit();
    $var10 = nms_Tessellator_instance;
    nms_Tessellator_startDrawingQuads($var10);
    $var11 = $var1.$getBlockBrightness($var2, $var3, $var4, $var5);
    $var12 = $var1.$getBlockBrightness($var2, $var3, $var4 - 1 | 0, $var5);
    if ($var12 < $var11)
        $var12 = $var11;
    $var12 = 0.5 * $var12;
    nms_Tessellator_setColorOpaque_F($var10, $var12, $var12, $var12);
    nms_RenderBlocks_renderBottomFace($this, $var1, (-0.5), (-0.5), (-0.5), $var1.$getBlockTextureFromSide(0));
    $var12 = $var1.$getBlockBrightness($var2, $var3, $var4 + 1 | 0, $var5);
    if ($var12 < $var11)
        $var12 = $var11;
    $var7 = 1.0 * $var12;
    nms_Tessellator_setColorOpaque_F($var10, $var7, $var7, $var7);
    nms_RenderBlocks_renderTopFace($this, $var1, (-0.5), (-0.5), (-0.5), $var1.$getBlockTextureFromSide(1));
    $var7 = $var1.$getBlockBrightness($var2, $var3, $var4, $var5 - 1 | 0);
    if ($var7 < $var11)
        $var7 = $var11;
    $var7 = 0.800000011920929 * $var7;
    nms_Tessellator_setColorOpaque_F($var10, $var7, $var7, $var7);
    nms_RenderBlocks_renderEastFace($this, $var1, (-0.5), (-0.5), (-0.5), $var1.$getBlockTextureFromSide(2));
    $var7 = $var1.$getBlockBrightness($var2, $var3, $var4, $var5 + 1 | 0);
    if ($var7 < $var11)
        $var7 = $var11;
    $var7 = 0.800000011920929 * $var7;
    nms_Tessellator_setColorOpaque_F($var10, $var7, $var7, $var7);
    nms_RenderBlocks_renderWestFace($this, $var1, (-0.5), (-0.5), (-0.5), $var1.$getBlockTextureFromSide(3));
    $var7 = $var1.$getBlockBrightness($var2, $var3 - 1 | 0, $var4, $var5);
    if ($var7 < $var11)
        $var7 = $var11;
    $var7 = 0.6000000238418579 * $var7;
    nms_Tessellator_setColorOpaque_F($var10, $var7, $var7, $var7);
    nms_RenderBlocks_renderNorthFace($this, $var1, (-0.5), (-0.5), (-0.5), $var1.$getBlockTextureFromSide(4));
    $var7 = $var1.$getBlockBrightness($var2, $var3 + 1 | 0, $var4, $var5);
    if ($var7 >= $var11)
        $var11 = $var7;
    $var7 = 0.6000000238418579 * $var11;
    nms_Tessellator_setColorOpaque_F($var10, $var7, $var7, $var7);
    nms_RenderBlocks_renderSouthFace($this, $var1, (-0.5), (-0.5), (-0.5), $var1.$getBlockTextureFromSide(5));
    nms_Tessellator_draw($var10);
}
function nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4) {
    var var$5, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();var$5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$5 = $this.$blockAccess;
        $ptr = 1;
    case 1:
        $tmp = $var1.$colorMultiplier(var$5, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var5 = $tmp;
        return nms_RenderBlocks_renderStandardBlockWithColorMultiplier($this, $var1, $var2, $var3, $var4, ($var5 >> 16 & 255) / 255.0, ($var5 >> 8 & 255) / 255.0, ($var5 & 255) / 255.0);
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, var$5, $var5, $ptr);
}
function nms_RenderBlocks_renderStandardBlockWithColorMultiplier($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var14, $var15, $var16, $var17, $var18, $var19, $var20, $var21, $var22, $var23, $var24, $var25, $var26, $var27;
    nms_Tessellator_$callClinit();
    $var8 = nms_Tessellator_instance;
    $var9 = 0;
    $var14 = 1.0 * $var5;
    $var15 = 1.0 * $var6;
    $var16 = 1.0 * $var7;
    nms_Block_$callClinit();
    if ($var1 === nms_Block_grass) {
        $var5 = 1.0;
        $var7 = $var5;
        $var6 = $var5;
    }
    $var17 = 0.5 * $var5;
    $var18 = 0.800000011920929 * $var5;
    $var19 = 0.6000000238418579 * $var5;
    $var20 = 0.5 * $var6;
    $var21 = 0.800000011920929 * $var6;
    $var22 = 0.6000000238418579 * $var6;
    $var23 = 0.5 * $var7;
    $var24 = 0.800000011920929 * $var7;
    $var25 = 0.6000000238418579 * $var7;
    $var26 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3 - 1 | 0, $var4, 0))) {
        $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3 - 1 | 0, $var4);
        nms_Tessellator_setColorOpaque_F($var8, $var17 * $var27, $var20 * $var27, $var23 * $var27);
        nms_RenderBlocks_renderBottomFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 0));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3 + 1 | 0, $var4, 1))) {
        $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3 + 1 | 0, $var4);
        if ($var1.$maxY !== 1.0 && !$var1.$blockMaterial.$getIsLiquid())
            $var27 = $var26;
        nms_Tessellator_setColorOpaque_F($var8, $var14 * $var27, $var15 * $var27, $var16 * $var27);
        nms_RenderBlocks_renderTopFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 1));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3, $var4 - 1 | 0, 2))) {
        $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4 - 1 | 0);
        if ($var1.$minZ > 0.0)
            $var27 = $var26;
        nms_Tessellator_setColorOpaque_F($var8, $var18 * $var27, $var21 * $var27, $var24 * $var27);
        nms_RenderBlocks_renderEastFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 2));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3, $var4 + 1 | 0, 3))) {
        $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4 + 1 | 0);
        if ($var1.$maxZ < 1.0)
            $var27 = $var26;
        nms_Tessellator_setColorOpaque_F($var8, $var18 * $var27, $var21 * $var27, $var24 * $var27);
        nms_RenderBlocks_renderWestFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 3));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2 - 1 | 0, $var3, $var4, 4))) {
        $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2 - 1 | 0, $var3, $var4);
        if ($var1.$field_370_bf > 0.0)
            $var27 = $var26;
        nms_Tessellator_setColorOpaque_F($var8, $var19 * $var27, $var22 * $var27, $var25 * $var27);
        nms_RenderBlocks_renderNorthFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 4));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2 + 1 | 0, $var3, $var4, 5))) {
        $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2 + 1 | 0, $var3, $var4);
        if ($var1.$maxX >= 1.0)
            $var26 = $var27;
        nms_Tessellator_setColorOpaque_F($var8, $var19 * $var26, $var22 * $var26, $var25 * $var26);
        nms_RenderBlocks_renderSouthFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 5));
        $var9 = 1;
    }
    return $var9;
}
function nms_RenderBlocks_renderBlockCactus($this, $var1, $var2, $var3, $var4) {
    var var$5, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();var$5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$5 = $this.$blockAccess;
        $ptr = 1;
    case 1:
        $tmp = $var1.$colorMultiplier(var$5, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var5 = $tmp;
        return nms_RenderBlocks_func_1230_b($this, $var1, $var2, $var3, $var4, ($var5 >> 16 & 255) / 255.0, ($var5 >> 8 & 255) / 255.0, ($var5 & 255) / 255.0);
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, var$5, $var5, $ptr);
}
function nms_RenderBlocks_func_1230_b($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var14, $var15, $var16, $var17, $var18, $var19, $var20, $var21, $var22, $var23, $var24, $var25, $var27, $var28;
    nms_Tessellator_$callClinit();
    $var8 = nms_Tessellator_instance;
    $var9 = 0;
    $var14 = 0.5 * $var5;
    $var15 = 1.0 * $var5;
    $var16 = 0.800000011920929 * $var5;
    $var17 = 0.6000000238418579 * $var5;
    $var18 = 0.5 * $var6;
    $var19 = 1.0 * $var6;
    $var20 = 0.800000011920929 * $var6;
    $var21 = 0.6000000238418579 * $var6;
    $var22 = 0.5 * $var7;
    $var23 = 1.0 * $var7;
    $var24 = 0.800000011920929 * $var7;
    $var25 = 0.6000000238418579 * $var7;
    $var27 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3 - 1 | 0, $var4, 0))) {
        $var28 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3 - 1 | 0, $var4);
        nms_Tessellator_setColorOpaque_F($var8, $var14 * $var28, $var18 * $var28, $var22 * $var28);
        nms_RenderBlocks_renderBottomFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 0));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3 + 1 | 0, $var4, 1))) {
        $var28 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3 + 1 | 0, $var4);
        if ($var1.$maxY !== 1.0 && !$var1.$blockMaterial.$getIsLiquid())
            $var28 = $var27;
        nms_Tessellator_setColorOpaque_F($var8, $var15 * $var28, $var19 * $var28, $var23 * $var28);
        nms_RenderBlocks_renderTopFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 1));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3, $var4 - 1 | 0, 2))) {
        $var28 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4 - 1 | 0);
        if ($var1.$minZ > 0.0)
            $var28 = $var27;
        nms_Tessellator_setColorOpaque_F($var8, $var16 * $var28, $var20 * $var28, $var24 * $var28);
        nms_Tessellator_setTranslationF($var8, 0.0, 0.0, 0.0625);
        nms_RenderBlocks_renderEastFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 2));
        nms_Tessellator_setTranslationF($var8, 0.0, 0.0, (-0.0625));
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2, $var3, $var4 + 1 | 0, 3))) {
        $var28 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4 + 1 | 0);
        if ($var1.$maxZ < 1.0)
            $var28 = $var27;
        nms_Tessellator_setColorOpaque_F($var8, $var16 * $var28, $var20 * $var28, $var24 * $var28);
        nms_Tessellator_setTranslationF($var8, 0.0, 0.0, (-0.0625));
        nms_RenderBlocks_renderWestFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 3));
        nms_Tessellator_setTranslationF($var8, 0.0, 0.0, 0.0625);
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2 - 1 | 0, $var3, $var4, 4))) {
        $var28 = $var1.$getBlockBrightness($this.$blockAccess, $var2 - 1 | 0, $var3, $var4);
        if ($var1.$field_370_bf > 0.0)
            $var28 = $var27;
        nms_Tessellator_setColorOpaque_F($var8, $var17 * $var28, $var21 * $var28, $var25 * $var28);
        nms_Tessellator_setTranslationF($var8, 0.0625, 0.0, 0.0);
        nms_RenderBlocks_renderNorthFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 4));
        nms_Tessellator_setTranslationF($var8, (-0.0625), 0.0, 0.0);
        $var9 = 1;
    }
    if (!(!$this.$renderAllFaces && !$var1.$shouldSideBeRendered($this.$blockAccess, $var2 + 1 | 0, $var3, $var4, 5))) {
        $var28 = $var1.$getBlockBrightness($this.$blockAccess, $var2 + 1 | 0, $var3, $var4);
        if ($var1.$maxX >= 1.0)
            $var27 = $var28;
        nms_Tessellator_setColorOpaque_F($var8, $var17 * $var27, $var21 * $var27, $var25 * $var27);
        nms_Tessellator_setTranslationF($var8, (-0.0625), 0.0, 0.0);
        nms_RenderBlocks_renderSouthFace($this, $var1, $var2, $var3, $var4, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 5));
        nms_Tessellator_setTranslationF($var8, 0.0625, 0.0, 0.0);
        $var9 = 1;
    }
    return $var9;
}
function nms_RenderBlocks_renderBlockFence($this, $var1, $var2, $var3, $var4) {
    var $var5, $var8, $var9, var$8, $var11, $var12, $var10, $var13, $var6, $var7, $var14, $var15, $var16, $var17, $var18, $var19, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var16 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var13 = $thread.pop();$var10 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();var$8 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = 0;
        nms_Block_setBlockBounds($var1, 0.375, 0.0, 0.375, 0.625, 1.0, 0.625);
        $ptr = 1;
    case 1:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var8 = 0;
        $var9 = 0;
        var$8 = $this.$blockAccess;
        $var11 = $var2 - 1 | 0;
        if (!(var$8.$getBlockId($var11, $var3, $var4) != $var1.$blockID && $this.$blockAccess.$getBlockId($var2 + 1 | 0, $var3, $var4) != $var1.$blockID))
            $var8 = 1;
        var$8 = $this.$blockAccess;
        $var12 = $var4 - 1 | 0;
        if (!(var$8.$getBlockId($var2, $var3, $var12) != $var1.$blockID && $this.$blockAccess.$getBlockId($var2, $var3, $var4 + 1 | 0) != $var1.$blockID))
            $var9 = 1;
        $var10 = $this.$blockAccess.$getBlockId($var11, $var3, $var4) != $var1.$blockID ? 0 : 1;
        $var11 = $this.$blockAccess.$getBlockId($var2 + 1 | 0, $var3, $var4) != $var1.$blockID ? 0 : 1;
        $var12 = $this.$blockAccess.$getBlockId($var2, $var3, $var12) != $var1.$blockID ? 0 : 1;
        $var13 = $this.$blockAccess.$getBlockId($var2, $var3, $var4 + 1 | 0) != $var1.$blockID ? 0 : 1;
        if (!$var8 && !$var9)
            $var8 = 1;
        $var6 = 0.4375;
        $var7 = 0.5625;
        $var14 = 0.75;
        $var15 = 0.9375;
        $var16 = !$var10 ? $var6 : 0.0;
        $var17 = !$var11 ? $var7 : 1.0;
        $var18 = !$var12 ? $var6 : 0.0;
        $var19 = !$var13 ? $var7 : 1.0;
        if ($var8) {
            nms_Block_setBlockBounds($var1, $var16, $var14, $var6, $var17, $var15, $var7);
            $ptr = 2;
            continue main;
        }
        if ($var9) {
            nms_Block_setBlockBounds($var1, $var6, $var14, $var18, $var7, $var15, $var19);
            $ptr = 3;
            continue main;
        }
        $var15 = 0.375;
        $var14 = 0.5625;
        if ($var8) {
            nms_Block_setBlockBounds($var1, $var16, $var15, $var6, $var17, $var14, $var7);
            $ptr = 4;
            continue main;
        }
        if (!$var9) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
            return $var5;
        }
        nms_Block_setBlockBounds($var1, $var6, $var15, $var18, $var7, $var14, $var19);
        $ptr = 5;
        continue main;
    case 2:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        if ($var9) {
            nms_Block_setBlockBounds($var1, $var6, $var14, $var18, $var7, $var15, $var19);
            $ptr = 3;
            continue main;
        }
        $var15 = 0.375;
        $var14 = 0.5625;
        if ($var8) {
            nms_Block_setBlockBounds($var1, $var16, $var15, $var6, $var17, $var14, $var7);
            $ptr = 4;
            continue main;
        }
        if (!$var9) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
            return $var5;
        }
        nms_Block_setBlockBounds($var1, $var6, $var15, $var18, $var7, $var14, $var19);
        $ptr = 5;
        continue main;
    case 3:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var15 = 0.375;
        $var14 = 0.5625;
        if ($var8) {
            nms_Block_setBlockBounds($var1, $var16, $var15, $var6, $var17, $var14, $var7);
            $ptr = 4;
            continue main;
        }
        if (!$var9) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
            return $var5;
        }
        nms_Block_setBlockBounds($var1, $var6, $var15, $var18, $var7, $var14, $var19);
        $ptr = 5;
        continue main;
    case 4:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        if (!$var9) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
            return $var5;
        }
        nms_Block_setBlockBounds($var1, $var6, $var15, $var18, $var7, $var14, $var19);
        $ptr = 5;
    case 5:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
        return $var5;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var8, $var9, var$8, $var11, $var12, $var10, $var13, $var6, $var7, $var14, $var15, $var16, $var17, $var18, $var19, $ptr);
}
function nms_RenderBlocks_renderBlockStairs($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = 0;
        $var6 = $this.$blockAccess.$getBlockMetadata($var2, $var3, $var4);
        if (!$var6) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 0.5, 0.5, 1.0);
            $ptr = 1;
            continue main;
        }
        if ($var6 == 1) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 0.5, 1.0, 1.0);
            $ptr = 3;
            continue main;
        }
        if ($var6 == 2) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 0.5, 0.5);
            $ptr = 5;
            continue main;
        }
        if ($var6 != 3) {
            nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
            return $var5;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5);
        $ptr = 7;
        continue main;
    case 1:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.5, 0.0, 0.0, 1.0, 1.0, 1.0);
        $ptr = 2;
    case 2:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
        return $var5;
    case 3:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.5, 0.0, 0.0, 1.0, 0.5, 1.0);
        $ptr = 4;
    case 4:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
        return $var5;
    case 5:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.5, 1.0, 1.0, 1.0);
        $ptr = 6;
    case 6:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
        return $var5;
    case 7:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.5, 1.0, 0.5, 1.0);
        $ptr = 8;
    case 8:
        nms_RenderBlocks_renderStandardBlock($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
        return $var5;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $ptr);
}
function nms_RenderBlocks_renderBlockDoor($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var12, $var13, $var8, var$10, var$11, var$12, $var9, $var14;
    nms_Tessellator_$callClinit();
    $var5 = nms_Tessellator_instance;
    $var6 = $var1;
    $var12 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4);
    $var13 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3 - 1 | 0, $var4);
    if ($var6.$minY > 0.0)
        $var13 = $var12;
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var13 = 1.0;
    $var8 = 0.5 * $var13;
    nms_Tessellator_setColorOpaque_F($var5, $var8, $var8, $var8);
    var$10 = $var2;
    var$11 = $var3;
    var$12 = $var4;
    nms_RenderBlocks_renderBottomFace($this, $var1, var$10, var$11, var$12, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 0));
    $var8 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3 + 1 | 0, $var4);
    if ($var6.$maxY < 1.0)
        $var8 = $var12;
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var8 = 1.0;
    $var9 = 1.0 * $var8;
    nms_Tessellator_setColorOpaque_F($var5, $var9, $var9, $var9);
    nms_RenderBlocks_renderTopFace($this, $var1, var$10, var$11, var$12, $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 1));
    $var9 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4 - 1 | 0);
    if ($var6.$minZ > 0.0)
        $var9 = $var12;
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var9 = 1.0;
    $var9 = 0.800000011920929 * $var9;
    nms_Tessellator_setColorOpaque_F($var5, $var9, $var9, $var9);
    $var14 = $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 2);
    if ($var14 < 0) {
        $this.$flipTexture = 1;
        $var14 =  -$var14;
    }
    nms_RenderBlocks_renderEastFace($this, $var1, var$10, var$11, var$12, $var14);
    $this.$flipTexture = 0;
    $var9 = $var1.$getBlockBrightness($this.$blockAccess, $var2, $var3, $var4 + 1 | 0);
    if ($var6.$maxZ < 1.0)
        $var9 = $var12;
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var9 = 1.0;
    $var9 = 0.800000011920929 * $var9;
    nms_Tessellator_setColorOpaque_F($var5, $var9, $var9, $var9);
    $var14 = $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 3);
    if ($var14 < 0) {
        $this.$flipTexture = 1;
        $var14 =  -$var14;
    }
    nms_RenderBlocks_renderWestFace($this, $var1, var$10, var$11, var$12, $var14);
    $this.$flipTexture = 0;
    $var9 = $var1.$getBlockBrightness($this.$blockAccess, $var2 - 1 | 0, $var3, $var4);
    if ($var6.$field_370_bf > 0.0)
        $var9 = $var12;
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var9 = 1.0;
    $var9 = 0.6000000238418579 * $var9;
    nms_Tessellator_setColorOpaque_F($var5, $var9, $var9, $var9);
    $var14 = $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 4);
    if ($var14 < 0) {
        $this.$flipTexture = 1;
        $var14 =  -$var14;
    }
    nms_RenderBlocks_renderNorthFace($this, $var1, var$10, var$11, var$12, $var14);
    $this.$flipTexture = 0;
    $var9 = $var1.$getBlockBrightness($this.$blockAccess, $var2 + 1 | 0, $var3, $var4);
    if ($var6.$maxX >= 1.0)
        $var12 = $var9;
    if (nms_Block_lightValue.data[$var1.$blockID] > 0)
        $var12 = 1.0;
    $var9 = 0.6000000238418579 * $var12;
    nms_Tessellator_setColorOpaque_F($var5, $var9, $var9, $var9);
    $var2 = $var1.$getBlockTexture($this.$blockAccess, $var2, $var3, $var4, 5);
    if ($var2 < 0) {
        $this.$flipTexture = 1;
        $var2 =  -$var2;
    }
    nms_RenderBlocks_renderSouthFace($this, $var1, var$10, var$11, var$12, $var2);
    $this.$flipTexture = 0;
    return 1;
}
function nms_RenderBlocks_renderBottomFace($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var20, $var12, $var14, $var16, $var18, var$14, var$15, $var22, $var24, $var26, $var28;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    if ($this.$overrideBlockTexture >= 0)
        $var8 = $this.$overrideBlockTexture;
    $var10 = ($var8 & 15) << 4;
    $var11 = $var8 & 240;
    $var20 = $var10;
    $var12 = ($var20 + $var1.$field_370_bf * 16.0) / 256.0;
    $var14 = ($var20 + $var1.$maxX * 16.0 - 0.01) / 256.0;
    $var20 = $var11;
    $var16 = ($var20 + $var1.$minZ * 16.0) / 256.0;
    $var18 = ($var20 + $var1.$maxZ * 16.0 - 0.01) / 256.0;
    if (!($var1.$field_370_bf >= 0.0 && $var1.$maxX <= 1.0)) {
        var$14 = $var10;
        $var12 = (var$14 + 0.0) / 256.0;
        $var14 = (var$14 + 15.989999771118164) / 256.0;
    }
    if (!($var1.$minZ >= 0.0 && $var1.$maxZ <= 1.0)) {
        var$15 = $var11;
        $var16 = (var$15 + 0.0) / 256.0;
        $var18 = (var$15 + 15.989999771118164) / 256.0;
    }
    $var20 = $var2 + $var1.$field_370_bf;
    $var22 = $var2 + $var1.$maxX;
    $var24 = $var4 + $var1.$minY;
    $var26 = $var6 + $var1.$minZ;
    $var28 = $var6 + $var1.$maxZ;
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var28, $var12, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var26, $var12, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var24, $var26, $var14, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var24, $var28, $var14, $var18);
}
function nms_RenderBlocks_renderTopFace($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var20, $var12, $var14, $var16, $var18, var$14, var$15, $var22, $var24, $var26, $var28;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    if ($this.$overrideBlockTexture >= 0)
        $var8 = $this.$overrideBlockTexture;
    $var10 = ($var8 & 15) << 4;
    $var11 = $var8 & 240;
    $var20 = $var10;
    $var12 = ($var20 + $var1.$field_370_bf * 16.0) / 256.0;
    $var14 = ($var20 + $var1.$maxX * 16.0 - 0.01) / 256.0;
    $var20 = $var11;
    $var16 = ($var20 + $var1.$minZ * 16.0) / 256.0;
    $var18 = ($var20 + $var1.$maxZ * 16.0 - 0.01) / 256.0;
    if (!($var1.$field_370_bf >= 0.0 && $var1.$maxX <= 1.0)) {
        var$14 = $var10;
        $var12 = (var$14 + 0.0) / 256.0;
        $var14 = (var$14 + 15.989999771118164) / 256.0;
    }
    if (!($var1.$minZ >= 0.0 && $var1.$maxZ <= 1.0)) {
        var$15 = $var11;
        $var16 = (var$15 + 0.0) / 256.0;
        $var18 = (var$15 + 15.989999771118164) / 256.0;
    }
    $var20 = $var2 + $var1.$field_370_bf;
    $var22 = $var2 + $var1.$maxX;
    $var24 = $var4 + $var1.$maxY;
    $var26 = $var6 + $var1.$minZ;
    $var28 = $var6 + $var1.$maxZ;
    nms_Tessellator_addVertexWithUV($var9, $var22, $var24, $var28, $var14, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var24, $var26, $var14, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var26, $var12, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var28, $var12, $var18);
}
function nms_RenderBlocks_renderEastFace($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var14, $var12, $var20, $var16, $var18, var$14, var$15, $var22, $var24, $var26, $var28;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    if ($this.$overrideBlockTexture >= 0)
        $var8 = $this.$overrideBlockTexture;
    $var10 = ($var8 & 15) << 4;
    $var11 = $var8 & 240;
    $var14 = $var10;
    $var12 = ($var14 + $var1.$field_370_bf * 16.0) / 256.0;
    $var14 = ($var14 + $var1.$maxX * 16.0 - 0.01) / 256.0;
    $var20 = $var11;
    $var16 = ($var20 + $var1.$minY * 16.0) / 256.0;
    $var18 = ($var20 + $var1.$maxY * 16.0 - 0.01) / 256.0;
    if (!$this.$flipTexture) {
        $var20 = $var14;
        $var14 = $var12;
        $var12 = $var20;
    }
    if (!($var1.$field_370_bf >= 0.0 && $var1.$maxX <= 1.0)) {
        var$14 = $var10;
        $var14 = (var$14 + 0.0) / 256.0;
        $var12 = (var$14 + 15.989999771118164) / 256.0;
    }
    if (!($var1.$minY >= 0.0 && $var1.$maxY <= 1.0)) {
        var$15 = $var11;
        $var16 = (var$15 + 0.0) / 256.0;
        $var18 = (var$15 + 15.989999771118164) / 256.0;
    }
    $var20 = $var2 + $var1.$field_370_bf;
    $var22 = $var2 + $var1.$maxX;
    $var24 = $var4 + $var1.$minY;
    $var26 = $var4 + $var1.$maxY;
    $var28 = $var6 + $var1.$minZ;
    nms_Tessellator_addVertexWithUV($var9, $var20, $var26, $var28, $var12, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var26, $var28, $var14, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var24, $var28, $var14, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var28, $var12, $var18);
}
function nms_RenderBlocks_renderWestFace($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var14, $var12, $var20, $var16, $var18, var$14, var$15, $var22, $var24, $var26, $var28;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    if ($this.$overrideBlockTexture >= 0)
        $var8 = $this.$overrideBlockTexture;
    $var10 = ($var8 & 15) << 4;
    $var11 = $var8 & 240;
    $var14 = $var10;
    $var12 = ($var14 + $var1.$field_370_bf * 16.0) / 256.0;
    $var14 = ($var14 + $var1.$maxX * 16.0 - 0.01) / 256.0;
    $var20 = $var11;
    $var16 = ($var20 + $var1.$minY * 16.0) / 256.0;
    $var18 = ($var20 + $var1.$maxY * 16.0 - 0.01) / 256.0;
    if (!$this.$flipTexture) {
        $var20 = $var14;
        $var14 = $var12;
        $var12 = $var20;
    }
    if (!($var1.$field_370_bf >= 0.0 && $var1.$maxX <= 1.0)) {
        var$14 = $var10;
        $var14 = (var$14 + 0.0) / 256.0;
        $var12 = (var$14 + 15.989999771118164) / 256.0;
    }
    if (!($var1.$minY >= 0.0 && $var1.$maxY <= 1.0)) {
        var$15 = $var11;
        $var16 = (var$15 + 0.0) / 256.0;
        $var18 = (var$15 + 15.989999771118164) / 256.0;
    }
    $var20 = $var2 + $var1.$field_370_bf;
    $var22 = $var2 + $var1.$maxX;
    $var24 = $var4 + $var1.$minY;
    $var26 = $var4 + $var1.$maxY;
    $var28 = $var6 + $var1.$maxZ;
    nms_Tessellator_addVertexWithUV($var9, $var20, $var26, $var28, $var14, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var28, $var14, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var24, $var28, $var12, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var22, $var26, $var28, $var12, $var16);
}
function nms_RenderBlocks_renderNorthFace($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var20, $var12, $var14, $var16, $var18, var$14, var$15, $var22, $var24, $var26, $var28;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    if ($this.$overrideBlockTexture >= 0)
        $var8 = $this.$overrideBlockTexture;
    $var10 = ($var8 & 15) << 4;
    $var11 = $var8 & 240;
    $var20 = $var10;
    $var12 = ($var20 + $var1.$minZ * 16.0) / 256.0;
    $var14 = ($var20 + $var1.$maxZ * 16.0 - 0.01) / 256.0;
    $var20 = $var11;
    $var16 = ($var20 + $var1.$minY * 16.0) / 256.0;
    $var18 = ($var20 + $var1.$maxY * 16.0 - 0.01) / 256.0;
    if (!$this.$flipTexture) {
        $var20 = $var14;
        $var14 = $var12;
        $var12 = $var20;
    }
    if (!($var1.$minZ >= 0.0 && $var1.$maxZ <= 1.0)) {
        var$14 = $var10;
        $var14 = (var$14 + 0.0) / 256.0;
        $var12 = (var$14 + 15.989999771118164) / 256.0;
    }
    if (!($var1.$minY >= 0.0 && $var1.$maxY <= 1.0)) {
        var$15 = $var11;
        $var16 = (var$15 + 0.0) / 256.0;
        $var18 = (var$15 + 15.989999771118164) / 256.0;
    }
    $var20 = $var2 + $var1.$field_370_bf;
    $var22 = $var4 + $var1.$minY;
    $var24 = $var4 + $var1.$maxY;
    $var26 = $var6 + $var1.$minZ;
    $var28 = $var6 + $var1.$maxZ;
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var28, $var12, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var26, $var14, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var22, $var26, $var14, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var22, $var28, $var12, $var18);
}
function nms_RenderBlocks_renderSouthFace($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var20, $var12, $var14, $var16, $var18, var$14, var$15, $var22, $var24, $var26, $var28;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    if ($this.$overrideBlockTexture >= 0)
        $var8 = $this.$overrideBlockTexture;
    $var10 = ($var8 & 15) << 4;
    $var11 = $var8 & 240;
    $var20 = $var10;
    $var12 = ($var20 + $var1.$minZ * 16.0) / 256.0;
    $var14 = ($var20 + $var1.$maxZ * 16.0 - 0.01) / 256.0;
    $var20 = $var11;
    $var16 = ($var20 + $var1.$minY * 16.0) / 256.0;
    $var18 = ($var20 + $var1.$maxY * 16.0 - 0.01) / 256.0;
    if (!$this.$flipTexture) {
        $var20 = $var14;
        $var14 = $var12;
        $var12 = $var20;
    }
    if (!($var1.$minZ >= 0.0 && $var1.$maxZ <= 1.0)) {
        var$14 = $var10;
        $var14 = (var$14 + 0.0) / 256.0;
        $var12 = (var$14 + 15.989999771118164) / 256.0;
    }
    if (!($var1.$minY >= 0.0 && $var1.$maxY <= 1.0)) {
        var$15 = $var11;
        $var16 = (var$15 + 0.0) / 256.0;
        $var18 = (var$15 + 15.989999771118164) / 256.0;
    }
    $var20 = $var2 + $var1.$maxX;
    $var22 = $var4 + $var1.$minY;
    $var24 = $var4 + $var1.$maxY;
    $var26 = $var6 + $var1.$minZ;
    $var28 = $var6 + $var1.$maxZ;
    nms_Tessellator_addVertexWithUV($var9, $var20, $var22, $var28, $var14, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var22, $var26, $var12, $var18);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var26, $var12, $var16);
    nms_Tessellator_addVertexWithUV($var9, $var20, $var24, $var28, $var14, $var16);
}
function nms_RenderBlocks_func_1238_a($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = $var1.$getRenderType();
    nms_Tessellator_$callClinit();
    $var4 = nms_Tessellator_instance;
    if (!$var3) {
        $var1.$func_237_e();
        olo_EaglerAdapterGL30_glTranslatef((-0.5), (-0.5), (-0.5));
        nms_Tessellator_startDrawingQuads($var4);
        nms_Tessellator_setColorRGBA_F($var4, 1.0, 1.0, 1.0, $var2);
        nms_RenderBlocks_renderBottomFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(0));
        nms_Tessellator_setColorRGBA_F($var4, 0.5, 0.5, 0.5, $var2);
        nms_RenderBlocks_renderTopFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(1));
        nms_Tessellator_setColorRGBA_F($var4, 0.800000011920929, 0.800000011920929, 0.800000011920929, $var2);
        nms_RenderBlocks_renderEastFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(2));
        nms_RenderBlocks_renderWestFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(3));
        nms_Tessellator_setColorRGBA_F($var4, 0.6000000238418579, 0.6000000238418579, 0.6000000238418579, $var2);
        nms_RenderBlocks_renderNorthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(4));
        nms_RenderBlocks_renderSouthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(5));
        nms_Tessellator_draw($var4);
        olo_EaglerAdapterGL30_glTranslatef(0.5, 0.5, 0.5);
    }
}
function nms_RenderBlocks_func_1227_a($this, $var1) {
    var $var3, $var4, $var7;
    a: {
        nms_Tessellator_$callClinit();
        $var3 = nms_Tessellator_instance;
        $var4 = $var1.$getRenderType();
        if (!$var4) {
            $var1.$func_237_e();
            olo_EaglerAdapterGL30_glTranslatef((-0.5), (-0.5), (-0.5));
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
            nms_RenderBlocks_renderBottomFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(0));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, 1.0, 0.0);
            nms_RenderBlocks_renderTopFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(1));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, 0.0, (-1.0));
            nms_RenderBlocks_renderEastFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(2));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, 0.0, 1.0);
            nms_RenderBlocks_renderWestFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(3));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, (-1.0), 0.0, 0.0);
            nms_RenderBlocks_renderNorthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(4));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 1.0, 0.0, 0.0);
            nms_RenderBlocks_renderSouthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(5));
            nms_Tessellator_draw($var3);
            olo_EaglerAdapterGL30_glTranslatef(0.5, 0.5, 0.5);
        } else if ($var4 == 1) {
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
            nms_RenderBlocks_func_1239_a($this, $var1, (-1), (-0.5), (-0.5), (-0.5));
            nms_Tessellator_draw($var3);
        } else if ($var4 == 13) {
            $var1.$func_237_e();
            olo_EaglerAdapterGL30_glTranslatef((-0.5), (-0.5), (-0.5));
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
            nms_RenderBlocks_renderBottomFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(0));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, 1.0, 0.0);
            nms_RenderBlocks_renderTopFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(1));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, 0.0, (-1.0));
            nms_Tessellator_setTranslationF($var3, 0.0, 0.0, 0.0625);
            nms_RenderBlocks_renderEastFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(2));
            nms_Tessellator_setTranslationF($var3, 0.0, 0.0, (-0.0625));
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, 0.0, 1.0);
            nms_Tessellator_setTranslationF($var3, 0.0, 0.0, (-0.0625));
            nms_RenderBlocks_renderWestFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(3));
            nms_Tessellator_setTranslationF($var3, 0.0, 0.0, 0.0625);
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, (-1.0), 0.0, 0.0);
            nms_Tessellator_setTranslationF($var3, 0.0625, 0.0, 0.0);
            nms_RenderBlocks_renderNorthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(4));
            nms_Tessellator_setTranslationF($var3, (-0.0625), 0.0, 0.0);
            nms_Tessellator_draw($var3);
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 1.0, 0.0, 0.0);
            nms_Tessellator_setTranslationF($var3, (-0.0625), 0.0, 0.0);
            nms_RenderBlocks_renderSouthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(5));
            nms_Tessellator_setTranslationF($var3, 0.0625, 0.0, 0.0);
            nms_Tessellator_draw($var3);
            olo_EaglerAdapterGL30_glTranslatef(0.5, 0.5, 0.5);
        } else if ($var4 == 6) {
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
            nms_RenderBlocks_func_1245_b($this, $var1, (-1), (-0.5), (-0.5), (-0.5));
            nms_Tessellator_draw($var3);
        } else if ($var4 == 2) {
            nms_Tessellator_startDrawingQuads($var3);
            nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
            nms_RenderBlocks_renderTorchAtAngle($this, $var1, (-0.5), (-0.5), (-0.5), 0.0, 0.0);
            nms_Tessellator_draw($var3);
        } else {
            if ($var4 == 10) {
                $var7 = 0;
                while (true) {
                    if ($var7 >= 2)
                        break a;
                    if (!$var7)
                        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5);
                    if ($var7 == 1)
                        nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.5, 1.0, 0.5, 1.0);
                    olo_EaglerAdapterGL30_glTranslatef((-0.5), (-0.5), (-0.5));
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
                    nms_RenderBlocks_renderBottomFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(0));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, 1.0, 0.0);
                    nms_RenderBlocks_renderTopFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(1));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, 0.0, (-1.0));
                    nms_RenderBlocks_renderEastFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(2));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, 0.0, 1.0);
                    nms_RenderBlocks_renderWestFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(3));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, (-1.0), 0.0, 0.0);
                    nms_RenderBlocks_renderNorthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(4));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 1.0, 0.0, 0.0);
                    nms_RenderBlocks_renderSouthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(5));
                    nms_Tessellator_draw($var3);
                    olo_EaglerAdapterGL30_glTranslatef(0.5, 0.5, 0.5);
                    $var7 = $var7 + 1 | 0;
                }
            }
            if ($var4 == 11) {
                $var7 = 0;
                while ($var7 < 4) {
                    if (!$var7)
                        nms_Block_setBlockBounds($var1, 0.375, 0.0, 0.0, 0.625, 1.0, 0.25);
                    if ($var7 == 1)
                        nms_Block_setBlockBounds($var1, 0.375, 0.0, 0.75, 0.625, 1.0, 1.0);
                    if ($var7 == 2)
                        nms_Block_setBlockBounds($var1, 0.4375, 0.8125, (-0.125), 0.5625, 0.9375, 1.125);
                    if ($var7 == 3)
                        nms_Block_setBlockBounds($var1, 0.4375, 0.3125, (-0.125), 0.5625, 0.4375, 1.125);
                    olo_EaglerAdapterGL30_glTranslatef((-0.5), (-0.5), (-0.5));
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
                    nms_RenderBlocks_renderBottomFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(0));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, 1.0, 0.0);
                    nms_RenderBlocks_renderTopFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(1));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, 0.0, (-1.0));
                    nms_RenderBlocks_renderEastFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(2));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 0.0, 0.0, 1.0);
                    nms_RenderBlocks_renderWestFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(3));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, (-1.0), 0.0, 0.0);
                    nms_RenderBlocks_renderNorthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(4));
                    nms_Tessellator_draw($var3);
                    nms_Tessellator_startDrawingQuads($var3);
                    nms_Tessellator_setNormal($var3, 1.0, 0.0, 0.0);
                    nms_RenderBlocks_renderSouthFace($this, $var1, 0.0, 0.0, 0.0, $var1.$getBlockTextureFromSide(5));
                    nms_Tessellator_draw($var3);
                    olo_EaglerAdapterGL30_glTranslatef(0.5, 0.5, 0.5);
                    $var7 = $var7 + 1 | 0;
                }
                nms_Block_setBlockBounds($var1, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
            }
        }
    }
}
function nms_RenderBlocks_func_1219_a($var0) {
    return !$var0 ? 1 : $var0 == 13 ? 1 : $var0 == 10 ? 1 : $var0 != 11 ? 0 : 1;
}
function nms_ModelRenderer() {
    var a = this; jl_Object.call(a);
    a.$corners = null;
    a.$faces = null;
    a.$textureOffsetX = 0;
    a.$textureOffsetY = 0;
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$offsetZ = 0.0;
    a.$rotateAngleX = 0.0;
    a.$rotateAngleY = 0.0;
    a.$rotateAngleZ = 0.0;
    a.$compiled = 0;
    a.$displayList = 0;
    a.$mirror = 0;
    a.$field_1403_h = 0;
    a.$field_1402_i = 0;
}
function nms_ModelRenderer__init_(var_0, var_1) {
    var var_2 = new nms_ModelRenderer();
    nms_ModelRenderer__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ModelRenderer__init_0($this, $var1, $var2) {
    $this.$compiled = 0;
    $this.$displayList = 0;
    $this.$mirror = 0;
    $this.$field_1403_h = 1;
    $this.$field_1402_i = 0;
    $this.$textureOffsetX = $var1;
    $this.$textureOffsetY = $var2;
}
function nms_ModelRenderer_func_921_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelRenderer_addBox($this, $var1, $var2, $var3, $var4, $var5, $var6, 0.0);
}
function nms_ModelRenderer_addBox($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var10, var$11, var$12, var$13, $var20, $var12, $var13, $var14, $var15, $var16, $var17, $var18, var$22, var$23, var$24, var$25, $var19;
    $this.$corners = $rt_createArray(nms_PositionTexureVertex, 8);
    $this.$faces = $rt_createArray(nms_TexturedQuad, 6);
    $var8 = $var1 + $var4;
    $var9 = $var2 + $var5;
    $var10 = $var3 + $var6;
    var$11 = $var1 - $var7;
    var$12 = $var2 - $var7;
    var$13 = $var3 - $var7;
    $var3 = $var8 + $var7;
    $var9 = $var9 + $var7;
    $var7 = $var10 + $var7;
    if (!$this.$mirror) {
        $var1 = var$11;
        var$11 = $var3;
        $var3 = $var1;
    }
    a: {
        $var20 = nms_PositionTexureVertex__init_($var3, var$12, var$13, 0.0, 0.0);
        $var12 = nms_PositionTexureVertex__init_(var$11, var$12, var$13, 0.0, 8.0);
        $var13 = nms_PositionTexureVertex__init_(var$11, $var9, var$13, 8.0, 8.0);
        $var14 = nms_PositionTexureVertex__init_($var3, $var9, var$13, 8.0, 0.0);
        $var15 = nms_PositionTexureVertex__init_($var3, var$12, $var7, 0.0, 0.0);
        $var16 = nms_PositionTexureVertex__init_(var$11, var$12, $var7, 0.0, 8.0);
        $var17 = nms_PositionTexureVertex__init_(var$11, $var9, $var7, 8.0, 8.0);
        $var18 = nms_PositionTexureVertex__init_($var3, $var9, $var7, 8.0, 0.0);
        $this.$corners.data[0] = $var20;
        $this.$corners.data[1] = $var12;
        $this.$corners.data[2] = $var13;
        $this.$corners.data[3] = $var14;
        $this.$corners.data[4] = $var15;
        $this.$corners.data[5] = $var16;
        $this.$corners.data[6] = $var17;
        $this.$corners.data[7] = $var18;
        var$22 = $this.$faces.data;
        var$23 = new nms_TexturedQuad;
        var$24 = $rt_createArray(nms_PositionTexureVertex, 4);
        var$25 = var$24.data;
        var$25[0] = $var16;
        var$25[1] = $var12;
        var$25[2] = $var13;
        var$25[3] = $var17;
        nms_TexturedQuad__init_(var$23, var$24, ($this.$textureOffsetX + $var6 | 0) + $var4 | 0, $this.$textureOffsetY + $var6 | 0, (($this.$textureOffsetX + $var6 | 0) + $var4 | 0) + $var6 | 0, ($this.$textureOffsetY + $var6 | 0) + $var5 | 0);
        var$22[0] = var$23;
        var$25 = $this.$faces.data;
        var$23 = new nms_TexturedQuad;
        var$22 = $rt_createArray(nms_PositionTexureVertex, 4);
        var$24 = var$22.data;
        var$24[0] = $var20;
        var$24[1] = $var15;
        var$24[2] = $var18;
        var$24[3] = $var14;
        nms_TexturedQuad__init_(var$23, var$22, $this.$textureOffsetX + 0 | 0, $this.$textureOffsetY + $var6 | 0, $this.$textureOffsetX + $var6 | 0, ($this.$textureOffsetY + $var6 | 0) + $var5 | 0);
        var$25[1] = var$23;
        var$25 = $this.$faces.data;
        var$23 = new nms_TexturedQuad;
        var$22 = $rt_createArray(nms_PositionTexureVertex, 4);
        var$24 = var$22.data;
        var$24[0] = $var16;
        var$24[1] = $var15;
        var$24[2] = $var20;
        var$24[3] = $var12;
        nms_TexturedQuad__init_(var$23, var$22, $this.$textureOffsetX + $var6 | 0, $this.$textureOffsetY + 0 | 0, ($this.$textureOffsetX + $var6 | 0) + $var4 | 0, $this.$textureOffsetY + $var6 | 0);
        var$25[2] = var$23;
        var$25 = $this.$faces.data;
        var$23 = new nms_TexturedQuad;
        var$22 = $rt_createArray(nms_PositionTexureVertex, 4);
        var$24 = var$22.data;
        var$24[0] = $var13;
        var$24[1] = $var14;
        var$24[2] = $var18;
        var$24[3] = $var17;
        nms_TexturedQuad__init_(var$23, var$22, ($this.$textureOffsetX + $var6 | 0) + $var4 | 0, $this.$textureOffsetY + 0 | 0, (($this.$textureOffsetX + $var6 | 0) + $var4 | 0) + $var4 | 0, $this.$textureOffsetY + $var6 | 0);
        var$25[3] = var$23;
        var$22 = $this.$faces.data;
        var$23 = new nms_TexturedQuad;
        var$24 = $rt_createArray(nms_PositionTexureVertex, 4);
        var$25 = var$24.data;
        var$25[0] = $var12;
        var$25[1] = $var20;
        var$25[2] = $var14;
        var$25[3] = $var13;
        nms_TexturedQuad__init_(var$23, var$24, $this.$textureOffsetX + $var6 | 0, $this.$textureOffsetY + $var6 | 0, ($this.$textureOffsetX + $var6 | 0) + $var4 | 0, ($this.$textureOffsetY + $var6 | 0) + $var5 | 0);
        var$22[4] = var$23;
        var$25 = $this.$faces.data;
        $var14 = new nms_TexturedQuad;
        var$22 = $rt_createArray(nms_PositionTexureVertex, 4);
        var$24 = var$22.data;
        var$24[0] = $var15;
        var$24[1] = $var16;
        var$24[2] = $var17;
        var$24[3] = $var18;
        nms_TexturedQuad__init_($var14, var$22, (($this.$textureOffsetX + $var6 | 0) + $var4 | 0) + $var6 | 0, $this.$textureOffsetY + $var6 | 0, ((($this.$textureOffsetX + $var6 | 0) + $var4 | 0) + $var6 | 0) + $var4 | 0, ($this.$textureOffsetY + $var6 | 0) + $var5 | 0);
        var$25[5] = $var14;
        if ($this.$mirror) {
            $var19 = 0;
            while (true) {
                if ($var19 >= $this.$faces.data.length)
                    break a;
                nms_TexturedQuad_func_809_a($this.$faces.data[$var19]);
                $var19 = $var19 + 1 | 0;
            }
        }
    }
}
function nms_ModelRenderer_setPosition($this, $var1, $var2, $var3) {
    $this.$offsetX = $var1;
    $this.$offsetY = $var2;
    $this.$offsetZ = $var3;
}
function nms_ModelRenderer_render($this, $var1) {
    if (!$this.$field_1402_i && $this.$field_1403_h) {
        if (!$this.$compiled)
            nms_ModelRenderer_compileDisplayList($this, $var1);
        if ($this.$rotateAngleX === 0.0 && $this.$rotateAngleY === 0.0 && $this.$rotateAngleZ === 0.0) {
            if ($this.$offsetX === 0.0 && $this.$offsetY === 0.0 && $this.$offsetZ === 0.0)
                olo_EaglerAdapterGL30_glCallList($this.$displayList);
            else {
                olo_EaglerAdapterGL30_glTranslatef($this.$offsetX * $var1, $this.$offsetY * $var1, $this.$offsetZ * $var1);
                olo_EaglerAdapterGL30_glCallList($this.$displayList);
                olo_EaglerAdapterGL30_glTranslatef( -$this.$offsetX * $var1,  -$this.$offsetY * $var1,  -$this.$offsetZ * $var1);
            }
        } else {
            olo_EaglerAdapterGL30_glPushMatrix();
            olo_EaglerAdapterGL30_glTranslatef($this.$offsetX * $var1, $this.$offsetY * $var1, $this.$offsetZ * $var1);
            if ($this.$rotateAngleZ !== 0.0)
                olo_EaglerAdapterGL30_glRotatef($this.$rotateAngleZ * 57.2957763671875, 0.0, 0.0, 1.0);
            if ($this.$rotateAngleY !== 0.0)
                olo_EaglerAdapterGL30_glRotatef($this.$rotateAngleY * 57.2957763671875, 0.0, 1.0, 0.0);
            if ($this.$rotateAngleX !== 0.0)
                olo_EaglerAdapterGL30_glRotatef($this.$rotateAngleX * 57.2957763671875, 1.0, 0.0, 0.0);
            olo_EaglerAdapterGL30_glCallList($this.$displayList);
            olo_EaglerAdapterGL30_glPopMatrix();
        }
    }
}
function nms_ModelRenderer_func_926_b($this, $var1) {
    if (!$this.$field_1402_i && $this.$field_1403_h) {
        if (!$this.$compiled)
            nms_ModelRenderer_compileDisplayList($this, $var1);
        if (!($this.$rotateAngleX === 0.0 && $this.$rotateAngleY === 0.0 && $this.$rotateAngleZ === 0.0)) {
            olo_EaglerAdapterGL30_glTranslatef($this.$offsetX * $var1, $this.$offsetY * $var1, $this.$offsetZ * $var1);
            if ($this.$rotateAngleZ !== 0.0)
                olo_EaglerAdapterGL30_glRotatef($this.$rotateAngleZ * 57.2957763671875, 0.0, 0.0, 1.0);
            if ($this.$rotateAngleY !== 0.0)
                olo_EaglerAdapterGL30_glRotatef($this.$rotateAngleY * 57.2957763671875, 0.0, 1.0, 0.0);
            if ($this.$rotateAngleX !== 0.0)
                olo_EaglerAdapterGL30_glRotatef($this.$rotateAngleX * 57.2957763671875, 1.0, 0.0, 0.0);
        } else if (!($this.$offsetX === 0.0 && $this.$offsetY === 0.0 && $this.$offsetZ === 0.0))
            olo_EaglerAdapterGL30_glTranslatef($this.$offsetX * $var1, $this.$offsetY * $var1, $this.$offsetZ * $var1);
    }
}
function nms_ModelRenderer_compileDisplayList($this, $var1) {
    var $var2, $var3;
    $this.$displayList = nms_GLAllocation_generateDisplayLists(1);
    olo_EaglerAdapterGL30_glNewList($this.$displayList, 4864);
    nms_Tessellator_$callClinit();
    $var2 = nms_Tessellator_instance;
    $var3 = 0;
    while ($var3 < $this.$faces.data.length) {
        nms_TexturedQuad_func_808_a($this.$faces.data[$var3], $var2, $var1);
        $var3 = $var3 + 1 | 0;
    }
    olo_EaglerAdapterGL30_glEndList();
    $this.$compiled = 1;
}
function nPn_NBTTagByte() {
    nPn_NBTBase.call(this);
    this.$byteValue = 0;
}
function nPn_NBTTagByte__init_0() {
    var var_0 = new nPn_NBTTagByte();
    nPn_NBTTagByte__init_(var_0);
    return var_0;
}
function nPn_NBTTagByte__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagByte_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeByte($dataoutput, $this.$byteValue);
}
function nPn_NBTTagByte_readTagContents($this, $datainput) {
    $this.$byteValue = ji_DataInputStream_readByte($datainput);
}
function nPn_NBTTagByte_getType($this) {
    return 1;
}
function nPn_NBTTagShort() {
    nPn_NBTBase.call(this);
    this.$shortValue = 0;
}
function nPn_NBTTagShort__init_0() {
    var var_0 = new nPn_NBTTagShort();
    nPn_NBTTagShort__init_(var_0);
    return var_0;
}
function nPn_NBTTagShort__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagShort_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeShort($dataoutput, $this.$shortValue);
}
function nPn_NBTTagShort_readTagContents($this, $datainput) {
    $this.$shortValue = ji_DataInputStream_readShort($datainput);
}
function nPn_NBTTagShort_getType($this) {
    return 2;
}
function nPn_NBTTagInt() {
    nPn_NBTBase.call(this);
    this.$intValue = 0;
}
function nPn_NBTTagInt__init_0() {
    var var_0 = new nPn_NBTTagInt();
    nPn_NBTTagInt__init_(var_0);
    return var_0;
}
function nPn_NBTTagInt__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagInt_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeInt($dataoutput, $this.$intValue);
}
function nPn_NBTTagInt_readTagContents($this, $datainput) {
    $this.$intValue = ji_DataInputStream_readInt($datainput);
}
function nPn_NBTTagInt_getType($this) {
    return 3;
}
function nPn_NBTTagLong() {
    nPn_NBTBase.call(this);
    this.$longValue = Long_ZERO;
}
function nPn_NBTTagLong__init_0() {
    var var_0 = new nPn_NBTTagLong();
    nPn_NBTTagLong__init_(var_0);
    return var_0;
}
function nPn_NBTTagLong__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagLong_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeLong($dataoutput, $this.$longValue);
}
function nPn_NBTTagLong_readTagContents($this, $datainput) {
    $this.$longValue = ji_DataInputStream_readLong($datainput);
}
function nPn_NBTTagLong_getType($this) {
    return 4;
}
function nPn_NBTTagFloat() {
    nPn_NBTBase.call(this);
    this.$floatValue = 0.0;
}
function nPn_NBTTagFloat__init_0() {
    var var_0 = new nPn_NBTTagFloat();
    nPn_NBTTagFloat__init_(var_0);
    return var_0;
}
function nPn_NBTTagFloat__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagFloat_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeFloat($dataoutput, $this.$floatValue);
}
function nPn_NBTTagFloat_readTagContents($this, $datainput) {
    $this.$floatValue = ji_DataInputStream_readFloat($datainput);
}
function nPn_NBTTagFloat_getType($this) {
    return 5;
}
function nPn_NBTTagDouble() {
    nPn_NBTBase.call(this);
    this.$doubleValue = 0.0;
}
function nPn_NBTTagDouble__init_0() {
    var var_0 = new nPn_NBTTagDouble();
    nPn_NBTTagDouble__init_(var_0);
    return var_0;
}
function nPn_NBTTagDouble__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagDouble_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeDouble($dataoutput, $this.$doubleValue);
}
function nPn_NBTTagDouble_readTagContents($this, $datainput) {
    $this.$doubleValue = ji_DataInputStream_readDouble($datainput);
}
function nPn_NBTTagDouble_getType($this) {
    return 6;
}
function nPn_NBTTagByteArray() {
    nPn_NBTBase.call(this);
    this.$byteArray = null;
}
function nPn_NBTTagByteArray__init_0() {
    var var_0 = new nPn_NBTTagByteArray();
    nPn_NBTTagByteArray__init_(var_0);
    return var_0;
}
function nPn_NBTTagByteArray__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagByteArray_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeInt($dataoutput, $this.$byteArray.data.length);
    ji_OutputStream_write($dataoutput, $this.$byteArray);
}
function nPn_NBTTagByteArray_readTagContents($this, $datainput) {
    $this.$byteArray = $rt_createByteArray(ji_DataInputStream_readInt($datainput));
    ji_DataInputStream_readFully($datainput, $this.$byteArray);
}
function nPn_NBTTagByteArray_getType($this) {
    return 7;
}
function nPn_NBTTagString() {
    nPn_NBTBase.call(this);
    this.$stringValue = null;
}
function nPn_NBTTagString__init_0() {
    var var_0 = new nPn_NBTTagString();
    nPn_NBTTagString__init_(var_0);
    return var_0;
}
function nPn_NBTTagString__init_($this) {
    nPn_NBTBase__init_0($this);
}
function nPn_NBTTagString_writeTagContents($this, $dataoutput) {
    ji_DataOutputStream_writeUTF($dataoutput, $this.$stringValue);
}
function nPn_NBTTagString_readTagContents($this, $datainput) {
    $this.$stringValue = ji_DataInputStream_readUTF($datainput);
}
function nPn_NBTTagString_getType($this) {
    return 8;
}
function nPn_NBTTagList() {
    var a = this; nPn_NBTBase.call(a);
    a.$tagList = null;
    a.$tagType = 0;
}
function nPn_NBTTagList__init_0() {
    var var_0 = new nPn_NBTTagList();
    nPn_NBTTagList__init_(var_0);
    return var_0;
}
function nPn_NBTTagList__init_($this) {
    nPn_NBTBase__init_0($this);
    $this.$tagList = ju_ArrayList__init_0();
}
function nPn_NBTTagList_writeTagContents($this, $dataoutput) {
    var $i;
    if ($this.$tagList.$size <= 0)
        $this.$tagType = 1;
    else
        $this.$tagType = ju_ArrayList_get($this.$tagList, 0).$getType0();
    ji_DataOutputStream_writeByte($dataoutput, $this.$tagType);
    ji_DataOutputStream_writeInt($dataoutput, $this.$tagList.$size);
    $i = 0;
    while ($i < $this.$tagList.$size) {
        ju_ArrayList_get($this.$tagList, $i).$writeTagContents($dataoutput);
        $i = $i + 1 | 0;
    }
}
function nPn_NBTTagList_readTagContents($this, $datainput) {
    var $i, $j, $nbtbase;
    $this.$tagType = ji_DataInputStream_readByte($datainput);
    $i = ji_DataInputStream_readInt($datainput);
    $this.$tagList = ju_ArrayList__init_0();
    $j = 0;
    while ($j < $i) {
        $nbtbase = nPn_NBTBase_createTagOfType($this.$tagType);
        $nbtbase.$readTagContents($datainput);
        ju_ArrayList_add($this.$tagList, $nbtbase);
        $j = $j + 1 | 0;
    }
}
function nPn_NBTTagList_getType($this) {
    return 9;
}
function jt_DateFormatSymbols() {
    var a = this; jl_Object.call(a);
    a.$locale1 = null;
    a.$ampms = null;
    a.$eras = null;
    a.$months = null;
    a.$shortMonths = null;
    a.$shortWeekdays = null;
    a.$weekdays = null;
    a.$zoneStrings = null;
}
function jt_DateFormatSymbols__init_1() {
    var var_0 = new jt_DateFormatSymbols();
    jt_DateFormatSymbols__init_(var_0);
    return var_0;
}
function jt_DateFormatSymbols__init_0(var_0) {
    var var_1 = new jt_DateFormatSymbols();
    jt_DateFormatSymbols__init_2(var_1, var_0);
    return var_1;
}
function jt_DateFormatSymbols__init_($this) {
    jt_DateFormatSymbols__init_2($this, ju_Locale_defaultLocale);
}
function jt_DateFormatSymbols__init_2($this, $locale) {
    $this.$locale1 = $locale;
}
function jt_DateFormatSymbols_clone($this) {
    var $symbols, $i;
    $symbols = jt_DateFormatSymbols__init_0($this.$locale1);
    if ($this.$ampms !== null)
        $symbols.$ampms = ju_Arrays_copyOf($this.$ampms, $this.$ampms.data.length);
    if ($this.$eras !== null)
        $symbols.$eras = ju_Arrays_copyOf($this.$eras, $this.$eras.data.length);
    if ($this.$months !== null)
        $symbols.$months = ju_Arrays_copyOf($this.$months, $this.$months.data.length);
    if ($this.$shortMonths !== null)
        $symbols.$shortMonths = ju_Arrays_copyOf($this.$shortMonths, $this.$shortMonths.data.length);
    if ($this.$shortWeekdays !== null)
        $symbols.$shortWeekdays = ju_Arrays_copyOf($this.$shortWeekdays.$clone(), $this.$shortWeekdays.data.length);
    if ($this.$weekdays !== null)
        $symbols.$weekdays = ju_Arrays_copyOf($this.$weekdays, $this.$weekdays.data.length);
    a: {
        if ($this.$zoneStrings !== null) {
            $symbols.$zoneStrings = $rt_createArray($rt_arraycls(jl_String), $this.$zoneStrings.data.length);
            $i = 0;
            while (true) {
                if ($i >= $this.$zoneStrings.data.length)
                    break a;
                $symbols.$zoneStrings.data[$i] = ju_Arrays_copyOf($this.$zoneStrings.data[$i], $this.$zoneStrings.data[$i].data.length);
                $i = $i + 1 | 0;
            }
        }
    }
    return $symbols;
}
function jt_DateFormatSymbols_getAmPmStrings($this) {
    var var$1, var$2;
    if ($this.$ampms === null) {
        var$1 = $this.$locale1.$languageCode;
        var$2 = $this.$locale1.$countryCode;
        if (otciu_CLDRHelper_$$metadata$$2 === null)
            otciu_CLDRHelper_$$metadata$$2 = otciu_CLDRHelper_getAmPmMap$$create();
        $this.$ampms = otciu_CLDRHelper_resolveDateFormatSymbols(otciu_CLDRHelper_$$metadata$$2, var$1, var$2);
    }
    return $this.$ampms.$clone();
}
function jt_DateFormatSymbols_getEras($this) {
    var var$1, var$2;
    if ($this.$eras === null) {
        var$1 = $this.$locale1.$languageCode;
        var$2 = $this.$locale1.$countryCode;
        if (otciu_CLDRHelper_$$metadata$$1 === null)
            otciu_CLDRHelper_$$metadata$$1 = otciu_CLDRHelper_getErasMap$$create();
        $this.$eras = otciu_CLDRHelper_resolveDateFormatSymbols(otciu_CLDRHelper_$$metadata$$1, var$1, var$2);
    }
    return $this.$eras.$clone();
}
function jt_DateFormatSymbols_getMonths($this) {
    var var$1, var$2;
    if ($this.$months === null) {
        var$1 = $this.$locale1.$languageCode;
        var$2 = $this.$locale1.$countryCode;
        if (otciu_CLDRHelper_$$metadata$$3 === null)
            otciu_CLDRHelper_$$metadata$$3 = otciu_CLDRHelper_getMonthMap$$create();
        $this.$months = otciu_CLDRHelper_resolveDateFormatSymbols(otciu_CLDRHelper_$$metadata$$3, var$1, var$2);
    }
    return $this.$months.$clone();
}
function jt_DateFormatSymbols_getShortMonths($this) {
    var var$1, var$2;
    if ($this.$shortMonths === null) {
        var$1 = $this.$locale1.$languageCode;
        var$2 = $this.$locale1.$countryCode;
        if (otciu_CLDRHelper_$$metadata$$4 === null)
            otciu_CLDRHelper_$$metadata$$4 = otciu_CLDRHelper_getShortMonthMap$$create();
        $this.$shortMonths = otciu_CLDRHelper_resolveDateFormatSymbols(otciu_CLDRHelper_$$metadata$$4, var$1, var$2);
    }
    return $this.$shortMonths.$clone();
}
function jt_DateFormatSymbols_getShortWeekdays($this) {
    var var$1, var$2;
    if ($this.$shortWeekdays === null) {
        var$1 = $this.$locale1.$languageCode;
        var$2 = $this.$locale1.$countryCode;
        if (otciu_CLDRHelper_$$metadata$$6 === null)
            otciu_CLDRHelper_$$metadata$$6 = otciu_CLDRHelper_getShortWeekdayMap$$create();
        $this.$shortWeekdays = otciu_CLDRHelper_resolveDateFormatSymbols(otciu_CLDRHelper_$$metadata$$6, var$1, var$2);
    }
    return $this.$shortWeekdays.$clone();
}
function jt_DateFormatSymbols_getWeekdays($this) {
    var var$1, var$2;
    if ($this.$weekdays === null) {
        var$1 = $this.$locale1.$languageCode;
        var$2 = $this.$locale1.$countryCode;
        if (otciu_CLDRHelper_$$metadata$$5 === null)
            otciu_CLDRHelper_$$metadata$$5 = otciu_CLDRHelper_getWeekdayMap$$create();
        $this.$weekdays = otciu_CLDRHelper_resolveDateFormatSymbols(otciu_CLDRHelper_$$metadata$$5, var$1, var$2);
    }
    return $this.$weekdays.$clone();
}
function ji_ByteArrayOutputStream() {
    var a = this; ji_OutputStream.call(a);
    a.$buf2 = null;
    a.$count1 = 0;
}
function ji_ByteArrayOutputStream__init_0() {
    var var_0 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_(var_0);
    return var_0;
}
function ji_ByteArrayOutputStream__init_($this) {
    $this.$buf2 = $rt_createByteArray(32);
}
function ji_ByteArrayOutputStream_write($this, $b) {
    var var$2, var$3;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count1 + 1 | 0);
    var$2 = $this.$buf2.data;
    var$3 = $this.$count1;
    $this.$count1 = var$3 + 1 | 0;
    var$2[var$3] = $b << 24 >> 24;
}
function ji_ByteArrayOutputStream_write0($this, $b, $off, $len) {
    var $i, var$5, var$6, var$7, var$8;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count1 + $len | 0);
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $this.$buf2.data;
        var$7 = $this.$count1;
        $this.$count1 = var$7 + 1 | 0;
        var$8 = $off + 1 | 0;
        var$6[var$7] = var$5[$off];
        $i = $i + 1 | 0;
        $off = var$8;
    }
}
function ji_ByteArrayOutputStream_ensureCapacity($this, $capacity) {
    if ($this.$buf2.data.length < $capacity) {
        $capacity = jl_Math_max($capacity, ($this.$buf2.data.length * 3 | 0) / 2 | 0);
        $this.$buf2 = ju_Arrays_copyOf1($this.$buf2, $capacity);
    }
}
function ji_ByteArrayOutputStream_toByteArray($this) {
    return ju_Arrays_copyOf1($this.$buf2, $this.$count1);
}
function ji_DataOutput() {
}
function ji_DataOutputStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$written = 0;
    a.$buff0 = null;
}
function ji_DataOutputStream__init_(var_0) {
    var var_1 = new ji_DataOutputStream();
    ji_DataOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_DataOutputStream__init_0($this, $out) {
    ji_FilterOutputStream__init_0($this, $out);
    $this.$buff0 = $rt_createByteArray(8);
}
function ji_DataOutputStream_flush($this) {
    $this.$out2.$flush();
}
function ji_DataOutputStream_write($this, $buffer, $offset, $count) {
    var var$4;
    if ($buffer !== null) {
        $this.$out2.$write2($buffer, $offset, $count);
        $this.$written = $this.$written + $count | 0;
        return;
    }
    var$4 = new jl_NullPointerException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function ji_DataOutputStream_writeByte($this, $val) {
    $this.$out2.$write3($val);
    $this.$written = $this.$written + 1 | 0;
}
function ji_DataOutputStream_writeDouble($this, $val) {
    ji_DataOutputStream_writeLong($this, $rt_doubleToLongBits($val));
}
function ji_DataOutputStream_writeFloat($this, $val) {
    ji_DataOutputStream_writeInt($this, $rt_floatToIntBits($val));
}
function ji_DataOutputStream_writeInt($this, $val) {
    $this.$buff0.data[0] = $val >> 24 << 24 >> 24;
    $this.$buff0.data[1] = $val >> 16 << 24 >> 24;
    $this.$buff0.data[2] = $val >> 8 << 24 >> 24;
    $this.$buff0.data[3] = $val << 24 >> 24;
    $this.$out2.$write2($this.$buff0, 0, 4);
    $this.$written = $this.$written + 4 | 0;
}
function ji_DataOutputStream_writeLong($this, $val) {
    $this.$buff0.data[0] = Long_shr($val, 56).lo << 24 >> 24;
    $this.$buff0.data[1] = Long_shr($val, 48).lo << 24 >> 24;
    $this.$buff0.data[2] = Long_shr($val, 40).lo << 24 >> 24;
    $this.$buff0.data[3] = $val.hi << 24 >> 24;
    $this.$buff0.data[4] = Long_shr($val, 24).lo << 24 >> 24;
    $this.$buff0.data[5] = Long_shr($val, 16).lo << 24 >> 24;
    $this.$buff0.data[6] = Long_shr($val, 8).lo << 24 >> 24;
    $this.$buff0.data[7] = $val.lo << 24 >> 24;
    $this.$out2.$write2($this.$buff0, 0, 8);
    $this.$written = $this.$written + 8 | 0;
}
function ji_DataOutputStream_writeShort($this, $val) {
    $this.$buff0.data[0] = $val >> 8 << 24 >> 24;
    $this.$buff0.data[1] = $val << 24 >> 24;
    $this.$out2.$write2($this.$buff0, 0, 2);
    $this.$written = $this.$written + 2 | 0;
}
function ji_DataOutputStream_writeShortToBuffer($this, $val, $buffer, $offset) {
    var var$4;
    $buffer = $buffer.data;
    var$4 = $offset + 1 | 0;
    $buffer[$offset] = $val >> 8 << 24 >> 24;
    $offset = var$4 + 1 | 0;
    $buffer[var$4] = $val << 24 >> 24;
    return $offset;
}
function ji_DataOutputStream_writeUTF($this, $str) {
    var $utfCount, var$3, $buffer;
    $utfCount = ji_DataOutputStream_countUTFBytes($this, $str);
    if (Long_gt($utfCount, Long_fromInt(65535))) {
        $str = new ji_IOException;
        jl_Throwable__init_($str, $rt_s(274));
        $rt_throw($str);
    }
    var$3 = $utfCount.lo;
    $buffer = $rt_createByteArray(var$3 + 2 | 0);
    ji_DataOutputStream_write($this, $buffer, 0, ji_DataOutputStream_writeUTFBytesToBuffer($this, $str, $buffer, ji_DataOutputStream_writeShortToBuffer($this, var$3, $buffer, 0)));
}
function ji_DataOutputStream_countUTFBytes($this, $str) {
    var $utfCount, $length, $i, $charValue;
    $utfCount = 0;
    $length = jl_String_length($str);
    $i = 0;
    while ($i < $length) {
        $charValue = jl_String_charAt($str, $i);
        $utfCount = $charValue > 0 && $charValue <= 127 ? $utfCount + 1 | 0 : $charValue > 2047 ? $utfCount + 3 | 0 : $utfCount + 2 | 0;
        $i = $i + 1 | 0;
    }
    return Long_fromInt($utfCount);
}
function ji_DataOutputStream_writeUTFBytesToBuffer($this, $str, $buffer, $offset) {
    var $length, $i, $charValue, var$7, var$8, var$9, var$10;
    $length = jl_String_length($str);
    $i = 0;
    while ($i < $length) {
        $charValue = jl_String_charAt($str, $i);
        if ($charValue > 0 && $charValue <= 127) {
            var$7 = $buffer.data;
            var$8 = $offset + 1 | 0;
            var$7[$offset] = $charValue << 24 >> 24;
        } else if ($charValue <= 2047) {
            var$7 = $buffer.data;
            var$9 = $offset + 1 | 0;
            var$7[$offset] = (192 | 31 & $charValue >> 6) << 24 >> 24;
            var$8 = var$9 + 1 | 0;
            var$7[var$9] = (128 | 63 & $charValue) << 24 >> 24;
        } else {
            var$7 = $buffer.data;
            var$8 = $offset + 1 | 0;
            var$7[$offset] = (224 | 15 & $charValue >> 12) << 24 >> 24;
            var$10 = var$8 + 1 | 0;
            var$7[var$8] = (128 | 63 & $charValue >> 6) << 24 >> 24;
            var$8 = var$10 + 1 | 0;
            var$7[var$10] = (128 | 63 & $charValue) << 24 >> 24;
        }
        $i = $i + 1 | 0;
        $offset = var$8;
    }
    return $offset;
}
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
function jnc_IllegalCharsetNameException__init_(var_0) {
    var var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
}
function jnc_IllegalCharsetNameException__init_0($this, $charsetName) {
    jl_Throwable__init_0($this);
    $this.$charsetName0 = $charsetName;
}
function cjj_ZStream() {
    var a = this; jl_Object.call(a);
    a.$next_in = null;
    a.$next_in_index = 0;
    a.$avail_in = 0;
    a.$total_in = Long_ZERO;
    a.$next_out = null;
    a.$next_out_index = 0;
    a.$avail_out = 0;
    a.$total_out = Long_ZERO;
    a.$msg = null;
    a.$dstate = null;
    a.$istate = null;
    a.$data_type = 0;
    a.$adler = null;
}
function cjj_ZStream__init_0() {
    var var_0 = new cjj_ZStream();
    cjj_ZStream__init_(var_0);
    return var_0;
}
function cjj_ZStream__init_($this) {
    $this.$adler = cjj_Adler32__init_0();
}
function cjj_ZStream_flush_pending($this) {
    var $len, var$2;
    $len = $this.$dstate.$pending;
    if ($len > $this.$avail_out)
        $len = $this.$avail_out;
    if (!$len)
        return;
    jl_System_arraycopy($this.$dstate.$pending_buf, $this.$dstate.$pending_out, $this.$next_out, $this.$next_out_index, $len);
    $this.$next_out_index = $this.$next_out_index + $len | 0;
    var$2 = $this.$dstate;
    var$2.$pending_out = var$2.$pending_out + $len | 0;
    $this.$total_out = Long_add($this.$total_out, Long_fromInt($len));
    $this.$avail_out = $this.$avail_out - $len | 0;
    var$2 = $this.$dstate;
    var$2.$pending = var$2.$pending - $len | 0;
    if (!$this.$dstate.$pending)
        $this.$dstate.$pending_out = 0;
}
function cjj_ZStream_read_buf($this, $buf, $start, $size) {
    var $len;
    $len = $this.$avail_in;
    if ($len <= $size)
        $size = $len;
    if (!$size)
        return 0;
    $this.$avail_in = $this.$avail_in - $size | 0;
    if ($this.$dstate.$wrap5)
        $this.$adler.$update($this.$next_in, $this.$next_in_index, $size);
    jl_System_arraycopy($this.$next_in, $this.$next_in_index, $buf, $start, $size);
    $this.$next_in_index = $this.$next_in_index + $size | 0;
    $this.$total_in = Long_add($this.$total_in, Long_fromInt($size));
    return $size;
}
function cjj_ZStream_setOutput($this, $buf, $off, $len) {
    $this.$next_out = $buf;
    $this.$next_out_index = $off;
    $this.$avail_out = $len;
}
function cjj_ZStream_setInput($this, $buf, $off, $len, $append) {
    var $tmp_0;
    if ($len <= 0 && $append && $this.$next_in !== null)
        return;
    if ($this.$avail_in > 0 && $append) {
        $tmp_0 = $rt_createByteArray($this.$avail_in + $len | 0);
        jl_System_arraycopy($this.$next_in, $this.$next_in_index, $tmp_0, 0, $this.$avail_in);
        jl_System_arraycopy($buf, $off, $tmp_0, $this.$avail_in, $len);
        $this.$next_in = $tmp_0;
        $this.$next_in_index = 0;
        $this.$avail_in = $this.$avail_in + $len | 0;
    } else {
        $this.$next_in = $buf;
        $this.$next_in_index = $off;
        $this.$avail_in = $len;
    }
}
function cjj_ZStream_getTotalOut($this) {
    return $this.$total_out;
}
function cjj_Inflater() {
    cjj_ZStream.call(this);
    this.$finished0 = 0;
}
function cjj_Inflater__init_1() {
    var var_0 = new cjj_Inflater();
    cjj_Inflater__init_(var_0);
    return var_0;
}
function cjj_Inflater__init_0(var_0) {
    var var_1 = new cjj_Inflater();
    cjj_Inflater__init_2(var_1, var_0);
    return var_1;
}
function cjj_Inflater__init_($this) {
    cjj_ZStream__init_($this);
    $this.$finished0 = 0;
    cjj_Inflater_init($this);
}
function cjj_Inflater__init_2($this, $nowrap) {
    var var$2, var$3;
    cjj_ZStream__init_($this);
    $this.$finished0 = 0;
    $nowrap = cjj_Inflater_init0($this, 15, $nowrap);
    if (!$nowrap)
        return;
    var$2 = new cjj_GZIPException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, $nowrap), $rt_s(18)), $this.$msg)));
    $rt_throw(var$2);
}
function cjj_Inflater_init($this) {
    return cjj_Inflater_init1($this, 15);
}
function cjj_Inflater_init1($this, $w) {
    return cjj_Inflater_init0($this, $w, 0);
}
function cjj_Inflater_init0($this, $w, $nowrap) {
    var var$3;
    $this.$finished0 = 0;
    var$3 = new cjj_Inflate;
    var$3.$was = Long_fromInt(-1);
    var$3.$need_bytes = (-1);
    var$3.$crcbuf = $rt_createByteArray(4);
    var$3.$gheader = null;
    var$3.$tmp_string = null;
    var$3.$z = $this;
    $this.$istate = var$3;
    var$3 = $this.$istate;
    if ($nowrap)
        $w =  -$w;
    return cjj_Inflate_inflateInit(var$3, $w);
}
function cjj_Inflater_inflate($this, $f) {
    var $ret;
    if ($this.$istate === null)
        return (-2);
    $ret = cjj_Inflate_inflate($this.$istate, $f);
    if ($ret == 1)
        $this.$finished0 = 1;
    return $ret;
}
function cjj_Inflater_end($this) {
    $this.$finished0 = 1;
    if ($this.$istate === null)
        return (-2);
    return cjj_Inflate_inflateEnd($this.$istate);
}
function cjj_Inflater_finished($this) {
    return $this.$istate.$mode0 != 12 ? 0 : 1;
}
function nms_StepSound() {
    var a = this; jl_Object.call(a);
    a.$field_1678_a = null;
    a.$field_1677_b = 0.0;
    a.$field_1679_c = 0.0;
}
function nms_StepSound__init_(var_0, var_1, var_2) {
    var var_3 = new nms_StepSound();
    nms_StepSound__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_StepSound__init_0($this, $var1, $var2, $var3) {
    $this.$field_1678_a = $var1;
    $this.$field_1677_b = $var2;
    $this.$field_1679_c = $var3;
}
function nms_StepSound_func_1147_b($this) {
    return $this.$field_1677_b;
}
function nms_StepSound_func_1144_c($this) {
    return $this.$field_1679_c;
}
function nms_StepSound_func_1145_d($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$1, $rt_s(275)), $this.$field_1678_a));
}
function nms_StepSoundStone() {
    nms_StepSound.call(this);
}
function nms_StepSoundStone__init_(var_0, var_1, var_2) {
    var var_3 = new nms_StepSoundStone();
    nms_StepSoundStone__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_StepSoundStone__init_0($this, $var1, $var2, $var3) {
    nms_StepSound__init_0($this, $var1, $var2, $var3);
}
function nms_StepSoundSand() {
    nms_StepSound.call(this);
}
function nms_StepSoundSand__init_(var_0, var_1, var_2) {
    var var_3 = new nms_StepSoundSand();
    nms_StepSoundSand__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_StepSoundSand__init_0($this, $var1, $var2, $var3) {
    nms_StepSound__init_0($this, $var1, $var2, $var3);
}
function nms_BlockStone() {
    nms_Block.call(this);
}
function nms_BlockStone__init_(var_0, var_1) {
    var var_2 = new nms_BlockStone();
    nms_BlockStone__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockStone__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_rock);
}
function nms_BlockStone_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_cobblestone.$blockID;
}
function nms_BlockGrass() {
    nms_Block.call(this);
}
function nms_BlockGrass__init_(var_0) {
    var var_1 = new nms_BlockGrass();
    nms_BlockGrass__init_0(var_1, var_0);
    return var_1;
}
function nms_BlockGrass__init_0($this, $var1) {
    nms_Block__init_0($this, $var1, nms_Material_ground);
    $this.$blockIndexInTexture = 3;
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockGrass_getBlockTexture($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if ($var5 == 1)
        return 0;
    if (!$var5)
        return 2;
    $var6 = $var1.$getBlockMaterial($var2, $var3 + 1 | 0, $var4);
    return $var6 !== nms_Material_snow && $var6 !== nms_Material_builtSnow ? 3 : 68;
}
function nms_BlockGrass_colorMultiplier($this, $var1, $var2, $var3, $var4) {
    var $var5, $var7, var$7, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$7 = $thread.pop();$var7 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1.$func_4075_a().$func_4069_a($var2, $var4, 1, 1);
        $var5 = $var1.$func_4075_a().$temperature.data[0];
        $var7 = $var1.$func_4075_a().$humidity.data[0];
        if (nms_ColorizerGrass_field_6540_a !== null) {
            $var7 = $var7 * $var5;
            $var2 = (1.0 - $var5) * 255.0 | 0;
            $var3 = (1.0 - $var7) * 255.0 | 0;
            return nms_ColorizerGrass_field_6540_a.data[$var3 << 8 | $var2];
        }
        var$7 = nlea_EaglerAdapterImpl2_loadResourceBytes($rt_s(276));
        $ptr = 1;
    case 1:
        $tmp = nlea_EaglerAdapterImpl2_loadPNG(var$7);
        if ($rt_suspending()) {
            break main;
        }
        $var1 = $tmp;
        nms_ColorizerGrass_field_6540_a = $var1.$data;
        $var7 = $var7 * $var5;
        $var2 = (1.0 - $var5) * 255.0 | 0;
        $var3 = (1.0 - $var7) * 255.0 | 0;
        return nms_ColorizerGrass_field_6540_a.data[$var3 << 8 | $var2];
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var7, var$7, $ptr);
}
function nms_BlockGrass_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var7, $var6, $var8;
    $var7 = $var3 + 1 | 0;
    if (nms_World_getBlockLightValue($var1, $var2, $var7, $var4) < 4 && nms_World_getBlockMaterial($var1, $var2, $var7, $var4).$getCanBlockGrass()) {
        if (ju_Random_nextInt($var5, 4))
            return;
        nms_Block_$callClinit();
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_dirt.$blockID);
    } else if (nms_World_getBlockLightValue($var1, $var2, $var7, $var4) >= 9) {
        $var6 = ($var2 + ju_Random_nextInt($var5, 3) | 0) - 1 | 0;
        $var7 = ($var3 + ju_Random_nextInt($var5, 5) | 0) - 3 | 0;
        $var8 = ($var4 + ju_Random_nextInt($var5, 3) | 0) - 1 | 0;
        $var2 = nms_World_getBlockId($var1, $var6, $var7, $var8);
        nms_Block_$callClinit();
        if ($var2 == nms_Block_dirt.$blockID) {
            $var2 = $var7 + 1 | 0;
            if (nms_World_getBlockLightValue($var1, $var6, $var2, $var8) >= 4 && !nms_World_getBlockMaterial($var1, $var6, $var2, $var8).$getCanBlockGrass())
                nms_World_setBlockWithNotify($var1, $var6, $var7, $var8, nms_Block_grass.$blockID);
        }
    }
}
function nms_BlockGrass_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_dirt.$idDropped(0, $var2);
}
function nms_BlockDirt() {
    nms_Block.call(this);
}
function nms_BlockDirt__init_(var_0, var_1) {
    var var_2 = new nms_BlockDirt();
    nms_BlockDirt__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockDirt__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_ground);
}
function nms_Material() {
    jl_Object.call(this);
    this.$canBurn = 0;
}
var nms_Material_air = null;
var nms_Material_ground = null;
var nms_Material_wood = null;
var nms_Material_rock = null;
var nms_Material_iron = null;
var nms_Material_water = null;
var nms_Material_lava = null;
var nms_Material_leaves = null;
var nms_Material_plants = null;
var nms_Material_sponge = null;
var nms_Material_cloth = null;
var nms_Material_fire = null;
var nms_Material_sand = null;
var nms_Material_circuits = null;
var nms_Material_glass = null;
var nms_Material_tnt = null;
var nms_Material_unused = null;
var nms_Material_ice = null;
var nms_Material_snow = null;
var nms_Material_builtSnow = null;
var nms_Material_cactus = null;
var nms_Material_clay = null;
var nms_Material_pumpkin = null;
var nms_Material_field_4260_x = null;
function nms_Material__init_0() {
    var var_0 = new nms_Material();
    nms_Material__init_(var_0);
    return var_0;
}
function nms_Material__init_($this) {
    return;
}
function nms_Material_getIsLiquid($this) {
    return 0;
}
function nms_Material_func_878_a($this) {
    return 1;
}
function nms_Material_getCanBlockGrass($this) {
    return 1;
}
function nms_Material_func_880_c($this) {
    return 1;
}
function nms_Material_setBurning($this) {
    $this.$canBurn = 1;
    return $this;
}
function nms_Material_getBurning($this) {
    return $this.$canBurn;
}
function nms_Material__clinit_() {
    nms_Material_air = new nms_MaterialTransparent;
    nms_Material_ground = new nms_Material;
    nms_Material_wood = nms_Material_setBurning(new nms_Material);
    nms_Material_rock = new nms_Material;
    nms_Material_iron = new nms_Material;
    nms_Material_water = new nms_MaterialLiquid;
    nms_Material_lava = new nms_MaterialLiquid;
    nms_Material_leaves = nms_Material_setBurning(new nms_Material);
    nms_Material_plants = new nms_MaterialLogic;
    nms_Material_sponge = new nms_Material;
    nms_Material_cloth = nms_Material_setBurning(new nms_Material);
    nms_Material_fire = new nms_MaterialTransparent;
    nms_Material_sand = new nms_Material;
    nms_Material_circuits = new nms_MaterialLogic;
    nms_Material_glass = new nms_Material;
    nms_Material_tnt = nms_Material_setBurning(new nms_Material);
    nms_Material_unused = new nms_Material;
    nms_Material_ice = new nms_Material;
    nms_Material_snow = new nms_MaterialLogic;
    nms_Material_builtSnow = new nms_Material;
    nms_Material_cactus = new nms_Material;
    nms_Material_clay = new nms_Material;
    nms_Material_pumpkin = new nms_Material;
    nms_Material_field_4260_x = new nms_Material;
}
function nms_BlockFlower() {
    nms_Block.call(this);
}
function nms_BlockFlower__init_(var_0, var_1) {
    var var_2 = new nms_BlockFlower();
    nms_BlockFlower__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockFlower__init_0($this, $var1, $var2) {
    nms_Block__init_0($this, $var1, nms_Material_plants);
    $this.$blockIndexInTexture = $var2;
    nms_Block_setTickOnLoad($this, 1);
    nms_Block_setBlockBounds($this, 0.30000001192092896, 0.0, 0.30000001192092896, 0.699999988079071, 0.6000000238418579, 0.699999988079071);
}
function nms_BlockFlower_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return $this.$canThisPlantGrowOnThisBlockID(nms_World_getBlockId($var1, $var2, $var3 - 1 | 0, $var4));
}
function nms_BlockFlower_canThisPlantGrowOnThisBlockID($this, $var1) {
    nms_Block_$callClinit();
    return $var1 != nms_Block_grass.$blockID && $var1 != nms_Block_dirt.$blockID && $var1 != nms_Block_tilledField.$blockID ? 0 : 1;
}
function nms_BlockFlower_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockFlower_func_268_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockFlower_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockFlower_func_268_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockFlower_func_268_h($this, $var1, $var2, $var3, $var4) {
    if (!$this.$canBlockStay($var1, $var2, $var3, $var4)) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockFlower_canBlockStay($this, $var1, $var2, $var3, $var4) {
    return !(nms_World_getBlockLightValue($var1, $var2, $var3, $var4) < 8 && !nms_World_canBlockSeeTheSky($var1, $var2, $var3, $var4)) && $this.$canThisPlantGrowOnThisBlockID(nms_World_getBlockId($var1, $var2, $var3 - 1 | 0, $var4)) ? 1 : 0;
}
function nms_BlockFlower_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockFlower_isOpaqueCube($this) {
    return 0;
}
function nms_BlockFlower_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockFlower_getRenderType($this) {
    return 1;
}
function nms_BlockSapling() {
    nms_BlockFlower.call(this);
}
function nms_BlockSapling__init_(var_0, var_1) {
    var var_2 = new nms_BlockSapling();
    nms_BlockSapling__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockSapling__init_0($this, $var1, $var2) {
    nms_BlockFlower__init_0($this, $var1, $var2);
    nms_Block_setBlockBounds($this, 0.09999999403953552, 0.0, 0.09999999403953552, 0.8999999761581421, 0.800000011920929, 0.8999999761581421);
}
function nms_BlockSapling_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    nms_BlockFlower_func_268_h($this, $var1, $var2, $var3, $var4);
    if (nms_World_getBlockLightValue($var1, $var2, $var3 + 1 | 0, $var4) >= 9 && !ju_Random_nextInt($var5, 5)) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        if ($var6 < 15)
            nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6 + 1 | 0);
        else {
            nms_World_setBlock($var1, $var2, $var3, $var4, 0);
            $var7 = new nms_WorldGenTrees;
            if (!ju_Random_nextInt($var5, 10))
                $var7 = nms_WorldGenBigTree__init_0();
            if (!$var7.$generate($var1, $var5, $var2, $var3, $var4))
                nms_World_setBlock($var1, $var2, $var3, $var4, $this.$blockID);
        }
    }
}
function nms_BlockFluids() {
    nms_Block.call(this);
}
function nms_BlockFluids__init_(var_0, var_1) {
    var var_2 = new nms_BlockFluids();
    nms_BlockFluids__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockFluids__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, (($var2 !== nms_Material_lava ? 12 : 14) * 16 | 0) + 13 | 0, $var2);
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockFluids_func_288_b($var0) {
    if ($var0 >= 8)
        $var0 = 0;
    return ($var0 + 1 | 0) / 9.0;
}
function nms_BlockFluids_getBlockTextureFromSide($this, $var1) {
    return $var1 && $var1 != 1 ? $this.$blockIndexInTexture + 1 | 0 : $this.$blockIndexInTexture;
}
function nms_BlockFluids_func_290_h($this, $var1, $var2, $var3, $var4) {
    return nms_World_getBlockMaterial($var1, $var2, $var3, $var4) === $this.$blockMaterial ? nms_World_getBlockMetadata($var1, $var2, $var3, $var4) : (-1);
}
function nms_BlockFluids_func_289_b($this, $var1, $var2, $var3, $var4) {
    var $var5;
    if ($var1.$getBlockMaterial($var2, $var3, $var4) !== $this.$blockMaterial)
        return (-1);
    $var5 = $var1.$getBlockMetadata($var2, $var3, $var4);
    if ($var5 >= 8)
        $var5 = 0;
    return $var5;
}
function nms_BlockFluids_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockFluids_isOpaqueCube($this) {
    return 0;
}
function nms_BlockFluids_canCollideCheck($this, $var1, $var2) {
    return $var2 && !$var1 ? 1 : 0;
}
function nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = $var1.$getBlockMaterial($var2, $var3, $var4);
    return $var6 === $this.$blockMaterial ? 0 : $var6 === nms_Material_ice ? 0 : $var5 != 1 ? nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) : 1;
}
function nms_BlockFluids_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockFluids_getRenderType($this) {
    return 4;
}
function nms_BlockFluids_idDropped($this, $var1, $var2) {
    return 0;
}
function nms_BlockFluids_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockFluids_func_291_e($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, var$8, var$9, var$10, $var13, var$12, var$13, var$14, $var11, $var12;
    $var5 = nms_Vec3D_createVector(0.0, 0.0, 0.0);
    $var6 = nms_BlockFluids_func_289_b($this, $var1, $var2, $var3, $var4);
    $var7 = 0;
    var$8 = $var2 - 1 | 0;
    var$9 = $var4 - 1 | 0;
    var$10 = $var3 - 1 | 0;
    $var13 = $var6 - 8 | 0;
    var$12 = $var3 - $var3 | 0;
    while ($var7 < 4) {
        var$13 = !$var7 ? var$8 : $var2;
        var$14 = $var7 == 1 ? var$9 : $var4;
        if ($var7 == 2)
            var$13 = var$13 + 1 | 0;
        if ($var7 == 3)
            var$14 = var$14 + 1 | 0;
        $var11 = nms_BlockFluids_func_289_b($this, $var1, var$13, $var3, var$14);
        if ($var11 >= 0) {
            if ($var11 >= 0) {
                $var12 = $var11 - $var6 | 0;
                $var5 = nms_Vec3D_addVector($var5, $rt_imul(var$13 - $var2 | 0, $var12), $rt_imul(var$12, $var12), $rt_imul(var$14 - $var4 | 0, $var12));
            }
        } else if (!$var1.$getBlockMaterial(var$13, $var3, var$14).$func_880_c()) {
            $var12 = nms_BlockFluids_func_289_b($this, $var1, var$13, var$10, var$14);
            if ($var12 >= 0) {
                $var12 = $var12 - $var13 | 0;
                $var5 = nms_Vec3D_addVector($var5, $rt_imul(var$13 - $var2 | 0, $var12), $rt_imul(var$12, $var12), $rt_imul(var$14 - $var4 | 0, $var12));
            }
        }
        $var7 = $var7 + 1 | 0;
    }
    if ($var1.$getBlockMetadata($var2, $var3, $var4) >= 8) {
        $var13 = 0;
        if (nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2, $var3, var$9, 2))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2, $var3, $var4 + 1 | 0, 3)))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, var$8, $var3, $var4, 4)))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2 + 1 | 0, $var3, $var4, 5)))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2, $var3 + 1 | 0, var$9, 2)))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2, $var3 + 1 | 0, $var4 + 1 | 0, 3)))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, var$8, $var3 + 1 | 0, $var4, 4)))
            $var13 = 1;
        if (!(!$var13 && !nms_BlockFluids_shouldSideBeRendered($this, $var1, $var2 + 1 | 0, $var3 + 1 | 0, $var4, 5)))
            $var13 = 1;
        if ($var13)
            $var5 = nms_Vec3D_addVector(nms_Vec3D_normalize($var5), 0.0, (-6.0), 0.0);
    }
    return nms_Vec3D_normalize($var5);
}
function nms_BlockFluids_velocityToAddToEntity($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = nms_BlockFluids_func_291_e($this, $var1, $var2, $var3, $var4);
    $var6.$xCoord = $var6.$xCoord + $var7.$xCoord;
    $var6.$yCoord = $var6.$yCoord + $var7.$yCoord;
    $var6.$zCoord = $var6.$zCoord + $var7.$zCoord;
}
function nms_BlockFluids_tickRate($this) {
    return $this.$blockMaterial === nms_Material_water ? 5 : $this.$blockMaterial !== nms_Material_lava ? 0 : 30;
}
function nms_BlockFluids_getBlockBrightness($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    $var5 = $var1.$getLightBrightness($var2, $var3, $var4);
    $var6 = $var1.$getLightBrightness($var2, $var3 + 1 | 0, $var4);
    if ($var5 > $var6)
        $var6 = $var5;
    return $var6;
}
function nms_BlockFluids_func_234_g($this) {
    return $this.$blockMaterial !== nms_Material_water ? 0 : 1;
}
function nms_BlockFluids_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if ($this.$blockMaterial === nms_Material_water && !ju_Random_nextInt($var5, 64)) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        if ($var6 > 0 && $var6 < 8)
            nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(277), ju_Random_nextFloat($var5) * 0.25 + 0.75, ju_Random_nextFloat($var5) * 1.0 + 0.5);
    }
    if ($this.$blockMaterial === nms_Material_lava) {
        $var6 = $var3 + 1 | 0;
        if (nms_World_getBlockMaterial($var1, $var2, $var6, $var4) === nms_Material_air && !nms_World_isBlockOpaqueCube($var1, $var2, $var6, $var4) && !ju_Random_nextInt($var5, 100))
            nms_World_spawnParticle($var1, $rt_s(278), $var2 + ju_Random_nextFloat($var5), $var3 + $this.$maxY, $var4 + ju_Random_nextFloat($var5), 0.0, 0.0, 0.0);
    }
}
function nms_BlockFluids_func_293_a($var0, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = null;
    if ($var4 === nms_Material_water) {
        nms_Block_$callClinit();
        $var5 = nms_BlockFluids_func_291_e(nms_Block_waterStill, $var0, $var1, $var2, $var3);
    }
    if ($var4 === nms_Material_lava) {
        nms_Block_$callClinit();
        $var5 = nms_BlockFluids_func_291_e(nms_Block_lavaStill, $var0, $var1, $var2, $var3);
    }
    return $var5.$xCoord === 0.0 && $var5.$zCoord === 0.0 ? (-1000.0) : jl_Math_atan2($var5.$zCoord, $var5.$xCoord) - 1.5707963267948966;
}
function nms_BlockFluids_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    nms_BlockFluids_checkForHarden($this, $var1, $var2, $var3, $var4);
}
function nms_BlockFluids_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockFluids_checkForHarden($this, $var1, $var2, $var3, $var4);
}
function nms_BlockFluids_checkForHarden($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID && $this.$blockMaterial === nms_Material_lava) {
        $var5 = 0;
        if (nms_World_getBlockMaterial($var1, $var2, $var3, $var4 - 1 | 0) === nms_Material_water)
            $var5 = 1;
        if (!(!$var5 && nms_World_getBlockMaterial($var1, $var2, $var3, $var4 + 1 | 0) !== nms_Material_water))
            $var5 = 1;
        if (!(!$var5 && nms_World_getBlockMaterial($var1, $var2 - 1 | 0, $var3, $var4) !== nms_Material_water))
            $var5 = 1;
        if (!(!$var5 && nms_World_getBlockMaterial($var1, $var2 + 1 | 0, $var3, $var4) !== nms_Material_water))
            $var5 = 1;
        if (!(!$var5 && nms_World_getBlockMaterial($var1, $var2, $var3 + 1 | 0, $var4) !== nms_Material_water))
            $var5 = 1;
        if ($var5) {
            $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
            if (!$var6) {
                nms_Block_$callClinit();
                nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_obsidian.$blockID);
            } else if ($var6 <= 4) {
                nms_Block_$callClinit();
                nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_cobblestone.$blockID);
            }
            nms_BlockFluids_func_292_i($this, $var1, $var2, $var3, $var4);
        }
    }
}
function nms_BlockFluids_func_292_i($this, $var1, $var2, $var3, $var4) {
    var $var5, var$6, var$7, var$8;
    nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(279), 0.5, 2.5999999046325684 + (ju_Random_nextFloat($var1.$rand1) - ju_Random_nextFloat($var1.$rand1)) * 0.800000011920929);
    $var5 = 0;
    var$6 = $var2;
    var$7 = $var3 + 1.2;
    var$8 = $var4;
    while ($var5 < 8) {
        nms_World_spawnParticle($var1, $rt_s(280), var$6 + jl_Math_random(), var$7, var$8 + jl_Math_random(), 0.0, 0.0, 0.0);
        $var5 = $var5 + 1 | 0;
    }
}
function nms_BlockFlowing() {
    var a = this; nms_BlockFluids.call(a);
    a.$field_460_a = 0;
    a.$field_459_b = null;
    a.$field_461_c = null;
}
function nms_BlockFlowing__init_(var_0, var_1) {
    var var_2 = new nms_BlockFlowing();
    nms_BlockFlowing__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockFlowing__init_0($this, $var1, $var2) {
    nms_BlockFluids__init_0($this, $var1, $var2);
    $this.$field_460_a = 0;
    $this.$field_459_b = $rt_createBooleanArray(4);
    $this.$field_461_c = $rt_createIntArray(4);
}
function nms_BlockFlowing_func_15233_j($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    nms_World_setBlockAndMetadata($var1, $var2, $var3, $var4, $this.$blockID + 1 | 0, $var5);
    nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
    nms_World_func_665_h($var1, $var2, $var3, $var4);
}
function nms_BlockFlowing_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, $var11, $var13, $var10;
    $var6 = nms_BlockFluids_func_290_h($this, $var1, $var2, $var3, $var4);
    $var7 = 1;
    if ($this.$blockMaterial === nms_Material_lava && !$var1.$worldProvider.$field_6479_d)
        $var7 = 2;
    $var8 = 1;
    if ($var6 <= 0)
        nms_BlockFlowing_func_15233_j($this, $var1, $var2, $var3, $var4);
    else {
        $this.$field_460_a = 0;
        $var9 = nms_BlockFlowing_func_296_f($this, $var1, $var2, $var3, $var4 + 1 | 0, nms_BlockFlowing_func_296_f($this, $var1, $var2, $var3, $var4 - 1 | 0, nms_BlockFlowing_func_296_f($this, $var1, $var2 + 1 | 0, $var3, $var4, nms_BlockFlowing_func_296_f($this, $var1, $var2 - 1 | 0, $var3, $var4, (-100)))));
        $var11 = $var9 + $var7 | 0;
        if (!($var11 < 8 && $var9 >= 0))
            $var11 = (-1);
        $var9 = $var3 + 1 | 0;
        if (nms_BlockFluids_func_290_h($this, $var1, $var2, $var9, $var4) >= 0) {
            $var11 = nms_BlockFluids_func_290_h($this, $var1, $var2, $var9, $var4);
            if ($var11 < 8)
                $var11 = $var11 + 8 | 0;
        }
        if ($this.$field_460_a >= 2 && $this.$blockMaterial === nms_Material_water) {
            $var9 = $var3 - 1 | 0;
            if (nms_World_isBlockOpaqueCube($var1, $var2, $var9, $var4))
                $var11 = 0;
            else if (nms_World_getBlockMaterial($var1, $var2, $var9, $var4) === $this.$blockMaterial && !nms_World_getBlockMetadata($var1, $var2, $var3, $var4))
                $var11 = 0;
        }
        if ($this.$blockMaterial === nms_Material_lava && $var6 < 8 && $var11 < 8 && $var11 > $var6 && ju_Random_nextInt($var5, 4)) {
            $var8 = 0;
            $var11 = $var6;
        }
        if ($var11 == $var6) {
            if (!$var8)
                $var11 = $var6;
            else {
                nms_BlockFlowing_func_15233_j($this, $var1, $var2, $var3, $var4);
                $var11 = $var6;
            }
        } else if ($var11 < 0)
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        else {
            nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var11);
            nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        }
        $var6 = $var11;
    }
    $var9 = $var3 - 1 | 0;
    if (nms_BlockFlowing_func_298_m($this, $var1, $var2, $var9, $var4)) {
        if ($var6 >= 8)
            nms_World_setBlockAndMetadataWithNotify($var1, $var2, $var9, $var4, $this.$blockID, $var6);
        else
            nms_World_setBlockAndMetadataWithNotify($var1, $var2, $var9, $var4, $this.$blockID, $var6 + 8 | 0);
    } else if ($var6 >= 0 && !($var6 && !nms_BlockFlowing_func_295_l($this, $var1, $var2, $var9, $var4))) {
        $var13 = nms_BlockFlowing_func_297_k($this, $var1, $var2, $var3, $var4);
        $var10 = $var6 + $var7 | 0;
        if ($var6 >= 8)
            $var10 = 1;
        if ($var10 >= 8)
            return;
        $var13 = $var13.data;
        if ($var13[0])
            nms_BlockFlowing_func_299_g($this, $var1, $var2 - 1 | 0, $var3, $var4, $var10);
        if ($var13[1])
            nms_BlockFlowing_func_299_g($this, $var1, $var2 + 1 | 0, $var3, $var4, $var10);
        if ($var13[2])
            nms_BlockFlowing_func_299_g($this, $var1, $var2, $var3, $var4 - 1 | 0, $var10);
        if ($var13[3])
            nms_BlockFlowing_func_299_g($this, $var1, $var2, $var3, $var4 + 1 | 0, $var10);
    }
}
function nms_BlockFlowing_func_299_g($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if (nms_BlockFlowing_func_298_m($this, $var1, $var2, $var3, $var4)) {
        $var6 = nms_World_getBlockId($var1, $var2, $var3, $var4);
        if ($var6 > 0) {
            if ($this.$blockMaterial === nms_Material_lava)
                nms_BlockFluids_func_292_i($this, $var1, $var2, $var3, $var4);
            else {
                nms_Block_$callClinit();
                nms_Block_blocksList.data[$var6].$dropBlockAsItem($var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
            }
        }
        nms_World_setBlockAndMetadataWithNotify($var1, $var2, $var3, $var4, $this.$blockID, $var5);
    }
}
function nms_BlockFlowing_func_300_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, $var12, var$20;
    $var7 = 1000;
    $var8 = 0;
    var$9 = $rt_compare($var6, 1);
    var$10 = $rt_compare($var6, 3);
    var$11 = $rt_compare($var6, 2);
    var$12 = $var2 - 1 | 0;
    var$13 = $var4 - 1 | 0;
    var$14 = $var3 - 1 | 0;
    var$15 = $rt_compare($var5, 4);
    var$16 = $var5 + 1 | 0;
    while ($var8 < 4) {
        a: {
            if (!$var8 && !var$9)
                break a;
            var$17 = $rt_compare($var8, 1);
            if (!var$17 && !$var6)
                break a;
            var$18 = $rt_compare($var8, 2);
            if (!var$18 && !var$10)
                break a;
            $var12 = $rt_compare($var8, 3);
            if (!$var12 && !var$11)
                break a;
            var$20 = !$var8 ? var$12 : $var2;
            if (!var$17)
                var$20 = var$20 + 1 | 0;
            var$17 = !var$18 ? var$13 : $var4;
            if (!$var12)
                var$17 = var$17 + 1 | 0;
            if (nms_BlockFlowing_func_295_l($this, $var1, var$20, $var3, var$17))
                break a;
            if (nms_World_getBlockMaterial($var1, var$20, $var3, var$17) === $this.$blockMaterial && !nms_World_getBlockMetadata($var1, var$20, $var3, var$17))
                break a;
            if (!nms_BlockFlowing_func_295_l($this, $var1, var$20, var$14, var$17))
                return $var5;
            if (var$15 >= 0)
                break a;
            $var12 = nms_BlockFlowing_func_300_a($this, $var1, var$20, $var3, var$17, var$16, $var8);
            if ($var12 >= $var7)
                break a;
            $var7 = $var12;
        }
        $var8 = $var8 + 1 | 0;
    }
    return $var7;
}
function nms_BlockFlowing_func_297_k($this, $var1, $var2, $var3, $var4) {
    var $var5, var$6, var$7, var$8, var$9, var$10, $var6, var$12;
    $var5 = 0;
    var$6 = $var2 - 1 | 0;
    var$7 = $var4 - 1 | 0;
    var$8 = $var3 - 1 | 0;
    while ($var5 < 4) {
        $this.$field_461_c.data[$var5] = 1000;
        var$9 = !$var5 ? var$6 : $var2;
        if ($var5 == 1)
            var$9 = var$9 + 1 | 0;
        var$10 = $var5 == 2 ? var$7 : $var4;
        if ($var5 == 3)
            var$10 = var$10 + 1 | 0;
        if (!nms_BlockFlowing_func_295_l($this, $var1, var$9, $var3, var$10) && !(nms_World_getBlockMaterial($var1, var$9, $var3, var$10) === $this.$blockMaterial && !nms_World_getBlockMetadata($var1, var$9, $var3, var$10))) {
            if (!nms_BlockFlowing_func_295_l($this, $var1, var$9, var$8, var$10))
                $this.$field_461_c.data[$var5] = 0;
            else
                $this.$field_461_c.data[$var5] = nms_BlockFlowing_func_300_a($this, $var1, var$9, $var3, var$10, 1, $var5);
        }
        $var5 = $var5 + 1 | 0;
    }
    $var2 = $this.$field_461_c.data[0];
    $var6 = 1;
    while ($var6 < 4) {
        if ($this.$field_461_c.data[$var6] < $var2)
            $var2 = $this.$field_461_c.data[$var6];
        $var6 = $var6 + 1 | 0;
    }
    $var3 = 0;
    while ($var3 < 4) {
        var$12 = $this.$field_459_b;
        $var4 = $this.$field_461_c.data[$var3] != $var2 ? 0 : 1;
        var$12.data[$var3] = $var4;
        $var3 = $var3 + 1 | 0;
    }
    return $this.$field_459_b;
}
function nms_BlockFlowing_func_295_l($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockId($var1, $var2, $var3, $var4);
    nms_Block_$callClinit();
    if ($var5 != nms_Block_doorWood.$blockID && $var5 != nms_Block_doorSteel.$blockID && $var5 != nms_Block_signPost.$blockID && $var5 != nms_Block_ladder.$blockID && $var5 != nms_Block_reed.$blockID) {
        if (!$var5)
            return 0;
        return nms_Block_blocksList.data[$var5].$blockMaterial.$func_878_a();
    }
    return 1;
}
function nms_BlockFlowing_func_296_f($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_BlockFluids_func_290_h($this, $var1, $var2, $var3, $var4);
    if ($var6 < 0)
        return $var5;
    if (!$var6)
        $this.$field_460_a = $this.$field_460_a + 1 | 0;
    if ($var6 >= 8)
        $var6 = 0;
    if ($var5 >= 0 && $var6 >= $var5)
        $var6 = $var5;
    return $var6;
}
function nms_BlockFlowing_func_298_m($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockMaterial($var1, $var2, $var3, $var4);
    return $var5 === $this.$blockMaterial ? 0 : $var5 === nms_Material_lava ? 0 : nms_BlockFlowing_func_295_l($this, $var1, $var2, $var3, $var4) ? 0 : 1;
}
function nms_BlockFlowing_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    nms_BlockFluids_checkForHarden($this, $var1, $var2, $var3, $var4);
    if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID)
        nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
}
function nms_BlockStationary() {
    nms_BlockFluids.call(this);
}
function nms_BlockStationary__init_(var_0, var_1) {
    var var_2 = new nms_BlockStationary();
    nms_BlockStationary__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockStationary__init_0($this, $var1, $var2) {
    nms_BlockFluids__init_0($this, $var1, $var2);
    nms_Block_setTickOnLoad($this, 0);
    if ($var2 === nms_Material_lava)
        nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockStationary_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6;
    nms_BlockFluids_checkForHarden($this, $var1, $var2, $var3, $var4);
    if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID) {
        var$6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        $var1.$field_1043_h = 1;
        nms_World_setBlockAndMetadata($var1, $var2, $var3, $var4, $this.$blockID - 1 | 0, var$6);
        nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
        nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID - 1 | 0);
        $var1.$field_1043_h = 0;
    }
}
function nms_BlockStationary_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8;
    a: {
        b: {
            if ($this.$blockMaterial === nms_Material_lava) {
                $var6 = ju_Random_nextInt($var5, 3);
                $var7 = 0;
                while (true) {
                    if ($var7 >= $var6)
                        break b;
                    c: {
                        $var2 = $var2 + (ju_Random_nextInt($var5, 3) - 1 | 0) | 0;
                        $var3 = $var3 + 1 | 0;
                        $var4 = $var4 + (ju_Random_nextInt($var5, 3) - 1 | 0) | 0;
                        $var8 = nms_World_getBlockId($var1, $var2, $var3, $var4);
                        if ($var8) {
                            nms_Block_$callClinit();
                            if (!nms_Block_blocksList.data[$var8].$blockMaterial.$func_880_c())
                                break c;
                            else
                                return;
                        }
                        if (nms_BlockStationary_func_301_k($this, $var1, $var2 - 1 | 0, $var3, $var4))
                            break a;
                        if (nms_BlockStationary_func_301_k($this, $var1, $var2 + 1 | 0, $var3, $var4))
                            break a;
                        if (nms_BlockStationary_func_301_k($this, $var1, $var2, $var3, $var4 - 1 | 0))
                            break a;
                        if (nms_BlockStationary_func_301_k($this, $var1, $var2, $var3, $var4 + 1 | 0))
                            break a;
                        if (nms_BlockStationary_func_301_k($this, $var1, $var2, $var3 - 1 | 0, $var4))
                            break a;
                        if (nms_BlockStationary_func_301_k($this, $var1, $var2, $var3 + 1 | 0, $var4))
                            break a;
                    }
                    $var7 = $var7 + 1 | 0;
                }
            }
        }
        return;
    }
    nms_Block_$callClinit();
    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_fire.$blockID);
}
function nms_BlockStationary_func_301_k($this, $var1, $var2, $var3, $var4) {
    return nms_World_getBlockMaterial($var1, $var2, $var3, $var4).$canBurn;
}
function nms_BlockSand() {
    nms_Block.call(this);
}
var nms_BlockSand_fallInstantly = 0;
function nms_BlockSand__init_(var_0, var_1) {
    var var_2 = new nms_BlockSand();
    nms_BlockSand__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockSand__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_sand);
}
function nms_BlockSand_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
}
function nms_BlockSand_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
}
function nms_BlockSand_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$6 = nms_World_getBlockId($var1, $var2, $var3 - 1 | 0, $var4);
    if (!var$6)
        var$6 = 1;
    else {
        nms_Block_$callClinit();
        if (var$6 == nms_Block_fire.$blockID)
            var$6 = 1;
        else {
            $var5 = nms_Block_blocksList.data[var$6].$blockMaterial;
            var$6 = $var5 === nms_Material_water ? 1 : $var5 !== nms_Material_lava ? 0 : 1;
        }
    }
    a: {
        if (var$6 && $var3 >= 0) {
            $var5 = new nms_EntityFallingSand;
            var$7 = $var2 + 0.5;
            var$8 = $var3 + 0.5;
            var$9 = $var4 + 0.5;
            $var2 = $this.$blockID;
            nms_Entity__init_($var5, $var1);
            $var5.$field_798_b = 0;
            $var5.$field_799_a = $var2;
            $var5.$field_618_ad = 1;
            nms_Entity_setSize($var5, 0.9800000190734863, 0.9800000190734863);
            $var5.$yOffset = $var5.$height / 2.0;
            var$10 = var$7;
            var$11 = var$8;
            var$12 = var$9;
            nms_Entity_setPosition($var5, var$10, var$11, var$12);
            $var5.$motionX = 0.0;
            $var5.$motionY = 0.0;
            $var5.$motionZ = 0.0;
            $var5.$entityWalks = 0;
            $var5.$prevPosX = var$10;
            $var5.$prevPosY = var$11;
            $var5.$prevPosZ = var$12;
            if (!nms_BlockSand_fallInstantly)
                nms_World_entityJoinedWorld($var1, $var5);
            else
                while (true) {
                    if ($var5.$isDead)
                        break a;
                    nms_EntityFallingSand_onUpdate($var5);
                }
        }
    }
}
function nms_BlockSand_tickRate($this) {
    return 3;
}
function nms_BlockSand__clinit_() {
    nms_BlockSand_fallInstantly = 0;
}
function nms_BlockGravel() {
    nms_BlockSand.call(this);
}
function nms_BlockGravel__init_(var_0, var_1) {
    var var_2 = new nms_BlockGravel();
    nms_BlockGravel__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockGravel__init_0($this, $var1, $var2) {
    nms_BlockSand__init_0($this, $var1, $var2);
}
function nms_BlockGravel_idDropped($this, $var1, $var2) {
    if (ju_Random_nextInt($var2, 10))
        $var1 = $this.$blockID;
    else {
        nms_Item_$callClinit();
        $var1 = nms_Item_flint.$shiftedIndex;
    }
    return $var1;
}
function nms_BlockOre() {
    nms_Block.call(this);
}
function nms_BlockOre__init_(var_0, var_1) {
    var var_2 = new nms_BlockOre();
    nms_BlockOre__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockOre__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_rock);
}
function nms_BlockOre_idDropped($this, $var1, $var2) {
    $var1 = $this.$blockID;
    nms_Block_$callClinit();
    if ($var1 == nms_Block_oreCoal.$blockID) {
        nms_Item_$callClinit();
        $var1 = nms_Item_coal.$shiftedIndex;
    } else if ($this.$blockID != nms_Block_oreDiamond.$blockID)
        $var1 = $this.$blockID;
    else {
        nms_Item_$callClinit();
        $var1 = nms_Item_diamond.$shiftedIndex;
    }
    return $var1;
}
function nms_BlockOre_quantityDropped($this, $var1) {
    return 1;
}
function nms_BlockLog() {
    nms_Block.call(this);
}
function nms_BlockLog__init_(var_0) {
    var var_1 = new nms_BlockLog();
    nms_BlockLog__init_0(var_1, var_0);
    return var_1;
}
function nms_BlockLog__init_0($this, $var1) {
    nms_Block__init_0($this, $var1, nms_Material_wood);
    $this.$blockIndexInTexture = 20;
}
function nms_BlockLog_quantityDropped($this, $var1) {
    return 1;
}
function nms_BlockLog_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_wood.$blockID;
}
function nms_BlockLog_getBlockTextureFromSide($this, $var1) {
    return $var1 == 1 ? 21 : $var1 ? 20 : 21;
}
function nms_BlockLeavesBase() {
    nms_Block.call(this);
    this.$graphicsLevel = 0;
}
function nms_BlockLeavesBase_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = $var1.$getBlockId($var2, $var3, $var4);
    return !$this.$graphicsLevel && $var6 == $this.$blockID ? 0 : nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockLeaves() {
    var a = this; nms_BlockLeavesBase.call(a);
    a.$baseIndexInPNG = 0;
    a.$field_464_c = 0;
}
function nms_BlockLeaves__init_(var_0, var_1) {
    var var_2 = new nms_BlockLeaves();
    nms_BlockLeaves__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockLeaves__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_leaves);
    $this.$graphicsLevel = 0;
    $this.$field_464_c = 0;
    $this.$baseIndexInPNG = $var2;
}
function nms_BlockLeaves_colorMultiplier($this, $var1, $var2, $var3, $var4) {
    var $var5, $var7, var$7, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$7 = $thread.pop();$var7 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1.$func_4075_a().$func_4069_a($var2, $var4, 1, 1);
        $var5 = $var1.$func_4075_a().$temperature.data[0];
        $var7 = $var1.$func_4075_a().$humidity.data[0];
        if (nms_ColorizerFoliage_field_6529_a !== null) {
            $var7 = $var7 * $var5;
            $var2 = (1.0 - $var5) * 255.0 | 0;
            $var3 = (1.0 - $var7) * 255.0 | 0;
            return nms_ColorizerFoliage_field_6529_a.data[$var3 << 8 | $var2];
        }
        var$7 = nlea_EaglerAdapterImpl2_loadResourceBytes($rt_s(281));
        $ptr = 1;
    case 1:
        $tmp = nlea_EaglerAdapterImpl2_loadPNG(var$7);
        if ($rt_suspending()) {
            break main;
        }
        $var1 = $tmp;
        nms_ColorizerFoliage_field_6529_a = $var1.$data;
        $var7 = $var7 * $var5;
        $var2 = (1.0 - $var5) * 255.0 | 0;
        $var3 = (1.0 - $var7) * 255.0 | 0;
        return nms_ColorizerFoliage_field_6529_a.data[$var3 << 8 | $var2];
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var7, var$7, $ptr);
}
function nms_BlockLeaves_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_BlockLeaves_func_6361_f($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        if ($var6 && $var6 == ($var5 - 1 | 0))
            nms_BlockLeaves_func_308_h($this, $var1, $var2, $var3, $var4);
    }
}
function nms_BlockLeaves_func_308_h($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_BlockLeaves_func_6362_g($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    $var6 = nms_World_getBlockId($var1, $var2, $var3, $var4);
    nms_Block_$callClinit();
    if ($var6 == nms_Block_wood.$blockID)
        return 16;
    if ($var6 == $this.$blockID) {
        $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        if ($var7 && $var7 > $var5)
            return $var7;
    }
    return $var5;
}
function nms_BlockLeaves_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_BlockLeaves_quantityDropped($this, $var1) {
    return ju_Random_nextInt($var1, 20) ? 0 : 1;
}
function nms_BlockLeaves_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_sapling.$blockID;
}
function nms_BlockLeaves_isOpaqueCube($this) {
    return $this.$graphicsLevel ? 0 : 1;
}
function nms_BlockLeaves_setGraphicsLevel($this, $var1) {
    $this.$graphicsLevel = $var1;
    $this.$blockIndexInTexture = $this.$baseIndexInPNG + (!$var1 ? 1 : 0) | 0;
}
function nms_BlockLeaves_onEntityWalking($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_BlockSponge() {
    nms_Block.call(this);
}
function nms_BlockSponge__init_(var_0) {
    var var_1 = new nms_BlockSponge();
    nms_BlockSponge__init_0(var_1, var_0);
    return var_1;
}
function nms_BlockSponge__init_0($this, $var1) {
    nms_Block__init_0($this, $var1, nms_Material_sponge);
    $this.$blockIndexInTexture = 48;
}
function nms_BlockSponge_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    var $var6, var$6, var$7, var$8, $var7, $var8;
    $var6 = $var2 - 2 | 0;
    var$6 = $var2 + 2 | 0;
    var$7 = $var3 - 2 | 0;
    $var3 = $var3 + 2 | 0;
    var$8 = $var4 - 2 | 0;
    $var4 = $var4 + 2 | 0;
    while ($var6 <= var$6) {
        $var7 = var$7;
        while ($var7 <= $var3) {
            $var8 = var$8;
            while ($var8 <= $var4) {
                nms_World_getBlockMaterial($var1, $var6, $var7, $var8);
                $var8 = $var8 + 1 | 0;
            }
            $var7 = $var7 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_BlockSponge_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    var $var6, var$6, var$7, var$8, var$9, $var7, $var8;
    $var6 = $var2 - 2 | 0;
    var$6 = $var2 + 2 | 0;
    var$7 = $var3 - 2 | 0;
    var$8 = $var3 + 2 | 0;
    var$9 = $var4 - 2 | 0;
    $var2 = $var4 + 2 | 0;
    while ($var6 <= var$6) {
        $var7 = var$7;
        while ($var7 <= var$8) {
            $var8 = var$9;
            while ($var8 <= $var2) {
                nms_World_notifyBlocksOfNeighborChange($var1, $var6, $var7, $var8, nms_World_getBlockId($var1, $var6, $var7, $var8));
                $var8 = $var8 + 1 | 0;
            }
            $var7 = $var7 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_BlockBreakable() {
    nms_Block.call(this);
    this.$field_6363_a = 0;
}
function nms_BlockBreakable__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_BlockBreakable();
    nms_BlockBreakable__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_BlockBreakable__init_0($this, $var1, $var2, $var3, $var4) {
    nms_Block__init_2($this, $var1, $var2, $var3);
    $this.$field_6363_a = $var4;
}
function nms_BlockBreakable_isOpaqueCube($this) {
    return 0;
}
function nms_BlockBreakable_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = $var1.$getBlockId($var2, $var3, $var4);
    return !$this.$field_6363_a && $var6 == $this.$blockID ? 0 : nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockGlass() {
    nms_BlockBreakable.call(this);
}
function nms_BlockGlass__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_BlockGlass();
    nms_BlockGlass__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_BlockGlass__init_0($this, $var1, $var2, $var3, $var4) {
    nms_BlockBreakable__init_0($this, $var1, $var2, $var3, $var4);
}
function nms_BlockGlass_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockMushroom() {
    nms_BlockFlower.call(this);
}
function nms_BlockMushroom__init_(var_0, var_1) {
    var var_2 = new nms_BlockMushroom();
    nms_BlockMushroom__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockMushroom__init_0($this, $var1, $var2) {
    nms_BlockFlower__init_0($this, $var1, $var2);
    nms_Block_setBlockBounds($this, 0.30000001192092896, 0.0, 0.30000001192092896, 0.699999988079071, 0.4000000059604645, 0.699999988079071);
}
function nms_BlockMushroom_canThisPlantGrowOnThisBlockID($this, $var1) {
    nms_Block_$callClinit();
    return nms_Block_opaqueCubeLookup.data[$var1];
}
function nms_BlockMushroom_canBlockStay($this, $var1, $var2, $var3, $var4) {
    return nms_World_getBlockLightValue($var1, $var2, $var3, $var4) <= 13 && nms_BlockMushroom_canThisPlantGrowOnThisBlockID($this, nms_World_getBlockId($var1, $var2, $var3 - 1 | 0, $var4)) ? 1 : 0;
}
function nms_BlockOreBlock() {
    nms_Block.call(this);
}
function nms_BlockOreBlock__init_(var_0, var_1) {
    var var_2 = new nms_BlockOreBlock();
    nms_BlockOreBlock__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockOreBlock__init_0($this, $var1, $var2) {
    nms_Block__init_0($this, $var1, nms_Material_iron);
    $this.$blockIndexInTexture = $var2;
}
function nms_BlockOreBlock_getBlockTextureFromSide($this, $var1) {
    return $this.$blockIndexInTexture - 16 | 0;
}
function nms_BlockStep() {
    nms_Block.call(this);
    this.$field_469_a = 0;
}
function nms_BlockStep__init_(var_0, var_1) {
    var var_2 = new nms_BlockStep();
    nms_BlockStep__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockStep__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, 6, nms_Material_rock);
    $this.$field_469_a = $var2;
    if (!$var2)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.5, 1.0);
    nms_Block_setLightOpacity($this, 255);
}
function nms_BlockStep_getBlockTextureFromSide($this, $var1) {
    return $var1 > 1 ? 5 : 6;
}
function nms_BlockStep_isOpaqueCube($this) {
    return $this.$field_469_a;
}
function nms_BlockStep_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    nms_Block_$callClinit();
}
function nms_BlockStep_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    var var$5;
    nms_Block_$callClinit();
    var$5 = $var3 - 1 | 0;
    if (nms_World_getBlockId($var1, $var2, var$5, $var4) == nms_Block_stairSingle.$blockID) {
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        nms_World_setBlockWithNotify($var1, $var2, var$5, $var4, nms_Block_stairDouble.$blockID);
    }
}
function nms_BlockStep_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_stairSingle.$blockID;
}
function nms_BlockStep_renderAsNormalBlock($this) {
    return $this.$field_469_a;
}
function nms_BlockStep_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    nms_Block_$callClinit();
    if ($this !== nms_Block_stairSingle)
        nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5);
    return $var5 == 1 ? 1 : !nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) ? 0 : !$var5 ? 1 : $var1.$getBlockId($var2, $var3, $var4) == $this.$blockID ? 0 : 1;
}
function nms_BlockTNT() {
    nms_Block.call(this);
}
function nms_BlockTNT__init_(var_0, var_1) {
    var var_2 = new nms_BlockTNT();
    nms_BlockTNT__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockTNT__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_tnt);
}
function nms_BlockTNT_getBlockTextureFromSide($this, $var1) {
    return !$var1 ? $this.$blockIndexInTexture + 2 | 0 : $var1 != 1 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture + 1 | 0;
}
function nms_BlockTNT_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    if ($var5 > 0) {
        nms_Block_$callClinit();
        if (nms_Block_blocksList.data[$var5].$canProvidePower() && nms_World_isBlockIndirectlyGettingPowered($var1, $var2, $var3, $var4)) {
            nms_BlockTNT_onBlockDestroyedByPlayer($this, $var1, $var2, $var3, $var4, 0);
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        }
    }
}
function nms_BlockTNT_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockTNT_onBlockDestroyedByExplosion($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_EntityTNTPrimed__init_($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5);
    $var5.$fuse = ju_Random_nextInt($var1.$rand1, $var5.$fuse / 4 | 0) + ($var5.$fuse / 8 | 0) | 0;
    nms_World_entityJoinedWorld($var1, $var5);
}
function nms_BlockTNT_onBlockDestroyedByPlayer($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_EntityTNTPrimed__init_($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5);
    nms_World_entityJoinedWorld($var1, $var6);
    nms_World_playSoundAtEntity($var1, $var6, $rt_s(282), 1.0, 1.0);
}
function nms_BlockBookshelf() {
    nms_Block.call(this);
}
function nms_BlockBookshelf__init_(var_0, var_1) {
    var var_2 = new nms_BlockBookshelf();
    nms_BlockBookshelf__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockBookshelf__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_wood);
}
function nms_BlockBookshelf_getBlockTextureFromSide($this, $var1) {
    return $var1 > 1 ? $this.$blockIndexInTexture : 4;
}
function nms_BlockBookshelf_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockObsidian() {
    nms_BlockStone.call(this);
}
function nms_BlockObsidian__init_(var_0, var_1) {
    var var_2 = new nms_BlockObsidian();
    nms_BlockObsidian__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockObsidian__init_0($this, $var1, $var2) {
    nms_BlockStone__init_0($this, $var1, $var2);
}
function nms_BlockObsidian_quantityDropped($this, $var1) {
    return 1;
}
function nms_BlockObsidian_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_obsidian.$blockID;
}
function nms_BlockTorch() {
    nms_Block.call(this);
}
function nms_BlockTorch__init_(var_0, var_1) {
    var var_2 = new nms_BlockTorch();
    nms_BlockTorch__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockTorch__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_circuits);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockTorch_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockTorch_isOpaqueCube($this) {
    return 0;
}
function nms_BlockTorch_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockTorch_getRenderType($this) {
    return 2;
}
function nms_BlockTorch_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4);
}
function nms_BlockTorch_onBlockPlaced($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var5 == 1 && nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4))
        $var6 = 5;
    if ($var5 == 2 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        $var6 = 4;
    if ($var5 == 3 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        $var6 = 3;
    if ($var5 == 4 && nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        $var6 = 2;
    if ($var5 == 5 && nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        $var6 = 1;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6);
}
function nms_BlockTorch_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    if (!nms_World_getBlockMetadata($var1, $var2, $var3, $var4))
        $this.$onBlockAdded($var1, $var2, $var3, $var4);
}
function nms_BlockTorch_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    if (nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 1);
    else if (nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 2);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 3);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 4);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 5);
    nms_BlockTorch_func_271_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockTorch_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    if (nms_BlockTorch_func_271_h($this, $var1, $var2, $var3, $var4)) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        $var7 = 0;
        if (!nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) && $var6 == 1)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) && $var6 == 2)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) && $var6 == 3)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0) && $var6 == 4)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4) && $var6 == 5)
            $var7 = 1;
        if ($var7) {
            nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        }
    }
}
function nms_BlockTorch_func_271_h($this, $var1, $var2, $var3, $var4) {
    if (nms_BlockTorch_canPlaceBlockAt($this, $var1, $var2, $var3, $var4))
        return 1;
    nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    return 0;
}
function nms_BlockTorch_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4) & 7;
    if ($var7 == 1)
        nms_Block_setBlockBounds($this, 0.0, 0.20000000298023224, 0.3499999940395355, 0.30000001192092896, 0.800000011920929, 0.6499999761581421);
    else if ($var7 == 2)
        nms_Block_setBlockBounds($this, 0.699999988079071, 0.20000000298023224, 0.3499999940395355, 1.0, 0.800000011920929, 0.6499999761581421);
    else if ($var7 == 3)
        nms_Block_setBlockBounds($this, 0.3499999940395355, 0.20000000298023224, 0.0, 0.6499999761581421, 0.800000011920929, 0.30000001192092896);
    else if ($var7 != 4)
        nms_Block_setBlockBounds($this, 0.4000000059604645, 0.0, 0.4000000059604645, 0.6000000238418579, 0.6000000238418579, 0.6000000238418579);
    else
        nms_Block_setBlockBounds($this, 0.3499999940395355, 0.20000000298023224, 0.699999988079071, 0.6499999761581421, 0.800000011920929, 1.0);
    return nms_Block_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_BlockTorch_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var9, $var11, $var15, $var13;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = $var2 + 0.5;
    $var9 = $var3 + 0.699999988079071;
    $var11 = $var4 + 0.5;
    if ($var6 == 1) {
        $var15 = $var7 - 0.27000001072883606;
        $var13 = $var9 + 0.2199999988079071;
        nms_World_spawnParticle($var1, $rt_s(283), $var15, $var13, $var11, 0.0, 0.0, 0.0);
        nms_World_spawnParticle($var1, $rt_s(284), $var15, $var13, $var11, 0.0, 0.0, 0.0);
    } else if ($var6 == 2) {
        $var15 = $var7 + 0.27000001072883606;
        $var13 = $var9 + 0.2199999988079071;
        nms_World_spawnParticle($var1, $rt_s(283), $var15, $var13, $var11, 0.0, 0.0, 0.0);
        nms_World_spawnParticle($var1, $rt_s(284), $var15, $var13, $var11, 0.0, 0.0, 0.0);
    } else if ($var6 == 3) {
        $var13 = $var9 + 0.2199999988079071;
        $var15 = $var11 - 0.27000001072883606;
        nms_World_spawnParticle($var1, $rt_s(283), $var7, $var13, $var15, 0.0, 0.0, 0.0);
        nms_World_spawnParticle($var1, $rt_s(284), $var7, $var13, $var15, 0.0, 0.0, 0.0);
    } else if ($var6 != 4) {
        nms_World_spawnParticle($var1, $rt_s(283), $var7, $var9, $var11, 0.0, 0.0, 0.0);
        nms_World_spawnParticle($var1, $rt_s(284), $var7, $var9, $var11, 0.0, 0.0, 0.0);
    } else {
        $var13 = $var9 + 0.2199999988079071;
        $var15 = $var11 + 0.27000001072883606;
        nms_World_spawnParticle($var1, $rt_s(283), $var7, $var13, $var15, 0.0, 0.0, 0.0);
        nms_World_spawnParticle($var1, $rt_s(284), $var7, $var13, $var15, 0.0, 0.0, 0.0);
    }
}
function nms_BlockFire() {
    var a = this; nms_Block.call(a);
    a.$chanceToEncourageFire = null;
    a.$abilityToCatchFire = null;
}
function nms_BlockFire__init_(var_0, var_1) {
    var var_2 = new nms_BlockFire();
    nms_BlockFire__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockFire__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_fire);
    $this.$chanceToEncourageFire = $rt_createIntArray(256);
    $this.$abilityToCatchFire = $rt_createIntArray(256);
    nms_BlockFire_setBurnRate($this, nms_Block_planks.$blockID, 5, 20);
    nms_BlockFire_setBurnRate($this, nms_Block_wood.$blockID, 5, 5);
    nms_BlockFire_setBurnRate($this, nms_Block_leaves.$blockID, 30, 60);
    nms_BlockFire_setBurnRate($this, nms_Block_bookShelf.$blockID, 30, 20);
    nms_BlockFire_setBurnRate($this, nms_Block_tnt.$blockID, 15, 100);
    nms_BlockFire_setBurnRate($this, nms_Block_cloth.$blockID, 30, 60);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockFire_setBurnRate($this, $var1, $var2, $var3) {
    $this.$chanceToEncourageFire.data[$var1] = $var2;
    $this.$abilityToCatchFire.data[$var1] = $var3;
}
function nms_BlockFire_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockFire_isOpaqueCube($this) {
    return 0;
}
function nms_BlockFire_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockFire_getRenderType($this) {
    return 3;
}
function nms_BlockFire_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockFire_tickRate($this) {
    return 10;
}
function nms_BlockFire_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, $var7, $var12, $var8, var$11, var$12, var$13, var$14, $var9, $var10, $var11;
    var$6 = $var3 - 1 | 0;
    $var6 = nms_World_getBlockId($var1, $var2, var$6, $var4);
    nms_Block_$callClinit();
    $var6 = $var6 != nms_Block_bloodStone.$blockID ? 0 : 1;
    $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var12 = $rt_compare($var7, 15);
    if ($var12 < 0) {
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var7 + 1 | 0);
        nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
    }
    a: {
        if (!$var6 && !nms_BlockFire_func_263_h($this, $var1, $var2, $var3, $var4)) {
            if (!(nms_World_isBlockOpaqueCube($var1, $var2, var$6, $var4) && $var7 <= 3))
                nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        } else if (!$var6 && !nms_BlockFire_canBlockCatchFire($this, $var1, $var2, var$6, $var4) && !$var12 && !ju_Random_nextInt($var5, 4))
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        else if (!($var7 % 2 | 0) && $var7 > 2) {
            $var6 = $var2 + 1 | 0;
            nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var6, $var3, $var4, 300, $var5);
            $var8 = $var2 - 1 | 0;
            nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var8, $var3, $var4, 300, $var5);
            nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var2, var$6, $var4, 250, $var5);
            var$11 = $var3 + 1 | 0;
            nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var2, var$11, $var4, 250, $var5);
            var$12 = $var4 - 1 | 0;
            nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var2, $var3, var$12, 300, $var5);
            var$13 = $var4 + 1 | 0;
            nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var2, $var3, var$13, 300, $var5);
            var$14 = $var3 + 4 | 0;
            while (true) {
                if ($var8 > $var6)
                    break a;
                $var9 = var$12;
                while ($var9 <= var$13) {
                    $var10 = var$6;
                    while ($var10 <= var$14) {
                        if (!($var8 == $var2 && $var10 == $var3 && $var9 == $var4)) {
                            $var11 = 100;
                            if ($var10 > var$11)
                                $var11 = $var11 + (($var10 - var$11 | 0) * 100 | 0) | 0;
                            $var12 = nms_World_getBlockId($var1, $var8, $var10, $var9) ? 0 : nms_BlockFire_getChanceToEncourageFire($this, $var1, $var8, $var10, $var9 + 1 | 0, nms_BlockFire_getChanceToEncourageFire($this, $var1, $var8, $var10, $var9 - 1 | 0, nms_BlockFire_getChanceToEncourageFire($this, $var1, $var8, $var10 + 1 | 0, $var9, nms_BlockFire_getChanceToEncourageFire($this, $var1, $var8, $var10 - 1 | 0, $var9, nms_BlockFire_getChanceToEncourageFire($this, $var1, $var8 - 1 | 0, $var10, $var9, nms_BlockFire_getChanceToEncourageFire($this,
                            $var1, $var8 + 1 | 0, $var10, $var9, 0))))));
                            if ($var12 > 0 && ju_Random_nextInt($var5, $var11) <= $var12)
                                nms_World_setBlockWithNotify($var1, $var8, $var10, $var9, $this.$blockID);
                        }
                        $var10 = $var10 + 1 | 0;
                    }
                    $var9 = $var9 + 1 | 0;
                }
                $var8 = $var8 + 1 | 0;
            }
        }
    }
}
function nms_BlockFire_tryToCatchBlockOnFire($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8;
    $var7 = $this.$abilityToCatchFire.data[nms_World_getBlockId($var1, $var2, $var3, $var4)];
    if (ju_Random_nextInt($var6, $var5) < $var7) {
        $var5 = nms_World_getBlockId($var1, $var2, $var3, $var4);
        nms_Block_$callClinit();
        $var8 = $var5 != nms_Block_tnt.$blockID ? 0 : 1;
        if (ju_Random_nextInt($var6, 2))
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        else
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, $this.$blockID);
        if ($var8)
            nms_Block_tnt.$onBlockDestroyedByPlayer($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockFire_func_263_h($this, $var1, $var2, $var3, $var4) {
    return nms_BlockFire_canBlockCatchFire($this, $var1, $var2 + 1 | 0, $var3, $var4) ? 1 : nms_BlockFire_canBlockCatchFire($this, $var1, $var2 - 1 | 0, $var3, $var4) ? 1 : nms_BlockFire_canBlockCatchFire($this, $var1, $var2, $var3 - 1 | 0, $var4) ? 1 : nms_BlockFire_canBlockCatchFire($this, $var1, $var2, $var3 + 1 | 0, $var4) ? 1 : nms_BlockFire_canBlockCatchFire($this, $var1, $var2, $var3, $var4 - 1 | 0) ? 1 : nms_BlockFire_canBlockCatchFire($this, $var1, $var2, $var3, $var4 + 1 | 0);
}
function nms_BlockFire_isCollidable($this) {
    return 0;
}
function nms_BlockFire_canBlockCatchFire($this, $var1, $var2, $var3, $var4) {
    return $this.$chanceToEncourageFire.data[$var1.$getBlockId($var2, $var3, $var4)] <= 0 ? 0 : 1;
}
function nms_BlockFire_getChanceToEncourageFire($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = $this.$chanceToEncourageFire.data[nms_World_getBlockId($var1, $var2, $var3, $var4)];
    if ($var6 > $var5)
        $var5 = $var6;
    return $var5;
}
function nms_BlockFire_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return !nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4) && !nms_BlockFire_func_263_h($this, $var1, $var2, $var3, $var4) ? 0 : 1;
}
function nms_BlockFire_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4) && !nms_BlockFire_func_263_h($this, $var1, $var2, $var3, $var4))
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
}
function nms_BlockFire_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6;
    var$5 = $var3 - 1 | 0;
    var$6 = nms_World_getBlockId($var1, $var2, var$5, $var4);
    nms_Block_$callClinit();
    if (!(var$6 == nms_Block_obsidian.$blockID && nms_BlockPortal_tryToCreatePortal(nms_Block_portal, $var1, $var2, $var3, $var4))) {
        if (!nms_World_isBlockOpaqueCube($var1, $var2, var$5, $var4) && !nms_BlockFire_func_263_h($this, $var1, $var2, $var3, $var4))
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        else
            nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
    }
}
function nms_BlockFire_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var8, $var7, $var8_0, $var7_0, $var8_1, $var9, $var9_0, var$14, $var6_0, var$16;
    if (!ju_Random_nextInt($var5, 24))
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(285), 1.0 + ju_Random_nextFloat($var5), ju_Random_nextFloat($var5) * 0.699999988079071 + 0.30000001192092896);
    a: {
        b: {
            $var6 = $var3 - 1 | 0;
            if (!nms_World_isBlockOpaqueCube($var1, $var2, $var6, $var4)) {
                nms_Block_$callClinit();
                if (!nms_BlockFire_canBlockCatchFire(nms_Block_fire, $var1, $var2, $var6, $var4))
                    break b;
            }
            $var6 = 0;
            $var8 = $var2;
            $var7 = $var3;
            $var8_0 = $var4;
            while (true) {
                if ($var6 >= 3)
                    break a;
                $var7_0 = $var8 + ju_Random_nextFloat($var5);
                $var8_1 = $var7 + ju_Random_nextFloat($var5) * 0.5 + 0.5;
                $var9 = $var8_0 + ju_Random_nextFloat($var5);
                nms_World_spawnParticle($var1, $rt_s(280), $var7_0, $var8_1, $var9, 0.0, 0.0, 0.0);
                $var6 = $var6 + 1 | 0;
            }
        }
        c: {
            if (nms_BlockFire_canBlockCatchFire(nms_Block_fire, $var1, $var2 - 1 | 0, $var3, $var4)) {
                $var6 = 0;
                $var8 = $var2;
                $var8_1 = $var3;
                $var9 = $var4;
                while (true) {
                    if ($var6 >= 2)
                        break c;
                    $var7 = $var8 + ju_Random_nextFloat($var5) * 0.10000000149011612;
                    $var8_0 = $var8_1 + ju_Random_nextFloat($var5);
                    $var9_0 = $var9 + ju_Random_nextFloat($var5);
                    nms_World_spawnParticle($var1, $rt_s(280), $var7, $var8_0, $var9_0, 0.0, 0.0, 0.0);
                    $var6 = $var6 + 1 | 0;
                }
            }
        }
        d: {
            var$14 = nms_Block_fire;
            $var6_0 = $var2 + 1 | 0;
            if (nms_BlockFire_canBlockCatchFire(var$14, $var1, $var6_0, $var3, $var4)) {
                $var6 = 0;
                $var8 = $var6_0;
                $var8_1 = $var3;
                $var9 = $var4;
                while (true) {
                    if ($var6 >= 2)
                        break d;
                    $var7 = $var8 - ju_Random_nextFloat($var5) * 0.10000000149011612;
                    $var8_0 = $var8_1 + ju_Random_nextFloat($var5);
                    $var9_0 = $var9 + ju_Random_nextFloat($var5);
                    nms_World_spawnParticle($var1, $rt_s(280), $var7, $var8_0, $var9_0, 0.0, 0.0, 0.0);
                    $var6 = $var6 + 1 | 0;
                }
            }
        }
        e: {
            if (nms_BlockFire_canBlockCatchFire(nms_Block_fire, $var1, $var2, $var3, $var4 - 1 | 0)) {
                $var6 = 0;
                $var8 = $var2;
                $var8_0 = $var3;
                $var9 = $var4;
                while (true) {
                    if ($var6 >= 2)
                        break e;
                    $var7 = $var8 + ju_Random_nextFloat($var5);
                    $var8_1 = $var8_0 + ju_Random_nextFloat($var5);
                    $var9_0 = $var9 + ju_Random_nextFloat($var5) * 0.10000000149011612;
                    nms_World_spawnParticle($var1, $rt_s(280), $var7, $var8_1, $var9_0, 0.0, 0.0, 0.0);
                    $var6 = $var6 + 1 | 0;
                }
            }
        }
        f: {
            var$14 = nms_Block_fire;
            $var6 = $var4 + 1 | 0;
            if (nms_BlockFire_canBlockCatchFire(var$14, $var1, $var2, $var3, $var6)) {
                $var6_0 = 0;
                $var9_0 = $var2;
                var$16 = $var3;
                $var7 = $var6;
                while (true) {
                    if ($var6_0 >= 2)
                        break f;
                    $var7_0 = $var9_0 + ju_Random_nextFloat($var5);
                    $var8 = var$16 + ju_Random_nextFloat($var5);
                    $var9 = $var7 - ju_Random_nextFloat($var5) * 0.10000000149011612;
                    nms_World_spawnParticle($var1, $rt_s(280), $var7_0, $var8, $var9, 0.0, 0.0, 0.0);
                    $var6_0 = $var6_0 + 1 | 0;
                }
            }
        }
        var$14 = nms_Block_fire;
        $var3 = $var3 + 1 | 0;
        if (nms_BlockFire_canBlockCatchFire(var$14, $var1, $var2, $var3, $var4)) {
            $var6 = 0;
            $var8 = $var2;
            $var7 = $var3;
            $var9 = $var4;
            while (true) {
                if ($var6 >= 2)
                    break a;
                $var7_0 = $var8 + ju_Random_nextFloat($var5);
                $var8_0 = $var7 - ju_Random_nextFloat($var5) * 0.10000000149011612;
                $var9_0 = $var9 + ju_Random_nextFloat($var5);
                nms_World_spawnParticle($var1, $rt_s(280), $var7_0, $var8_0, $var9_0, 0.0, 0.0, 0.0);
                $var6 = $var6 + 1 | 0;
            }
        }
    }
}
function nms_BlockContainer() {
    nms_Block.call(this);
}
function nms_BlockContainer__init_(var_0, var_1) {
    var var_2 = new nms_BlockContainer();
    nms_BlockContainer__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockContainer__init_0($this, $var1, $var2) {
    nms_Block__init_0($this, $var1, $var2);
    nms_Block_isBlockContainer.data[$var1] = 1;
}
function nms_BlockContainer_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    nms_World_setBlockTileEntity($var1, $var2, $var3, $var4, $this.$SetBlockEntity());
}
function nms_BlockContainer_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    nms_World_removeBlockTileEntity($var1, $var2, $var3, $var4);
}
function nms_BlockMobSpawner() {
    nms_BlockContainer.call(this);
}
function nms_BlockMobSpawner__init_(var_0, var_1) {
    var var_2 = new nms_BlockMobSpawner();
    nms_BlockMobSpawner__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockMobSpawner__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_rock);
}
function nms_BlockMobSpawner_SetBlockEntity($this) {
    return nms_TileEntityMobSpawner__init_0();
}
function nms_BlockMobSpawner_idDropped($this, $var1, $var2) {
    return 0;
}
function nms_BlockMobSpawner_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockMobSpawner_isOpaqueCube($this) {
    return 0;
}
function nms_BlockStairs() {
    nms_Block.call(this);
    this.$modelBlock = null;
}
function nms_BlockStairs__init_(var_0, var_1) {
    var var_2 = new nms_BlockStairs();
    nms_BlockStairs__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockStairs__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2.$blockIndexInTexture, $var2.$blockMaterial);
    $this.$modelBlock = $var2;
    nms_Block_setHardness($this, $var2.$blockHardness);
    nms_Block_setResistance($this, $var2.$blockResistance / 3.0);
    $this.$stepSound = $var2.$stepSound;
}
function nms_BlockStairs_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
}
function nms_BlockStairs_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return nms_Block_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4);
}
function nms_BlockStairs_isOpaqueCube($this) {
    return 0;
}
function nms_BlockStairs_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockStairs_getRenderType($this) {
    return 10;
}
function nms_BlockStairs_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    return nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (!$var7) {
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 0.5, 0.5, 1.0);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
        nms_Block_setBlockBounds($this, 0.5, 0.0, 0.0, 1.0, 1.0, 1.0);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
    } else if ($var7 == 1) {
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 0.5, 1.0, 1.0);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
        nms_Block_setBlockBounds($this, 0.5, 0.0, 0.0, 1.0, 0.5, 1.0);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
    } else if ($var7 == 2) {
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.5, 0.5);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.5, 1.0, 1.0, 1.0);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
    } else if ($var7 == 3) {
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.5, 1.0, 0.5, 1.0);
        nms_Block_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6);
    }
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
}
function nms_BlockStairs_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$modelBlock.$randomDisplayTick($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_onBlockClicked($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$modelBlock.$onBlockClicked($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_onBlockDestroyedByPlayer($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$modelBlock.$onBlockDestroyedByPlayer($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_getBlockBrightness($this, $var1, $var2, $var3, $var4) {
    return $this.$modelBlock.$getBlockBrightness($var1, $var2, $var3, $var4);
}
function nms_BlockStairs_func_227_a($this, $var1) {
    return $this.$modelBlock.$func_227_a($var1);
}
function nms_BlockStairs_func_234_g($this) {
    return $this.$modelBlock.$func_234_g();
}
function nms_BlockStairs_idDropped($this, $var1, $var2) {
    return $this.$modelBlock.$idDropped($var1, $var2);
}
function nms_BlockStairs_quantityDropped($this, $var1) {
    return $this.$modelBlock.$quantityDropped($var1);
}
function nms_BlockStairs_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    return $this.$modelBlock.$getBlockTextureFromSideAndMetadata($var1, $var2);
}
function nms_BlockStairs_getBlockTextureFromSide($this, $var1) {
    return $this.$modelBlock.$getBlockTextureFromSide($var1);
}
function nms_BlockStairs_getBlockTexture($this, $var1, $var2, $var3, $var4, $var5) {
    return $this.$modelBlock.$getBlockTexture($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_tickRate($this) {
    return $this.$modelBlock.$tickRate();
}
function nms_BlockStairs_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return $this.$modelBlock.$getSelectedBoundingBoxFromPool($var1, $var2, $var3, $var4);
}
function nms_BlockStairs_velocityToAddToEntity($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    $this.$modelBlock.$velocityToAddToEntity($var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_BlockStairs_isCollidable($this) {
    return $this.$modelBlock.$isCollidable();
}
function nms_BlockStairs_canCollideCheck($this, $var1, $var2) {
    return $this.$modelBlock.$canCollideCheck($var1, $var2);
}
function nms_BlockStairs_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return $this.$modelBlock.$canPlaceBlockAt($var1, $var2, $var3, $var4);
}
function nms_BlockStairs_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    $this.$modelBlock.$onBlockAdded($var1, $var2, $var3, $var4);
}
function nms_BlockStairs_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    $this.$modelBlock.$onBlockRemoval($var1, $var2, $var3, $var4);
}
function nms_BlockStairs_dropBlockAsItemWithChance($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    $this.$modelBlock.$dropBlockAsItemWithChance($var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_BlockStairs_dropBlockAsItem($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$modelBlock.$dropBlockAsItem($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_onEntityWalking($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$modelBlock.$onEntityWalking($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$modelBlock.$updateTick($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    return $this.$modelBlock.$blockActivated($var1, $var2, $var3, $var4, $var5);
}
function nms_BlockStairs_onBlockDestroyedByExplosion($this, $var1, $var2, $var3, $var4) {
    $this.$modelBlock.$onBlockDestroyedByExplosion($var1, $var2, $var3, $var4);
}
function nms_BlockStairs_onBlockPlacedBy($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_MathHelper_floor_double($var5.$rotationYaw * 4.0 / 360.0 + 0.5) & 3;
    if (!$var6)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 2);
    if ($var6 == 1)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 1);
    if ($var6 == 2)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 3);
    if ($var6 == 3)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 0);
}
function nms_BlockChest() {
    nms_BlockContainer.call(this);
    this.$field_457_a = null;
}
function nms_BlockChest__init_(var_0) {
    var var_1 = new nms_BlockChest();
    nms_BlockChest__init_0(var_1, var_0);
    return var_1;
}
function nms_BlockChest__init_0($this, $var1) {
    nms_BlockContainer__init_0($this, $var1, nms_Material_wood);
    $this.$field_457_a = new ju_Random;
    $this.$blockIndexInTexture = 26;
}
function nms_BlockChest_getBlockTexture($this, $var1, $var2, $var3, $var4, $var5) {
    var $var11, $var6, $var13, $var7, $var14, $var8, $var12, $var9, $var10, $var11_0;
    if ($var5 == 1)
        return $this.$blockIndexInTexture - 1 | 0;
    if (!$var5)
        return $this.$blockIndexInTexture - 1 | 0;
    $var11 = $var4 - 1 | 0;
    $var6 = $var1.$getBlockId($var2, $var3, $var11);
    $var13 = $var4 + 1 | 0;
    $var7 = $var1.$getBlockId($var2, $var3, $var13);
    $var14 = $var2 - 1 | 0;
    $var8 = $var1.$getBlockId($var14, $var3, $var4);
    $var12 = $var2 + 1 | 0;
    $var9 = $var1.$getBlockId($var12, $var3, $var4);
    if ($var6 != $this.$blockID && $var7 != $this.$blockID) {
        if ($var8 != $this.$blockID && $var9 != $this.$blockID) {
            $var14 = 3;
            nms_Block_$callClinit();
            if (nms_Block_opaqueCubeLookup.data[$var6] && !nms_Block_opaqueCubeLookup.data[$var7])
                $var14 = 3;
            if (nms_Block_opaqueCubeLookup.data[$var7] && !nms_Block_opaqueCubeLookup.data[$var6])
                $var14 = 2;
            if (nms_Block_opaqueCubeLookup.data[$var8] && !nms_Block_opaqueCubeLookup.data[$var9])
                $var14 = 5;
            if (nms_Block_opaqueCubeLookup.data[$var9] && !nms_Block_opaqueCubeLookup.data[$var8])
                $var14 = 4;
            return $var5 != $var14 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture + 1 | 0;
        }
        if ($var5 != 4 && $var5 != 5) {
            $var10 = 0;
            if ($var8 == $this.$blockID)
                $var10 = (-1);
            $var11 = $var1.$getBlockId($var8 != $this.$blockID ? $var12 : $var14, $var3, $var11);
            if ($var8 == $this.$blockID)
                $var12 = $var14;
            $var12 = $var1.$getBlockId($var12, $var3, $var13);
            if ($var5 == 3)
                $var10 = (-1) - $var10 | 0;
            $var13 = 3;
            nms_Block_$callClinit();
            if (!(!nms_Block_opaqueCubeLookup.data[$var6] && !nms_Block_opaqueCubeLookup.data[$var11]) && !nms_Block_opaqueCubeLookup.data[$var7] && !nms_Block_opaqueCubeLookup.data[$var12])
                $var13 = 3;
            if (!(!nms_Block_opaqueCubeLookup.data[$var7] && !nms_Block_opaqueCubeLookup.data[$var12]) && !nms_Block_opaqueCubeLookup.data[$var6] && !nms_Block_opaqueCubeLookup.data[$var11])
                $var13 = 2;
            return ($var5 != $var13 ? $this.$blockIndexInTexture + 32 | 0 : $this.$blockIndexInTexture + 16 | 0) + $var10 | 0;
        }
        return $this.$blockIndexInTexture;
    }
    if ($var5 != 2 && $var5 != 3) {
        $var10 = 0;
        if ($var6 == $this.$blockID)
            $var10 = (-1);
        $var11_0 = $var1.$getBlockId($var14, $var3, $var6 != $this.$blockID ? $var13 : $var11);
        if ($var6 == $this.$blockID)
            $var13 = $var11;
        $var12 = $var1.$getBlockId($var12, $var3, $var13);
        if ($var5 == 4)
            $var10 = (-1) - $var10 | 0;
        $var13 = 5;
        nms_Block_$callClinit();
        if (!(!nms_Block_opaqueCubeLookup.data[$var8] && !nms_Block_opaqueCubeLookup.data[$var11_0]) && !nms_Block_opaqueCubeLookup.data[$var9] && !nms_Block_opaqueCubeLookup.data[$var12])
            $var13 = 5;
        if (!(!nms_Block_opaqueCubeLookup.data[$var9] && !nms_Block_opaqueCubeLookup.data[$var12]) && !nms_Block_opaqueCubeLookup.data[$var8] && !nms_Block_opaqueCubeLookup.data[$var11_0])
            $var13 = 4;
        return ($var5 != $var13 ? $this.$blockIndexInTexture + 32 | 0 : $this.$blockIndexInTexture + 16 | 0) + $var10 | 0;
    }
    return $this.$blockIndexInTexture;
}
function nms_BlockChest_getBlockTextureFromSide($this, $var1) {
    return $var1 == 1 ? $this.$blockIndexInTexture - 1 | 0 : !$var1 ? $this.$blockIndexInTexture - 1 | 0 : $var1 != 3 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture + 1 | 0;
}
function nms_BlockChest_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    var $var5, var$6, var$7, var$8, var$9;
    $var5 = 0;
    var$6 = $var2 - 1 | 0;
    if (nms_World_getBlockId($var1, var$6, $var3, $var4) == $this.$blockID)
        $var5 = 1;
    var$7 = $var2 + 1 | 0;
    if (nms_World_getBlockId($var1, var$7, $var3, $var4) == $this.$blockID)
        $var5 = $var5 + 1 | 0;
    var$8 = $var4 - 1 | 0;
    if (nms_World_getBlockId($var1, $var2, $var3, var$8) == $this.$blockID)
        $var5 = $var5 + 1 | 0;
    var$9 = $var4 + 1 | 0;
    if (nms_World_getBlockId($var1, $var2, $var3, var$9) == $this.$blockID)
        $var5 = $var5 + 1 | 0;
    return $var5 > 1 ? 0 : nms_BlockChest_isThereANeighborChest($this, $var1, var$6, $var3, $var4) ? 0 : nms_BlockChest_isThereANeighborChest($this, $var1, var$7, $var3, $var4) ? 0 : nms_BlockChest_isThereANeighborChest($this, $var1, $var2, $var3, var$8) ? 0 : nms_BlockChest_isThereANeighborChest($this, $var1, $var2, $var3, var$9) ? 0 : 1;
}
function nms_BlockChest_isThereANeighborChest($this, $var1, $var2, $var3, $var4) {
    return nms_World_getBlockId($var1, $var2, $var3, $var4) != $this.$blockID ? 0 : nms_World_getBlockId($var1, $var2 - 1 | 0, $var3, $var4) == $this.$blockID ? 1 : nms_World_getBlockId($var1, $var2 + 1 | 0, $var3, $var4) == $this.$blockID ? 1 : nms_World_getBlockId($var1, $var2, $var3, $var4 - 1 | 0) == $this.$blockID ? 1 : nms_World_getBlockId($var1, $var2, $var3, $var4 + 1 | 0) != $this.$blockID ? 0 : 1;
}
function nms_BlockChest_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, var$7, var$8, var$9, $var7, $var8, $var9, $var10, var$14, var$15, var$16, $var11, $var12;
    $var5 = nms_World_getBlockTileEntity($var1, $var2, $var3, $var4);
    $var6 = 0;
    var$7 = $var2;
    var$8 = $var3;
    var$9 = $var4;
    while ($var6 < 27) {
        a: {
            $var7 = nms_TileEntityChest_getStackInSlot($var5, $var6);
            if ($var7 !== null) {
                $var8 = ju_Random_nextFloat($this.$field_457_a) * 0.800000011920929 + 0.10000000149011612;
                $var9 = ju_Random_nextFloat($this.$field_457_a) * 0.800000011920929 + 0.10000000149011612;
                $var10 = ju_Random_nextFloat($this.$field_457_a) * 0.800000011920929 + 0.10000000149011612;
                var$14 = var$7 + $var8;
                var$15 = var$8 + $var9;
                var$16 = var$9 + $var10;
                while (true) {
                    if ($var7.$stackSize <= 0)
                        break a;
                    $var11 = ju_Random_nextInt($this.$field_457_a, 21) + 10 | 0;
                    if ($var11 > $var7.$stackSize)
                        $var11 = $var7.$stackSize;
                    $var7.$stackSize = $var7.$stackSize - $var11 | 0;
                    $var12 = nms_EntityItem__init_($var1, var$14, var$15, var$16, nms_ItemStack__init_1($var7.$itemID, $var11, $var7.$itemDamage));
                    $var12.$motionX = ju_Random_nextGaussian($this.$field_457_a) * 0.05000000074505806;
                    $var12.$motionY = ju_Random_nextGaussian($this.$field_457_a) * 0.05000000074505806 + 0.20000000298023224;
                    $var12.$motionZ = ju_Random_nextGaussian($this.$field_457_a) * 0.05000000074505806;
                    nms_World_entityJoinedWorld($var1, $var12);
                }
            }
        }
        $var6 = $var6 + 1 | 0;
    }
    nms_BlockContainer_onBlockRemoval($this, $var1, $var2, $var3, $var4);
}
function nms_BlockChest_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $var6 = nms_World_getBlockTileEntity($var1, $var2, $var3, $var4);
    var$7 = $var3 + 1 | 0;
    if (nms_World_isBlockOpaqueCube($var1, $var2, var$7, $var4))
        return 1;
    var$8 = $var2 - 1 | 0;
    if (nms_World_getBlockId($var1, var$8, $var3, $var4) == $this.$blockID && nms_World_isBlockOpaqueCube($var1, var$8, var$7, $var4))
        return 1;
    var$9 = $var2 + 1 | 0;
    if (nms_World_getBlockId($var1, var$9, $var3, $var4) == $this.$blockID && nms_World_isBlockOpaqueCube($var1, var$9, var$7, $var4))
        return 1;
    var$10 = $var4 - 1 | 0;
    if (nms_World_getBlockId($var1, $var2, $var3, var$10) == $this.$blockID && nms_World_isBlockOpaqueCube($var1, $var2, var$7, var$10))
        return 1;
    var$11 = $var4 + 1 | 0;
    if (nms_World_getBlockId($var1, $var2, $var3, var$11) == $this.$blockID && nms_World_isBlockOpaqueCube($var1, $var2, var$7, var$11))
        return 1;
    var$12 = nms_World_getBlockId($var1, var$8, $var3, $var4) != $this.$blockID ? $var6 : nms_InventoryLargeChest__init_($rt_s(286), nms_World_getBlockTileEntity($var1, var$8, $var3, $var4), $var6);
    var$13 = nms_World_getBlockId($var1, var$9, $var3, $var4) != $this.$blockID ? var$12 : nms_InventoryLargeChest__init_($rt_s(286), var$12, nms_World_getBlockTileEntity($var1, var$9, $var3, $var4));
    var$12 = nms_World_getBlockId($var1, $var2, $var3, var$10) != $this.$blockID ? var$13 : nms_InventoryLargeChest__init_($rt_s(286), nms_World_getBlockTileEntity($var1, $var2, $var3, var$10), var$13);
    nms_EntityPlayerSP_displayGUIChest($var5, nms_World_getBlockId($var1, $var2, $var3, var$11) != $this.$blockID ? var$12 : nms_InventoryLargeChest__init_($rt_s(286), var$12, nms_World_getBlockTileEntity($var1, $var2, $var3, var$11)));
    return 1;
}
function nms_BlockChest_SetBlockEntity($this) {
    return nms_TileEntityChest__init_0();
}
function nms_BlockRedstoneWire() {
    nms_Block.call(this);
    this.$wiresProvidePower = 0;
}
function nms_BlockRedstoneWire__init_(var_0, var_1) {
    var var_2 = new nms_BlockRedstoneWire();
    nms_BlockRedstoneWire__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockRedstoneWire__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_circuits);
    $this.$wiresProvidePower = 1;
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.0625, 1.0);
}
function nms_BlockRedstoneWire_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    return $this.$blockIndexInTexture + ($var2 <= 0 ? 0 : 16) | 0;
}
function nms_BlockRedstoneWire_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockRedstoneWire_isOpaqueCube($this) {
    return 0;
}
function nms_BlockRedstoneWire_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockRedstoneWire_getRenderType($this) {
    return 5;
}
function nms_BlockRedstoneWire_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4);
}
function nms_BlockRedstoneWire_updateAndPropagateCurrentStrength($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, var$9, var$10, var$11, $var11, $var12, $var8_0, var$15, var$16;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var6 = 0;
    $this.$wiresProvidePower = 0;
    $var7 = nms_World_isBlockIndirectlyGettingPowered($var1, $var2, $var3, $var4);
    $this.$wiresProvidePower = 1;
    if ($var7)
        $var8 = 15;
    else {
        $var8 = 0;
        var$9 = $var2 - 1 | 0;
        var$10 = $var4 - 1 | 0;
        var$11 = $var3 + 1 | 0;
        $var11 = $var3 - 1 | 0;
        while ($var8 < 4) {
            $var7 = !$var8 ? var$9 : $var2;
            if ($var8 == 1)
                $var7 = $var7 + 1 | 0;
            $var12 = $var8 == 2 ? var$10 : $var4;
            if ($var8 == 3)
                $var12 = $var12 + 1 | 0;
            $var6 = nms_BlockRedstoneWire_getMaxCurrentStrength($this, $var1, $var7, $var3, $var12, $var6);
            if (nms_World_isBlockOpaqueCube($var1, $var7, $var3, $var12) && !nms_World_isBlockOpaqueCube($var1, $var2, var$11, $var4))
                $var6 = nms_BlockRedstoneWire_getMaxCurrentStrength($this, $var1, $var7, var$11, $var12, $var6);
            else if (!nms_World_isBlockOpaqueCube($var1, $var7, $var3, $var12))
                $var6 = nms_BlockRedstoneWire_getMaxCurrentStrength($this, $var1, $var7, $var11, $var12, $var6);
            $var8 = $var8 + 1 | 0;
        }
        $var8 = $var6 <= 0 ? 0 : $var6 + (-1) | 0;
    }
    if ($var5 != $var8) {
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var8);
        nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
        if ($var8 > 0)
            $var8 = $var8 + (-1) | 0;
        $var8_0 = 0;
        $var11 = $var3 - 1 | 0;
        var$15 = $var2 - 1 | 0;
        var$16 = $var4 - 1 | 0;
        var$11 = $var11 + 2 | 0;
        while ($var8_0 < 4) {
            $var7 = !$var8_0 ? var$15 : $var2;
            if ($var8_0 == 1)
                $var7 = $var7 + 1 | 0;
            var$10 = $var8_0 == 2 ? var$16 : $var4;
            if ($var8_0 == 3)
                var$10 = var$10 + 1 | 0;
            var$9 = nms_World_isBlockOpaqueCube($var1, $var7, $var3, var$10) ? var$11 : $var11;
            $var12 = nms_BlockRedstoneWire_getMaxCurrentStrength($this, $var1, $var7, $var3, var$10, (-1));
            if ($var12 >= 0 && $var12 != $var8)
                nms_BlockRedstoneWire_updateAndPropagateCurrentStrength($this, $var1, $var7, $var3, var$10);
            $var6 = nms_BlockRedstoneWire_getMaxCurrentStrength($this, $var1, $var7, var$9, var$10, (-1));
            if ($var6 >= 0 && $var6 != $var8)
                nms_BlockRedstoneWire_updateAndPropagateCurrentStrength($this, $var1, $var7, var$9, var$10);
            $var8_0 = $var8_0 + 1 | 0;
        }
        if (!($var5 && $var8)) {
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, var$15, $var3, $var4, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, var$16, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var11, $var4, $this.$blockID);
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 + 1 | 0, $var4, $this.$blockID);
        }
    }
}
function nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, $var3, $var4) {
    if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID) {
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 + 1 | 0, $var4, $this.$blockID);
    }
}
function nms_BlockRedstoneWire_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6, var$7, var$8, var$9, var$10;
    nms_BlockRedstoneWire_updateAndPropagateCurrentStrength($this, $var1, $var2, $var3, $var4);
    var$5 = $var3 + 1 | 0;
    nms_World_notifyBlocksOfNeighborChange($var1, $var2, var$5, $var4, $this.$blockID);
    var$6 = $var3 - 1 | 0;
    nms_World_notifyBlocksOfNeighborChange($var1, $var2, var$6, $var4, $this.$blockID);
    var$7 = $var2 - 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$7, $var3, $var4);
    var$8 = $var2 + 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$8, $var3, $var4);
    var$9 = $var4 - 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, $var3, var$9);
    var$10 = $var4 + 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, $var3, var$10);
    if (!nms_World_isBlockOpaqueCube($var1, var$7, $var3, $var4))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$7, var$6, $var4);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$7, var$5, $var4);
    if (!nms_World_isBlockOpaqueCube($var1, var$8, $var3, $var4))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$8, var$6, $var4);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$8, var$5, $var4);
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$9))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$6, var$9);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$5, var$9);
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$10))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$6, var$10);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$5, var$10);
}
function nms_BlockRedstoneWire_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6, var$7, var$8, var$9, var$10;
    var$5 = $var3 + 1 | 0;
    nms_World_notifyBlocksOfNeighborChange($var1, $var2, var$5, $var4, $this.$blockID);
    var$6 = $var3 - 1 | 0;
    nms_World_notifyBlocksOfNeighborChange($var1, $var2, var$6, $var4, $this.$blockID);
    nms_BlockRedstoneWire_updateAndPropagateCurrentStrength($this, $var1, $var2, $var3, $var4);
    var$7 = $var2 - 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$7, $var3, $var4);
    var$8 = $var2 + 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$8, $var3, $var4);
    var$9 = $var4 - 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, $var3, var$9);
    var$10 = $var4 + 1 | 0;
    nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, $var3, var$10);
    if (!nms_World_isBlockOpaqueCube($var1, var$7, $var3, $var4))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$7, var$6, $var4);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$7, var$5, $var4);
    if (!nms_World_isBlockOpaqueCube($var1, var$8, $var3, $var4))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$8, var$6, $var4);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, var$8, var$5, $var4);
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$9))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$6, var$9);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$5, var$9);
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$10))
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$6, var$10);
    else
        nms_BlockRedstoneWire_notifyWireNeighborsOfNeighborChange($this, $var1, $var2, var$5, var$10);
}
function nms_BlockRedstoneWire_getMaxCurrentStrength($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if (nms_World_getBlockId($var1, $var2, $var3, $var4) != $this.$blockID)
        return $var5;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var6 > $var5)
        $var5 = $var6;
    return $var5;
}
function nms_BlockRedstoneWire_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (nms_BlockRedstoneWire_canPlaceBlockAt($this, $var1, $var2, $var3, $var4))
        nms_BlockRedstoneWire_updateAndPropagateCurrentStrength($this, $var1, $var2, $var3, $var4);
    else {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, $var6);
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockRedstoneWire_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_redstone.$shiftedIndex;
}
function nms_BlockRedstoneWire_isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return $this.$wiresProvidePower ? nms_BlockRedstoneWire_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) : 0;
}
function nms_BlockRedstoneWire_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, var$8, $var7, var$10, $var8, var$12, $var9, var$14;
    if (!$this.$wiresProvidePower)
        return 0;
    if (!nms_World_getBlockMetadata($var1, $var2, $var3, $var4))
        return 0;
    if ($var5 == 1)
        return 1;
    a: {
        b: {
            var$6 = $var2 - 1 | 0;
            if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, var$6, $var3, $var4)) {
                if (nms_World_isBlockOpaqueCube($var1, var$6, $var3, $var4))
                    break b;
                if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, var$6, $var3 - 1 | 0, $var4))
                    break b;
            }
            $var6 = 1;
            break a;
        }
        $var6 = 0;
    }
    c: {
        d: {
            var$8 = $var2 + 1 | 0;
            if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, var$8, $var3, $var4)) {
                if (nms_World_isBlockOpaqueCube($var1, var$8, $var3, $var4))
                    break d;
                if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, var$8, $var3 - 1 | 0, $var4))
                    break d;
            }
            $var7 = 1;
            break c;
        }
        $var7 = 0;
    }
    e: {
        f: {
            var$10 = $var4 - 1 | 0;
            if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, $var3, var$10)) {
                if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$10))
                    break f;
                if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, $var3 - 1 | 0, var$10))
                    break f;
            }
            $var8 = 1;
            break e;
        }
        $var8 = 0;
    }
    g: {
        h: {
            var$12 = $var4 + 1 | 0;
            if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, $var3, var$12)) {
                if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$12))
                    break h;
                if (!nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, $var3 - 1 | 0, var$12))
                    break h;
            }
            $var9 = 1;
            break g;
        }
        $var9 = 0;
    }
    var$14 = $var3 + 1 | 0;
    if (!nms_World_isBlockOpaqueCube($var1, $var2, var$14, $var4)) {
        if (nms_World_isBlockOpaqueCube($var1, var$6, $var3, $var4) && nms_BlockRedstoneWire_isPowerProviderOrWire($var1, var$6, var$14, $var4))
            $var6 = 1;
        if (nms_World_isBlockOpaqueCube($var1, var$8, $var3, $var4) && nms_BlockRedstoneWire_isPowerProviderOrWire($var1, var$8, var$14, $var4))
            $var7 = 1;
        if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$10) && nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, var$14, var$10))
            $var8 = 1;
        if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$12) && nms_BlockRedstoneWire_isPowerProviderOrWire($var1, $var2, var$14, var$12))
            $var9 = 1;
    }
    return !$var8 && !$var7 && !$var6 && !$var9 && $var5 >= 2 && $var5 <= 5 ? 1 : $var5 == 2 && $var8 && !$var6 && !$var7 ? 1 : $var5 == 3 && $var9 && !$var6 && !$var7 ? 1 : $var5 == 4 && $var6 && !$var8 && !$var9 ? 1 : $var5 == 5 && $var7 && !$var8 && !$var9 ? 1 : 0;
}
function nms_BlockRedstoneWire_canProvidePower($this) {
    return $this.$wiresProvidePower;
}
function nms_BlockRedstoneWire_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    if (nms_World_getBlockMetadata($var1, $var2, $var3, $var4) > 0)
        nms_World_spawnParticle($var1, $rt_s(287), $var2 + 0.5 + (ju_Random_nextFloat($var5) - 0.5) * 0.2, $var3 + 0.0625, $var4 + 0.5 + (ju_Random_nextFloat($var5) - 0.5) * 0.2, 0.0, 0.0, 0.0);
}
function nms_BlockRedstoneWire_isPowerProviderOrWire($var0, $var1, $var2, $var3) {
    var $var4;
    $var4 = $var0.$getBlockId($var1, $var2, $var3);
    nms_Block_$callClinit();
    return $var4 == nms_Block_redstoneWire.$blockID ? 1 : !$var4 ? 0 : nms_Block_blocksList.data[$var4].$canProvidePower();
}
function nms_BlockWorkbench() {
    nms_Block.call(this);
}
function nms_BlockWorkbench__init_(var_0) {
    var var_1 = new nms_BlockWorkbench();
    nms_BlockWorkbench__init_0(var_1, var_0);
    return var_1;
}
function nms_BlockWorkbench__init_0($this, $var1) {
    nms_Block__init_0($this, $var1, nms_Material_wood);
    $this.$blockIndexInTexture = 59;
}
function nms_BlockWorkbench_getBlockTextureFromSide($this, $var1) {
    if ($var1 == 1)
        $var1 = $this.$blockIndexInTexture - 16 | 0;
    else if (!$var1) {
        nms_Block_$callClinit();
        $var1 = nms_Block_planks.$getBlockTextureFromSide(0);
    } else
        $var1 = $var1 != 2 && $var1 != 4 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture + 1 | 0;
    return $var1;
}
function nms_BlockWorkbench_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    nms_EntityPlayerSP_displayWorkbenchGUI($var5);
    return 1;
}
function nms_BlockCrops() {
    nms_BlockFlower.call(this);
}
function nms_BlockCrops__init_(var_0, var_1) {
    var var_2 = new nms_BlockCrops();
    nms_BlockCrops__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockCrops__init_0($this, $var1, $var2) {
    nms_BlockFlower__init_0($this, $var1, $var2);
    $this.$blockIndexInTexture = $var2;
    nms_Block_setTickOnLoad($this, 1);
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.25, 1.0);
}
function nms_BlockCrops_canThisPlantGrowOnThisBlockID($this, $var1) {
    nms_Block_$callClinit();
    return $var1 != nms_Block_tilledField.$blockID ? 0 : 1;
}
function nms_BlockCrops_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    nms_BlockFlower_func_268_h($this, $var1, $var2, $var3, $var4);
    if (nms_World_getBlockLightValue($var1, $var2, $var3 + 1 | 0, $var4) >= 9) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        if ($var6 < 7 && !ju_Random_nextInt($var5, 100.0 / nms_BlockCrops_getGrowthRate($this, $var1, $var2, $var3, $var4) | 0))
            nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6 + 1 | 0);
    }
}
function nms_BlockCrops_getGrowthRate($this, $var1, $var2, $var3, $var4) {
    var $var5, var$6, $var6, var$8, $var7, $var17, $var8, var$12, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var18, $var19, $var20;
    $var5 = 1.0;
    var$6 = $var4 - 1 | 0;
    $var6 = nms_World_getBlockId($var1, $var2, $var3, var$6);
    var$8 = $var4 + 1 | 0;
    $var7 = nms_World_getBlockId($var1, $var2, $var3, var$8);
    $var17 = $var2 - 1 | 0;
    $var8 = nms_World_getBlockId($var1, $var17, $var3, $var4);
    var$12 = $var2 + 1 | 0;
    $var9 = nms_World_getBlockId($var1, var$12, $var3, $var4);
    $var10 = nms_World_getBlockId($var1, $var17, $var3, var$6);
    $var11 = nms_World_getBlockId($var1, var$12, $var3, var$6);
    $var12 = nms_World_getBlockId($var1, var$12, $var3, var$8);
    $var13 = nms_World_getBlockId($var1, $var17, $var3, var$8);
    $var14 = $var8 != $this.$blockID && $var9 != $this.$blockID ? 0 : 1;
    $var15 = $var6 != $this.$blockID && $var7 != $this.$blockID ? 0 : 1;
    $var16 = $var10 != $this.$blockID && $var11 != $this.$blockID && $var12 != $this.$blockID && $var13 != $this.$blockID ? 0 : 1;
    $var10 = $var3 - 1 | 0;
    while ($var17 <= var$12) {
        $var18 = var$6;
        while ($var18 <= var$8) {
            $var19 = nms_World_getBlockId($var1, $var17, $var10, $var18);
            $var20 = 0.0;
            nms_Block_$callClinit();
            if ($var19 == nms_Block_tilledField.$blockID) {
                $var20 = 1.0;
                if (nms_World_getBlockMetadata($var1, $var17, $var10, $var18) > 0)
                    $var20 = 3.0;
            }
            if (!($var17 == $var2 && $var18 == $var4))
                $var20 = $var20 / 4.0;
            $var5 = $var5 + $var20;
            $var18 = $var18 + 1 | 0;
        }
        $var17 = $var17 + 1 | 0;
    }
    a: {
        if (!$var16) {
            if (!$var14)
                break a;
            if (!$var15)
                break a;
        }
        $var5 = $var5 / 2.0;
    }
    return $var5;
}
function nms_BlockCrops_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    if ($var2 < 0)
        $var2 = 7;
    return $this.$blockIndexInTexture + $var2 | 0;
}
function nms_BlockCrops_getRenderType($this) {
    return 6;
}
function nms_BlockCrops_onBlockDestroyedByPlayer($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, var$8, var$9, $var8, $var9, $var10, $var11, var$14, var$15, var$16, var$17;
    $var6 = 0;
    var$7 = $var2;
    var$8 = $var3;
    var$9 = $var4;
    while ($var6 < 3) {
        if (ju_Random_nextInt($var1.$rand1, 15) <= $var5) {
            $var8 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
            $var9 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
            $var10 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
            $var11 = new nms_EntityItem;
            var$14 = var$7 + $var8;
            var$15 = var$8 + $var9;
            var$16 = var$9 + $var10;
            var$17 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_2(var$17, nms_Item_seeds);
            nms_EntityItem__init_0($var11, $var1, var$14, var$15, var$16, var$17);
            $var11.$field_805_c = 10;
            nms_World_entityJoinedWorld($var1, $var11);
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_BlockCrops_idDropped($this, $var1, $var2) {
    if ($var1 != 7)
        $var1 = (-1);
    else {
        nms_Item_$callClinit();
        $var1 = nms_Item_wheat.$shiftedIndex;
    }
    return $var1;
}
function nms_BlockCrops_quantityDropped($this, $var1) {
    return 1;
}
function nms_BlockSoil() {
    nms_Block.call(this);
}
function nms_BlockSoil__init_(var_0) {
    var var_1 = new nms_BlockSoil();
    nms_BlockSoil__init_0(var_1, var_0);
    return var_1;
}
function nms_BlockSoil__init_0($this, $var1) {
    nms_Block__init_0($this, $var1, nms_Material_ground);
    $this.$blockIndexInTexture = 87;
    nms_Block_setTickOnLoad($this, 1);
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.9375, 1.0);
    nms_Block_setLightOpacity($this, 255);
}
function nms_BlockSoil_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($var2 + 0 | 0, $var3 + 0 | 0, $var4 + 0 | 0, $var2 + 1 | 0, $var3 + 1 | 0, $var4 + 1 | 0);
}
function nms_BlockSoil_isOpaqueCube($this) {
    return 0;
}
function nms_BlockSoil_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockSoil_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    $var1 = $rt_compare($var1, 1);
    return !$var1 && $var2 > 0 ? $this.$blockIndexInTexture - 1 | 0 : $var1 ? 2 : $this.$blockIndexInTexture;
}
function nms_BlockSoil_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, var$8, var$9, var$10, var$11, var$12, var$13;
    if (!ju_Random_nextInt($var5, 5)) {
        var$6 = $var2 - 4 | 0;
        $var6 = $var2 + 4 | 0;
        var$8 = $var3 + 1 | 0;
        var$9 = $var4 - 4 | 0;
        var$10 = $var4 + 4 | 0;
        a: {
            while (var$6 <= $var6) {
                var$11 = $var3;
                while (var$11 <= var$8) {
                    var$12 = var$9;
                    while (var$12 <= var$10) {
                        if (nms_World_getBlockMaterial($var1, var$6, var$11, var$12) === nms_Material_water) {
                            var$6 = 1;
                            break a;
                        }
                        var$12 = var$12 + 1 | 0;
                    }
                    var$11 = var$11 + 1 | 0;
                }
                var$6 = var$6 + 1 | 0;
            }
            var$6 = 0;
        }
        if (var$6)
            nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 7);
        else {
            $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
            if ($var6 > 0)
                nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6 - 1 | 0);
            else {
                var$6 = $var2 - 0 | 0;
                $var6 = $var2 + 0 | 0;
                var$12 = $var4 - 0 | 0;
                var$9 = $var4 + 0 | 0;
                b: {
                    while (var$6 <= $var6) {
                        var$11 = var$12;
                        while (var$11 <= var$9) {
                            var$13 = nms_World_getBlockId($var1, var$6, var$8, var$11);
                            nms_Block_$callClinit();
                            if (var$13 == nms_Block_crops.$blockID) {
                                var$6 = 1;
                                break b;
                            }
                            var$11 = var$11 + 1 | 0;
                        }
                        var$6 = var$6 + 1 | 0;
                    }
                    var$6 = 0;
                }
                if (!var$6) {
                    nms_Block_$callClinit();
                    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_dirt.$blockID);
                }
            }
        }
    }
}
function nms_BlockSoil_onEntityWalking($this, $var1, $var2, $var3, $var4, $var5) {
    if (!ju_Random_nextInt($var1.$rand1, 4)) {
        nms_Block_$callClinit();
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_dirt.$blockID);
    }
}
function nms_BlockSoil_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    if (nms_World_getBlockMaterial($var1, $var2, $var3 + 1 | 0, $var4).$func_878_a()) {
        nms_Block_$callClinit();
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_dirt.$blockID);
    }
}
function nms_BlockSoil_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_dirt.$idDropped(0, $var2);
}
function nms_BlockFurnace() {
    nms_BlockContainer.call(this);
    this.$isActive = 0;
}
function nms_BlockFurnace__init_(var_0, var_1) {
    var var_2 = new nms_BlockFurnace();
    nms_BlockFurnace__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockFurnace__init_0($this, $var1, $var2) {
    nms_BlockContainer__init_0($this, $var1, nms_Material_rock);
    $this.$isActive = $var2;
    $this.$blockIndexInTexture = 45;
}
function nms_BlockFurnace_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_stoneOvenIdle.$blockID;
}
function nms_BlockFurnace_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6, var$7, var$8, var$9;
    nms_BlockContainer_onBlockAdded($this, $var1, $var2, $var3, $var4);
    var$5 = nms_World_getBlockId($var1, $var2, $var3, $var4 - 1 | 0);
    var$6 = nms_World_getBlockId($var1, $var2, $var3, $var4 + 1 | 0);
    var$7 = nms_World_getBlockId($var1, $var2 - 1 | 0, $var3, $var4);
    var$8 = nms_World_getBlockId($var1, $var2 + 1 | 0, $var3, $var4);
    var$9 = 3;
    nms_Block_$callClinit();
    if (nms_Block_opaqueCubeLookup.data[var$5] && !nms_Block_opaqueCubeLookup.data[var$6])
        var$9 = 3;
    if (nms_Block_opaqueCubeLookup.data[var$6] && !nms_Block_opaqueCubeLookup.data[var$5])
        var$9 = 2;
    if (nms_Block_opaqueCubeLookup.data[var$7] && !nms_Block_opaqueCubeLookup.data[var$8])
        var$9 = 5;
    if (nms_Block_opaqueCubeLookup.data[var$8] && !nms_Block_opaqueCubeLookup.data[var$7])
        var$9 = 4;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, var$9);
}
function nms_BlockFurnace_getBlockTexture($this, $var1, $var2, $var3, $var4, $var5) {
    if ($var5 == 1) {
        nms_Block_$callClinit();
        return nms_Block_stone.$blockIndexInTexture;
    }
    if (!$var5) {
        nms_Block_$callClinit();
        return nms_Block_stone.$blockIndexInTexture;
    }
    return $var5 != $var1.$getBlockMetadata($var2, $var3, $var4) ? $this.$blockIndexInTexture : !$this.$isActive ? $this.$blockIndexInTexture - 1 | 0 : $this.$blockIndexInTexture + 16 | 0;
}
function nms_BlockFurnace_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, $var11, var$11, var$12, var$13, var$14, var$15, var$16;
    if ($this.$isActive) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        $var7 = $var2 + 0.5;
        $var8 = $var3 + 0.0 + ju_Random_nextFloat($var5) * 6.0 / 16.0;
        $var9 = $var4 + 0.5;
        $var11 = ju_Random_nextFloat($var5) * 0.6000000238418579 - 0.30000001192092896;
        if ($var6 == 4) {
            var$11 = $var7 - 0.5199999809265137;
            var$12 = $var8;
            var$13 = $var9 + $var11;
            nms_World_spawnParticle($var1, $rt_s(283), var$11, var$12, var$13, 0.0, 0.0, 0.0);
            nms_World_spawnParticle($var1, $rt_s(284), var$11, var$12, var$13, 0.0, 0.0, 0.0);
        } else if ($var6 == 5) {
            var$11 = $var7 + 0.5199999809265137;
            var$12 = $var8;
            var$13 = $var9 + $var11;
            nms_World_spawnParticle($var1, $rt_s(283), var$11, var$12, var$13, 0.0, 0.0, 0.0);
            nms_World_spawnParticle($var1, $rt_s(284), var$11, var$12, var$13, 0.0, 0.0, 0.0);
        } else if ($var6 == 2) {
            var$11 = $var7 + $var11;
            var$12 = $var8;
            var$13 = $var9 - 0.5199999809265137;
            nms_World_spawnParticle($var1, $rt_s(283), var$11, var$12, var$13, 0.0, 0.0, 0.0);
            nms_World_spawnParticle($var1, $rt_s(284), var$11, var$12, var$13, 0.0, 0.0, 0.0);
        } else if ($var6 == 3) {
            var$14 = $var7 + $var11;
            var$15 = $var8;
            var$16 = $var9 + 0.5199999809265137;
            nms_World_spawnParticle($var1, $rt_s(283), var$14, var$15, var$16, 0.0, 0.0, 0.0);
            nms_World_spawnParticle($var1, $rt_s(284), var$14, var$15, var$16, 0.0, 0.0, 0.0);
        }
    }
}
function nms_BlockFurnace_getBlockTextureFromSide($this, $var1) {
    if ($var1 == 1) {
        nms_Block_$callClinit();
        $var1 = nms_Block_stone.$blockID;
    } else if (!$var1) {
        nms_Block_$callClinit();
        $var1 = nms_Block_stone.$blockID;
    } else
        $var1 = $var1 != 3 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture - 1 | 0;
    return $var1;
}
function nms_BlockFurnace_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    nms_EntityPlayerSP_displayGUIFurnace($var5, nms_World_getBlockTileEntity($var1, $var2, $var3, $var4));
    return 1;
}
function nms_BlockFurnace_SetBlockEntity($this) {
    return nms_TileEntityFurnace__init_0();
}
function nms_BlockFurnace_onBlockPlacedBy($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_MathHelper_floor_double($var5.$rotationYaw * 4.0 / 360.0 + 0.5) & 3;
    if (!$var6)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 2);
    if ($var6 == 1)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 5);
    if ($var6 == 2)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 3);
    if ($var6 == 3)
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 4);
}
function nms_BlockSign() {
    var a = this; nms_BlockContainer.call(a);
    a.$signEntityClass = null;
    a.$isFreestanding = 0;
}
function nms_BlockSign__init_(var_0, var_1, var_2) {
    var var_3 = new nms_BlockSign();
    nms_BlockSign__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_BlockSign__init_0($this, $var1, $var2, $var3) {
    nms_BlockContainer__init_0($this, $var1, nms_Material_wood);
    $this.$isFreestanding = $var3;
    $this.$blockIndexInTexture = 4;
    $this.$signEntityClass = $var2;
    nms_Block_setBlockBounds($this, 0.25, 0.0, 0.25, 0.75, 1.0, 0.75);
}
function nms_BlockSign_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockSign_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    nms_BlockSign_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4);
    return nms_Block_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4);
}
function nms_BlockSign_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    var $var5;
    if (!$this.$isFreestanding) {
        $var5 = $var1.$getBlockMetadata($var2, $var3, $var4);
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
        if ($var5 == 2)
            nms_Block_setBlockBounds($this, 0.0, 0.28125, 0.875, 1.0, 0.78125, 1.0);
        if ($var5 == 3)
            nms_Block_setBlockBounds($this, 0.0, 0.28125, 0.0, 1.0, 0.78125, 0.125);
        if ($var5 == 4)
            nms_Block_setBlockBounds($this, 0.875, 0.28125, 0.0, 1.0, 0.78125, 1.0);
        if ($var5 == 5)
            nms_Block_setBlockBounds($this, 0.0, 0.28125, 0.0, 0.125, 0.78125, 1.0);
    }
}
function nms_BlockSign_getRenderType($this) {
    return (-1);
}
function nms_BlockSign_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockSign_isOpaqueCube($this) {
    return 0;
}
function nms_BlockSign_SetBlockEntity($this) {
    var $var2, var$2, $$je;
    a: {
        try {
            $var2 = jl_Class_newInstance($this.$signEntityClass);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var2 = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $var2;
    }
    var$2 = new jl_RuntimeException;
    jl_Throwable__init_4(var$2, $var2);
    $rt_throw(var$2);
}
function nms_BlockSign_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_sign.$shiftedIndex;
}
function nms_BlockSign_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    $var6 = 0;
    if (!$this.$isFreestanding) {
        $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        $var6 = 1;
        if ($var7 == 2 && nms_World_getBlockMaterial($var1, $var2, $var3, $var4 + 1 | 0).$func_878_a())
            $var6 = 0;
        if ($var7 == 3 && nms_World_getBlockMaterial($var1, $var2, $var3, $var4 - 1 | 0).$func_878_a())
            $var6 = 0;
        if ($var7 == 4 && nms_World_getBlockMaterial($var1, $var2 + 1 | 0, $var3, $var4).$func_878_a())
            $var6 = 0;
        if ($var7 == 5 && nms_World_getBlockMaterial($var1, $var2 - 1 | 0, $var3, $var4).$func_878_a())
            $var6 = 0;
    } else if (!nms_World_getBlockMaterial($var1, $var2, $var3 - 1 | 0, $var4).$func_878_a())
        $var6 = 1;
    if ($var6) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_TileEntity() {
    var a = this; jl_Object.call(a);
    a.$worldObj1 = null;
    a.$xCoord0 = 0;
    a.$yCoord0 = 0;
    a.$zCoord0 = 0;
}
var nms_TileEntity_nameToClassMap = null;
var nms_TileEntity_classToNameMap = null;
function nms_TileEntity__init_0() {
    var var_0 = new nms_TileEntity();
    nms_TileEntity__init_(var_0);
    return var_0;
}
function nms_TileEntity__init_($this) {
    return;
}
function nms_TileEntity_addMapping($var0, $var1) {
    var var$3;
    if (!ju_HashMap_containsKey(nms_TileEntity_classToNameMap, $var1)) {
        ju_HashMap_putImpl(nms_TileEntity_nameToClassMap, $var1, $var0);
        ju_HashMap_putImpl(nms_TileEntity_classToNameMap, $var0, $var1);
        return;
    }
    $var0 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_($var0, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(288)), $var1)));
    $rt_throw($var0);
}
function nms_TileEntity_readFromNBT($this, $var1) {
    $this.$xCoord0 = nms_NBTTagCompound_getInteger($var1, $rt_s(289));
    $this.$yCoord0 = nms_NBTTagCompound_getInteger($var1, $rt_s(290));
    $this.$zCoord0 = nms_NBTTagCompound_getInteger($var1, $rt_s(291));
}
function nms_TileEntity_writeToNBT($this, $var1) {
    var $var2;
    $var2 = ju_HashMap_get(nms_TileEntity_classToNameMap, jl_Object_getClass($this));
    if ($var2 !== null) {
        nms_NBTTagCompound_setString($var1, $rt_s(292), $var2);
        nms_NBTTagCompound_setInteger($var1, $rt_s(289), $this.$xCoord0);
        nms_NBTTagCompound_setInteger($var1, $rt_s(290), $this.$yCoord0);
        nms_NBTTagCompound_setInteger($var1, $rt_s(291), $this.$zCoord0);
        return;
    }
    $var1 = new jl_RuntimeException;
    $var2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var2);
    jl_Throwable__init_($var1, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append0($var2, jl_Object_getClass($this)), $rt_s(293))));
    $rt_throw($var1);
}
function nms_TileEntity_updateEntity($this) {
    return;
}
function nms_TileEntity_getBlockMetadata($this) {
    return nms_World_getBlockMetadata($this.$worldObj1, $this.$xCoord0, $this.$yCoord0, $this.$zCoord0);
}
function nms_TileEntity_onInventoryChanged($this) {
    nms_World_func_698_b($this.$worldObj1, $this.$xCoord0, $this.$yCoord0, $this.$zCoord0, $this);
}
function nms_TileEntity_getDistanceFrom($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11;
    $var7 = $this.$xCoord0 + 0.5 - $var1;
    $var9 = $this.$yCoord0 + 0.5 - $var3;
    $var11 = $this.$zCoord0 + 0.5 - $var5;
    return $var7 * $var7 + $var9 * $var9 + $var11 * $var11;
}
function nms_TileEntity_getBlockType($this) {
    nms_Block_$callClinit();
    return nms_Block_blocksList.data[nms_World_getBlockId($this.$worldObj1, $this.$xCoord0, $this.$yCoord0, $this.$zCoord0)];
}
function nms_TileEntity__clinit_() {
    nms_TileEntity_nameToClassMap = ju_HashMap__init_0();
    nms_TileEntity_classToNameMap = ju_HashMap__init_0();
    nms_TileEntity_addMapping($rt_cls(nms_TileEntityFurnace), $rt_s(294));
    nms_TileEntity_addMapping($rt_cls(nms_TileEntityChest), $rt_s(295));
    nms_TileEntity_addMapping($rt_cls(nms_TileEntitySign), $rt_s(296));
    nms_TileEntity_addMapping($rt_cls(nms_TileEntityMobSpawner), $rt_s(297));
}
function nms_TileEntitySign() {
    var a = this; nms_TileEntity.call(a);
    a.$signText = null;
    a.$lineBeingEdited = 0;
}
function nms_TileEntitySign__init_0() {
    var var_0 = new nms_TileEntitySign();
    nms_TileEntitySign__init_(var_0);
    return var_0;
}
function nms_TileEntitySign__init_($this) {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_String, 4);
    var$2 = var$1.data;
    var$2[0] = $rt_s(17);
    var$2[1] = $rt_s(17);
    var$2[2] = $rt_s(17);
    var$2[3] = $rt_s(17);
    $this.$signText = var$1;
    $this.$lineBeingEdited = (-1);
}
function nms_TileEntitySign_writeToNBT($this, $var1) {
    nms_TileEntity_writeToNBT($this, $var1);
    nms_NBTTagCompound_setString($var1, $rt_s(298), $this.$signText.data[0]);
    nms_NBTTagCompound_setString($var1, $rt_s(299), $this.$signText.data[1]);
    nms_NBTTagCompound_setString($var1, $rt_s(300), $this.$signText.data[2]);
    nms_NBTTagCompound_setString($var1, $rt_s(301), $this.$signText.data[3]);
}
function nms_TileEntitySign_readFromNBT($this, $var1) {
    var $var2, var$3, var$4, $var2_0;
    nms_TileEntity_readFromNBT($this, $var1);
    $var2 = 0;
    while ($var2 < 4) {
        var$3 = $this.$signText.data;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        var$4 = jl_StringBuilder_append(var$4, $rt_s(302));
        $var2_0 = $var2 + 1 | 0;
        var$3[$var2] = nms_NBTTagCompound_getString($var1, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, $var2_0)));
        if (jl_String_length($this.$signText.data[$var2]) > 15)
            $this.$signText.data[$var2] = jl_String_substring0($this.$signText.data[$var2], 0, 15);
        $var2 = $var2_0;
    }
}
function nms_BlockDoor() {
    nms_Block.call(this);
}
function nms_BlockDoor__init_(var_0, var_1) {
    var var_2 = new nms_BlockDoor();
    nms_BlockDoor__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockDoor__init_0($this, $var1, $var2) {
    nms_Block__init_0($this, $var1, $var2);
    $this.$blockIndexInTexture = 97;
    if ($var2 === nms_Material_iron)
        $this.$blockIndexInTexture = $this.$blockIndexInTexture + 1 | 0;
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
}
function nms_BlockDoor_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    var $var3, $var5;
    if ($var1 && $var1 != 1) {
        $var3 = nms_BlockDoor_func_312_c($this, $var2);
        if (($var3 && $var3 != 2 ? 0 : 1) ^ ($var1 > 3 ? 0 : 1))
            return $this.$blockIndexInTexture;
        $var1 = (($var3 / 2 | 0) + ($var1 & 1 ^ $var3) | 0) + (($var2 & 4) / 4 | 0) | 0;
        $var5 = $this.$blockIndexInTexture - (($var2 & 8) * 2 | 0) | 0;
        if ($var1 & 1)
            $var5 =  -$var5;
        return $var5;
    }
    return $this.$blockIndexInTexture;
}
function nms_BlockDoor_isOpaqueCube($this) {
    return 0;
}
function nms_BlockDoor_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockDoor_getRenderType($this) {
    return 7;
}
function nms_BlockDoor_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    nms_BlockDoor_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4);
    return nms_Block_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4);
}
function nms_BlockDoor_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    nms_BlockDoor_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4);
    return nms_Block_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4);
}
function nms_BlockDoor_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    nms_BlockDoor_func_313_b($this, nms_BlockDoor_func_312_c($this, $var1.$getBlockMetadata($var2, $var3, $var4)));
}
function nms_BlockDoor_func_313_b($this, $var1) {
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0);
    if (!$var1)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 0.1875);
    if ($var1 == 1)
        nms_Block_setBlockBounds($this, 0.8125, 0.0, 0.0, 1.0, 1.0, 1.0);
    if ($var1 == 2)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.8125, 1.0, 1.0, 1.0);
    if ($var1 == 3)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 0.1875, 1.0, 1.0);
}
function nms_BlockDoor_onBlockClicked($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockDoor_blockActivated($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockDoor_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7;
    if ($this.$blockMaterial === nms_Material_iron)
        return 1;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var6 & 8) {
        $var3 = $var3 - 1 | 0;
        if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID)
            nms_BlockDoor_blockActivated($this, $var1, $var2, $var3, $var4, $var5);
        return 1;
    }
    var$7 = $var3 + 1 | 0;
    if (nms_World_getBlockId($var1, $var2, var$7, $var4) == $this.$blockID)
        nms_World_setBlockMetadataWithNotify($var1, $var2, var$7, $var4, ($var6 ^ 4) + 8 | 0);
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6 ^ 4);
    nms_World_func_701_b($var1, $var2, $var3 - 1 | 0, $var4, $var2, $var3, $var4);
    if (jl_Math_random() >= 0.5)
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(303), 1.0, ju_Random_nextFloat($var1.$rand1) * 0.10000000149011612 + 0.8999999761581421);
    else
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(304), 1.0, ju_Random_nextFloat($var1.$rand1) * 0.10000000149011612 + 0.8999999761581421);
    return 1;
}
function nms_BlockDoor_func_311_a($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var6 & 8) {
        $var3 = $var3 - 1 | 0;
        if (nms_World_getBlockId($var1, $var2, $var3, $var4) == $this.$blockID)
            nms_BlockDoor_func_311_a($this, $var1, $var2, $var3, $var4, $var5);
    } else if (((nms_World_getBlockMetadata($var1, $var2, $var3, $var4) & 4) <= 0 ? 0 : 1) != $var5) {
        var$7 = $var3 + 1 | 0;
        if (nms_World_getBlockId($var1, $var2, var$7, $var4) == $this.$blockID)
            nms_World_setBlockMetadataWithNotify($var1, $var2, var$7, $var4, ($var6 ^ 4) + 8 | 0);
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6 ^ 4);
        nms_World_func_701_b($var1, $var2, $var3 - 1 | 0, $var4, $var2, $var3, $var4);
        if (jl_Math_random() >= 0.5)
            nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(303), 1.0, ju_Random_nextFloat($var1.$rand1) * 0.10000000149011612 + 0.8999999761581421);
        else
            nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(304), 1.0, ju_Random_nextFloat($var1.$rand1) * 0.10000000149011612 + 0.8999999761581421);
    }
}
function nms_BlockDoor_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var8, $var7;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var6 & 8) {
        $var8 = $var3 - 1 | 0;
        if (nms_World_getBlockId($var1, $var2, $var8, $var4) != $this.$blockID)
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        if ($var5 > 0) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[$var5].$canProvidePower())
                nms_BlockDoor_onNeighborBlockChange($this, $var1, $var2, $var8, $var4, $var5);
        }
    } else {
        $var7 = 0;
        $var8 = $var3 + 1 | 0;
        if (nms_World_getBlockId($var1, $var2, $var8, $var4) != $this.$blockID) {
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
            $var7 = 1;
        }
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4)) {
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
            $var7 = 1;
            if (nms_World_getBlockId($var1, $var2, $var8, $var4) == $this.$blockID)
                nms_World_setBlockWithNotify($var1, $var2, $var8, $var4, 0);
        }
        if ($var7)
            nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, $var6);
        else if ($var5 > 0) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[$var5].$canProvidePower())
                nms_BlockDoor_func_311_a($this, $var1, $var2, $var3, $var4, !nms_World_isBlockIndirectlyGettingPowered($var1, $var2, $var3, $var4) && !nms_World_isBlockIndirectlyGettingPowered($var1, $var2, $var8, $var4) ? 0 : 1);
        }
    }
}
function nms_BlockDoor_idDropped($this, $var1, $var2) {
    if ($var1 & 8)
        $var1 = 0;
    else if ($this.$blockMaterial !== nms_Material_iron) {
        nms_Item_$callClinit();
        $var1 = nms_Item_doorWood.$shiftedIndex;
    } else {
        nms_Item_$callClinit();
        $var1 = nms_Item_doorSteel.$shiftedIndex;
    }
    return $var1;
}
function nms_BlockDoor_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_BlockDoor_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4);
    return nms_Block_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_BlockDoor_func_312_c($this, $var1) {
    return $var1 & 4 ? $var1 & 3 : ($var1 - 1 | 0) & 3;
}
function nms_BlockDoor_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return $var3 >= 127 ? 0 : nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4) && nms_Block_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) && nms_Block_canPlaceBlockAt($this, $var1, $var2, $var3 + 1 | 0, $var4) ? 1 : 0;
}
function nms_BlockLadder() {
    nms_Block.call(this);
}
function nms_BlockLadder__init_(var_0, var_1) {
    var var_2 = new nms_BlockLadder();
    nms_BlockLadder__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockLadder__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_circuits);
}
function nms_BlockLadder_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var5 == 2)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.875, 1.0, 1.0, 1.0);
    if ($var5 == 3)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 0.125);
    if ($var5 == 4)
        nms_Block_setBlockBounds($this, 0.875, 0.0, 0.0, 1.0, 1.0, 1.0);
    if ($var5 == 5)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 0.125, 1.0, 1.0);
    return nms_Block_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4);
}
function nms_BlockLadder_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var5 == 2)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.875, 1.0, 1.0, 1.0);
    if ($var5 == 3)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 1.0, 0.125);
    if ($var5 == 4)
        nms_Block_setBlockBounds($this, 0.875, 0.0, 0.0, 1.0, 1.0, 1.0);
    if ($var5 == 5)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 0.125, 1.0, 1.0);
    return nms_Block_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4);
}
function nms_BlockLadder_isOpaqueCube($this) {
    return 0;
}
function nms_BlockLadder_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockLadder_getRenderType($this) {
    return 8;
}
function nms_BlockLadder_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0);
}
function nms_BlockLadder_onBlockPlaced($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (!($var6 && $var5 != 2) && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        $var6 = 2;
    if (!($var6 && $var5 != 3) && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        $var6 = 3;
    if (!($var6 && $var5 != 4) && nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        $var6 = 4;
    if (!($var6 && $var5 != 5) && nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        $var6 = 5;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6);
}
function nms_BlockLadder_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = 0;
    if ($var6 == 2 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        $var7 = 1;
    if ($var6 == 3 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        $var7 = 1;
    if ($var6 == 4 && nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        $var7 = 1;
    if ($var6 == 5 && nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        $var7 = 1;
    if (!$var7) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, $var6);
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockLadder_quantityDropped($this, $var1) {
    return 1;
}
function nms_BlockMinecartTrack() {
    nms_Block.call(this);
}
function nms_BlockMinecartTrack__init_(var_0, var_1) {
    var var_2 = new nms_BlockMinecartTrack();
    nms_BlockMinecartTrack__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockMinecartTrack__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_circuits);
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.125, 1.0);
}
function nms_BlockMinecartTrack_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockMinecartTrack_isOpaqueCube($this) {
    return 0;
}
function nms_BlockMinecartTrack_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_BlockMinecartTrack_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4);
    return nms_Block_collisionRayTrace($this, $var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_BlockMinecartTrack_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = $var1.$getBlockMetadata($var2, $var3, $var4);
    if ($var5 >= 2 && $var5 <= 5)
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.625, 1.0);
    else
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.125, 1.0);
}
function nms_BlockMinecartTrack_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    return $var2 < 6 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture - 16 | 0;
}
function nms_BlockMinecartTrack_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockMinecartTrack_getRenderType($this) {
    return 9;
}
function nms_BlockMinecartTrack_quantityDropped($this, $var1) {
    return 1;
}
function nms_BlockMinecartTrack_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4);
}
function nms_BlockMinecartTrack_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 15);
    nms_BlockMinecartTrack_func_4031_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockMinecartTrack_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, var$8, var$9;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = 0;
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4))
        $var7 = 1;
    if ($var6 == 2 && !nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        $var7 = 1;
    if ($var6 == 3 && !nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        $var7 = 1;
    if ($var6 == 4 && !nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        $var7 = 1;
    if ($var6 == 5 && !nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        $var7 = 1;
    if ($var7) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    } else if ($var5 > 0) {
        nms_Block_$callClinit();
        if (nms_Block_blocksList.data[$var5].$canProvidePower()) {
            var$8 = nms_MinecartTrackLogic__init_($this, $var1, $var2, $var3, $var4);
            var$9 = 0;
            if (nms_MinecartTrackLogic_func_784_a(var$8, var$8.$field_1165_c, var$8.$field_1164_d, var$8.$field_1163_e - 1 | 0))
                var$9 = 1;
            if (nms_MinecartTrackLogic_func_784_a(var$8, var$8.$field_1165_c, var$8.$field_1164_d, var$8.$field_1163_e + 1 | 0))
                var$9 = var$9 + 1 | 0;
            if (nms_MinecartTrackLogic_func_784_a(var$8, var$8.$field_1165_c - 1 | 0, var$8.$field_1164_d, var$8.$field_1163_e))
                var$9 = var$9 + 1 | 0;
            if (nms_MinecartTrackLogic_func_784_a(var$8, var$8.$field_1165_c + 1 | 0, var$8.$field_1164_d, var$8.$field_1163_e))
                var$9 = var$9 + 1 | 0;
            if (var$9 == 3)
                nms_BlockMinecartTrack_func_4031_h($this, $var1, $var2, $var3, $var4);
        }
    }
}
function nms_BlockMinecartTrack_func_4031_h($this, $var1, $var2, $var3, $var4) {
    nms_MinecartTrackLogic_func_792_a(nms_MinecartTrackLogic__init_($this, $var1, $var2, $var3, $var4), nms_World_isBlockIndirectlyGettingPowered($var1, $var2, $var3, $var4));
}
function nms_BlockLever() {
    nms_Block.call(this);
}
function nms_BlockLever__init_(var_0, var_1) {
    var var_2 = new nms_BlockLever();
    nms_BlockLever__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockLever__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_circuits);
}
function nms_BlockLever_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockLever_isOpaqueCube($this) {
    return 0;
}
function nms_BlockLever_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockLever_getRenderType($this) {
    return 12;
}
function nms_BlockLever_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4);
}
function nms_BlockLever_onBlockPlaced($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, var$8;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = $var6 & 8;
    var$8 = $var6 & 7;
    if ($var5 == 1 && nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4))
        var$8 = 5 + ju_Random_nextInt($var1.$rand1, 2) | 0;
    if ($var5 == 2 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        var$8 = 4;
    if ($var5 == 3 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        var$8 = 3;
    if ($var5 == 4 && nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        var$8 = 2;
    if ($var5 == 5 && nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        var$8 = 1;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, var$8 + $var7 | 0);
}
function nms_BlockLever_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    if (nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 1);
    else if (nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 2);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 3);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 4);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 5 + ju_Random_nextInt($var1.$rand1, 2) | 0);
    nms_BlockLever_checkIfAttachedToBlock($this, $var1, $var2, $var3, $var4);
}
function nms_BlockLever_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    if (nms_BlockLever_checkIfAttachedToBlock($this, $var1, $var2, $var3, $var4)) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4) & 7;
        $var7 = 0;
        if (!nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) && $var6 == 1)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) && $var6 == 2)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) && $var6 == 3)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0) && $var6 == 4)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4) && $var6 == 5)
            $var7 = 1;
        if ($var7) {
            nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        }
    }
}
function nms_BlockLever_checkIfAttachedToBlock($this, $var1, $var2, $var3, $var4) {
    if (nms_BlockLever_canPlaceBlockAt($this, $var1, $var2, $var3, $var4))
        return 1;
    nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    return 0;
}
function nms_BlockLever_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = $var1.$getBlockMetadata($var2, $var3, $var4) & 7;
    if ($var5 == 1)
        nms_Block_setBlockBounds($this, 0.0, 0.20000000298023224, 0.3125, 0.375, 0.800000011920929, 0.6875);
    else if ($var5 == 2)
        nms_Block_setBlockBounds($this, 0.625, 0.20000000298023224, 0.3125, 1.0, 0.800000011920929, 0.6875);
    else if ($var5 == 3)
        nms_Block_setBlockBounds($this, 0.3125, 0.20000000298023224, 0.0, 0.6875, 0.800000011920929, 0.375);
    else if ($var5 != 4)
        nms_Block_setBlockBounds($this, 0.25, 0.0, 0.25, 0.75, 0.6000000238418579, 0.75);
    else
        nms_Block_setBlockBounds($this, 0.3125, 0.20000000298023224, 0.625, 0.6875, 0.800000011920929, 1.0);
}
function nms_BlockLever_onBlockClicked($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockLever_blockActivated($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockLever_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = $var6 & 7;
    $var8 = 8 - ($var6 & 8) | 0;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var7 + $var8 | 0);
    nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
    nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(305), 0.30000001192092896, $var8 <= 0 ? 0.5 : 0.6000000238418579);
    nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
    if ($var7 == 1)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
    else if ($var7 == 2)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
    else if ($var7 == 3)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
    else if ($var7 != 4)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
    else
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
    return 1;
}
function nms_BlockLever_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (($var5 & 8) > 0) {
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        $var6 = $var5 & 7;
        if ($var6 == 1)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
        else if ($var6 == 2)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
        else if ($var6 == 3)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
        else if ($var6 != 4)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        else
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
    }
}
function nms_BlockLever_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return (nms_World_getBlockMetadata($var1, $var2, $var3, $var4) & 8) <= 0 ? 0 : 1;
}
function nms_BlockLever_isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (!($var6 & 8))
        return 0;
    $var7 = $var6 & 7;
    return $var7 == 5 && $var5 == 1 ? 1 : $var7 == 4 && $var5 == 2 ? 1 : $var7 == 3 && $var5 == 3 ? 1 : $var7 == 2 && $var5 == 4 ? 1 : $var7 == 1 && $var5 == 5 ? 1 : 0;
}
function nms_BlockLever_canProvidePower($this) {
    return 1;
}
function nms_BlockPressurePlate() {
    nms_Block.call(this);
    this.$triggerMobType = null;
}
function nms_BlockPressurePlate__init_(var_0, var_1, var_2) {
    var var_3 = new nms_BlockPressurePlate();
    nms_BlockPressurePlate__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_BlockPressurePlate__init_0($this, $var1, $var2, $var3) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_rock);
    $this.$triggerMobType = $var3;
    nms_Block_setTickOnLoad($this, 1);
    nms_Block_setBlockBounds($this, 0.0625, 0.0, 0.0625, 0.9375, 0.03125, 0.9375);
}
function nms_BlockPressurePlate_tickRate($this) {
    return 20;
}
function nms_BlockPressurePlate_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockPressurePlate_isOpaqueCube($this) {
    return 0;
}
function nms_BlockPressurePlate_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockPressurePlate_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4);
}
function nms_BlockPressurePlate_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_BlockPressurePlate_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = 0;
    if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4))
        $var6 = 1;
    if ($var6) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockPressurePlate_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    if (nms_World_getBlockMetadata($var1, $var2, $var3, $var4))
        nms_BlockPressurePlate_setStateIfMobInteractsWithPlate($this, $var1, $var2, $var3, $var4);
}
function nms_BlockPressurePlate_onEntityCollidedWithBlock($this, $var1, $var2, $var3, $var4, $var5) {
    if (nms_World_getBlockMetadata($var1, $var2, $var3, $var4) != 1)
        nms_BlockPressurePlate_setStateIfMobInteractsWithPlate($this, $var1, $var2, $var3, $var4);
}
function nms_BlockPressurePlate_setStateIfMobInteractsWithPlate($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var8, var$8, var$9;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4) != 1 ? 0 : 1;
    $var6 = 0;
    $var8 = null;
    if ($this.$triggerMobType === nms_EnumMobType_everything) {
        $var8 = null;
        var$8 = $var2 + 0.125;
        var$9 = $var3;
        $var8 = nms_World_getEntitiesWithinAABBExcludingEntity($var1, $var8, nms_AxisAlignedBB_getBoundingBoxFromPool(var$8, var$9, $var4 + 0.125, ($var2 + 1 | 0) - 0.125, var$9 + 0.25, ($var4 + 1 | 0) - 0.125));
    }
    if ($this.$triggerMobType === nms_EnumMobType_mobs) {
        var$8 = $var2 + 0.125;
        var$9 = $var3;
        $var8 = nms_World_getEntitiesWithinAABB($var1, $rt_cls(nms_EntityLiving), nms_AxisAlignedBB_getBoundingBoxFromPool(var$8, var$9, $var4 + 0.125, ($var2 + 1 | 0) - 0.125, var$9 + 0.25, ($var4 + 1 | 0) - 0.125));
    }
    if ($this.$triggerMobType === nms_EnumMobType_players) {
        var$8 = $var2 + 0.125;
        var$9 = $var3;
        $var8 = nms_World_getEntitiesWithinAABB($var1, $rt_cls(nms_EntityPlayer), nms_AxisAlignedBB_getBoundingBoxFromPool(var$8, var$9, $var4 + 0.125, ($var2 + 1 | 0) - 0.125, var$9 + 0.25, ($var4 + 1 | 0) - 0.125));
    }
    if ($var8.$size > 0)
        $var6 = 1;
    if ($var6 && !$var5) {
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 1);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.1, $var4 + 0.5, $rt_s(305), 0.30000001192092896, 0.6000000238418579);
    }
    if (!$var6 && $var5) {
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 0);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.1, $var4 + 0.5, $rt_s(305), 0.30000001192092896, 0.5);
    }
    if ($var6)
        nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
}
function nms_BlockPressurePlate_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    if (nms_World_getBlockMetadata($var1, $var2, $var3, $var4) > 0) {
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
    }
}
function nms_BlockPressurePlate_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    if (!($var1.$getBlockMetadata($var2, $var3, $var4) != 1 ? 0 : 1))
        nms_Block_setBlockBounds($this, 0.0625, 0.0, 0.0625, 0.9375, 0.0625, 0.9375);
    else
        nms_Block_setBlockBounds($this, 0.0625, 0.0, 0.0625, 0.9375, 0.03125, 0.9375);
}
function nms_BlockPressurePlate_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return nms_World_getBlockMetadata($var1, $var2, $var3, $var4) <= 0 ? 0 : 1;
}
function nms_BlockPressurePlate_isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return !nms_World_getBlockMetadata($var1, $var2, $var3, $var4) ? 0 : $var5 != 1 ? 0 : 1;
}
function nms_BlockPressurePlate_canProvidePower($this) {
    return 1;
}
function nms_BlockPressurePlate_func_237_e($this) {
    nms_Block_setBlockBounds($this, 0.0, 0.375, 0.0, 1.0, 0.625, 1.0);
}
function jl_Enum() {
    var a = this; jl_Object.call(a);
    a.$name2 = null;
    a.$ordinal = 0;
}
function jl_Enum__init_(var_0, var_1) {
    var var_2 = new jl_Enum();
    jl_Enum__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Enum__init_0($this, $name, $ordinal) {
    $this.$name2 = $name;
    $this.$ordinal = $ordinal;
}
function jl_Enum_ordinal($this) {
    return $this.$ordinal;
}
function jl_Enum_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Enum_hashCode($this) {
    return jl_Object_identity($this);
}
function jl_Enum_getDeclaringClass($this) {
    var $result;
    $result = jl_Object_getClass($this);
    if (!jl_Object_equals(jl_Class_getSuperclass($result), $rt_cls(jl_Enum)))
        $result = jl_Class_getSuperclass($result);
    return $result;
}
function jl_Enum_compareTo($this, $o) {
    var var$2, var$3;
    if (jl_Enum_getDeclaringClass($o) === jl_Enum_getDeclaringClass($this))
        return $rt_compare($this.$ordinal, $o.$ordinal);
    var$2 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(306)), jl_Class_getName(jl_Enum_getDeclaringClass($this))), $rt_s(307)), jl_Class_getName(jl_Enum_getDeclaringClass($o)))));
    $rt_throw(var$2);
}
function jl_Enum_compareTo0($this, var$1) {
    return jl_Enum_compareTo($this, var$1);
}
function nms_EnumMobType() {
    jl_Enum.call(this);
}
var nms_EnumMobType_everything = null;
var nms_EnumMobType_mobs = null;
var nms_EnumMobType_players = null;
var nms_EnumMobType_$VALUES = null;
function nms_EnumMobType__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new nms_EnumMobType;
    jl_Enum__init_0(var$1, $rt_s(308), 0);
    nms_EnumMobType_everything = var$1;
    var$1 = new nms_EnumMobType;
    jl_Enum__init_0(var$1, $rt_s(309), 1);
    nms_EnumMobType_mobs = var$1;
    var$1 = new nms_EnumMobType;
    jl_Enum__init_0(var$1, $rt_s(310), 2);
    nms_EnumMobType_players = var$1;
    var$2 = $rt_createArray(nms_EnumMobType, 3);
    var$3 = var$2.data;
    var$3[0] = nms_EnumMobType_everything;
    var$3[1] = nms_EnumMobType_mobs;
    var$3[2] = nms_EnumMobType_players;
    nms_EnumMobType_$VALUES = var$2;
}
function nms_BlockRedstoneOre() {
    nms_Block.call(this);
    this.$field_468_a = 0;
}
function nms_BlockRedstoneOre__init_(var_0, var_1, var_2) {
    var var_3 = new nms_BlockRedstoneOre();
    nms_BlockRedstoneOre__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_BlockRedstoneOre__init_0($this, $var1, $var2, $var3) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_rock);
    if ($var3)
        nms_Block_setTickOnLoad($this, 1);
    $this.$field_468_a = $var3;
}
function nms_BlockRedstoneOre_tickRate($this) {
    return 30;
}
function nms_BlockRedstoneOre_onBlockClicked($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockRedstoneOre_func_320_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockRedstoneOre_onEntityWalking($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockRedstoneOre_func_320_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockRedstoneOre_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockRedstoneOre_func_320_h($this, $var1, $var2, $var3, $var4);
    return 0;
}
function nms_BlockRedstoneOre_func_320_h($this, $var1, $var2, $var3, $var4) {
    var var$5;
    nms_BlockRedstoneOre_func_319_i($this, $var1, $var2, $var3, $var4);
    var$5 = $this.$blockID;
    nms_Block_$callClinit();
    if (var$5 == nms_Block_oreRedstone.$blockID)
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_oreRedstoneGlowing.$blockID);
}
function nms_BlockRedstoneOre_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6;
    var$6 = $this.$blockID;
    nms_Block_$callClinit();
    if (var$6 == nms_Block_oreRedstoneGlowing.$blockID)
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_oreRedstone.$blockID);
}
function nms_BlockRedstoneOre_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_redstone.$shiftedIndex;
}
function nms_BlockRedstoneOre_quantityDropped($this, $var1) {
    return 4 + ju_Random_nextInt($var1, 2) | 0;
}
function nms_BlockRedstoneOre_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    if ($this.$field_468_a)
        nms_BlockRedstoneOre_func_319_i($this, $var1, $var2, $var3, $var4);
}
function nms_BlockRedstoneOre_func_319_i($this, $var1, $var2, $var3, $var4) {
    var $var5, $var8, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21, var$22, var$23, var$24, var$25, var$26, $var9, $var11, $var13;
    $var5 = $var1.$rand1;
    $var8 = 0;
    var$7 = $var2;
    var$8 = $var3;
    var$9 = $var4;
    var$10 = $var3 + 1 | 0;
    var$11 = var$10;
    var$12 = var$11 + 0.0625;
    var$13 = $var3 - 1 | 0;
    var$14 = ($var3 + 0 | 0) - 0.0625;
    var$15 = $var4 + 1 | 0;
    var$16 = var$15;
    var$17 = var$16 + 0.0625;
    var$18 = $var4 - 1 | 0;
    var$19 = ($var4 + 0 | 0) - 0.0625;
    var$20 = $var2 + 1 | 0;
    var$21 = var$20;
    var$22 = var$21 + 0.0625;
    var$23 = $var2 - 1 | 0;
    var$24 = ($var2 + 0 | 0) - 0.0625;
    var$25 = $var2;
    var$26 = $var4;
    while ($var8 < 6) {
        $var9 = var$7 + ju_Random_nextFloat($var5);
        $var11 = var$8 + ju_Random_nextFloat($var5);
        $var13 = var$9 + ju_Random_nextFloat($var5);
        if (!$var8 && !nms_World_isBlockOpaqueCube($var1, $var2, var$10, $var4))
            $var11 = var$12;
        if ($var8 == 1 && !nms_World_isBlockOpaqueCube($var1, $var2, var$13, $var4))
            $var11 = var$14;
        if ($var8 == 2 && !nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$15))
            $var13 = var$17;
        if ($var8 == 3 && !nms_World_isBlockOpaqueCube($var1, $var2, $var3, var$18))
            $var13 = var$19;
        if ($var8 == 4 && !nms_World_isBlockOpaqueCube($var1, var$20, $var3, $var4))
            $var9 = var$22;
        if ($var8 == 5 && !nms_World_isBlockOpaqueCube($var1, var$23, $var3, $var4))
            $var9 = var$24;
        if (!($var9 >= var$25 && $var9 <= var$21 && $var11 >= 0.0 && $var11 <= var$11 && $var13 >= var$26 && $var13 <= var$16))
            nms_World_spawnParticle($var1, $rt_s(287), $var9, $var11, $var13, 0.0, 0.0, 0.0);
        $var8 = $var8 + 1 | 0;
    }
}
function nms_BlockRedstoneTorch() {
    nms_BlockTorch.call(this);
    this.$torchActive = 0;
}
var nms_BlockRedstoneTorch_torchUpdates = null;
function nms_BlockRedstoneTorch__init_(var_0, var_1, var_2) {
    var var_3 = new nms_BlockRedstoneTorch();
    nms_BlockRedstoneTorch__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_BlockRedstoneTorch_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    if ($var1 != 1)
        $var1 = $this.$getBlockTextureFromSide($var1);
    else {
        nms_Block_$callClinit();
        $var1 = nms_Block_redstoneWire.$getBlockTextureFromSideAndMetadata($var1, $var2);
    }
    return $var1;
}
function nms_BlockRedstoneTorch_checkForBurnout($this, $var1, $var2, $var3, $var4, $var5) {
    var $var8, var$7, var$8, $var6, $var7;
    if ($var5) {
        $var8 = nms_BlockRedstoneTorch_torchUpdates;
        var$7 = new nms_RedstoneUpdateInfo;
        var$8 = $var1.$worldTime;
        var$7.$x = $var2;
        var$7.$y = $var3;
        var$7.$z0 = $var4;
        var$7.$updateTime = var$8;
        ju_ArrayList_add($var8, var$7);
    }
    $var6 = 0;
    $var7 = 0;
    while ($var7 < nms_BlockRedstoneTorch_torchUpdates.$size) {
        $var8 = ju_ArrayList_get(nms_BlockRedstoneTorch_torchUpdates, $var7);
        if ($var8.$x == $var2 && $var8.$y == $var3 && $var8.$z0 == $var4) {
            $var6 = $var6 + 1 | 0;
            if ($var6 >= 8)
                return 1;
        }
        $var7 = $var7 + 1 | 0;
    }
    return 0;
}
function nms_BlockRedstoneTorch__init_0($this, $var1, $var2, $var3) {
    nms_BlockTorch__init_0($this, $var1, $var2);
    $this.$torchActive = 0;
    $this.$torchActive = $var3;
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockRedstoneTorch_tickRate($this) {
    return 2;
}
function nms_BlockRedstoneTorch_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    if (!nms_World_getBlockMetadata($var1, $var2, $var3, $var4))
        nms_BlockTorch_onBlockAdded($this, $var1, $var2, $var3, $var4);
    if ($this.$torchActive) {
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 + 1 | 0, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
    }
}
function nms_BlockRedstoneTorch_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    if ($this.$torchActive) {
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 + 1 | 0, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
    }
}
function nms_BlockRedstoneTorch_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if (!$this.$torchActive)
        return 0;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    return $var6 == 5 && $var5 == 1 ? 0 : $var6 == 3 && $var5 == 3 ? 0 : $var6 == 4 && $var5 == 2 ? 0 : $var6 == 1 && $var5 == 5 ? 0 : $var6 == 2 && $var5 == 4 ? 0 : 1;
}
function nms_BlockRedstoneTorch_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, $var7, var$9, var$10, var$11;
    var$6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var6 = var$6 == 5 && nms_World_isBlockIndirectlyProvidingPowerTo($var1, $var2, $var3 - 1 | 0, $var4, 0) ? 1 : var$6 == 3 && nms_World_isBlockIndirectlyProvidingPowerTo($var1, $var2, $var3, $var4 - 1 | 0, 2) ? 1 : var$6 == 4 && nms_World_isBlockIndirectlyProvidingPowerTo($var1, $var2, $var3, $var4 + 1 | 0, 3) ? 1 : var$6 == 1 && nms_World_isBlockIndirectlyProvidingPowerTo($var1, $var2 - 1 | 0, $var3, $var4, 4) ? 1 : var$6 == 2 && nms_World_isBlockIndirectlyProvidingPowerTo($var1, $var2 + 1 | 0, $var3, $var4,
    5) ? 1 : 0;
    while (nms_BlockRedstoneTorch_torchUpdates.$size > 0 && Long_gt(Long_sub($var1.$worldTime, ju_ArrayList_get(nms_BlockRedstoneTorch_torchUpdates, 0).$updateTime), Long_fromInt(100))) {
        ju_ArrayList_remove(nms_BlockRedstoneTorch_torchUpdates, 0);
    }
    if (!$this.$torchActive) {
        if (!$var6 && !nms_BlockRedstoneTorch_checkForBurnout($this, $var1, $var2, $var3, $var4, 0)) {
            nms_Block_$callClinit();
            nms_World_setBlockAndMetadataWithNotify($var1, $var2, $var3, $var4, nms_Block_torchRedstoneActive.$blockID, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        }
    } else if ($var6) {
        nms_Block_$callClinit();
        nms_World_setBlockAndMetadataWithNotify($var1, $var2, $var3, $var4, nms_Block_torchRedstoneIdle.$blockID, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        if (nms_BlockRedstoneTorch_checkForBurnout($this, $var1, $var2, $var3, $var4, 1)) {
            nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(279), 0.5, 2.5999999046325684 + (ju_Random_nextFloat($var1.$rand1) - ju_Random_nextFloat($var1.$rand1)) * 0.800000011920929);
            $var7 = 0;
            var$9 = $var2;
            var$10 = $var3;
            var$11 = $var4;
            while ($var7 < 5) {
                nms_World_spawnParticle($var1, $rt_s(283), var$9 + ju_Random_nextDouble($var5) * 0.6 + 0.2, var$10 + ju_Random_nextDouble($var5) * 0.6 + 0.2, var$11 + ju_Random_nextDouble($var5) * 0.6 + 0.2, 0.0, 0.0, 0.0);
                $var7 = $var7 + 1 | 0;
            }
        }
    }
}
function nms_BlockRedstoneTorch_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockTorch_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5);
    nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
}
function nms_BlockRedstoneTorch_isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return $var5 ? 0 : nms_BlockRedstoneTorch_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockRedstoneTorch_idDropped($this, $var1, $var2) {
    nms_Block_$callClinit();
    return nms_Block_torchRedstoneActive.$blockID;
}
function nms_BlockRedstoneTorch_canProvidePower($this) {
    return 1;
}
function nms_BlockRedstoneTorch_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var9, $var11;
    if ($this.$torchActive) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
        $var7 = $var2 + 0.5 + (ju_Random_nextFloat($var5) - 0.5) * 0.2;
        $var9 = $var3 + 0.699999988079071 + (ju_Random_nextFloat($var5) - 0.5) * 0.2;
        $var11 = $var4 + 0.5 + (ju_Random_nextFloat($var5) - 0.5) * 0.2;
        if ($var6 == 1)
            nms_World_spawnParticle($var1, $rt_s(287), $var7 - 0.27000001072883606, $var9 + 0.2199999988079071, $var11, 0.0, 0.0, 0.0);
        else if ($var6 == 2)
            nms_World_spawnParticle($var1, $rt_s(287), $var7 + 0.27000001072883606, $var9 + 0.2199999988079071, $var11, 0.0, 0.0, 0.0);
        else if ($var6 == 3)
            nms_World_spawnParticle($var1, $rt_s(287), $var7, $var9 + 0.2199999988079071, $var11 - 0.27000001072883606, 0.0, 0.0, 0.0);
        else if ($var6 != 4)
            nms_World_spawnParticle($var1, $rt_s(287), $var7, $var9, $var11, 0.0, 0.0, 0.0);
        else
            nms_World_spawnParticle($var1, $rt_s(287), $var7, $var9 + 0.2199999988079071, $var11 + 0.27000001072883606, 0.0, 0.0, 0.0);
    }
}
function nms_BlockRedstoneTorch__clinit_() {
    nms_BlockRedstoneTorch_torchUpdates = ju_ArrayList__init_0();
}
function nms_BlockButton() {
    nms_Block.call(this);
}
function nms_BlockButton__init_(var_0, var_1) {
    var var_2 = new nms_BlockButton();
    nms_BlockButton__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockButton__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_circuits);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockButton_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockButton_tickRate($this) {
    return 20;
}
function nms_BlockButton_isOpaqueCube($this) {
    return 0;
}
function nms_BlockButton_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockButton_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) ? 1 : nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0);
}
function nms_BlockButton_onBlockPlaced($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, var$8;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = $var6 & 8;
    var$8 = $var6 & 7;
    if ($var5 == 2 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        var$8 = 4;
    if ($var5 == 3 && nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        var$8 = 3;
    if ($var5 == 4 && nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        var$8 = 2;
    if ($var5 == 5 && nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        var$8 = 1;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, var$8 + $var7 | 0);
}
function nms_BlockButton_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    if (nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 1);
    else if (nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 2);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 3);
    else if (nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0))
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 4);
    nms_BlockButton_func_305_h($this, $var1, $var2, $var3, $var4);
}
function nms_BlockButton_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    if (nms_BlockButton_func_305_h($this, $var1, $var2, $var3, $var4)) {
        $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4) & 7;
        $var7 = 0;
        if (!nms_World_isBlockOpaqueCube($var1, $var2 - 1 | 0, $var3, $var4) && $var6 == 1)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2 + 1 | 0, $var3, $var4) && $var6 == 2)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 - 1 | 0) && $var6 == 3)
            $var7 = 1;
        if (!nms_World_isBlockOpaqueCube($var1, $var2, $var3, $var4 + 1 | 0) && $var6 == 4)
            $var7 = 1;
        if ($var7) {
            nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
        }
    }
}
function nms_BlockButton_func_305_h($this, $var1, $var2, $var3, $var4) {
    if (nms_BlockButton_canPlaceBlockAt($this, $var1, $var2, $var3, $var4))
        return 1;
    nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    return 0;
}
function nms_BlockButton_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var11;
    $var5 = $var1.$getBlockMetadata($var2, $var3, $var4);
    $var6 = $var5 & 7;
    $var7 = ($var5 & 8) <= 0 ? 0 : 1;
    $var11 = 0.125;
    if ($var7)
        $var11 = 0.0625;
    if ($var6 == 1)
        nms_Block_setBlockBounds($this, 0.0, 0.375, 0.3125, $var11, 0.625, 0.6875);
    else if ($var6 == 2)
        nms_Block_setBlockBounds($this, 1.0 - $var11, 0.375, 0.3125, 1.0, 0.625, 0.6875);
    else if ($var6 == 3)
        nms_Block_setBlockBounds($this, 0.3125, 0.375, 0.0, 0.6875, 0.625, $var11);
    else if ($var6 == 4)
        nms_Block_setBlockBounds($this, 0.3125, 0.375, 1.0 - $var11, 0.6875, 0.625, 1.0);
}
function nms_BlockButton_onBlockClicked($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockButton_blockActivated($this, $var1, $var2, $var3, $var4, $var5);
}
function nms_BlockButton_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    $var7 = $var6 & 7;
    $var8 = 8 - ($var6 & 8) | 0;
    if (!$var8)
        return 1;
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var7 + $var8 | 0);
    nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
    nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(305), 0.30000001192092896, 0.6000000238418579);
    nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
    if ($var7 == 1)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
    else if ($var7 == 2)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
    else if ($var7 == 3)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
    else if ($var7 != 4)
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
    else
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
    nms_World_scheduleBlockUpdate($var1, $var2, $var3, $var4, $this.$blockID);
    return 1;
}
function nms_BlockButton_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    $var5 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (($var5 & 8) > 0) {
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        $var6 = $var5 & 7;
        if ($var6 == 1)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
        else if ($var6 == 2)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
        else if ($var6 == 3)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
        else if ($var6 != 4)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        else
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
    }
}
function nms_BlockButton_isPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    return (nms_World_getBlockMetadata($var1, $var2, $var3, $var4) & 8) <= 0 ? 0 : 1;
}
function nms_BlockButton_isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if (!($var6 & 8))
        return 0;
    $var7 = $var6 & 7;
    return $var7 == 5 && $var5 == 1 ? 1 : $var7 == 4 && $var5 == 2 ? 1 : $var7 == 3 && $var5 == 3 ? 1 : $var7 == 2 && $var5 == 4 ? 1 : $var7 == 1 && $var5 == 5 ? 1 : 0;
}
function nms_BlockButton_canProvidePower($this) {
    return 1;
}
function nms_BlockButton_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var6 & 8) {
        $var6 = $var6 & 7;
        nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var6);
        nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4, $this.$blockID);
        if ($var6 == 1)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 - 1 | 0, $var3, $var4, $this.$blockID);
        else if ($var6 == 2)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2 + 1 | 0, $var3, $var4, $this.$blockID);
        else if ($var6 == 3)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 - 1 | 0, $this.$blockID);
        else if ($var6 != 4)
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3 - 1 | 0, $var4, $this.$blockID);
        else
            nms_World_notifyBlocksOfNeighborChange($var1, $var2, $var3, $var4 + 1 | 0, $this.$blockID);
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(305), 0.30000001192092896, 0.5);
        nms_World_func_701_b($var1, $var2, $var3, $var4, $var2, $var3, $var4);
    }
}
function nms_BlockButton_func_237_e($this) {
    nms_Block_setBlockBounds($this, 0.3125, 0.375, 0.375, 0.6875, 0.625, 0.625);
}
function nms_BlockSnow() {
    nms_Block.call(this);
}
function nms_BlockSnow__init_(var_0, var_1) {
    var var_2 = new nms_BlockSnow();
    nms_BlockSnow__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockSnow__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_snow);
    nms_Block_setBlockBounds($this, 0.0, 0.0, 0.0, 1.0, 0.125, 1.0);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockSnow_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockSnow_isOpaqueCube($this) {
    return 0;
}
function nms_BlockSnow_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockSnow_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    var $var5;
    a: {
        $var3 = $var3 - 1 | 0;
        $var5 = nms_World_getBlockId($var1, $var2, $var3, $var4);
        if ($var5) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[$var5].$isOpaqueCube()) {
                $var2 = nms_World_getBlockMaterial($var1, $var2, $var3, $var4).$func_880_c();
                break a;
            }
        }
        $var2 = 0;
    }
    return $var2;
}
function nms_BlockSnow_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    if (!nms_BlockSnow_canPlaceBlockAt($this, $var1, $var2, $var3, $var4)) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockSnow_harvestBlock($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var8, $var10, $var12, $var14;
    nms_Item_$callClinit();
    $var6 = nms_Item_snowball.$shiftedIndex;
    $var8 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
    $var10 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
    $var12 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
    $var14 = nms_EntityItem__init_($var1, $var2 + $var8, $var3 + $var10, $var4 + $var12, nms_ItemStack__init_0($var6));
    $var14.$field_805_c = 10;
    nms_World_entityJoinedWorld($var1, $var14);
    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
}
function nms_BlockSnow_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_snowball.$shiftedIndex;
}
function nms_BlockSnow_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockSnow_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    if (nms_World_getSavedLightValue($var1, nms_EnumSkyBlock_Block, $var2, $var3, $var4) > 11) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockSnow_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = $var1.$getBlockMaterial($var2, $var3, $var4);
    return $var5 == 1 ? 1 : $var6 !== $this.$blockMaterial ? nms_Block_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) : 0;
}
function nms_BlockIce() {
    nms_BlockBreakable.call(this);
}
function nms_BlockIce__init_(var_0, var_1) {
    var var_2 = new nms_BlockIce();
    nms_BlockIce__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockIce__init_0($this, $var1, $var2) {
    nms_BlockBreakable__init_0($this, $var1, $var2, nms_Material_ice, 0);
    $this.$slipperiness = 0.9800000190734863;
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockIce_func_234_g($this) {
    return 1;
}
function nms_BlockIce_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    return nms_BlockBreakable_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, 1 - $var5 | 0);
}
function nms_BlockIce_onBlockRemoval($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockMaterial($var1, $var2, $var3 - 1 | 0, $var4);
    if (!(!$var5.$func_880_c() && !$var5.$getIsLiquid())) {
        nms_Block_$callClinit();
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_waterStill.$blockID);
    }
}
function nms_BlockIce_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockIce_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6;
    var$6 = nms_World_getSavedLightValue($var1, nms_EnumSkyBlock_Block, $var2, $var3, $var4);
    nms_Block_$callClinit();
    if (var$6 > (11 - nms_Block_lightOpacity.data[$this.$blockID] | 0)) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, nms_Block_waterMoving.$blockID);
    }
}
function nms_BlockSnowBlock() {
    nms_Block.call(this);
}
function nms_BlockSnowBlock__init_(var_0, var_1) {
    var var_2 = new nms_BlockSnowBlock();
    nms_BlockSnowBlock__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockSnowBlock__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_builtSnow);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockSnowBlock_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_snowball.$shiftedIndex;
}
function nms_BlockSnowBlock_quantityDropped($this, $var1) {
    return 4;
}
function nms_BlockSnowBlock_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    if (nms_World_getSavedLightValue($var1, nms_EnumSkyBlock_Block, $var2, $var3, $var4) > 11) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockCactus() {
    nms_Block.call(this);
}
function nms_BlockCactus__init_(var_0, var_1) {
    var var_2 = new nms_BlockCactus();
    nms_BlockCactus__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockCactus__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_cactus);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockCactus_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, $var7;
    var$6 = $var3 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var2, var$6, $var4)) {
        $var6 = 1;
        while (nms_World_getBlockId($var1, $var2, $var3 - $var6 | 0, $var4) == $this.$blockID) {
            $var6 = $var6 + 1 | 0;
        }
        if ($var6 < 3) {
            $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
            if ($var7 != 15)
                nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var7 + 1 | 0);
            else {
                nms_World_setBlockWithNotify($var1, $var2, var$6, $var4, $this.$blockID);
                nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 0);
            }
        }
    }
}
function nms_BlockCactus_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($var2 + 0.0625, $var3, $var4 + 0.0625, ($var2 + 1 | 0) - 0.0625, ($var3 + 1 | 0) - 0.0625, ($var4 + 1 | 0) - 0.0625);
}
function nms_BlockCactus_getSelectedBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($var2 + 0.0625, $var3, $var4 + 0.0625, ($var2 + 1 | 0) - 0.0625, $var3 + 1 | 0, ($var4 + 1 | 0) - 0.0625);
}
function nms_BlockCactus_getBlockTextureFromSide($this, $var1) {
    return $var1 == 1 ? $this.$blockIndexInTexture - 1 | 0 : $var1 ? $this.$blockIndexInTexture : $this.$blockIndexInTexture + 1 | 0;
}
function nms_BlockCactus_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockCactus_isOpaqueCube($this) {
    return 0;
}
function nms_BlockCactus_getRenderType($this) {
    return 13;
}
function nms_BlockCactus_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    return nms_Block_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) ? nms_BlockCactus_canBlockStay($this, $var1, $var2, $var3, $var4) : 0;
}
function nms_BlockCactus_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    if (!nms_BlockCactus_canBlockStay($this, $var1, $var2, $var3, $var4)) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockCactus_canBlockStay($this, $var1, $var2, $var3, $var4) {
    var $var5;
    if (nms_World_getBlockMaterial($var1, $var2 - 1 | 0, $var3, $var4).$func_878_a())
        return 0;
    if (nms_World_getBlockMaterial($var1, $var2 + 1 | 0, $var3, $var4).$func_878_a())
        return 0;
    if (nms_World_getBlockMaterial($var1, $var2, $var3, $var4 - 1 | 0).$func_878_a())
        return 0;
    if (nms_World_getBlockMaterial($var1, $var2, $var3, $var4 + 1 | 0).$func_878_a())
        return 0;
    $var5 = nms_World_getBlockId($var1, $var2, $var3 - 1 | 0, $var4);
    nms_Block_$callClinit();
    return $var5 != nms_Block_cactus.$blockID && $var5 != nms_Block_sand.$blockID ? 0 : 1;
}
function nms_BlockCactus_onEntityCollidedWithBlock($this, $var1, $var2, $var3, $var4, $var5) {
    $var5.$canAttackEntity(null, 1);
}
function nms_BlockClay() {
    nms_Block.call(this);
}
function nms_BlockClay__init_(var_0, var_1) {
    var var_2 = new nms_BlockClay();
    nms_BlockClay__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockClay__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_clay);
}
function nms_BlockClay_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_clay.$shiftedIndex;
}
function nms_BlockClay_quantityDropped($this, $var1) {
    return 4;
}
function nms_BlockReed() {
    nms_Block.call(this);
}
function nms_BlockReed__init_(var_0, var_1) {
    var var_2 = new nms_BlockReed();
    nms_BlockReed__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockReed__init_0($this, $var1, $var2) {
    nms_Block__init_0($this, $var1, nms_Material_plants);
    $this.$blockIndexInTexture = $var2;
    nms_Block_setBlockBounds($this, 0.125, 0.0, 0.125, 0.875, 1.0, 0.875);
    nms_Block_setTickOnLoad($this, 1);
}
function nms_BlockReed_updateTick($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, $var7;
    var$6 = $var3 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var2, var$6, $var4)) {
        $var6 = 1;
        while (nms_World_getBlockId($var1, $var2, $var3 - $var6 | 0, $var4) == $this.$blockID) {
            $var6 = $var6 + 1 | 0;
        }
        if ($var6 < 3) {
            $var7 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
            if ($var7 != 15)
                nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, $var7 + 1 | 0);
            else {
                nms_World_setBlockWithNotify($var1, $var2, var$6, $var4, $this.$blockID);
                nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 0);
            }
        }
    }
}
function nms_BlockReed_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    var var$5, $var5;
    var$5 = $var3 - 1 | 0;
    $var5 = nms_World_getBlockId($var1, $var2, var$5, $var4);
    if ($var5 == $this.$blockID)
        $var2 = 1;
    else {
        nms_Block_$callClinit();
        $var2 = $var5 != nms_Block_grass.$blockID && $var5 != nms_Block_dirt.$blockID ? 0 : nms_World_getBlockMaterial($var1, $var2 - 1 | 0, var$5, $var4) === nms_Material_water ? 1 : nms_World_getBlockMaterial($var1, $var2 + 1 | 0, var$5, $var4) === nms_Material_water ? 1 : nms_World_getBlockMaterial($var1, $var2, var$5, $var4 - 1 | 0) === nms_Material_water ? 1 : nms_World_getBlockMaterial($var1, $var2, var$5, $var4 + 1 | 0) !== nms_Material_water ? 0 : 1;
    }
    return $var2;
}
function nms_BlockReed_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    nms_BlockReed_checkBlockCoordValid($this, $var1, $var2, $var3, $var4);
}
function nms_BlockReed_checkBlockCoordValid($this, $var1, $var2, $var3, $var4) {
    if (!nms_BlockReed_canPlaceBlockAt($this, $var1, $var2, $var3, $var4)) {
        nms_Block_dropBlockAsItem($this, $var1, $var2, $var3, $var4, nms_World_getBlockMetadata($var1, $var2, $var3, $var4));
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockReed_canBlockStay($this, $var1, $var2, $var3, $var4) {
    return nms_BlockReed_canPlaceBlockAt($this, $var1, $var2, $var3, $var4);
}
function nms_BlockReed_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockReed_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_reed.$shiftedIndex;
}
function nms_BlockReed_isOpaqueCube($this) {
    return 0;
}
function nms_BlockReed_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockReed_getRenderType($this) {
    return 1;
}
function nms_BlockJukeBox() {
    nms_Block.call(this);
}
function nms_BlockJukeBox__init_(var_0, var_1) {
    var var_2 = new nms_BlockJukeBox();
    nms_BlockJukeBox__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockJukeBox__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_wood);
}
function nms_BlockJukeBox_getBlockTextureFromSide($this, $var1) {
    return $this.$blockIndexInTexture + ($var1 != 1 ? 0 : 1) | 0;
}
function nms_BlockJukeBox_blockActivated($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    $var6 = nms_World_getBlockMetadata($var1, $var2, $var3, $var4);
    if ($var6 <= 0)
        return 0;
    nms_BlockJukeBox_ejectRecord($this, $var1, $var2, $var3, $var4, $var6);
    return 1;
}
function nms_BlockJukeBox_ejectRecord($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var8, $var10, $var12, $var14;
    nms_World_playRecord($var1, null, $var2, $var3, $var4);
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, 0);
    nms_Item_$callClinit();
    $var6 = (nms_Item_record13.$shiftedIndex + $var5 | 0) - 1 | 0;
    $var8 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
    $var10 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.06000000238418579 + 0.6;
    $var12 = ju_Random_nextFloat($var1.$rand1) * 0.699999988079071 + 0.15000000596046448;
    $var14 = nms_EntityItem__init_($var1, $var2 + $var8, $var3 + $var10, $var4 + $var12, nms_ItemStack__init_0($var6));
    $var14.$field_805_c = 10;
    nms_World_entityJoinedWorld($var1, $var14);
}
function nms_BlockJukeBox_dropBlockAsItemWithChance($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    if ($var5 > 0)
        nms_BlockJukeBox_ejectRecord($this, $var1, $var2, $var3, $var4, $var5);
    nms_Block_dropBlockAsItemWithChance($this, $var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_BlockFence() {
    nms_Block.call(this);
}
function nms_BlockFence__init_(var_0, var_1) {
    var var_2 = new nms_BlockFence();
    nms_BlockFence__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockFence__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_wood);
}
function nms_BlockFence_getCollidingBoundingBoxes($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7, var$8;
    var$7 = $var2;
    var$8 = $var3;
    ju_ArrayList_add($var6, nms_AxisAlignedBB_getBoundingBoxFromPool(var$7, var$8, $var4, $var2 + 1 | 0, var$8 + 1.5, $var4 + 1 | 0));
}
function nms_BlockFence_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    var var$5;
    var$5 = $var3 - 1 | 0;
    return nms_World_getBlockId($var1, $var2, var$5, $var4) == $this.$blockID ? 0 : nms_World_getBlockMaterial($var1, $var2, var$5, $var4).$func_878_a() ? nms_Block_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) : 0;
}
function nms_BlockFence_isOpaqueCube($this) {
    return 0;
}
function nms_BlockFence_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockFence_getRenderType($this) {
    return 11;
}
function nms_BlockPumpkin() {
    nms_Block.call(this);
    this.$field_4072_a = 0;
}
function nms_BlockPumpkin__init_(var_0, var_1, var_2) {
    var var_3 = new nms_BlockPumpkin();
    nms_BlockPumpkin__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_BlockPumpkin__init_0($this, $var1, $var2, $var3) {
    nms_Block__init_0($this, $var1, nms_Material_pumpkin);
    $this.$blockIndexInTexture = $var2;
    nms_Block_setTickOnLoad($this, 1);
    $this.$field_4072_a = $var3;
}
function nms_BlockPumpkin_getBlockTextureFromSideAndMetadata($this, $var1, $var2) {
    var $var3;
    if ($var1 == 1)
        return $this.$blockIndexInTexture;
    if (!$var1)
        return $this.$blockIndexInTexture;
    $var3 = ($this.$blockIndexInTexture + 1 | 0) + 16 | 0;
    if ($this.$field_4072_a)
        $var3 = $var3 + 1 | 0;
    if (!(!$var2 && $var1 == 2) && !($var2 == 1 && $var1 == 5) && !($var2 == 2 && $var1 == 3) && !($var2 == 3 && $var1 == 4))
        $var3 = $this.$blockIndexInTexture + 16 | 0;
    return $var3;
}
function nms_BlockPumpkin_getBlockTextureFromSide($this, $var1) {
    return $var1 == 1 ? $this.$blockIndexInTexture : !$var1 ? $this.$blockIndexInTexture : $var1 != 3 ? $this.$blockIndexInTexture + 16 | 0 : ($this.$blockIndexInTexture + 1 | 0) + 16 | 0;
}
function nms_BlockPumpkin_onBlockAdded($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_BlockPumpkin_canPlaceBlockAt($this, $var1, $var2, $var3, $var4) {
    var $var5;
    a: {
        b: {
            $var5 = nms_World_getBlockId($var1, $var2, $var3, $var4);
            if ($var5) {
                nms_Block_$callClinit();
                if (!nms_Block_blocksList.data[$var5].$blockMaterial.$getIsLiquid())
                    break b;
            }
            if (nms_World_isBlockOpaqueCube($var1, $var2, $var3 - 1 | 0, $var4)) {
                $var2 = 1;
                break a;
            }
        }
        $var2 = 0;
    }
    return $var2;
}
function nms_BlockPumpkin_onBlockPlacedBy($this, $var1, $var2, $var3, $var4, $var5) {
    nms_World_setBlockMetadataWithNotify($var1, $var2, $var3, $var4, nms_MathHelper_floor_double($var5.$rotationYaw * 4.0 / 360.0 + 0.5) & 3);
}
function nms_BlockBloodStone() {
    nms_Block.call(this);
}
function nms_BlockBloodStone__init_(var_0, var_1) {
    var var_2 = new nms_BlockBloodStone();
    nms_BlockBloodStone__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockBloodStone__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_rock);
}
function nms_BlockSlowSand() {
    nms_Block.call(this);
}
function nms_BlockSlowSand__init_(var_0, var_1) {
    var var_2 = new nms_BlockSlowSand();
    nms_BlockSlowSand__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockSlowSand__init_0($this, $var1, $var2) {
    nms_Block__init_2($this, $var1, $var2, nms_Material_sand);
}
function nms_BlockSlowSand_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($var2, $var3, $var4, $var2 + 1 | 0, ($var3 + 1 | 0) - 0.125, $var4 + 1 | 0);
}
function nms_BlockSlowSand_onEntityCollidedWithBlock($this, $var1, $var2, $var3, $var4, $var5) {
    $var5.$motionX = $var5.$motionX * 0.4;
    $var5.$motionZ = $var5.$motionZ * 0.4;
}
function nms_BlockLightStone() {
    nms_Block.call(this);
}
function nms_BlockLightStone__init_(var_0, var_1, var_2) {
    var var_3 = new nms_BlockLightStone();
    nms_BlockLightStone__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_BlockLightStone__init_0($this, $var1, $var2, $var3) {
    nms_Block__init_2($this, $var1, $var2, $var3);
}
function nms_BlockLightStone_idDropped($this, $var1, $var2) {
    nms_Item_$callClinit();
    return nms_Item_lightStoneDust.$shiftedIndex;
}
function nms_BlockPortal() {
    nms_BlockBreakable.call(this);
}
function nms_BlockPortal__init_(var_0, var_1) {
    var var_2 = new nms_BlockPortal();
    nms_BlockPortal__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_BlockPortal__init_0($this, $var1, $var2) {
    nms_BlockBreakable__init_0($this, $var1, $var2, nms_Material_field_4260_x, 0);
}
function nms_BlockPortal_getCollisionBoundingBoxFromPool($this, $var1, $var2, $var3, $var4) {
    return null;
}
function nms_BlockPortal_setBlockBoundsBasedOnState($this, $var1, $var2, $var3, $var4) {
    if ($var1.$getBlockId($var2 - 1 | 0, $var3, $var4) != $this.$blockID && $var1.$getBlockId($var2 + 1 | 0, $var3, $var4) != $this.$blockID)
        nms_Block_setBlockBounds($this, 0.375, 0.0, 0.0, 0.625, 1.0, 1.0);
    else
        nms_Block_setBlockBounds($this, 0.0, 0.0, 0.375, 1.0, 1.0, 0.625);
}
function nms_BlockPortal_isOpaqueCube($this) {
    return 0;
}
function nms_BlockPortal_renderAsNormalBlock($this) {
    return 0;
}
function nms_BlockPortal_tryToCreatePortal($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var8, var$8, var$9, var$10, var$11, $var7, var$13, $var9, $var10;
    $var5 = 0;
    $var6 = 0;
    $var8 = nms_World_getBlockId($var1, $var2 - 1 | 0, $var3, $var4);
    nms_Block_$callClinit();
    if (!($var8 != nms_Block_obsidian.$blockID && nms_World_getBlockId($var1, $var2 + 1 | 0, $var3, $var4) != nms_Block_obsidian.$blockID))
        $var5 = 1;
    if (!(nms_World_getBlockId($var1, $var2, $var3, $var4 - 1 | 0) != nms_Block_obsidian.$blockID && nms_World_getBlockId($var1, $var2, $var3, $var4 + 1 | 0) != nms_Block_obsidian.$blockID))
        $var6 = 1;
    var$8 = jl_System_out();
    var$9 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$9);
    ji_PrintStream_println(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$9, $var5), $rt_s(311)), $var6)));
    if ($var5 == $var6)
        return 0;
    var$10 = $var2 - $var5 | 0;
    var$11 = $var4 - $var6 | 0;
    if (nms_World_getBlockId($var1, var$10, $var3, var$11)) {
        var$10 = $var2;
        var$11 = $var4;
    }
    $var7 = (-1);
    a: while (true) {
        var$13 = $rt_compare($var7, 2);
        if (var$13 > 0) {
            $var1.$field_1043_h = 1;
            $var2 = 0;
            while ($var2 < 2) {
                $var8 = 0;
                while ($var8 < 3) {
                    nms_World_setBlockWithNotify($var1, var$10 + $rt_imul($var5, $var2) | 0, $var3 + $var8 | 0, var$11 + $rt_imul($var6, $var2) | 0, nms_Block_portal.$blockID);
                    $var8 = $var8 + 1 | 0;
                }
                $var2 = $var2 + 1 | 0;
            }
            $var1.$field_1043_h = 0;
            return 1;
        }
        $var8 = (-1);
        while (true) {
            $var2 = $rt_compare($var8, 3);
            if ($var2 > 0)
                break;
            $var4 = $rt_compare($var7, (-1));
            $var9 = $var4 && var$13 && $var8 != (-1) && $var2 ? 0 : 1;
            b: {
                if (!($var4 && var$13)) {
                    if ($var8 == (-1))
                        break b;
                    if (!$var2)
                        break b;
                }
                $var10 = nms_World_getBlockId($var1, var$10 + $rt_imul($var5, $var7) | 0, $var3 + $var8 | 0, var$11 + $rt_imul($var6, $var7) | 0);
                if ($var9) {
                    if ($var10 == nms_Block_obsidian.$blockID)
                        break b;
                    else
                        return 0;
                }
                if ($var10 && $var10 != nms_Block_fire.$blockID)
                    break a;
            }
            $var8 = $var8 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
    return 0;
}
function nms_BlockPortal_onNeighborBlockChange($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var11, $var8, $var9, $var10;
    $var6 = 0;
    $var7 = 1;
    $var11 = $var2 - 1 | 0;
    if (!(nms_World_getBlockId($var1, $var11, $var3, $var4) != $this.$blockID && nms_World_getBlockId($var1, $var2 + 1 | 0, $var3, $var4) != $this.$blockID)) {
        $var6 = 1;
        $var7 = 0;
    }
    $var8 = $var3;
    while (true) {
        $var5 = $var8 - 1 | 0;
        if (nms_World_getBlockId($var1, $var2, $var5, $var4) != $this.$blockID)
            break;
        $var8 = $var8 + (-1) | 0;
    }
    $var5 = nms_World_getBlockId($var1, $var2, $var5, $var4);
    nms_Block_$callClinit();
    if ($var5 != nms_Block_obsidian.$blockID)
        nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    else {
        $var9 = 1;
        while ($var9 < 4 && nms_World_getBlockId($var1, $var2, $var8 + $var9 | 0, $var4) == $this.$blockID) {
            $var9 = $var9 + 1 | 0;
        }
        if ($var9 == 3 && nms_World_getBlockId($var1, $var2, $var8 + $var9 | 0, $var4) == nms_Block_obsidian.$blockID) {
            $var10 = nms_World_getBlockId($var1, $var11, $var3, $var4) != $this.$blockID && nms_World_getBlockId($var1, $var2 + 1 | 0, $var3, $var4) != $this.$blockID ? 0 : 1;
            $var11 = nms_World_getBlockId($var1, $var2, $var3, $var4 - 1 | 0) != $this.$blockID && nms_World_getBlockId($var1, $var2, $var3, $var4 + 1 | 0) != $this.$blockID ? 0 : 1;
            if ($var10 && $var11)
                nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
            else {
                $var9 = $var2 + $var6 | 0;
                $var10 = $var4 + $var7 | 0;
                if (!(nms_World_getBlockId($var1, $var9, $var3, $var10) == nms_Block_obsidian.$blockID && nms_World_getBlockId($var1, $var2 - $var6 | 0, $var3, $var4 - $var7 | 0) == $this.$blockID) && !(nms_World_getBlockId($var1, $var2 - $var6 | 0, $var3, $var4 - $var7 | 0) == nms_Block_obsidian.$blockID && nms_World_getBlockId($var1, $var9, $var3, $var10) == $this.$blockID))
                    nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
            }
        } else
            nms_World_setBlockWithNotify($var1, $var2, $var3, $var4, 0);
    }
}
function nms_BlockPortal_shouldSideBeRendered($this, $var1, $var2, $var3, $var4, $var5) {
    return 1;
}
function nms_BlockPortal_quantityDropped($this, $var1) {
    return 0;
}
function nms_BlockPortal_func_234_g($this) {
    return 1;
}
function nms_BlockPortal_onEntityCollidedWithBlock($this, $var1, $var2, $var3, $var4, $var5) {
    $var5.$func_4039_q();
}
function nms_BlockPortal_randomDisplayTick($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, $var7, $var9, $var11, $var19, var$18, var$19, var$20;
    if (!ju_Random_nextInt($var5, 100))
        nms_World_playSoundEffect($var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $rt_s(312), 1.0, ju_Random_nextFloat($var5) * 0.4000000059604645 + 0.800000011920929);
    $var6 = 0;
    var$7 = $var2;
    var$8 = $var3;
    var$9 = $var4;
    var$10 = $var2 - 1 | 0;
    var$11 = $var2 + 1 | 0;
    var$12 = $var2 + 0.5;
    var$13 = $var4 + 0.5;
    while ($var6 < 4) {
        $var7 = var$7 + ju_Random_nextFloat($var5);
        $var9 = var$8 + ju_Random_nextFloat($var5);
        $var11 = var$9 + ju_Random_nextFloat($var5);
        $var19 = (ju_Random_nextInt($var5, 2) * 2 | 0) - 1 | 0;
        var$18 = (ju_Random_nextFloat($var5) - 0.5) * 0.5;
        var$19 = (ju_Random_nextFloat($var5) - 0.5) * 0.5;
        var$20 = (ju_Random_nextFloat($var5) - 0.5) * 0.5;
        if (nms_World_getBlockId($var1, var$10, $var3, $var4) != $this.$blockID && nms_World_getBlockId($var1, var$11, $var3, $var4) != $this.$blockID) {
            $var7 = var$12 + 0.25 * $var19;
            var$18 = ju_Random_nextFloat($var5) * 2.0 * $var19;
        } else {
            $var11 = var$13 + 0.25 * $var19;
            var$20 = ju_Random_nextFloat($var5) * 2.0 * $var19;
        }
        nms_World_spawnParticle($var1, $rt_s(313), $var7, $var9, $var11, var$18, var$19, var$20);
        $var6 = $var6 + 1 | 0;
    }
}
function nms_Item() {
    var a = this; jl_Object.call(a);
    a.$shiftedIndex = 0;
    a.$maxStackSize = 0;
    a.$maxDamage = 0;
    a.$iconIndex = 0;
    a.$bFull3D = 0;
}
var nms_Item_itemRand = null;
var nms_Item_itemsList = null;
var nms_Item_shovelSteel = null;
var nms_Item_pickaxeSteel = null;
var nms_Item_axeSteel = null;
var nms_Item_flintAndSteel = null;
var nms_Item_appleRed = null;
var nms_Item_bow = null;
var nms_Item_arrow = null;
var nms_Item_coal = null;
var nms_Item_diamond = null;
var nms_Item_ingotIron = null;
var nms_Item_ingotGold = null;
var nms_Item_swordSteel = null;
var nms_Item_swordWood = null;
var nms_Item_shovelWood = null;
var nms_Item_pickaxeWood = null;
var nms_Item_axeWood = null;
var nms_Item_swordStone = null;
var nms_Item_shovelStone = null;
var nms_Item_pickaxeStone = null;
var nms_Item_axeStone = null;
var nms_Item_swordDiamond = null;
var nms_Item_shovelDiamond = null;
var nms_Item_pickaxeDiamond = null;
var nms_Item_axeDiamond = null;
var nms_Item_stick = null;
var nms_Item_bowlEmpty = null;
var nms_Item_bowlSoup = null;
var nms_Item_swordGold = null;
var nms_Item_shovelGold = null;
var nms_Item_pickaxeGold = null;
var nms_Item_axeGold = null;
var nms_Item_silk = null;
var nms_Item_feather = null;
var nms_Item_gunpowder = null;
var nms_Item_hoeWood = null;
var nms_Item_hoeStone = null;
var nms_Item_hoeSteel = null;
var nms_Item_hoeDiamond = null;
var nms_Item_hoeGold = null;
var nms_Item_seeds = null;
var nms_Item_wheat = null;
var nms_Item_bread = null;
var nms_Item_helmetLeather = null;
var nms_Item_plateLeather = null;
var nms_Item_legsLeather = null;
var nms_Item_bootsLeather = null;
var nms_Item_helmetChain = null;
var nms_Item_plateChain = null;
var nms_Item_legsChain = null;
var nms_Item_bootsChain = null;
var nms_Item_helmetSteel = null;
var nms_Item_plateSteel = null;
var nms_Item_legsSteel = null;
var nms_Item_bootsSteel = null;
var nms_Item_helmetDiamond = null;
var nms_Item_plateDiamond = null;
var nms_Item_legsDiamond = null;
var nms_Item_bootsDiamond = null;
var nms_Item_helmetGold = null;
var nms_Item_plateGold = null;
var nms_Item_legsGold = null;
var nms_Item_bootsGold = null;
var nms_Item_flint = null;
var nms_Item_porkRaw = null;
var nms_Item_porkCooked = null;
var nms_Item_painting = null;
var nms_Item_appleGold = null;
var nms_Item_sign = null;
var nms_Item_doorWood = null;
var nms_Item_bucketEmpty = null;
var nms_Item_bucketWater = null;
var nms_Item_bucketLava = null;
var nms_Item_minecartEmpty = null;
var nms_Item_saddle = null;
var nms_Item_doorSteel = null;
var nms_Item_redstone = null;
var nms_Item_snowball = null;
var nms_Item_boat = null;
var nms_Item_leather = null;
var nms_Item_bucketMilk = null;
var nms_Item_brick = null;
var nms_Item_clay = null;
var nms_Item_reed = null;
var nms_Item_paper = null;
var nms_Item_book = null;
var nms_Item_slimeBall = null;
var nms_Item_minecartCrate = null;
var nms_Item_minecartPowered = null;
var nms_Item_egg = null;
var nms_Item_compass = null;
var nms_Item_fishingRod = null;
var nms_Item_pocketSundial = null;
var nms_Item_lightStoneDust = null;
var nms_Item_fishRaw = null;
var nms_Item_fishCooked = null;
var nms_Item_record13 = null;
var nms_Item_recordCat = null;
function nms_Item_$callClinit() {
    nms_Item_$callClinit = $rt_eraseClinit(nms_Item);
    nms_Item__clinit_();
}
function nms_Item__init_(var_0) {
    var var_1 = new nms_Item();
    nms_Item__init_0(var_1, var_0);
    return var_1;
}
function nms_Item__init_0($this, $var1) {
    var var$2, var$3, var$4;
    nms_Item_$callClinit();
    $this.$maxStackSize = 64;
    $this.$maxDamage = 32;
    $this.$bFull3D = 0;
    var$2 = 256 + $var1 | 0;
    $this.$shiftedIndex = var$2;
    if (nms_Item_itemsList.data[var$2] !== null) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        ji_PrintStream_println(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(314)), $var1)));
    }
    nms_Item_itemsList.data[var$2] = $this;
}
function nms_Item_setIconIndex($this, $var1) {
    $this.$iconIndex = $var1;
    return $this;
}
function nms_Item_getIconIndex($this, $var1) {
    return $this.$iconIndex;
}
function nms_Item_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    return 0;
}
function nms_Item_getStrVsBlock($this, $var1, $var2) {
    return 1.0;
}
function nms_Item_onItemRightClick($this, $var1, $var2, $var3) {
    return $var1;
}
function nms_Item_getItemStackLimit($this) {
    return $this.$maxStackSize;
}
function nms_Item_getMaxDamage($this) {
    return $this.$maxDamage;
}
function nms_Item_hitEntity($this, $var1, $var2) {
    return;
}
function nms_Item_hitBlock($this, $var1, $var2, $var3, $var4, $var5) {
    return;
}
function nms_Item_getDamageVsEntity($this, $var1) {
    return 1;
}
function nms_Item_canHarvestBlock($this, $var1) {
    return 0;
}
function nms_Item_func_4019_b($this, $var1, $var2) {
    return;
}
function nms_Item_setFull3D($this) {
    $this.$bFull3D = 1;
    return $this;
}
function nms_Item_isFull3D($this) {
    return $this.$bFull3D;
}
function nms_Item_shouldRotateAroundWhenRendering($this) {
    return 0;
}
function nms_Item__clinit_() {
    var var$1;
    nms_Item_itemRand = ju_Random__init_0();
    nms_Item_itemsList = $rt_createArray(nms_Item, 32000);
    nms_Item_shovelSteel = nms_Item_setIconIndex(nms_ItemSpade__init_(0, 2), 82);
    nms_Item_pickaxeSteel = nms_Item_setIconIndex(nms_ItemPickaxe__init_(1, 2), 98);
    nms_Item_axeSteel = nms_Item_setIconIndex(nms_ItemAxe__init_(2, 2), 114);
    nms_Item_flintAndSteel = nms_Item_setIconIndex(nms_ItemFlintAndSteel__init_(3), 5);
    nms_Item_appleRed = nms_Item_setIconIndex(nms_ItemFood__init_(4, 4), 10);
    nms_Item_bow = nms_Item_setIconIndex(nms_ItemBow__init_(5), 21);
    nms_Item_arrow = nms_Item_setIconIndex(nms_Item__init_(6), 37);
    nms_Item_coal = nms_Item_setIconIndex(nms_Item__init_(7), 7);
    nms_Item_diamond = nms_Item_setIconIndex(nms_Item__init_(8), 55);
    nms_Item_ingotIron = nms_Item_setIconIndex(nms_Item__init_(9), 23);
    nms_Item_ingotGold = nms_Item_setIconIndex(nms_Item__init_(10), 39);
    nms_Item_swordSteel = nms_Item_setIconIndex(nms_ItemSword__init_(11, 2), 66);
    nms_Item_swordWood = nms_Item_setIconIndex(nms_ItemSword__init_(12, 0), 64);
    nms_Item_shovelWood = nms_Item_setIconIndex(nms_ItemSpade__init_(13, 0), 80);
    nms_Item_pickaxeWood = nms_Item_setIconIndex(nms_ItemPickaxe__init_(14, 0), 96);
    nms_Item_axeWood = nms_Item_setIconIndex(nms_ItemAxe__init_(15, 0), 112);
    nms_Item_swordStone = nms_Item_setIconIndex(nms_ItemSword__init_(16, 1), 65);
    nms_Item_shovelStone = nms_Item_setIconIndex(nms_ItemSpade__init_(17, 1), 81);
    nms_Item_pickaxeStone = nms_Item_setIconIndex(nms_ItemPickaxe__init_(18, 1), 97);
    nms_Item_axeStone = nms_Item_setIconIndex(nms_ItemAxe__init_(19, 1), 113);
    nms_Item_swordDiamond = nms_Item_setIconIndex(nms_ItemSword__init_(20, 3), 67);
    nms_Item_shovelDiamond = nms_Item_setIconIndex(nms_ItemSpade__init_(21, 3), 83);
    nms_Item_pickaxeDiamond = nms_Item_setIconIndex(nms_ItemPickaxe__init_(22, 3), 99);
    nms_Item_axeDiamond = nms_Item_setIconIndex(nms_ItemAxe__init_(23, 3), 115);
    nms_Item_stick = nms_Item_setFull3D(nms_Item_setIconIndex(nms_Item__init_(24), 53));
    nms_Item_bowlEmpty = nms_Item_setIconIndex(nms_Item__init_(25), 71);
    nms_Item_bowlSoup = nms_Item_setIconIndex(nms_ItemSoup__init_(26, 10), 72);
    nms_Item_swordGold = nms_Item_setIconIndex(nms_ItemSword__init_(27, 0), 68);
    nms_Item_shovelGold = nms_Item_setIconIndex(nms_ItemSpade__init_(28, 0), 84);
    nms_Item_pickaxeGold = nms_Item_setIconIndex(nms_ItemPickaxe__init_(29, 0), 100);
    nms_Item_axeGold = nms_Item_setIconIndex(nms_ItemAxe__init_(30, 0), 116);
    nms_Item_silk = nms_Item_setIconIndex(nms_Item__init_(31), 8);
    nms_Item_feather = nms_Item_setIconIndex(nms_Item__init_(32), 24);
    nms_Item_gunpowder = nms_Item_setIconIndex(nms_Item__init_(33), 40);
    nms_Item_hoeWood = nms_Item_setIconIndex(nms_ItemHoe__init_(34, 0), 128);
    nms_Item_hoeStone = nms_Item_setIconIndex(nms_ItemHoe__init_(35, 1), 129);
    nms_Item_hoeSteel = nms_Item_setIconIndex(nms_ItemHoe__init_(36, 2), 130);
    nms_Item_hoeDiamond = nms_Item_setIconIndex(nms_ItemHoe__init_(37, 3), 131);
    nms_Item_hoeGold = nms_Item_setIconIndex(nms_ItemHoe__init_(38, 1), 132);
    var$1 = new nms_ItemSeeds;
    nms_Block_$callClinit();
    nms_ItemSeeds__init_(var$1, 39, nms_Block_crops.$blockID);
    nms_Item_seeds = nms_Item_setIconIndex(var$1, 9);
    nms_Item_wheat = nms_Item_setIconIndex(nms_Item__init_(40), 25);
    nms_Item_bread = nms_Item_setIconIndex(nms_ItemFood__init_(41, 5), 41);
    nms_Item_helmetLeather = nms_Item_setIconIndex(nms_ItemArmor__init_(42, 0, 0, 0), 0);
    nms_Item_plateLeather = nms_Item_setIconIndex(nms_ItemArmor__init_(43, 0, 0, 1), 16);
    nms_Item_legsLeather = nms_Item_setIconIndex(nms_ItemArmor__init_(44, 0, 0, 2), 32);
    nms_Item_bootsLeather = nms_Item_setIconIndex(nms_ItemArmor__init_(45, 0, 0, 3), 48);
    nms_Item_helmetChain = nms_Item_setIconIndex(nms_ItemArmor__init_(46, 1, 1, 0), 1);
    nms_Item_plateChain = nms_Item_setIconIndex(nms_ItemArmor__init_(47, 1, 1, 1), 17);
    nms_Item_legsChain = nms_Item_setIconIndex(nms_ItemArmor__init_(48, 1, 1, 2), 33);
    nms_Item_bootsChain = nms_Item_setIconIndex(nms_ItemArmor__init_(49, 1, 1, 3), 49);
    nms_Item_helmetSteel = nms_Item_setIconIndex(nms_ItemArmor__init_(50, 2, 2, 0), 2);
    nms_Item_plateSteel = nms_Item_setIconIndex(nms_ItemArmor__init_(51, 2, 2, 1), 18);
    nms_Item_legsSteel = nms_Item_setIconIndex(nms_ItemArmor__init_(52, 2, 2, 2), 34);
    nms_Item_bootsSteel = nms_Item_setIconIndex(nms_ItemArmor__init_(53, 2, 2, 3), 50);
    nms_Item_helmetDiamond = nms_Item_setIconIndex(nms_ItemArmor__init_(54, 3, 3, 0), 3);
    nms_Item_plateDiamond = nms_Item_setIconIndex(nms_ItemArmor__init_(55, 3, 3, 1), 19);
    nms_Item_legsDiamond = nms_Item_setIconIndex(nms_ItemArmor__init_(56, 3, 3, 2), 35);
    nms_Item_bootsDiamond = nms_Item_setIconIndex(nms_ItemArmor__init_(57, 3, 3, 3), 51);
    nms_Item_helmetGold = nms_Item_setIconIndex(nms_ItemArmor__init_(58, 1, 4, 0), 4);
    nms_Item_plateGold = nms_Item_setIconIndex(nms_ItemArmor__init_(59, 1, 4, 1), 20);
    nms_Item_legsGold = nms_Item_setIconIndex(nms_ItemArmor__init_(60, 1, 4, 2), 36);
    nms_Item_bootsGold = nms_Item_setIconIndex(nms_ItemArmor__init_(61, 1, 4, 3), 52);
    nms_Item_flint = nms_Item_setIconIndex(nms_Item__init_(62), 6);
    nms_Item_porkRaw = nms_Item_setIconIndex(nms_ItemFood__init_(63, 3), 87);
    nms_Item_porkCooked = nms_Item_setIconIndex(nms_ItemFood__init_(64, 8), 88);
    nms_Item_painting = nms_Item_setIconIndex(nms_ItemPainting__init_(65), 26);
    nms_Item_appleGold = nms_Item_setIconIndex(nms_ItemFood__init_(66, 42), 11);
    nms_Item_sign = nms_Item_setIconIndex(nms_ItemSign__init_(67), 42);
    nms_Item_doorWood = nms_Item_setIconIndex(nms_ItemDoor__init_(68, nms_Material_wood), 43);
    nms_Item_bucketEmpty = nms_Item_setIconIndex(nms_ItemBucket__init_(69, 0), 74);
    nms_Item_bucketWater = nms_Item_setIconIndex(nms_ItemBucket__init_(70, nms_Block_waterStill.$blockID), 75);
    nms_Item_bucketLava = nms_Item_setIconIndex(nms_ItemBucket__init_(71, nms_Block_lavaStill.$blockID), 76);
    nms_Item_minecartEmpty = nms_Item_setIconIndex(nms_ItemMinecart__init_(72, 0), 135);
    nms_Item_saddle = nms_Item_setIconIndex(nms_ItemSaddle__init_(73), 104);
    nms_Item_doorSteel = nms_Item_setIconIndex(nms_ItemDoor__init_(74, nms_Material_iron), 44);
    nms_Item_redstone = nms_Item_setIconIndex(nms_ItemRedstone__init_(75), 56);
    nms_Item_snowball = nms_Item_setIconIndex(nms_ItemSnowball__init_(76), 14);
    nms_Item_boat = nms_Item_setIconIndex(nms_ItemBoat__init_(77), 136);
    nms_Item_leather = nms_Item_setIconIndex(nms_Item__init_(78), 103);
    nms_Item_bucketMilk = nms_Item_setIconIndex(nms_ItemBucket__init_(79, (-1)), 77);
    nms_Item_brick = nms_Item_setIconIndex(nms_Item__init_(80), 22);
    nms_Item_clay = nms_Item_setIconIndex(nms_Item__init_(81), 57);
    nms_Item_reed = nms_Item_setIconIndex(nms_ItemReed__init_(82, nms_Block_reed), 27);
    nms_Item_paper = nms_Item_setIconIndex(nms_Item__init_(83), 58);
    nms_Item_book = nms_Item_setIconIndex(nms_Item__init_(84), 59);
    nms_Item_slimeBall = nms_Item_setIconIndex(nms_Item__init_(85), 30);
    nms_Item_minecartCrate = nms_Item_setIconIndex(nms_ItemMinecart__init_(86, 1), 151);
    nms_Item_minecartPowered = nms_Item_setIconIndex(nms_ItemMinecart__init_(87, 2), 167);
    nms_Item_egg = nms_Item_setIconIndex(nms_Item__init_(88), 12);
    nms_Item_compass = nms_Item_setIconIndex(nms_Item__init_(89), 54);
    nms_Item_fishingRod = nms_Item_setIconIndex(nms_ItemFishingRod__init_(90), 69);
    nms_Item_pocketSundial = nms_Item_setIconIndex(nms_Item__init_(91), 70);
    nms_Item_lightStoneDust = nms_Item_setIconIndex(nms_Item__init_(92), 73);
    nms_Item_fishRaw = nms_Item_setIconIndex(nms_ItemFood__init_(93, 2), 89);
    nms_Item_fishCooked = nms_Item_setIconIndex(nms_ItemFood__init_(94, 5), 90);
    nms_Item_record13 = nms_Item_setIconIndex(nms_ItemRecord__init_(2000, $rt_s(315)), 240);
    nms_Item_recordCat = nms_Item_setIconIndex(nms_ItemRecord__init_(2001, $rt_s(316)), 241);
}
function nms_ItemBlock() {
    nms_Item.call(this);
    this.$blockID0 = 0;
}
function nms_ItemBlock__init_(var_0) {
    var var_1 = new nms_ItemBlock();
    nms_ItemBlock__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemBlock__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $var1 = $var1 + 256 | 0;
    $this.$blockID0 = $var1;
    nms_Block_$callClinit();
    $this.$iconIndex = nms_Block_blocksList.data[$var1].$getBlockTextureFromSide(2);
}
function nms_ItemBlock_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var var$8, $var8;
    var$8 = nms_World_getBlockId($var3, $var4, $var5, $var6);
    nms_Block_$callClinit();
    if (var$8 == nms_Block_snow.$blockID)
        $var7 = 0;
    else {
        if (!$var7)
            $var5 = $var5 + (-1) | 0;
        if ($var7 == 1)
            $var5 = $var5 + 1 | 0;
        if ($var7 == 2)
            $var6 = $var6 + (-1) | 0;
        if ($var7 == 3)
            $var6 = $var6 + 1 | 0;
        if ($var7 == 4)
            $var4 = $var4 + (-1) | 0;
        if ($var7 == 5)
            $var4 = $var4 + 1 | 0;
    }
    if (!$var1.$stackSize)
        return 0;
    if (nms_World_canBlockBePlacedAt($var3, $this.$blockID0, $var4, $var5, $var6, 0)) {
        $var8 = nms_Block_blocksList.data[$this.$blockID0];
        if (nms_World_setBlockWithNotify($var3, $var4, $var5, $var6, $this.$blockID0)) {
            nms_Block_blocksList.data[$this.$blockID0].$onBlockPlaced($var3, $var4, $var5, $var6, $var7);
            nms_Block_blocksList.data[$this.$blockID0].$onBlockPlacedBy($var3, $var4, $var5, $var6, $var2);
            nms_World_playSoundEffect($var3, $var4 + 0.5, $var5 + 0.5, $var6 + 0.5, nms_StepSound_func_1145_d($var8.$stepSound), ($var8.$stepSound.$field_1677_b + 1.0) / 2.0, $var8.$stepSound.$field_1679_c * 0.800000011920929);
            $var1.$stackSize = $var1.$stackSize - 1 | 0;
        }
    }
    return 1;
}
function otciu_CLDRHelper() {
    jl_Object.call(this);
}
var otciu_CLDRHelper_$$metadata$$0 = null;
var otciu_CLDRHelper_$$metadata$$1 = null;
var otciu_CLDRHelper_$$metadata$$2 = null;
var otciu_CLDRHelper_$$metadata$$3 = null;
var otciu_CLDRHelper_$$metadata$$4 = null;
var otciu_CLDRHelper_$$metadata$$5 = null;
var otciu_CLDRHelper_$$metadata$$6 = null;
var otciu_CLDRHelper_$$metadata$$10 = null;
var otciu_CLDRHelper_$$metadata$$12 = null;
var otciu_CLDRHelper_$$metadata$$13 = null;
var otciu_CLDRHelper_$$metadata$$14 = null;
function otciu_CLDRHelper__init_0() {
    var var_0 = new otciu_CLDRHelper();
    otciu_CLDRHelper__init_(var_0);
    return var_0;
}
function otciu_CLDRHelper__init_($this) {
    return;
}
function otciu_CLDRHelper_getCode($language, $country) {
    var var$3;
    if (!jl_String_isEmpty($country)) {
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        $language = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $language), $rt_s(317)), $country));
    }
    return $language;
}
function otciu_CLDRHelper_resolveCountry($subtags, $country) {
    var $index;
    if (jl_String_isEmpty($country)) {
        if (otciu_CLDRHelper_$$metadata$$0 === null)
            otciu_CLDRHelper_$$metadata$$0 = otciu_CLDRHelper_getLikelySubtagsMap$$create();
        $country = otciu_CLDRHelper_$$metadata$$0;
        if ($country.hasOwnProperty($rt_ustr($subtags)))
            $subtags = ($country[$rt_ustr($subtags)].value !== null ? $rt_str($country[$rt_ustr($subtags)].value) : null);
        $index = jl_String_lastIndexOf($subtags, 95);
        $country = $index <= 0 ? $rt_s(17) : jl_String_substring($subtags, $index + 1 | 0);
    }
    return $country;
}
function otciu_CLDRHelper_resolveDateFormatSymbols($map, $language, $country) {
    var $localeCode, $arrayRes, $result, var$7, $i, var$9;
    $localeCode = otciu_CLDRHelper_getCode($language, $country);
    $arrayRes = $map.hasOwnProperty($rt_ustr($localeCode)) ? $map[$rt_ustr($localeCode)] : $map.hasOwnProperty($rt_ustr($language)) ? $map[$rt_ustr($language)] : $map.root;
    $result = $rt_createArray(jl_String, $arrayRes.length);
    var$7 = $result.data;
    $i = 0;
    var$9 = var$7.length;
    while ($i < var$9) {
        var$7[$i] = ($arrayRes[$i].value !== null ? $rt_str($arrayRes[$i].value) : null);
        $i = $i + 1 | 0;
    }
    return $result;
}
function otciu_CLDRHelper_getLikelySubtagsMap$$create() {
    return {"ksh": {"value" : "ksh-Latn-DE"}, "ksj": {"value" : "ksj-Latn-ZZ"}, "cch": {"value" : "cch-Latn-NG"}, "und-Khar": {"value" : "pra-Khar-PK"}, "gkn": {"value" : "gkn-Latn-ZZ"}, "ksr": {"value" : "ksr-Latn-ZZ"}, "und-Mani": {"value" : "xmn-Mani-CN"}, "gkp": {"value" : "gkp-Latn-ZZ"}, "xmf": {"value" : "xmf-Geor-GE"}, "ccp": {"value" : "ccp-Cakm-BD"}, "ted": {"value" : "ted-Latn-ZZ"}, "und-Mand": {"value" : "myz-Mand-IR"}, "ktb": {"value" : "ktb-Ethi-ZZ"}, "xmn": {"value" : "xmn-Mani-CN"}, "sd-Sind":
    {"value" : "sd-Sind-IN"}, "xmr": {"value" : "xmr-Merc-SD"}, "tem": {"value" : "tem-Latn-SL"}, "und-Mroo": {"value" : "mro-Mroo-BD"}, "teo": {"value" : "teo-Latn-UG"}, "tet": {"value" : "tet-Latn-TL"}, "ktm": {"value" : "ktm-Latn-ZZ"}, "glk": {"value" : "glk-Arab-IR"}, "kto": {"value" : "kto-Latn-ZZ"}, "und-Soyo": {"value" : "cmg-Soyo-MN"}, "xna": {"value" : "xna-Narb-SA"}, "tfi": {"value" : "tfi-Latn-ZZ"}, "kub": {"value" : "kub-Latn-ZZ"}, "kue": {"value" : "kue-Latn-ZZ"}, "kud": {"value" : "kud-Latn-ZZ"}
    , "xnr": {"value" : "xnr-Deva-IN"}, "ceb": {"value" : "ceb-Latn-PH"}, "kuj": {"value" : "kuj-Latn-ZZ"}, "kum": {"value" : "kum-Cyrl-RU"}, "kun": {"value" : "kun-Latn-ZZ"}, "gmm": {"value" : "gmm-Latn-ZZ"}, "kup": {"value" : "kup-Latn-ZZ"}, "kus": {"value" : "kus-Latn-ZZ"}, "gmv": {"value" : "gmv-Ethi-ZZ"}, "tgc": {"value" : "tgc-Latn-ZZ"}, "xog": {"value" : "xog-Latn-UG"}, "und-Arab-YT": {"value" : "swb-Arab-YT"}, "und-Latn-ET": {"value" : "en-Latn-ET"}, "xon": {"value" : "xon-Latn-ZZ"}, "ha-CM": {"value"
    : "ha-Arab-CM"}, "gnd": {"value" : "gnd-Latn-ZZ"}, "kvg": {"value" : "kvg-Latn-ZZ"}, "tgo": {"value" : "tgo-Latn-ZZ"}, "cfa": {"value" : "cfa-Latn-ZZ"}, "gng": {"value" : "gng-Latn-ZZ"}, "tgu": {"value" : "tgu-Latn-ZZ"}, "und-Latn-GE": {"value" : "ku-Latn-GE"}, "kvr": {"value" : "kvr-Latn-ID"}, "kvx": {"value" : "kvx-Arab-PK"}, "und-Gujr": {"value" : "gu-Gujr-IN"}, "thl": {"value" : "thl-Deva-NP"}, "xpr": {"value" : "xpr-Prti-IR"}, "thq": {"value" : "thq-Deva-NP"}, "god": {"value" : "god-Latn-ZZ"}, "gof":
    {"value" : "gof-Ethi-ZZ"}, "kwj": {"value" : "kwj-Latn-ZZ"}, "ky-Arab": {"value" : "ky-Arab-CN"}, "thr": {"value" : "thr-Deva-NP"}, "goi": {"value" : "goi-Latn-ZZ"}, "cgg": {"value" : "cgg-Latn-UG"}, "kwo": {"value" : "kwo-Latn-ZZ"}, "gom": {"value" : "gom-Deva-IN"}, "gon": {"value" : "gon-Telu-IN"}, "gos": {"value" : "gos-Latn-NL"}, "gor": {"value" : "gor-Latn-ID"}, "und-Latn-CY": {"value" : "tr-Latn-CY"}, "got": {"value" : "got-Goth-UA"}, "tif": {"value" : "tif-Latn-ZZ"}, "tig": {"value" : "tig-Ethi-ER"}
    , "kxa": {"value" : "kxa-Latn-ZZ"}, "kxc": {"value" : "kxc-Ethi-ZZ"}, "pag": {"value" : "pag-Latn-PH"}, "tik": {"value" : "tik-Latn-ZZ"}, "tim": {"value" : "tim-Latn-ZZ"}, "pal": {"value" : "pal-Phli-IR"}, "tio": {"value" : "tio-Latn-ZZ"}, "pam": {"value" : "pam-Latn-PH"}, "und-Marc": {"value" : "bo-Marc-CN"}, "pap": {"value" : "pap-Latn-AW"}, "und-Latn-CN": {"value" : "za-Latn-CN"}, "tiv": {"value" : "tiv-Latn-NG"}, "kxm": {"value" : "kxm-Thai-TH"}, "kxp": {"value" : "kxp-Arab-PK"}, "pau": {"value" : "pau-Latn-PW"}
    , "chk": {"value" : "chk-Latn-FM"}, "chm": {"value" : "chm-Cyrl-RU"}, "xrb": {"value" : "xrb-Latn-ZZ"}, "chp": {"value" : "chp-Latn-CA"}, "cho": {"value" : "cho-Latn-US"}, "kxw": {"value" : "kxw-Latn-ZZ"}, "und-Latn-DZ": {"value" : "fr-Latn-DZ"}, "chr": {"value" : "chr-Cher-US"}, "kxz": {"value" : "kxz-Latn-ZZ"}, "und-Batk": {"value" : "bbc-Batk-ID"}, "und-Bass": {"value" : "bsq-Bass-LR"}, "kye": {"value" : "kye-Latn-ZZ"}, "pbi": {"value" : "pbi-Latn-ZZ"}, "und-Deva-MU": {"value" : "bho-Deva-MU"}, "und-Sgnw":
    {"value" : "ase-Sgnw-US"}, "xsa": {"value" : "xsa-Sarb-YE"}, "kyx": {"value" : "kyx-Latn-ZZ"}, "xsi": {"value" : "xsi-Latn-ZZ"}, "pcd": {"value" : "pcd-Latn-FR"}, "und-Latn-AM": {"value" : "ku-Latn-AM"}, "xsm": {"value" : "xsm-Latn-ZZ"}, "tkl": {"value" : "tkl-Latn-TK"}, "und-Thai-CN": {"value" : "lcp-Thai-CN"}, "grb": {"value" : "grb-Latn-ZZ"}, "xsr": {"value" : "xsr-Deva-NP"}, "und-Latn-AF": {"value" : "tk-Latn-AF"}, "grc": {"value" : "grc-Cprt-CY"}, "tkr": {"value" : "tkr-Latn-AZ"}, "cja": {"value" :
    "cja-Arab-KH"}, "pcm": {"value" : "pcm-Latn-NG"}, "tkt": {"value" : "tkt-Deva-NP"}, "und-Olck": {"value" : "sat-Olck-IN"}, "kzr": {"value" : "kzr-Latn-ZZ"}, "cjm": {"value" : "cjm-Cham-VN"}, "grt": {"value" : "grt-Beng-IN"}, "und-Arab-TJ": {"value" : "fa-Arab-TJ"}, "und-Arab-TG": {"value" : "apd-Arab-TG"}, "und-Arab-TH": {"value" : "mfa-Arab-TH"}, "und-Deva-PK": {"value" : "btv-Deva-PK"}, "grw": {"value" : "grw-Latn-ZZ"}, "cjv": {"value" : "cjv-Latn-ZZ"}, "pdc": {"value" : "pdc-Latn-US"}, "tlf": {"value"
    : "tlf-Latn-ZZ"}, "und-Arab-TR": {"value" : "az-Arab-TR"}, "ckb": {"value" : "ckb-Arab-IQ"}, "tly": {"value" : "tly-Latn-AZ"}, "pdt": {"value" : "pdt-Latn-CA"}, "tlx": {"value" : "tlx-Latn-ZZ"}, "ckl": {"value" : "ckl-Latn-ZZ"}, "cko": {"value" : "cko-Latn-ZZ"}, "gsw": {"value" : "gsw-Latn-CH"}, "ped": {"value" : "ped-Latn-ZZ"}, "tmh": {"value" : "tmh-Latn-NE"}, "cky": {"value" : "cky-Latn-ZZ"}, "kk-Arab": {"value" : "kk-Arab-CN"}, "und-Runr": {"value" : "non-Runr-SE"}, "cla": {"value" : "cla-Latn-ZZ"},
    "peo": {"value" : "peo-Xpeo-IR"}, "tmy": {"value" : "tmy-Latn-ZZ"}, "pex": {"value" : "pex-Latn-ZZ"}, "ky-TR": {"value" : "ky-Latn-TR"}, "tnh": {"value" : "tnh-Latn-ZZ"}, "guc": {"value" : "guc-Latn-CO"}, "gub": {"value" : "gub-Latn-BR"}, "gud": {"value" : "gud-Latn-ZZ"}, "pfl": {"value" : "pfl-Latn-DE"}, "cme": {"value" : "cme-Latn-ZZ"}, "cmg": {"value" : "cmg-Soyo-MN"}, "gur": {"value" : "gur-Latn-GH"}, "xwe": {"value" : "xwe-Latn-ZZ"}, "guw": {"value" : "guw-Latn-ZZ"}, "tof": {"value" : "tof-Latn-ZZ"}
    , "gux": {"value" : "gux-Latn-ZZ"}, "guz": {"value" : "guz-Latn-KE"}, "tog": {"value" : "tog-Latn-MW"}, "gvf": {"value" : "gvf-Latn-ZZ"}, "toq": {"value" : "toq-Latn-ZZ"}, "gvr": {"value" : "gvr-Deva-NP"}, "und-Guru": {"value" : "pa-Guru-IN"}, "gvs": {"value" : "gvs-Latn-ZZ"}, "tpi": {"value" : "tpi-Latn-PG"}, "tpm": {"value" : "tpm-Latn-ZZ"}, "und-Tfng": {"value" : "zgh-Tfng-MA"}, "gwc": {"value" : "gwc-Arab-ZZ"}, "und-Arab-PK": {"value" : "ur-Arab-PK"}, "phl": {"value" : "phl-Arab-ZZ"}, "und-Aghb": {"value"
    : "lez-Aghb-RU"}, "phn": {"value" : "phn-Phnx-LB"}, "gwi": {"value" : "gwi-Latn-CA"}, "tpz": {"value" : "tpz-Latn-ZZ"}, "cop": {"value" : "cop-Copt-EG"}, "gwt": {"value" : "gwt-Arab-ZZ"}, "lab": {"value" : "lab-Lina-GR"}, "lad": {"value" : "lad-Hebr-IL"}, "lah": {"value" : "lah-Arab-PK"}, "pil": {"value" : "pil-Latn-ZZ"}, "lag": {"value" : "lag-Latn-TZ"}, "tqo": {"value" : "tqo-Latn-ZZ"}, "laj": {"value" : "laj-Latn-UG"}, "pip": {"value" : "pip-Latn-ZZ"}, "und-Khmr": {"value" : "km-Khmr-KH"}, "las": {"value"
    : "las-Latn-ZZ"}, "sd-Deva": {"value" : "sd-Deva-IN"}, "und-Khoj": {"value" : "sd-Khoj-IN"}, "cps": {"value" : "cps-Latn-PH"}, "kk-AF": {"value" : "kk-Arab-AF"}, "und-Arab-MU": {"value" : "ur-Arab-MU"}, "lbe": {"value" : "lbe-Cyrl-RU"}, "und-Arab-NG": {"value" : "ha-Arab-NG"}, "gyi": {"value" : "gyi-Latn-ZZ"}, "tru": {"value" : "tru-Latn-TR"}, "trw": {"value" : "trw-Arab-ZZ"}, "trv": {"value" : "trv-Latn-TW"}, "lbu": {"value" : "lbu-Latn-ZZ"}, "lbw": {"value" : "lbw-Latn-ID"}, "tsd": {"value" : "tsd-Grek-GR"}
    , "tsf": {"value" : "tsf-Deva-NP"}, "pka": {"value" : "pka-Brah-IN"}, "tsg": {"value" : "tsg-Latn-PH"}, "tsj": {"value" : "tsj-Tibt-BT"}, "und-Deva-FJ": {"value" : "hif-Deva-FJ"}, "pko": {"value" : "pko-Latn-KE"}, "lcm": {"value" : "lcm-Latn-ZZ"}, "crh": {"value" : "crh-Cyrl-UA"}, "lcp": {"value" : "lcp-Thai-CN"}, "tsw": {"value" : "tsw-Latn-ZZ"}, "crj": {"value" : "crj-Cans-CA"}, "crl": {"value" : "crl-Cans-CA"}, "und-Arab-MN": {"value" : "kk-Arab-MN"}, "crk": {"value" : "crk-Cans-CA"}, "crm": {"value"
    : "crm-Cans-CA"}, "und-Arab-MM": {"value" : "rhg-Arab-MM"}, "pla": {"value" : "pla-Latn-ZZ"}, "tte": {"value" : "tte-Latn-ZZ"}, "crs": {"value" : "crs-Latn-SC"}, "ttd": {"value" : "ttd-Latn-ZZ"}, "ldb": {"value" : "ldb-Latn-ZZ"}, "ttj": {"value" : "ttj-Latn-UG"}, "kk-CN": {"value" : "kk-Arab-CN"}, "und-Yiii": {"value" : "ii-Yiii-CN"}, "tts": {"value" : "tts-Thai-TH"}, "csb": {"value" : "csb-Latn-PL"}, "ttr": {"value" : "ttr-Latn-ZZ"}, "ttt": {"value" : "ttt-Latn-AZ"}, "csw": {"value" : "csw-Cans-CA"}, "tuh":
    {"value" : "tuh-Latn-ZZ"}, "led": {"value" : "led-Latn-ZZ"}, "tul": {"value" : "tul-Latn-ZZ"}, "lee": {"value" : "lee-Latn-ZZ"}, "tum": {"value" : "tum-Latn-MW"}, "und-Arab-KH": {"value" : "cja-Arab-KH"}, "tuq": {"value" : "tuq-Latn-ZZ"}, "ctd": {"value" : "ctd-Pauc-MM"}, "lem": {"value" : "lem-Latn-ZZ"}, "lep": {"value" : "lep-Lepc-IN"}, "pms": {"value" : "pms-Latn-IT"}, "leq": {"value" : "leq-Latn-ZZ"}, "und-Pauc": {"value" : "ctd-Pauc-MM"}, "und-Sogo": {"value" : "sog-Sogo-UZ"}, "leu": {"value" : "leu-Latn-ZZ"}
    , "lez": {"value" : "lez-Cyrl-RU"}, "tvd": {"value" : "tvd-Latn-ZZ"}, "mn-CN": {"value" : "mn-Mong-CN"}, "sr-TR": {"value" : "sr-Latn-TR"}, "png": {"value" : "png-Latn-ZZ"}, "tvl": {"value" : "tvl-Latn-TV"}, "und-Brah": {"value" : "pka-Brah-IN"}, "und-Brai": {"value" : "fr-Brai-FR"}, "pnn": {"value" : "pnn-Latn-ZZ"}, "tvu": {"value" : "tvu-Latn-ZZ"}, "pnt": {"value" : "pnt-Grek-GR"}, "uz-CN": {"value" : "uz-Cyrl-CN"}, "ha-SD": {"value" : "ha-Arab-SD"}, "twh": {"value" : "twh-Latn-ZZ"}, "und-Takr": {"value"
    : "doi-Takr-IN"}, "lgg": {"value" : "lgg-Latn-ZZ"}, "pon": {"value" : "pon-Latn-FM"}, "twq": {"value" : "twq-Latn-NE"}, "und-Arab-ID": {"value" : "ms-Arab-ID"}, "und-Arab-IN": {"value" : "ur-Arab-IN"}, "txg": {"value" : "txg-Tang-CN"}, "yam": {"value" : "yam-Latn-ZZ"}, "und-Talu": {"value" : "khb-Talu-CN"}, "yao": {"value" : "yao-Latn-MZ"}, "yap": {"value" : "yap-Latn-FM"}, "yas": {"value" : "yas-Latn-ZZ"}, "yat": {"value" : "yat-Latn-ZZ"}, "ppo": {"value" : "ppo-Latn-ZZ"}, "yav": {"value" : "yav-Latn-CM"}
    , "yay": {"value" : "yay-Latn-ZZ"}, "yaz": {"value" : "yaz-Latn-ZZ"}, "und-Tale": {"value" : "tdd-Tale-CN"}, "ybb": {"value" : "ybb-Latn-CM"}, "yba": {"value" : "yba-Latn-ZZ"}, "tya": {"value" : "tya-Latn-ZZ"}, "lia": {"value" : "lia-Latn-ZZ"}, "lid": {"value" : "lid-Latn-ZZ"}, "und-Latn-TW": {"value" : "trv-Latn-TW"}, "lif": {"value" : "lif-Deva-NP"}, "lih": {"value" : "lih-Latn-ZZ"}, "lig": {"value" : "lig-Latn-ZZ"}, "lij": {"value" : "lij-Latn-IT"}, "hag": {"value" : "hag-Latn-ZZ"}, "und-Latn-TN": {"value"
    : "fr-Latn-TN"}, "tyv": {"value" : "tyv-Cyrl-RU"}, "yby": {"value" : "yby-Latn-ZZ"}, "und-Arab-GB": {"value" : "ks-Arab-GB"}, "hak": {"value" : "hak-Hans-CN"}, "und-Taml": {"value" : "ta-Taml-IN"}, "ham": {"value" : "ham-Latn-ZZ"}, "lis": {"value" : "lis-Lisu-CN"}, "und-Latn-SY": {"value" : "fr-Latn-SY"}, "ky-Latn": {"value" : "ky-Latn-TR"}, "pra": {"value" : "pra-Khar-PK"}, "haw": {"value" : "haw-Latn-US"}, "haz": {"value" : "haz-Arab-AF"}, "ku-LB": {"value" : "ku-Arab-LB"}, "prd": {"value" : "prd-Arab-IR"}
    , "prg": {"value" : "prg-Latn-001"}, "tzm": {"value" : "tzm-Latn-MA"}, "hbb": {"value" : "hbb-Latn-ZZ"}, "und-Latn-UA": {"value" : "pl-Latn-UA"}, "ljp": {"value" : "ljp-Latn-ID"}, "und-Tang": {"value" : "txg-Tang-CN"}, "yue-Hans": {"value" : "yue-Hans-CN"}, "und-Latn-RU": {"value" : "krl-Latn-RU"}, "lki": {"value" : "lki-Arab-IR"}, "pss": {"value" : "pss-Latn-ZZ"}, "lkt": {"value" : "lkt-Latn-US"}, "sr-RO": {"value" : "sr-Latn-RO"}, "und-Arab-CN": {"value" : "ug-Arab-CN"}, "lle": {"value" : "lle-Latn-ZZ"}
    , "und-Cyrl": {"value" : "ru-Cyrl-RU"}, "uz-AF": {"value" : "uz-Arab-AF"}, "yer": {"value" : "yer-Latn-ZZ"}, "und-Beng": {"value" : "bn-Beng-BD"}, "ptp": {"value" : "ptp-Latn-ZZ"}, "lln": {"value" : "lln-Latn-ZZ"}, "sr-RU": {"value" : "sr-Latn-RU"}, "hdy": {"value" : "hdy-Ethi-ZZ"}, "unr-NP": {"value" : "unr-Deva-NP"}, "und-Mend": {"value" : "men-Mend-SL"}, "lmn": {"value" : "lmn-Telu-IN"}, "lmp": {"value" : "lmp-Latn-ZZ"}, "lmo": {"value" : "lmo-Latn-IT"}, "puu": {"value" : "puu-Latn-GA"}, "und-Arab-CC":
    {"value" : "ms-Arab-CC"}, "pal-Phlp": {"value" : "pal-Phlp-CN"}, "ygr": {"value" : "ygr-Latn-ZZ"}, "ygw": {"value" : "ygw-Latn-ZZ"}, "lns": {"value" : "lns-Latn-ZZ"}, "ky-CN": {"value" : "ky-Arab-CN"}, "lnu": {"value" : "lnu-Latn-ZZ"}, "pwa": {"value" : "pwa-Latn-ZZ"}, "und-Mahj": {"value" : "hi-Mahj-IN"}, "rif-NL": {"value" : "rif-Latn-NL"}, "loj": {"value" : "loj-Latn-ZZ"}, "lol": {"value" : "lol-Latn-CD"}, "lok": {"value" : "lok-Latn-ZZ"}, "lor": {"value" : "lor-Latn-ZZ"}, "und-Sora": {"value" : "srb-Sora-IN"}
    , "los": {"value" : "los-Latn-ZZ"}, "loz": {"value" : "loz-Latn-ZM"}, "und-202": {"value" : "en-Latn-NG"}, "und-Latn-MR": {"value" : "fr-Latn-MR"}, "hhy": {"value" : "hhy-Latn-ZZ"}, "hia": {"value" : "hia-Latn-ZZ"}, "hif": {"value" : "hif-Latn-FJ"}, "dad": {"value" : "dad-Latn-ZZ"}, "hih": {"value" : "hih-Latn-ZZ"}, "hig": {"value" : "hig-Latn-ZZ"}, "daf": {"value" : "daf-Latn-ZZ"}, "ubu": {"value" : "ubu-Latn-ZZ"}, "dah": {"value" : "dah-Latn-ZZ"}, "hil": {"value" : "hil-Latn-PH"}, "dag": {"value" : "dag-Latn-ZZ"}
    , "und-Mero": {"value" : "xmr-Mero-SD"}, "dak": {"value" : "dak-Latn-US"}, "und-Merc": {"value" : "xmr-Merc-SD"}, "dar": {"value" : "dar-Cyrl-RU"}, "dav": {"value" : "dav-Latn-KE"}, "lrc": {"value" : "lrc-Arab-IR"}, "yko": {"value" : "yko-Latn-ZZ"}, "und-Latn-MK": {"value" : "sq-Latn-MK"}, "und-Latn-MM": {"value" : "kac-Latn-MM"}, "dbd": {"value" : "dbd-Latn-ZZ"}, "und-Latn-MO": {"value" : "pt-Latn-MO"}, "und-Latn-MA": {"value" : "fr-Latn-MA"}, "und-Bali": {"value" : "ban-Bali-ID"}, "und-Tavt": {"value"
    : "blt-Tavt-VN"}, "dbq": {"value" : "dbq-Latn-ZZ"}, "yle": {"value" : "yle-Latn-ZZ"}, "ylg": {"value" : "ylg-Latn-ZZ"}, "und-Maka": {"value" : "mak-Maka-ID"}, "yll": {"value" : "yll-Latn-ZZ"}, "udm": {"value" : "udm-Cyrl-RU"}, "dcc": {"value" : "dcc-Arab-IN"}, "yml": {"value" : "yml-Latn-ZZ"}, "hla": {"value" : "hla-Latn-ZZ"}, "und-Latn-IR": {"value" : "tk-Latn-IR"}, "ltg": {"value" : "ltg-Latn-LV"}, "und-Latn-KM": {"value" : "fr-Latn-KM"}, "ddn": {"value" : "ddn-Latn-ZZ"}, "hlu": {"value" : "hlu-Hluw-TR"}
    , "lua": {"value" : "lua-Latn-CD"}, "und-Bamu": {"value" : "bax-Bamu-CM"}, "hmd": {"value" : "hmd-Plrd-CN"}, "ded": {"value" : "ded-Latn-ZZ"}, "luo": {"value" : "luo-Latn-KE"}, "und-142": {"value" : "zh-Hans-CN"}, "und-143": {"value" : "uz-Latn-UZ"}, "den": {"value" : "den-Latn-CA"}, "und-Gran": {"value" : "sa-Gran-IN"}, "hmt": {"value" : "hmt-Latn-ZZ"}, "uga": {"value" : "uga-Ugar-SY"}, "luz": {"value" : "luz-Arab-IR"}, "luy": {"value" : "luy-Latn-KE"}, "und-145": {"value" : "ar-Arab-SA"}, "und-Cakm": {"value"
    : "ccp-Cakm-BD"}, "und-Dupl": {"value" : "fr-Dupl-FR"}, "yon": {"value" : "yon-Latn-ZZ"}, "ug-MN": {"value" : "ug-Cyrl-MN"}, "hne": {"value" : "hne-Deva-IN"}, "hnd": {"value" : "hnd-Arab-PK"}, "hnj": {"value" : "hnj-Hmng-LA"}, "hno": {"value" : "hno-Arab-PK"}, "hnn": {"value" : "hnn-Latn-PH"}, "ug-KZ": {"value" : "ug-Cyrl-KZ"}, "und-154": {"value" : "en-Latn-GB"}, "und-155": {"value" : "de-Latn-DE"}, "und-150": {"value" : "ru-Cyrl-RU"}, "und-151": {"value" : "ru-Cyrl-RU"}, "und-Sylo": {"value" : "syl-Sylo-BD"}
    , "hoc": {"value" : "hoc-Deva-IN"}, "dga": {"value" : "dga-Latn-ZZ"}, "lwl": {"value" : "lwl-Thai-TH"}, "und-Ital": {"value" : "ett-Ital-IT"}, "hoj": {"value" : "hoj-Deva-IN"}, "dgh": {"value" : "dgh-Latn-ZZ"}, "dgi": {"value" : "dgi-Latn-ZZ"}, "dgl": {"value" : "dgl-Arab-ZZ"}, "hot": {"value" : "hot-Latn-ZZ"}, "dgr": {"value" : "dgr-Latn-CA"}, "dgz": {"value" : "dgz-Latn-ZZ"}, "yrb": {"value" : "yrb-Latn-ZZ"}, "yre": {"value" : "yre-Latn-ZZ"}, "und-Lyci": {"value" : "xlc-Lyci-TR"}, "und-Cans": {"value"
    : "cr-Cans-CA"}, "und-Hluw": {"value" : "hlu-Hluw-TR"}, "und-Nand": {"value" : "sa-Nand-IN"}, "yrl": {"value" : "yrl-Latn-BR"}, "dia": {"value" : "dia-Latn-ZZ"}, "und-Grek": {"value" : "el-Grek-GR"}, "und-Mong": {"value" : "mn-Mong-CN"}, "und-Lydi": {"value" : "xld-Lydi-TR"}, "yss": {"value" : "yss-Latn-ZZ"}, "und-Newa": {"value" : "new-Newa-NP"}, "lzh": {"value" : "lzh-Hans-CN"}, "dje": {"value" : "dje-Latn-NE"}, "lzz": {"value" : "lzz-Latn-TR"}, "uli": {"value" : "uli-Latn-FM"}, "hsb": {"value" : "hsb-Latn-DE"}
    , "und-Xsux": {"value" : "akk-Xsux-IQ"}, "hsn": {"value" : "hsn-Hans-CN"}, "und-Cari": {"value" : "xcr-Cari-TR"}, "und-Syrc": {"value" : "syr-Syrc-IQ"}, "yua": {"value" : "yua-Latn-MX"}, "yue": {"value" : "yue-Hant-HK"}, "umb": {"value" : "umb-Latn-AO"}, "yuj": {"value" : "yuj-Latn-ZZ"}, "yut": {"value" : "yut-Latn-ZZ"}, "yuw": {"value" : "yuw-Latn-ZZ"}, "und-Bopo": {"value" : "zh-Bopo-TW"}, "und": {"value" : "en-Latn-US"}, "und-Egyp": {"value" : "egy-Egyp-EG"}, "und-Tglg": {"value" : "fil-Tglg-PH"}, "unr":
    {"value" : "unr-Beng-IN"}, "hui": {"value" : "hui-Latn-ZZ"}, "und-Elba": {"value" : "sq-Elba-AL"}, "unx": {"value" : "unx-Beng-IN"}, "und-Narb": {"value" : "xna-Narb-SA"}, "pa-PK": {"value" : "pa-Arab-PK"}, "und-Hebr-CA": {"value" : "yi-Hebr-CA"}, "und-Geor": {"value" : "ka-Geor-GE"}, "und-Shrd": {"value" : "sa-Shrd-IN"}, "dnj": {"value" : "dnj-Latn-CI"}, "dob": {"value" : "dob-Latn-ZZ"}, "und-Mymr-TH": {"value" : "mnw-Mymr-TH"}, "doi": {"value" : "doi-Arab-IN"}, "dop": {"value" : "dop-Latn-ZZ"}, "und-Sund":
    {"value" : "su-Sund-ID"}, "dow": {"value" : "dow-Latn-ZZ"}, "sr-ME": {"value" : "sr-Latn-ME"}, "und-Hung": {"value" : "hu-Hung-HU"}, "mad": {"value" : "mad-Latn-ID"}, "mag": {"value" : "mag-Deva-IN"}, "maf": {"value" : "maf-Latn-CM"}, "mai": {"value" : "mai-Deva-IN"}, "mak": {"value" : "mak-Latn-ID"}, "man": {"value" : "man-Latn-GM"}, "mas": {"value" : "mas-Latn-KE"}, "maw": {"value" : "maw-Latn-ZZ"}, "maz": {"value" : "maz-Latn-MX"}, "uri": {"value" : "uri-Latn-ZZ"}, "mbh": {"value" : "mbh-Latn-ZZ"}, "urt":
    {"value" : "urt-Latn-ZZ"}, "mbo": {"value" : "mbo-Latn-ZZ"}, "urw": {"value" : "urw-Latn-ZZ"}, "mbq": {"value" : "mbq-Latn-ZZ"}, "mbu": {"value" : "mbu-Latn-ZZ"}, "und-Hebr-GB": {"value" : "yi-Hebr-GB"}, "usa": {"value" : "usa-Latn-ZZ"}, "mbw": {"value" : "mbw-Latn-ZZ"}, "mci": {"value" : "mci-Latn-ZZ"}, "dri": {"value" : "dri-Latn-ZZ"}, "mcq": {"value" : "mcq-Latn-ZZ"}, "mcp": {"value" : "mcp-Latn-ZZ"}, "mcr": {"value" : "mcr-Latn-ZZ"}, "mcu": {"value" : "mcu-Latn-ZZ"}, "drs": {"value" : "drs-Ethi-ZZ"}
    , "mda": {"value" : "mda-Latn-ZZ"}, "mdf": {"value" : "mdf-Cyrl-RU"}, "mde": {"value" : "mde-Arab-ZZ"}, "mdh": {"value" : "mdh-Latn-PH"}, "dsb": {"value" : "dsb-Latn-DE"}, "mdj": {"value" : "mdj-Latn-ZZ"}, "utr": {"value" : "utr-Latn-ZZ"}, "mdr": {"value" : "mdr-Latn-ID"}, "mdx": {"value" : "mdx-Ethi-ZZ"}, "mee": {"value" : "mee-Latn-ZZ"}, "med": {"value" : "med-Latn-ZZ"}, "mek": {"value" : "mek-Latn-ZZ"}, "men": {"value" : "men-Latn-SL"}, "az-RU": {"value" : "az-Cyrl-RU"}, "mis-Medf": {"value" : "mis-Medf-NG"}
    , "mer": {"value" : "mer-Latn-KE"}, "dtm": {"value" : "dtm-Latn-ML"}, "meu": {"value" : "meu-Latn-ZZ"}, "met": {"value" : "met-Latn-ZZ"}, "dtp": {"value" : "dtp-Latn-MY"}, "dts": {"value" : "dts-Latn-ZZ"}, "uvh": {"value" : "uvh-Latn-ZZ"}, "dty": {"value" : "dty-Deva-NP"}, "mfa": {"value" : "mfa-Arab-TH"}, "uvl": {"value" : "uvl-Latn-ZZ"}, "mfe": {"value" : "mfe-Latn-MU"}, "dua": {"value" : "dua-Latn-CM"}, "dud": {"value" : "dud-Latn-ZZ"}, "duc": {"value" : "duc-Latn-ZZ"}, "mfn": {"value" : "mfn-Latn-ZZ"}
    , "dug": {"value" : "dug-Latn-ZZ"}, "mfo": {"value" : "mfo-Latn-ZZ"}, "mfq": {"value" : "mfq-Latn-ZZ"}, "und-Phag": {"value" : "lzh-Phag-CN"}, "dva": {"value" : "dva-Latn-ZZ"}, "mgh": {"value" : "mgh-Latn-MZ"}, "mgl": {"value" : "mgl-Latn-ZZ"}, "mgo": {"value" : "mgo-Latn-CM"}, "mgp": {"value" : "mgp-Deva-NP"}, "mgy": {"value" : "mgy-Latn-TZ"}, "zag": {"value" : "zag-Latn-SD"}, "mhi": {"value" : "mhi-Latn-ZZ"}, "mhl": {"value" : "mhl-Latn-ZZ"}, "dww": {"value" : "dww-Latn-ZZ"}, "mif": {"value" : "mif-Latn-ZZ"}
    , "und-Mymr-IN": {"value" : "kht-Mymr-IN"}, "min": {"value" : "min-Latn-ID"}, "mis": {"value" : "mis-Hatr-IQ"}, "ian": {"value" : "ian-Latn-ZZ"}, "miw": {"value" : "miw-Latn-ZZ"}, "iar": {"value" : "iar-Latn-ZZ"}, "uz-Arab": {"value" : "uz-Arab-AF"}, "ibb": {"value" : "ibb-Latn-NG"}, "iba": {"value" : "iba-Latn-MY"}, "dyo": {"value" : "dyo-Latn-SN"}, "dyu": {"value" : "dyu-Latn-BF"}, "iby": {"value" : "iby-Latn-ZZ"}, "zdj": {"value" : "zdj-Arab-KM"}, "ica": {"value" : "ica-Latn-ZZ"}, "mki": {"value" : "mki-Arab-ZZ"}
    , "und-Wcho": {"value" : "nnp-Wcho-IN"}, "ich": {"value" : "ich-Latn-ZZ"}, "mkl": {"value" : "mkl-Latn-ZZ"}, "dzg": {"value" : "dzg-Latn-ZZ"}, "mkp": {"value" : "mkp-Latn-ZZ"}, "zea": {"value" : "zea-Latn-NL"}, "mkw": {"value" : "mkw-Latn-ZZ"}, "mle": {"value" : "mle-Latn-ZZ"}, "idd": {"value" : "idd-Latn-ZZ"}, "idi": {"value" : "idi-Latn-ZZ"}, "lif-Limb": {"value" : "lif-Limb-IN"}, "mlp": {"value" : "mlp-Latn-ZZ"}, "mls": {"value" : "mls-Latn-SD"}, "idu": {"value" : "idu-Latn-ZZ"}, "quc": {"value" : "quc-Latn-GT"}
    , "qug": {"value" : "qug-Latn-EC"}, "und-Jamo": {"value" : "ko-Jamo-KR"}, "mmo": {"value" : "mmo-Latn-ZZ"}, "mmu": {"value" : "mmu-Latn-ZZ"}, "mmx": {"value" : "mmx-Latn-ZZ"}, "zgh": {"value" : "zgh-Tfng-MA"}, "mna": {"value" : "mna-Latn-ZZ"}, "mnf": {"value" : "mnf-Latn-ZZ"}, "ife": {"value" : "ife-Latn-TG"}, "mni": {"value" : "mni-Beng-IN"}, "mnw": {"value" : "mnw-Mymr-MM"}, "moa": {"value" : "moa-Latn-ZZ"}, "moe": {"value" : "moe-Latn-CA"}, "igb": {"value" : "igb-Latn-ZZ"}, "ige": {"value" : "ige-Latn-ZZ"}
    , "moh": {"value" : "moh-Latn-CA"}, "und-Hebr-SE": {"value" : "yi-Hebr-SE"}, "zhx": {"value" : "zhx-Nshu-CN"}, "mos": {"value" : "mos-Latn-BF"}, "und-Shaw": {"value" : "en-Shaw-GB"}, "zia": {"value" : "zia-Latn-ZZ"}, "mox": {"value" : "mox-Latn-ZZ"}, "vag": {"value" : "vag-Latn-ZZ"}, "vai": {"value" : "vai-Vaii-LR"}, "van": {"value" : "van-Latn-ZZ"}, "mpp": {"value" : "mpp-Latn-ZZ"}, "mpt": {"value" : "mpt-Latn-ZZ"}, "mps": {"value" : "mps-Latn-ZZ"}, "mpx": {"value" : "mpx-Latn-ZZ"}, "und-Hebr-US": {"value"
    : "yi-Hebr-US"}, "mql": {"value" : "mql-Latn-ZZ"}, "und-Hebr-UA": {"value" : "yi-Hebr-UA"}, "mrd": {"value" : "mrd-Deva-NP"}, "mrj": {"value" : "mrj-Cyrl-RU"}, "ijj": {"value" : "ijj-Latn-ZZ"}, "mro": {"value" : "mro-Mroo-BD"}, "und-Modi": {"value" : "mr-Modi-IN"}, "ebu": {"value" : "ebu-Latn-KE"}, "zlm": {"value" : "zlm-Latn-TG"}, "arc-Palm": {"value" : "arc-Palm-SY"}, "ikk": {"value" : "ikk-Latn-ZZ"}, "ikt": {"value" : "ikt-Latn-CA"}, "ikw": {"value" : "ikw-Latn-ZZ"}, "vec": {"value" : "vec-Latn-IT"},
    "ikx": {"value" : "ikx-Latn-ZZ"}, "zmi": {"value" : "zmi-Latn-MY"}, "mtc": {"value" : "mtc-Latn-ZZ"}, "mtf": {"value" : "mtf-Latn-ZZ"}, "vep": {"value" : "vep-Latn-RU"}, "zh-Bopo": {"value" : "zh-Bopo-TW"}, "mti": {"value" : "mti-Latn-ZZ"}, "und-Ethi": {"value" : "am-Ethi-ET"}, "mtr": {"value" : "mtr-Deva-IN"}, "und-Thai-LA": {"value" : "kdt-Thai-LA"}, "ilo": {"value" : "ilo-Latn-PH"}, "zne": {"value" : "zne-Latn-ZZ"}, "mua": {"value" : "mua-Latn-CM"}, "und-Thai-KH": {"value" : "kdt-Thai-KH"}, "imo": {"value"
    : "imo-Latn-ZZ"}, "mus": {"value" : "mus-Latn-US"}, "mur": {"value" : "mur-Latn-ZZ"}, "mva": {"value" : "mva-Latn-ZZ"}, "inh": {"value" : "inh-Cyrl-RU"}, "mvn": {"value" : "mvn-Latn-ZZ"}, "efi": {"value" : "efi-Latn-NG"}, "mvy": {"value" : "mvy-Arab-PK"}, "und-Java": {"value" : "jv-Java-ID"}, "mwk": {"value" : "mwk-Latn-ML"}, "mwr": {"value" : "mwr-Deva-IN"}, "und-021": {"value" : "en-Latn-US"}, "egl": {"value" : "egl-Latn-IT"}, "mww": {"value" : "mww-Hmnp-US"}, "mwv": {"value" : "mwv-Latn-ID"}, "iou": {"value"
    : "iou-Latn-ZZ"}, "und-029": {"value" : "es-Latn-CU"}, "vic": {"value" : "vic-Latn-SX"}, "egy": {"value" : "egy-Egyp-EG"}, "und-Ugar": {"value" : "uga-Ugar-SY"}, "mxc": {"value" : "mxc-Latn-ZW"}, "raj": {"value" : "raj-Deva-IN"}, "rai": {"value" : "rai-Latn-ZZ"}, "rao": {"value" : "rao-Latn-ZZ"}, "viv": {"value" : "viv-Latn-ZZ"}, "mxm": {"value" : "mxm-Latn-ZZ"}, "und-034": {"value" : "hi-Deva-IN"}, "und-030": {"value" : "zh-Hans-CN"}, "und-039": {"value" : "it-Latn-IT"}, "und-035": {"value" : "id-Latn-ID"}
    , "ug-Cyrl": {"value" : "ug-Cyrl-KZ"}, "myk": {"value" : "myk-Latn-ZZ"}, "mym": {"value" : "mym-Ethi-ZZ"}, "aai": {"value" : "aai-Latn-ZZ"}, "aak": {"value" : "aak-Latn-ZZ"}, "myw": {"value" : "myw-Latn-ZZ"}, "myv": {"value" : "myv-Cyrl-RU"}, "myx": {"value" : "myx-Latn-UG"}, "myz": {"value" : "myz-Mand-IR"}, "und-Sinh": {"value" : "si-Sinh-LK"}, "und-Sind": {"value" : "sd-Sind-IN"}, "aau": {"value" : "aau-Latn-ZZ"}, "rcf": {"value" : "rcf-Latn-RE"}, "und-Orkh": {"value" : "otk-Orkh-MN"}, "mzk": {"value"
    : "mzk-Latn-ZZ"}, "mzn": {"value" : "mzn-Arab-IR"}, "iri": {"value" : "iri-Latn-ZZ"}, "mzm": {"value" : "mzm-Latn-ZZ"}, "mzp": {"value" : "mzp-Latn-ZZ"}, "und-053": {"value" : "en-Latn-AU"}, "abi": {"value" : "abi-Latn-ZZ"}, "und-054": {"value" : "en-Latn-PG"}, "mzw": {"value" : "mzw-Latn-ZZ"}, "mzz": {"value" : "mzz-Latn-ZZ"}, "abr": {"value" : "abr-Latn-GH"}, "abq": {"value" : "abq-Cyrl-ZZ"}, "abt": {"value" : "abt-Latn-ZZ"}, "und-057": {"value" : "en-Latn-GU"}, "aby": {"value" : "aby-Latn-ZZ"}, "eka":
    {"value" : "eka-Latn-ZZ"}, "vls": {"value" : "vls-Latn-BE"}, "ace": {"value" : "ace-Latn-ID"}, "acd": {"value" : "acd-Latn-ZZ"}, "ach": {"value" : "ach-Latn-UG"}, "vmf": {"value" : "vmf-Latn-DE"}, "eky": {"value" : "eky-Kali-MM"}, "rej": {"value" : "rej-Latn-ID"}, "rel": {"value" : "rel-Latn-ZZ"}, "ada": {"value" : "ada-Latn-GH"}, "res": {"value" : "res-Latn-ZZ"}, "vmw": {"value" : "vmw-Latn-MZ"}, "ade": {"value" : "ade-Latn-ZZ"}, "adj": {"value" : "adj-Latn-ZZ"}, "und-Hira": {"value" : "ja-Hira-JP"}, "adz":
    {"value" : "adz-Latn-ZZ"}, "ady": {"value" : "ady-Cyrl-RU"}, "ema": {"value" : "ema-Latn-ZZ"}, "und-Deva": {"value" : "hi-Deva-IN"}, "aeb": {"value" : "aeb-Arab-TN"}, "emi": {"value" : "emi-Latn-ZZ"}, "und-009": {"value" : "en-Latn-AU"}, "aey": {"value" : "aey-Latn-ZZ"}, "und-002": {"value" : "en-Latn-NG"}, "und-003": {"value" : "en-Latn-US"}, "und-005": {"value" : "pt-Latn-BR"}, "rgn": {"value" : "rgn-Latn-IT"}, "vot": {"value" : "vot-Latn-RU"}, "enn": {"value" : "enn-Latn-ZZ"}, "enq": {"value" : "enq-Latn-ZZ"}
    , "und-011": {"value" : "en-Latn-NG"}, "rhg": {"value" : "rhg-Arab-MM"}, "und-017": {"value" : "sw-Latn-CD"}, "und-018": {"value" : "en-Latn-ZA"}, "und-019": {"value" : "en-Latn-US"}, "und-013": {"value" : "es-Latn-MX"}, "und-014": {"value" : "sw-Latn-TZ"}, "und-015": {"value" : "ar-Arab-EG"}, "agc": {"value" : "agc-Latn-ZZ"}, "und-Zanb": {"value" : "cmg-Zanb-MN"}, "iwm": {"value" : "iwm-Latn-ZZ"}, "agd": {"value" : "agd-Latn-ZZ"}, "agg": {"value" : "agg-Latn-ZZ"}, "iws": {"value" : "iws-Latn-ZZ"}, "agm":
    {"value" : "agm-Latn-ZZ"}, "ago": {"value" : "ago-Latn-ZZ"}, "agq": {"value" : "agq-Latn-CM"}, "ria": {"value" : "ria-Latn-IN"}, "rif": {"value" : "rif-Tfng-MA"}, "nac": {"value" : "nac-Latn-ZZ"}, "naf": {"value" : "naf-Latn-ZZ"}, "nak": {"value" : "nak-Latn-ZZ"}, "nan": {"value" : "nan-Hans-CN"}, "aha": {"value" : "aha-Latn-ZZ"}, "nap": {"value" : "nap-Latn-IT"}, "naq": {"value" : "naq-Latn-NA"}, "zza": {"value" : "zza-Latn-TR"}, "nas": {"value" : "nas-Latn-ZZ"}, "ahl": {"value" : "ahl-Latn-ZZ"}, "en-Shaw":
    {"value" : "en-Shaw-GB"}, "und-Copt": {"value" : "cop-Copt-EG"}, "aho": {"value" : "aho-Ahom-IN"}, "vro": {"value" : "vro-Latn-EE"}, "rjs": {"value" : "rjs-Deva-NP"}, "nca": {"value" : "nca-Latn-ZZ"}, "ncf": {"value" : "ncf-Latn-ZZ"}, "nce": {"value" : "nce-Latn-ZZ"}, "nch": {"value" : "nch-Latn-MX"}, "izh": {"value" : "izh-Latn-RU"}, "izi": {"value" : "izi-Latn-ZZ"}, "rkt": {"value" : "rkt-Beng-BD"}, "nco": {"value" : "nco-Latn-ZZ"}, "eri": {"value" : "eri-Latn-ZZ"}, "ajg": {"value" : "ajg-Latn-ZZ"}, "ncu":
    {"value" : "ncu-Latn-ZZ"}, "ndc": {"value" : "ndc-Latn-MZ"}, "esg": {"value" : "esg-Gonm-IN"}, "nds": {"value" : "nds-Latn-DE"}, "akk": {"value" : "akk-Xsux-IQ"}, "esu": {"value" : "esu-Latn-US"}, "neb": {"value" : "neb-Latn-ZZ"}, "rmf": {"value" : "rmf-Latn-FI"}, "und-061": {"value" : "sm-Latn-WS"}, "und-Limb": {"value" : "lif-Limb-IN"}, "vun": {"value" : "vun-Latn-TZ"}, "ff-Adlm": {"value" : "ff-Adlm-GN"}, "vut": {"value" : "vut-Latn-ZZ"}, "rmo": {"value" : "rmo-Latn-CH"}, "ala": {"value" : "ala-Latn-ZZ"}
    , "rmt": {"value" : "rmt-Arab-IR"}, "rmu": {"value" : "rmu-Latn-SE"}, "ali": {"value" : "ali-Latn-ZZ"}, "nex": {"value" : "nex-Latn-ZZ"}, "new": {"value" : "new-Deva-NP"}, "aln": {"value" : "aln-Latn-XK"}, "etr": {"value" : "etr-Latn-ZZ"}, "und-Rohg": {"value" : "rhg-Rohg-MM"}, "ett": {"value" : "ett-Ital-IT"}, "rna": {"value" : "rna-Latn-ZZ"}, "etu": {"value" : "etu-Latn-ZZ"}, "alt": {"value" : "alt-Cyrl-RU"}, "etx": {"value" : "etx-Latn-ZZ"}, "rng": {"value" : "rng-Latn-MZ"}, "und-Linb": {"value" : "grc-Linb-GR"}
    , "und-Lina": {"value" : "lab-Lina-GR"}, "und-Jpan": {"value" : "ja-Jpan-JP"}, "man-GN": {"value" : "man-Nkoo-GN"}, "nfr": {"value" : "nfr-Latn-ZZ"}, "amm": {"value" : "amm-Latn-ZZ"}, "und-Arab": {"value" : "ar-Arab-EG"}, "amo": {"value" : "amo-Latn-NG"}, "amn": {"value" : "amn-Latn-ZZ"}, "rob": {"value" : "rob-Latn-ID"}, "amp": {"value" : "amp-Latn-ZZ"}, "ngb": {"value" : "ngb-Latn-ZZ"}, "rof": {"value" : "rof-Latn-TZ"}, "nga": {"value" : "nga-Latn-ZZ"}, "ngl": {"value" : "ngl-Latn-MZ"}, "roo": {"value"
    : "roo-Latn-ZZ"}, "anc": {"value" : "anc-Latn-ZZ"}, "ank": {"value" : "ank-Latn-ZZ"}, "ann": {"value" : "ann-Latn-ZZ"}, "und-Bhks": {"value" : "sa-Bhks-IN"}, "nhb": {"value" : "nhb-Latn-ZZ"}, "nhe": {"value" : "nhe-Latn-MX"}, "any": {"value" : "any-Latn-ZZ"}, "und-Orya": {"value" : "or-Orya-IN"}, "ewo": {"value" : "ewo-Latn-CM"}, "nhw": {"value" : "nhw-Latn-MX"}, "aoj": {"value" : "aoj-Latn-ZZ"}, "aom": {"value" : "aom-Latn-ZZ"}, "zh-Hanb": {"value" : "zh-Hanb-TW"}, "jab": {"value" : "jab-Latn-ZZ"}, "nif":
    {"value" : "nif-Latn-ZZ"}, "aoz": {"value" : "aoz-Latn-ID"}, "nij": {"value" : "nij-Latn-ID"}, "nii": {"value" : "nii-Latn-ZZ"}, "zh-PH": {"value" : "zh-Hant-PH"}, "nin": {"value" : "nin-Latn-ZZ"}, "zh-Hant": {"value" : "zh-Hant-TW"}, "zh-PF": {"value" : "zh-Hant-PF"}, "und-Ahom": {"value" : "aho-Ahom-IN"}, "apd": {"value" : "apd-Arab-TG"}, "apc": {"value" : "apc-Arab-ZZ"}, "ape": {"value" : "ape-Latn-ZZ"}, "jam": {"value" : "jam-Latn-JM"}, "zh-PA": {"value" : "zh-Hant-PA"}, "niu": {"value" : "niu-Latn-NU"}
    , "niz": {"value" : "niz-Latn-ZZ"}, "niy": {"value" : "niy-Latn-ZZ"}, "ext": {"value" : "ext-Latn-ES"}, "apr": {"value" : "apr-Latn-ZZ"}, "aps": {"value" : "aps-Latn-ZZ"}, "apz": {"value" : "apz-Latn-ZZ"}, "rro": {"value" : "rro-Latn-ZZ"}, "njo": {"value" : "njo-Latn-IN"}, "jbo": {"value" : "jbo-Latn-001"}, "jbu": {"value" : "jbu-Latn-ZZ"}, "zh-MO": {"value" : "zh-Hant-MO"}, "nkg": {"value" : "nkg-Latn-ZZ"}, "zh-MY": {"value" : "zh-Hant-MY"}, "arc": {"value" : "arc-Armi-IR"}, "nko": {"value" : "nko-Latn-ZZ"}
    , "arh": {"value" : "arh-Latn-ZZ"}, "pa-Arab": {"value" : "pa-Arab-PK"}, "und-Mtei": {"value" : "mni-Mtei-IN"}, "arn": {"value" : "arn-Latn-CL"}, "aro": {"value" : "aro-Latn-BO"}, "und-Cyrl-RO": {"value" : "bg-Cyrl-RO"}, "arq": {"value" : "arq-Arab-DZ"}, "arz": {"value" : "arz-Arab-EG"}, "ary": {"value" : "ary-Arab-MA"}, "rtm": {"value" : "rtm-Latn-FJ"}, "asa": {"value" : "asa-Latn-TZ"}, "und-Grek-TR": {"value" : "bgx-Grek-TR"}, "ase": {"value" : "ase-Sgnw-US"}, "asg": {"value" : "asg-Latn-ZZ"}, "aso": {"value"
    : "aso-Latn-ZZ"}, "ast": {"value" : "ast-Latn-ES"}, "rue": {"value" : "rue-Cyrl-UA"}, "rug": {"value" : "rug-Latn-SB"}, "nmg": {"value" : "nmg-Latn-CM"}, "ata": {"value" : "ata-Latn-ZZ"}, "jen": {"value" : "jen-Latn-ZZ"}, "atg": {"value" : "atg-Latn-ZZ"}, "atj": {"value" : "atj-Latn-CA"}, "nmz": {"value" : "nmz-Latn-ZZ"}, "unr-Deva": {"value" : "unr-Deva-NP"}, "nnf": {"value" : "nnf-Latn-ZZ"}, "nnh": {"value" : "nnh-Latn-CM"}, "nnk": {"value" : "nnk-Latn-ZZ"}, "nnm": {"value" : "nnm-Latn-ZZ"}, "nnp": {"value"
    : "nnp-Wcho-IN"}, "az-IR": {"value" : "az-Arab-IR"}, "und-Adlm": {"value" : "ff-Adlm-GN"}, "az-IQ": {"value" : "az-Arab-IQ"}, "und-Nbat": {"value" : "arc-Nbat-JO"}, "sd-Khoj": {"value" : "sd-Khoj-IN"}, "nod": {"value" : "nod-Lana-TH"}, "auy": {"value" : "auy-Latn-ZZ"}, "noe": {"value" : "noe-Deva-IN"}, "rwk": {"value" : "rwk-Latn-TZ"}, "und-Cyrl-MD": {"value" : "uk-Cyrl-MD"}, "rwo": {"value" : "rwo-Latn-ZZ"}, "non": {"value" : "non-Runr-SE"}, "nop": {"value" : "nop-Latn-ZZ"}, "jgk": {"value" : "jgk-Latn-ZZ"}
    , "jgo": {"value" : "jgo-Latn-CM"}, "und-Vaii": {"value" : "vai-Vaii-LR"}, "nou": {"value" : "nou-Latn-ZZ"}, "avl": {"value" : "avl-Arab-ZZ"}, "avn": {"value" : "avn-Latn-ZZ"}, "wae": {"value" : "wae-Latn-CH"}, "avt": {"value" : "avt-Latn-ZZ"}, "avu": {"value" : "avu-Latn-ZZ"}, "waj": {"value" : "waj-Latn-ZZ"}, "wal": {"value" : "wal-Ethi-ET"}, "wan": {"value" : "wan-Latn-ZZ"}, "zh-HK": {"value" : "zh-Hant-HK"}, "war": {"value" : "war-Latn-PH"}, "awa": {"value" : "awa-Deva-IN"}, "und-Plrd": {"value" : "hmd-Plrd-CN"}
    , "awb": {"value" : "awb-Latn-ZZ"}, "awo": {"value" : "awo-Latn-ZZ"}, "und-Knda": {"value" : "kn-Knda-IN"}, "zh-ID": {"value" : "zh-Hant-ID"}, "jib": {"value" : "jib-Latn-ZZ"}, "awx": {"value" : "awx-Latn-ZZ"}, "wbp": {"value" : "wbp-Latn-AU"}, "und-Sidd": {"value" : "sa-Sidd-IN"}, "fab": {"value" : "fab-Latn-ZZ"}, "wbr": {"value" : "wbr-Deva-IN"}, "faa": {"value" : "faa-Latn-ZZ"}, "wbq": {"value" : "wbq-Telu-IN"}, "und-Kali": {"value" : "eky-Kali-MM"}, "fag": {"value" : "fag-Latn-ZZ"}, "nqo": {"value" :
    "nqo-Nkoo-GN"}, "fai": {"value" : "fai-Latn-ZZ"}, "ryu": {"value" : "ryu-Kana-JP"}, "fan": {"value" : "fan-Latn-GQ"}, "wci": {"value" : "wci-Latn-ZZ"}, "nrb": {"value" : "nrb-Latn-ZZ"}, "und-Phlp": {"value" : "pal-Phlp-CN"}, "ayb": {"value" : "ayb-Latn-ZZ"}, "und-Phli": {"value" : "pal-Phli-IR"}, "cu-Glag": {"value" : "cu-Glag-BG"}, "und-Cyrl-XK": {"value" : "sr-Cyrl-XK"}, "az-Arab": {"value" : "az-Arab-IR"}, "und-Thai": {"value" : "th-Thai-TH"}, "nsk": {"value" : "nsk-Cans-CA"}, "nsn": {"value" : "nsn-Latn-ZZ"}
    , "nso": {"value" : "nso-Latn-ZA"}, "und-Thaa": {"value" : "dv-Thaa-MV"}, "und-Nshu": {"value" : "zhx-Nshu-CN"}, "nss": {"value" : "nss-Latn-ZZ"}, "zh-VN": {"value" : "zh-Hant-VN"}, "und-Hmnp": {"value" : "mww-Hmnp-US"}, "und-Kana": {"value" : "ja-Kana-JP"}, "und-Hmng": {"value" : "hnj-Hmng-LA"}, "wer": {"value" : "wer-Latn-ZZ"}, "zh-TW": {"value" : "zh-Hant-TW"}, "ntm": {"value" : "ntm-Latn-ZZ"}, "ntr": {"value" : "ntr-Latn-ZZ"}, "zh-US": {"value" : "zh-Hant-US"}, "und-Xpeo": {"value" : "peo-Xpeo-IR"},
    "jmc": {"value" : "jmc-Latn-TZ"}, "nui": {"value" : "nui-Latn-ZZ"}, "jml": {"value" : "jml-Deva-NP"}, "nup": {"value" : "nup-Latn-ZZ"}, "und-Cyrl-SK": {"value" : "uk-Cyrl-SK"}, "nus": {"value" : "nus-Latn-SS"}, "nuv": {"value" : "nuv-Latn-ZZ"}, "nux": {"value" : "nux-Latn-ZZ"}, "zh-TH": {"value" : "zh-Hant-TH"}, "wgi": {"value" : "wgi-Latn-ZZ"}, "und-Phnx": {"value" : "phn-Phnx-LB"}, "und-Cyrl-TR": {"value" : "kbd-Cyrl-TR"}, "ffi": {"value" : "ffi-Latn-ZZ"}, "und-Elym": {"value" : "arc-Elym-IR"}, "ffm":
    {"value" : "ffm-Latn-ML"}, "und-Rjng": {"value" : "rej-Rjng-ID"}, "whg": {"value" : "whg-Latn-ZZ"}, "nwb": {"value" : "nwb-Latn-ZZ"}, "zh-SR": {"value" : "zh-Hant-SR"}, "wib": {"value" : "wib-Latn-ZZ"}, "und-Hebr": {"value" : "he-Hebr-IL"}, "saf": {"value" : "saf-Latn-GH"}, "sah": {"value" : "sah-Cyrl-RU"}, "saq": {"value" : "saq-Latn-KE"}, "wiu": {"value" : "wiu-Latn-ZZ"}, "sas": {"value" : "sas-Latn-ID"}, "wiv": {"value" : "wiv-Latn-ZZ"}, "nxq": {"value" : "nxq-Latn-CN"}, "sat": {"value" : "sat-Latn-IN"}
    , "nxr": {"value" : "nxr-Latn-ZZ"}, "sav": {"value" : "sav-Latn-SN"}, "saz": {"value" : "saz-Saur-IN"}, "wja": {"value" : "wja-Latn-ZZ"}, "sba": {"value" : "sba-Latn-ZZ"}, "sbe": {"value" : "sbe-Latn-ZZ"}, "wji": {"value" : "wji-Latn-ZZ"}, "mn-Mong": {"value" : "mn-Mong-CN"}, "und-419": {"value" : "es-Latn-419"}, "fia": {"value" : "fia-Arab-SD"}, "sbp": {"value" : "sbp-Latn-TZ"}, "und-NO": {"value" : "nb-Latn-NO"}, "nyn": {"value" : "nyn-Latn-UG"}, "nym": {"value" : "nym-Latn-TZ"}, "und-NL": {"value" : "nl-Latn-NL"}
    , "und-NP": {"value" : "ne-Deva-NP"}, "fil": {"value" : "fil-Latn-PH"}, "bal": {"value" : "bal-Arab-PK"}, "ban": {"value" : "ban-Latn-ID"}, "bap": {"value" : "bap-Deva-NP"}, "fit": {"value" : "fit-Latn-SE"}, "bar": {"value" : "bar-Latn-AT"}, "bas": {"value" : "bas-Latn-CM"}, "bav": {"value" : "bav-Latn-ZZ"}, "bax": {"value" : "bax-Bamu-CM"}, "jra": {"value" : "jra-Latn-ZZ"}, "sck": {"value" : "sck-Deva-IN"}, "nzi": {"value" : "nzi-Latn-GH"}, "scl": {"value" : "scl-Arab-ZZ"}, "sco": {"value" : "sco-Latn-GB"}
    , "scn": {"value" : "scn-Latn-IT"}, "aa": {"value" : "aa-Latn-ET"}, "bba": {"value" : "bba-Latn-ZZ"}, "und-MN": {"value" : "mn-Cyrl-MN"}, "ab": {"value" : "ab-Cyrl-GE"}, "und-MM": {"value" : "my-Mymr-MM"}, "und-Osma": {"value" : "so-Osma-SO"}, "bbc": {"value" : "bbc-Latn-ID"}, "scs": {"value" : "scs-Latn-CA"}, "und-ML": {"value" : "bm-Latn-ML"}, "bbb": {"value" : "bbb-Latn-ZZ"}, "und-MK": {"value" : "mk-Cyrl-MK"}, "ae": {"value" : "ae-Avst-IR"}, "und-MR": {"value" : "ar-Arab-MR"}, "af": {"value" : "af-Latn-ZA"}
    , "bbd": {"value" : "bbd-Latn-ZZ"}, "und-MQ": {"value" : "fr-Latn-MQ"}, "und-Wara": {"value" : "hoc-Wara-IN"}, "und-MO": {"value" : "zh-Hant-MO"}, "und-MV": {"value" : "dv-Thaa-MV"}, "und-MU": {"value" : "mfe-Latn-MU"}, "ak": {"value" : "ak-Latn-GH"}, "und-MT": {"value" : "mt-Latn-MT"}, "bbj": {"value" : "bbj-Latn-CM"}, "am": {"value" : "am-Ethi-ET"}, "und-MZ": {"value" : "pt-Latn-MZ"}, "und-MY": {"value" : "ms-Latn-MY"}, "und-MX": {"value" : "es-Latn-MX"}, "ar": {"value" : "ar-Arab-EG"}, "bbp": {"value"
    : "bbp-Latn-ZZ"}, "as": {"value" : "as-Beng-IN"}, "bbr": {"value" : "bbr-Latn-ZZ"}, "sdc": {"value" : "sdc-Latn-IT"}, "und-NC": {"value" : "fr-Latn-NC"}, "av": {"value" : "av-Cyrl-RU"}, "sdh": {"value" : "sdh-Arab-IR"}, "und-NA": {"value" : "af-Latn-NA"}, "ay": {"value" : "ay-Latn-BO"}, "az": {"value" : "az-Latn-AZ"}, "und-NE": {"value" : "ha-Latn-NE"}, "und-NI": {"value" : "es-Latn-NI"}, "ba": {"value" : "ba-Cyrl-RU"}, "wls": {"value" : "wls-Latn-WF"}, "und-Kore": {"value" : "ko-Kore-KR"}, "und-LK": {"value"
    : "si-Sinh-LK"}, "be": {"value" : "be-Cyrl-BY"}, "bcf": {"value" : "bcf-Latn-ZZ"}, "bg": {"value" : "bg-Cyrl-BG"}, "bch": {"value" : "bch-Latn-ZZ"}, "bi": {"value" : "bi-Latn-VU"}, "und-LU": {"value" : "fr-Latn-LU"}, "bci": {"value" : "bci-Latn-CI"}, "und-LT": {"value" : "lt-Latn-LT"}, "und-LS": {"value" : "st-Latn-LS"}, "bm": {"value" : "bm-Latn-ML"}, "bcn": {"value" : "bcn-Latn-ZZ"}, "bn": {"value" : "bn-Beng-BD"}, "und-LY": {"value" : "ar-Arab-LY"}, "bcm": {"value" : "bcm-Latn-ZZ"}, "bo": {"value" : "bo-Tibt-CN"}
    , "bco": {"value" : "bco-Latn-ZZ"}, "und-LV": {"value" : "lv-Latn-LV"}, "br": {"value" : "br-Latn-FR"}, "bcq": {"value" : "bcq-Ethi-ZZ"}, "bs": {"value" : "bs-Latn-BA"}, "bcu": {"value" : "bcu-Latn-ZZ"}, "sef": {"value" : "sef-Latn-CI"}, "und-MA": {"value" : "ar-Arab-MA"}, "sei": {"value" : "sei-Latn-MX"}, "seh": {"value" : "seh-Latn-MZ"}, "und-MF": {"value" : "fr-Latn-MF"}, "wmo": {"value" : "wmo-Latn-ZZ"}, "und-ME": {"value" : "sr-Latn-ME"}, "und-MD": {"value" : "ro-Latn-MD"}, "und-MC": {"value" : "fr-Latn-MC"}
    , "ca": {"value" : "ca-Latn-ES"}, "und-MG": {"value" : "mg-Latn-MG"}, "ses": {"value" : "ses-Latn-ML"}, "ce": {"value" : "ce-Cyrl-RU"}, "und-Cyrl-BA": {"value" : "sr-Cyrl-BA"}, "bdd": {"value" : "bdd-Latn-ZZ"}, "und-KP": {"value" : "ko-Kore-KP"}, "ch": {"value" : "ch-Latn-GU"}, "und-KM": {"value" : "ar-Arab-KM"}, "und-KR": {"value" : "ko-Kore-KR"}, "co": {"value" : "co-Latn-FR"}, "flr": {"value" : "flr-Latn-ZZ"}, "und-KW": {"value" : "ar-Arab-KW"}, "wnc": {"value" : "wnc-Latn-ZZ"}, "und-Dogr": {"value" :
    "doi-Dogr-IN"}, "cr": {"value" : "cr-Cans-CA"}, "cs": {"value" : "cs-Latn-CZ"}, "cu": {"value" : "cu-Cyrl-RU"}, "und-KZ": {"value" : "ru-Cyrl-KZ"}, "cv": {"value" : "cv-Cyrl-RU"}, "wni": {"value" : "wni-Arab-KM"}, "und-LA": {"value" : "lo-Laoo-LA"}, "cy": {"value" : "cy-Latn-GB"}, "und-LB": {"value" : "ar-Arab-LB"}, "und-LI": {"value" : "de-Latn-LI"}, "da": {"value" : "da-Latn-DK"}, "und-Cyrl-AL": {"value" : "mk-Cyrl-AL"}, "wnu": {"value" : "wnu-Latn-ZZ"}, "de": {"value" : "de-Latn-DE"}, "bef": {"value"
    : "bef-Latn-ZZ"}, "beh": {"value" : "beh-Latn-ZZ"}, "und-JO": {"value" : "ar-Arab-JO"}, "bej": {"value" : "bej-Arab-SD"}, "fmp": {"value" : "fmp-Latn-ZZ"}, "jut": {"value" : "jut-Latn-DK"}, "bem": {"value" : "bem-Latn-ZM"}, "und-JP": {"value" : "ja-Jpan-JP"}, "wob": {"value" : "wob-Latn-ZZ"}, "sga": {"value" : "sga-Ogam-IE"}, "bet": {"value" : "bet-Latn-ZZ"}, "dv": {"value" : "dv-Thaa-MV"}, "bex": {"value" : "bex-Latn-ZZ"}, "bew": {"value" : "bew-Latn-ID"}, "bez": {"value" : "bez-Latn-TZ"}, "dz": {"value"
    : "dz-Tibt-BT"}, "ms-ID": {"value" : "ms-Arab-ID"}, "wos": {"value" : "wos-Latn-ZZ"}, "und-KH": {"value" : "km-Khmr-KH"}, "und-KG": {"value" : "ky-Cyrl-KG"}, "sgs": {"value" : "sgs-Latn-LT"}, "und-KE": {"value" : "sw-Latn-KE"}, "ee": {"value" : "ee-Latn-GH"}, "bfd": {"value" : "bfd-Latn-CM"}, "sgw": {"value" : "sgw-Ethi-ZZ"}, "und-IN": {"value" : "hi-Deva-IN"}, "und-IL": {"value" : "he-Hebr-IL"}, "el": {"value" : "el-Grek-GR"}, "sgz": {"value" : "sgz-Latn-ZZ"}, "und-IR": {"value" : "fa-Arab-IR"}, "en": {"value"
    : "en-Latn-US"}, "und-IQ": {"value" : "ar-Arab-IQ"}, "und-Perm": {"value" : "kv-Perm-RU"}, "eo": {"value" : "eo-Latn-001"}, "bfq": {"value" : "bfq-Taml-IN"}, "es": {"value" : "es-Latn-ES"}, "und-IT": {"value" : "it-Latn-IT"}, "et": {"value" : "et-Latn-EE"}, "und-IS": {"value" : "is-Latn-IS"}, "eu": {"value" : "eu-Latn-ES"}, "bft": {"value" : "bft-Arab-PK"}, "bfy": {"value" : "bfy-Deva-IN"}, "shi": {"value" : "shi-Tfng-MA"}, "shk": {"value" : "shk-Latn-ZZ"}, "shn": {"value" : "shn-Mymr-MM"}, "fod": {"value"
    : "fod-Latn-ZZ"}, "fa": {"value" : "fa-Arab-IR"}, "bgc": {"value" : "bgc-Deva-IN"}, "ff": {"value" : "ff-Latn-SN"}, "shu": {"value" : "shu-Arab-ZZ"}, "fi": {"value" : "fi-Latn-FI"}, "fj": {"value" : "fj-Latn-FJ"}, "fon": {"value" : "fon-Latn-BJ"}, "und-HM": {"value" : "und-Latn-HM"}, "und-HK": {"value" : "zh-Hant-HK"}, "bgn": {"value" : "bgn-Arab-PK"}, "for": {"value" : "for-Latn-ZZ"}, "fo": {"value" : "fo-Latn-FO"}, "und-HN": {"value" : "es-Latn-HN"}, "fr": {"value" : "fr-Latn-FR"}, "und-HU": {"value" :
    "hu-Latn-HU"}, "und-HT": {"value" : "ht-Latn-HT"}, "ku-Arab": {"value" : "ku-Arab-IQ"}, "sid": {"value" : "sid-Latn-ET"}, "und-HR": {"value" : "hr-Latn-HR"}, "sig": {"value" : "sig-Latn-ZZ"}, "bgx": {"value" : "bgx-Grek-TR"}, "fy": {"value" : "fy-Latn-NL"}, "sim": {"value" : "sim-Latn-ZZ"}, "sil": {"value" : "sil-Latn-ZZ"}, "fpe": {"value" : "fpe-Latn-ZZ"}, "ga": {"value" : "ga-Latn-IE"}, "bhb": {"value" : "bhb-Deva-IN"}, "gd": {"value" : "gd-Latn-GB"}, "und-ID": {"value" : "id-Latn-ID"}, "und-IC": {"value"
    : "es-Latn-IC"}, "bhg": {"value" : "bhg-Latn-ZZ"}, "und-GH": {"value" : "ak-Latn-GH"}, "bhi": {"value" : "bhi-Deva-IN"}, "und-GF": {"value" : "fr-Latn-GF"}, "und-GE": {"value" : "ka-Geor-GE"}, "bhk": {"value" : "bhk-Latn-PH"}, "und-GL": {"value" : "kl-Latn-GL"}, "gl": {"value" : "gl-Latn-ES"}, "bhl": {"value" : "bhl-Latn-ZZ"}, "gn": {"value" : "gn-Latn-PY"}, "bho": {"value" : "bho-Deva-IN"}, "und-GP": {"value" : "fr-Latn-GP"}, "und-GN": {"value" : "fr-Latn-GN"}, "und-GT": {"value" : "es-Latn-GT"}, "und-GS":
    {"value" : "und-Latn-GS"}, "gu": {"value" : "gu-Gujr-IN"}, "und-GR": {"value" : "el-Grek-GR"}, "gv": {"value" : "gv-Latn-IM"}, "und-GQ": {"value" : "es-Latn-GQ"}, "und-Palm": {"value" : "arc-Palm-SY"}, "und-GW": {"value" : "pt-Latn-GW"}, "bhy": {"value" : "bhy-Latn-ZZ"}, "ha": {"value" : "ha-Latn-NG"}, "wrs": {"value" : "wrs-Latn-ZZ"}, "bib": {"value" : "bib-Latn-ZZ"}, "sjr": {"value" : "sjr-Latn-ZZ"}, "he": {"value" : "he-Hebr-IL"}, "big": {"value" : "big-Latn-ZZ"}, "hi": {"value" : "hi-Deva-IN"}, "und-Cyrl-GE":
    {"value" : "ab-Cyrl-GE"}, "bik": {"value" : "bik-Latn-PH"}, "bin": {"value" : "bin-Latn-NG"}, "und-Cham": {"value" : "cjm-Cham-VN"}, "und-FI": {"value" : "fi-Latn-FI"}, "bim": {"value" : "bim-Latn-ZZ"}, "ho": {"value" : "ho-Latn-PG"}, "tg-PK": {"value" : "tg-Arab-PK"}, "und-FO": {"value" : "fo-Latn-FO"}, "bio": {"value" : "bio-Latn-ZZ"}, "fqs": {"value" : "fqs-Latn-ZZ"}, "hr": {"value" : "hr-Latn-HR"}, "skc": {"value" : "skc-Latn-ZZ"}, "wsg": {"value" : "wsg-Gong-IN"}, "biq": {"value" : "biq-Latn-ZZ"}, "ht":
    {"value" : "ht-Latn-HT"}, "hu": {"value" : "hu-Latn-HU"}, "und-FR": {"value" : "fr-Latn-FR"}, "wsk": {"value" : "wsk-Latn-ZZ"}, "hy": {"value" : "hy-Armn-AM"}, "hz": {"value" : "hz-Latn-NA"}, "frc": {"value" : "frc-Latn-US"}, "ia": {"value" : "ia-Latn-001"}, "sks": {"value" : "sks-Latn-ZZ"}, "id": {"value" : "id-Latn-ID"}, "skr": {"value" : "skr-Arab-PK"}, "ig": {"value" : "ig-Latn-NG"}, "und-GA": {"value" : "fr-Latn-GA"}, "bji": {"value" : "bji-Ethi-ZZ"}, "ii": {"value" : "ii-Yiii-CN"}, "bjh": {"value"
    : "bjh-Latn-ZZ"}, "und-EE": {"value" : "et-Latn-EE"}, "ik": {"value" : "ik-Latn-US"}, "bjj": {"value" : "bjj-Deva-IN"}, "und-EC": {"value" : "es-Latn-EC"}, "und-Cprt": {"value" : "grc-Cprt-CY"}, "frp": {"value" : "frp-Latn-FR"}, "in": {"value" : "in-Latn-ID"}, "bjo": {"value" : "bjo-Latn-ZZ"}, "frs": {"value" : "frs-Latn-DE"}, "io": {"value" : "io-Latn-001"}, "und-EH": {"value" : "ar-Arab-EH"}, "bjn": {"value" : "bjn-Latn-ID"}, "frr": {"value" : "frr-Latn-DE"}, "und-EG": {"value" : "ar-Arab-EG"}, "is": {"value"
    : "is-Latn-IS"}, "sld": {"value" : "sld-Latn-ZZ"}, "bjr": {"value" : "bjr-Latn-ZZ"}, "it": {"value" : "it-Latn-IT"}, "iu": {"value" : "iu-Cans-CA"}, "und-ER": {"value" : "ti-Ethi-ER"}, "bjt": {"value" : "bjt-Latn-SN"}, "iw": {"value" : "iw-Hebr-IL"}, "und-Tirh": {"value" : "mai-Tirh-IN"}, "sli": {"value" : "sli-Latn-PL"}, "und-EU": {"value" : "en-Latn-GB"}, "wtm": {"value" : "wtm-Deva-IN"}, "sll": {"value" : "sll-Latn-ZZ"}, "und-ET": {"value" : "am-Ethi-ET"}, "bjz": {"value" : "bjz-Latn-ZZ"}, "und-ES": {"value"
    : "es-Latn-ES"}, "und-EZ": {"value" : "de-Latn-EZ"}, "ja": {"value" : "ja-Jpan-JP"}, "zh-GF": {"value" : "zh-Hant-GF"}, "bkc": {"value" : "bkc-Latn-ZZ"}, "zh-GB": {"value" : "zh-Hant-GB"}, "und-Cyrl-GR": {"value" : "mk-Cyrl-GR"}, "ji": {"value" : "ji-Hebr-UA"}, "und-DE": {"value" : "de-Latn-DE"}, "sly": {"value" : "sly-Latn-ID"}, "bkm": {"value" : "bkm-Latn-CM"}, "sma": {"value" : "sma-Latn-SE"}, "bkq": {"value" : "bkq-Latn-ZZ"}, "und-DK": {"value" : "da-Latn-DK"}, "und-DJ": {"value" : "aa-Latn-DJ"}, "bkv":
    {"value" : "bkv-Latn-ZZ"}, "jv": {"value" : "jv-Latn-ID"}, "bku": {"value" : "bku-Latn-PH"}, "jw": {"value" : "jw-Latn-ID"}, "und-DO": {"value" : "es-Latn-DO"}, "smj": {"value" : "smj-Latn-SE"}, "smn": {"value" : "smn-Latn-FI"}, "ka": {"value" : "ka-Geor-GE"}, "smq": {"value" : "smq-Latn-ZZ"}, "wuu": {"value" : "wuu-Hans-CN"}, "smp": {"value" : "smp-Samr-IL"}, "sms": {"value" : "sms-Latn-FI"}, "wuv": {"value" : "wuv-Latn-ZZ"}, "und-DZ": {"value" : "ar-Arab-DZ"}, "kg": {"value" : "kg-Latn-CD"}, "und-EA":
    {"value" : "es-Latn-EA"}, "ki": {"value" : "ki-Latn-KE"}, "kj": {"value" : "kj-Latn-NA"}, "kk": {"value" : "kk-Cyrl-KZ"}, "man-Nkoo": {"value" : "man-Nkoo-GN"}, "und-CD": {"value" : "sw-Latn-CD"}, "kl": {"value" : "kl-Latn-GL"}, "und-Telu": {"value" : "te-Telu-IN"}, "km": {"value" : "km-Khmr-KH"}, "kn": {"value" : "kn-Knda-IN"}, "ko": {"value" : "ko-Kore-KR"}, "und-CH": {"value" : "de-Latn-CH"}, "und-CG": {"value" : "fr-Latn-CG"}, "und-CF": {"value" : "fr-Latn-CF"}, "kr": {"value" : "kr-Latn-ZZ"}, "ks":
    {"value" : "ks-Arab-IN"}, "und-CL": {"value" : "es-Latn-CL"}, "snc": {"value" : "snc-Latn-ZZ"}, "ku": {"value" : "ku-Latn-TR"}, "blt": {"value" : "blt-Tavt-VN"}, "kv": {"value" : "kv-Cyrl-RU"}, "und-CI": {"value" : "fr-Latn-CI"}, "kw": {"value" : "kw-Latn-GB"}, "und-CP": {"value" : "und-Latn-CP"}, "und-CO": {"value" : "es-Latn-CO"}, "ky": {"value" : "ky-Cyrl-KG"}, "und-CN": {"value" : "zh-Hans-CN"}, "und-CM": {"value" : "fr-Latn-CM"}, "snk": {"value" : "snk-Latn-ML"}, "fub": {"value" : "fub-Arab-CM"}, "und-CR":
    {"value" : "es-Latn-CR"}, "fud": {"value" : "fud-Latn-WF"}, "snp": {"value" : "snp-Latn-ZZ"}, "la": {"value" : "la-Latn-VA"}, "und-CW": {"value" : "pap-Latn-CW"}, "fuf": {"value" : "fuf-Latn-GN"}, "lb": {"value" : "lb-Latn-LU"}, "und-CV": {"value" : "pt-Latn-CV"}, "fue": {"value" : "fue-Latn-ZZ"}, "und-CU": {"value" : "es-Latn-CU"}, "fuh": {"value" : "fuh-Latn-ZZ"}, "und-CZ": {"value" : "cs-Latn-CZ"}, "lg": {"value" : "lg-Latn-UG"}, "und-CY": {"value" : "el-Grek-CY"}, "bmh": {"value" : "bmh-Latn-ZZ"}, "snx":
    {"value" : "snx-Latn-ZZ"}, "li": {"value" : "li-Latn-NL"}, "sny": {"value" : "sny-Latn-ZZ"}, "wwa": {"value" : "wwa-Latn-ZZ"}, "bmk": {"value" : "bmk-Latn-ZZ"}, "und-Cher": {"value" : "chr-Cher-US"}, "fur": {"value" : "fur-Latn-IT"}, "ln": {"value" : "ln-Latn-CD"}, "und-BA": {"value" : "bs-Latn-BA"}, "fuq": {"value" : "fuq-Latn-NE"}, "lo": {"value" : "lo-Laoo-LA"}, "und-BG": {"value" : "bg-Cyrl-BG"}, "und-BF": {"value" : "fr-Latn-BF"}, "fuv": {"value" : "fuv-Latn-NG"}, "und-BE": {"value" : "nl-Latn-BE"}
    , "bmq": {"value" : "bmq-Latn-ML"}, "und-BD": {"value" : "bn-Beng-BD"}, "lt": {"value" : "lt-Latn-LT"}, "lu": {"value" : "lu-Latn-CD"}, "und-BJ": {"value" : "fr-Latn-BJ"}, "lv": {"value" : "lv-Latn-LV"}, "ogc": {"value" : "ogc-Latn-ZZ"}, "sog": {"value" : "sog-Sogd-UZ"}, "und-BI": {"value" : "rn-Latn-BI"}, "bmu": {"value" : "bmu-Latn-ZZ"}, "fuy": {"value" : "fuy-Latn-ZZ"}, "und-BH": {"value" : "ar-Arab-BH"}, "und-BO": {"value" : "es-Latn-BO"}, "und-BN": {"value" : "ms-Latn-BN"}, "sok": {"value" : "sok-Latn-ZZ"}
    , "und-BL": {"value" : "fr-Latn-BL"}, "und-BR": {"value" : "pt-Latn-BR"}, "und-BQ": {"value" : "pap-Latn-BQ"}, "soq": {"value" : "soq-Latn-ZZ"}, "und-BV": {"value" : "und-Latn-BV"}, "und-BT": {"value" : "dz-Tibt-BT"}, "sou": {"value" : "sou-Thai-TH"}, "bng": {"value" : "bng-Latn-ZZ"}, "mg": {"value" : "mg-Latn-MG"}, "und-BY": {"value" : "be-Cyrl-BY"}, "und-Glag": {"value" : "cu-Glag-BG"}, "mh": {"value" : "mh-Latn-MH"}, "mi": {"value" : "mi-Latn-NZ"}, "soy": {"value" : "soy-Latn-ZZ"}, "mk": {"value" : "mk-Cyrl-MK"}
    , "ml": {"value" : "ml-Mlym-IN"}, "bnm": {"value" : "bnm-Latn-ZZ"}, "mn": {"value" : "mn-Cyrl-MN"}, "und-Prti": {"value" : "xpr-Prti-IR"}, "fvr": {"value" : "fvr-Latn-SD"}, "und-AF": {"value" : "fa-Arab-AF"}, "bnp": {"value" : "bnp-Latn-ZZ"}, "mr": {"value" : "mr-Deva-IN"}, "und-AE": {"value" : "ar-Arab-AE"}, "ms": {"value" : "ms-Latn-MY"}, "spd": {"value" : "spd-Latn-ZZ"}, "und-AD": {"value" : "ca-Latn-AD"}, "mt": {"value" : "mt-Latn-MT"}, "my": {"value" : "my-Mymr-MM"}, "zh-BN": {"value" : "zh-Hant-BN"}
    , "und-AM": {"value" : "hy-Armn-AM"}, "spl": {"value" : "spl-Latn-ZZ"}, "und-AL": {"value" : "sq-Latn-AL"}, "und-AR": {"value" : "es-Latn-AR"}, "und-AQ": {"value" : "und-Latn-AQ"}, "na": {"value" : "na-Latn-NR"}, "und-AO": {"value" : "pt-Latn-AO"}, "nb": {"value" : "nb-Latn-NO"}, "nd": {"value" : "nd-Latn-ZW"}, "und-AT": {"value" : "de-Latn-AT"}, "ne": {"value" : "ne-Deva-NP"}, "sps": {"value" : "sps-Latn-ZZ"}, "und-AS": {"value" : "sm-Latn-AS"}, "und-AZ": {"value" : "az-Latn-AZ"}, "ng": {"value" : "ng-Latn-NA"}
    , "und-AX": {"value" : "sv-Latn-AX"}, "und-AW": {"value" : "nl-Latn-AW"}, "boj": {"value" : "boj-Latn-ZZ"}, "nl": {"value" : "nl-Latn-NL"}, "bon": {"value" : "bon-Latn-ZZ"}, "nn": {"value" : "nn-Latn-NO"}, "bom": {"value" : "bom-Latn-ZZ"}, "no": {"value" : "no-Latn-NO"}, "nr": {"value" : "nr-Latn-ZA"}, "arc-Nbat": {"value" : "arc-Nbat-JO"}, "und-Medf": {"value" : "mis-Medf-NG"}, "nv": {"value" : "nv-Latn-US"}, "kaa": {"value" : "kaa-Cyrl-UZ"}, "ny": {"value" : "ny-Latn-MW"}, "kac": {"value" : "kac-Latn-MM"}
    , "kab": {"value" : "kab-Latn-DZ"}, "kad": {"value" : "kad-Latn-ZZ"}, "kai": {"value" : "kai-Latn-ZZ"}, "oc": {"value" : "oc-Latn-FR"}, "zh-AU": {"value" : "zh-Hant-AU"}, "kaj": {"value" : "kaj-Latn-NG"}, "kam": {"value" : "kam-Latn-KE"}, "und-Tagb": {"value" : "tbw-Tagb-PH"}, "kao": {"value" : "kao-Latn-ML"}, "und-Ogam": {"value" : "sga-Ogam-IE"}, "om": {"value" : "om-Latn-ET"}, "srb": {"value" : "srb-Sora-IN"}, "or": {"value" : "or-Orya-IN"}, "tg-Arab": {"value" : "tg-Arab-PK"}, "os": {"value" : "os-Cyrl-GE"}
    , "und-Sogd": {"value" : "sog-Sogd-UZ"}, "bpy": {"value" : "bpy-Beng-IN"}, "kbd": {"value" : "kbd-Cyrl-RU"}, "srn": {"value" : "srn-Latn-SR"}, "pa": {"value" : "pa-Guru-IN"}, "srr": {"value" : "srr-Latn-SN"}, "bqc": {"value" : "bqc-Latn-ZZ"}, "und-Kthi": {"value" : "bho-Kthi-IN"}, "kbm": {"value" : "kbm-Latn-ZZ"}, "kbp": {"value" : "kbp-Latn-ZZ"}, "srx": {"value" : "srx-Deva-IN"}, "bqi": {"value" : "bqi-Arab-IR"}, "kbq": {"value" : "kbq-Latn-ZZ"}, "pl": {"value" : "pl-Latn-PL"}, "bqp": {"value" : "bqp-Latn-ZZ"}
    , "kbx": {"value" : "kbx-Latn-ZZ"}, "kby": {"value" : "kby-Arab-NE"}, "ps": {"value" : "ps-Arab-AF"}, "pt": {"value" : "pt-Latn-BR"}, "ssd": {"value" : "ssd-Latn-ZZ"}, "und-Nkoo": {"value" : "man-Nkoo-GN"}, "bqv": {"value" : "bqv-Latn-CI"}, "ssg": {"value" : "ssg-Latn-ZZ"}, "und-Mymr": {"value" : "my-Mymr-MM"}, "kcg": {"value" : "kcg-Latn-NG"}, "bra": {"value" : "bra-Deva-IN"}, "kck": {"value" : "kck-Latn-ZW"}, "kcl": {"value" : "kcl-Latn-ZZ"}, "okr": {"value" : "okr-Latn-ZZ"}, "ssy": {"value" : "ssy-Latn-ER"}
    , "brh": {"value" : "brh-Arab-PK"}, "okv": {"value" : "okv-Latn-ZZ"}, "kct": {"value" : "kct-Latn-ZZ"}, "und-Hani": {"value" : "zh-Hani-CN"}, "und-Bugi": {"value" : "bug-Bugi-ID"}, "und-Hang": {"value" : "ko-Hang-KR"}, "qu": {"value" : "qu-Latn-PE"}, "brx": {"value" : "brx-Deva-IN"}, "und-Samr": {"value" : "smp-Samr-IL"}, "brz": {"value" : "brz-Latn-ZZ"}, "stk": {"value" : "stk-Latn-ZZ"}, "und-Hano": {"value" : "hnn-Hano-PH"}, "kde": {"value" : "kde-Latn-TZ"}, "kdh": {"value" : "kdh-Arab-TG"}, "stq": {"value"
    : "stq-Latn-DE"}, "kdl": {"value" : "kdl-Latn-ZZ"}, "bsj": {"value" : "bsj-Latn-ZZ"}, "und-Hanb": {"value" : "zh-Hanb-TW"}, "kdt": {"value" : "kdt-Thai-TH"}, "rm": {"value" : "rm-Latn-CH"}, "rn": {"value" : "rn-Latn-BI"}, "ro": {"value" : "ro-Latn-RO"}, "sua": {"value" : "sua-Latn-ZZ"}, "und-Deva-BT": {"value" : "ne-Deva-BT"}, "bsq": {"value" : "bsq-Bass-LR"}, "bst": {"value" : "bst-Ethi-ZZ"}, "sue": {"value" : "sue-Latn-ZZ"}, "bss": {"value" : "bss-Latn-CM"}, "ru": {"value" : "ru-Cyrl-RU"}, "und-Buhd":
    {"value" : "bku-Buhd-PH"}, "rw": {"value" : "rw-Latn-RW"}, "kea": {"value" : "kea-Latn-CV"}, "suk": {"value" : "suk-Latn-TZ"}, "grc-Linb": {"value" : "grc-Linb-GR"}, "sa": {"value" : "sa-Deva-IN"}, "sc": {"value" : "sc-Latn-IT"}, "sus": {"value" : "sus-Latn-GN"}, "sd": {"value" : "sd-Arab-PK"}, "sur": {"value" : "sur-Latn-ZZ"}, "se": {"value" : "se-Latn-NO"}, "sg": {"value" : "sg-Latn-CF"}, "ken": {"value" : "ken-Latn-CM"}, "si": {"value" : "si-Sinh-LK"}, "und-Hant": {"value" : "zh-Hant-TW"}, "und-Hans":
    {"value" : "zh-Hans-CN"}, "sk": {"value" : "sk-Latn-SK"}, "sl": {"value" : "sl-Latn-SI"}, "sm": {"value" : "sm-Latn-WS"}, "sn": {"value" : "sn-Latn-ZW"}, "bto": {"value" : "bto-Latn-PH"}, "so": {"value" : "so-Latn-SO"}, "sq": {"value" : "sq-Latn-AL"}, "sr": {"value" : "sr-Cyrl-RS"}, "ss": {"value" : "ss-Latn-ZA"}, "kez": {"value" : "kez-Latn-ZZ"}, "st": {"value" : "st-Latn-ZA"}, "su": {"value" : "su-Latn-ID"}, "btt": {"value" : "btt-Latn-ZZ"}, "sv": {"value" : "sv-Latn-SE"}, "sw": {"value" : "sw-Latn-TZ"}
    , "btv": {"value" : "btv-Deva-PK"}, "ong": {"value" : "ong-Latn-ZZ"}, "ta": {"value" : "ta-Taml-IN"}, "onn": {"value" : "onn-Latn-ZZ"}, "bua": {"value" : "bua-Cyrl-RU"}, "bud": {"value" : "bud-Latn-ZZ"}, "buc": {"value" : "buc-Latn-YT"}, "te": {"value" : "te-Telu-IN"}, "tg": {"value" : "tg-Cyrl-TJ"}, "th": {"value" : "th-Thai-TH"}, "und-Gong": {"value" : "wsg-Gong-IN"}, "bug": {"value" : "bug-Latn-ID"}, "kfo": {"value" : "kfo-Latn-CI"}, "ons": {"value" : "ons-Latn-ZZ"}, "ti": {"value" : "ti-Ethi-ET"}, "kfr":
    {"value" : "kfr-Deva-IN"}, "tk": {"value" : "tk-Latn-TM"}, "tl": {"value" : "tl-Latn-PH"}, "und-Lisu": {"value" : "lis-Lisu-CN"}, "buk": {"value" : "buk-Latn-ZZ"}, "tn": {"value" : "tn-Latn-ZA"}, "bum": {"value" : "bum-Latn-CM"}, "to": {"value" : "to-Latn-TO"}, "buo": {"value" : "buo-Latn-ZZ"}, "swc": {"value" : "swc-Latn-CD"}, "tr": {"value" : "tr-Latn-TR"}, "und-Gonm": {"value" : "esg-Gonm-IN"}, "kfy": {"value" : "kfy-Deva-IN"}, "swb": {"value" : "swb-Arab-YT"}, "ts": {"value" : "ts-Latn-ZA"}, "tt": {"value"
    : "tt-Cyrl-RU"}, "bus": {"value" : "bus-Latn-ZZ"}, "swg": {"value" : "swg-Latn-DE"}, "buu": {"value" : "buu-Latn-ZZ"}, "ty": {"value" : "ty-Latn-PF"}, "kge": {"value" : "kge-Latn-ID"}, "kgf": {"value" : "kgf-Latn-ZZ"}, "swp": {"value" : "swp-Latn-ZZ"}, "bvb": {"value" : "bvb-Latn-GQ"}, "ug": {"value" : "ug-Arab-CN"}, "swv": {"value" : "swv-Deva-IN"}, "kgp": {"value" : "kgp-Latn-BR"}, "uk": {"value" : "uk-Cyrl-UA"}, "ur": {"value" : "ur-Arab-PK"}, "kk-IR": {"value" : "kk-Arab-IR"}, "khb": {"value" : "khb-Talu-CN"}
    , "kha": {"value" : "kha-Latn-IN"}, "uz": {"value" : "uz-Latn-UZ"}, "sxn": {"value" : "sxn-Latn-ID"}, "xav": {"value" : "xav-Latn-BR"}, "opm": {"value" : "opm-Latn-ZZ"}, "bwd": {"value" : "bwd-Latn-ZZ"}, "und-Mlym": {"value" : "ml-Mlym-IN"}, "ve": {"value" : "ve-Latn-ZA"}, "khn": {"value" : "khn-Deva-IN"}, "sxw": {"value" : "sxw-Latn-ZZ"}, "vi": {"value" : "vi-Latn-VN"}, "khq": {"value" : "khq-Latn-ML"}, "kht": {"value" : "kht-Mymr-IN"}, "khs": {"value" : "khs-Latn-ZZ"}, "vo": {"value" : "vo-Latn-001"},
    "khw": {"value" : "khw-Arab-PK"}, "bwr": {"value" : "bwr-Latn-ZZ"}, "khz": {"value" : "khz-Latn-ZZ"}, "und-ZW": {"value" : "sn-Latn-ZW"}, "xbi": {"value" : "xbi-Latn-ZZ"}, "gaa": {"value" : "gaa-Latn-GH"}, "syl": {"value" : "syl-Beng-BD"}, "wa": {"value" : "wa-Latn-BE"}, "gag": {"value" : "gag-Latn-MD"}, "gaf": {"value" : "gaf-Latn-ZZ"}, "kij": {"value" : "kij-Latn-ZZ"}, "syr": {"value" : "syr-Syrc-IQ"}, "und-YE": {"value" : "ar-Arab-YE"}, "gah": {"value" : "gah-Latn-ZZ"}, "gaj": {"value" : "gaj-Latn-ZZ"}
    , "gam": {"value" : "gam-Latn-ZZ"}, "bxh": {"value" : "bxh-Latn-ZZ"}, "gan": {"value" : "gan-Hans-CN"}, "kiu": {"value" : "kiu-Latn-TR"}, "kiw": {"value" : "kiw-Latn-ZZ"}, "wo": {"value" : "wo-Latn-SN"}, "gaw": {"value" : "gaw-Latn-ZZ"}, "und-Sarb": {"value" : "xsa-Sarb-YE"}, "gay": {"value" : "gay-Latn-ID"}, "und-YT": {"value" : "fr-Latn-YT"}, "kjd": {"value" : "kjd-Latn-ZZ"}, "szl": {"value" : "szl-Latn-PL"}, "xcr": {"value" : "xcr-Cari-TR"}, "gba": {"value" : "gba-Latn-ZZ"}, "und-Mult": {"value" : "skr-Mult-PK"}
    , "kjg": {"value" : "kjg-Laoo-LA"}, "gbf": {"value" : "gbf-Latn-ZZ"}, "oro": {"value" : "oro-Latn-ZZ"}, "und-Hatr": {"value" : "mis-Hatr-IQ"}, "bye": {"value" : "bye-Latn-ZZ"}, "xh": {"value" : "xh-Latn-ZA"}, "gbm": {"value" : "gbm-Deva-IN"}, "oru": {"value" : "oru-Arab-ZZ"}, "kjs": {"value" : "kjs-Latn-ZZ"}, "byn": {"value" : "byn-Ethi-ER"}, "und-XK": {"value" : "sq-Latn-XK"}, "yue-CN": {"value" : "yue-Hans-CN"}, "und-Lepc": {"value" : "lep-Lepc-IN"}, "byr": {"value" : "byr-Latn-ZZ"}, "kjy": {"value" :
    "kjy-Latn-ZZ"}, "osa": {"value" : "osa-Osge-US"}, "bys": {"value" : "bys-Latn-ZZ"}, "byv": {"value" : "byv-Latn-CM"}, "gbz": {"value" : "gbz-Arab-IR"}, "gby": {"value" : "gby-Latn-ZZ"}, "byx": {"value" : "byx-Latn-ZZ"}, "kkc": {"value" : "kkc-Latn-ZZ"}, "und-VU": {"value" : "bi-Latn-VU"}, "bza": {"value" : "bza-Latn-ZZ"}, "und-Goth": {"value" : "got-Goth-UA"}, "kkj": {"value" : "kkj-Latn-CM"}, "bze": {"value" : "bze-Latn-ML"}, "und-Avst": {"value" : "ae-Avst-IR"}, "bzf": {"value" : "bzf-Latn-ZZ"}, "yi":
    {"value" : "yi-Hebr-001"}, "bzh": {"value" : "bzh-Latn-ZZ"}, "und-WF": {"value" : "fr-Latn-WF"}, "yo": {"value" : "yo-Latn-NG"}, "gcr": {"value" : "gcr-Latn-GF"}, "ota": {"value" : "ota-Arab-ZZ"}, "und-WS": {"value" : "sm-Latn-WS"}, "bzw": {"value" : "bzw-Latn-ZZ"}, "und-UZ": {"value" : "uz-Latn-UZ"}, "und-UY": {"value" : "es-Latn-UY"}, "otk": {"value" : "otk-Orkh-MN"}, "xes": {"value" : "xes-Latn-ZZ"}, "za": {"value" : "za-Latn-CN"}, "gde": {"value" : "gde-Latn-ZZ"}, "kln": {"value" : "kln-Latn-KE"}, "und-VA":
    {"value" : "it-Latn-VA"}, "zh": {"value" : "zh-Hans-CN"}, "gdn": {"value" : "gdn-Latn-ZZ"}, "klq": {"value" : "klq-Latn-ZZ"}, "und-Saur": {"value" : "saz-Saur-IN"}, "klt": {"value" : "klt-Latn-ZZ"}, "und-VE": {"value" : "es-Latn-VE"}, "gdr": {"value" : "gdr-Latn-ZZ"}, "klx": {"value" : "klx-Latn-ZZ"}, "und-VN": {"value" : "vi-Latn-VN"}, "kk-MN": {"value" : "kk-Arab-MN"}, "zu": {"value" : "zu-Latn-ZA"}, "und-Armn": {"value" : "hy-Armn-AM"}, "kmb": {"value" : "kmb-Latn-AO"}, "und-TR": {"value" : "tr-Latn-TR"}
    , "geb": {"value" : "geb-Latn-ZZ"}, "und-TW": {"value" : "zh-Hant-TW"}, "kmh": {"value" : "kmh-Latn-ZZ"}, "und-TV": {"value" : "tvl-Latn-TV"}, "und-TZ": {"value" : "sw-Latn-TZ"}, "kmo": {"value" : "kmo-Latn-ZZ"}, "gej": {"value" : "gej-Latn-ZZ"}, "und-UA": {"value" : "uk-Cyrl-UA"}, "gel": {"value" : "gel-Latn-ZZ"}, "kms": {"value" : "kms-Latn-ZZ"}, "kmu": {"value" : "kmu-Latn-ZZ"}, "kmw": {"value" : "kmw-Latn-ZZ"}, "und-Tibt": {"value" : "bo-Tibt-CN"}, "und-UG": {"value" : "sw-Latn-UG"}, "und-Armi": {"value"
    : "arc-Armi-IR"}, "gez": {"value" : "gez-Ethi-ET"}, "und-ST": {"value" : "pt-Latn-ST"}, "knf": {"value" : "knf-Latn-GW"}, "und-SR": {"value" : "nl-Latn-SR"}, "und-SV": {"value" : "es-Latn-SV"}, "und-SY": {"value" : "ar-Arab-SY"}, "knp": {"value" : "knp-Latn-ZZ"}, "gfk": {"value" : "gfk-Latn-ZZ"}, "und-TD": {"value" : "fr-Latn-TD"}, "und-TH": {"value" : "th-Thai-TH"}, "und-TG": {"value" : "fr-Latn-TG"}, "und-TF": {"value" : "fr-Latn-TF"}, "und-TM": {"value" : "tk-Latn-TM"}, "und-TL": {"value" : "pt-Latn-TL"}
    , "und-TK": {"value" : "tkl-Latn-TK"}, "und-TJ": {"value" : "tg-Cyrl-TJ"}, "und-TO": {"value" : "to-Latn-TO"}, "und-TN": {"value" : "ar-Arab-TN"}, "und-RS": {"value" : "sr-Cyrl-RS"}, "koi": {"value" : "koi-Cyrl-RU"}, "und-RW": {"value" : "rw-Latn-RW"}, "kok": {"value" : "kok-Deva-IN"}, "und-RU": {"value" : "ru-Cyrl-RU"}, "kol": {"value" : "kol-Latn-ZZ"}, "kos": {"value" : "kos-Latn-FM"}, "ggn": {"value" : "ggn-Deva-NP"}, "und-SD": {"value" : "ar-Arab-SD"}, "und-SC": {"value" : "fr-Latn-SC"}, "und-SA": {"value"
    : "ar-Arab-SA"}, "koz": {"value" : "koz-Latn-ZZ"}, "und-SE": {"value" : "sv-Latn-SE"}, "und-SK": {"value" : "sk-Latn-SK"}, "und-SJ": {"value" : "nb-Latn-SJ"}, "und-SI": {"value" : "sl-Latn-SI"}, "taj": {"value" : "taj-Deva-NP"}, "und-SO": {"value" : "so-Latn-SO"}, "tal": {"value" : "tal-Latn-ZZ"}, "und-SN": {"value" : "fr-Latn-SN"}, "und-Osge": {"value" : "osa-Osge-US"}, "und-SM": {"value" : "it-Latn-SM"}, "kpf": {"value" : "kpf-Latn-ZZ"}, "tan": {"value" : "tan-Latn-ZZ"}, "kpe": {"value" : "kpe-Latn-LR"}
    , "und-QO": {"value" : "en-Latn-DG"}, "taq": {"value" : "taq-Latn-ZZ"}, "kpo": {"value" : "kpo-Latn-ZZ"}, "kpr": {"value" : "kpr-Latn-ZZ"}, "kpx": {"value" : "kpx-Latn-ZZ"}, "ghs": {"value" : "ghs-Latn-ZZ"}, "und-Lana": {"value" : "nod-Lana-TH"}, "tbc": {"value" : "tbc-Latn-ZZ"}, "und-RE": {"value" : "fr-Latn-RE"}, "tbd": {"value" : "tbd-Latn-ZZ"}, "tbg": {"value" : "tbg-Latn-ZZ"}, "tbf": {"value" : "tbf-Latn-ZZ"}, "und-RO": {"value" : "ro-Latn-RO"}, "kqb": {"value" : "kqb-Latn-ZZ"}, "tbo": {"value" : "tbo-Latn-ZZ"}
    , "kqf": {"value" : "kqf-Latn-ZZ"}, "und-PT": {"value" : "pt-Latn-PT"}, "und-PS": {"value" : "ar-Arab-PS"}, "und-PR": {"value" : "es-Latn-PR"}, "tbw": {"value" : "tbw-Latn-PH"}, "und-PY": {"value" : "gn-Latn-PY"}, "gim": {"value" : "gim-Latn-ZZ"}, "und-PW": {"value" : "pau-Latn-PW"}, "gil": {"value" : "gil-Latn-KI"}, "kqs": {"value" : "kqs-Latn-ZZ"}, "tbz": {"value" : "tbz-Latn-ZZ"}, "und-Laoo": {"value" : "lo-Laoo-LA"}, "can": {"value" : "can-Latn-ZZ"}, "und-QA": {"value" : "ar-Arab-QA"}, "kqy": {"value"
    : "kqy-Ethi-ZZ"}, "ms-CC": {"value" : "ms-Arab-CC"}, "tci": {"value" : "tci-Latn-ZZ"}, "krc": {"value" : "krc-Cyrl-RU"}, "krj": {"value" : "krj-Latn-PH"}, "kri": {"value" : "kri-Latn-SL"}, "ozm": {"value" : "ozm-Latn-ZZ"}, "und-OM": {"value" : "ar-Arab-OM"}, "krl": {"value" : "krl-Latn-RU"}, "gjk": {"value" : "gjk-Arab-PK"}, "cbj": {"value" : "cbj-Latn-ZZ"}, "gjn": {"value" : "gjn-Latn-ZZ"}, "tcy": {"value" : "tcy-Knda-IN"}, "xla": {"value" : "xla-Latn-ZZ"}, "krs": {"value" : "krs-Latn-ZZ"}, "xlc": {"value"
    : "xlc-Lyci-TR"}, "kru": {"value" : "kru-Deva-IN"}, "und-PA": {"value" : "es-Latn-PA"}, "xld": {"value" : "xld-Lydi-TR"}, "gju": {"value" : "gju-Arab-PK"}, "und-PE": {"value" : "es-Latn-PE"}, "tdd": {"value" : "tdd-Tale-CN"}, "tdg": {"value" : "tdg-Deva-NP"}, "tdh": {"value" : "tdh-Deva-NP"}, "und-PH": {"value" : "fil-Latn-PH"}, "und-PG": {"value" : "tpi-Latn-PG"}, "ksb": {"value" : "ksb-Latn-TZ"}, "und-PF": {"value" : "fr-Latn-PF"}, "und-PM": {"value" : "fr-Latn-PM"}, "ksd": {"value" : "ksd-Latn-ZZ"}, "und-PL":
    {"value" : "pl-Latn-PL"}, "und-PK": {"value" : "ur-Arab-PK"}, "ksf": {"value" : "ksf-Latn-CM"}};
}
function otciu_CLDRHelper_getErasMap$$create() {
    return {"root": [{"value" : "BCE"}, {"value" : "CE"}], "en": [{"value" : "BC"}, {"value" : "AD"}]};
}
function otciu_CLDRHelper_getAmPmMap$$create() {
    return {"root": [{"value" : "AM"}, {"value" : "PM"}], "en": [{"value" : "AM"}, {"value" : "PM"}]};
}
function otciu_CLDRHelper_getMonthMap$$create() {
    return {"root": [{"value" : "M01"}, {"value" : "M02"}, {"value" : "M03"}, {"value" : "M04"}, {"value" : "M05"}, {"value" : "M06"}, {"value" : "M07"}, {"value" : "M08"}, {"value" : "M09"}, {"value" : "M10"}, {"value" : "M11"}, {"value" : "M12"}], "en": [{"value" : "January"}, {"value" : "February"}, {"value" : "March"}, {"value" : "April"}, {"value" : "May"}, {"value" : "June"}, {"value" : "July"}, {"value" : "August"}, {"value" : "September"}, {"value" : "October"}, {"value" : "November"}, {"value" : "December"}
    ]};
}
function otciu_CLDRHelper_getShortMonthMap$$create() {
    return {"root": [{"value" : "M01"}, {"value" : "M02"}, {"value" : "M03"}, {"value" : "M04"}, {"value" : "M05"}, {"value" : "M06"}, {"value" : "M07"}, {"value" : "M08"}, {"value" : "M09"}, {"value" : "M10"}, {"value" : "M11"}, {"value" : "M12"}], "en": [{"value" : "Jan"}, {"value" : "Feb"}, {"value" : "Mar"}, {"value" : "Apr"}, {"value" : "May"}, {"value" : "Jun"}, {"value" : "Jul"}, {"value" : "Aug"}, {"value" : "Sep"}, {"value" : "Oct"}, {"value" : "Nov"}, {"value" : "Dec"}]};
}
function otciu_CLDRHelper_getWeekdayMap$$create() {
    return {"root": [{"value" : "Sun"}, {"value" : "Mon"}, {"value" : "Tue"}, {"value" : "Wed"}, {"value" : "Thu"}, {"value" : "Fri"}, {"value" : "Sat"}], "en": [{"value" : "Sunday"}, {"value" : "Monday"}, {"value" : "Tuesday"}, {"value" : "Wednesday"}, {"value" : "Thursday"}, {"value" : "Friday"}, {"value" : "Saturday"}]};
}
function otciu_CLDRHelper_getShortWeekdayMap$$create() {
    return {"root": [{"value" : "Sun"}, {"value" : "Mon"}, {"value" : "Tue"}, {"value" : "Wed"}, {"value" : "Thu"}, {"value" : "Fri"}, {"value" : "Sat"}], "en": [{"value" : "Sun"}, {"value" : "Mon"}, {"value" : "Tue"}, {"value" : "Wed"}, {"value" : "Thu"}, {"value" : "Fri"}, {"value" : "Sat"}]};
}
function otciu_CLDRHelper_getDefaultLocale$$create() {
    return {"value" : "en_GB"};
}
function otciu_CLDRHelper_getMinimalDaysInFirstWeek$$create() {
    return {"DE": {"value" : 4}, "PT": {"value" : 4}, "DK": {"value" : 4}, "LT": {"value" : 4}, "LU": {"value" : 4}, "HU": {"value" : 4}, "MC": {"value" : 4}, "UM": {"value" : 1}, "IE": {"value" : 4}, "US": {"value" : 1}, "EE": {"value" : 4}, "AD": {"value" : 4}, "IM": {"value" : 4}, "MQ": {"value" : 4}, "IS": {"value" : 4}, "IT": {"value" : 4}, "VA": {"value" : 4}, "AN": {"value" : 4}, "ES": {"value" : 4}, "001": {"value" : 1}, "AT": {"value" : 4}, "RE": {"value" : 4}, "VI": {"value" : 1}, "AX": {"value" :
    4}, "JE": {"value" : 4}, "NL": {"value" : 4}, "NO": {"value" : 4}, "BE": {"value" : 4}, "FI": {"value" : 4}, "RU": {"value" : 4}, "FJ": {"value" : 4}, "BG": {"value" : 4}, "FO": {"value" : 4}, "FR": {"value" : 4}, "SE": {"value" : 4}, "SJ": {"value" : 4}, "SK": {"value" : 4}, "SM": {"value" : 4}, "GB": {"value" : 4}, "GF": {"value" : 4}, "GG": {"value" : 4}, "GI": {"value" : 4}, "CH": {"value" : 4}, "GP": {"value" : 4}, "GR": {"value" : 4}, "GU": {"value" : 1}, "CZ": {"value" : 4}, "PL": {"value" : 4}, "LI":
    {"value" : 4}};
}
function otciu_CLDRHelper_getFirstDayOfWeek$$create() {
    return {"PR": {"value" : 1}, "HK": {"value" : 1}, "PT": {"value" : 1}, "HN": {"value" : 1}, "PY": {"value" : 1}, "HR": {"value" : 2}, "YE": {"value" : 1}, "HU": {"value" : 2}, "QA": {"value" : 7}, "ID": {"value" : 1}, "IE": {"value" : 2}, "AD": {"value" : 2}, "IL": {"value" : 1}, "AE": {"value" : 7}, "AF": {"value" : 7}, "IN": {"value" : 1}, "AG": {"value" : 1}, "ZA": {"value" : 1}, "AI": {"value" : 2}, "IQ": {"value" : 7}, "IR": {"value" : 7}, "IS": {"value" : 2}, "AL": {"value" : 2}, "IT": {"value" : 2}
    , "AM": {"value" : 2}, "AN": {"value" : 2}, "001": {"value" : 2}, "AR": {"value" : 1}, "AS": {"value" : 1}, "AT": {"value" : 2}, "RE": {"value" : 2}, "AU": {"value" : 1}, "AX": {"value" : 2}, "AZ": {"value" : 2}, "RO": {"value" : 2}, "ZW": {"value" : 1}, "BA": {"value" : 2}, "RS": {"value" : 2}, "BD": {"value" : 1}, "BE": {"value" : 2}, "JM": {"value" : 1}, "RU": {"value" : 2}, "BG": {"value" : 2}, "JO": {"value" : 7}, "BH": {"value" : 7}, "JP": {"value" : 1}, "BM": {"value" : 2}, "BN": {"value" : 2}, "SA":
    {"value" : 1}, "BR": {"value" : 1}, "BS": {"value" : 1}, "SD": {"value" : 7}, "BT": {"value" : 1}, "SE": {"value" : 2}, "SG": {"value" : 1}, "BW": {"value" : 1}, "SI": {"value" : 2}, "BY": {"value" : 2}, "BZ": {"value" : 1}, "SK": {"value" : 2}, "KE": {"value" : 1}, "SM": {"value" : 2}, "KG": {"value" : 2}, "KH": {"value" : 1}, "CA": {"value" : 1}, "SV": {"value" : 1}, "CH": {"value" : 2}, "SY": {"value" : 7}, "KR": {"value" : 1}, "CL": {"value" : 2}, "CM": {"value" : 2}, "CN": {"value" : 1}, "CO": {"value"
    : 1}, "KW": {"value" : 7}, "CR": {"value" : 2}, "KZ": {"value" : 2}, "TH": {"value" : 1}, "LA": {"value" : 1}, "CY": {"value" : 2}, "LB": {"value" : 2}, "TJ": {"value" : 2}, "CZ": {"value" : 2}, "TM": {"value" : 2}, "LI": {"value" : 2}, "TR": {"value" : 2}, "LK": {"value" : 2}, "TT": {"value" : 1}, "DE": {"value" : 2}, "TW": {"value" : 1}, "DJ": {"value" : 7}, "DK": {"value" : 2}, "LT": {"value" : 2}, "DM": {"value" : 1}, "LU": {"value" : 2}, "LV": {"value" : 2}, "DO": {"value" : 1}, "UA": {"value" : 2}
    , "LY": {"value" : 7}, "DZ": {"value" : 7}, "MC": {"value" : 2}, "MD": {"value" : 2}, "ME": {"value" : 2}, "UM": {"value" : 1}, "MH": {"value" : 1}, "EC": {"value" : 2}, "MK": {"value" : 2}, "US": {"value" : 1}, "EE": {"value" : 2}, "MM": {"value" : 1}, "MN": {"value" : 2}, "EG": {"value" : 7}, "MO": {"value" : 1}, "MQ": {"value" : 2}, "UY": {"value" : 2}, "UZ": {"value" : 2}, "MT": {"value" : 1}, "MV": {"value" : 6}, "MX": {"value" : 1}, "VA": {"value" : 2}, "MY": {"value" : 2}, "MZ": {"value" : 1}, "ES":
    {"value" : 2}, "ET": {"value" : 1}, "VE": {"value" : 1}, "GB-alt-variant": {"value" : 1}, "VI": {"value" : 1}, "VN": {"value" : 2}, "NI": {"value" : 1}, "NL": {"value" : 2}, "NO": {"value" : 2}, "NP": {"value" : 1}, "FI": {"value" : 2}, "FJ": {"value" : 2}, "FO": {"value" : 2}, "FR": {"value" : 2}, "NZ": {"value" : 2}, "GB": {"value" : 2}, "WS": {"value" : 1}, "GE": {"value" : 2}, "OM": {"value" : 7}, "GF": {"value" : 2}, "GP": {"value" : 2}, "GR": {"value" : 2}, "GT": {"value" : 1}, "GU": {"value" : 1}
    , "PA": {"value" : 1}, "XK": {"value" : 2}, "PE": {"value" : 1}, "PH": {"value" : 1}, "PK": {"value" : 1}, "PL": {"value" : 2}};
}
function otciu_CLDRHelper_getDateFormatMap$$create() {
    return {"root": {"fullFormat" : "y MMMM d, EEEE", "mediumFormat" : "y MMM d", "longFormat" : "y MMMM d", "shortFormat" : "y-MM-dd"}, "en": {"fullFormat" : "EEEE, MMMM d, y", "mediumFormat" : "MMM d, y", "longFormat" : "MMMM d, y", "shortFormat" : "M/d/yy"}};
}
function otpp_ResourceAccessor() {
    jl_Object.call(this);
}
function otpp_ResourceAccessor__init_0() {
    var var_0 = new otpp_ResourceAccessor();
    otpp_ResourceAccessor__init_(var_0);
    return var_0;
}
function otpp_ResourceAccessor__init_($this) {
    return;
}
function otpp_ResourceAccessor_keys(var$1) {
    var result = [];
    for (var key in var$1) {
        result.push(key);
    }
    return result;
}
function otpp_ResourceAccessor_keysToStrings($keys) {
    var $sz, $result, var$4, $i;
    $sz = $keys.length;
    $result = $rt_createArray(jl_String, $sz);
    var$4 = $result.data;
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = ($keys[$i] !== null ? $rt_str($keys[$i]) : null);
        $i = $i + 1 | 0;
    }
    return $result;
}
function jn_ByteBuffer() {
    var a = this; jn_Buffer.call(a);
    a.$start3 = 0;
    a.$array0 = null;
    a.$order = null;
}
function jn_ByteBuffer_allocate($capacity) {
    var var$2, var$3;
    if ($capacity >= 0)
        return jn_ByteBufferImpl__init_($capacity, 0);
    var$2 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(318)), $capacity)));
    $rt_throw(var$2);
}
function jn_ByteBuffer_wrap($array, $offset, $length) {
    return jn_ByteBufferImpl__init_0(0, $array.data.length, $array, $offset, $offset + $length | 0, 0, 0);
}
function jn_ByteBuffer_wrap0($array) {
    return jn_ByteBuffer_wrap($array, 0, $array.data.length);
}
function jn_ByteBuffer_get0($this, $dst, $offset, $length) {
    var var$4, var$5, $pos, var$7, var$8, $i, var$10;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            $pos = $offset + $length | 0;
            if ($pos > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$7, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(319)), $pos), $rt_s(270)), var$5)));
                $rt_throw(var$7);
            }
            if (jn_Buffer_remaining($this) < $length) {
                var$8 = new jn_BufferUnderflowException;
                jl_Throwable__init_0(var$8);
                $rt_throw(var$8);
            }
            if ($length < 0) {
                var$8 = new jl_IndexOutOfBoundsException;
                var$7 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$7);
                jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(271)), $length), $rt_s(272))));
                $rt_throw(var$8);
            }
            $pos = $this.$position + $this.$start3 | 0;
            $i = 0;
            while ($i < $length) {
                var$10 = $offset + 1 | 0;
                $dst = $this.$array0.data;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $dst[$pos];
                $i = $i + 1 | 0;
                $offset = var$10;
                $pos = var$5;
            }
            $this.$position = $this.$position + $length | 0;
            return $this;
        }
    }
    $dst = $dst.data;
    var$7 = new jl_IndexOutOfBoundsException;
    var$8 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$8);
    jl_Throwable__init_(var$7, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(273)), $offset), $rt_s(267)), $dst.length), $rt_s(34))));
    $rt_throw(var$7);
}
function jn_ByteBuffer_get($this, $dst) {
    return jn_ByteBuffer_get0($this, $dst, 0, $dst.data.length);
}
function jn_ByteBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, var$8, $i, var$10;
    if (!$length)
        return $this;
    if ($this.$readOnly0) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$5 = $src.data;
        var$6 = var$5.length;
        if ($offset < var$6) {
            $pos = $offset + $length | 0;
            if ($pos > var$6) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(320)), $pos), $rt_s(270)), var$6)));
                $rt_throw(var$4);
            }
            if ($length < 0) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(271)), $length), $rt_s(272))));
                $rt_throw(var$4);
            }
            $pos = $this.$position + $this.$start3 | 0;
            $i = 0;
            while ($i < $length) {
                $src = $this.$array0.data;
                var$10 = $pos + 1 | 0;
                var$6 = $offset + 1 | 0;
                $src[$pos] = var$5[$offset];
                $i = $i + 1 | 0;
                $pos = var$10;
                $offset = var$6;
            }
            $this.$position = $this.$position + $length | 0;
            return $this;
        }
    }
    $src = $src.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(273)), $offset), $rt_s(267)), $src.length), $rt_s(34))));
    $rt_throw(var$8);
}
function jn_ByteBuffer_put0($this, $src) {
    return jn_ByteBuffer_put($this, $src, 0, $src.data.length);
}
function jn_ByteBuffer_hasArray($this) {
    return 1;
}
function jn_ByteBuffer_array($this) {
    return $this.$array0;
}
function jn_ByteBuffer_order($this, $bo) {
    $this.$order = $bo;
    return $this;
}
function jn_ByteBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ByteBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ByteBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ByteBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ByteBuffer_clear0($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ByteBuffer_limit0($this, var$1) {
    jn_Buffer_limit0($this, var$1);
    return $this;
}
function jn_ByteBuffer_position0($this, var$1) {
    jn_Buffer_position0($this, var$1);
    return $this;
}
function jl_CloneNotSupportedException() {
    jl_Exception.call(this);
}
function jl_CloneNotSupportedException__init_0() {
    var var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_(var_0);
    return var_0;
}
function jl_CloneNotSupportedException__init_($this) {
    jl_Throwable__init_0($this);
}
function jn_FloatBufferImpl() {
    jn_FloatBuffer.call(this);
}
function jn_FloatBufferImpl_get($this) {
    var var$1, var$2;
    if ($this.$position < $this.$limit) {
        var$1 = $this.$position;
        $this.$position = var$1 + 1 | 0;
        return jn_FloatBufferOverArray_getElement($this, var$1);
    }
    var$2 = new jn_BufferUnderflowException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function jn_FloatBufferImpl_put($this, $b) {
    var var$2, var$3;
    if (jn_FloatBufferImpl_isReadOnly($this)) {
        var$2 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$2);
        $rt_throw(var$2);
    }
    if ($this.$position < $this.$limit) {
        var$3 = $this.$position;
        $this.$position = var$3 + 1 | 0;
        jn_FloatBufferOverArray_putElement($this, var$3, $b);
        return $this;
    }
    var$2 = new jn_BufferOverflowException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function jn_FloatBufferImpl_isReadOnly($this) {
    return $this.$readOnly;
}
function jn_FloatBufferOverArray() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly = 0;
    a.$start2 = 0;
    a.$array1 = null;
}
function jn_FloatBufferOverArray_getElement($this, $index) {
    return $this.$array1.data[$index + $this.$start2 | 0];
}
function jn_FloatBufferOverArray_putElement($this, $index, $value) {
    $this.$array1.data[$index + $this.$start2 | 0] = $value;
}
function jn_FloatBufferOverArray_readOnly($this) {
    return $this.$readOnly;
}
function ju_Calendar() {
    var a = this; jl_Object.call(a);
    a.$areFieldsSet = 0;
    a.$fields = null;
    a.$isSet = null;
    a.$isTimeSet = 0;
    a.$time = Long_ZERO;
    a.$lastTimeFieldSet = 0;
    a.$lastDateFieldSet = 0;
    a.$lenient = 0;
    a.$firstDayOfWeek = 0;
    a.$minimalDaysInFirstWeek = 0;
    a.$zone = null;
}
var ju_Calendar_fieldNames = null;
var ju_Calendar_firstDayOfWeekCache = 0;
var ju_Calendar_minimalDaysInFirstWeekCache = 0;
var ju_Calendar_cacheFor = null;
function ju_Calendar_complete($this) {
    if (!$this.$isTimeSet) {
        ju_GregorianCalendar_computeTime($this);
        $this.$isTimeSet = 1;
    }
    if (!$this.$areFieldsSet) {
        ju_GregorianCalendar_computeFields($this);
        $this.$areFieldsSet = 1;
    }
}
function ju_Calendar_get($this, $field) {
    ju_Calendar_complete($this);
    return $this.$fields.data[$field];
}
function ju_Calendar_getFirstDayOfWeek($this) {
    return $this.$firstDayOfWeek;
}
function ju_Calendar_getInstance() {
    return ju_GregorianCalendar__init_0();
}
function ju_Calendar_getMinimalDaysInFirstWeek($this) {
    return $this.$minimalDaysInFirstWeek;
}
function ju_Calendar_getTimeInMillis($this) {
    if (!$this.$isTimeSet) {
        ju_GregorianCalendar_computeTime($this);
        $this.$isTimeSet = 1;
    }
    return $this.$time;
}
function ju_Calendar_getTimeZone($this) {
    return $this.$zone;
}
function ju_Calendar_setTimeZone($this, $timezone) {
    $this.$zone = $timezone;
    $this.$areFieldsSet = 0;
}
function ju_Calendar_isLenient($this) {
    return $this.$lenient;
}
function ju_Calendar_set($this, $field, $value) {
    $this.$fields.data[$field] = $value;
    $this.$isSet.data[$field] = 1;
    $this.$areFieldsSet = 0;
    $this.$isTimeSet = 0;
    if ($field > 2 && $field < 9)
        $this.$lastDateFieldSet = $field;
    if (!($field != 10 && $field != 11))
        $this.$lastTimeFieldSet = $field;
    if ($field == 9)
        $this.$lastTimeFieldSet = 10;
}
function ju_Calendar_setLenient($this, $value) {
    $this.$lenient = $value;
}
function ju_Calendar_setTime($this, $date) {
    ju_Calendar_setTimeInMillis($this, $date.$value2);
}
function ju_Calendar_setTimeInMillis($this, $milliseconds) {
    if (!($this.$isTimeSet && $this.$areFieldsSet && Long_eq($this.$time, $milliseconds))) {
        $this.$time = $milliseconds;
        $this.$isTimeSet = 1;
        $this.$areFieldsSet = 0;
        ju_Calendar_complete($this);
    }
}
function ju_Calendar__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_String, 17);
    var$2 = var$1.data;
    var$2[0] = $rt_s(321);
    var$2[1] = $rt_s(322);
    var$2[2] = $rt_s(323);
    var$2[3] = $rt_s(324);
    var$2[4] = $rt_s(325);
    var$2[5] = $rt_s(326);
    var$2[6] = $rt_s(327);
    var$2[7] = $rt_s(328);
    var$2[8] = $rt_s(329);
    var$2[9] = $rt_s(330);
    var$2[10] = $rt_s(331);
    var$2[11] = $rt_s(332);
    var$2[12] = $rt_s(333);
    var$2[13] = $rt_s(334);
    var$2[14] = $rt_s(335);
    var$2[15] = $rt_s(336);
    var$2[16] = $rt_s(337);
    ju_Calendar_fieldNames = var$1;
    ju_Calendar_firstDayOfWeekCache = (-1);
    ju_Calendar_minimalDaysInFirstWeekCache = (-1);
}
function jn_ByteBufferImpl() {
    var a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly0 = 0;
}
function jn_ByteBufferImpl__init_(var_0, var_1) {
    var var_2 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_1(var_2, var_0, var_1);
    return var_2;
}
function jn_ByteBufferImpl__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function jn_ByteBufferImpl__init_1($this, $capacity, $direct) {
    jn_ByteBufferImpl__init_2($this, 0, $capacity, $rt_createByteArray($capacity), 0, $capacity, $direct, 0);
}
function jn_ByteBufferImpl__init_2($this, $start, $capacity, $array, $position, $limit, $direct, $readOnly) {
    jn_Buffer__init_($this, $capacity);
    $this.$order = jn_ByteOrder_BIG_ENDIAN;
    $this.$start3 = $start;
    $this.$array0 = $array;
    $this.$position = $position;
    $this.$limit = $limit;
    $this.$direct = $direct;
    $this.$readOnly0 = $readOnly;
}
function jn_ByteBufferImpl_get($this) {
    var var$1, var$2, var$3, var$4;
    if ($this.$position >= $this.$limit) {
        var$1 = new jn_BufferUnderflowException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    var$2 = $this.$array0.data;
    var$3 = $this.$start3;
    var$4 = $this.$position;
    $this.$position = var$4 + 1 | 0;
    return var$2[var$3 + var$4 | 0];
}
function jn_ByteBufferImpl_compact($this) {
    var var$1, $sz, $dst, $src, $i, var$6, var$7, var$8, var$9;
    if ($this.$readOnly0) {
        var$1 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position > 0) {
            $dst = $this.$start3;
            $src = $this.$start3 + $this.$position | 0;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$6 = $this.$array0.data;
                var$7 = $dst + 1 | 0;
                var$8 = $this.$array0.data;
                var$9 = $src + 1 | 0;
                var$6[$dst] = var$8[$src];
                $i = $i + 1 | 0;
                $dst = var$7;
                $src = var$9;
            }
        }
    }
    $this.$position = $sz;
    $this.$limit = $this.$capacity;
    $this.$mark0 = (-1);
    return $this;
}
function jn_ByteBufferImpl_isReadOnly($this) {
    return $this.$readOnly0;
}
function jn_ByteBufferImpl_getInt($this, $index) {
    var $a, $b, $c, $d, var$6, var$7;
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        $a = $this.$array0.data[$this.$start3 + $index | 0] & 255;
        $b = $this.$array0.data[($this.$start3 + $index | 0) + 1 | 0] & 255;
        $c = $this.$array0.data[($this.$start3 + $index | 0) + 2 | 0] & 255;
        $d = $this.$array0.data[($this.$start3 + $index | 0) + 3 | 0] & 255;
        if ($this.$order !== jn_ByteOrder_BIG_ENDIAN)
            return $d << 24 | $c << 16 | $b << 8 | $a;
        return $a << 24 | $b << 16 | $c << 8 | $d;
    }
    var$6 = new jl_IndexOutOfBoundsException;
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    jl_Throwable__init_(var$6, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(338)), $index), $rt_s(267)), $this.$limit - 3 | 0), $rt_s(34))));
    $rt_throw(var$6);
}
function jn_ByteBufferImpl_putInt($this, $index, $value) {
    var var$3, var$4;
    if ($this.$readOnly0) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        if ($this.$order !== jn_ByteOrder_BIG_ENDIAN) {
            $this.$array0.data[$this.$start3 + $index | 0] = $value << 24 >> 24;
            $this.$array0.data[($this.$start3 + $index | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
            $this.$array0.data[($this.$start3 + $index | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
            $this.$array0.data[($this.$start3 + $index | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
        } else {
            $this.$array0.data[$this.$start3 + $index | 0] = $value >> 24 << 24 >> 24;
            $this.$array0.data[($this.$start3 + $index | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
            $this.$array0.data[($this.$start3 + $index | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
            $this.$array0.data[($this.$start3 + $index | 0) + 3 | 0] = $value << 24 >> 24;
        }
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(338)), $index), $rt_s(267)), $this.$limit - 3 | 0), $rt_s(34))));
    $rt_throw(var$4);
}
function jn_ByteBufferImpl_asIntBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order !== jn_ByteOrder_BIG_ENDIAN) {
        var$2 = new jn_IntBufferOverByteBufferLittleEndian;
        jn_IntBufferOverByteBuffer__init_(var$2, $this.$start3 + $this.$position | 0, $sz, $this, 0, $sz, $this.$readOnly0);
        return var$2;
    }
    var$2 = new jn_IntBufferOverByteBufferBigEndian;
    jn_IntBufferOverByteBuffer__init_(var$2, $this.$start3 + $this.$position | 0, $sz, $this, 0, $sz, $this.$readOnly0);
    return var$2;
}
function jl_Readable() {
}
function jn_CharBuffer() {
    jn_Buffer.call(this);
}
function jn_CharBuffer_allocate($capacity) {
    var var$2, var$3;
    if ($capacity >= 0)
        return jn_CharBufferOverArray__init_(0, $capacity, $rt_createCharArray($capacity), 0, $capacity, 0);
    var$2 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(318)), $capacity)));
    $rt_throw(var$2);
}
function jn_CharBuffer_wrap0($array, $offset, $length) {
    return jn_CharBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_CharBuffer_wrap($array) {
    return jn_CharBuffer_wrap0($array, 0, $array.data.length);
}
function jn_CharBuffer_get0($this, $dst, $offset, $length) {
    var var$4, var$5, $pos, var$7, var$8, $i, var$10;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset < var$5) {
            $pos = $offset + $length | 0;
            if ($pos > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$7, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(339)), $pos), $rt_s(270)), var$5)));
                $rt_throw(var$7);
            }
            if (jn_Buffer_remaining($this) < $length) {
                var$7 = new jn_BufferUnderflowException;
                jl_Throwable__init_0(var$7);
                $rt_throw(var$7);
            }
            if ($length < 0) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$7, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(271)), $length), $rt_s(272))));
                $rt_throw(var$7);
            }
            $pos = $this.$position;
            $i = 0;
            while ($i < $length) {
                var$10 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = jn_CharBufferOverArray_getChar($this, $pos);
                $i = $i + 1 | 0;
                $offset = var$10;
                $pos = var$5;
            }
            $this.$position = $this.$position + $length | 0;
            return $this;
        }
    }
    $dst = $dst.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(273)), $offset), $rt_s(267)), $dst.length), $rt_s(34))));
    $rt_throw(var$8);
}
function jn_CharBuffer_get($this, $dst) {
    return jn_CharBuffer_get0($this, $dst, 0, $dst.data.length);
}
function jn_CharBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, $pos, var$8, $i, var$10;
    if (jn_CharBufferImpl_isReadOnly($this)) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$5 = $src.data;
        var$6 = var$5.length;
        if ($offset < var$6) {
            $pos = $offset + $length | 0;
            if ($pos > var$6) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(340)), $pos), $rt_s(270)), var$6)));
                $rt_throw(var$4);
            }
            if ($length < 0) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$8);
                jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(271)), $length), $rt_s(272))));
                $rt_throw(var$4);
            }
            $pos = $this.$position;
            $i = 0;
            while ($i < $length) {
                var$10 = $pos + 1 | 0;
                var$6 = $offset + 1 | 0;
                jn_CharBufferOverArray_putChar($this, $pos, var$5[$offset]);
                $i = $i + 1 | 0;
                $pos = var$10;
                $offset = var$6;
            }
            $this.$position = $this.$position + $length | 0;
            return $this;
        }
    }
    $src = $src.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_Throwable__init_(var$8, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(273)), $offset), $rt_s(267)), $src.length), $rt_s(34))));
    $rt_throw(var$8);
}
function jn_CharBuffer_put0($this, $src, $start, $end) {
    var $sz, var$5, var$6, $pos, $pos_0, var$9;
    if (jn_CharBufferImpl_isReadOnly($this)) {
        $src = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0($src);
        $rt_throw($src);
    }
    $sz = $end - $start | 0;
    if (jn_Buffer_remaining($this) < $sz) {
        $src = new jn_BufferOverflowException;
        jl_Throwable__init_0($src);
        $rt_throw($src);
    }
    if ($start >= 0 && $start < jl_String_length($src)) {
        if ($end > jl_String_length($src)) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$6 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$6);
            jl_Throwable__init_(var$5, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(340)), $end), $rt_s(341)), jl_String_length($src))));
            $rt_throw(var$5);
        }
        if ($start > $end) {
            $src = new jl_IndexOutOfBoundsException;
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            jl_Throwable__init_($src, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(342)), $start), $rt_s(343)), $end)));
            $rt_throw($src);
        }
        $pos = $this.$position;
        while ($start < $end) {
            $pos_0 = $pos + 1 | 0;
            var$9 = $start + 1 | 0;
            jn_CharBufferOverArray_putChar($this, $pos, jl_String_charAt($src, $start));
            $pos = $pos_0;
            $start = var$9;
        }
        $this.$position = $this.$position + $sz | 0;
        return $this;
    }
    var$6 = new jl_IndexOutOfBoundsException;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_Throwable__init_(var$6, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(342)), $start), $rt_s(267)), jl_String_length($src)), $rt_s(34))));
    $rt_throw(var$6);
}
function jn_CharBuffer_put1($this, $src) {
    return jn_CharBuffer_put0($this, $src, 0, jl_String_length($src));
}
function jn_CharBuffer_hasArray($this) {
    return 1;
}
function jn_CharBuffer_array($this) {
    return $this.$array3;
}
function jn_CharBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_CharBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function cjj_GZIPException() {
    ji_IOException.call(this);
}
function cjj_GZIPException__init_0() {
    var var_0 = new cjj_GZIPException();
    cjj_GZIPException__init_(var_0);
    return var_0;
}
function cjj_GZIPException__init_($this) {
    jl_Throwable__init_0($this);
}
function nms_MaterialTransparent() {
    nms_Material.call(this);
}
function nms_MaterialTransparent__init_0() {
    var var_0 = new nms_MaterialTransparent();
    nms_MaterialTransparent__init_(var_0);
    return var_0;
}
function nms_MaterialTransparent__init_($this) {
    return;
}
function nms_MaterialTransparent_func_878_a($this) {
    return 0;
}
function nms_MaterialTransparent_getCanBlockGrass($this) {
    return 0;
}
function nms_MaterialTransparent_func_880_c($this) {
    return 0;
}
function nms_MaterialLiquid() {
    nms_Material.call(this);
}
function nms_MaterialLiquid__init_0() {
    var var_0 = new nms_MaterialLiquid();
    nms_MaterialLiquid__init_(var_0);
    return var_0;
}
function nms_MaterialLiquid__init_($this) {
    return;
}
function nms_MaterialLiquid_getIsLiquid($this) {
    return 1;
}
function nms_MaterialLiquid_func_880_c($this) {
    return 0;
}
function nms_MaterialLiquid_func_878_a($this) {
    return 0;
}
function nms_MaterialLogic() {
    nms_Material.call(this);
}
function nms_MaterialLogic__init_0() {
    var var_0 = new nms_MaterialLogic();
    nms_MaterialLogic__init_(var_0);
    return var_0;
}
function nms_MaterialLogic__init_($this) {
    return;
}
function nms_MaterialLogic_func_878_a($this) {
    return 0;
}
function nms_MaterialLogic_getCanBlockGrass($this) {
    return 0;
}
function nms_MaterialLogic_func_880_c($this) {
    return 0;
}
function nms_ItemTool() {
    var a = this; nms_Item.call(a);
    a.$blocksEffectiveAgainst = null;
    a.$efficiencyOnProperMaterial = 0.0;
    a.$damageVsEntity = 0;
    a.$ingredientQuality = 0;
}
function nms_ItemTool__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_ItemTool();
    nms_ItemTool__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_ItemTool__init_0($this, $var1, $var2, $var3, $var4) {
    nms_Item__init_0($this, $var1);
    $this.$efficiencyOnProperMaterial = 4.0;
    $this.$ingredientQuality = $var3;
    $this.$blocksEffectiveAgainst = $var4;
    $this.$maxStackSize = 1;
    $this.$maxDamage = 32 << $var3;
    if ($var3 == 3)
        $this.$maxDamage = $this.$maxDamage * 4 | 0;
    $this.$efficiencyOnProperMaterial = ($var3 + 1 | 0) * 2 | 0;
    $this.$damageVsEntity = $var2 + $var3 | 0;
}
function nms_ItemTool_getStrVsBlock($this, $var1, $var2) {
    var $var3;
    $var3 = 0;
    while ($var3 < $this.$blocksEffectiveAgainst.data.length) {
        if ($this.$blocksEffectiveAgainst.data[$var3] === $var2)
            return $this.$efficiencyOnProperMaterial;
        $var3 = $var3 + 1 | 0;
    }
    return 1.0;
}
function nms_ItemTool_hitEntity($this, $var1, $var2) {
    nms_ItemStack_damageItem($var1, 2);
}
function nms_ItemTool_hitBlock($this, $var1, $var2, $var3, $var4, $var5) {
    nms_ItemStack_damageItem($var1, 1);
}
function nms_ItemTool_getDamageVsEntity($this, $var1) {
    return $this.$damageVsEntity;
}
function nms_ItemTool_isFull3D($this) {
    return 1;
}
function nms_ItemSpade() {
    nms_ItemTool.call(this);
}
var nms_ItemSpade_blocksEffectiveAgainst = null;
function nms_ItemSpade_$callClinit() {
    nms_ItemSpade_$callClinit = $rt_eraseClinit(nms_ItemSpade);
    nms_ItemSpade__clinit_();
}
function nms_ItemSpade__init_(var_0, var_1) {
    var var_2 = new nms_ItemSpade();
    nms_ItemSpade__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemSpade__init_0($this, $var1, $var2) {
    nms_ItemSpade_$callClinit();
    nms_ItemTool__init_0($this, $var1, 1, $var2, nms_ItemSpade_blocksEffectiveAgainst);
}
function nms_ItemSpade_canHarvestBlock($this, $var1) {
    nms_Block_$callClinit();
    return $var1 === nms_Block_snow ? 1 : $var1 !== nms_Block_blockSnow ? 0 : 1;
}
function nms_ItemSpade__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(nms_Block, 7);
    var$2 = var$1.data;
    nms_Block_$callClinit();
    var$2[0] = nms_Block_grass;
    var$2[1] = nms_Block_dirt;
    var$2[2] = nms_Block_sand;
    var$2[3] = nms_Block_gravel;
    var$2[4] = nms_Block_snow;
    var$2[5] = nms_Block_blockSnow;
    var$2[6] = nms_Block_blockClay;
    nms_ItemSpade_blocksEffectiveAgainst = var$1;
}
function nms_ItemPickaxe() {
    nms_ItemTool.call(this);
    this.$field_328_aY = 0;
}
var nms_ItemPickaxe_blocksEffectiveAgainst = null;
function nms_ItemPickaxe_$callClinit() {
    nms_ItemPickaxe_$callClinit = $rt_eraseClinit(nms_ItemPickaxe);
    nms_ItemPickaxe__clinit_();
}
function nms_ItemPickaxe__init_(var_0, var_1) {
    var var_2 = new nms_ItemPickaxe();
    nms_ItemPickaxe__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemPickaxe__init_0($this, $var1, $var2) {
    nms_ItemPickaxe_$callClinit();
    nms_ItemTool__init_0($this, $var1, 2, $var2, nms_ItemPickaxe_blocksEffectiveAgainst);
    $this.$field_328_aY = $var2;
}
function nms_ItemPickaxe_canHarvestBlock($this, $var1) {
    nms_Block_$callClinit();
    return $var1 === nms_Block_obsidian ? ($this.$field_328_aY != 3 ? 0 : 1) : $var1 !== nms_Block_blockDiamond && $var1 !== nms_Block_oreDiamond ? ($var1 !== nms_Block_blockGold && $var1 !== nms_Block_oreGold ? ($var1 !== nms_Block_blockSteel && $var1 !== nms_Block_oreIron ? ($var1 !== nms_Block_oreRedstone && $var1 !== nms_Block_oreRedstoneGlowing ? ($var1.$blockMaterial === nms_Material_rock ? 1 : $var1.$blockMaterial !== nms_Material_iron ? 0 : 1) : $this.$field_328_aY < 2 ? 0 : 1) : $this.$field_328_aY
    < 1 ? 0 : 1) : $this.$field_328_aY < 2 ? 0 : 1) : $this.$field_328_aY < 2 ? 0 : 1;
}
function nms_ItemPickaxe__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(nms_Block, 14);
    var$2 = var$1.data;
    nms_Block_$callClinit();
    var$2[0] = nms_Block_cobblestone;
    var$2[1] = nms_Block_stairDouble;
    var$2[2] = nms_Block_stairSingle;
    var$2[3] = nms_Block_stone;
    var$2[4] = nms_Block_cobblestoneMossy;
    var$2[5] = nms_Block_oreIron;
    var$2[6] = nms_Block_blockSteel;
    var$2[7] = nms_Block_oreCoal;
    var$2[8] = nms_Block_blockGold;
    var$2[9] = nms_Block_oreGold;
    var$2[10] = nms_Block_oreDiamond;
    var$2[11] = nms_Block_blockDiamond;
    var$2[12] = nms_Block_blockIce;
    var$2[13] = nms_Block_bloodStone;
    nms_ItemPickaxe_blocksEffectiveAgainst = var$1;
}
function nms_ItemAxe() {
    nms_ItemTool.call(this);
}
var nms_ItemAxe_blocksEffectiveAgainst = null;
function nms_ItemAxe_$callClinit() {
    nms_ItemAxe_$callClinit = $rt_eraseClinit(nms_ItemAxe);
    nms_ItemAxe__clinit_();
}
function nms_ItemAxe__init_(var_0, var_1) {
    var var_2 = new nms_ItemAxe();
    nms_ItemAxe__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemAxe__init_0($this, $var1, $var2) {
    nms_ItemAxe_$callClinit();
    nms_ItemTool__init_0($this, $var1, 3, $var2, nms_ItemAxe_blocksEffectiveAgainst);
}
function nms_ItemAxe__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(nms_Block, 4);
    var$2 = var$1.data;
    nms_Block_$callClinit();
    var$2[0] = nms_Block_planks;
    var$2[1] = nms_Block_bookShelf;
    var$2[2] = nms_Block_wood;
    var$2[3] = nms_Block_crate;
    nms_ItemAxe_blocksEffectiveAgainst = var$1;
}
function nms_ItemFlintAndSteel() {
    nms_Item.call(this);
}
function nms_ItemFlintAndSteel__init_(var_0) {
    var var_1 = new nms_ItemFlintAndSteel();
    nms_ItemFlintAndSteel__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemFlintAndSteel__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
    $this.$maxDamage = 64;
}
function nms_ItemFlintAndSteel_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var var$8, var$9, var$10;
    if (!$var7)
        $var5 = $var5 + (-1) | 0;
    if ($var7 == 1)
        $var5 = $var5 + 1 | 0;
    if ($var7 == 2)
        $var6 = $var6 + (-1) | 0;
    if ($var7 == 3)
        $var6 = $var6 + 1 | 0;
    if ($var7 == 4)
        $var4 = $var4 + (-1) | 0;
    if ($var7 == 5)
        $var4 = $var4 + 1 | 0;
    if (!nms_World_getBlockId($var3, $var4, $var5, $var6)) {
        var$8 = $var4 + 0.5;
        var$9 = $var5 + 0.5;
        var$10 = $var6 + 0.5;
        nms_Item_$callClinit();
        nms_World_playSoundEffect($var3, var$8, var$9, var$10, $rt_s(344), 1.0, ju_Random_nextFloat(nms_Item_itemRand) * 0.4000000059604645 + 0.800000011920929);
        nms_Block_$callClinit();
        nms_World_setBlockWithNotify($var3, $var4, $var5, $var6, nms_Block_fire.$blockID);
    }
    nms_ItemStack_damageItem($var1, 1);
    return 1;
}
function nms_ItemFood() {
    nms_Item.call(this);
    this.$healAmount = 0;
}
function nms_ItemFood__init_(var_0, var_1) {
    var var_2 = new nms_ItemFood();
    nms_ItemFood__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemFood__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$healAmount = $var2;
    $this.$maxStackSize = 1;
}
function nms_ItemFood_onItemRightClick($this, $var1, $var2, $var3) {
    $var1.$stackSize = $var1.$stackSize - 1 | 0;
    nms_EntityLiving_heal($var3, $this.$healAmount);
    return $var1;
}
function nms_ItemBow() {
    nms_Item.call(this);
}
function nms_ItemBow__init_(var_0) {
    var var_1 = new nms_ItemBow();
    nms_ItemBow__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemBow__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
}
function nms_ItemBow_onItemRightClick($this, $var1, $var2, $var3) {
    var var$4;
    var$4 = $var3.$inventory0;
    nms_Item_$callClinit();
    if (nms_InventoryPlayer_consumeInventoryItem(var$4, nms_Item_arrow.$shiftedIndex)) {
        nms_World_playSoundAtEntity($var2, $var3, $rt_s(345), 1.0, 1.0 / (ju_Random_nextFloat(nms_Item_itemRand) * 0.4000000059604645 + 0.800000011920929));
        nms_World_entityJoinedWorld($var2, nms_EntityArrow__init_($var2, $var3));
    }
    return $var1;
}
function nms_ItemSword() {
    nms_Item.call(this);
    this.$weaponDamage = 0;
}
function nms_ItemSword__init_(var_0, var_1) {
    var var_2 = new nms_ItemSword();
    nms_ItemSword__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemSword__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
    $this.$maxDamage = 32 << $var2;
    if ($var2 == 3)
        $this.$maxDamage = $this.$maxDamage * 4 | 0;
    $this.$weaponDamage = 4 + ($var2 * 2 | 0) | 0;
}
function nms_ItemSword_getStrVsBlock($this, $var1, $var2) {
    return 1.5;
}
function nms_ItemSword_hitEntity($this, $var1, $var2) {
    nms_ItemStack_damageItem($var1, 1);
}
function nms_ItemSword_hitBlock($this, $var1, $var2, $var3, $var4, $var5) {
    nms_ItemStack_damageItem($var1, 2);
}
function nms_ItemSword_getDamageVsEntity($this, $var1) {
    return $this.$weaponDamage;
}
function nms_ItemSword_isFull3D($this) {
    return 1;
}
function nms_ItemSoup() {
    nms_ItemFood.call(this);
}
function nms_ItemSoup__init_(var_0, var_1) {
    var var_2 = new nms_ItemSoup();
    nms_ItemSoup__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemSoup__init_0($this, $var1, $var2) {
    nms_ItemFood__init_0($this, $var1, $var2);
}
function nms_ItemSoup_onItemRightClick($this, $var1, $var2, $var3) {
    nms_ItemFood_onItemRightClick($this, $var1, $var2, $var3);
    $var1 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_2($var1, nms_Item_bowlEmpty);
    return $var1;
}
function nms_ItemHoe() {
    nms_Item.call(this);
}
function nms_ItemHoe__init_(var_0, var_1) {
    var var_2 = new nms_ItemHoe();
    nms_ItemHoe__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemHoe__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
    $this.$maxDamage = 32 << $var2;
}
function nms_ItemHoe_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var10, var$10, var$11, $var16, var$13, var$14, $var12, $var14, $var17, var$18;
    a: {
        $var8 = nms_World_getBlockId($var3, $var4, $var5, $var6);
        if (!nms_World_getBlockMaterial($var3, $var4, $var5 + 1 | 0, $var6).$func_878_a()) {
            nms_Block_$callClinit();
            if ($var8 == nms_Block_grass.$blockID)
                break a;
        }
        nms_Block_$callClinit();
        if ($var8 != nms_Block_dirt.$blockID)
            return 0;
    }
    b: {
        nms_Block_$callClinit();
        $var10 = nms_Block_tilledField;
        var$10 = $var4;
        var$11 = var$10 + 0.5;
        $var16 = $var5;
        var$13 = $var16 + 0.5;
        var$14 = $var6;
        nms_World_playSoundEffect($var3, var$11, var$13, var$14 + 0.5, nms_StepSound_func_1145_d($var10.$stepSound), ($var10.$stepSound.$field_1677_b + 1.0) / 2.0, $var10.$stepSound.$field_1679_c * 0.800000011920929);
        nms_World_setBlockWithNotify($var3, $var4, $var5, $var6, $var10.$blockID);
        nms_ItemStack_damageItem($var1, 1);
        if (!ju_Random_nextInt($var3.$rand1, 8) && $var8 == nms_Block_grass.$blockID) {
            $var12 = 0;
            var$11 = $var16 + 1.2000000476837158;
            while (true) {
                if ($var12 >= 1)
                    break b;
                $var14 = ju_Random_nextFloat($var3.$rand1) * 0.699999988079071 + 0.15000000596046448;
                $var16 = ju_Random_nextFloat($var3.$rand1) * 0.699999988079071 + 0.15000000596046448;
                $var17 = new nms_EntityItem;
                var$13 = var$10 + $var14;
                var$18 = var$14 + $var16;
                $var2 = new nms_ItemStack;
                nms_Item_$callClinit();
                nms_ItemStack__init_2($var2, nms_Item_seeds);
                nms_EntityItem__init_0($var17, $var3, var$13, var$11, var$18, $var2);
                $var17.$field_805_c = 10;
                nms_World_entityJoinedWorld($var3, $var17);
                $var12 = $var12 + 1 | 0;
            }
        }
    }
    return 1;
}
function nms_ItemHoe_isFull3D($this) {
    return 1;
}
function nms_ItemSeeds() {
    nms_Item.call(this);
    this.$field_318_a = 0;
}
function nms_ItemSeeds__init_0(var_0, var_1) {
    var var_2 = new nms_ItemSeeds();
    nms_ItemSeeds__init_(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemSeeds__init_($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$field_318_a = $var2;
}
function nms_ItemSeeds_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    if ($var7 != 1)
        return 0;
    $var8 = nms_World_getBlockId($var3, $var4, $var5, $var6);
    nms_Block_$callClinit();
    if ($var8 != nms_Block_tilledField.$blockID)
        return 0;
    nms_World_setBlockWithNotify($var3, $var4, $var5 + 1 | 0, $var6, $this.$field_318_a);
    $var1.$stackSize = $var1.$stackSize - 1 | 0;
    return 1;
}
function nms_ItemArmor() {
    var a = this; nms_Item.call(a);
    a.$armorLevel = 0;
    a.$armorType = 0;
    a.$damageReduceAmmount = 0;
    a.$renderIndex = 0;
}
var nms_ItemArmor_damageReduceAmmountArray = null;
var nms_ItemArmor_maxDamageArray = null;
function nms_ItemArmor__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_ItemArmor();
    nms_ItemArmor__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_ItemArmor__init_0($this, $var1, $var2, $var3, $var4) {
    nms_Item__init_0($this, $var1);
    $this.$armorLevel = $var2;
    $this.$armorType = $var4;
    $this.$renderIndex = $var3;
    $this.$damageReduceAmmount = nms_ItemArmor_damageReduceAmmountArray.data[$var4];
    $this.$maxDamage = (nms_ItemArmor_maxDamageArray.data[$var4] * 3 | 0) << $var2;
    $this.$maxStackSize = 1;
}
function nms_ItemArmor__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(4);
    var$2 = var$1.data;
    var$2[0] = 3;
    var$2[1] = 8;
    var$2[2] = 6;
    var$2[3] = 3;
    nms_ItemArmor_damageReduceAmmountArray = var$1;
    var$1 = $rt_createIntArray(4);
    var$2 = var$1.data;
    var$2[0] = 11;
    var$2[1] = 16;
    var$2[2] = 15;
    var$2[3] = 13;
    nms_ItemArmor_maxDamageArray = var$1;
}
function nms_ItemPainting() {
    nms_Item.call(this);
}
function nms_ItemPainting__init_(var_0) {
    var var_1 = new nms_ItemPainting();
    nms_ItemPainting__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemPainting__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxDamage = 64;
}
function nms_ItemPainting_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, var$10, var$11;
    if (!$var7)
        return 0;
    if ($var7 == 1)
        return 0;
    $var8 = 0;
    if ($var7 == 4)
        $var8 = 1;
    if ($var7 == 3)
        $var8 = 2;
    if ($var7 == 5)
        $var8 = 3;
    $var9 = new nms_EntityPainting;
    nms_Entity__init_($var9, $var3);
    $var9.$field_695_c = 0;
    $var9.$field_691_a = 0;
    $var9.$yOffset = 0.0;
    nms_Entity_setSize($var9, 0.5, 0.5);
    $var9.$field_9322_d = $var4;
    $var9.$field_9321_e = $var5;
    $var9.$field_9320_f = $var6;
    $var2 = ju_ArrayList__init_0();
    var$10 = nms_EnumArt_values().data;
    $var5 = var$10.length;
    $var6 = 0;
    while ($var6 < $var5) {
        var$11 = var$10[$var6];
        $var9.$field_690_b = var$11;
        nms_EntityPainting_func_412_b($var9, $var8);
        if (nms_EntityPainting_func_410_i($var9))
            ju_ArrayList_add($var2, var$11);
        $var6 = $var6 + 1 | 0;
    }
    if ($var2.$size > 0)
        $var9.$field_690_b = ju_ArrayList_get($var2, ju_Random_nextInt($var9.$rand2, $var2.$size));
    nms_EntityPainting_func_412_b($var9, $var8);
    if (nms_EntityPainting_func_410_i($var9)) {
        nms_World_entityJoinedWorld($var3, $var9);
        $var1.$stackSize = $var1.$stackSize - 1 | 0;
    }
    return 1;
}
function nms_ItemSign() {
    nms_Item.call(this);
}
function nms_ItemSign__init_(var_0) {
    var var_1 = new nms_ItemSign();
    nms_ItemSign__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemSign__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxDamage = 64;
    $this.$maxStackSize = 1;
}
function nms_ItemSign_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var var$8, $var8;
    if (!$var7)
        return 0;
    if (!nms_World_getBlockMaterial($var3, $var4, $var5, $var6).$func_878_a())
        return 0;
    var$8 = $rt_compare($var7, 1);
    if (!var$8)
        $var5 = $var5 + 1 | 0;
    if ($var7 == 2)
        $var6 = $var6 + (-1) | 0;
    if ($var7 == 3)
        $var6 = $var6 + 1 | 0;
    if ($var7 == 4)
        $var4 = $var4 + (-1) | 0;
    if ($var7 == 5)
        $var4 = $var4 + 1 | 0;
    nms_Block_$callClinit();
    if (!nms_Block_signPost.$canPlaceBlockAt($var3, $var4, $var5, $var6))
        return 0;
    if (var$8)
        nms_World_setBlockAndMetadataWithNotify($var3, $var4, $var5, $var6, nms_Block_signWall.$blockID, $var7);
    else
        nms_World_setBlockAndMetadataWithNotify($var3, $var4, $var5, $var6, nms_Block_signPost.$blockID, nms_MathHelper_floor_double(($var2.$rotationYaw + 180.0) * 16.0 / 360.0 + 0.5) & 15);
    $var1.$stackSize = $var1.$stackSize - 1 | 0;
    $var8 = nms_World_getBlockTileEntity($var3, $var4, $var5, $var6);
    if ($var8 !== null)
        nms_EntityPlayerSP_displayGUIEditSign($var2, $var8);
    return 1;
}
function nms_ItemDoor() {
    nms_Item.call(this);
    this.$field_321_a = null;
}
function nms_ItemDoor__init_(var_0, var_1) {
    var var_2 = new nms_ItemDoor();
    nms_ItemDoor__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemDoor__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$field_321_a = $var2;
    $this.$maxDamage = 64;
    $this.$maxStackSize = 1;
}
function nms_ItemDoor_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var var$8, $var8, $var9, $var10, $var11, $var16, var$14, var$15, $var12, $var13, $var14, $var15;
    if ($var7 != 1)
        return 0;
    var$8 = $var5 + 1 | 0;
    if ($this.$field_321_a !== nms_Material_wood) {
        nms_Block_$callClinit();
        $var8 = nms_Block_doorSteel;
    } else {
        nms_Block_$callClinit();
        $var8 = nms_Block_doorWood;
    }
    if (!$var8.$canPlaceBlockAt($var3, $var4, var$8, $var6))
        return 0;
    $var9 = nms_MathHelper_floor_double(($var2.$rotationYaw + 180.0) * 4.0 / 360.0 - 0.5) & 3;
    $var10 = 0;
    $var11 = 0;
    if (!$var9)
        $var11 = 1;
    if ($var9 == 1)
        $var10 = (-1);
    if ($var9 == 2)
        $var11 = (-1);
    if ($var9 == 3)
        $var10 = 1;
    $var16 = $var4 - $var10 | 0;
    var$14 = $var6 - $var11 | 0;
    $var5 = !nms_World_isBlockOpaqueCube($var3, $var16, var$8, var$14) ? 0 : 1;
    var$15 = var$8 + 1 | 0;
    $var12 = $var5 + (!nms_World_isBlockOpaqueCube($var3, $var16, var$15, var$14) ? 0 : 1) | 0;
    $var5 = $var4 + $var10 | 0;
    $var7 = $var6 + $var11 | 0;
    $var13 = (!nms_World_isBlockOpaqueCube($var3, $var5, var$8, $var7) ? 0 : 1) + (!nms_World_isBlockOpaqueCube($var3, $var5, var$15, $var7) ? 0 : 1) | 0;
    $var14 = nms_World_getBlockId($var3, $var16, var$8, var$14) != $var8.$blockID && nms_World_getBlockId($var3, $var16, var$15, var$14) != $var8.$blockID ? 0 : 1;
    $var15 = nms_World_getBlockId($var3, $var5, var$8, $var7) != $var8.$blockID && nms_World_getBlockId($var3, $var5, var$15, $var7) != $var8.$blockID ? 0 : 1;
    $var16 = 0;
    if ($var14 && !$var15)
        $var16 = 1;
    else if ($var13 > $var12)
        $var16 = 1;
    if ($var16)
        $var9 = (($var9 - 1 | 0) & 3) + 4 | 0;
    nms_World_setBlockWithNotify($var3, $var4, var$8, $var6, $var8.$blockID);
    nms_World_setBlockMetadataWithNotify($var3, $var4, var$8, $var6, $var9);
    nms_World_setBlockWithNotify($var3, $var4, var$15, $var6, $var8.$blockID);
    nms_World_setBlockMetadataWithNotify($var3, $var4, var$15, $var6, $var9 + 8 | 0);
    $var1.$stackSize = $var1.$stackSize - 1 | 0;
    return 1;
}
function nms_ItemBucket() {
    nms_Item.call(this);
    this.$isFull = 0;
}
function nms_ItemBucket__init_(var_0, var_1) {
    var var_2 = new nms_ItemBucket();
    nms_ItemBucket__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemBucket__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
    $this.$maxDamage = 64;
    $this.$isFull = $var2;
}
function nms_ItemBucket_onItemRightClick($this, $var1, $var2, $var3) {
    var $var5, $var6, $var7, $var9, $var11, $var13, $var4, $var14, $var15, $var16, $var24, $var25, $var26, $var27, var$18, $var28;
    $var5 = $var3.$prevRotationPitch + ($var3.$rotationPitch - $var3.$prevRotationPitch) * 1.0;
    $var6 = $var3.$prevRotationYaw + ($var3.$rotationYaw - $var3.$prevRotationYaw) * 1.0;
    $var7 = $var3.$prevPosX + ($var3.$posX - $var3.$prevPosX) * 1.0;
    $var9 = $var3.$prevPosY + ($var3.$posY - $var3.$prevPosY) * 1.0 + 1.62 - $var3.$yOffset;
    $var11 = $var3.$prevPosZ + ($var3.$posZ - $var3.$prevPosZ) * 1.0;
    $var13 = nms_Vec3D_createVector($var7, $var9, $var11);
    $var4 =  -$var6 * 0.01745329238474369 - 3.1415927410125732;
    $var14 = nms_MathHelper_cos($var4);
    $var15 = nms_MathHelper_sin($var4);
    $var4 =  -$var5 * 0.01745329238474369;
    $var16 =  -nms_MathHelper_cos($var4);
    $var24 = nms_World_rayTraceBlocks0($var2, $var13, nms_Vec3D_addVector($var13, $var15 * $var16 * 5.0, nms_MathHelper_sin($var4) * 5.0, $var14 * $var16 * 5.0), $this.$isFull ? 0 : 1);
    if ($var24 === null)
        return $var1;
    a: {
        b: {
            if ($var24.$typeOfHit) {
                if ($this.$isFull)
                    break b;
                if (!($var24.$entityHit instanceof nms_EntityCow))
                    break b;
                $var1 = new nms_ItemStack;
                nms_Item_$callClinit();
                nms_ItemStack__init_2($var1, nms_Item_bucketMilk);
                return $var1;
            }
            c: {
                $var25 = $var24.$blockX;
                $var26 = $var24.$blockY;
                $var27 = $var24.$blockZ;
                if (!$this.$isFull) {
                    if (nms_World_getBlockMaterial($var2, $var25, $var26, $var27) === nms_Material_water && !nms_World_getBlockMetadata($var2, $var25, $var26, $var27)) {
                        nms_World_setBlockWithNotify($var2, $var25, $var26, $var27, 0);
                        $var1 = new nms_ItemStack;
                        nms_Item_$callClinit();
                        nms_ItemStack__init_2($var1, nms_Item_bucketWater);
                        return $var1;
                    }
                    if (nms_World_getBlockMaterial($var2, $var25, $var26, $var27) !== nms_Material_lava)
                        break c;
                    if (nms_World_getBlockMetadata($var2, $var25, $var26, $var27))
                        break c;
                    nms_World_setBlockWithNotify($var2, $var25, $var26, $var27, 0);
                    $var1 = new nms_ItemStack;
                    nms_Item_$callClinit();
                    nms_ItemStack__init_2($var1, nms_Item_bucketLava);
                    return $var1;
                }
                if ($this.$isFull < 0) {
                    $var1 = new nms_ItemStack;
                    nms_Item_$callClinit();
                    nms_ItemStack__init_2($var1, nms_Item_bucketEmpty);
                    return $var1;
                }
                if (!$var24.$sideHit)
                    $var26 = $var26 + (-1) | 0;
                if ($var24.$sideHit == 1)
                    $var26 = $var26 + 1 | 0;
                if ($var24.$sideHit == 2)
                    $var27 = $var27 + (-1) | 0;
                if ($var24.$sideHit == 3)
                    $var27 = $var27 + 1 | 0;
                if ($var24.$sideHit == 4)
                    $var25 = $var25 + (-1) | 0;
                if ($var24.$sideHit == 5)
                    $var25 = $var25 + 1 | 0;
                if (!nms_World_getBlockId($var2, $var25, $var26, $var27))
                    break a;
                if (!nms_World_getBlockMaterial($var2, $var25, $var26, $var27).$func_878_a())
                    break a;
            }
        }
        return $var1;
    }
    d: {
        if ($var2.$worldProvider.$field_6479_d) {
            var$18 = $this.$isFull;
            nms_Block_$callClinit();
            if (var$18 == nms_Block_waterStill.$blockID) {
                nms_World_playSoundEffect($var2, $var7 + 0.5, $var9 + 0.5, $var11 + 0.5, $rt_s(279), 0.5, 2.5999999046325684 + (ju_Random_nextFloat($var2.$rand1) - ju_Random_nextFloat($var2.$rand1)) * 0.800000011920929);
                $var28 = 0;
                while ($var28 < 8) {
                    nms_World_spawnParticle($var2, $rt_s(280), $var25 + jl_Math_random(), $var26 + jl_Math_random(), $var27 + jl_Math_random(), 0.0, 0.0, 0.0);
                    $var28 = $var28 + 1 | 0;
                }
                break d;
            }
        }
        nms_World_setBlockAndMetadataWithNotify($var2, $var25, $var26, $var27, $this.$isFull, 0);
    }
    $var1 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_2($var1, nms_Item_bucketEmpty);
    return $var1;
}
function nms_ItemMinecart() {
    nms_Item.call(this);
    this.$field_317_a = 0;
}
function nms_ItemMinecart__init_(var_0, var_1) {
    var var_2 = new nms_ItemMinecart();
    nms_ItemMinecart__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemMinecart__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
    $this.$field_317_a = $var2;
}
function nms_ItemMinecart_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, var$9, var$10, var$11;
    $var8 = nms_World_getBlockId($var3, $var4, $var5, $var6);
    nms_Block_$callClinit();
    if ($var8 != nms_Block_minecartTrack.$blockID)
        return 0;
    $var2 = new nms_EntityMinecart;
    var$9 = $var4 + 0.5;
    var$10 = $var5 + 0.5;
    var$11 = $var6 + 0.5;
    $var5 = $this.$field_317_a;
    nms_Entity__init_($var2, $var3);
    $var2.$cargoItems = $rt_createArray(nms_ItemStack, 36);
    $var2.$a = 0;
    $var2.$b0 = 0;
    $var2.$c = 1;
    $var2.$field_856_i = 0;
    $var2.$field_618_ad = 1;
    nms_Entity_setSize($var2, 0.9800000190734863, 0.699999988079071);
    $var2.$yOffset = $var2.$height / 2.0;
    $var2.$entityWalks = 0;
    nms_Entity_setPosition($var2, var$9, var$10 + $var2.$yOffset, var$11);
    $var2.$motionX = 0.0;
    $var2.$motionY = 0.0;
    $var2.$motionZ = 0.0;
    $var2.$prevPosX = var$9;
    $var2.$prevPosY = var$10;
    $var2.$prevPosZ = var$11;
    $var2.$d = $var5;
    nms_World_entityJoinedWorld($var3, $var2);
    $var1.$stackSize = $var1.$stackSize - 1 | 0;
    return 1;
}
function nms_ItemSaddle() {
    nms_Item.call(this);
}
function nms_ItemSaddle__init_(var_0) {
    var var_1 = new nms_ItemSaddle();
    nms_ItemSaddle__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemSaddle__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
    $this.$maxDamage = 64;
}
function nms_ItemSaddle_func_4019_b($this, $var1, $var2) {
    var $var3;
    if ($var2 instanceof nms_EntityPig) {
        $var3 = $var2;
        if (!$var3.$rideable) {
            $var3.$rideable = 1;
            $var1.$stackSize = $var1.$stackSize - 1 | 0;
        }
    }
}
function nms_ItemSaddle_hitEntity($this, $var1, $var2) {
    nms_ItemSaddle_func_4019_b($this, $var1, $var2);
}
function nms_ItemRedstone() {
    nms_Item.call(this);
}
function nms_ItemRedstone__init_(var_0) {
    var var_1 = new nms_ItemRedstone();
    nms_ItemRedstone__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemRedstone__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
}
function nms_ItemRedstone_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    if (!$var7)
        $var5 = $var5 + (-1) | 0;
    if ($var7 == 1)
        $var5 = $var5 + 1 | 0;
    if ($var7 == 2)
        $var6 = $var6 + (-1) | 0;
    if ($var7 == 3)
        $var6 = $var6 + 1 | 0;
    if ($var7 == 4)
        $var4 = $var4 + (-1) | 0;
    if ($var7 == 5)
        $var4 = $var4 + 1 | 0;
    if (nms_World_getBlockId($var3, $var4, $var5, $var6))
        return 0;
    nms_Block_$callClinit();
    if (nms_Block_redstoneWire.$canPlaceBlockAt($var3, $var4, $var5, $var6)) {
        $var1.$stackSize = $var1.$stackSize - 1 | 0;
        nms_World_setBlockWithNotify($var3, $var4, $var5, $var6, nms_Block_redstoneWire.$blockID);
    }
    return 1;
}
function nms_ItemSnowball() {
    nms_Item.call(this);
}
function nms_ItemSnowball__init_(var_0) {
    var var_1 = new nms_ItemSnowball();
    nms_ItemSnowball__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemSnowball__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 16;
}
function nms_ItemSnowball_onItemRightClick($this, $var1, $var2, $var3) {
    $var1.$stackSize = $var1.$stackSize - 1 | 0;
    nms_Item_$callClinit();
    nms_World_playSoundAtEntity($var2, $var3, $rt_s(345), 0.5, 0.4000000059604645 / (ju_Random_nextFloat(nms_Item_itemRand) * 0.4000000059604645 + 0.800000011920929));
    nms_World_entityJoinedWorld($var2, nms_EntitySnowball__init_($var2, $var3));
    return $var1;
}
function nms_ItemBoat() {
    nms_Item.call(this);
}
function nms_ItemBoat__init_(var_0) {
    var var_1 = new nms_ItemBoat();
    nms_ItemBoat__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemBoat__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxStackSize = 1;
}
function nms_ItemBoat_onItemRightClick($this, $var1, $var2, $var3) {
    var $var5, $var6, $var13, $var14, $var15, $var16, $var17, $var24, $var25, $var26, $var27, $var7, $var9, $var11;
    $var5 = $var3.$prevRotationPitch + ($var3.$rotationPitch - $var3.$prevRotationPitch) * 1.0;
    $var6 = $var3.$prevRotationYaw + ($var3.$rotationYaw - $var3.$prevRotationYaw) * 1.0;
    $var13 = nms_Vec3D_createVector($var3.$prevPosX + ($var3.$posX - $var3.$prevPosX) * 1.0, $var3.$prevPosY + ($var3.$posY - $var3.$prevPosY) * 1.0 + 1.62 - $var3.$yOffset, $var3.$prevPosZ + ($var3.$posZ - $var3.$prevPosZ) * 1.0);
    $var6 =  -$var6 * 0.01745329238474369 - 3.1415927410125732;
    $var14 = nms_MathHelper_cos($var6);
    $var15 = nms_MathHelper_sin($var6);
    $var6 =  -$var5 * 0.01745329238474369;
    $var16 =  -nms_MathHelper_cos($var6);
    $var17 = nms_MathHelper_sin($var6);
    $var24 = nms_World_rayTraceBlocks0($var2, $var13, nms_Vec3D_addVector($var13, $var15 * $var16 * 5.0, $var17 * 5.0, $var14 * $var16 * 5.0), 1);
    if ($var24 === null)
        return $var1;
    if (!$var24.$typeOfHit) {
        $var25 = $var24.$blockX;
        $var26 = $var24.$blockY;
        $var27 = $var24.$blockZ;
        $var3 = new nms_EntityBoat;
        $var7 = $var25 + 0.5;
        $var9 = $var26 + 1.5;
        $var11 = $var27 + 0.5;
        nms_Entity__init_($var3, $var2);
        $var3.$field_807_a = 0;
        $var3.$field_806_b = 0;
        $var3.$field_808_c = 1;
        $var3.$field_618_ad = 1;
        nms_Entity_setSize($var3, 1.5, 0.6000000238418579);
        $var3.$yOffset = $var3.$height / 2.0;
        $var3.$entityWalks = 0;
        nms_Entity_setPosition($var3, $var7, $var9 + $var3.$yOffset, $var11);
        $var3.$motionX = 0.0;
        $var3.$motionY = 0.0;
        $var3.$motionZ = 0.0;
        $var3.$prevPosX = $var7;
        $var3.$prevPosY = $var9;
        $var3.$prevPosZ = $var11;
        nms_World_entityJoinedWorld($var2, $var3);
        $var1.$stackSize = $var1.$stackSize - 1 | 0;
    }
    return $var1;
}
function nms_ItemReed() {
    nms_Item.call(this);
    this.$field_320_a = 0;
}
function nms_ItemReed__init_(var_0, var_1) {
    var var_2 = new nms_ItemReed();
    nms_ItemReed__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemReed__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$field_320_a = $var2.$blockID;
}
function nms_ItemReed_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var var$8, $var8;
    var$8 = nms_World_getBlockId($var3, $var4, $var5, $var6);
    nms_Block_$callClinit();
    if (var$8 == nms_Block_snow.$blockID)
        $var7 = 0;
    else {
        if (!$var7)
            $var5 = $var5 + (-1) | 0;
        if ($var7 == 1)
            $var5 = $var5 + 1 | 0;
        if ($var7 == 2)
            $var6 = $var6 + (-1) | 0;
        if ($var7 == 3)
            $var6 = $var6 + 1 | 0;
        if ($var7 == 4)
            $var4 = $var4 + (-1) | 0;
        if ($var7 == 5)
            $var4 = $var4 + 1 | 0;
    }
    if (!$var1.$stackSize)
        return 0;
    if (nms_World_canBlockBePlacedAt($var3, $this.$field_320_a, $var4, $var5, $var6, 0)) {
        $var8 = nms_Block_blocksList.data[$this.$field_320_a];
        if (nms_World_setBlockWithNotify($var3, $var4, $var5, $var6, $this.$field_320_a)) {
            nms_Block_blocksList.data[$this.$field_320_a].$onBlockPlaced($var3, $var4, $var5, $var6, $var7);
            nms_World_playSoundEffect($var3, $var4 + 0.5, $var5 + 0.5, $var6 + 0.5, nms_StepSound_func_1145_d($var8.$stepSound), ($var8.$stepSound.$field_1677_b + 1.0) / 2.0, $var8.$stepSound.$field_1679_c * 0.800000011920929);
            $var1.$stackSize = $var1.$stackSize - 1 | 0;
        }
    }
    return 1;
}
function nms_ItemFishingRod() {
    nms_Item.call(this);
}
function nms_ItemFishingRod__init_(var_0) {
    var var_1 = new nms_ItemFishingRod();
    nms_ItemFishingRod__init_0(var_1, var_0);
    return var_1;
}
function nms_ItemFishingRod__init_0($this, $var1) {
    nms_Item__init_0($this, $var1);
    $this.$maxDamage = 64;
}
function nms_ItemFishingRod_isFull3D($this) {
    return 1;
}
function nms_ItemFishingRod_shouldRotateAroundWhenRendering($this) {
    return 1;
}
function nms_ItemFishingRod_onItemRightClick($this, $var1, $var2, $var3) {
    if ($var3.$fishEntity !== null) {
        nms_ItemStack_damageItem($var1, nms_EntityFish_func_4043_i($var3.$fishEntity));
        nms_EntityPlayer_func_457_w($var3);
    } else {
        nms_Item_$callClinit();
        nms_World_playSoundAtEntity($var2, $var3, $rt_s(345), 0.5, 0.4000000059604645 / (ju_Random_nextFloat(nms_Item_itemRand) * 0.4000000059604645 + 0.800000011920929));
        nms_World_entityJoinedWorld($var2, nms_EntityFish__init_($var2, $var3));
        nms_EntityPlayer_func_457_w($var3);
    }
    return $var1;
}
function nms_ItemRecord() {
    nms_Item.call(this);
    this.$recordName = null;
}
function nms_ItemRecord__init_(var_0, var_1) {
    var var_2 = new nms_ItemRecord();
    nms_ItemRecord__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemRecord__init_0($this, $var1, $var2) {
    nms_Item__init_0($this, $var1);
    $this.$recordName = $var2;
    $this.$maxStackSize = 1;
}
function nms_ItemRecord_onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    $var7 = nms_World_getBlockId($var3, $var4, $var5, $var6);
    nms_Block_$callClinit();
    if ($var7 == nms_Block_jukebox.$blockID && !nms_World_getBlockMetadata($var3, $var4, $var5, $var6)) {
        $var7 = $this.$shiftedIndex;
        nms_Item_$callClinit();
        nms_World_setBlockMetadataWithNotify($var3, $var4, $var5, $var6, ($var7 - nms_Item_record13.$shiftedIndex | 0) + 1 | 0);
        nms_World_playRecord($var3, $this.$recordName, $var4, $var5, $var6);
        $var1.$stackSize = $var1.$stackSize - 1 | 0;
        return 1;
    }
    return 0;
}
function ju_GregorianCalendar() {
    var a = this; ju_Calendar.call(a);
    a.$gregorianCutover = Long_ZERO;
    a.$changeYear = 0;
    a.$julianSkew = 0;
    a.$isCached = 0;
    a.$cachedFields = null;
    a.$nextMidnightMillis = Long_ZERO;
    a.$lastMidnightMillis = Long_ZERO;
    a.$currentYearSkew = 0;
    a.$lastYearSkew = 0;
}
var ju_GregorianCalendar_daysInMonth = null;
var ju_GregorianCalendar_daysInYear = null;
var ju_GregorianCalendar_maximums = null;
var ju_GregorianCalendar_minimums = null;
var ju_GregorianCalendar_leastMaximums = null;
function ju_GregorianCalendar__init_0() {
    var var_0 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_(var_0);
    return var_0;
}
function ju_GregorianCalendar__init_1(var_0) {
    var var_1 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_2(var_1, var_0);
    return var_1;
}
function ju_GregorianCalendar__init_3(var_0, var_1) {
    var var_2 = new ju_GregorianCalendar();
    ju_GregorianCalendar__init_4(var_2, var_0, var_1);
    return var_2;
}
function ju_GregorianCalendar__init_($this) {
    var var$1, var$2;
    var$1 = ju_Locale_defaultLocale;
    if (ju_TimeZone_defaultTz === null) {
        var$2 = otcit_DateTimeZoneProvider_detectTimezone();
        if (var$2 === null)
            ju_TimeZone_defaultTz = ju_TimeZone_getTimeZone($rt_s(346));
        else
            ju_TimeZone_defaultTz = ju_IANATimeZone__init_(var$2);
    }
    ju_GregorianCalendar__init_4($this, ju_IANATimeZone_clone(ju_TimeZone_defaultTz), var$1);
}
function ju_GregorianCalendar__init_2($this, $zone) {
    ju_GregorianCalendar__init_4($this, $zone, ju_Locale_defaultLocale);
}
function ju_GregorianCalendar__init_4($this, $timezone, $locale) {
    var var$3, var$4, var$5, var$6;
    $this.$fields = $rt_createIntArray(17);
    $this.$isSet = $rt_createBooleanArray(17);
    $this.$areFieldsSet = 0;
    $this.$isTimeSet = 0;
    $this.$lenient = 1;
    ju_Calendar_setTimeZone($this, $timezone);
    $this.$fields = $rt_createIntArray(17);
    $this.$isSet = $rt_createBooleanArray(17);
    $this.$areFieldsSet = 0;
    $this.$isTimeSet = 0;
    $this.$lenient = 1;
    if ($locale === ju_Calendar_cacheFor && ju_Calendar_firstDayOfWeekCache >= 0)
        var$3 = ju_Calendar_firstDayOfWeekCache;
    else {
        $timezone = otciu_CLDRHelper_resolveCountry($locale.$languageCode, $locale.$countryCode);
        if (otciu_CLDRHelper_$$metadata$$13 === null)
            otciu_CLDRHelper_$$metadata$$13 = otciu_CLDRHelper_getFirstDayOfWeek$$create();
        var$4 = otciu_CLDRHelper_$$metadata$$13;
        ju_Calendar_firstDayOfWeekCache = var$4.hasOwnProperty($rt_ustr($timezone)) ? var$4[$rt_ustr($timezone)].value : var$4[$rt_ustr($rt_s(347))].value;
        var$3 = ju_Calendar_firstDayOfWeekCache;
    }
    ju_GregorianCalendar_setFirstDayOfWeek($this, var$3);
    if ($locale === ju_Calendar_cacheFor && ju_Calendar_minimalDaysInFirstWeekCache >= 0)
        var$3 = ju_Calendar_minimalDaysInFirstWeekCache;
    else {
        $timezone = otciu_CLDRHelper_resolveCountry($locale.$languageCode, $locale.$countryCode);
        if (otciu_CLDRHelper_$$metadata$$12 === null)
            otciu_CLDRHelper_$$metadata$$12 = otciu_CLDRHelper_getMinimalDaysInFirstWeek$$create();
        var$4 = otciu_CLDRHelper_$$metadata$$12;
        ju_Calendar_minimalDaysInFirstWeekCache = var$4.hasOwnProperty($rt_ustr($timezone)) ? var$4[$rt_ustr($timezone)].value : var$4[$rt_ustr($rt_s(347))].value;
        var$3 = ju_Calendar_minimalDaysInFirstWeekCache;
    }
    ju_GregorianCalendar_setMinimalDaysInFirstWeek($this, var$3);
    ju_Calendar_cacheFor = $locale;
    $this.$gregorianCutover = new Long(4184124416, 4294964450);
    $this.$changeYear = 1582;
    $this.$julianSkew = ((($this.$changeYear - 2000 | 0) / 400 | 0) + ju_GregorianCalendar_julianError($this) | 0) - (($this.$changeYear - 2000 | 0) / 100 | 0) | 0;
    var$5 = $rt_createIntArray(10);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = 0;
    var$6[3] = 0;
    var$6[4] = 0;
    var$6[5] = 0;
    var$6[6] = 0;
    var$6[7] = 0;
    var$6[8] = 0;
    var$6[9] = 0;
    $this.$cachedFields = var$5;
    $this.$currentYearSkew = 10;
    ju_Calendar_setTimeInMillis($this, jl_System_currentTimeMillis());
}
function ju_GregorianCalendar_add($this, $field, $value) {
    var $multiplier, $offset, $newOffset, $month, $days, var$8;
    if (!$value)
        return;
    if ($field >= 0 && $field < 15) {
        $this.$isCached = 0;
        if (!$field) {
            ju_Calendar_complete($this);
            if ($this.$fields.data[0] != 1) {
                if ($value <= 0)
                    return;
                ju_Calendar_set($this, 0, 1);
            } else {
                if ($value >= 0)
                    return;
                ju_Calendar_set($this, 0, 0);
            }
            ju_Calendar_complete($this);
            return;
        }
        if ($field != 1 && $field != 2) {
            a: {
                $multiplier = Long_ZERO;
                ju_Calendar_getTimeInMillis($this);
                switch ($field) {
                    case 3:
                    case 4:
                    case 8:
                        $multiplier = Long_fromInt(604800000);
                        break a;
                    case 5:
                    case 6:
                    case 7:
                        $multiplier = Long_fromInt(86400000);
                        break a;
                    case 9:
                        $multiplier = Long_fromInt(43200000);
                        break a;
                    case 10:
                    case 11:
                        $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), Long_fromInt(3600000)));
                        break a;
                    case 12:
                        $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), Long_fromInt(60000)));
                        break a;
                    case 13:
                        $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), Long_fromInt(1000)));
                        break a;
                    case 14:
                        $this.$time = Long_add($this.$time, Long_fromInt($value));
                        break a;
                    default:
                }
            }
            if (Long_gt($multiplier, Long_ZERO)) {
                $offset = ju_GregorianCalendar_getTimeZoneOffset($this, $this.$time);
                $this.$time = Long_add($this.$time, Long_mul(Long_fromInt($value), $multiplier));
                $newOffset = ju_GregorianCalendar_getTimeZoneOffset($this, $this.$time);
                if ($newOffset != $offset)
                    $this.$time = Long_add($this.$time, Long_fromInt($offset - $newOffset | 0));
            }
            $this.$areFieldsSet = 0;
            ju_Calendar_complete($this);
            return;
        }
        ju_Calendar_complete($this);
        if ($field == 2) {
            $month = $this.$fields.data[2] + $value | 0;
            if ($month >= 0)
                $value = $month / 12 | 0;
            else {
                $value = ($month - 11 | 0) / 12 | 0;
                $month = 12 + ($month % 12 | 0) | 0;
            }
            ju_Calendar_set($this, 2, $month % 12 | 0);
        }
        ju_Calendar_set($this, 1, $this.$fields.data[1] + $value | 0);
        $days = ju_GregorianCalendar_daysInMonth0($this, ju_GregorianCalendar_isLeapYear($this, $this.$fields.data[1]), $this.$fields.data[2]);
        if ($this.$fields.data[5] > $days)
            ju_Calendar_set($this, 5, $days);
        ju_Calendar_complete($this);
        return;
    }
    var$8 = new jl_IllegalArgumentException;
    jl_Throwable__init_0(var$8);
    $rt_throw(var$8);
}
function ju_GregorianCalendar_fullFieldsCalc($this, $timeVal, $millis, $zoneOffset) {
    var $days, var$5, var$6, $dayOfYear, $month, $leapYear, $date, $dstOffset, var$12, $daysFromStart, $week;
    $days = Long_div($timeVal, Long_fromInt(86400000));
    if ($millis < 0) {
        $millis = $millis + 86400000 | 0;
        $days = Long_sub($days, Long_fromInt(1));
    }
    $millis = $millis + $zoneOffset | 0;
    while ($millis < 0) {
        $millis = $millis + 86400000 | 0;
        $days = Long_sub($days, Long_fromInt(1));
    }
    while ($millis >= 86400000) {
        $millis = $millis - 86400000 | 0;
        $days = Long_add($days, Long_fromInt(1));
    }
    var$5 = Long_fromInt($zoneOffset);
    var$6 = Long_add($timeVal, var$5);
    $dayOfYear = ju_GregorianCalendar_computeYearAndDay($this, $days, var$6);
    $this.$fields.data[6] = $dayOfYear;
    if ($this.$fields.data[1] == $this.$changeYear && Long_le($this.$gregorianCutover, var$6))
        $dayOfYear = $dayOfYear + $this.$currentYearSkew | 0;
    $month = $dayOfYear / 32 | 0;
    $leapYear = ju_GregorianCalendar_isLeapYear($this, $this.$fields.data[1]);
    $date = $dayOfYear - ju_GregorianCalendar_daysInYear0($this, $leapYear, $month) | 0;
    if ($date > ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month)) {
        $date = $date - ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month) | 0;
        $month = $month + 1 | 0;
    }
    $this.$fields.data[7] = ju_GregorianCalendar_mod7($this, Long_sub($days, Long_fromInt(3))) + 1 | 0;
    $dstOffset = ju_GregorianCalendar_getTimeZoneOffset($this, $timeVal);
    if ($this.$fields.data[1] > 0)
        $dstOffset = $dstOffset - $zoneOffset | 0;
    $this.$fields.data[16] = $dstOffset;
    if (!$dstOffset)
        var$6 = $days;
    else {
        $millis = $millis + $dstOffset | 0;
        if ($millis < 0) {
            $millis = $millis + 86400000 | 0;
            var$6 = Long_sub($days, Long_fromInt(1));
        } else if ($millis < 86400000)
            var$6 = $days;
        else {
            $millis = $millis - 86400000 | 0;
            var$6 = Long_add($days, Long_fromInt(1));
        }
        if (Long_ne($days, var$6)) {
            $timeVal = Long_add(Long_sub($timeVal, var$5), Long_fromInt($dstOffset));
            $zoneOffset = ju_GregorianCalendar_computeYearAndDay($this, var$6, $timeVal);
            $this.$fields.data[6] = $zoneOffset;
            if ($this.$fields.data[1] == $this.$changeYear && Long_le($this.$gregorianCutover, $timeVal))
                $zoneOffset = $zoneOffset + $this.$currentYearSkew | 0;
            $month = $zoneOffset / 32 | 0;
            $leapYear = ju_GregorianCalendar_isLeapYear($this, $this.$fields.data[1]);
            $date = $zoneOffset - ju_GregorianCalendar_daysInYear0($this, $leapYear, $month) | 0;
            if ($date > ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month)) {
                $date = $date - ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month) | 0;
                $month = $month + 1 | 0;
            }
            $this.$fields.data[7] = ju_GregorianCalendar_mod7($this, Long_sub(var$6, Long_fromInt(3))) + 1 | 0;
        }
    }
    $this.$fields.data[14] = $millis % 1000 | 0;
    $millis = $millis / 1000 | 0;
    $this.$fields.data[13] = $millis % 60 | 0;
    $millis = $millis / 60 | 0;
    $this.$fields.data[12] = $millis % 60 | 0;
    $this.$fields.data[11] = ($millis / 60 | 0) % 24 | 0;
    var$12 = $this.$fields;
    var$12.data[9] = $this.$fields.data[11] <= 11 ? 0 : 1;
    $this.$fields.data[10] = $this.$fields.data[11] % 12 | 0;
    if ($this.$fields.data[1] > 0)
        $this.$fields.data[0] = 1;
    else {
        $this.$fields.data[0] = 0;
        $this.$fields.data[1] =  -$this.$fields.data[1] + 1 | 0;
    }
    $this.$fields.data[2] = $month;
    $this.$fields.data[5] = $date;
    var$12 = $this.$fields.data;
    $zoneOffset = $date - 1 | 0;
    var$12[8] = ($zoneOffset / 7 | 0) + 1 | 0;
    $this.$fields.data[4] = (($zoneOffset + ju_GregorianCalendar_mod7($this, Long_sub(Long_sub(Long_sub(var$6, Long_fromInt($date)), Long_fromInt(2)), Long_fromInt(ju_Calendar_getFirstDayOfWeek($this) - 1 | 0))) | 0) / 7 | 0) + 1 | 0;
    $daysFromStart = ju_GregorianCalendar_mod7($this, Long_sub(Long_sub(Long_sub(var$6, Long_fromInt(3)), Long_fromInt($this.$fields.data[6] - 1 | 0)), Long_fromInt(ju_Calendar_getFirstDayOfWeek($this) - 1 | 0)));
    $week = ((($this.$fields.data[6] - 1 | 0) + $daysFromStart | 0) / 7 | 0) + ((7 - $daysFromStart | 0) < ju_Calendar_getMinimalDaysInFirstWeek($this) ? 0 : 1) | 0;
    if (!$week) {
        var$12 = $this.$fields;
        $month = !ju_GregorianCalendar_isLeapYear($this, $this.$fields.data[1] - 1 | 0) ? 1 : 2;
        var$12.data[3] = (7 - ju_GregorianCalendar_mod7($this, Long_fromInt($daysFromStart - $month | 0)) | 0) < ju_Calendar_getMinimalDaysInFirstWeek($this) ? 52 : 53;
    } else {
        $millis = $this.$fields.data[6];
        $zoneOffset = !$leapYear ? 366 : 367;
        $month = !$leapYear ? 1 : 2;
        if ($millis < ($zoneOffset - ju_GregorianCalendar_mod7($this, Long_fromInt($daysFromStart + $month | 0)) | 0))
            $this.$fields.data[3] = $week;
        else {
            var$12 = $this.$fields;
            $month = !$leapYear ? 1 : 2;
            if ((7 - ju_GregorianCalendar_mod7($this, Long_fromInt($daysFromStart + $month | 0)) | 0) >= ju_Calendar_getMinimalDaysInFirstWeek($this))
                $week = 1;
            var$12.data[3] = $week;
        }
    }
}
function ju_GregorianCalendar_cachedFieldsCheckAndGet($this, $timeVal, $newTimeMillis, $newTimeMillisAdjusted, $millis, $zoneOffset) {
    var $dstOffset;
    a: {
        b: {
            $dstOffset = $this.$fields.data[16];
            if ($this.$isCached && Long_lt($newTimeMillis, $this.$nextMidnightMillis) && Long_gt($newTimeMillis, $this.$lastMidnightMillis) && $this.$cachedFields.data[4] == $zoneOffset && !(!$dstOffset && Long_ge($newTimeMillisAdjusted, $this.$nextMidnightMillis))) {
                if (!$dstOffset)
                    break b;
                if (Long_gt($newTimeMillisAdjusted, $this.$lastMidnightMillis))
                    break b;
            }
            ju_GregorianCalendar_fullFieldsCalc($this, $timeVal, $millis, $zoneOffset);
            $this.$isCached = 0;
            break a;
        }
        $this.$fields.data[1] = $this.$cachedFields.data[0];
        $this.$fields.data[2] = $this.$cachedFields.data[1];
        $this.$fields.data[5] = $this.$cachedFields.data[2];
        $this.$fields.data[7] = $this.$cachedFields.data[3];
        $this.$fields.data[0] = $this.$cachedFields.data[5];
        $this.$fields.data[3] = $this.$cachedFields.data[6];
        $this.$fields.data[4] = $this.$cachedFields.data[7];
        $this.$fields.data[6] = $this.$cachedFields.data[8];
        $this.$fields.data[8] = $this.$cachedFields.data[9];
    }
}
function ju_GregorianCalendar_getTimeZoneOffset($this, $localTime) {
    return ju_IANATimeZone_getOffset($this.$zone, $localTime);
}
function ju_GregorianCalendar_computeFields($this) {
    var $zoneOffset, $millis, $dstOffset, $offset, $newTime, $i, var$7, var$8;
    $zoneOffset = ju_GregorianCalendar_getTimeZoneOffset($this, $this.$time);
    if (!$this.$isSet.data[15])
        $this.$fields.data[15] = $zoneOffset;
    $millis = Long_rem($this.$time, Long_fromInt(86400000)).lo;
    $dstOffset = $this.$fields.data[16];
    $offset = $zoneOffset + $dstOffset | 0;
    $newTime = Long_add($this.$time, Long_fromInt($offset));
    if (Long_gt($this.$time, Long_ZERO) && Long_lt($newTime, Long_ZERO) && $offset > 0)
        $newTime = new Long(4294967295, 2147483647);
    else if (Long_lt($this.$time, Long_ZERO) && Long_gt($newTime, Long_ZERO) && $offset < 0)
        $newTime = new Long(0, 2147483648);
    if (!$this.$isCached)
        ju_GregorianCalendar_fullFieldsCalc($this, $this.$time, $millis, $zoneOffset);
    else {
        $offset = (($millis >= 0 ? $millis : $millis + 86400000 | 0) + $zoneOffset | 0) + $dstOffset | 0;
        if ($offset < 0)
            $offset = $offset + 86400000 | 0;
        else if ($offset >= 86400000)
            $offset = $offset - 86400000 | 0;
        $this.$fields.data[14] = $offset % 1000 | 0;
        $offset = $offset / 1000 | 0;
        $this.$fields.data[13] = $offset % 60 | 0;
        $i = $offset / 60 | 0;
        $this.$fields.data[12] = $i % 60 | 0;
        $this.$fields.data[11] = ($i / 60 | 0) % 24 | 0;
        var$7 = $this.$fields;
        var$7.data[9] = $this.$fields.data[11] <= 11 ? 0 : 1;
        $this.$fields.data[10] = $this.$fields.data[11] % 12 | 0;
        $offset = Long_compare($newTime, Long_ZERO);
        var$8 = $offset > 0 && $offset < 0 && !$dstOffset ? new Long(4294967295, 2147483647) : $offset >= 0 ? $newTime : $offset <= 0 ? $newTime : $dstOffset ? new Long(0, 2147483648) : $newTime;
        ju_GregorianCalendar_cachedFieldsCheckAndGet($this, $this.$time, $newTime, var$8, $millis, $zoneOffset);
    }
    $i = 0;
    while ($i < 17) {
        $this.$isSet.data[$i] = 1;
        $i = $i + 1 | 0;
    }
    if (!$this.$isCached && Long_ne($newTime, new Long(4294967295, 2147483647)) && Long_ne($newTime, new Long(0, 2147483648))) {
        $this.$cachedFields.data[0] = $this.$fields.data[1];
        $this.$cachedFields.data[1] = $this.$fields.data[2];
        $this.$cachedFields.data[2] = $this.$fields.data[5];
        $this.$cachedFields.data[3] = $this.$fields.data[7];
        $this.$cachedFields.data[4] = $zoneOffset;
        $this.$cachedFields.data[5] = $this.$fields.data[0];
        $this.$cachedFields.data[6] = $this.$fields.data[3];
        $this.$cachedFields.data[7] = $this.$fields.data[4];
        $this.$cachedFields.data[8] = $this.$fields.data[6];
        $this.$cachedFields.data[9] = $this.$fields.data[8];
        $this.$nextMidnightMillis = Long_add($newTime, Long_fromInt(((0 + ((((23 - $this.$fields.data[11] | 0) * 60 | 0) * 60 | 0) * 1000 | 0) | 0) + (((59 - $this.$fields.data[12] | 0) * 60 | 0) * 1000 | 0) | 0) + ((59 - $this.$fields.data[13] | 0) * 1000 | 0) | 0));
        $this.$lastMidnightMillis = Long_sub($newTime, Long_fromInt((((($this.$fields.data[11] * 60 | 0) * 60 | 0) * 1000 | 0) + (($this.$fields.data[12] * 60 | 0) * 1000 | 0) | 0) + ($this.$fields.data[13] * 1000 | 0) | 0));
        $this.$isCached = 1;
    }
}
function ju_GregorianCalendar_computeTime($this) {
    var $hour, $timeVal, $year, $weekMonthSet, $useMonth, $useWeekYear, $days, $dayOfWeek, $skew, $month, $leapYear, $useDate;
    a: {
        b: {
            c: {
                d: {
                    e: {
                        if (!ju_Calendar_isLenient($this)) {
                            f: {
                                if ($this.$isSet.data[11]) {
                                    if ($this.$fields.data[11] >= 0 && $this.$fields.data[11] <= 23)
                                        break f;
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                }
                                if ($this.$isSet.data[10]) {
                                    if ($this.$fields.data[10] < 0)
                                        break a;
                                    if ($this.$fields.data[10] > 11)
                                        break a;
                                }
                            }
                            if ($this.$isSet.data[12] && !($this.$fields.data[12] >= 0 && $this.$fields.data[12] <= 59))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[13]) {
                                if ($this.$fields.data[13] < 0)
                                    break b;
                                if ($this.$fields.data[13] > 59)
                                    break b;
                            }
                            if ($this.$isSet.data[14]) {
                                if ($this.$fields.data[14] < 0)
                                    break c;
                                if ($this.$fields.data[14] > 999)
                                    break c;
                            }
                            if ($this.$isSet.data[3] && !($this.$fields.data[3] >= 1 && $this.$fields.data[3] <= 53))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[7] && !($this.$fields.data[7] >= 1 && $this.$fields.data[7] <= 7))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[8] && !($this.$fields.data[8] >= 1 && $this.$fields.data[8] <= 6))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[4]) {
                                if ($this.$fields.data[4] < 1)
                                    break d;
                                if ($this.$fields.data[4] > 6)
                                    break d;
                            }
                            if ($this.$isSet.data[9] && $this.$fields.data[9] && $this.$fields.data[9] != 1)
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[10] && !($this.$fields.data[10] >= 0 && $this.$fields.data[10] <= 11))
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if ($this.$isSet.data[1]) {
                                if ($this.$isSet.data[0] && !$this.$fields.data[0] && !($this.$fields.data[1] >= 1 && $this.$fields.data[1] <= 292269054))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                if (!($this.$fields.data[1] >= 1 && $this.$fields.data[1] <= 292278994))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                            }
                            if ($this.$isSet.data[2]) {
                                if ($this.$fields.data[2] < 0)
                                    break e;
                                if ($this.$fields.data[2] > 11)
                                    break e;
                            }
                        }
                        $hour = Long_ZERO;
                        if ($this.$isSet.data[11] && $this.$lastTimeFieldSet != 10)
                            $hour = Long_fromInt($this.$fields.data[11]);
                        else if ($this.$isSet.data[10])
                            $hour = Long_fromInt(($this.$fields.data[9] * 12 | 0) + $this.$fields.data[10] | 0);
                        $timeVal = Long_mul($hour, Long_fromInt(3600000));
                        if ($this.$isSet.data[12])
                            $timeVal = Long_add($timeVal, Long_mul(Long_fromInt($this.$fields.data[12]), Long_fromInt(60000)));
                        if ($this.$isSet.data[13])
                            $timeVal = Long_add($timeVal, Long_mul(Long_fromInt($this.$fields.data[13]), Long_fromInt(1000)));
                        if ($this.$isSet.data[14])
                            $timeVal = Long_add($timeVal, Long_fromInt($this.$fields.data[14]));
                        $year = !$this.$isSet.data[1] ? 1970 : $this.$fields.data[1];
                        if ($this.$isSet.data[0]) {
                            if ($this.$fields.data[0] && $this.$fields.data[0] != 1)
                                $rt_throw(jl_IllegalArgumentException__init_0());
                            if (!$this.$fields.data[0])
                                $year = 1 - $year | 0;
                        }
                        $weekMonthSet = !$this.$isSet.data[4] && !$this.$isSet.data[8] ? 0 : 1;
                        $useMonth = !(!$this.$isSet.data[5] && !$this.$isSet.data[2] && !$weekMonthSet) && $this.$lastDateFieldSet != 6 ? 1 : 0;
                        if ($useMonth && !($this.$lastDateFieldSet != 7 && $this.$lastDateFieldSet != 3)) {
                            if ($this.$isSet.data[3] && $this.$isSet.data[7])
                                $useMonth = $this.$lastDateFieldSet != 3 && $weekMonthSet && $this.$isSet.data[7] ? 1 : 0;
                            else if ($this.$isSet.data[6])
                                $useMonth = $this.$isSet.data[5] && $this.$isSet.data[2] ? 1 : 0;
                        }
                        if (!$useMonth) {
                            $useWeekYear = $this.$isSet.data[3] && $this.$lastDateFieldSet != 6 ? 1 : 0;
                            if ($useWeekYear && $this.$isSet.data[6])
                                $useWeekYear = $this.$isSet.data[7];
                            $days = ju_GregorianCalendar_daysFromBaseYear($this, $year);
                            if ($useWeekYear) {
                                $dayOfWeek = !$this.$isSet.data[7] ? ju_Calendar_getFirstDayOfWeek($this) - 1 | 0 : $this.$fields.data[7] - 1 | 0;
                                $hour = Long_sub($days, Long_fromInt(3));
                                $skew = ju_GregorianCalendar_mod7($this, Long_sub($hour, Long_fromInt(ju_Calendar_getFirstDayOfWeek($this) - 1 | 0)));
                                $days = Long_add($days, Long_fromInt(((($this.$fields.data[3] - 1 | 0) * 7 | 0) + ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($skew + $dayOfWeek | 0), $hour)) | 0) - $skew | 0));
                                if ((7 - $skew | 0) < ju_Calendar_getMinimalDaysInFirstWeek($this))
                                    $days = Long_add($days, Long_fromInt(7));
                            } else if ($this.$isSet.data[6]) {
                                if (!ju_Calendar_isLenient($this) && !($this.$fields.data[6] >= 1 && $this.$fields.data[6] <= (365 + (!ju_GregorianCalendar_isLeapYear($this, $year) ? 0 : 1) | 0)))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                $days = Long_add($days, Long_fromInt($this.$fields.data[6] - 1 | 0));
                            } else if ($this.$isSet.data[7])
                                $days = Long_add($days, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($this.$fields.data[7] - 1 | 0), Long_sub($days, Long_fromInt(3))))));
                        } else {
                            $month = $this.$fields.data[2];
                            $year = $year + ($month / 12 | 0) | 0;
                            $month = $month % 12 | 0;
                            if ($month < 0) {
                                $year = $year + (-1) | 0;
                                $month = $month + 12 | 0;
                            }
                            $leapYear = ju_GregorianCalendar_isLeapYear($this, $year);
                            $days = Long_add(ju_GregorianCalendar_daysFromBaseYear($this, $year), Long_fromInt(ju_GregorianCalendar_daysInYear0($this, $leapYear, $month)));
                            $useDate = $this.$isSet.data[5];
                            if ($useDate && !($this.$lastDateFieldSet != 7 && $this.$lastDateFieldSet != 4 && $this.$lastDateFieldSet != 8))
                                $useDate = $this.$isSet.data[7] && $weekMonthSet ? 0 : 1;
                            if ($useDate) {
                                if (!ju_Calendar_isLenient($this) && !($this.$fields.data[5] >= 1 && $this.$fields.data[5] <= ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month)))
                                    $rt_throw(jl_IllegalArgumentException__init_0());
                                $days = Long_add($days, Long_fromInt($this.$fields.data[5] - 1 | 0));
                            } else {
                                $dayOfWeek = !$this.$isSet.data[7] ? ju_Calendar_getFirstDayOfWeek($this) - 1 | 0 : $this.$fields.data[7] - 1 | 0;
                                if ($this.$isSet.data[4] && $this.$lastDateFieldSet != 8) {
                                    $skew = ju_GregorianCalendar_mod7($this, Long_sub(Long_sub($days, Long_fromInt(3)), Long_fromInt(ju_Calendar_getFirstDayOfWeek($this) - 1 | 0)));
                                    $days = Long_add($days, Long_fromInt(((($this.$fields.data[4] - 1 | 0) * 7 | 0) + ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($skew + $dayOfWeek | 0), Long_sub($days, Long_fromInt(2)))) | 0) - $skew | 0));
                                } else if ($this.$isSet.data[8])
                                    $days = $this.$fields.data[8] >= 0 ? Long_add($days, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($dayOfWeek), Long_sub($days, Long_fromInt(3)))) + (($this.$fields.data[8] - 1 | 0) * 7 | 0) | 0)) : Long_add($days, Long_fromInt((ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month) + ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($dayOfWeek), Long_sub(Long_add($days, Long_fromInt(ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month))),
                                    Long_fromInt(3)))) | 0) + ($this.$fields.data[8] * 7 | 0) | 0));
                                else if ($this.$isSet.data[7]) {
                                    $hour = Long_sub($days, Long_fromInt(3));
                                    $skew = ju_GregorianCalendar_mod7($this, Long_sub($hour, Long_fromInt(ju_Calendar_getFirstDayOfWeek($this) - 1 | 0)));
                                    $days = Long_add($days, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_fromInt(ju_GregorianCalendar_mod7($this, Long_sub(Long_fromInt($skew + $dayOfWeek | 0), $hour)) - $skew | 0))));
                                }
                            }
                        }
                        $this.$lastDateFieldSet = 0;
                        $hour = Long_add($timeVal, Long_mul($days, Long_fromInt(86400000)));
                        if ($year == $this.$changeYear && Long_ge($hour, Long_add($this.$gregorianCutover, Long_mul(Long_fromInt(ju_GregorianCalendar_julianError($this)), Long_fromInt(86400000)))))
                            $hour = Long_sub($hour, Long_mul(Long_fromInt(ju_GregorianCalendar_julianError($this)), Long_fromInt(86400000)));
                        $this.$time = Long_sub($hour, Long_fromInt(ju_GregorianCalendar_getTimeZoneOffset($this, $hour)));
                        return;
                    }
                    $rt_throw(jl_IllegalArgumentException__init_0());
                }
                $rt_throw(jl_IllegalArgumentException__init_0());
            }
            $rt_throw(jl_IllegalArgumentException__init_0());
        }
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function ju_GregorianCalendar_computeYearAndDay($this, $dayCount, $localTime) {
    var $year, var$4, var$5;
    $year = 1970;
    $localTime = Long_ge($localTime, $this.$gregorianCutover) ? $dayCount : Long_sub($dayCount, Long_fromInt($this.$julianSkew));
    while (true) {
        var$4 = Long_div($localTime, Long_fromInt(365)).lo;
        if (!var$4)
            break;
        $year = $year + var$4 | 0;
        $localTime = Long_sub($dayCount, ju_GregorianCalendar_daysFromBaseYear($this, $year));
    }
    if (Long_lt($localTime, Long_ZERO)) {
        $year = $year - 1 | 0;
        var$5 = !ju_GregorianCalendar_isLeapYear($this, $year) ? 365 : 366;
        if ($year == $this.$changeYear)
            var$5 = var$5 - $this.$currentYearSkew | 0;
        if ($year == ($this.$changeYear - 1 | 0))
            var$5 = var$5 - $this.$lastYearSkew | 0;
        $localTime = Long_add($localTime, Long_fromInt(var$5));
    }
    $this.$fields.data[1] = $year;
    return $localTime.lo + 1 | 0;
}
function ju_GregorianCalendar_daysFromBaseYear($this, $iyear) {
    var $year, $days;
    $year = Long_fromInt($iyear);
    if (Long_lt($year, Long_fromInt(1970))) {
        if (Long_le($year, Long_fromInt($this.$changeYear)))
            return Long_add(Long_add(Long_mul(Long_sub($year, Long_fromInt(1970)), Long_fromInt(365)), Long_div(Long_sub($year, Long_fromInt(1972)), Long_fromInt(4))), Long_fromInt($this.$julianSkew));
        $days = Long_add(Long_mul(Long_sub($year, Long_fromInt(1970)), Long_fromInt(365)), Long_div(Long_sub($year, Long_fromInt(1972)), Long_fromInt(4)));
        $year = Long_sub($year, Long_fromInt(2000));
        return Long_add(Long_sub($days, Long_div($year, Long_fromInt(100))), Long_div($year, Long_fromInt(400)));
    }
    $days = Long_add(Long_mul(Long_sub($year, Long_fromInt(1970)), Long_fromInt(365)), Long_div(Long_sub($year, Long_fromInt(1969)), Long_fromInt(4)));
    return Long_gt($year, Long_fromInt($this.$changeYear)) ? Long_sub($days, Long_sub(Long_div(Long_sub($year, Long_fromInt(1901)), Long_fromInt(100)), Long_div(Long_sub($year, Long_fromInt(1601)), Long_fromInt(400)))) : Long_eq($year, Long_fromInt($this.$changeYear)) ? Long_add($days, Long_fromInt($this.$currentYearSkew)) : Long_ne($year, Long_fromInt($this.$changeYear - 1 | 0)) ? Long_add($days, Long_fromInt($this.$julianSkew)) : Long_add($days, Long_fromInt($this.$lastYearSkew));
}
function ju_GregorianCalendar_daysInMonth0($this, $leapYear, $month) {
    if ($leapYear && $month == 1)
        return ju_GregorianCalendar_daysInMonth.data[$month] + 1 | 0;
    return ju_GregorianCalendar_daysInMonth.data[$month];
}
function ju_GregorianCalendar_daysInYear0($this, $leapYear, $month) {
    if ($leapYear && $month > 1)
        return ju_GregorianCalendar_daysInYear.data[$month] + 1 | 0;
    return ju_GregorianCalendar_daysInYear.data[$month];
}
function ju_GregorianCalendar_isLeapYear($this, $year) {
    if ($year <= $this.$changeYear)
        return $year % 4 | 0 ? 0 : 1;
    a: {
        b: {
            if (!($year % 4 | 0)) {
                if ($year % 100 | 0)
                    break b;
                if (!($year % 400 | 0))
                    break b;
            }
            $year = 0;
            break a;
        }
        $year = 1;
    }
    return $year;
}
function ju_GregorianCalendar_julianError($this) {
    return (($this.$changeYear / 100 | 0) - ($this.$changeYear / 400 | 0) | 0) - 2 | 0;
}
function ju_GregorianCalendar_mod7($this, $num1) {
    var $rem;
    $rem = Long_rem($num1, Long_fromInt(7)).lo;
    if (Long_lt($num1, Long_ZERO) && $rem < 0)
        return $rem + 7 | 0;
    return $rem;
}
function ju_GregorianCalendar_setFirstDayOfWeek($this, $value) {
    $this.$firstDayOfWeek = $value;
    $this.$isCached = 0;
}
function ju_GregorianCalendar_setMinimalDaysInFirstWeek($this, $value) {
    $this.$minimalDaysInFirstWeek = $value;
    $this.$isCached = 0;
}
function ju_GregorianCalendar__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createByteArray(12);
    var$2 = var$1.data;
    var$2[0] = 31;
    var$2[1] = 28;
    var$2[2] = 31;
    var$2[3] = 30;
    var$2[4] = 31;
    var$2[5] = 30;
    var$2[6] = 31;
    var$2[7] = 31;
    var$2[8] = 30;
    var$2[9] = 31;
    var$2[10] = 30;
    var$2[11] = 31;
    ju_GregorianCalendar_daysInMonth = var$1;
    var$1 = $rt_createIntArray(12);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 31;
    var$2[2] = 59;
    var$2[3] = 90;
    var$2[4] = 120;
    var$2[5] = 151;
    var$2[6] = 181;
    var$2[7] = 212;
    var$2[8] = 243;
    var$2[9] = 273;
    var$2[10] = 304;
    var$2[11] = 334;
    ju_GregorianCalendar_daysInYear = var$1;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 292278994;
    var$2[2] = 11;
    var$2[3] = 53;
    var$2[4] = 6;
    var$2[5] = 31;
    var$2[6] = 366;
    var$2[7] = 7;
    var$2[8] = 6;
    var$2[9] = 1;
    var$2[10] = 11;
    var$2[11] = 23;
    var$2[12] = 59;
    var$2[13] = 59;
    var$2[14] = 999;
    var$2[15] = 50400000;
    var$2[16] = 7200000;
    ju_GregorianCalendar_maximums = var$1;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 0;
    var$2[3] = 1;
    var$2[4] = 0;
    var$2[5] = 1;
    var$2[6] = 1;
    var$2[7] = 1;
    var$2[8] = 1;
    var$2[9] = 0;
    var$2[10] = 0;
    var$2[11] = 0;
    var$2[12] = 0;
    var$2[13] = 0;
    var$2[14] = 0;
    var$2[15] = (-46800000);
    var$2[16] = 0;
    ju_GregorianCalendar_minimums = var$1;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 292269054;
    var$2[2] = 11;
    var$2[3] = 50;
    var$2[4] = 3;
    var$2[5] = 28;
    var$2[6] = 355;
    var$2[7] = 7;
    var$2[8] = 3;
    var$2[9] = 1;
    var$2[10] = 11;
    var$2[11] = 23;
    var$2[12] = 59;
    var$2[13] = 59;
    var$2[14] = 999;
    var$2[15] = 50400000;
    var$2[16] = 1200000;
    ju_GregorianCalendar_leastMaximums = var$1;
}
function cjj_Checksum() {
}
function cjj_Adler32() {
    var a = this; jl_Object.call(a);
    a.$s1 = Long_ZERO;
    a.$s2 = Long_ZERO;
}
function cjj_Adler32__init_0() {
    var var_0 = new cjj_Adler32();
    cjj_Adler32__init_(var_0);
    return var_0;
}
function cjj_Adler32__init_($this) {
    $this.$s1 = Long_fromInt(1);
    $this.$s2 = Long_ZERO;
}
function cjj_Adler32_reset($this, $init) {
    $this.$s1 = Long_and($init, Long_fromInt(65535));
    $this.$s2 = Long_and(Long_shr($init, 16), Long_fromInt(65535));
}
function cjj_Adler32_reset0($this) {
    $this.$s1 = Long_fromInt(1);
    $this.$s2 = Long_ZERO;
}
function cjj_Adler32_getValue($this) {
    return Long_or(Long_shl($this.$s2, 16), $this.$s1);
}
function cjj_Adler32_update($this, $buf, $index, $len) {
    var $len1, $len2, var$6, $k, var$8, var$9;
    if ($len == 1) {
        $buf = $buf.data;
        $this.$s1 = Long_add($this.$s1, Long_fromInt($buf[$index] & 255));
        $this.$s2 = Long_add($this.$s2, $this.$s1);
        $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
        $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
        return;
    }
    $len1 = $len / 5552 | 0;
    $len2 = $len % 5552 | 0;
    while (true) {
        var$6 = $len1 + (-1) | 0;
        if ($len1 <= 0)
            break;
        $k = 5552;
        while (true) {
            $len1 = $k + (-1) | 0;
            if ($k <= 0)
                break;
            var$8 = $buf.data;
            var$9 = $this.$s1;
            $len = $index + 1 | 0;
            $this.$s1 = Long_add(var$9, Long_fromInt(var$8[$index] & 255));
            $this.$s2 = Long_add($this.$s2, $this.$s1);
            $k = $len1;
            $index = $len;
        }
        $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
        $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
        $len1 = var$6;
    }
    while (true) {
        $len = $len2 + (-1) | 0;
        if ($len2 <= 0)
            break;
        var$8 = $buf.data;
        var$9 = $this.$s1;
        $len1 = $index + 1 | 0;
        $this.$s1 = Long_add(var$9, Long_fromInt(var$8[$index] & 255));
        $this.$s2 = Long_add($this.$s2, $this.$s1);
        $len2 = $len;
        $index = $len1;
    }
    $this.$s1 = Long_rem($this.$s1, Long_fromInt(65521));
    $this.$s2 = Long_rem($this.$s2, Long_fromInt(65521));
}
function nle_BaseNCodec$CodecPolicy() {
    jl_Enum.call(this);
}
var nle_BaseNCodec$CodecPolicy_STRICT = null;
var nle_BaseNCodec$CodecPolicy_LENIANT = null;
var nle_BaseNCodec$CodecPolicy_$VALUES = null;
function nle_BaseNCodec$CodecPolicy__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new nle_BaseNCodec$CodecPolicy;
    jl_Enum__init_0(var$1, $rt_s(348), 0);
    nle_BaseNCodec$CodecPolicy_STRICT = var$1;
    var$1 = new nle_BaseNCodec$CodecPolicy;
    jl_Enum__init_0(var$1, $rt_s(349), 1);
    nle_BaseNCodec$CodecPolicy_LENIANT = var$1;
    var$2 = $rt_createArray(nle_BaseNCodec$CodecPolicy, 2);
    var$3 = var$2.data;
    var$3[0] = nle_BaseNCodec$CodecPolicy_STRICT;
    var$3[1] = nle_BaseNCodec$CodecPolicy_LENIANT;
    nle_BaseNCodec$CodecPolicy_$VALUES = var$2;
}
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name3 = null;
}
var jn_ByteOrder_BIG_ENDIAN = null;
var jn_ByteOrder_LITTLE_ENDIAN = null;
function jn_ByteOrder__init_(var_0) {
    var var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
}
function jn_ByteOrder__init_0($this, $name) {
    $this.$name3 = $name;
}
function jn_ByteOrder__clinit_() {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(350));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(351));
}
function ju_TimeZone() {
    jl_Object.call(this);
    this.$id1 = null;
}
var ju_TimeZone_defaultTz = null;
var ju_TimeZone_GMT = null;
function ju_TimeZone_getTimeZone($name) {
    var $jodaZone, $sign, $position, $hour, $raw, var$7, $index, $minute;
    $jodaZone = otcit_DateTimeZoneProvider_getTimeZone($name);
    if ($jodaZone !== null)
        return ju_IANATimeZone__init_($jodaZone);
    a: {
        if (jl_String_startsWith($name, $rt_s(352)) && jl_String_length($name) > 3) {
            $sign = jl_String_charAt($name, 3);
            if (!($sign != 43 && $sign != 45)) {
                $position = $rt_createIntArray(1);
                $hour = 4;
                $jodaZone = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($jodaZone);
                $raw = jl_String_length($name);
                jl_StringBuilder_append($jodaZone, jl_String_substring0($name, 0, $hour));
                while ($hour < $raw) {
                    if (jl_Character_digit(jl_String_charAt($name, $hour), 10) != (-1)) {
                        jl_AbstractStringBuilder_append($jodaZone, jl_String_charAt($name, $hour));
                        if (($raw - ($hour + 1 | 0) | 0) == 2)
                            jl_AbstractStringBuilder_append($jodaZone, 58);
                    } else if (jl_String_charAt($name, $hour) == 58)
                        jl_AbstractStringBuilder_append($jodaZone, 58);
                    $hour = $hour + 1 | 0;
                }
                if (jl_String_indexOf2(jl_AbstractStringBuilder_toString($jodaZone), $rt_s(353)) == (-1)) {
                    jl_AbstractStringBuilder_append($jodaZone, 58);
                    jl_StringBuilder_append($jodaZone, $rt_s(354));
                }
                if (jl_String_indexOf2(jl_AbstractStringBuilder_toString($jodaZone), $rt_s(353)) == 5)
                    jl_AbstractStringBuilder_insert3($jodaZone, 4, 48);
                $name = jl_AbstractStringBuilder_toString($jodaZone);
                $hour = ju_TimeZone_parseNumber($name, 4, $position);
                if ($hour >= 0 && $hour <= 23) {
                    var$7 = $position.data;
                    $index = var$7[0];
                    if ($index == (-1))
                        break a;
                    else {
                        b: {
                            $raw = $rt_imul($hour, 3600000);
                            if ($index < jl_String_length($name) && jl_String_charAt($name, $index) == 58) {
                                $minute = ju_TimeZone_parseNumber($name, $index + 1 | 0, $position);
                                if (var$7[0] != (-1) && $minute >= 0 && $minute <= 59) {
                                    $raw = $raw + ($minute * 60000 | 0) | 0;
                                    break b;
                                }
                                return ju_IANATimeZone_clone(ju_TimeZone_GMT);
                            }
                            if (!($hour < 30 && $index <= 6))
                                $raw = $rt_imul($hour / 100 | 0, 3600000) + (($hour % 100 | 0) * 60000 | 0) | 0;
                        }
                        if ($sign == 45)
                            $raw =  -$raw;
                        return ju_IANATimeZone__init_(otcit_FixedDateTimeZone__init_($name, $raw, $raw));
                    }
                }
                return ju_IANATimeZone_clone(ju_TimeZone_GMT);
            }
        }
    }
    return ju_IANATimeZone_clone(ju_TimeZone_GMT);
}
function ju_TimeZone_parseNumber($string, $offset, $position) {
    var $length, $result, var$6, $digit;
    $length = jl_String_length($string);
    $result = 0;
    var$6 = $offset;
    a: {
        while (true) {
            if (var$6 >= $length)
                break a;
            $digit = jl_Character_digit(jl_String_charAt($string, var$6), 10);
            if ($digit == (-1))
                break;
            var$6 = var$6 + 1 | 0;
            $result = ($result * 10 | 0) + $digit | 0;
        }
    }
    if (var$6 == $offset)
        var$6 = (-1);
    $position.data[0] = var$6;
    return $result;
}
function ju_TimeZone__clinit_() {
    ju_TimeZone_GMT = ju_IANATimeZone__init_(otcit_FixedDateTimeZone__init_($rt_s(352), 0, 0));
}
function jl_IndexOutOfBoundsException() {
    jl_RuntimeException.call(this);
}
function jl_IndexOutOfBoundsException__init_0() {
    var var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_(var_0);
    return var_0;
}
function jl_IndexOutOfBoundsException__init_($this) {
    jl_Throwable__init_0($this);
}
function jlr_Array() {
    jl_Object.call(this);
}
function jlr_Array__init_0() {
    var var_0 = new jlr_Array();
    jlr_Array__init_(var_0);
    return var_0;
}
function jlr_Array__init_($this) {
    return;
}
function jlr_Array_getLength(var$1) {
    if (var$1 === null || var$1.constructor.$meta.item === undefined) {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
}
function jlr_Array_newInstance($componentType, $length) {
    if ($componentType === null) {
        $componentType = new jl_NullPointerException;
        jl_Throwable__init_0($componentType);
        $rt_throw($componentType);
    }
    if ($componentType === $rt_cls($rt_voidcls())) {
        $componentType = new jl_IllegalArgumentException;
        jl_Throwable__init_0($componentType);
        $rt_throw($componentType);
    }
    if ($length >= 0)
        return jlr_Array_newInstanceImpl($componentType.$platformClass, $length);
    $componentType = new jl_NegativeArraySizeException;
    jl_Throwable__init_0($componentType);
    $rt_throw($componentType);
}
function jlr_Array_newInstanceImpl(var$1, var$2) {
    if (var$1.$meta.primitive) {
        if (var$1 == $rt_bytecls()) {
            return $rt_createByteArray(var$2);
        }
        if (var$1 == $rt_shortcls()) {
            return $rt_createShortArray(var$2);
        }
        if (var$1 == $rt_charcls()) {
            return $rt_createCharArray(var$2);
        }
        if (var$1 == $rt_intcls()) {
            return $rt_createIntArray(var$2);
        }
        if (var$1 == $rt_longcls()) {
            return $rt_createLongArray(var$2);
        }
        if (var$1 == $rt_floatcls()) {
            return $rt_createFloatArray(var$2);
        }
        if (var$1 == $rt_doublecls()) {
            return $rt_createDoubleArray(var$2);
        }
        if (var$1 == $rt_booleancls()) {
            return $rt_createBooleanArray(var$2);
        }
    } else {
        return $rt_createArray(var$1, var$2)
    }
}
function jl_ArrayStoreException() {
    jl_RuntimeException.call(this);
}
function jl_ArrayStoreException__init_0() {
    var var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_(var_0);
    return var_0;
}
function jl_ArrayStoreException__init_($this) {
    jl_Throwable__init_0($this);
}
function otcit_DateTimeZoneProvider() {
    jl_Object.call(this);
}
var otcit_DateTimeZoneProvider_cache = null;
var otcit_DateTimeZoneProvider_$$metadata$$0 = null;
function otcit_DateTimeZoneProvider__init_0() {
    var var_0 = new otcit_DateTimeZoneProvider();
    otcit_DateTimeZoneProvider__init_(var_0);
    return var_0;
}
function otcit_DateTimeZoneProvider__init_($this) {
    return;
}
function otcit_DateTimeZoneProvider_getTimeZone($id) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if (!ju_HashMap_containsKey(otcit_DateTimeZoneProvider_cache, $id)) {
        var$2 = otcit_DateTimeZoneProvider_cache;
        var$3 = jl_String_indexOf0($id, 47);
        if (var$3 < 0) {
            var$4 = $rt_s(17);
            var$5 = $id;
        } else {
            var$4 = jl_String_substring0($id, 0, var$3);
            var$5 = jl_String_substring($id, var$3 + 1 | 0);
        }
        if (!otcit_DateTimeZoneProvider_getResource().hasOwnProperty($rt_ustr(var$4)))
            var$4 = null;
        else {
            var$4 = otcit_DateTimeZoneProvider_getResource()[$rt_ustr(var$4)];
            var$4 = !var$4.hasOwnProperty($rt_ustr(var$5)) ? null : var$4[$rt_ustr(var$5)];
        }
        if (var$4 === null)
            var$4 = null;
        else {
            var$4 = (var$4.data !== null ? $rt_str(var$4.data) : null);
            var$5 = otci_CharFlow__init_(jl_String_toCharArray(var$4));
            if (otci_Base46_decodeUnsigned(var$5) == 4) {
                var$5 = jl_String_substring(var$4, var$5.$pointer);
                var$4 = new otcit_AliasDateTimeZone;
                var$5 = otcit_DateTimeZoneProvider_getTimeZone(var$5);
                otcit_StorableDateTimeZone__init_(var$4, $id);
                var$4.$innerZone = var$5;
            } else
                a: {
                    b: {
                        var$5 = otci_CharFlow__init_(jl_String_toCharArray(var$4));
                        var$3 = otci_Base46_decodeUnsigned(var$5);
                        switch (var$3) {
                            case 0:
                                var$6 = otci_Base46_decodeUnsigned(var$5);
                                var$7 = $rt_createLongArray(var$6);
                                var$8 = var$7.data;
                                var$9 = $rt_createIntArray(var$6);
                                var$10 = $rt_createIntArray(var$6);
                                var$8[0] = otcit_StorableDateTimeZone_readTime(var$5);
                                var$11 = 1;
                                while (var$11 < var$6) {
                                    var$8[var$11] = Long_add(Long_add(var$8[var$11 - 1 | 0], otcit_StorableDateTimeZone_readTime(var$5)), Long_fromInt(657000000));
                                    var$11 = var$11 + 1 | 0;
                                }
                                otcit_StorableDateTimeZone_readTimeArray(var$5, var$9);
                                otcit_StorableDateTimeZone_readTimeArray(var$5, var$10);
                                var$8 = var$5.$characters0.data;
                                var$3 = var$5.$pointer;
                                var$5.$pointer = var$3 + 1 | 0;
                                if (var$8[var$3] != 121)
                                    var$5 = null;
                                else {
                                    var$5.$pointer = var$5.$pointer + 1 | 0;
                                    var$5 = otcit_DateTimeZoneBuilder$DSTZone_readZone($id, var$5);
                                }
                                var$4 = new otcit_DateTimeZoneBuilder$PrecalculatedZone;
                                otcit_StorableDateTimeZone__init_(var$4, $id);
                                var$4.$iTransitions = var$7;
                                var$4.$iWallOffsets = var$9;
                                var$4.$iStandardOffsets = var$10;
                                var$4.$iTailZone = var$5;
                                if (otcit_DateTimeZoneBuilder$PrecalculatedZone_isCachable(var$4)) {
                                    if (var$4 instanceof otcit_CachedDateTimeZone)
                                        var$4 = var$4;
                                    else {
                                        var$5 = new otcit_CachedDateTimeZone;
                                        otcit_StorableDateTimeZone__init_(var$5, var$4.$iID);
                                        var$5.$iInfoCache = $rt_createArray(otcit_CachedDateTimeZone$Info, otcit_CachedDateTimeZone_cInfoCacheMask + 1 | 0);
                                        var$5.$iZone = var$4;
                                        var$4 = var$5;
                                    }
                                }
                                break a;
                            case 1:
                                var$4 = otcit_FixedDateTimeZone__init_($id, otcit_StorableDateTimeZone_readTime(var$5).lo, otcit_StorableDateTimeZone_readTime(var$5).lo);
                                break a;
                            case 2:
                                break b;
                            case 3:
                                break;
                            default:
                                break b;
                        }
                        var$4 = otcit_DateTimeZoneBuilder$DSTZone_readZone($id, var$5);
                        break a;
                    }
                    $id = new jl_IllegalArgumentException;
                    var$2 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$2);
                    jl_Throwable__init_($id, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(355)), var$3)));
                    $rt_throw($id);
                }
        }
        ju_HashMap_putImpl(var$2, $id, var$4);
    }
    return ju_HashMap_get(otcit_DateTimeZoneProvider_cache, $id);
}
function otcit_DateTimeZoneProvider_timeZoneDetectionEnabled() {
    return false;}
function otcit_DateTimeZoneProvider_detectTimezone() {
    var $zones, $time, $offset, $score, var$5, $i, $tzOffset, $scoreTable, var$9, $j, $tzOffset_0, $zoneMap, $id, $tz, $queue, $timeInQueue, var$17, $prev;
    if (!otcit_DateTimeZoneProvider_timeZoneDetectionEnabled())
        return null;
    $zones = ju_ArrayList__init_0();
    $time = jl_System_currentTimeMillis();
    $offset =  -(new Date(Long_toNumber(jl_System_currentTimeMillis()))).getTimezoneOffset();
    $score = ju_ArrayList__init_0();
    var$5 = otpp_ResourceAccessor_keysToStrings(otpp_ResourceAccessor_keys(otcit_DateTimeZoneProvider_getResource())).data;
    $i = var$5.length;
    $tzOffset = 0;
    while ($tzOffset < $i) {
        $scoreTable = var$5[$tzOffset];
        var$9 = otpp_ResourceAccessor_keysToStrings(otpp_ResourceAccessor_keys(otcit_DateTimeZoneProvider_getResource()[$rt_ustr($scoreTable)])).data;
        $j = var$9.length;
        $tzOffset_0 = 0;
        while ($tzOffset_0 < $j) {
            $zoneMap = var$9[$tzOffset_0];
            if (!jl_String_isEmpty($scoreTable)) {
                $id = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($id);
                $zoneMap = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($id, $scoreTable), $rt_s(14)), $zoneMap));
            }
            ju_ArrayList_add($score, $zoneMap);
            $tzOffset_0 = $tzOffset_0 + 1 | 0;
        }
        $tzOffset = $tzOffset + 1 | 0;
    }
    var$5 = ju_AbstractCollection_toArray0($score, $rt_createArray(jl_String, $score.$size)).data;
    $i = var$5.length;
    $tzOffset = 0;
    while ($tzOffset < $i) {
        $tz = otcit_DateTimeZoneProvider_getTimeZone(var$5[$tzOffset]);
        if (!($tz instanceof otcit_AliasDateTimeZone) && jl_Math_abs0(($tz.$getOffset($time) / 60000 | 0) - $offset | 0) <= 120 && Long_ne($tz.$previousTransition($time), $time)) {
            $score = new otcit_DateTimeZoneProvider$Score;
            $score.$tz = $tz;
            ju_ArrayList_add($zones, $score);
        }
        $tzOffset = $tzOffset + 1 | 0;
    }
    $scoreTable = ju_ArrayList__init_0();
    ju_AbstractCollection_addAll($scoreTable, $zones);
    $zoneMap = ju_HashMap__init_0();
    $queue = ju_PriorityQueue__init_0($zones.$size, new otcit_DateTimeZoneProvider$1);
    $timeInQueue = ju_HashSet__init_0();
    ju_AbstractQueue_add($queue, jl_Long_valueOf($time));
    ju_HashMap_putImpl($zoneMap, jl_Long_valueOf($time), ju_ArrayList__init_3($zones));
    a: {
        b: {
            c: while (true) {
                if (ju_AbstractCollection_isEmpty($queue))
                    break b;
                if ($scoreTable.$size <= 1)
                    break b;
                var$17 = ju_AbstractQueue_remove($queue).$value3;
                ju_HashSet_remove($timeInQueue, jl_Long_valueOf(var$17));
                $score = ju_HashMap_remove($zoneMap, jl_Long_valueOf(var$17));
                $tzOffset_0 =  -(new Date(Long_toNumber(var$17))).getTimezoneOffset();
                $id = ju_AbstractList_iterator($score);
                while (ju_AbstractList$1_hasNext($id)) {
                    $score = ju_AbstractList$1_next($id);
                    $prev = $score.$tz.$previousTransition(var$17);
                    if (Long_eq($prev, var$17)) {
                        if (ju_ArrayList_get($scoreTable, 0) === $score)
                            break c;
                        ju_ArrayList_remove0($scoreTable, $score);
                    } else {
                        if (jl_Math_abs0(($score.$tz.$getOffset(var$17) / 60000 | 0) - $tzOffset_0 | 0) > 120) {
                            ju_ArrayList_remove0($scoreTable, $score);
                            continue;
                        }
                        ju_ArrayList_add(ju_Map_computeIfAbsent($zoneMap, jl_Long_valueOf($prev), new otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0), $score);
                        if (ju_HashSet_add($timeInQueue, jl_Long_valueOf($prev)))
                            ju_AbstractQueue_add($queue, jl_Long_valueOf($prev));
                    }
                }
                if ($scoreTable.$size == 1)
                    break a;
                if (Long_eq(ju_ArrayList_get($scoreTable, 0).$tz.$previousTransition(var$17), var$17))
                    break a;
                if ($scoreTable.$size > 1 && (ju_ArrayList_get($scoreTable, 0).$value4 + 2880 | 0) < ju_ArrayList_get($scoreTable, 1).$value4)
                    return ju_ArrayList_get($scoreTable, 0).$tz;
                $i = $scoreTable.$size - 1 | 0;
                while ($i >= 0) {
                    $score = ju_ArrayList_get($scoreTable, $i);
                    $tzOffset = $score.$tz.$getOffset(var$17) / 60000 | 0;
                    if ($tzOffset != $tzOffset_0)
                        $score.$value4 = $score.$value4 + ($rt_imul(Long_div(Long_sub($time, var$17), Long_fromInt(60000)).lo, jl_Math_abs0($tzOffset - $tzOffset_0 | 0)) / 30 | 0) | 0;
                    $j = $i + 1 | 0;
                    while ($j < $scoreTable.$size && $score.$value4 > ju_ArrayList_get($scoreTable, $j).$value4) {
                        ju_ArrayList_set($scoreTable, $j - 1 | 0, ju_ArrayList_get($scoreTable, $j));
                        $j = $j + 1 | 0;
                    }
                    ju_ArrayList_set($scoreTable, $j - 1 | 0, $score);
                    $i = $i + (-1) | 0;
                }
                $time = var$17;
            }
            return $score.$tz;
        }
        return ju_ArrayList_get($scoreTable, 0).$tz;
    }
    return ju_ArrayList_get($scoreTable, 0).$tz;
}
function otcit_DateTimeZoneProvider_getResource() {
    if (otcit_DateTimeZoneProvider_$$metadata$$0 === null)
        otcit_DateTimeZoneProvider_$$metadata$$0 = otcit_DateTimeZoneProvider_getResource$$create();
    return otcit_DateTimeZoneProvider_$$metadata$$0;
}
function otcit_DateTimeZoneProvider__clinit_() {
    otcit_DateTimeZoneProvider_cache = ju_HashMap__init_0();
}
function otcit_DateTimeZoneProvider_getResource$$create() {
    return {"": {"CET": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1s\'\u001e=n11s5\u001e=n1 "}, "EET": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEdAQAQAQAQAQAQAQA+AYAy\'Au\'\u001e=n)1u5\u001e=n) "}, "PST8PDT": {"data" : " ls&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#+H#V#H#y\'H#w\'1=y11w7#=y1 "}, "EST": {"data"
    : "#tt"}, "WET": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "HST": {"data" : "#i#i#"}, "CST6CDT": {"data" : " lR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#V#(#y\'(#w\'1=y11w7#=y1 "}, "MET": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1s\'\u001e=n11s5\u001e=n1 "}, "EST5EDT":
    {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}, "MST7MDT": {"data" : " lc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#V#8#y\'8#w\'1=y11w7#=y1 "}, "MST": {"data" : "#8#8#"}}, "Asia": {"Gaza": {"data" : " >#&y0=geCs:;{BE*w;{BE*w;Z2E6L;Z2E!o9omE6L;>TE>L=c:C>L=c:C>L=.TEwu?:w?wu?*o?wu?*o?wu?*o?wu?:w?NT=R2C2o=6T?B*?_]AJw;R:CFT;Z2E:w;g&g7B,_/o_@;*<i-ouIFT?Z2AF]?Z*AZBEFD;ZBEVD;>eEc!;>eEc!;>eER!;a%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQ+AV%Ay\'Aw5\u001e9n) w\'\u001e5n 1"}
    , "Makassar": {"data" : " #PPNC+F#+F#n"}, "Ulaanbaatar": {"data" : " h_m4=*o?{JA*o?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?gm?:Zo#c2;*o?wu?*o?wu?:w?wu?*o?wu?*o?wu?:{*-Vu?Zw?Vu?X#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#+F#N#F#n"}, "Vladivostok": {"data" : " |om4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%g#w#g#V#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#7g#g#g#V#c#g#/w#g#n"}
    , "Tashkent": {"data" : " )Ro4=wm?.LAg@b7&#6#&#r7&#&#&#rn"}, "Beirut": {"data" : " KRo8=c2C>T=c2C>T=s:C6L;s2?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?gm?*o?o}E|AQAQAQAQAQAQAQAQAQAQA+ArAy\'Aw\'\u001e=n 1w5\u001e=n  "}, "Qyzylorda": {"data" : " [co4=wm?.LA&Pv*2Mwm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;VTX5@#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r7rrr&#*#rn"}, "Phnom_Penh": {"data" : " #D(DDO+6#+6#n"}, "Hong_Kong": {"data" : " #_m&/+F#+F#n"}, "Kabul": {"data" : " #eR!E+j+jn"}, "Riyadh":
    {"data" : " #mqsc5+Q+Qn"}, "Ashgabat": {"data" : " +co4=wm?.LAg@bgL3;r&#rbr;rrrbrn"}, "Chita": {"data" : " !#!o4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%c>!#(%V#g#V#F#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#F#V#7V#V#V#F#c#V#3g#F#V#n"}, "Aqtau": {"data" : " ^co4=wm?.LAg@bgL3:_+wm?wm?wm?wm?*o?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;D#r&#rbr&#r&#r&#brbrbrbrbrbrbrbrbrbr7rrrb9r+bnbn"}
    , "Tokyo": {"data" : " #u{2;+V#+V#n"}, "Baku": {"data" : " |so4=wm?.LAg@bwm?&(s%kBEs:;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;kBE$%brbQbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrb;bbbQQg#bn"}, "Kathmandu": {"data" : " #F8R7+&^+&^n"}, "Novosibirsk": {"data" : " $#Bo4=wm?.LAg@bgL3:_+wm?wm?ND)sg5wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%6,8#,%6#F#6#&#6#F#6#F#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#76#6#6#&#16#+&#R#&#36#&#6#n"}
    , "Aqtobe": {"data" : " `co4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!GH#r&#rbr&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r7rrrb2#rn"}, "Kamchatka": {"data" : " xNm4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE{{bo]9y#*%:%*%w#*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%w#*%7*%*%*%w#Z#*%/w#*%n"}, "Istanbul": {"data" : " 2#&q4=wm?.LAwm?wm?wm?wm?wm?wm?c2?.LAwm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G2_9!!G&<;kBE&<;kBE&<;!!G!g9ouEo]9!!G&<;kBE6D;Z:E&<;6]GZ!9H%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQ+A>%An"}
    , "Nicosia": {"data" : " Ico4=*o?{JA*o?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?>DE&<;xAQAQAQAQAQAQAQAQAQAQ+AnAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Pontianak": {"data" : " #wL{9+6#+6#n"}, "Qostanay": {"data" : " ^co4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;D#r&#rbr&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#7rrrb.#rn"}, "Jerusalem": {"data" : " (#&y0=geCs:;{BE*w;{BE*w;Z2E6L;Z2E!o9omE6L;2wA:*Ak2AsB?{:A_e={2Es:;F]GB2?Z*A>T=k2ANeABw={JA{:A>T=k*AB2C_T={JA&<?B*?oeA_mABw=:*Ag]?_e=B!C.TA&<?Ve?*o?o}E4%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQA+A*%Ay\'Aw\'O5y11w5\u001e=n1 "}
    , "Barnaul": {"data" : " $#Bo4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?c!+_,5.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%R>!#,%6#F#6#&#6#F#6#F#6#F#6#F#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#76#6#6#&#A6#+&#B#&#36#&#6#n"}, "Kuala_Lumpur": {"data" : " #{_]1+F#+F#n"}, "Kolkata": {"data" : " #8PJC+z+zn"}, "Hanoi": {"data" : " #<R}5+6#+6#n"}, "Novokuznetsk": {"data" : " xBo4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE{{bo]9y#6#F#6#&#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#&#6#76#6#6#&#Z#6#/&#6#n"}
    , "Kuching": {"data" : " #HPPC+F#+F#n"}, "Bahrain": {"data" : " #c!g#+Q+Qn"}, "Bangkok": {"data" : " #D(DDO+6#+6#n"}, "Srednekolymsk": {"data" : " |_m4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%w#*%w#g#w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#7w#w#w#g#c#w#/*%w#n"}, "Karachi": {"data" : " /]&0;FXDjgm?Va&)c2;.<=sJCCr&#r&#r&#r+r9rn"}, "Aden": {"data" : " #mqsc5+Q+Qn"}, "Irkutsk":
    {"data" : " |2o4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%F#V#F#6#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#V#F#7F#F#F#6#c#F#/V#F#n"}, "Hovd": {"data" : " hom4=*o?{JA*o?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?gm?:Zo#c2;*o?wu?*o?wu?:w?wu?*o?wu?*o?wu?:{*-Vu?Zw?Vu?X#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#+6#N#6#n"}, "Baghdad": {"data" : " lso4=wm?.LAJw?*w?*w?*w?wm?*w?wm?*w?wm?*w?*w?*w?wm?*w?wm?*w?wm?*w?*w?*w?wm?*w?wm?*w?wm?*w?*w?*w?wm?*w?wm?*w?wm?*w?a#QbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQ+QV#Qn"}
    , "Samarkand": {"data" : " +co4=wm?.LAwm?wm?;r&#r&#r+r1rn"}, "Thimphu": {"data" : " #B.k9+&#+&#n"}, "Dhaka": {"data" : " \'m&0;k>Vt2,*73&#6#&#3&#&#&#n"}, "Yerevan": {"data" : " tso4=wm?.LAg@bwm?wm?wm?wm?wm?wm?wm?w}H#kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Gq#brbQbQbQbQbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrb3bbbAQ+b:#bn"}, "Muscat": {"data" : " #HJgNO+b+bn"}, "Dili": {"data" : " %swT)k.TC/F#V#/F#V#n"}, "Singapore": {"data" : " #{_]1+F#+F#n"}, "Damascus": {"data" : " !#:N6=*o?gm?wu?wu?NTAc:?&<?wu?.DAwu?*o?wu?:w?wu?s2?.TAs2?.TA*o?wu?:w?wu?*o?wu?*o?wu?*o?wu?:w?wu?*o?wu?*o?B*?J!AcJGs*;.]END9>eE*g;w}C*g;w}Cs*;(%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQ+A{#Ay\'Aw\'\u001e5n 1w5\u001e5n  "}
    , "Taipei": {"data" : " #V}!/+F#+F#n"}, "Macau": {"data" : " #_m&/+F#+F#n"}, "Choibalsan": {"data" : " jNm4=*o?{JA*o?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?gm?:Zo#c2;*o?wu?*o?wu?:w?wu?*o?wu?*o?wu?JV(#:c!+Vu?Zw?Vu?]#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#F#V#F#V#F#+V#>#V#+F#1F#n"}, "Amman": {"data" : " (#*V6=J*EV];c2CJ*=R*CR2?*o?wu?*o?.L=s:C>L=sBC>L=c:C>L=c:C>L=BJS&$/*w?*w?wm?*w?*w?wm?*w?.TE&<;VeCJ!=wm?*w?>]Ec*;>]Es2;>]Ec*;>]Ec*;>]Ec*;>]Es2;Bo6#.$1>]E4%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQA+A*%Ay\'Aw)#5n 1s5\u001e5n  "}
    , "Jayapura": {"data" : " #uw>)+V#+V#n"}, "Oral": {"data" : " ^so4=wm?.LAwm?wm?gL3*2Mwm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;D#brbrbrbrbrbrbrbrbrbrbrbrbrbrbr+b1b+r&#bn"}, "Manila": {"data" : " #B{:-+F#+F#n"}, "Dubai": {"data" : " #HJgNO+b+bn"}, "Yakutsk": {"data" : " |!o4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%V#g#V#F#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#7V#V#V#F#c#V#/g#V#n"}
    , "Seoul": {"data" : " #.(R;+V#+V#n"}, "Qatar": {"data" : " #c!g#+Q+Qn"}, "Hebron": {"data" : " B#&y0=geCs:;{BE*w;{BE*w;Z2E6L;Z2E!o9omE6L;>TE>L=c:C>L=c:C>L=.TEwu?:w?wu?*o?wu?*o?wu?*o?wu?:w?NT=R2C2o=6T?B*?_]AJw;R:Cwm;*wC:w;wuC*o7o_@;*<i-Ny#N,%FL?FT?Z2AF]?Z*AZBEFD;ZBEVD;>eEc!;>eEc!;>eER!;i%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQ+A_%Ay\'Aw5\u001e9n) w\'\u001e5n 1"}, "Bishkek": {"data" : " `Ro4=wm?.LARc[6eG>T=R*C>T=R*C>T=R*C>T=R*CR2?Ro?ZBE6<;ZBE6<;o}E!_9o}E!_9o}E6<;ZBE6<;ZBE6<;o}E!_9H#&#6#&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#3&#&#&#6#rn"}
    , "Tomsk": {"data" : " $#Bo4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;_,%VT?&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%N$.#,%6#F#6#&#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#76#6#6#&#z6#+&#f&#36#&#6#n"}, "Yekaterinburg": {"data" : " |co4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%r&#rbr&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r&#r7rrrbc#r/&#rn"}
    , "Colombo": {"data" : " )eFJCcNJj{:;g(m-7z.#&#z7z.#&#zn"}, "Khandyga": {"data" : " $#!o4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBEVD+V4/!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9>e=s_6%,%V#g#V#F#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#V#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#V#7V#V#V#F#*#V#+g#Yg#3w#g#V#n"}, "Dushanbe": {"data" : " )Ro4=wm?.LA:R^7&#6#&#r7&#&#&#rn"}, "Famagusta": {"data" : " 8#co4=*o?{JA*o?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?>DE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;kBE&<;>$.#o]9!!GT%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQA+AJ%Ay\'Au\'\u001e=n)1u5\u001e=n) "}
    , "Kuwait": {"data" : " #mqsc5+Q+Qn"}, "Pyongyang": {"data" : " \'q<kt:J]Z#.Py#3V#N#V#3V#N#V#n"}, "Magadan": {"data" : " !#_m4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%Vq&#(%w#*%w#g#w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%g#w#7w#w#w#g#c#w#3*%g#w#n"}, "Tehran": {"data" : " 4)ZNe/2oZ/k29*o?*!Awe?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!As{i#*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!"
    + "Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!Awe?*!Awe?*!A*o?*!Awe?*!AL1YjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjYjY+YB1Yy\'Yw\'K n 1w3K n  "}, "Sakhalin": {"data" : " |_m4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBEg@b&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%R>!#$%w#*%w#g#w#*%w#*%w#*%w#*%w#*%w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#7w#w#w#g#Mw#+g#.#g#3w#g#w#n"}
    , "Urumqi": {"data" : " #H_oeG+&#+&#n"}, "Shanghai": {"data" : " +k24={BEs:;{BEs:;;F#V#F#V#F#+F#1F#n"}, "Atyrau": {"data" : " [co4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE{{bo]9!!Go]9!!G&<;kBE&<;kBE&<;@#r&#rbr&#r&#r&#r&#r&#r&#r&#rbrbrbrbrbr7rrrb^r+bEbn"}, "Yangon": {"data" : " #DNiC+.#+.#n"}, "Almaty": {"data" : " `Ro4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!GH#&#6#&#r&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#7&#&#&#r2#&#n"}, "Tbilisi":
    {"data" : " [so4=wm?.LAg@bVm?gm?*o?gm?*o?F@bgm?>LAwD,#6<;ZBE6<;o}E!_9o}E!_9o}E6<;ZBE6<;ZBE6<;wT/sg5o]9@#brbQbQbQbrbrbrbrbrbrbrbrbrbQb3bbb9Q+bbb3QQbn"}, "Anadyr": {"data" : " xNm4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE{{bo]9y#*%:%*%w#*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%w#*%7*%*%*%w#Z#*%/w#*%n"}, "Vientiane": {"data" : " #D(DDO+6#+6#n"}, "Krasnoyarsk": {"data" : " |Bo4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%6#F#6#&#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#F#6#76#6#6#&#c#6#/F#6#n"}
    , "Brunei": {"data" : " #X8_U+F#+F#n"}, "Omsk": {"data" : " |Ro4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%&#6#&#r&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#6#&#7&#&#&#rc#&#/6#&#n"}, "Jakarta": {"data" : " #Tw>)+6#+6#n"}, "Ho_Chi_Minh": {"data" : " #RJw\'+6#+6#n"}, "Ust-Nera": {"data" : " !#_m4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9>e=s_6%(%w#*%w#g#w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#*%w#g#7w#w#w#g#c#w#3*%w#g#n"}
    }, "Etc": {"UTC": {"data" : "#  "}, "GMT+9": {"data" : "#X#X#"}, "GMT-10": {"data" : "#g#g#"}, "GMT-11": {"data" : "#w#w#"}, "GMT-7": {"data" : "#6#6#"}, "GMT+5": {"data" : "#tt"}, "GMT-8": {"data" : "#F#F#"}, "GMT+6": {"data" : "#(#(#"}, "GMT+12": {"data" : "#,%,%"}, "GMT-9": {"data" : "#V#V#"}, "GMT+7": {"data" : "#8#8#"}, "GMT+11": {"data" : "#y#y#"}, "GMT+8": {"data" : "#H#H#"}, "GMT+10": {"data" : "#i#i#"}, "GMT-3": {"data" : "#QQ"}, "GMT+1": {"data" : "#33"}, "GMT-4": {"data" : "#bb"}, "GMT+2": {"data"
    : "#CC"}, "GMT-5": {"data" : "#rr"}, "GMT+3": {"data" : "#SS"}, "GMT-6": {"data" : "#&#&#"}, "GMT+4": {"data" : "#dd"}, "GMT-1": {"data" : "#11"}, "GMT-2": {"data" : "#AA"}, "GMT-12": {"data" : "#*%*%"}, "GMT-13": {"data" : "#:%:%"}, "GMT-14": {"data" : "#J%J%"}, "GMT": {"data" : "#  "}}, "Pacific": {"Easter": {"data" : " <#Vi8=_]9>LAR2?2!Gs:;{BEs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;R*C{JA>LAs:;2!G_]92!G_]92!G_]92!Gs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;{BER2?>LAZBEco1w0MBg5NuIVD7::IVD7644#:V/V(Q:V/V(Q:V/NuI6<;]%t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t+(#R%(#y\'(#u)%=y9 u3%=yA1"}
    , "Fiji": {"data" : " CTi2LSZTu}n{*5*2MgL3wX!/{*5kBEFD7J:I*V/g(Q*V/{cQcw-BBS_<-l*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%+*%b*%y\'*%w7#=y11w#;=y9 "}, "Port_Moresby": {"data" : " #,(&8h+g#+g#n"}, "Kiritimati": {"data" : " %ZyaV):H00//i#J%/i#J%n"}, "Pohnpei": {"data" : " #e>XC+w#+w#n"}, "Chuuk": {"data" : " #e>XC+g#+g#n"}, "Kwajalein": {"data" : " %yD1_(4C/,%*%/,%*%n"}, "Kosrae": {"data" : " %yD12g&K/*%w#/*%w#n"}, "Auckland": {"data" : " nw(8=:w;VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=B*CNT=VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=B*CNT=B*C.LAe#:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%+*%Z#*%y\'*%s3\u001e=n11s)#=y1 "}
    , "Efate": {"data" : " 1>m4=gm?*o?gm?>LAk*5w(QwT/G*%w#*%w#*%w#*%w#+w#=w#n"}, "Niue": {"data" : " #_y<-+y#+y#n"}, "Majuro": {"data" : " #yD1+*%+*%n"}, "Guadalcanal": {"data" : " #HFLuU+w#+w#n"}, "Honolulu": {"data" : " #Hu8A+i#+i#n"}, "Guam": {"data" : " #c_P++g#+g#n"}, "Chatham": {"data" : " nw(8=:w;VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=B*CNT=VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=B*CNT=B*C.LAe#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#kT#VJ#+VJ#Z#VJ#y\'VJ#s3\u001e=n4/1s)#=y4/ "}
    , "Midway": {"data" : " #D@6eW+y#+y#n"}, "Tahiti": {"data" : " #i&HuU+i#+i#n"}, "Pago_Pago": {"data" : " #D@6eW+y#+y#n"}, "Galapagos": {"data" : " \'6<R768{)*V+3(#t(#3(#(#(#n"}, "Funafuti": {"data" : " #y.FHb+*%+*%n"}, "Marquesas": {"data" : " #@.HuU+a#+a#n"}, "Rarotonga": {"data" : " )&(<=*g5guI*g57a#i#a#i#+i#-i#n"}, "Tarawa": {"data" : " #q*FHb+*%+*%n"}, "Saipan": {"data" : " #c_P++g#+g#n"}, "Gambier": {"data" : " #0D8t+X#+X#n"}, "Wallis": {"data" : " #X2FHb+*%+*%n"}, "Tongatapu": {"data" : " 3y&oZ;c8_XWk2=J:Icw-.eQcw-&$]5J_+K:%J%:%J%:%J%:%J%:%+:%A:%n"}
    , "Fakaofo": {"data" : " %,P@HbgsT..#/y#:%/y#:%n"}, "Wake": {"data" : " #X&FHb+*%+*%n"}, "Enderbury": {"data" : " %6($/kc{5/y#:%/y#:%n"}, "Pitcairn": {"data" : " %Dm@Hb*y{c|/P#H#/P#H#n"}, "Apia": {"data" : " /LkF=*.gxNDAc2?J*1{_/wm?Cy#i#y#i#J%:%J%+y#-y#3:%:%:%y\':%w)#=yA w3\u001e=n91"}, "Noumea": {"data" : " \'NDX-{wi9*V/3w#*%w#3w#w#w#n"}, "Palau": {"data" : " #DmDHb+V#+V#n"}, "Nauru": {"data" : " #{oT-+*%+*%n"}, "Bougainville": {"data" : " %8PTCoiy(#/g#w#/g#w#n"}, "Norfolk": {"data" : " %2*e\'sV6[/!%w#/!%w#n"}
    }, "Europe": {"Saratov": {"data" : " z&q4=wm?.LAwm?6q&#wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%B2P#}#QbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQb7QQQbZ#Q3bQbn"}, "Belgrade": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Gibraltar": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Bucharest": {"data" :
    " C6q4=wm?.LAVm?wm?wm?wm?wm?wm?wm?gm?*o?gm?>LAZBEg<;kBElAQAQAQAQAQAQAQAQA+AbAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Dublin": {"data" : " ?N$<=o]9!!G&<;kBE&<;kBE&<;kBE&<;kBE&<;kBE:w;kBEd 1 1 1 1 1 1 1 +1Y1y\'1u\'\u001e=n) u5\u001e=n)3"}, "Zaporozhye": {"data" : " =&q4=wm?.LA6@b*o?gm?*o?gm?*o?gm?Zo?wm?.LAkBE`QbQAQAQAQAQAQA3QQQMAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Kiev": {"data" : " =&q4=wm?.41gXrVm?gm?*o?gm?*o?gm?Zo?wm?.LAkBE`QbQAQAQAQAQAQA/QQQAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Zurich": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}
    , "Copenhagen": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Rome": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Zagreb": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Monaco": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Luxembourg": {"data"
    : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Jersey": {"data" : " ?N$<=o]9!!G&<;kBE&<;kBE&<;kBE&<;kBE&<;kBE:w;kBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Istanbul": {"data" : " 2#&q4=wm?.LAwm?wm?wm?wm?wm?wm?c2?.LAwm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G2_9!!G&<;kBE&<;kBE&<;!!G!g9ouEo]9!!G&<;kBE6D;Z:E&<;6]GZ!9H%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQ+A>%An"}, "Ulyanovsk": {"data" : " !#&q4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%R>!#(%QbQAQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQb7QQQAc#Q3bQbn"}
    , "Samara": {"data" : " v&q4=wm?.LAF8fwu;wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE{{bo]9u#QbQbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbrbQb3QQQZ#b/Qbn"}, "Sarajevo": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Nicosia": {"data" : " Ico4=*o?{JA*o?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAgm?*o?gm?*o?>DE&<;xAQAQAQAQAQAQAQAQAQAQ+AnAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Chisinau": {"data" : " E&q4=wm?F,\'2_9wm?wm?Vm?gm?*o?gm?*o?gm?*o?gm?>LAZBEV<;kBEpQbQAQAQAQAQAQAQAQA/QQbAy\'Aw\'\u001e=n11w5\u001e=n9 "}
    , "Vatican": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Brussels": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Oslo": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Warsaw": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Lisbon": {"data"
    : " =Fq4=wm?.LAwm?wm?wm?V@bwm?wm?wm?wm?wm?_Ph&<;` 1 1 1A1A1A1 1+ 5 +151/  y\' u\'\u001e=n)1u5\u001e=n) "}, "Berlin": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Simferopol": {"data" : " &#&q4={cQs*8#gm?*o?gm?*o?2N%_]9*o?gm?>LA>DEg@b&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBEs:;JBE0%QAQAQAQbQbQbQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAbQ+Q9A+Q5Q+AF#A/bQn"}, "San_Marino": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}
    , "Podgorica": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Athens": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEdAQAQAQAQAQAQAQA+AYAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Bratislava": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Stockholm": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Prague":
    {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Uzhgorod": {"data" : " ;&q4={cQ:*Qs>bgm?*o?gm?*o?gm?Zo?wm?.LAkBE[Q1AQAQAQAQAQA/Q1MAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Budapest": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Astrakhan": {"data" : " z&q4=wm?.LAwm?6q&#wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%R>!#}#QbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQb7QQQbZ#Q3bQbn"}
    , "Madrid": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Vaduz": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "London": {"data" : " ?N$<=o]9!!G&<;kBE&<;kBE&<;kBE&<;kBE&<;kBE:w;kBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Vilnius": {"data" : " K6q4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBEg@b&<;c&s%kBE|AQAQAQAQAQAQAQAQA1AQA+AbA711AAy\'Au\'\u001e=n)1u5\u001e=n) "}
    , "Isle_of_Man": {"data" : " ?N$<=o]9!!G&<;kBE&<;kBE&<;kBE&<;kBE&<;kBE:w;kBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Sofia": {"data" : " C6q4=wm?.LAVm?gm?*o?gm?*o?gm?*o?gm?*o?gm?>LAZBEg<;kBElAQAQAQAQAQAQAQAQA+AbAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Kirov": {"data" : " x&q4=wm?.LAwm?6q&#wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%y#QbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQ7QQQbZ#Q/bQn"}, "Tallinn": {"data" : " O6q4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;{BE&<;!!G_@e#kBE(#AQAQAQAQAQAQAQAQAQAQAQA+AzAy\'Au\'\u001e=n)1u5\u001e=n) "}
    , "Moscow": {"data" : " |&q4=wm?.LAg@bgL3:_+wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%QbQAQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQ7QQQAc#Q/bQn"}, "Malta": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Busingen": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Amsterdam": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}
    , "Andorra": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Riga": {"data" : " O6q4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAwm?*o?kBE&<;kBE&<;!!G.a|!!G(#AQAQAQAQAQAQAQAQAQAQAQA+AzAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Vienna": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Helsinki": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEdAQAQAQAQAQAQAQA+AYAy\'Au\'\u001e=n)1u5\u001e=n) "}
    , "Minsk": {"data" : " t&q4=:!J#wm?wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9q#QAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQ+Qc#A+Qn"}, "Kaliningrad": {"data" : " |6q4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%$%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQA+Ao#A/QAn"}, "Skopje": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}
    , "Mariehamn": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEdAQAQAQAQAQAQAQA+AYAy\'Au\'\u001e=n)1u5\u001e=n) "}, "Ljubljana": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Tirane": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Guernsey": {"data" : " ?N$<=o]9!!G&<;kBE&<;kBE&<;kBE&<;kBE&<;kBE:w;kBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Volgograd":
    {"data" : " z&q4=wm?.LAwm?6q&#wm?wm?wm?wm?wm?wm?.LAkBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9g(V%s&s%}#QbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQbQb7QQQbZ#Q3bQbn"}, "Paris": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}}, "America": {"Belem": {"data" : " #*s$;+S+Sn"}, "Guayaquil": {"data" : " \'H{y>E>k]([*V+3tdt3tttn"}, "Argentina/Buenos_Aires": {"data" : " 9Fi8=J!9Z:I6D7Z:I6D7Z:IJ!9N<_5N<-2!G_]9WCSCSCSCSCSCS+SMSn"}
    , "Costa_Rica": {"data" : " +J2P/FL]/{B=&DCB_);(#t(#t(#+(#1(#n"}, "Hermosillo": {"data" : " /F#kguEFeCJw;FeCJw;FeCC8#(#8#(#8#(#8#+8#98#n"}, "Punta_Arenas": {"data" : " 0#Vi8=_]9>LAR2?2!Gs:;{BEs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;R*C{JA>LAs:;2!G_]92!G_]92!G_]92!Gs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;{BER2?>LAZBEco1w0MBg5NuIVD7::IVD7644#:V/D%SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdS+d:%dn"}, "Iqaluit": {"data" : " jB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;kBE6<;F@bZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuI]#tdtdtdtdtdtdtdtdtdtd(#tdtdtdtdtdtdtdt+tnt/(#(#Yty\'tw\'1=y11w7#=y1 "}
    , "Godthab": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEdSCSCSCSCSCSCSCS+SYSy\'Su\'\u001e=n)1u5\u001e=n) "}, "El_Salvador": {"data" : " #koN;+(#+(#n"}, "Monterrey": {"data" : " ?6$V;kg@+FeCJw;FeCJw;FeCJw;ZBE6<;ZBE>LA_]9>LAFeCd(#t(#t(#t(#t(#t(#t(#t(#+(#Y(#y\'(#w)#=y11w5\u001e=n1 "}, "Sao_Paulo": {"data" : " >#Fi8=k*5:2Mk*5&TKVL3NmM.41NmM!g5ouI!g5ouIk*5ouI6D7kBINT9F]G6D7F]G_]9F]G6D7ouI!g5NmMBo1&TKk*5o}M6<3ouI!g5NmMVL3Z:I!g5&TKk*5&TK!g5ouI!g5ouI6D7ouIk*5&TKk*5&TK!g5ouI!g5ouI!g5ouI!g5NmMBo1a%CSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCS+SV%Sn"}
    , "Bahia": {"data" : " ^Fi8=k*5:2Mk*5&TKVL3NmM.41NmM!g5ouI!g5ouIk*5ouI6D7kBINT9F]G6D7F]G_]9F]G6D7ouI!g5NmMBo1cF6-6D7D#CSCSCSCSCSCSCSCSCSCSCSCSCSCSCS+S:#Sn"}, "Indiana/Winamac": {"data" : " +c{UwiwSVD7>uIBg5;t(#dtd/t(#-ty\'tw\'1=y11w7#=y1 "}, "Grenada": {"data" : " #aR$2W+d+dn"}, "Grand_Turk": {"data" : " 2#B&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIBg5NuIBg5NuIVD7NuIBg5NuIBg5NuIBg5NuIBg5NuIBg5ZZZ%Bg5H%tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtd+t>%ty\'tw\'1=y11w7#=y1 "}
    , "Montserrat": {"data" : " #aR$2W+d+dn"}, "Panama": {"data" : " #qVL}Y+t+tn"}, "Guadeloupe": {"data" : " #aR$2W+d+dn"}, "Guatemala": {"data" : " +Rks3koD+>T=c_R5s:;;(#t(#t(#+(#1(#n"}, "Guyana": {"data" : " %JDTZ%Rus6//Sd/Sdn"}, "Swift_Current": {"data" : " #F0a#+(#+(#n"}, "Puerto_Rico": {"data" : " #qmLC+d+dn"}, "Moncton": {"data" : " l2&<=6<;ZBEJw;FeCJw;FeCgJ(3ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEBaH/NuIa#dSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dV#dy\'dw\'1=y11w7#=y1 "}
    , "Danmarkshavn": {"data" : " =Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?o<1`SCSCSCSCSCSCS +SQS+ n"}, "Nome": {"data" : " l&(<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#+X#V#X#y\'X#w\'1=y11w7#=y1 "}, "Porto_Velho": {"data" : " #:s$;+d+dn"}, "Cuiaba": {"data" : " :#Vi8=k*5:2Mk*5&TKVL3NmM.41NmM!g5ouI!g5ouIk*5ouI6D7kBINT9F]G6D7F]G_]9F]G6D7ouI!g5NmMBo1.$6#6<3ouI!g5NmMVL3Z:I!g5&TKk*5&TK!g5ouI!g5ouI6D7ouIk*5&TKk*5&TK!g5ouI!g5ouI!g5ouI!g5NmMBo1X%SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dN%dn"}
    , "Pangnirtung": {"data" : " h2&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBEg@bJw;FeCJw;FeCJw;FeCJw;kBE6<;F@bZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIX#dSdSdSdSdSdtdtdtdtd(#tdtdtdtdtdtdtdt+dId+t=t/(#(#Yty\'tw\'1=y11w7#=y1 "}, "Kralendijk": {"data" : " #m_X\'+d+dn"}, "Indiana/Vincennes": {"data" : " +c{UwiwSVD7F@bNuI;t(#tdt;t(#(#tty\'tw\'1=y11w7#=y1 "}, "Indiana/Indianapolis": {"data" : " +c{UFePSZBEVD7NuI;tdtdt+t1ty\'tw\'1=y11w7#=y1 "}, "Belize": {"data" : " #w]J3+(#+(#n"}, "Indiana/Marengo": {"data" : " +Jg2)_yuKZBEVD7NuI;tdtdt+t1ty\'tw\'1=y11w7#=y1 "}
    , "Anguilla": {"data" : " #aR$2W+d+dn"}, "Argentina/Ushuaia": {"data" : " 9Fi8=J!9Z:I6D7Z:I6D7Z:IJ!9oP(1*6#*2R%N<-WCSCSCSCSdSCS+S=S+d-Sn"}, "Santiago": {"data" : " <#Vi8=_]9>LAR2?2!Gs:;{BEs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;R*C{JA>LAs:;2!G_]92!G_]92!G_]92!Gs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;{BER2?>LAZBEco1w0MBg5NuIVD7::IVD7644#:V/V(Q:V/V(Q:V/NuI6<;]%SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdS+dR%dy\'du)%=y9 u3%=yA1"}, "Argentina/Catamarca": {"data" : " 9Fi8=J!9Z:I6D7k:I&D7Z:IJ!92c(1g$#*2R%N<-WCSCdCSCSdSCS7SSSd1S+d-Sn"}
    , "Boise": {"data" : " lc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#V#8#y\'8#w\'1=y11w7#=y1 "}, "Creston": {"data" : " #@T0l+8#+8#n"}, "Miquelon": {"data" : " l!&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#SCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCSCS+SV#Sy\'Sw\'1=y11w7#=y1 "}, "Jamaica": {"data" : " #>8{3+t+tn"}
    , "Rankin_Inlet": {"data" : " hR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;wD,#Jw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIX#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#N#(#y\'(#w\'1=y11w7#=y1 "}, "Toronto": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}, "Eirunepe": {"data" : " +Js$;!{()!g5FX>5oXq\';tdtdt;tttdtn"}, "Dawson": {"data" :
    " ls&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#+H#V#H#y\'H#w\'1=y11w7#=y1 "}, "Argentina/Mendoza": {"data" : " 9Fi8=J!9geGwe7*!I*o7Z:I:!9Zs&1Bg5&<@%N<-WCdSdSdCSdSCS+S5d3SSd-Sn"}, "Nassau": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}
    , "Vancouver": {"data" : " ls&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#+H#V#H#y\'H#w\'1=y11w7#=y1 "}, "Noronha": {"data" : " 16i8=k*5kkw-_]9F]Ge%g@b!g5G3C3C3C3C+C=Cn"}, "Argentina/Cordoba": {"data" : " 9Fi8=J!9Z:I6D7k:I&D7Z:IJ!9N<_5N<-2!G_]9WCSCdCSCSCSCS7SSSdASn"}, "Argentina/La_Rioja": {"data" : " ;Fi8=J!9Z:Is27:F+{B=6D7Z:IJ!92c(1g$#*2R%N<-[CSCdSCSCSdSCS7SSSd5S+d-Sn"}
    , "Regina": {"data" : " #y(}-+(#+(#n"}, "St_Vincent": {"data" : " #aR$2W+d+dn"}, "Scoresbysund": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd3 3 3 3 3 3 3 3+3Y3y\'3u\'\u001e=n)1u5\u001e=n) "}, "Aruba": {"data" : " #m_X\'+d+dn"}, "North_Dakota/Center": {"data" : " jc&<=6<;ZBEJw;FeCJw;F@bZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuI]#8#(#8#(#8#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+8#58#+(#:#(#y\'(#w\'1=y11w7#=y1 "}, "Thule": {"data" : " hDXm*S>NR(hgm?*o?gm?>LAZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIX#dSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dN#dy\'dw\'1=y11w7#=y1 "}
    , "Argentina/San_Juan": {"data" : " ;Fi8=J!9Z:Is27:F+{B=6D7Z:IJ!9!Z(1!>)!!L%N<-[CSCdSCSCSdSCS7SSSd5S+d-Sn"}, "Rio_Branco": {"data" : " \'Js$;s__=oXq\'3tdt3tdtn"}, "Los_Angeles": {"data" : " ls&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#+H#V#H#y\'H#w\'1=y11w7#=y1 "}, "St_Thomas": {"data" : " #aR$2W+d+dn"}, "Cancun": {"data" : " tguZ1*s:5FeCJw;FeCJw;k*5&y-Jw;ZBE6<;ZBE>LA_]9>LAFeCJw;FeCJw;ZBE6<;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCN41q#tdtdtdt(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t+t5t+(#J#(#+tn"}
    , "Maceio": {"data" : " 5Fi8=k*5k>()k*5g}X%_]9F]GRURc`!g5OCSCSCSCSCS+SESn"}, "Sitka": {"data" : " l&(<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#+X#V#X#y\'X#w\'1=y11w7#=y1 "}, "Denver": {"data" : " lc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#V#8#y\'8#w\'1=y11w7#=y1 "}
    , "Cayman": {"data" : " #qVL}Y+t+tn"}, "Thunder_Bay": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}, "Nipigon": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}, "Havana": {"data" : " zB.8=s2?2*Cs2?.LAc2?.LAc2?.LAc2?.LAc2?.LAwm?wm?wm?.LANT=kBE&<;!!G&<;kBE&<;kBE:w;VeC:w;VeC&<;Z&q#FD7J:IZ!96]GFD7J:IZ!9J:IZ!9_uIZ!9!!G2g5}#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtd+ts#ty\'ts7#=y  s\'1=y 1"}
    , "Campo_Grande": {"data" : " >#Vi8=k*5:2Mk*5&TKVL3NmM.41NmM!g5ouI!g5ouIk*5ouI6D7kBINT9F]G6D7F]G_]9F]G6D7ouI!g5NmMBo1&TKk*5o}M6<3ouI!g5NmMVL3Z:I!g5&TKk*5&TK!g5ouI!g5ouI6D7ouIk*5&TKk*5&TK!g5ouI!g5ouI!g5ouI!g5NmMBo1a%SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dV%dn"}, "Cambridge_Bay": {"data" : " hc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;F@bN}Esc`Jw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIX#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#t(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#n8#/(#(#U8#y\'8#w\'1=y11w7#=y1 "}
    , "Fortaleza": {"data" : " 1Fi8=k*5kkw-_]9F]GRURc`!g5GCSCSCSCS+S=Sn"}, "Managua": {"data" : " 3J:T/{.<1oPO_<12sq%oHy+R2?>DEc:;K(#t(#t(#t(#t(#7(#t(#t5(#n"}, "Menominee": {"data" : " lR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#V#(#y\'(#w\'1=y11w7#=y1 "}, "Halifax": {"data" : " l2&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#dSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dV#dy\'dw\'1=y11w7#=y1 "}
    , "Ojinaga": {"data" : " ^u.4Wsw*!#FeCJw;FeCg@bJw;ZBE6<;ZBE>LA_]9>LAFeCJw;FeCJw;ZBE6<;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCk!9NuID#(#t(#t(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+(#1(#+8#&#8#y\'8#w\'1=y11w7#=y1 "}, "Glace_Bay": {"data" : " l2&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#dSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dV#dy\'dw\'1=y11w7#=y1 "}, "Lower_Princes": {"data" : " #m_X\'+d+dn"}, "Argentina/Tucuman": {"data" : " =Fi8=J!9Z:I6D7k:I&D7Z:IJ!92c(1RE>mR%N<-2!G_]9`CSCdCSCSdSCSCS7SSSd1S+d5Sn"}
    , "Indiana/Petersburg": {"data" : " +g<:+sJ8KVD7F@bNuI;t(#tdt;(#(#(#tty\'tw\'1=y11w7#=y1 "}, "Yakutat": {"data" : " l&(<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#+X#V#X#y\'X#w\'1=y11w7#=y1 "}, "Detroit": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}
    , "Merida": {"data" : " ?F,>3Z_X3FeCJw;FeCJw;FeCJw;ZBE6<;ZBE>LA_]9>LAFeCd(#t(#t(#t(#t(#t(#t(#t(#+(#Y(#y\'(#w)#=y11w5\u001e=n1 "}, "Bahia_Banderas": {"data" : " bF#kguEFeCJw;FeCJw;FeCJw;ZBE6<;ZBE>LA_]9>LAFeCJw;FeCJw;ZBE6<;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;JBE6<;L#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#t(#t+8#6#8#3(#(#(#y\'(#w)#=y11w5\u001e=n1 "}, "Matamoros": {"data" : " `6$V;kg@+FeCJw;FeCJw;FeCJw;ZBE6<;ZBE>LA_]9>LAFeCJw;FeCJw;ZBE6<;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCk!9NuIH#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#>#(#y\'(#w\'1=y11w7#=y1 "}
    , "Indiana/Vevay": {"data" : " +R_$%V$(QZBEVD7NuI;tdtdt+t1ty\'tw\'1=y11w7#=y1 "}, "St_Barthelemy": {"data" : " #aR$2W+d+dn"}, "Argentina/San_Luis": {"data" : " ;Fi8=2w9!oEwe7J_/o,B3!>)!!L%w<#k_\'2!G_]92!G[CdSdSdSCSdSdS+S-d7SdSS1d+Sn"}, "Indiana/Tell_City": {"data" : " )c{UwiwSVD7NuI7t(#t(#+t-(#y\'(#w\'1=y11w7#=y1 "}, "Boa_Vista": {"data" : " +:s$;ZND1_]9F]Ge%;dSdSd+d1dn"}, "Metlakatla": {"data" : " 5o8{3N$&OVD7NuIBg5NuIBg5ssW{g\'NuIOH#X#H#X#H#X#H#X#H#X#+H#EX#y\'X#w\'1=y11w7#=y1 "}, "Tortola": {"data" : " #aR$2W+d+dn"}
    , "Argentina/Jujuy": {"data" : " 5Fi8=J!9!wIJ!9geCN]9Z:IJ!9N<_5N<-OCdSdCSCSCS+S-d+S5Sn"}, "North_Dakota/New_Salem": {"data" : " jc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;F@bZBE6<;ZBE6<;ZBEVD7NuI]#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#t(#t(#t(#t(#+8#2#8#+(#=(#y\'(#w\'1=y11w7#=y1 "}, "Inuvik": {"data" : " lc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#V#8#y\'8#w\'1=y11w7#=y1 "}
    , "Port_of_Spain": {"data" : " #aR$2W+d+dn"}, "Paramaribo": {"data" : " #NmZ5+S+Sn"}, "New_York": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}, "Manaus": {"data" : " \':s$;!{()!g53dSd3dddn"}, "Resolute": {"data" : " fR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;wD,#Jw;FeCJw;FeCJw;ZBE6<;ZBE6<;.$.#Bg5T#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t+(#J#(#y\'(#w\'1=y11w7#=y1 "}
    , "Curacao": {"data" : " #m_X\'+d+dn"}, "North_Dakota/Beulah": {"data" : " zc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIBg5NuIBg5NuIVD7F@bNuI}#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#t(#+8#k#8#/(#(#y\'(#w\'1=y11w7#=y1 "}, "Bogota": {"data" : " \'m4*uS:,HDjRk[3tdt3tttn"}, "Adak": {"data" : " l6(<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#X#i#+i#V#i#y\'i#w\'1=y11w7#=y1 "}
    , "Mazatlan": {"data" : " ?F#kguEFeCJw;FeCJw;FeCJw;ZBE6<;ZBE>LA_]9>LAFeCd8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#Y8#y\'8#w)#=y11w5\u001e=n1 "}, "Caracas": {"data" : " \'m_X\'!:w^NP$-3dld3dldn"}, "St_Kitts": {"data" : " #aR$2W+d+dn"}, "Argentina/Salta": {"data" : " 5Fi8=J!9Z:I6D7k:I&D7Z:IJ!9N<_5N<-OCSCdCSCSCS7SSSd9Sn"}, "Mexico_City": {"data" : " ?(i};&TubFeCJw;FeCJw;FeCJw;ZBE6<;ZBE>LA_]9>LAFeCd(#t(#t(#t(#t(#t(#t(#t(#+(#Y(#y\'(#w)#=y11w5\u001e=n1 "}, "Edmonton": {"data" : " lc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#V#8#y\'8#w\'1=y11w7#=y1 "}
    , "Kentucky/Louisville": {"data" : " lB&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+tV#ty\'tw\'1=y11w7#=y1 "}, "Araguaina": {"data" : " IFi8=k*5k>()k*5ouI6D7kBINT9F]G6D7F]G_]9F]G6D7ouI!g5NmMBo16({-k*5xCSCSCSCSCSCSCSCSCSCS+SnSn"}, "Santo_Domingo": {"data" : " \'{cL\'J6eEBN%3dtd3dtdn"}, "Indiana/Knox": {"data" : " /R&<=6<;ZBEJw;Z&47VD7NuIC(#t(#t(#t(#+(#9(#y\'(#w\'1=y11w7#=y1 "}, "Whitehorse": {"data" :
    " ls&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#+H#V#H#y\'H#w\'1=y11w7#=y1 "}, "Yellowknife": {"data" : " lc&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#(#8#+8#V#8#y\'8#w\'1=y11w7#=y1 "}, "Kentucky/Monticello": {"data" : " jR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;F@bZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuI]#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#tdtdtdtdtdtdtdt+(#v(#+tUty\'tw\'1=y11w7#=y1 "}
    , "Asuncion": {"data" : " &#kF:=*w;:w?gm?.DA_]9B*GsB?J!A!o9!wEoe92!GR*;R2GJ!9F]G_]92!Gs:;{BEs:;{BEs:;2!Ggm?!_9o}E6<;ZBER*C_]92!G_]92!G_]9F]GJ!9F]GJ!9F]GR2?s2?{JAs2?{JA*o?>T=0%SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+d&%dy\'dw5#=y 1w\'M=y  "}, "Santarem": {"data" : " %:s$;s__=/dS/dSn"}, "Antigua": {"data" : " #aR$2W+d+dn"}, "Winnipeg": {"data" : " lc&<=&<;kBE:w;VeC:w;VeC:w;kBE&<;kBE&<;kBE:w;VeC:w;VeC:w;VeC:w;kBE&<;kBE&<;kBE:w;VeC:w;VeC:w;kBE&<;kBE&<;ZBEVD7NuIa#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#V#(#y\'(#w\'1=y11w7#=y1 "}
    , "Recife": {"data" : " 1Fi8=k*5kkw-_]9F]Ge%g@b!g5GCSCSCSCS+S=Sn"}, "Lima": {"data" : " +2VH9FX{#gL/sca%gL/;tdtdt+t1tn"}, "Phoenix": {"data" : " #u*V#+8#+8#n"}, "Martinique": {"data" : " #k{e/+d+dn"}, "St_Johns": {"data" : " !#>.P>36<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIBg5NuIBg5NuIVD7NuIBg5g:];Bg5(%[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K+[{#[y\'[w\'1=y11w7#=y1 "}, "Goose_Bay": {"data" : " !#w2P>36<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIBg5NuIBg5NuIVD7NuIBg5g:];Bg5(%dSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdS+d{#dy\'dw\'1=y11w7#=y1 "}
    , "Montevideo": {"data" : " ^o$<=k*5ouI6D7ouI!g5Z:I6D7R>>1>LAR*Cs:;geC*w;{BEs:;{BEs:;{BE*w;geC*w;geC*w;{BEs:;{BEs:;{BEs:;D#CSCSCSCSCSCSCSCSCSCSCSCSCSCSCS+S:#Sn"}, "St_Lucia": {"data" : " #aR$2W+d+dn"}, "Chicago": {"data" : " lR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#V#(#y\'(#w\'1=y11w7#=y1 "}, "Chihuahua": {"data" : " =u.4Wsw*!#FeCJw;FeCg@bJw;ZBE6<;ZBE>LA_]9>LAFeC`(#t(#t(#8#(#8#(#8#(#8#(#8#+(#1(#+8#A8#y\'8#w)#=y11w5\u001e=n1 "}
    , "La_Paz": {"data" : " #LmZgC+d+dn"}, "Blanc-Sablon": {"data" : " #qmLC+d+dn"}, "Tijuana": {"data" : " xs&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCk!9NuIy#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#+H#o#H#y\'H#w\'1=y11w7#=y1 "}, "Barbados": {"data" : " #Zce/+d+dn"}, "Anchorage": {"data" : " l&(<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#+X#V#X#y\'X#w\'1=y11w7#=y1 "}
    , "Rainy_River": {"data" : " lR&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#t(#+(#V#(#y\'(#w\'1=y11w7#=y1 "}, "Port-au-Prince": {"data" : " `B&<=&<;kBE:w;VeC:w;VeC:w;kBE&<;kBE&<;kBE:w;VeC:w;VeCJg@+ZBE6<;ZBE_0q\'NuIBg5NuIBg5NuIBg5NuIsFzNuIH#tdtdtdtdtdtdtdtdtdtdtdtdtdtdtdt+t>#ty\'tw\'1=y11w7#=y1 "}, "Tegucigalpa": {"data" : " \'koN;6$a964/3(#t(#3(#(#(#n"}, "Cayenne": {"data" : " #L_Z#+S+Sn"}
    , "Marigot": {"data" : " #aR$2W+d+dn"}, "Juneau": {"data" : " l&(<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#H#X#+X#V#X#y\'X#w\'1=y11w7#=y1 "}, "Atikokan": {"data" : " #HX(K+t+(#n"}, "Argentina/Rio_Gallegos": {"data" : " 9Fi8=J!9Z:I6D7Z:I6D7Z:IJ!92c(1g$#*2R%N<-WCSCSCSCSdSCS+S=S+d-Sn"}, "Dawson_Creek": {"data" : " #V0a#+8#+H#n"}, "Dominica": {"data" : " #aR$2W+d+dn"}, "Fort_Nelson":
    {"data" : " .#s&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIBg5NuIBg5NuIVD7NuIBg5NuIBg5NuIBg5NuIBg5NuIBg5@%H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#H#8#+H#2%H#+8#n"}}, "Africa": {"Tunis": {"data" : " 7&q4=B2Gc*;c_N5s*;6D?!!Go]9!!G&<;kBES1A1A1A1A1A1+1I1n"}, "Maputo": {"data" : " #L<aF`+A+An"}, "Casablanca": {"data" : " s\'2:R7:2.A*_/w(Q2_-ZBM.41ouIk*5:*QRg-_,%F$\'kBEJ_+2F%oD-&<;wL/BN%&$/&<;_<-BN%>41&<;J_+BN%gL3o]9!F)V,\'{*5o]9kg\'BN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RY"
    + "BN%&uWV,\'&uWBN%:RYBN%&uWBN%m/ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1+ R# +1.-1n"}, "Johannesburg": {"data" : " #<_VE+A+An"}, "Addis_Ababa": {"data" : " #L42c)+Q+Qn"}, "Lagos": {"data" : " #q.{]O+1+1n"}, "Accra": {"data" : " #q:_a9+ + n"}, "Nairobi": {"data" : " #L42c)+Q+Qn"}, "Brazzaville": {"data" : " #q.{]O+1+1n"}, "Lubumbashi": {"data" : " #L<aF`+A+An"}, "Banjul":
    {"data" : " #y!_8W+ + n"}, "Porto-Novo": {"data" : " #q.{]O+1+1n"}, "Lusaka": {"data" : " #L<aF`+A+An"}, "Kigali": {"data" : " #L<aF`+A+An"}, "Ouagadougou": {"data" : " #y!_8W+ + n"}, "Freetown": {"data" : " #y!_8W+ + n"}, "Ndjamena": {"data" : " #JJ@/+1+1n"}, "Conakry": {"data" : " #y!_8W+ + n"}, "Niamey": {"data" : " #q.{]O+1+1n"}, "Maseru": {"data" : " #<_VE+A+An"}, "El_Aaiun": {"data" : " s\'F]2-&mLK*_/w(Q2_-ZBM.41ouIk*5:*QRg-_,%F$\'kBEJ_+2F%oD-&<;wL/BN%&$/&<;_<-BN%>41&<;J_+BN%gL3o]9!F)V,\'{*5o]9kg\'BN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWV,\'&uWBN%:RYBN%&uWBN%:RYBN%&uWV,\'&uWBN%:RY"
    + "BN%&uWV,\'&uWBN%:RYBN%&uWBN%m/ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1+ R# +1.-1n"}, "Sao_Tome": {"data" : " \'D:ktoDB_#gHb3 1 3 1 n"}, "Ceuta": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}, "Khartoum": {"data" : " \':2D7g]85J&m93AQA3AQAn"}, "Algiers": {"data" : " #_L01+1+1n"}, "Bujumbura": {"data" :
    " #L<aF`+A+An"}, "Bangui": {"data" : " #q.{]O+1+1n"}, "Gaborone": {"data" : " #L<aF`+A+An"}, "Juba": {"data" : " %:2D7g]85/AQ/AQn"}, "Windhoek": {"data" : " (#Xa<GgTejoL=ZBE6<;o}E!_9o}E6<;ZBE6<;ZBE6<;ZBE6<;ZBE6<;o}E!_9o}E6<;ZBE6<;ZBE6<;ZBE6<;ZBE6<;o}E6<;ZBE6<;ZBE6<;ZBE6<;ZBE6<;o}E!_9o}E6<;ZBE6<;ZBE6<;ZBE6<;4%A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A+A*%An"}, "Dar_es_Salaam": {"data" : " #L42c)+Q+Qn"}, "Harare": {"data" : " #L<aF`+A+An"}, "Tripoli": {"data" : " -*N6=omE6eX)k2AVH67gT7?1A1A1A/1A11n"}
    , "Malabo": {"data" : " #q.{]O+1+1n"}, "Libreville": {"data" : " #q.{]O+1+1n"}, "Abidjan": {"data" : " #y!_8W+ + n"}, "Luanda": {"data" : " #q.{]O+1+1n"}, "Lome": {"data" : " #y!_8W+ + n"}, "Nouakchott": {"data" : " #y!_8W+ + n"}, "Bissau": {"data" : " #gaX\'+ + n"}, "Asmara": {"data" : " #L42c)+Q+Qn"}, "Kinshasa": {"data" : " #q.{]O+1+1n"}, "Mogadishu": {"data" : " #L42c)+Q+Qn"}, "Djibouti": {"data" : " #L42c)+Q+Qn"}, "Douala": {"data" : " #q.{]O+1+1n"}, "Kampala": {"data" : " #L42c)+Q+Qn"}, "Dakar": {"data"
    : " #y!_8W+ + n"}, "Cairo": {"data" : " (#JN6={RE&4;{RE&4;.]E&4;{RE&4;{RE&4;VuCs:;>TEs:;.LEs:;.LEs:;.LEs:;>TEs:;.LEs:;.LEs:;.LEs:;>TEs:;.LEs:;.LEB!;_eE&<7.TI_T5B2Kk*56]K&43_$%c^VuX%F,\'RN%_<)4%AQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQAQA+A*%An"}, "Blantyre": {"data" : " #L<aF`+A+An"}, "Monrovia": {"data" : " #sTTx+ + n"}, "Mbabane": {"data" : " #<_VE+A+An"}, "Bamako": {"data" : " #y!_8W+ + n"}}, "Indian": {"Reunion": {"data" : " #0!@RW+b+bn"}, "Maldives": {"data" : " #aJ2c)+r+rn"}, "Christmas": {"data"
    : " #yB44h+6#+6#n"}, "Chagos": {"data" : " %P2eX[_.4mt/r&#/r&#n"}, "Antananarivo": {"data" : " #L42c)+Q+Qn"}, "Mahe": {"data" : " #,XDs[+b+bn"}, "Mayotte": {"data" : " #L42c)+Q+Qn"}, "Kerguelen": {"data" : " #LoF=+r+rn"}, "Mauritius": {"data" : " \'Z{P3&mHEs:;3brb3bbbn"}, "Comoro": {"data" : " #L42c)+Q+Qn"}, "Cocos": {"data" : " #a*}sb+.#+.#n"}}, "Antarctica": {"Macquarie": {"data" : " tw}:=Z!96]G&<;.LAc2?.LAc2?.LAc2?.LAc2?.LAwm?.LAc2?.LAc2?.LAc2?.LAc2?&<;kBEB*Cc2?.LAc2?.LAc2?.LAc2?.LAwm?wm?c2?B*Cwm?wm?wm?wm?q#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#+g#g#g#n"}
    , "Palmer": {"data" : " 0#Vi8=_]9>LAR2?2!Gs:;{BEs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;R*C{JA>LAs:;2!G_]92!G_]92!G_]92!Gs:;{BEs:;{BEs:;2!G_]92!G>T=R*Cs:;{BER2?>LAZBEco1w0MBg5NuIVD7::IVD7644#:V/D%SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdS+d:%dn"}, "Troll": {"data" : " \'ZeR4o12(]g23!!G3 A 3   y\' u\'\u001e=n)Au5\u001e=n) "}, "Casey": {"data" : " /P,dR:D[gm7Ny0#Jw3Jw@\':.|CF#w#F#w#F#w#F#CF#w#F#w#F#w#F#n"}, "Vostok": {"data" : " #(0a1+&#+&#n"}, "Syowa": {"data" : " #u:>3+Q+Qn"}, "DumontDUrville": {"data"
    : " #DBN3+g#+g#n"}, "McMurdo": {"data" : " nw(8=:w;VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=B*CNT=VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=VeC:w;VeC:w;VeCNT=B*CNT=B*CNT=B*CNT=B*C.LAe#:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%:%*%+*%Z#*%y\'*%s3\u001e=n11s)#=y1 "}, "Mawson": {"data" : " %uBJ7:R*r/&#r/&#rn"}, "Davis": {"data" : " +,>^>L>[ND9gD0#kw3;6#r6#r6#;6#r6#r6#n"}, "Rothera": {"data" : " #>4})+S+Sn"}}, "Australia": {"Broken_Hill": {"data" : " p!!<=2g5_uI2g5_uI2g5_uIFD7_uI2g5_uI2g5_uI&<;kBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!G&<;kBEo]9!!G:w;wm?i#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#+_#_#_#y\'_#s)#=y1 s5#=y11"}
    , "Darwin": {"data" : " #D&VE+_#+_#n"}, "Brisbane": {"data" : " -w}:=2g5_uI2g5_uI2g5?w#g#w#g#w#g#+g#5g#n"}, "Currie": {"data" : " nw}:=Z!96]G&<;.LAc2?.LAc2?.LAc2?.LAc2?.LAwm?.LAc2?.LAc2?.LAc2?.LAc2?&<;kBEB*Cc2?.LAc2?.LAc2?.LAc2?.LAwm?wm?c2?B*Cwm?e#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#+g#Z#g#y\'g#s5#=y11s)#=y1 "}, "Lord_Howe": {"data" : " po}:=*g5guI*g5guI*g5guI>D7guI*g5guI*g5guI{:;sBE{:;sBE{:;sBE{:;*!Gg]9.<;cBE*!G{:;sBE{:;sBE{:;*!Gg]9*!G{:;sBEg]9*!G2w;!o?i#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#o#w#+o#_#o#y\'o#w)#=y1 w5#=y1)"}
    , "Lindeman": {"data" : " 5w}:=2g5_uI2g5_uI2g5_uIFD7_uI2g5Ow#g#w#g#w#g#w#g#w#g#+g#Eg#n"}, "Perth": {"data" : " 3.]45_]R+Ro1_DZ5gL3!!G&<;kBE&<;KF#V#F#V#F#V#F#V#F#+F#AF#n"}, "Adelaide": {"data" : " p!!<=Z!96]G2g5_uIo]9!!GFD7_uIZ!96]Go]9!!G&<;kBE&<;kBE&<;kBE&<;!!Go]9!!Go]9!!G&<;kBE&<;kBE&<;!!Go]9!!G&<;kBEo]9!!G:w;wm?i#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#_#o#+_#_#_#y\'_#s)#=y1 s5#=y11"}, "Eucla": {"data" : " 3&w:_-_]R+Ro1_DZ5gL3!!G&<;kBE&<;Kc|w*#c|w*#c|w*#c|w*#c|+c|Ac|n"}
    , "Sydney": {"data" : " pw}:=2g5_uI2g5_uI2g5_uIFD7_uI2g5_uI2g5_uI&<;kBE&<;kBE&<;kBE&<;!!Go]9&<;kBE!!G&<;kBE&<;kBE&<;!!Go]9!!G&<;kBEo]9!!G:w;wm?i#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#+g#_#g#y\'g#s)#=y1 s5#=y11"}, "Melbourne": {"data" : " pw}:=Z!96]G2g5_uI2g5_uIFD7_uI2g5_uIo]9!!G&<;kBE&<;kBE&<;kBE&<;!!Go]9&<;kBE!!G&<;kBE&<;kBE&<;!!Go]9!!G&<;kBEo]9!!G:w;wm?i#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#+g#_#g#y\'g#s)#=y1 s5#=y11"}, "Hobart":
    {"data" : " nw}:=Z!96]G&<;.LAc2?.LAc2?.LAc2?.LAc2?.LAwm?.LAc2?.LAc2?.LAc2?.LAc2?&<;kBEB*Cc2?.LAc2?.LAc2?.LAc2?.LAwm?wm?c2?B*Cwm?e#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#w#g#+g#Z#g#y\'g#s5#=y11s)#=y1 "}}, "Arctic": {"Longyearbyen": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd1A1A1A1A1A1A1A1+1Y1y\'1u\'\u001e=n)1u5\u001e=n) "}}, "Atlantic": {"St_Helena": {"data" : " #y!_8W+ + n"}, "Reykjavik": {"data" : " #yP8#+ + n"}, "Stanley": {"data" : " xNX2=&]Gk!9&]G!_9o}E!_9o}E!_9o}E!_9o}E!_9&]G!_9o}E!_9o}E!_9o}E!_9o}E!_92!Gk!9::IVD7::Ik!9&]Gk!9&]Gk!9&]Gk!9&]Gk!9::Ik!9&]Gk!9&]Gk!9y#SdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdS+dk#d+Sn"}
    , "Faroe": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Madeira": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Canary": {"data" : " ?Fq4=wm?.LAwm?wm?wm?wm?wm?wm?wm?wm?wm?wm?.LAkBEd 1 1 1 1 1 1 1 + Y y\' u\'\u001e=n)1u5\u001e=n) "}, "Bermuda": {"data" : " l2&<=6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEJw;FeCJw;FeCJw;ZBE6<;ZBE6<;ZBEVD7NuIa#dSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSdSd+dV#dy\'dw\'1=y11w7#=y1 "}
    , "Azores": {"data" : " ;Vq4=wm?.LAwm?wm?wm?&q&#wm?wm?wm?wm?.LAkBE[3 3 3 3 3 3 3+3Q3y\'3u\'\u001e=n)1u5\u001e=n) "}, "South_Georgia": {"data" : " #0:(Xl+C+Cn"}, "Cape_Verde": {"data" : " #>L8)+3+3n"}}};
}
function ju_IANATimeZone() {
    var a = this; ju_TimeZone.call(a);
    a.$underlyingZone = null;
    a.$rawOffset = 0;
    a.$diff = 0;
}
function ju_IANATimeZone__init_(var_0) {
    var var_1 = new ju_IANATimeZone();
    ju_IANATimeZone__init_0(var_1, var_0);
    return var_1;
}
function ju_IANATimeZone__init_0($this, $underlyingZone) {
    $this.$id1 = $underlyingZone.$iID;
    $this.$underlyingZone = $underlyingZone;
    $this.$rawOffset = $underlyingZone.$getStandardOffset(jl_System_currentTimeMillis());
    $this.$diff =  -$this.$rawOffset;
}
function ju_IANATimeZone_getOffset($this, $time) {
    return ($this.$rawOffset + $this.$diff | 0) + $this.$underlyingZone.$getOffset($time) | 0;
}
function ju_IANATimeZone_clone($this) {
    var $copy, $$je;
    a: {
        try {
            $copy = jl_Object_clone($this);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_CloneNotSupportedException) {
            } else {
                throw $$e;
            }
        }
        $copy = null;
    }
    $copy = $copy;
    $copy.$rawOffset = $this.$rawOffset;
    $copy.$underlyingZone = $this.$underlyingZone;
    return $copy;
}
function ju_IANATimeZone_clone0($this) {
    return ju_IANATimeZone_clone($this);
}
function otcit_DateTimeZone() {
    jl_Object.call(this);
    this.$iID = null;
}
function otcit_DateTimeZone_getID($this) {
    return $this.$iID;
}
function otcit_StorableDateTimeZone() {
    otcit_DateTimeZone.call(this);
}
function otcit_StorableDateTimeZone__init_0(var_0) {
    var var_1 = new otcit_StorableDateTimeZone();
    otcit_StorableDateTimeZone__init_(var_1, var_0);
    return var_1;
}
function otcit_StorableDateTimeZone__init_($this, $id) {
    var var$2;
    if ($id !== null) {
        $this.$iID = $id;
        return;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$2, $rt_s(356));
    $rt_throw(var$2);
}
function otcit_StorableDateTimeZone_readTime($flow) {
    var var$2, $value;
    var$2 = Long_fromInt(otci_Base46_decodeUnsigned($flow));
    $value = Long_div(var$2, Long_fromInt(2));
    if (Long_ne(Long_rem(var$2, Long_fromInt(2)), Long_ZERO))
        $value = Long_neg($value);
    if (Long_ne(Long_and($value, Long_fromInt(1)), Long_ZERO))
        return Long_mul(Long_shr($value, 1), Long_fromInt(60000));
    return Long_mul(Long_shr($value, 1), Long_fromInt(1800000));
}
function otcit_StorableDateTimeZone_readTimeArray($flow, $array) {
    var $index, var$4, $count, var$6, $t, var$8;
    $index = 0;
    while (true) {
        var$4 = $array.data;
        if ($index >= var$4.length)
            break;
        $count = otci_Base46_decode($flow);
        if ($count < 0) {
            var$6 = $count ^ (-1);
            while (true) {
                $t = var$6 + (-1) | 0;
                if (var$6 <= 0)
                    break;
                var$8 = $index + 1 | 0;
                var$4[$index] = otcit_StorableDateTimeZone_readTime($flow).lo;
                var$6 = $t;
                $index = var$8;
            }
        } else {
            $t = otcit_StorableDateTimeZone_readTime($flow).lo;
            while (true) {
                var$8 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$6 = $index + 1 | 0;
                var$4[$index] = $t;
                $count = var$8;
                $index = var$6;
            }
        }
    }
}
function otcit_FixedDateTimeZone() {
    var a = this; otcit_StorableDateTimeZone.call(a);
    a.$iWallOffset = 0;
    a.$iStandardOffset = 0;
}
function otcit_FixedDateTimeZone__init_(var_0, var_1, var_2) {
    var var_3 = new otcit_FixedDateTimeZone();
    otcit_FixedDateTimeZone__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function otcit_FixedDateTimeZone__init_0($this, $id, $wallOffset, $standardOffset) {
    otcit_StorableDateTimeZone__init_($this, $id);
    $this.$iWallOffset = $wallOffset;
    $this.$iStandardOffset = $standardOffset;
}
function otcit_FixedDateTimeZone_getOffset($this, $instant) {
    return $this.$iWallOffset;
}
function otcit_FixedDateTimeZone_getStandardOffset($this, $instant) {
    return $this.$iStandardOffset;
}
function otcit_FixedDateTimeZone_previousTransition($this, $instant) {
    return $instant;
}
function ju_AbstractQueue() {
    ju_AbstractCollection.call(this);
}
function ju_AbstractQueue_add($this, $e) {
    if (ju_PriorityQueue_offer($this, $e))
        return 1;
    $e = new jl_IllegalStateException;
    jl_Throwable__init_0($e);
    $rt_throw($e);
}
function ju_AbstractQueue_remove($this) {
    var var$1;
    if (!ju_AbstractCollection_isEmpty($this))
        return ju_PriorityQueue_poll($this);
    var$1 = new ju_NoSuchElementException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function ju_PriorityQueue() {
    var a = this; ju_AbstractQueue.call(a);
    a.$data1 = null;
    a.$comparator = null;
    a.$originalComparator = null;
    a.$size3 = 0;
    a.$version = 0;
}
function ju_PriorityQueue__init_1() {
    var var_0 = new ju_PriorityQueue();
    ju_PriorityQueue__init_(var_0);
    return var_0;
}
function ju_PriorityQueue__init_0(var_0, var_1) {
    var var_2 = new ju_PriorityQueue();
    ju_PriorityQueue__init_2(var_2, var_0, var_1);
    return var_2;
}
function ju_PriorityQueue__init_($this) {
    ju_PriorityQueue__init_2($this, 1, null);
}
function ju_PriorityQueue__init_2($this, $initialCapacity, $comparator) {
    if ($initialCapacity < 1) {
        $comparator = new jl_IllegalArgumentException;
        jl_Throwable__init_0($comparator);
        $rt_throw($comparator);
    }
    $this.$data1 = $rt_createArray(jl_Object, $initialCapacity);
    $this.$originalComparator = $comparator;
    if ($comparator === null) {
        $comparator = new ju_PriorityQueue$1;
        $comparator.$this$02 = $this;
    }
    $this.$comparator = $comparator;
}
function ju_PriorityQueue_offer($this, $e) {
    var $current, $current_0;
    if ($e === null) {
        $e = new jl_NullPointerException;
        jl_Throwable__init_0($e);
        $rt_throw($e);
    }
    $current = $this.$size3 + 1 | 0;
    if ($this.$data1.data.length < $current) {
        $current = jl_Math_max($current, ($this.$data1.data.length * 3 | 0) / 2 | 0);
        $this.$data1 = ju_Arrays_copyOf($this.$data1, $current);
    }
    $current = $this.$size3;
    while ($current > 0) {
        $current_0 = ($current - 1 | 0) / 2 | 0;
        if ($this.$comparator.$compare($e, $this.$data1.data[$current_0]) >= 0)
            break;
        $this.$data1.data[$current] = $this.$data1.data[$current_0];
        $current = $current_0;
    }
    $this.$data1.data[$current] = $e;
    $this.$size3 = $this.$size3 + 1 | 0;
    $this.$version = $this.$version + 1 | 0;
    return 1;
}
function ju_PriorityQueue_poll($this) {
    var $elem, var$2, var$3, var$4, var$5, var$6;
    if (!$this.$size3)
        return null;
    $elem = $this.$data1.data[0];
    var$2 = 0;
    $this.$version = $this.$version + 1 | 0;
    var$3 = $this.$data1.data[$this.$size3 - 1 | 0];
    a: {
        while (true) {
            var$4 = (var$2 * 2 | 0) + 1 | 0;
            var$5 = var$4 + 1 | 0;
            if (var$4 >= $this.$size3)
                break;
            if (var$5 < $this.$size3 && $this.$comparator.$compare($this.$data1.data[var$4], $this.$data1.data[var$5]) >= 0)
                var$4 = var$5;
            if ($this.$comparator.$compare(var$3, $this.$data1.data[var$4]) <= 0)
                break a;
            $this.$data1.data[var$2] = $this.$data1.data[var$4];
            var$2 = var$4;
        }
    }
    $this.$data1.data[var$2] = var$3;
    var$6 = $this.$data1.data;
    var$2 = $this.$size3 - 1 | 0;
    $this.$size3 = var$2;
    var$6[var$2] = null;
    return $elem;
}
function ju_PriorityQueue_size($this) {
    return $this.$size3;
}
function otcit_DateTimeZoneProvider$1() {
    jl_Object.call(this);
}
function otcit_DateTimeZoneProvider$1__init_0() {
    var var_0 = new otcit_DateTimeZoneProvider$1();
    otcit_DateTimeZoneProvider$1__init_(var_0);
    return var_0;
}
function otcit_DateTimeZoneProvider$1__init_($this) {
    return;
}
function otcit_DateTimeZoneProvider$1_compare($this, $o1, $o2) {
    return jl_Long_compareTo($o2, $o1);
}
function otcit_DateTimeZoneProvider$1_compare0($this, var$1, var$2) {
    return jl_Long_compareTo(var$2, var$1);
}
function ju_Set() {
}
function ju_AbstractSet() {
    ju_AbstractCollection.call(this);
}
function ju_AbstractSet_removeAll($this, $c) {
    var $modified, $iter;
    $modified = 0;
    if (ju_HashSet_size($this) >= $c.$size0()) {
        $iter = $c.$iterator();
        while ($iter.$hasNext()) {
            if (!ju_HashSet_remove($this, $iter.$next0()))
                continue;
            $modified = 1;
        }
    } else {
        $iter = ju_HashSet_iterator($this);
        while (ju_HashMap$AbstractMapIterator_hasNext($iter)) {
            if ($c.$contains(ju_HashMap$KeyIterator_next($iter))) {
                $modified = 1;
                ju_HashMap$AbstractMapIterator_remove($iter);
            }
        }
    }
    return $modified;
}
function ju_AbstractSet_equals($this, $obj) {
    var $other, $iter;
    if ($this === $obj)
        return 1;
    if (!$rt_isInstance($obj, ju_Set))
        return 0;
    $other = $obj;
    if (ju_HashSet_size($this) != ju_HashSet_size($other))
        return 0;
    $iter = ju_HashSet_iterator($other);
    while (ju_HashMap$AbstractMapIterator_hasNext($iter)) {
        if (ju_HashSet_contains($this, ju_HashMap$KeyIterator_next($iter)))
            continue;
        else
            return 0;
    }
    return 1;
}
function ju_AbstractSet_hashCode($this) {
    return ju_Arrays_hashCode(ju_AbstractCollection_toArray($this));
}
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
function ju_HashSet__init_0() {
    var var_0 = new ju_HashSet();
    ju_HashSet__init_(var_0);
    return var_0;
}
function ju_HashSet__init_($this) {
    $this.$backingMap = ju_HashMap__init_0();
}
function ju_HashSet_add($this, $object) {
    return ju_HashMap_putImpl($this.$backingMap, $object, $this) !== null ? 0 : 1;
}
function ju_HashSet_clear($this) {
    ju_HashMap_clear($this.$backingMap);
}
function ju_HashSet_contains($this, $object) {
    return ju_HashMap_containsKey($this.$backingMap, $object);
}
function ju_HashSet_iterator($this) {
    return ju_HashMap$1_iterator(ju_HashMap_keySet($this.$backingMap));
}
function ju_HashSet_remove($this, $object) {
    return ju_HashMap_remove($this.$backingMap, $object) === null ? 0 : 1;
}
function ju_HashSet_size($this) {
    return $this.$backingMap.$elementCount;
}
function jl_Long() {
    jl_Number.call(this);
    this.$value3 = Long_ZERO;
}
var jl_Long_TYPE = null;
function jl_Long_valueOf($value) {
    var var$2;
    var$2 = new jl_Long;
    var$2.$value3 = $value;
    return var$2;
}
function jl_Long_longValue($this) {
    return $this.$value3;
}
function jl_Long_hashCode($this) {
    var var$1;
    var$1 = $this.$value3;
    return var$1.lo ^ var$1.hi;
}
function jl_Long_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Long && Long_eq($other.$value3, $this.$value3) ? 1 : 0;
}
function jl_Long_compareTo($this, $other) {
    return Long_compare($this.$value3, $other.$value3);
}
function jl_Long_divideUnsigned(var$1, var$2) {
    return Long_udiv(var$1, var$2);
}
function jl_Long_remainderUnsigned(var$1, var$2) {
    return Long_urem(var$1, var$2);
}
function jl_Long_compareTo0($this, var$1) {
    return jl_Long_compareTo($this, var$1);
}
function jl_Long__clinit_() {
    jl_Long_TYPE = $rt_cls($rt_longcls());
}
function otcit_AliasDateTimeZone() {
    otcit_StorableDateTimeZone.call(this);
    this.$innerZone = null;
}
function otcit_AliasDateTimeZone_getOffset($this, $instant) {
    return $this.$innerZone.$getOffset($instant);
}
function otcit_AliasDateTimeZone_getStandardOffset($this, $instant) {
    return $this.$innerZone.$getStandardOffset($instant);
}
function otcit_AliasDateTimeZone_previousTransition($this, $instant) {
    return $this.$innerZone.$previousTransition($instant);
}
function jl_Math() {
    jl_Object.call(this);
}
function jl_Math__init_0() {
    var var_0 = new jl_Math();
    jl_Math__init_(var_0);
    return var_0;
}
function jl_Math__init_($this) {
    return;
}
function jl_Math_sin(var$1) {
    return Math.sin(var$1);
}
function jl_Math_cos(var$1) {
    return Math.cos(var$1);
}
function jl_Math_atan(var$1) {
    return Math.atan(var$1);
}
function jl_Math_log(var$1) {
    return Math.log(var$1);
}
function jl_Math_sqrt(var$1) {
    return Math.sqrt(var$1);
}
function jl_Math_ceil(var$1) {
    return Math.ceil(var$1);
}
function jl_Math_floor(var$1) {
    return Math.floor(var$1);
}
function jl_Math_pow(var$1, var$2) {
    return Math.pow(var$1, var$2);
}
function jl_Math_atan2(var$1, var$2) {
    return Math.atan2(var$1, var$2);
}
function jl_Math_round($a) {
    var var$2;
    var$2 = $rt_compare($a, 0.0);
    return $a + (var$2 > 0 ? 1.0 : var$2 >= 0 ? $a : (-1.0)) * 0.5 | 0;
}
function jl_Math_random() {
    return jl_Math_randomImpl();
}
function jl_Math_randomImpl() {
    return Math.random();
}
function jl_Math_min($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min0($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max0($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_abs0($n) {
    if ($n <= 0)
        $n =  -$n;
    return $n;
}
function jl_Math_abs($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function otcit_DateTimeZoneProvider$Score() {
    var a = this; jl_Object.call(a);
    a.$tz = null;
    a.$value4 = 0;
}
function juf_Function() {
}
function otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0() {
    jl_Object.call(this);
}
function otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0__init_0() {
    var var_0 = new otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0();
    otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0__init_(var_0);
    return var_0;
}
function otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0__init_(var$0) {
    return;
}
function otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0_apply(var$0, var$1) {
    return ju_ArrayList__init_0();
}
function ju_PriorityQueue$1() {
    jl_Object.call(this);
    this.$this$02 = null;
}
function ju_PriorityQueue$1_compare($this, $o1, $o2) {
    if ($rt_isInstance($o1, jl_Comparable))
        return $o1.$compareTo5($o2);
    return  -$o2.$compareTo5($o1);
}
function otci_CharFlow() {
    var a = this; jl_Object.call(a);
    a.$characters0 = null;
    a.$pointer = 0;
}
function otci_CharFlow__init_(var_0) {
    var var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
}
function otci_CharFlow__init_0($this, $characters) {
    $this.$characters0 = $characters;
}
function otci_Base46() {
    jl_Object.call(this);
}
function otci_Base46__init_0() {
    var var_0 = new otci_Base46();
    otci_Base46__init_(var_0);
    return var_0;
}
function otci_Base46__init_($this) {
    return;
}
function otci_Base46_decodeUnsigned($seq) {
    var $number, $pos, var$4, $hasMore, $digit;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters0.data;
        $hasMore = $seq.$pointer;
        $seq.$pointer = $hasMore + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[$hasMore]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
}
function otci_Base46_decode($seq) {
    var $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result;
    return $result;
}
function otci_Base46_decodeDigit($c) {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
}
function otcit_DateTimeZoneBuilder$PrecalculatedZone() {
    var a = this; otcit_StorableDateTimeZone.call(a);
    a.$iTransitions = null;
    a.$iWallOffsets = null;
    a.$iStandardOffsets = null;
    a.$iTailZone = null;
}
function otcit_DateTimeZoneBuilder$PrecalculatedZone_getOffset($this, $instant) {
    var $transitions, $i;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch0($transitions, $instant);
    if ($i >= 0)
        return $this.$iWallOffsets.data[$i];
    $transitions = $transitions.data;
    $i = $i ^ (-1);
    if ($i < $transitions.length) {
        if ($i <= 0)
            return 0;
        return $this.$iWallOffsets.data[$i - 1 | 0];
    }
    if ($this.$iTailZone !== null)
        return otcit_DateTimeZoneBuilder$DSTZone_getOffset($this.$iTailZone, $instant);
    return $this.$iWallOffsets.data[$i - 1 | 0];
}
function otcit_DateTimeZoneBuilder$PrecalculatedZone_getStandardOffset($this, $instant) {
    var $transitions, $i;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch0($transitions, $instant);
    if ($i >= 0)
        return $this.$iStandardOffsets.data[$i];
    $transitions = $transitions.data;
    $i = $i ^ (-1);
    if ($i < $transitions.length) {
        if ($i <= 0)
            return 0;
        return $this.$iStandardOffsets.data[$i - 1 | 0];
    }
    if ($this.$iTailZone !== null)
        return $this.$iTailZone.$iStandardOffset0;
    return $this.$iStandardOffsets.data[$i - 1 | 0];
}
function otcit_DateTimeZoneBuilder$PrecalculatedZone_nextTransition($this, $instant) {
    var $transitions, $i, var$4, $end;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch0($transitions, $instant);
    $i = $i < 0 ? $i ^ (-1) : $i + 1 | 0;
    $transitions = $transitions.data;
    var$4 = $transitions.length;
    if ($i < var$4)
        return $transitions[$i];
    if ($this.$iTailZone === null)
        return $instant;
    $end = $transitions[var$4 - 1 | 0];
    if (Long_ge($instant, $end))
        $end = $instant;
    return otcit_DateTimeZoneBuilder$DSTZone_nextTransition($this.$iTailZone, $end);
}
function otcit_DateTimeZoneBuilder$PrecalculatedZone_previousTransition($this, $instant) {
    var $transitions, $i, $prev;
    $transitions = $this.$iTransitions;
    $i = ju_Arrays_binarySearch0($transitions, $instant);
    if ($i >= 0) {
        if (Long_le($instant, new Long(0, 2147483648)))
            return $instant;
        return Long_sub($instant, Long_fromInt(1));
    }
    $transitions = $transitions.data;
    $i = $i ^ (-1);
    if ($i < $transitions.length) {
        if ($i > 0) {
            $prev = $transitions[$i - 1 | 0];
            if (Long_gt($prev, new Long(0, 2147483648)))
                return Long_sub($prev, Long_fromInt(1));
        }
        return $instant;
    }
    if ($this.$iTailZone !== null) {
        $prev = otcit_DateTimeZoneBuilder$DSTZone_previousTransition($this.$iTailZone, $instant);
        if (Long_lt($prev, $instant))
            return $prev;
    }
    $prev = $transitions[$i - 1 | 0];
    if (Long_le($prev, new Long(0, 2147483648)))
        return $instant;
    return Long_sub($prev, Long_fromInt(1));
}
function otcit_DateTimeZoneBuilder$PrecalculatedZone_isCachable($this) {
    var $transitions, var$2, $distances, $count, $i, $diff;
    if ($this.$iTailZone !== null)
        return 1;
    $transitions = $this.$iTransitions.data;
    var$2 = $transitions.length;
    if (var$2 <= 1)
        return 0;
    $distances = 0.0;
    $count = 0;
    $i = 1;
    while ($i < var$2) {
        $diff = Long_sub($transitions[$i], $transitions[$i - 1 | 0]);
        if (Long_lt($diff, new Long(3028857856, 14))) {
            $distances = $distances + Long_toNumber($diff);
            $count = $count + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    if ($count > 0 && $distances / $count / 8.64E7 >= 25.0)
        return 1;
    return 0;
}
function otcit_DateTimeZoneBuilder$DSTZone() {
    var a = this; otcit_StorableDateTimeZone.call(a);
    a.$iStandardOffset0 = 0;
    a.$iStartRecurrence = null;
    a.$iEndRecurrence = null;
}
function otcit_DateTimeZoneBuilder$DSTZone_getOffset($this, $instant) {
    var var$2, var$3, var$4, var$5, var$6, var$7, $$je;
    var$2 = $this.$iStandardOffset0;
    var$3 = $this.$iStandardOffset0;
    var$4 = $this.$iStartRecurrence;
    var$5 = $this.$iEndRecurrence;
    a: {
        b: {
            try {
                var$6 = otcit_DateTimeZoneBuilder$Recurrence_next(var$4, $instant, var$3, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis(var$5));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_IllegalArgumentException) {
                    break b;
                } else if ($$je instanceof jl_ArithmeticException) {
                    break b;
                } else {
                    throw $$e;
                }
            }
            break a;
        }
        var$6 = $instant;
    }
    c: {
        d: {
            try {
                var$7 = otcit_DateTimeZoneBuilder$Recurrence_next(var$5, $instant, var$3, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis(var$4));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_IllegalArgumentException) {
                    break d;
                } else if ($$je instanceof jl_ArithmeticException) {
                    break d;
                } else {
                    throw $$e;
                }
            }
            break c;
        }
        var$7 = $instant;
    }
    if (Long_gt(var$6, var$7))
        var$5 = var$4;
    return var$2 + var$5.$iSaveMillis | 0;
}
function otcit_DateTimeZoneBuilder$DSTZone_getStandardOffset($this, $instant) {
    return $this.$iStandardOffset0;
}
function otcit_DateTimeZoneBuilder$DSTZone_nextTransition($this, $end) {
    var $standardOffset, $startRecurrence, $endRecurrence, $start, var$6, $end_0, $$je;
    $standardOffset = $this.$iStandardOffset0;
    $startRecurrence = $this.$iStartRecurrence;
    $endRecurrence = $this.$iEndRecurrence;
    a: {
        b: {
            try {
                c: {
                    try {
                        $start = otcit_DateTimeZoneBuilder$Recurrence_next($startRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($endRecurrence));
                        var$6 = Long_compare($end, Long_ZERO);
                        if (var$6 <= 0)
                            break c;
                        if (Long_ge($start, Long_ZERO))
                            break c;
                        $start = $end;
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArithmeticException) {
                } else {
                    throw $$e;
                }
            }
        }
        $start = $end;
    }
    d: {
        e: {
            try {
                f: {
                    try {
                        $end_0 = otcit_DateTimeZoneBuilder$Recurrence_next($endRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($startRecurrence));
                        if (var$6 <= 0)
                            break f;
                        if (Long_ge($end_0, Long_ZERO))
                            break f;
                        $end_0 = $end;
                        break f;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            break e;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break d;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArithmeticException) {
                } else {
                    throw $$e;
                }
            }
        }
        $end_0 = $end;
    }
    if (Long_gt($start, $end_0))
        $start = $end_0;
    return $start;
}
function otcit_DateTimeZoneBuilder$DSTZone_previousTransition($this, $instant) {
    var $end, $standardOffset, $startRecurrence, $endRecurrence, $start, var$7, $end_0, $$je;
    $end = Long_add($instant, Long_fromInt(1));
    $standardOffset = $this.$iStandardOffset0;
    $startRecurrence = $this.$iStartRecurrence;
    $endRecurrence = $this.$iEndRecurrence;
    a: {
        b: {
            try {
                c: {
                    try {
                        $start = otcit_DateTimeZoneBuilder$Recurrence_previous($startRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($endRecurrence));
                        var$7 = Long_compare($end, Long_ZERO);
                        if (var$7 >= 0)
                            break c;
                        if (Long_le($start, Long_ZERO))
                            break c;
                        $start = $end;
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArithmeticException) {
                } else {
                    throw $$e;
                }
            }
        }
        $start = $end;
    }
    d: {
        e: {
            try {
                f: {
                    try {
                        $end_0 = otcit_DateTimeZoneBuilder$Recurrence_previous($endRecurrence, $end, $standardOffset, otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($startRecurrence));
                        if (var$7 >= 0)
                            break f;
                        if (Long_le($end_0, Long_ZERO))
                            break f;
                        $end_0 = $end;
                        break f;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            break e;
                        } else {
                            throw $$e;
                        }
                    }
                }
                break d;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ArithmeticException) {
                } else {
                    throw $$e;
                }
            }
        }
        $end_0 = $end;
    }
    if (Long_gt($start, $end_0))
        $end_0 = $start;
    return Long_sub($end_0, Long_fromInt(1));
}
function otcit_DateTimeZoneBuilder$DSTZone_readZone($id, $flow) {
    var $standardOffset, $startRecurrence, $endRecurrence;
    $standardOffset = otcit_StorableDateTimeZone_readTime($flow).lo;
    $startRecurrence = otcit_DateTimeZoneBuilder$Recurrence_read($flow);
    $endRecurrence = otcit_DateTimeZoneBuilder$Recurrence_read($flow);
    $flow = new otcit_DateTimeZoneBuilder$DSTZone;
    otcit_StorableDateTimeZone__init_($flow, $id);
    $flow.$iStandardOffset0 = $standardOffset;
    $flow.$iStartRecurrence = $startRecurrence;
    $flow.$iEndRecurrence = $endRecurrence;
    return $flow;
}
function otcit_CachedDateTimeZone() {
    var a = this; otcit_StorableDateTimeZone.call(a);
    a.$iZone = null;
    a.$iInfoCache = null;
}
var otcit_CachedDateTimeZone_cInfoCacheMask = 0;
function otcit_CachedDateTimeZone_getOffset($this, $instant) {
    return otcit_CachedDateTimeZone$Info_getOffset(otcit_CachedDateTimeZone_getInfo($this, $instant), $instant);
}
function otcit_CachedDateTimeZone_getStandardOffset($this, $instant) {
    return otcit_CachedDateTimeZone$Info_getStandardOffset(otcit_CachedDateTimeZone_getInfo($this, $instant), $instant);
}
function otcit_CachedDateTimeZone_previousTransition($this, $instant) {
    return otcit_DateTimeZoneBuilder$PrecalculatedZone_previousTransition($this.$iZone, $instant);
}
function otcit_CachedDateTimeZone_getInfo($this, $millis) {
    var $period, $cache, $index, $info, var$6, var$7, var$8;
    $period = $millis.hi;
    $cache = $this.$iInfoCache.data;
    $index = $period & otcit_CachedDateTimeZone_cInfoCacheMask;
    $info = $cache[$index];
    if (!($info !== null && $info.$iPeriodStart.hi == $period)) {
        var$6 = Long_and($millis, new Long(0, 4294967295));
        $info = otcit_CachedDateTimeZone$Info__init_($this.$iZone, var$6);
        $millis = Long_or(var$6, new Long(4294967295, 0));
        var$7 = $info;
        a: {
            while (true) {
                var$8 = otcit_DateTimeZoneBuilder$PrecalculatedZone_nextTransition($this.$iZone, var$6);
                if (Long_eq(var$8, var$6))
                    break a;
                if (Long_gt(var$8, $millis))
                    break;
                var$7.$iNextInfo = otcit_CachedDateTimeZone$Info__init_($this.$iZone, var$8);
                var$7 = var$7.$iNextInfo;
                var$6 = var$8;
            }
        }
        $cache[$index] = $info;
    }
    return $info;
}
function otcit_CachedDateTimeZone__clinit_() {
    otcit_CachedDateTimeZone_cInfoCacheMask = 511;
}
function otcit_DateTimeZoneBuilder$Recurrence() {
    var a = this; jl_Object.call(a);
    a.$iOfYear = null;
    a.$iSaveMillis = 0;
}
function otcit_DateTimeZoneBuilder$Recurrence_next($this, $instant, $standardOffset, $saveMillis) {
    return otcit_DateTimeZoneBuilder$OfYear_next($this.$iOfYear, $instant, $standardOffset, $saveMillis);
}
function otcit_DateTimeZoneBuilder$Recurrence_previous($this, $instant, $standardOffset, $saveMillis) {
    return otcit_DateTimeZoneBuilder$OfYear_previous($this.$iOfYear, $instant, $standardOffset, $saveMillis);
}
function otcit_DateTimeZoneBuilder$Recurrence_getSaveMillis($this) {
    return $this.$iSaveMillis;
}
function otcit_DateTimeZoneBuilder$Recurrence_read($flow) {
    var var$2, var$3, $saveMillis, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $ofYear;
    var$2 = $flow.$characters0.data;
    var$3 = $flow.$pointer;
    $flow.$pointer = var$3 + 1 | 0;
    $saveMillis = var$2[var$3];
    var$3 = otci_Base46_decodeUnsigned($flow);
    var$5 = otci_Base46_decodeUnsigned($flow);
    var$6 = otci_Base46_decode($flow);
    var$2 = $flow.$characters0.data;
    var$7 = $flow.$pointer;
    $flow.$pointer = var$7 + 1 | 0;
    var$8 = var$2[var$7] != 121 ? 0 : 1;
    var$9 = Long_ZERO;
    var$10 = Long_fromInt(1);
    while (true) {
        var$2 = $flow.$characters0.data;
        var$11 = $flow.$pointer;
        $flow.$pointer = var$11 + 1 | 0;
        var$11 = otci_Base46_decodeDigit(var$2[var$11]);
        var$12 = (var$11 % 2 | 0) != 1 ? 0 : 1;
        var$9 = Long_add(var$9, Long_mul(var$10, Long_fromInt(var$11 / 2 | 0)));
        var$10 = Long_mul(var$10, Long_fromInt(46));
        if (!var$12)
            break;
    }
    var$7 = (Long_ne(Long_and(var$9, Long_fromInt(1)), Long_ZERO) ? Long_mul(Long_shru(var$9, 1), Long_fromInt(60000)) : Long_mul(Long_shru(var$9, 1), Long_fromInt(1800000))).lo;
    $ofYear = new otcit_DateTimeZoneBuilder$OfYear;
    if ($saveMillis != 117 && $saveMillis != 119 && $saveMillis != 115) {
        $ofYear = new jl_IllegalArgumentException;
        $flow = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($flow);
        $flow = jl_StringBuilder_append($flow, $rt_s(357));
        jl_AbstractStringBuilder_append($flow, $saveMillis);
        jl_Throwable__init_($ofYear, jl_AbstractStringBuilder_toString($flow));
        $rt_throw($ofYear);
    }
    $ofYear.$iMode = $saveMillis;
    $ofYear.$iMonthOfYear = var$3;
    $ofYear.$iDayOfMonth = var$5;
    $ofYear.$iDayOfWeek = var$6;
    $ofYear.$iAdvance = var$8;
    $ofYear.$iMillisOfDay = var$7;
    $saveMillis = otcit_StorableDateTimeZone_readTime($flow).lo;
    $flow = new otcit_DateTimeZoneBuilder$Recurrence;
    $flow.$iOfYear = $ofYear;
    $flow.$iSaveMillis = $saveMillis;
    return $flow;
}
function otcit_DateTimeZoneBuilder$OfYear() {
    var a = this; jl_Object.call(a);
    a.$iMode = 0;
    a.$iMonthOfYear = 0;
    a.$iDayOfMonth = 0;
    a.$iDayOfWeek = 0;
    a.$iAdvance = 0;
    a.$iMillisOfDay = 0;
}
function otcit_DateTimeZoneBuilder$OfYear_next($this, $instant, $offset, $saveMillis) {
    var var$4, $calendar;
    if ($this.$iMode == 119)
        $offset = $offset + $saveMillis | 0;
    else if ($this.$iMode != 115)
        $offset = 0;
    var$4 = Long_fromInt($offset);
    $instant = Long_add($instant, var$4);
    $calendar = ju_GregorianCalendar__init_1(otcit_DateTimeZoneBuilder_access$000());
    ju_Calendar_setTimeInMillis($calendar, $instant);
    ju_Calendar_set($calendar, 2, $this.$iMonthOfYear - 1 | 0);
    ju_Calendar_set($calendar, 5, 1);
    ju_Calendar_set($calendar, 11, 0);
    ju_Calendar_set($calendar, 12, 0);
    ju_Calendar_set($calendar, 13, 0);
    ju_Calendar_set($calendar, 14, 0);
    ju_GregorianCalendar_add($calendar, 14, $this.$iMillisOfDay);
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar);
    if ($this.$iDayOfWeek) {
        otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
        if (Long_le(ju_Calendar_getTimeInMillis($calendar), $instant)) {
            ju_GregorianCalendar_add($calendar, 1, 1);
            ju_Calendar_set($calendar, 2, $this.$iMonthOfYear - 1 | 0);
            otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar);
            otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
        }
    } else if (Long_le(ju_Calendar_getTimeInMillis($calendar), $instant)) {
        ju_GregorianCalendar_add($calendar, 1, 1);
        otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar);
    }
    return Long_sub(ju_Calendar_getTimeInMillis($calendar), var$4);
}
function otcit_DateTimeZoneBuilder$OfYear_previous($this, $instant, $offset, $saveMillis) {
    var var$4, $calendar;
    if ($this.$iMode == 119)
        $offset = $offset + $saveMillis | 0;
    else if ($this.$iMode != 115)
        $offset = 0;
    var$4 = Long_fromInt($offset);
    $instant = Long_add($instant, var$4);
    $calendar = ju_GregorianCalendar__init_1(otcit_DateTimeZoneBuilder_access$000());
    ju_Calendar_setTimeInMillis($calendar, $instant);
    ju_Calendar_set($calendar, 2, $this.$iMonthOfYear - 1 | 0);
    ju_Calendar_set($calendar, 5, 1);
    ju_Calendar_set($calendar, 11, 0);
    ju_Calendar_set($calendar, 12, 0);
    ju_Calendar_set($calendar, 13, 0);
    ju_Calendar_set($calendar, 14, 0);
    ju_GregorianCalendar_add($calendar, 14, $this.$iMillisOfDay);
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthPrevious($this, $calendar);
    if ($this.$iDayOfWeek) {
        otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
        if (Long_ge(ju_Calendar_getTimeInMillis($calendar), $instant)) {
            ju_GregorianCalendar_add($calendar, 1, (-1));
            ju_Calendar_set($calendar, 2, $this.$iMonthOfYear - 1 | 0);
            otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthPrevious($this, $calendar);
            otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar);
        }
    } else if (Long_ge(ju_Calendar_getTimeInMillis($calendar), $instant)) {
        ju_GregorianCalendar_add($calendar, 1, (-1));
        otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthPrevious($this, $calendar);
    }
    return Long_sub(ju_Calendar_getTimeInMillis($calendar), var$4);
}
function otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthNext($this, $calendar) {
    a: {
        if (ju_Calendar_get($calendar, 2) == 1 && ju_Calendar_get($calendar, 5) == 29)
            while (true) {
                if (ju_GregorianCalendar_isLeapYear($calendar, ju_Calendar_get($calendar, 1)))
                    break a;
                ju_GregorianCalendar_add($calendar, 1, 1);
            }
    }
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonth($this, $calendar);
}
function otcit_DateTimeZoneBuilder$OfYear_setDayOfMonthPrevious($this, $calendar) {
    a: {
        if (ju_Calendar_get($calendar, 2) == 1 && ju_Calendar_get($calendar, 5) == 29)
            while (true) {
                if (ju_GregorianCalendar_isLeapYear($calendar, ju_Calendar_get($calendar, 1)))
                    break a;
                ju_GregorianCalendar_add($calendar, 1, (-1));
            }
    }
    otcit_DateTimeZoneBuilder$OfYear_setDayOfMonth($this, $calendar);
}
function otcit_DateTimeZoneBuilder$OfYear_setDayOfMonth($this, $calendar) {
    if ($this.$iDayOfMonth >= 0)
        ju_Calendar_set($calendar, 5, $this.$iDayOfMonth);
    else {
        ju_Calendar_set($calendar, 5, 1);
        ju_GregorianCalendar_add($calendar, 2, 1);
        ju_GregorianCalendar_add($calendar, 5, $this.$iDayOfMonth);
    }
}
function otcit_DateTimeZoneBuilder$OfYear_setDayOfWeek($this, $calendar) {
    var $dayOfWeek, $daysToAdd;
    $dayOfWeek = ju_Calendar_get($calendar, 7);
    $daysToAdd = ($this.$iDayOfWeek == 7 ? 1 : $dayOfWeek + 1 | 0) - $dayOfWeek | 0;
    if ($daysToAdd) {
        if (!$this.$iAdvance) {
            if ($daysToAdd > 0)
                $daysToAdd = $daysToAdd + (-7) | 0;
        } else if ($daysToAdd < 0)
            $daysToAdd = $daysToAdd + 7 | 0;
        ju_GregorianCalendar_add($calendar, 5, $daysToAdd);
    }
}
function otciu_UnicodeHelper() {
    jl_Object.call(this);
}
function otciu_UnicodeHelper__init_0() {
    var var_0 = new otciu_UnicodeHelper();
    otciu_UnicodeHelper__init_(var_0);
    return var_0;
}
function otciu_UnicodeHelper__init_($this) {
    return;
}
function otciu_UnicodeHelper_decodeByte($c) {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
}
function otciu_UnicodeHelper_extractRle($encoded) {
    var $ranges, var$3, $buffer, var$5, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    var$3 = $ranges.data;
    $buffer = $rt_createByteArray(16384);
    var$5 = $buffer.data;
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < jl_String_length($encoded)) {
        $b = otciu_UnicodeHelper_decodeByte(jl_String_charAt($encoded, $i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte(jl_String_charAt($encoded, $i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $count = $count | $rt_imul($pos, otciu_UnicodeHelper_decodeByte(jl_String_charAt($encoded, $i)));
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte(jl_String_charAt($encoded, $i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                $pos = $rangeIndex + 1 | 0;
                var$3[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf1($buffer, $index));
                $rangeIndex = $pos;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            $digit = $index + $count | 0;
            if ($digit < var$5.length)
                $j = $rangeIndex;
            else {
                $j = $rangeIndex + 1 | 0;
                var$3[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf1($buffer, $index));
                $codePoint = $codePoint + $digit | 0;
                $index = 0;
            }
            while (true) {
                $pos = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                $digit = $index + 1 | 0;
                var$5[$index] = $b;
                $index = $digit;
                $count = $pos;
            }
            $rangeIndex = $j;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf($ranges, $rangeIndex);
}
function otcit_CachedDateTimeZone$Info() {
    var a = this; jl_Object.call(a);
    a.$iPeriodStart = Long_ZERO;
    a.$iZoneRef = null;
    a.$iNextInfo = null;
    a.$iOffset = 0;
    a.$iStandardOffset1 = 0;
}
function otcit_CachedDateTimeZone$Info__init_(var_0, var_1) {
    var var_2 = new otcit_CachedDateTimeZone$Info();
    otcit_CachedDateTimeZone$Info__init_0(var_2, var_0, var_1);
    return var_2;
}
function otcit_CachedDateTimeZone$Info__init_0($this, $zone, $periodStart) {
    $this.$iOffset = (-2147483648);
    $this.$iStandardOffset1 = (-2147483648);
    $this.$iPeriodStart = $periodStart;
    $this.$iZoneRef = $zone;
}
function otcit_CachedDateTimeZone$Info_getOffset($this, $millis) {
    if ($this.$iNextInfo !== null && Long_ge($millis, $this.$iNextInfo.$iPeriodStart))
        return otcit_CachedDateTimeZone$Info_getOffset($this.$iNextInfo, $millis);
    if ($this.$iOffset == (-2147483648))
        $this.$iOffset = otcit_DateTimeZoneBuilder$PrecalculatedZone_getOffset($this.$iZoneRef, $this.$iPeriodStart);
    return $this.$iOffset;
}
function otcit_CachedDateTimeZone$Info_getStandardOffset($this, $millis) {
    if ($this.$iNextInfo !== null && Long_ge($millis, $this.$iNextInfo.$iPeriodStart))
        return otcit_CachedDateTimeZone$Info_getStandardOffset($this.$iNextInfo, $millis);
    if ($this.$iStandardOffset1 == (-2147483648))
        $this.$iStandardOffset1 = otcit_DateTimeZoneBuilder$PrecalculatedZone_getStandardOffset($this.$iZoneRef, $this.$iPeriodStart);
    return $this.$iStandardOffset1;
}
function ju_Map$Entry() {
}
function ju_MapEntry() {
    var a = this; jl_Object.call(a);
    a.$key0 = null;
    a.$value1 = null;
}
function ju_MapEntry_equals($this, $object) {
    var $entry, var$3;
    if ($this === $object)
        return 1;
    if (!$rt_isInstance($object, ju_Map$Entry))
        return 0;
    a: {
        b: {
            c: {
                $entry = $object;
                if ($this.$key0 === null) {
                    if ($entry.$key0 !== null)
                        break c;
                } else if (!$this.$key0.$equals($entry.$key0))
                    break c;
                if ($this.$value1 === null) {
                    if ($entry.$value1 !== null)
                        break c;
                    break b;
                }
                if ($this.$value1.$equals($entry.$value1))
                    break b;
            }
            var$3 = 0;
            break a;
        }
        var$3 = 1;
    }
    return var$3;
}
function ju_MapEntry_getKey($this) {
    return $this.$key0;
}
function ju_MapEntry_getValue($this) {
    return $this.$value1;
}
function ju_MapEntry_hashCode($this) {
    return ($this.$key0 === null ? 0 : $this.$key0.$hashCode0()) ^ ($this.$value1 === null ? 0 : $this.$value1.$hashCode0());
}
function ju_HashMap$HashEntry() {
    var a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next2 = null;
}
function jl_StringIndexOutOfBoundsException() {
    jl_IndexOutOfBoundsException.call(this);
}
function jl_StringIndexOutOfBoundsException__init_0() {
    var var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_(var_0);
    return var_0;
}
function jl_StringIndexOutOfBoundsException__init_($this) {
    jl_Throwable__init_0($this);
}
function nms_MinecraftError() {
    jl_Error.call(this);
}
function nms_MinecraftError__init_0() {
    var var_0 = new nms_MinecraftError();
    nms_MinecraftError__init_(var_0);
    return var_0;
}
function nms_MinecraftError__init_($this) {
    jl_Throwable__init_0($this);
}
function nms_AxisAlignedBB() {
    var a = this; jl_Object.call(a);
    a.$minX = 0.0;
    a.$minY0 = 0.0;
    a.$minZ0 = 0.0;
    a.$maxX0 = 0.0;
    a.$maxY0 = 0.0;
    a.$maxZ0 = 0.0;
}
var nms_AxisAlignedBB_boundingBoxes = null;
var nms_AxisAlignedBB_numBoundingBoxesInUse = 0;
function nms_AxisAlignedBB_getBoundingBox($var0, $var2, $var4, $var6, $var8, $var10) {
    var var$7;
    var$7 = new nms_AxisAlignedBB;
    var$7.$minX = $var0;
    var$7.$minY0 = $var2;
    var$7.$minZ0 = $var4;
    var$7.$maxX0 = $var6;
    var$7.$maxY0 = $var8;
    var$7.$maxZ0 = $var10;
    return var$7;
}
function nms_AxisAlignedBB_clearBoundingBoxPool() {
    nms_AxisAlignedBB_numBoundingBoxesInUse = 0;
}
function nms_AxisAlignedBB_getBoundingBoxFromPool($var0, $var2, $var4, $var6, $var8, $var10) {
    var var$7, var$8;
    if (nms_AxisAlignedBB_numBoundingBoxesInUse >= nms_AxisAlignedBB_boundingBoxes.$size)
        ju_ArrayList_add(nms_AxisAlignedBB_boundingBoxes, nms_AxisAlignedBB_getBoundingBox(0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    var$7 = nms_AxisAlignedBB_boundingBoxes;
    var$8 = nms_AxisAlignedBB_numBoundingBoxesInUse;
    nms_AxisAlignedBB_numBoundingBoxesInUse = var$8 + 1 | 0;
    return nms_AxisAlignedBB_setBounds(ju_ArrayList_get(var$7, var$8), $var0, $var2, $var4, $var6, $var8, $var10);
}
function nms_AxisAlignedBB_setBounds($this, $var1, $var3, $var5, $var7, $var9, $var11) {
    $this.$minX = $var1;
    $this.$minY0 = $var3;
    $this.$minZ0 = $var5;
    $this.$maxX0 = $var7;
    $this.$maxY0 = $var9;
    $this.$maxZ0 = $var11;
    return $this;
}
function nms_AxisAlignedBB_addCoord($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11, $var13, $var15, $var17, var$10;
    $var7 = $this.$minX;
    $var9 = $this.$minY0;
    $var11 = $this.$minZ0;
    $var13 = $this.$maxX0;
    $var15 = $this.$maxY0;
    $var17 = $this.$maxZ0;
    var$10 = $rt_compare($var1, 0.0);
    if (var$10 < 0)
        $var7 = $var7 + $var1;
    if (var$10 > 0)
        $var13 = $var13 + $var1;
    var$10 = $rt_compare($var3, 0.0);
    if (var$10 < 0)
        $var9 = $var9 + $var3;
    if (var$10 > 0)
        $var15 = $var15 + $var3;
    var$10 = $rt_compare($var5, 0.0);
    if (var$10 < 0)
        $var11 = $var11 + $var5;
    if (var$10 > 0)
        $var17 = $var17 + $var5;
    return nms_AxisAlignedBB_getBoundingBoxFromPool($var7, $var9, $var11, $var13, $var15, $var17);
}
function nms_AxisAlignedBB_expands($this, $var1, $var3, $var5) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($this.$minX - $var1, $this.$minY0 - $var3, $this.$minZ0 - $var5, $this.$maxX0 + $var1, $this.$maxY0 + $var3, $this.$maxZ0 + $var5);
}
function nms_AxisAlignedBB_getOffsetBoundingBox($this, $var1, $var3, $var5) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($this.$minX + $var1, $this.$minY0 + $var3, $this.$minZ0 + $var5, $this.$maxX0 + $var1, $this.$maxY0 + $var3, $this.$maxZ0 + $var5);
}
function nms_AxisAlignedBB_func_1163_a($this, $var1, $var2) {
    var $var4, $var4_0;
    if ($var1.$maxY0 > $this.$minY0 && $var1.$minY0 < $this.$maxY0) {
        if ($var1.$maxZ0 > $this.$minZ0 && $var1.$minZ0 < $this.$maxZ0) {
            if ($var2 <= 0.0)
                $var4 = $var2;
            else if ($var1.$maxX0 > $this.$minX)
                $var4 = $var2;
            else {
                $var4 = $this.$minX - $var1.$maxX0;
                if ($var4 >= $var2)
                    $var4 = $var2;
            }
            if ($var4 >= 0.0)
                $var4_0 = $var4;
            else if ($var1.$minX < $this.$maxX0)
                $var4_0 = $var4;
            else {
                $var4_0 = $this.$maxX0 - $var1.$minX;
                if ($var4_0 <= $var4)
                    $var4_0 = $var4;
            }
            return $var4_0;
        }
        return $var2;
    }
    return $var2;
}
function nms_AxisAlignedBB_func_1172_b($this, $var1, $var2) {
    var $var4, $var4_0;
    if ($var1.$maxX0 > $this.$minX && $var1.$minX < $this.$maxX0) {
        if ($var1.$maxZ0 > $this.$minZ0 && $var1.$minZ0 < $this.$maxZ0) {
            if ($var2 <= 0.0)
                $var4 = $var2;
            else if ($var1.$maxY0 > $this.$minY0)
                $var4 = $var2;
            else {
                $var4 = $this.$minY0 - $var1.$maxY0;
                if ($var4 >= $var2)
                    $var4 = $var2;
            }
            if ($var4 >= 0.0)
                $var4_0 = $var4;
            else if ($var1.$minY0 < $this.$maxY0)
                $var4_0 = $var4;
            else {
                $var4_0 = $this.$maxY0 - $var1.$minY0;
                if ($var4_0 <= $var4)
                    $var4_0 = $var4;
            }
            return $var4_0;
        }
        return $var2;
    }
    return $var2;
}
function nms_AxisAlignedBB_func_1162_c($this, $var1, $var2) {
    var $var4, $var4_0;
    if ($var1.$maxX0 > $this.$minX && $var1.$minX < $this.$maxX0) {
        if ($var1.$maxY0 > $this.$minY0 && $var1.$minY0 < $this.$maxY0) {
            if ($var2 <= 0.0)
                $var4 = $var2;
            else if ($var1.$maxZ0 > $this.$minZ0)
                $var4 = $var2;
            else {
                $var4 = $this.$minZ0 - $var1.$maxZ0;
                if ($var4 >= $var2)
                    $var4 = $var2;
            }
            if ($var4 >= 0.0)
                $var4_0 = $var4;
            else if ($var1.$minZ0 < $this.$maxZ0)
                $var4_0 = $var4;
            else {
                $var4_0 = $this.$maxZ0 - $var1.$minZ0;
                if ($var4_0 <= $var4)
                    $var4_0 = $var4;
            }
            return $var4_0;
        }
        return $var2;
    }
    return $var2;
}
function nms_AxisAlignedBB_intersectsWith($this, $var1) {
    return $var1.$maxX0 > $this.$minX && $var1.$minX < $this.$maxX0 ? ($var1.$maxY0 > $this.$minY0 && $var1.$minY0 < $this.$maxY0 ? ($var1.$maxZ0 > $this.$minZ0 && $var1.$minZ0 < $this.$maxZ0 ? 1 : 0) : 0) : 0;
}
function nms_AxisAlignedBB_offset($this, $var1, $var3, $var5) {
    $this.$minX = $this.$minX + $var1;
    $this.$minY0 = $this.$minY0 + $var3;
    $this.$minZ0 = $this.$minZ0 + $var5;
    $this.$maxX0 = $this.$maxX0 + $var1;
    $this.$maxY0 = $this.$maxY0 + $var3;
    $this.$maxZ0 = $this.$maxZ0 + $var5;
    return $this;
}
function nms_AxisAlignedBB_isVecInside($this, $var1) {
    return $var1.$xCoord > $this.$minX && $var1.$xCoord < $this.$maxX0 ? ($var1.$yCoord > $this.$minY0 && $var1.$yCoord < $this.$maxY0 ? ($var1.$zCoord > $this.$minZ0 && $var1.$zCoord < $this.$maxZ0 ? 1 : 0) : 0) : 0;
}
function nms_AxisAlignedBB_getAverageEdgeLength($this) {
    return ($this.$maxX0 - $this.$minX + $this.$maxY0 - $this.$minY0 + $this.$maxZ0 - $this.$minZ0) / 3.0;
}
function nms_AxisAlignedBB_copy($this) {
    return nms_AxisAlignedBB_getBoundingBoxFromPool($this.$minX, $this.$minY0, $this.$minZ0, $this.$maxX0, $this.$maxY0, $this.$maxZ0);
}
function nms_AxisAlignedBB_func_1169_a($this, $var1, $var2) {
    var $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var10;
    $var3 = nms_Vec3D_getIntermediateWithXValue($var1, $var2, $this.$minX);
    $var4 = nms_Vec3D_getIntermediateWithXValue($var1, $var2, $this.$maxX0);
    $var5 = nms_Vec3D_getIntermediateWithYValue($var1, $var2, $this.$minY0);
    $var6 = nms_Vec3D_getIntermediateWithYValue($var1, $var2, $this.$maxY0);
    $var7 = nms_Vec3D_getIntermediateWithZValue($var1, $var2, $this.$minZ0);
    $var8 = nms_Vec3D_getIntermediateWithZValue($var1, $var2, $this.$maxZ0);
    if (!nms_AxisAlignedBB_isVecInYZ($this, $var3))
        $var3 = null;
    if (!nms_AxisAlignedBB_isVecInYZ($this, $var4))
        $var4 = null;
    if (!nms_AxisAlignedBB_isVecInXZ($this, $var5))
        $var5 = null;
    if (!nms_AxisAlignedBB_isVecInXZ($this, $var6))
        $var6 = null;
    if (!nms_AxisAlignedBB_isVecInXY($this, $var7))
        $var7 = null;
    if (!nms_AxisAlignedBB_isVecInXY($this, $var8))
        $var8 = null;
    $var9 = null;
    if ($var3 !== null)
        $var9 = $var3;
    if ($var4 !== null && !($var9 !== null && nms_Vec3D_squareDistanceTo($var1, $var4) >= nms_Vec3D_squareDistanceTo($var1, $var9)))
        $var9 = $var4;
    if ($var5 !== null && !($var9 !== null && nms_Vec3D_squareDistanceTo($var1, $var5) >= nms_Vec3D_squareDistanceTo($var1, $var9)))
        $var9 = $var5;
    if ($var6 !== null && !($var9 !== null && nms_Vec3D_squareDistanceTo($var1, $var6) >= nms_Vec3D_squareDistanceTo($var1, $var9)))
        $var9 = $var6;
    if ($var7 !== null && !($var9 !== null && nms_Vec3D_squareDistanceTo($var1, $var7) >= nms_Vec3D_squareDistanceTo($var1, $var9)))
        $var9 = $var7;
    if ($var8 !== null && !($var9 !== null && nms_Vec3D_squareDistanceTo($var1, $var8) >= nms_Vec3D_squareDistanceTo($var1, $var9)))
        $var9 = $var8;
    if ($var9 === null)
        return null;
    $var10 = (-1);
    if ($var9 === $var3)
        $var10 = 4;
    if ($var9 === $var4)
        $var10 = 5;
    if ($var9 === $var5)
        $var10 = 0;
    if ($var9 === $var6)
        $var10 = 1;
    if ($var9 === $var7)
        $var10 = 2;
    if ($var9 === $var8)
        $var10 = 3;
    return nms_MovingObjectPosition__init_0(0, 0, 0, $var10, $var9);
}
function nms_AxisAlignedBB_isVecInYZ($this, $var1) {
    return $var1 === null ? 0 : $var1.$yCoord >= $this.$minY0 && $var1.$yCoord <= $this.$maxY0 && $var1.$zCoord >= $this.$minZ0 && $var1.$zCoord <= $this.$maxZ0 ? 1 : 0;
}
function nms_AxisAlignedBB_isVecInXZ($this, $var1) {
    return $var1 === null ? 0 : $var1.$xCoord >= $this.$minX && $var1.$xCoord <= $this.$maxX0 && $var1.$zCoord >= $this.$minZ0 && $var1.$zCoord <= $this.$maxZ0 ? 1 : 0;
}
function nms_AxisAlignedBB_isVecInXY($this, $var1) {
    return $var1 === null ? 0 : $var1.$xCoord >= $this.$minX && $var1.$xCoord <= $this.$maxX0 && $var1.$yCoord >= $this.$minY0 && $var1.$yCoord <= $this.$maxY0 ? 1 : 0;
}
function nms_AxisAlignedBB_setBB($this, $var1) {
    $this.$minX = $var1.$minX;
    $this.$minY0 = $var1.$minY0;
    $this.$minZ0 = $var1.$minZ0;
    $this.$maxX0 = $var1.$maxX0;
    $this.$maxY0 = $var1.$maxY0;
    $this.$maxZ0 = $var1.$maxZ0;
}
function nms_AxisAlignedBB__clinit_() {
    nms_AxisAlignedBB_boundingBoxes = ju_ArrayList__init_0();
    nms_AxisAlignedBB_numBoundingBoxesInUse = 0;
}
function nms_Vec3D() {
    var a = this; jl_Object.call(a);
    a.$xCoord = 0.0;
    a.$yCoord = 0.0;
    a.$zCoord = 0.0;
}
var nms_Vec3D_vectorList = null;
var nms_Vec3D_nextVector = 0;
function nms_Vec3D_createVectorHelper($var0, $var2, $var4) {
    var var$4;
    var$4 = new nms_Vec3D;
    if ($var0 === -0.0)
        $var0 = 0.0;
    if ($var2 === -0.0)
        $var2 = 0.0;
    if ($var4 === -0.0)
        $var4 = 0.0;
    var$4.$xCoord = $var0;
    var$4.$yCoord = $var2;
    var$4.$zCoord = $var4;
    return var$4;
}
function nms_Vec3D_initialize() {
    nms_Vec3D_nextVector = 0;
}
function nms_Vec3D_createVector($var0, $var2, $var4) {
    var var$4, var$5;
    if (nms_Vec3D_nextVector >= nms_Vec3D_vectorList.$size)
        ju_ArrayList_add(nms_Vec3D_vectorList, nms_Vec3D_createVectorHelper(0.0, 0.0, 0.0));
    var$4 = nms_Vec3D_vectorList;
    var$5 = nms_Vec3D_nextVector;
    nms_Vec3D_nextVector = var$5 + 1 | 0;
    var$4 = ju_ArrayList_get(var$4, var$5);
    var$4.$xCoord = $var0;
    var$4.$yCoord = $var2;
    var$4.$zCoord = $var4;
    return var$4;
}
function nms_Vec3D_func_1262_a($this, $var1) {
    return nms_Vec3D_createVector($var1.$xCoord - $this.$xCoord, $var1.$yCoord - $this.$yCoord, $var1.$zCoord - $this.$zCoord);
}
function nms_Vec3D_normalize($this) {
    var $var1;
    $var1 = nms_MathHelper_sqrt_double($this.$xCoord * $this.$xCoord + $this.$yCoord * $this.$yCoord + $this.$zCoord * $this.$zCoord);
    return $var1 < 1.0E-4 ? nms_Vec3D_createVector(0.0, 0.0, 0.0) : nms_Vec3D_createVector($this.$xCoord / $var1, $this.$yCoord / $var1, $this.$zCoord / $var1);
}
function nms_Vec3D_crossProduct($this, $var1) {
    return nms_Vec3D_createVector($this.$yCoord * $var1.$zCoord - $this.$zCoord * $var1.$yCoord, $this.$zCoord * $var1.$xCoord - $this.$xCoord * $var1.$zCoord, $this.$xCoord * $var1.$yCoord - $this.$yCoord * $var1.$xCoord);
}
function nms_Vec3D_addVector($this, $var1, $var3, $var5) {
    return nms_Vec3D_createVector($this.$xCoord + $var1, $this.$yCoord + $var3, $this.$zCoord + $var5);
}
function nms_Vec3D_distanceTo($this, $var1) {
    var $var2, $var4, $var6;
    $var2 = $var1.$xCoord - $this.$xCoord;
    $var4 = $var1.$yCoord - $this.$yCoord;
    $var6 = $var1.$zCoord - $this.$zCoord;
    return nms_MathHelper_sqrt_double($var2 * $var2 + $var4 * $var4 + $var6 * $var6);
}
function nms_Vec3D_squareDistanceTo($this, $var1) {
    var $var2, $var4, $var6;
    $var2 = $var1.$xCoord - $this.$xCoord;
    $var4 = $var1.$yCoord - $this.$yCoord;
    $var6 = $var1.$zCoord - $this.$zCoord;
    return $var2 * $var2 + $var4 * $var4 + $var6 * $var6;
}
function nms_Vec3D_squareDistanceTo0($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11;
    $var7 = $var1 - $this.$xCoord;
    $var9 = $var3 - $this.$yCoord;
    $var11 = $var5 - $this.$zCoord;
    return $var7 * $var7 + $var9 * $var9 + $var11 * $var11;
}
function nms_Vec3D_lengthVector($this) {
    return nms_MathHelper_sqrt_double($this.$xCoord * $this.$xCoord + $this.$yCoord * $this.$yCoord + $this.$zCoord * $this.$zCoord);
}
function nms_Vec3D_getIntermediateWithXValue($this, $var1, $var2) {
    var $var4, $var6, $var8, $var10;
    $var4 = $var1.$xCoord - $this.$xCoord;
    $var6 = $var1.$yCoord - $this.$yCoord;
    $var8 = $var1.$zCoord - $this.$zCoord;
    if ($var4 * $var4 < 1.0000000116860974E-7)
        return null;
    $var10 = ($var2 - $this.$xCoord) / $var4;
    return $var10 >= 0.0 && $var10 <= 1.0 ? nms_Vec3D_createVector($this.$xCoord + $var4 * $var10, $this.$yCoord + $var6 * $var10, $this.$zCoord + $var8 * $var10) : null;
}
function nms_Vec3D_getIntermediateWithYValue($this, $var1, $var2) {
    var $var4, $var6, $var8, $var10;
    $var4 = $var1.$xCoord - $this.$xCoord;
    $var6 = $var1.$yCoord - $this.$yCoord;
    $var8 = $var1.$zCoord - $this.$zCoord;
    if ($var6 * $var6 < 1.0000000116860974E-7)
        return null;
    $var10 = ($var2 - $this.$yCoord) / $var6;
    return $var10 >= 0.0 && $var10 <= 1.0 ? nms_Vec3D_createVector($this.$xCoord + $var4 * $var10, $this.$yCoord + $var6 * $var10, $this.$zCoord + $var8 * $var10) : null;
}
function nms_Vec3D_getIntermediateWithZValue($this, $var1, $var2) {
    var $var4, $var6, $var8, $var10;
    $var4 = $var1.$xCoord - $this.$xCoord;
    $var6 = $var1.$yCoord - $this.$yCoord;
    $var8 = $var1.$zCoord - $this.$zCoord;
    if ($var8 * $var8 < 1.0000000116860974E-7)
        return null;
    $var10 = ($var2 - $this.$zCoord) / $var8;
    return $var10 >= 0.0 && $var10 <= 1.0 ? nms_Vec3D_createVector($this.$xCoord + $var4 * $var10, $this.$yCoord + $var6 * $var10, $this.$zCoord + $var8 * $var10) : null;
}
function nms_Vec3D_rotateAroundX($this, $var1) {
    var $var2, $var3, $var4, $var8, var$6, var$7, $var6;
    $var2 = nms_MathHelper_cos($var1);
    $var3 = nms_MathHelper_sin($var1);
    $var4 = $this.$xCoord;
    $var8 = $this.$yCoord;
    var$6 = $var2;
    var$7 = $var8 * var$6;
    $var6 = $this.$zCoord;
    $var8 = $var3;
    $var6 = var$7 + $var6 * $var8;
    $var8 = $this.$zCoord * var$6 - $this.$yCoord * $var8;
    $this.$xCoord = $var4;
    $this.$yCoord = $var6;
    $this.$zCoord = $var8;
}
function nms_Vec3D_rotateAroundY($this, $var1) {
    var $var2, $var3, $var4, $var8, $var6, var$7;
    $var2 = nms_MathHelper_cos($var1);
    $var3 = nms_MathHelper_sin($var1);
    $var4 = $this.$xCoord;
    $var8 = $var2;
    $var4 = $var4 * $var8;
    $var6 = $this.$zCoord;
    var$7 = $var3;
    $var4 = $var4 + $var6 * var$7;
    $var6 = $this.$yCoord;
    $var8 = $this.$zCoord * $var8 - $this.$xCoord * var$7;
    $this.$xCoord = $var4;
    $this.$yCoord = $var6;
    $this.$zCoord = $var8;
}
function nms_Vec3D__clinit_() {
    nms_Vec3D_vectorList = ju_ArrayList__init_0();
    nms_Vec3D_nextVector = 0;
}
function nms_GameSettings() {
    var a = this; jl_Object.call(a);
    a.$musicVolume = 0.0;
    a.$soundVolume = 0.0;
    a.$mouseSensitivity = 0.0;
    a.$invertMouse = 0;
    a.$renderDistance = 0;
    a.$viewBobbing = 0;
    a.$anaglyph = 0;
    a.$limitFramerate = 0;
    a.$fancyGraphics = 0;
    a.$skin = null;
    a.$keyBindForward = null;
    a.$keyBindLeft = null;
    a.$keyBindBack = null;
    a.$keyBindRight = null;
    a.$keyBindJump = null;
    a.$keyBindInventory = null;
    a.$keyBindDrop = null;
    a.$keyBindChat = null;
    a.$keyBindToggleFog = null;
    a.$keyBindSneak = null;
    a.$keyBindings = null;
    a.$mc4 = null;
    a.$numberOfOptions = 0;
    a.$difficulty = 0;
    a.$thirdPersonView = 0;
    a.$field_12259_z = null;
}
var nms_GameSettings_RENDER_DISTANCES = null;
var nms_GameSettings_DIFFICULTY_LEVELS = null;
function nms_GameSettings__init_0(var_0) {
    var var_1 = new nms_GameSettings();
    nms_GameSettings__init_1(var_1, var_0);
    return var_1;
}
function nms_GameSettings__init_2() {
    var var_0 = new nms_GameSettings();
    nms_GameSettings__init_(var_0);
    return var_0;
}
function nms_GameSettings__init_1($this, $var1) {
    var var$2, var$3;
    $this.$musicVolume = 1.0;
    $this.$soundVolume = 1.0;
    $this.$mouseSensitivity = 0.5;
    $this.$invertMouse = 0;
    $this.$renderDistance = 0;
    $this.$viewBobbing = 1;
    $this.$anaglyph = 0;
    $this.$limitFramerate = 0;
    $this.$fancyGraphics = 1;
    $this.$skin = $rt_s(358);
    $this.$keyBindForward = nms_KeyBinding__init_($rt_s(359), 17);
    $this.$keyBindLeft = nms_KeyBinding__init_($rt_s(360), 30);
    $this.$keyBindBack = nms_KeyBinding__init_($rt_s(361), 31);
    $this.$keyBindRight = nms_KeyBinding__init_($rt_s(362), 32);
    $this.$keyBindJump = nms_KeyBinding__init_($rt_s(363), 57);
    $this.$keyBindInventory = nms_KeyBinding__init_($rt_s(364), 23);
    $this.$keyBindDrop = nms_KeyBinding__init_($rt_s(365), 16);
    $this.$keyBindChat = nms_KeyBinding__init_($rt_s(366), 20);
    $this.$keyBindToggleFog = nms_KeyBinding__init_($rt_s(367), 33);
    $this.$keyBindSneak = nms_KeyBinding__init_($rt_s(368), 42);
    var$2 = $rt_createArray(nms_KeyBinding, 10);
    var$3 = var$2.data;
    var$3[0] = $this.$keyBindForward;
    var$3[1] = $this.$keyBindLeft;
    var$3[2] = $this.$keyBindBack;
    var$3[3] = $this.$keyBindRight;
    var$3[4] = $this.$keyBindJump;
    var$3[5] = $this.$keyBindSneak;
    var$3[6] = $this.$keyBindDrop;
    var$3[7] = $this.$keyBindInventory;
    var$3[8] = $this.$keyBindChat;
    var$3[9] = $this.$keyBindToggleFog;
    $this.$keyBindings = var$2;
    $this.$numberOfOptions = 10;
    $this.$difficulty = 2;
    $this.$thirdPersonView = 0;
    $this.$field_12259_z = $rt_s(17);
    $this.$mc4 = $var1;
    nms_GameSettings_loadOptions($this);
}
function nms_GameSettings__init_($this) {
    var var$1, var$2;
    $this.$musicVolume = 1.0;
    $this.$soundVolume = 1.0;
    $this.$mouseSensitivity = 0.5;
    $this.$invertMouse = 0;
    $this.$renderDistance = 0;
    $this.$viewBobbing = 1;
    $this.$anaglyph = 0;
    $this.$limitFramerate = 0;
    $this.$fancyGraphics = 1;
    $this.$skin = $rt_s(358);
    $this.$keyBindForward = nms_KeyBinding__init_($rt_s(359), 17);
    $this.$keyBindLeft = nms_KeyBinding__init_($rt_s(360), 30);
    $this.$keyBindBack = nms_KeyBinding__init_($rt_s(361), 31);
    $this.$keyBindRight = nms_KeyBinding__init_($rt_s(362), 32);
    $this.$keyBindJump = nms_KeyBinding__init_($rt_s(363), 57);
    $this.$keyBindInventory = nms_KeyBinding__init_($rt_s(364), 23);
    $this.$keyBindDrop = nms_KeyBinding__init_($rt_s(365), 16);
    $this.$keyBindChat = nms_KeyBinding__init_($rt_s(366), 20);
    $this.$keyBindToggleFog = nms_KeyBinding__init_($rt_s(367), 33);
    $this.$keyBindSneak = nms_KeyBinding__init_($rt_s(368), 42);
    var$1 = $rt_createArray(nms_KeyBinding, 10);
    var$2 = var$1.data;
    var$2[0] = $this.$keyBindForward;
    var$2[1] = $this.$keyBindLeft;
    var$2[2] = $this.$keyBindBack;
    var$2[3] = $this.$keyBindRight;
    var$2[4] = $this.$keyBindJump;
    var$2[5] = $this.$keyBindSneak;
    var$2[6] = $this.$keyBindDrop;
    var$2[7] = $this.$keyBindInventory;
    var$2[8] = $this.$keyBindChat;
    var$2[9] = $this.$keyBindToggleFog;
    $this.$keyBindings = var$1;
    $this.$numberOfOptions = 10;
    $this.$difficulty = 2;
    $this.$thirdPersonView = 0;
    $this.$field_12259_z = $rt_s(17);
}
function nms_GameSettings_getKeyBinding($this, $var1) {
    var var$2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    var$2 = jl_StringBuilder_append(jl_StringBuilder_append(var$2, $this.$keyBindings.data[$var1].$keyDescription), $rt_s(18));
    $var1 = $this.$keyBindings.data[$var1].$keyCode;
    nlea_EaglerAdapterImpl2_$callClinit();
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(var$2, $var1 >= 0 && $var1 < 256 ? nlea_EaglerAdapterImpl2_LWJGLKeyNames.data[$var1] : $rt_s(15)));
}
function nms_GameSettings_setKeyBinding($this, $var1, $var2) {
    $this.$keyBindings.data[$var1].$keyCode = $var2;
    nms_GameSettings_saveOptions($this);
}
function nms_GameSettings_setOptionFloatValue($this, $var1, $var2) {
    if (!$var1)
        $this.$musicVolume = $var2;
    if ($var1 == 1)
        $this.$soundVolume = $var2;
    if ($var1 == 3)
        $this.$mouseSensitivity = $var2;
}
function nms_GameSettings_setOptionValue($this, $var1, $var2) {
    if ($var1 == 2)
        $this.$invertMouse = $this.$invertMouse ? 0 : 1;
    if ($var1 == 4)
        $this.$renderDistance = ($this.$renderDistance + $var2 | 0) & 3;
    if ($var1 == 5)
        $this.$viewBobbing = $this.$viewBobbing ? 0 : 1;
    if ($var1 == 6)
        $this.$anaglyph = $this.$anaglyph ? 0 : 1;
    if ($var1 == 7)
        $this.$limitFramerate = $this.$limitFramerate ? 0 : 1;
    if ($var1 == 8)
        $this.$difficulty = ($this.$difficulty + $var2 | 0) & 3;
    if ($var1 == 9) {
        $this.$fancyGraphics = $this.$fancyGraphics ? 0 : 1;
        nms_RenderGlobal_func_958_a($this.$mc4.$field_6323_f);
    }
    nms_GameSettings_saveOptions($this);
}
function nms_GameSettings_getOptionControlType($this, $var1) {
    return !$var1 ? 1 : $var1 == 1 ? 1 : $var1 != 3 ? 0 : 1;
}
function nms_GameSettings_getOptionFloatValue($this, $var1) {
    return !$var1 ? $this.$musicVolume : $var1 == 1 ? $this.$soundVolume : $var1 != 3 ? 0.0 : $this.$mouseSensitivity;
}
function nms_GameSettings_getOptionDisplayString($this, $var1) {
    var var$2, var$3;
    a: {
        if (!$var1) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_StringBuilder_append(var$2, $rt_s(369));
            if ($this.$musicVolume <= 0.0)
                var$3 = $rt_s(370);
            else {
                var$3 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$3);
                var$3 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, $this.$musicVolume * 100.0 | 0), $rt_s(371)));
            }
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(var$2, var$3));
            break a;
        }
        if ($var1 == 1) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_StringBuilder_append(var$2, $rt_s(372));
            if ($this.$soundVolume <= 0.0)
                var$3 = $rt_s(370);
            else {
                var$3 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$3);
                var$3 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, $this.$soundVolume * 100.0 | 0), $rt_s(371)));
            }
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(var$2, var$3));
            break a;
        }
        if ($var1 == 2) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(373)), !$this.$invertMouse ? $rt_s(370) : $rt_s(374)));
            break a;
        }
        if ($var1 == 3) {
            if ($this.$mouseSensitivity === 0.0) {
                var$2 = $rt_s(375);
                break a;
            }
            if ($this.$mouseSensitivity === 1.0) {
                var$2 = $rt_s(376);
                break a;
            }
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(377)), $this.$mouseSensitivity * 200.0 | 0), $rt_s(371)));
            break a;
        }
        if ($var1 == 4) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(378)), nms_GameSettings_RENDER_DISTANCES.data[$this.$renderDistance]));
            break a;
        }
        if ($var1 == 5) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(379)), !$this.$viewBobbing ? $rt_s(370) : $rt_s(374)));
            break a;
        }
        if ($var1 == 6) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(380)), !$this.$anaglyph ? $rt_s(370) : $rt_s(374)));
            break a;
        }
        if ($var1 == 7) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(381)), !$this.$limitFramerate ? $rt_s(370) : $rt_s(374)));
            break a;
        }
        if ($var1 == 8) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(382)), nms_GameSettings_DIFFICULTY_LEVELS.data[$this.$difficulty]));
            break a;
        }
        if ($var1 != 9) {
            var$2 = $rt_s(17);
            break a;
        }
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(383)), !$this.$fancyGraphics ? $rt_s(384) : $rt_s(385)));
    }
    return var$2;
}
function nms_GameSettings_loadOptions($this) {
    var $fileData, $var5, $byteArrayInputStream, $inputStreamReader, $var1, $var4, $$je;
    a: {
        b: {
            c: {
                try {
                    $fileData = nlea_EaglerAdapterImpl2_readFile($rt_s(386));
                    if ($fileData !== null)
                        break c;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $var5 = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                $byteArrayInputStream = ji_ByteArrayInputStream__init_($fileData);
                $inputStreamReader = ji_InputStreamReader__init_($byteArrayInputStream, $rt_s(31));
                $var1 = ji_BufferedReader__init_($inputStreamReader);
                while (true) {
                    $byteArrayInputStream = ji_BufferedReader_readLine($var1);
                    if ($byteArrayInputStream === null)
                        break;
                    $fileData = jl_String_split($byteArrayInputStream, $rt_s(353)).data;
                    if (jl_String_equals($fileData[0], $rt_s(387)))
                        $this.$musicVolume = nms_GameSettings_parseFloat($this, $fileData[1]);
                    if (jl_String_equals($fileData[0], $rt_s(388)))
                        $this.$soundVolume = nms_GameSettings_parseFloat($this, $fileData[1]);
                    if (jl_String_equals($fileData[0], $rt_s(389)))
                        $this.$mouseSensitivity = nms_GameSettings_parseFloat($this, $fileData[1]);
                    if (jl_String_equals($fileData[0], $rt_s(390)))
                        $this.$invertMouse = jl_String_equals($fileData[1], $rt_s(23));
                    if (jl_String_equals($fileData[0], $rt_s(391)))
                        $this.$renderDistance = jl_Integer_parseInt0($fileData[1]);
                    if (jl_String_equals($fileData[0], $rt_s(392)))
                        $this.$viewBobbing = jl_String_equals($fileData[1], $rt_s(23));
                    if (jl_String_equals($fileData[0], $rt_s(393)))
                        $this.$anaglyph = jl_String_equals($fileData[1], $rt_s(23));
                    if (jl_String_equals($fileData[0], $rt_s(394)))
                        $this.$limitFramerate = jl_String_equals($fileData[1], $rt_s(23));
                    if (jl_String_equals($fileData[0], $rt_s(395)))
                        $this.$difficulty = jl_Integer_parseInt0($fileData[1]);
                    if (jl_String_equals($fileData[0], $rt_s(396)))
                        $this.$fancyGraphics = jl_String_equals($fileData[1], $rt_s(23));
                    if (jl_String_equals($fileData[0], $rt_s(397)))
                        $this.$skin = $fileData[1];
                    if (jl_String_equals($fileData[0], $rt_s(398)))
                        $this.$field_12259_z = $fileData[1];
                    $var4 = 0;
                    while ($var4 < $this.$keyBindings.data.length) {
                        if (jl_String_equals($fileData[0], jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(399)), $this.$keyBindings.data[$var4].$keyDescription))))
                            $this.$keyBindings.data[$var4].$keyCode = jl_Integer_parseInt0($fileData[1]);
                        $var4 = $var4 + 1 | 0;
                    }
                }
                ji_BufferedReader_close($var1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var5 = $$je;
                } else {
                    throw $$e;
                }
            }
        }
        ji_PrintStream_println(jl_System_out(), $rt_s(400));
        jl_Throwable_printStackTrace0($var5);
    }
}
function nms_GameSettings_parseFloat($this, $var1) {
    return jl_String_equals($var1, $rt_s(23)) ? 1.0 : !jl_String_equals($var1, $rt_s(22)) ? jl_Float_parseFloat($var1) : 0.0;
}
function nms_GameSettings_saveOptions($this) {
    var $byteArrayOutputStream, $var1, $var2, $var3, $$je;
    a: {
        try {
            $byteArrayOutputStream = ji_ByteArrayOutputStream__init_0();
            $var1 = ji_PrintWriter__init_0($byteArrayOutputStream);
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(401)), $this.$musicVolume)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(402)), $this.$soundVolume)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append8(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(403)), $this.$invertMouse)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(404)), $this.$mouseSensitivity)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(405)), $this.$renderDistance)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append8(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(406)), $this.$viewBobbing)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append8(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(407)), $this.$anaglyph)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append8(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(408)), $this.$limitFramerate)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(409)), $this.$difficulty)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append8(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(410)), $this.$fancyGraphics)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(411)), $this.$skin)));
            ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(412)), $this.$field_12259_z)));
            $var2 = 0;
            while ($var2 < $this.$keyBindings.data.length) {
                ji_PrintWriter_println1($var1, jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(399)), $this.$keyBindings.data[$var2].$keyDescription), $rt_s(353)), $this.$keyBindings.data[$var2].$keyCode)));
                $var2 = $var2 + 1 | 0;
            }
            ji_PrintWriter_flush($var1);
            nlea_EaglerAdapterImpl2_writeFile($rt_s(386), ji_ByteArrayOutputStream_toByteArray($byteArrayOutputStream));
            ji_PrintWriter_close($var1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var3 = $$je;
            } else {
                throw $$e;
            }
        }
        ji_PrintStream_println(jl_System_out(), $rt_s(413));
        jl_Throwable_printStackTrace0($var3);
    }
}
function nms_GameSettings__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_String, 4);
    var$2 = var$1.data;
    var$2[0] = $rt_s(414);
    var$2[1] = $rt_s(415);
    var$2[2] = $rt_s(416);
    var$2[3] = $rt_s(417);
    nms_GameSettings_RENDER_DISTANCES = var$1;
    var$1 = $rt_createArray(jl_String, 4);
    var$2 = var$1.data;
    var$2[0] = $rt_s(418);
    var$2[1] = $rt_s(419);
    var$2[2] = $rt_s(420);
    var$2[3] = $rt_s(421);
    nms_GameSettings_DIFFICULTY_LEVELS = var$1;
}
function oli_Keyboard() {
    olo_GL11.call(this);
}
function oli_Keyboard__init_0() {
    var var_0 = new oli_Keyboard();
    oli_Keyboard__init_(var_0);
    return var_0;
}
function oli_Keyboard__init_($this) {
    olo_EaglerAdapterGL30__init_($this);
}
function oli_Keyboard_next() {
    var var$1, var$2;
    nlea_EaglerAdapterImpl2_$callClinit();
    if (!nlea_EaglerAdapterImpl2_unpressCTRL)
        a: {
            nlea_EaglerAdapterImpl2_currentEventK = null;
            if (!ju_AbstractCollection_isEmpty(nlea_EaglerAdapterImpl2_keyEvents)) {
                var$1 = ju_AbstractSequentialList_remove(nlea_EaglerAdapterImpl2_keyEvents, 0);
                nlea_EaglerAdapterImpl2_currentEventK = var$1;
                if (var$1 !== null) {
                    var$2 = 1;
                    break a;
                }
            }
            var$2 = 0;
        }
    else {
        ju_LinkedList_clear(nlea_EaglerAdapterImpl2_keyEvents);
        nlea_EaglerAdapterImpl2_currentEventK = null;
        nlea_EaglerAdapterImpl2_keyStates.data[29] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[157] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[28] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[219] = 0;
        nlea_EaglerAdapterImpl2_keyStates.data[220] = 0;
        nlea_EaglerAdapterImpl2_unpressCTRL = 0;
        var$2 = 0;
    }
    return var$2;
}
function nms_WorldRenderer() {
    var a = this; jl_Object.call(a);
    a.$worldObj2 = null;
    a.$field_1744_C = 0;
    a.$field_1761_c = 0;
    a.$field_1760_d = 0;
    a.$field_1759_e = 0;
    a.$field_1758_f = 0;
    a.$field_1757_g = 0;
    a.$field_1756_h = 0;
    a.$field_1755_i = 0;
    a.$field_1754_j = 0;
    a.$field_1753_k = 0;
    a.$field_1752_l = 0;
    a.$field_1751_m = 0;
    a.$field_1750_n = 0;
    a.$field_1749_o = 0;
    a.$field_1748_p = null;
    a.$field_1746_q = 0;
    a.$field_1743_r = 0;
    a.$field_1741_s = 0;
    a.$field_1740_t = 0.0;
    a.$needsUpdate = 0;
    a.$field_1736_v = null;
    a.$field_1735_w = 0;
    a.$field_1734_x = 0;
    a.$field_1733_y = 0;
    a.$field_1747_A = 0;
    a.$field_1739_E = 0;
    a.$field_1745_B = null;
    a.$field_1737_F = null;
}
var nms_WorldRenderer_field_1742_D = null;
var nms_WorldRenderer_field_1762_b = 0;
function nms_WorldRenderer_$callClinit() {
    nms_WorldRenderer_$callClinit = $rt_eraseClinit(nms_WorldRenderer);
    nms_WorldRenderer__clinit_();
}
function nms_WorldRenderer_func_1197_a($this, $var1, $var2, $var3) {
    var var$4, var$5;
    if (!($var1 == $this.$field_1761_c && $var2 == $this.$field_1760_d && $var3 == $this.$field_1759_e)) {
        nms_WorldRenderer_func_1195_b($this);
        $this.$field_1761_c = $var1;
        $this.$field_1760_d = $var2;
        $this.$field_1759_e = $var3;
        $this.$field_1746_q = $var1 + ($this.$field_1758_f / 2 | 0) | 0;
        $this.$field_1743_r = $var2 + ($this.$field_1757_g / 2 | 0) | 0;
        $this.$field_1741_s = $var3 + ($this.$field_1756_h / 2 | 0) | 0;
        $this.$field_1752_l = $var1 & 1023;
        $this.$field_1751_m = $var2;
        $this.$field_1750_n = $var3 & 1023;
        $this.$field_1755_i = $var1 - $this.$field_1752_l | 0;
        $this.$field_1754_j = $var2 - $this.$field_1751_m | 0;
        $this.$field_1753_k = $var3 - $this.$field_1750_n | 0;
        $this.$field_1736_v = nms_AxisAlignedBB_getBoundingBox($var1 - 2.0, $var2 - 2.0, $var3 - 2.0, ($var1 + $this.$field_1758_f | 0) + 2.0, ($var2 + $this.$field_1757_g | 0) + 2.0, ($var3 + $this.$field_1756_h | 0) + 2.0);
        olo_EaglerAdapterGL30_glNewList($this.$field_1744_C + 2 | 0, 4864);
        var$4 = nms_AxisAlignedBB_getBoundingBoxFromPool($this.$field_1752_l - 2.0, $this.$field_1751_m - 2.0, $this.$field_1750_n - 2.0, ($this.$field_1752_l + $this.$field_1758_f | 0) + 2.0, ($this.$field_1751_m + $this.$field_1757_g | 0) + 2.0, ($this.$field_1750_n + $this.$field_1756_h | 0) + 2.0);
        nms_Tessellator_$callClinit();
        var$5 = nms_Tessellator_instance;
        nms_Tessellator_startDrawingQuads(var$5);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$maxY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$maxY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$minY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$minY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$minY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$minY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$maxY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$maxY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$minY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$minY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$minY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$minY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$maxY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$maxY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$maxY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$maxY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$minY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$maxY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$maxY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$minX, var$4.$minY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$minY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$maxY0, var$4.$minZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$maxY0, var$4.$maxZ0);
        nms_Tessellator_addVertex(var$5, var$4.$maxX0, var$4.$minY0, var$4.$maxZ0);
        nms_Tessellator_draw(var$5);
        olo_EaglerAdapterGL30_glEndList();
        nms_WorldRenderer_MarkDirty($this);
    }
}
function nms_WorldRenderer_func_1198_a($this) {
    var $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var21, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17, $var18, $var23, $var24, $var20, $var22, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var22 = $thread.pop();$var20 = $thread.pop();$var24 = $thread.pop();$var23 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var16 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var21 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 =
        $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$needsUpdate) {
            nms_WorldRenderer_field_1762_b = nms_WorldRenderer_field_1762_b + 1 | 0;
            $var1 = $this.$field_1761_c;
            $var2 = $this.$field_1760_d;
            $var3 = $this.$field_1759_e;
            $var4 = $this.$field_1761_c + $this.$field_1758_f | 0;
            $var5 = $this.$field_1760_d + $this.$field_1757_g | 0;
            $var6 = $this.$field_1759_e + $this.$field_1756_h | 0;
            $var7 = 0;
            while ($var7 < 2) {
                $this.$field_1748_p.data[$var7] = 1;
                $var7 = $var7 + 1 | 0;
            }
            nms_Chunk_field_1540_a = 0;
            $var21 = ju_HashSet__init_0();
            ju_AbstractCollection_addAll($var21, $this.$field_1745_B);
            ju_ArrayList_clear($this.$field_1745_B);
            $var9 = nms_ChunkCache__init_($this.$worldObj2, $var1 - 1 | 0, $var2 - 1 | 0, $var3 - 1 | 0, $var4 + 1 | 0, $var5 + 1 | 0, $var6 + 1 | 0);
            $var10 = nms_RenderBlocks__init_1($var9);
            $var11 = 0;
            a: {
                while (true) {
                    if ($var11 >= 2)
                        break a;
                    $var12 = 0;
                    $var13 = 0;
                    $var14 = 0;
                    $var15 = $var2;
                    while ($var15 < $var5) {
                        $var16 = $var3;
                        while ($var16 < $var6) {
                            $var17 = $var1;
                            while ($var17 < $var4) {
                                $var18 = nms_ChunkCache_getBlockId($var9, $var17, $var15, $var16);
                                if ($var18 > 0) {
                                    if (!$var14) {
                                        $var14 = 1;
                                        olo_EaglerAdapterGL30_glNewList($this.$field_1744_C + $var11 | 0, 4864);
                                        olo_EaglerAdapterGL30_glPushMatrix();
                                        olo_EaglerAdapterGL30_glTranslatef($this.$field_1752_l, $this.$field_1751_m, $this.$field_1750_n);
                                        olo_EaglerAdapterGL30_glTranslatef( -$this.$field_1756_h / 2.0,  -$this.$field_1757_g / 2.0,  -$this.$field_1756_h / 2.0);
                                        olo_EaglerAdapterGL30_glScalef(1.0000009536743164, 1.0000009536743164, 1.0000009536743164);
                                        olo_EaglerAdapterGL30_glTranslatef($this.$field_1756_h / 2.0, $this.$field_1757_g / 2.0, $this.$field_1756_h / 2.0);
                                        nms_Tessellator_startDrawingQuads(nms_WorldRenderer_field_1742_D);
                                        nms_Tessellator_setTranslationD(nms_WorldRenderer_field_1742_D,  -$this.$field_1761_c,  -$this.$field_1760_d,  -$this.$field_1759_e);
                                    }
                                    if (!$var11) {
                                        nms_Block_$callClinit();
                                        if (nms_Block_isBlockContainer.data[$var18]) {
                                            $var23 = nms_ChunkCache_getBlockTileEntity($var9, $var17, $var15, $var16);
                                            if (nms_TileEntityRenderer_hasSpecialRenderer(nms_TileEntityRenderer_instance, $var23))
                                                ju_ArrayList_add($this.$field_1745_B, $var23);
                                        }
                                    }
                                    nms_Block_$callClinit();
                                    $var24 = nms_Block_blocksList.data[$var18];
                                    $var20 = $rt_compare($var24.$func_234_g(), $var11);
                                    if ($var20)
                                        $var12 = 1;
                                    else if (!$var20) {
                                        $ptr = 1;
                                        continue main;
                                    }
                                }
                                $var17 = $var17 + 1 | 0;
                            }
                            $var16 = $var16 + 1 | 0;
                        }
                        $var15 = $var15 + 1 | 0;
                    }
                    if (!$var14)
                        $var13 = 0;
                    else {
                        nms_Tessellator_draw(nms_WorldRenderer_field_1742_D);
                        olo_EaglerAdapterGL30_glPopMatrix();
                        olo_EaglerAdapterGL30_glEndList();
                        nms_Tessellator_setTranslationD(nms_WorldRenderer_field_1742_D, 0.0, 0.0, 0.0);
                    }
                    if ($var13)
                        $this.$field_1748_p.data[$var11] = 0;
                    if (!$var12)
                        break;
                    $var11 = $var11 + 1 | 0;
                }
            }
            $var22 = ju_HashSet__init_0();
            ju_AbstractCollection_addAll($var22, $this.$field_1745_B);
            ju_AbstractSet_removeAll($var22, $var21);
            ju_AbstractCollection_addAll($this.$field_1737_F, $var22);
            ju_AbstractSet_removeAll($var21, $this.$field_1745_B);
            ju_AbstractCollection_removeAll($this.$field_1737_F, $var21);
            $this.$field_1747_A = nms_Chunk_field_1540_a;
            $this.$field_1739_E = 1;
        }
        return;
    case 1:
        $tmp = nms_RenderBlocks_renderBlockByRenderType($var10, $var24, $var17, $var15, $var16);
        if ($rt_suspending()) {
            break main;
        }
        $var20 = $tmp;
        $var13 = $var13 | $var20;
        b: {
            c: while (true) {
                $var17 = $var17 + 1 | 0;
                while ($var17 >= $var4) {
                    $var16 = $var16 + 1 | 0;
                    while ($var16 >= $var6) {
                        $var15 = $var15 + 1 | 0;
                        while ($var15 >= $var5) {
                            if (!$var14)
                                $var13 = 0;
                            else {
                                nms_Tessellator_draw(nms_WorldRenderer_field_1742_D);
                                olo_EaglerAdapterGL30_glPopMatrix();
                                olo_EaglerAdapterGL30_glEndList();
                                nms_Tessellator_setTranslationD(nms_WorldRenderer_field_1742_D, 0.0, 0.0, 0.0);
                            }
                            if ($var13)
                                $this.$field_1748_p.data[$var11] = 0;
                            if (!$var12)
                                break c;
                            $var11 = $var11 + 1 | 0;
                            if ($var11 >= 2)
                                break b;
                            $var12 = 0;
                            $var13 = 0;
                            $var14 = 0;
                            $var15 = $var2;
                        }
                        $var16 = $var3;
                    }
                    $var17 = $var1;
                }
                $var18 = nms_ChunkCache_getBlockId($var9, $var17, $var15, $var16);
                if ($var18 <= 0)
                    continue;
                if (!$var14) {
                    $var14 = 1;
                    olo_EaglerAdapterGL30_glNewList($this.$field_1744_C + $var11 | 0, 4864);
                    olo_EaglerAdapterGL30_glPushMatrix();
                    olo_EaglerAdapterGL30_glTranslatef($this.$field_1752_l, $this.$field_1751_m, $this.$field_1750_n);
                    olo_EaglerAdapterGL30_glTranslatef( -$this.$field_1756_h / 2.0,  -$this.$field_1757_g / 2.0,  -$this.$field_1756_h / 2.0);
                    olo_EaglerAdapterGL30_glScalef(1.0000009536743164, 1.0000009536743164, 1.0000009536743164);
                    olo_EaglerAdapterGL30_glTranslatef($this.$field_1756_h / 2.0, $this.$field_1757_g / 2.0, $this.$field_1756_h / 2.0);
                    nms_Tessellator_startDrawingQuads(nms_WorldRenderer_field_1742_D);
                    nms_Tessellator_setTranslationD(nms_WorldRenderer_field_1742_D,  -$this.$field_1761_c,  -$this.$field_1760_d,  -$this.$field_1759_e);
                }
                if (!$var11) {
                    nms_Block_$callClinit();
                    if (nms_Block_isBlockContainer.data[$var18]) {
                        $var23 = nms_ChunkCache_getBlockTileEntity($var9, $var17, $var15, $var16);
                        if (nms_TileEntityRenderer_hasSpecialRenderer(nms_TileEntityRenderer_instance, $var23))
                            ju_ArrayList_add($this.$field_1745_B, $var23);
                    }
                }
                nms_Block_$callClinit();
                $var24 = nms_Block_blocksList.data[$var18];
                $var20 = $rt_compare($var24.$func_234_g(), $var11);
                if ($var20) {
                    $var12 = 1;
                    continue;
                }
                if (!$var20) {
                    continue main;
                }
            }
        }
        $var22 = ju_HashSet__init_0();
        ju_AbstractCollection_addAll($var22, $this.$field_1745_B);
        ju_AbstractSet_removeAll($var22, $var21);
        ju_AbstractCollection_addAll($this.$field_1737_F, $var22);
        ju_AbstractSet_removeAll($var21, $this.$field_1745_B);
        ju_AbstractCollection_removeAll($this.$field_1737_F, $var21);
        $this.$field_1747_A = nms_Chunk_field_1540_a;
        $this.$field_1739_E = 1;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var21, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17, $var18, $var23, $var24, $var20, $var22, $ptr);
}
function nms_WorldRenderer_func_1202_a($this, $var1) {
    var $var2, $var3, $var4;
    $var2 = $var1.$posX - $this.$field_1746_q;
    $var3 = $var1.$posY - $this.$field_1743_r;
    $var4 = $var1.$posZ - $this.$field_1741_s;
    return $var2 * $var2 + $var3 * $var3 + $var4 * $var4;
}
function nms_WorldRenderer_func_1195_b($this) {
    var $var1;
    $var1 = 0;
    while ($var1 < 2) {
        $this.$field_1748_p.data[$var1] = 1;
        $var1 = $var1 + 1 | 0;
    }
    $this.$field_1749_o = 0;
    $this.$field_1739_E = 0;
}
function nms_WorldRenderer_func_1204_c($this) {
    nms_WorldRenderer_func_1195_b($this);
    $this.$worldObj2 = null;
}
function nms_WorldRenderer_func_1200_a($this, $var1) {
    return !$this.$field_1749_o ? (-1) : $this.$field_1748_p.data[$var1] ? (-1) : $this.$field_1744_C + $var1 | 0;
}
function nms_WorldRenderer_func_1199_a($this, $var1) {
    $this.$field_1749_o = nms_Frustrum_func_342_a($var1, $this.$field_1736_v);
}
function nms_WorldRenderer_func_1196_e($this) {
    return !$this.$field_1739_E ? 0 : $this.$field_1748_p.data[0] && $this.$field_1748_p.data[1] ? 1 : 0;
}
function nms_WorldRenderer_MarkDirty($this) {
    $this.$needsUpdate = 1;
}
function nms_WorldRenderer__clinit_() {
    nms_Tessellator_$callClinit();
    nms_WorldRenderer_field_1742_D = nms_Tessellator_instance;
    nms_WorldRenderer_field_1762_b = 0;
}
function nms_UnexpectedThrowable() {
    var a = this; jl_Object.call(a);
    a.$description = null;
    a.$exception = null;
}
function nms_UnexpectedThrowable__init_0(var_0, var_1) {
    var var_2 = new nms_UnexpectedThrowable();
    nms_UnexpectedThrowable__init_(var_2, var_0, var_1);
    return var_2;
}
function nms_UnexpectedThrowable__init_($this, $var1, $var2) {
    $this.$description = $var1;
    $this.$exception = $var2;
}
function nms_MinecraftException() {
    jl_RuntimeException.call(this);
}
function nms_MinecraftException__init_(var_0) {
    var var_1 = new nms_MinecraftException();
    nms_MinecraftException__init_0(var_1, var_0);
    return var_1;
}
function nms_MinecraftException__init_0($this, $var1) {
    jl_Throwable__init_($this, $var1);
}
function nms_Gui() {
    jl_Object.call(this);
    this.$zLevel = 0.0;
}
function nms_Gui__init_0() {
    var var_0 = new nms_Gui();
    nms_Gui__init_(var_0);
    return var_0;
}
function nms_Gui__init_($this) {
    $this.$zLevel = 0.0;
}
function nms_Gui_drawRect($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, $var10, var$11, var$12, var$13;
    $var6 = ($var5 >> 24 & 255) / 255.0;
    $var7 = ($var5 >> 16 & 255) / 255.0;
    $var8 = ($var5 >> 8 & 255) / 255.0;
    $var9 = ($var5 & 255) / 255.0;
    nms_Tessellator_$callClinit();
    $var10 = nms_Tessellator_instance;
    olo_EaglerAdapterGL30_glEnable(3042);
    olo_EaglerAdapterGL30_glDisable(3553);
    olo_EaglerAdapterGL30_glBlendFunc(770, 771);
    olo_EaglerAdapterGL30_glColor4f($var7, $var8, $var9, $var6);
    nms_Tessellator_startDrawingQuads($var10);
    var$11 = $var1;
    var$12 = $var4;
    nms_Tessellator_addVertex($var10, var$11, var$12, 0.0);
    var$13 = $var3;
    nms_Tessellator_addVertex($var10, var$13, var$12, 0.0);
    var$12 = $var2;
    nms_Tessellator_addVertex($var10, var$13, var$12, 0.0);
    nms_Tessellator_addVertex($var10, var$11, var$12, 0.0);
    nms_Tessellator_draw($var10);
    olo_EaglerAdapterGL30_glEnable(3553);
    olo_EaglerAdapterGL30_glDisable(3042);
}
function nms_Gui_drawGradientRect($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15, var$16, var$17, var$18;
    $var7 = ($var5 >> 24 & 255) / 255.0;
    $var8 = ($var5 >> 16 & 255) / 255.0;
    $var9 = ($var5 >> 8 & 255) / 255.0;
    $var10 = ($var5 & 255) / 255.0;
    $var11 = ($var6 >> 24 & 255) / 255.0;
    $var12 = ($var6 >> 16 & 255) / 255.0;
    $var13 = ($var6 >> 8 & 255) / 255.0;
    $var14 = ($var6 & 255) / 255.0;
    olo_EaglerAdapterGL30_glDisable(3553);
    olo_EaglerAdapterGL30_glEnable(3042);
    olo_EaglerAdapterGL30_glDisable(3008);
    olo_EaglerAdapterGL30_glBlendFunc(770, 771);
    nms_Tessellator_$callClinit();
    $var15 = nms_Tessellator_instance;
    nms_Tessellator_startDrawingQuads($var15);
    nms_Tessellator_setColorRGBA_F($var15, $var8, $var9, $var10, $var7);
    var$16 = $var3;
    var$17 = $var2;
    nms_Tessellator_addVertex($var15, var$16, var$17, 0.0);
    var$18 = $var1;
    nms_Tessellator_addVertex($var15, var$18, var$17, 0.0);
    nms_Tessellator_setColorRGBA_F($var15, $var12, $var13, $var14, $var11);
    var$17 = $var4;
    nms_Tessellator_addVertex($var15, var$18, var$17, 0.0);
    nms_Tessellator_addVertex($var15, var$16, var$17, 0.0);
    nms_Tessellator_draw($var15);
    olo_EaglerAdapterGL30_glDisable(3042);
    olo_EaglerAdapterGL30_glEnable(3008);
    olo_EaglerAdapterGL30_glEnable(3553);
}
function nms_Gui_drawCenteredString($this, $var1, $var2, $var3, $var4, $var5) {
    nms_FontRenderer_drawStringWithShadow($var1, $var2, $var3 - (nms_FontRenderer_getStringWidth($var1, $var2) / 2 | 0) | 0, $var4, $var5);
}
function nms_Gui_drawString($this, $var1, $var2, $var3, $var4, $var5) {
    nms_FontRenderer_drawStringWithShadow($var1, $var2, $var3, $var4, $var5);
}
function nms_Gui_drawTexturedModalRect($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var9, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    nms_Tessellator_$callClinit();
    $var9 = nms_Tessellator_instance;
    nms_Tessellator_startDrawingQuads($var9);
    var$8 = $var1 + 0 | 0;
    var$9 = $var2 + $var6 | 0;
    var$10 = $this.$zLevel;
    var$11 = ($var3 + 0 | 0) * 0.00390625;
    var$12 = ($var4 + $var6 | 0) * 0.00390625;
    nms_Tessellator_addVertexWithUV($var9, var$8, var$9, var$10, var$11, var$12);
    var$13 = $var1 + $var5 | 0;
    var$14 = $this.$zLevel;
    var$10 = ($var3 + $var5 | 0) * 0.00390625;
    nms_Tessellator_addVertexWithUV($var9, var$13, var$9, var$14, var$10, var$12);
    var$12 = $var2 + 0 | 0;
    var$14 = $this.$zLevel;
    var$9 = ($var4 + 0 | 0) * 0.00390625;
    nms_Tessellator_addVertexWithUV($var9, var$13, var$12, var$14, var$10, var$9);
    nms_Tessellator_addVertexWithUV($var9, var$8, var$12, $this.$zLevel, var$11, var$9);
    nms_Tessellator_draw($var9);
}
function nms_GuiScreen() {
    var a = this; nms_Gui.call(a);
    a.$mc5 = null;
    a.$width = 0;
    a.$height0 = 0;
    a.$controlList = null;
    a.$field_948_f = 0;
    a.$fontRenderer0 = null;
    a.$selectedButton = null;
}
function nms_GuiScreen__init_0() {
    var var_0 = new nms_GuiScreen();
    nms_GuiScreen__init_(var_0);
    return var_0;
}
function nms_GuiScreen__init_($this) {
    nms_Gui__init_($this);
    $this.$controlList = ju_ArrayList__init_0();
    $this.$field_948_f = 0;
    $this.$selectedButton = null;
}
function nms_GuiScreen_drawScreen($this, $var1, $var2, $var3) {
    var $var4, $var5, var$6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var4 = 0;
        if ($var4 >= $this.$controlList.$size)
            return;
        $var5 = ju_ArrayList_get($this.$controlList, $var4);
        var$6 = $this.$mc5;
        $ptr = 1;
    case 1:
        nms_GuiButton_drawButton($var5, var$6, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var4 = $var4 + 1 | 0;
        if ($var4 >= $this.$controlList.$size)
            return;
        $var5 = ju_ArrayList_get($this.$controlList, $var4);
        var$6 = $this.$mc5;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, var$6, $ptr);
}
function nms_GuiScreen_keyTyped($this, $var1, $var2) {
    if ($var2 == 1) {
        nmc_Minecraft_displayGuiScreen($this.$mc5, null);
        nmc_Minecraft_func_6259_e($this.$mc5);
    }
}
function nms_GuiScreen_mouseClicked($this, $var1, $var2, $var3) {
    var $var4, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            if (!$var3) {
                $var4 = 0;
                while (true) {
                    if ($var4 >= $this.$controlList.$size)
                        break a;
                    $var5 = ju_ArrayList_get($this.$controlList, $var4);
                    if ($var5.$mousePressed($this.$mc5, $var1, $var2)) {
                        $this.$selectedButton = $var5;
                        $ptr = 1;
                        continue main;
                    }
                    $var4 = $var4 + 1 | 0;
                }
            }
        }
        return;
    case 1:
        $this.$actionPerformed($var5);
        if ($rt_suspending()) {
            break main;
        }
        while (true) {
            $var4 = $var4 + 1 | 0;
            if ($var4 >= $this.$controlList.$size)
                break;
            $var5 = ju_ArrayList_get($this.$controlList, $var4);
            if (!$var5.$mousePressed($this.$mc5, $var1, $var2))
                continue;
            else {
                $this.$selectedButton = $var5;
                continue main;
            }
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $ptr);
}
function nms_GuiScreen_mouseMovedOrUp($this, $var1, $var2, $var3) {
    if ($this.$selectedButton !== null && !$var3) {
        $this.$selectedButton.$mouseReleased($var1, $var2);
        $this.$selectedButton = null;
    }
}
function nms_GuiScreen_actionPerformed($this, $var1) {
    return;
}
function nms_GuiScreen_setWorldAndResolution($this, $var1, $var2, $var3) {
    $this.$mc5 = $var1;
    $this.$fontRenderer0 = $var1.$fontRenderer;
    $this.$width = $var2;
    $this.$height0 = $var3;
    ju_ArrayList_clear($this.$controlList);
    $this.$initGui();
}
function nms_GuiScreen_initGui($this) {
    return;
}
function nms_GuiScreen_handleInput($this) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!oli_Mouse_next()) {
            while (oli_Keyboard_next()) {
                nms_GuiScreen_handleKeyboardInput($this);
            }
            return;
        }
        $ptr = 1;
    case 1:
        nms_GuiScreen_handleMouseInput($this);
        if ($rt_suspending()) {
            break main;
        }
        if (!oli_Mouse_next()) {
            while (oli_Keyboard_next()) {
                nms_GuiScreen_handleKeyboardInput($this);
            }
            return;
        }
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $ptr);
}
function nms_GuiScreen_handleMouseInput($this) {
    var $var1, $var2, $var1_0, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var1_0 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!oli_Mouse_getEventButtonState()) {
            $this.$mouseMovedOrUp($rt_imul(oli_Mouse_getEventX(), $this.$width) / $this.$mc5.$displayWidth | 0, ($this.$height0 - ($rt_imul(oli_Mouse_getEventY(), $this.$height0) / $this.$mc5.$displayHeight | 0) | 0) - 1 | 0, oli_Mouse_getEventButton());
            return;
        }
        $var1 = $rt_imul(oli_Mouse_getEventX(), $this.$width) / $this.$mc5.$displayWidth | 0;
        $var2 = ($this.$height0 - ($rt_imul(oli_Mouse_getEventY(), $this.$height0) / $this.$mc5.$displayHeight | 0) | 0) - 1 | 0;
        $var1_0 = oli_Mouse_getEventButton();
        $ptr = 1;
    case 1:
        $this.$mouseClicked($var1, $var2, $var1_0);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var1_0, $ptr);
}
function nms_GuiScreen_handleKeyboardInput($this) {
    var var$1, var$2;
    if (nlea_EaglerAdapterImpl2_getEventKeyState()) {
        if (nlea_EaglerAdapterImpl2_currentEventK === null)
            var$1 = 0;
        else {
            var$2 = $rt_str(nlea_EaglerAdapterImpl2_currentEventK.key);
            var$1 = nlea_EaglerAdapterImpl2_currentEventK === null ? 32 : jl_String_length(var$2) > 1 ? 0 : jl_String_charAt(var$2, 0);
        }
        $this.$keyTyped(var$1, nlea_EaglerAdapterImpl2_getEventKey());
    }
}
function nms_GuiScreen_updateScreen($this) {
    return;
}
function nms_GuiScreen_onGuiClosed($this) {
    return;
}
function nms_GuiScreen_drawDefaultBackground($this) {
    var var$1, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$1 = 0;
        $ptr = 1;
    case 1:
        nms_GuiScreen_func_567_a($this, var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, var$1, $ptr);
}
function nms_GuiScreen_func_567_a($this, $var1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$mc5.$theWorld !== null) {
            nms_Gui_drawGradientRect($this, 0, 0, $this.$width, $this.$height0, (-1072689136), (-804253680));
            return;
        }
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawBackground($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $ptr);
}
function nms_GuiScreen_drawBackground($this, $var1) {
    var $var2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glDisable(2896);
        olo_EaglerAdapterGL30_glDisable(2912);
        nms_Tessellator_$callClinit();
        $var2 = nms_Tessellator_instance;
        var$3 = 3553;
        var$4 = $this.$mc5.$renderEngine;
        var$5 = $rt_s(212);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$4, var$5);
        if ($rt_suspending()) {
            break main;
        }
        var$6 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$3, var$6);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_Tessellator_startDrawingQuads($var2);
        nms_Tessellator_setColorOpaque_I($var2, 4210752);
        var$7 = $this.$height0;
        var$8 = $this.$height0 / 32.0;
        var$9 = $var1;
        nms_Tessellator_addVertexWithUV($var2, 0.0, var$7, 0.0, 0.0, var$8 + var$9);
        nms_Tessellator_addVertexWithUV($var2, $this.$width, $this.$height0, 0.0, $this.$width / 32.0, $this.$height0 / 32.0 + var$9);
        var$10 = $this.$width;
        var$11 = $this.$width / 32.0;
        var$7 = 0 + $var1 | 0;
        nms_Tessellator_addVertexWithUV($var2, var$10, 0.0, 0.0, var$11, var$7);
        nms_Tessellator_addVertexWithUV($var2, 0.0, 0.0, 0.0, 0.0, var$7);
        nms_Tessellator_draw($var2);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $ptr);
}
function nms_GuiScreen_doesGuiPauseGame($this) {
    return 1;
}
function nms_GuiConflictWarning() {
    nms_GuiScreen.call(this);
    this.$updateCounter0 = 0;
}
function nms_GuiConflictWarning__init_0() {
    var var_0 = new nms_GuiConflictWarning();
    nms_GuiConflictWarning__init_(var_0);
    return var_0;
}
function nms_GuiConflictWarning__init_($this) {
    nms_GuiScreen__init_($this);
    $this.$updateCounter0 = 0;
}
function nms_GuiConflictWarning_updateScreen($this) {
    $this.$updateCounter0 = $this.$updateCounter0 + 1 | 0;
}
function nms_GuiConflictWarning_initGui($this) {
    ju_ArrayList_clear($this.$controlList);
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(0, ($this.$width / 2 | 0) - 100 | 0, (($this.$height0 / 4 | 0) + 120 | 0) + 12 | 0, $rt_s(422)));
}
function nms_GuiConflictWarning_actionPerformed($this, $var1) {
    if ($var1.$enabled && !$var1.$id2)
        nmc_Minecraft_displayGuiScreen($this.$mc5, nms_GuiMainMenu__init_0());
}
function nms_GuiConflictWarning_drawScreen($this, $var1, $var2, $var3) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $rt_s(423), $this.$width / 2 | 0, (($this.$height0 / 4 | 0) - 60 | 0) + 20 | 0, 16777215);
        nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(424), ($this.$width / 2 | 0) - 140 | 0, ((($this.$height0 / 4 | 0) - 60 | 0) + 60 | 0) + 0 | 0, 10526880);
        nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(425), ($this.$width / 2 | 0) - 140 | 0, ((($this.$height0 / 4 | 0) - 60 | 0) + 60 | 0) + 18 | 0, 10526880);
        nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(426), ($this.$width / 2 | 0) - 140 | 0, ((($this.$height0 / 4 | 0) - 60 | 0) + 60 | 0) + 27 | 0, 10526880);
        nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(427), ($this.$width / 2 | 0) - 140 | 0, ((($this.$height0 / 4 | 0) - 60 | 0) + 60 | 0) + 45 | 0, 10526880);
        $ptr = 2;
    case 2:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function ji_EOFException() {
    ji_IOException.call(this);
}
function ji_EOFException__init_0() {
    var var_0 = new ji_EOFException();
    ji_EOFException__init_(var_0);
    return var_0;
}
function ji_EOFException__init_($this) {
    jl_Throwable__init_0($this);
}
function otp_PlatformRunnable() {
}
function jl_Thread$start$lambda$_4_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
function jl_Thread$start$lambda$_4_0_run(var$0) {
    var var$1, var$2, var$3, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$1 = var$0.$_01;
        try {
            jl_Thread_activeCount = jl_Thread_activeCount + 1 | 0;
            jl_Thread_setCurrentThread(var$1);
            $ptr = 1;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;

        }
        var$3 = var$1.$finishedLock;
        $ptr = 2;
        continue main;
    case 1:
        a: {
            try {
                nms_ThreadSleepForever_run(var$1);
                if ($rt_suspending()) {
                    break main;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break a;

            }
            var$2 = var$1.$finishedLock;
            $ptr = 3;
            continue main;
        }
        var$3 = var$1.$finishedLock;
        $ptr = 2;
    case 2:
        jl_Object_monitorEnter(var$3);
        if ($rt_suspending()) {
            break main;
        }
        a: {
            try {
                jl_Object_notifyAll(var$1.$finishedLock);
                jl_Object_monitorExit(var$3);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$1 = $$je;

            }
            jl_Object_monitorExit(var$3);
            $rt_throw(var$1);
        }
        var$1.$alive = 0;
        jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
        jl_Thread_setCurrentThread(jl_Thread_mainThread);
        $rt_throw(var$2);
    case 3:
        jl_Object_monitorEnter(var$2);
        if ($rt_suspending()) {
            break main;
        }
        a: {
            try {
                jl_Object_notifyAll(var$1.$finishedLock);
                jl_Object_monitorExit(var$2);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$1 = $$je;

            }
            jl_Object_monitorExit(var$2);
            $rt_throw(var$1);
        }
        var$1.$alive = 0;
        jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
        jl_Thread_setCurrentThread(jl_Thread_mainThread);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, var$2, var$3, $ptr);
}
function nms_PositionTexureVertex() {
    var a = this; jl_Object.call(a);
    a.$vector3D = null;
    a.$texturePositionX = 0.0;
    a.$texturePositionY = 0.0;
}
function nms_PositionTexureVertex__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_PositionTexureVertex();
    nms_PositionTexureVertex__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_PositionTexureVertex__init_0($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$vector3D = nms_Vec3D_createVectorHelper($var1, $var2, $var3);
    $this.$texturePositionX = $var4;
    $this.$texturePositionY = $var5;
}
function nms_PositionTexureVertex_setTexturePosition($this, $var1, $var2) {
    var var$3;
    var$3 = new nms_PositionTexureVertex;
    var$3.$vector3D = $this.$vector3D;
    var$3.$texturePositionX = $var1;
    var$3.$texturePositionY = $var2;
    return var$3;
}
function nms_TexturedQuad() {
    var a = this; jl_Object.call(a);
    a.$field_1195_a = null;
    a.$field_1194_b = 0;
    a.$field_1196_c = 0;
}
function nms_TexturedQuad__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_TexturedQuad();
    nms_TexturedQuad__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_TexturedQuad__init_($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, var$7, var$8, var$9, var$10, $var6;
    var$6 = $var1.data;
    $this.$field_1194_b = 0;
    $this.$field_1196_c = 0;
    $this.$field_1195_a = $var1;
    $this.$field_1194_b = var$6.length;
    var$7 = var$6[0];
    var$8 = $var4 / 64.0 - 0.0015625000232830644;
    var$9 = $var3 / 32.0 + 0.0031250000465661287;
    var$6[0] = nms_PositionTexureVertex_setTexturePosition(var$7, var$8, var$9);
    var$7 = var$6[1];
    var$10 = $var2 / 64.0 + 0.0015625000232830644;
    var$6[1] = nms_PositionTexureVertex_setTexturePosition(var$7, var$10, var$9);
    var$7 = var$6[2];
    $var6 = $var5 / 32.0 - 0.0031250000465661287;
    var$6[2] = nms_PositionTexureVertex_setTexturePosition(var$7, var$10, $var6);
    var$6[3] = nms_PositionTexureVertex_setTexturePosition(var$6[3], var$8, $var6);
}
function nms_TexturedQuad_func_809_a($this) {
    var $var1, var$2, $var2;
    $var1 = $rt_createArray(nms_PositionTexureVertex, $this.$field_1195_a.data.length);
    var$2 = $var1.data;
    $var2 = 0;
    while ($var2 < $this.$field_1195_a.data.length) {
        var$2[$var2] = $this.$field_1195_a.data[($this.$field_1195_a.data.length - $var2 | 0) - 1 | 0];
        $var2 = $var2 + 1 | 0;
    }
    $this.$field_1195_a = $var1;
}
function nms_TexturedQuad_func_808_a($this, $var1, $var2) {
    var $var3, $var5, $var6, $var7;
    $var3 = nms_Vec3D_func_1262_a($this.$field_1195_a.data[1].$vector3D, $this.$field_1195_a.data[0].$vector3D);
    $var5 = nms_Vec3D_normalize(nms_Vec3D_crossProduct(nms_Vec3D_func_1262_a($this.$field_1195_a.data[1].$vector3D, $this.$field_1195_a.data[2].$vector3D), $var3));
    nms_Tessellator_startDrawingQuads($var1);
    if (!$this.$field_1196_c)
        olo_EaglerAdapterGL30_glNormal3f($var5.$xCoord, $var5.$yCoord, $var5.$zCoord);
    else
        olo_EaglerAdapterGL30_glNormal3f( -$var5.$xCoord,  -$var5.$yCoord,  -$var5.$zCoord);
    $var6 = 0;
    while ($var6 < 4) {
        $var7 = $this.$field_1195_a.data[$var6];
        nms_Tessellator_addVertexWithUV($var1, $var7.$vector3D.$xCoord * $var2, $var7.$vector3D.$yCoord * $var2, $var7.$vector3D.$zCoord * $var2, $var7.$texturePositionX, $var7.$texturePositionY);
        $var6 = $var6 + 1 | 0;
    }
    nms_Tessellator_draw($var1);
}
function cjj_Inflate() {
    var a = this; jl_Object.call(a);
    a.$mode0 = 0;
    a.$method = 0;
    a.$was = Long_ZERO;
    a.$need = Long_ZERO;
    a.$marker = 0;
    a.$wrap4 = 0;
    a.$wbits = 0;
    a.$blocks = null;
    a.$z = null;
    a.$flags1 = 0;
    a.$need_bytes = 0;
    a.$crcbuf = null;
    a.$gheader = null;
    a.$tmp_string = null;
}
var cjj_Inflate_mark = null;
function cjj_Inflate_inflateReset($this) {
    var var$1;
    if ($this.$z === null)
        return (-2);
    var$1 = $this.$z;
    $this.$z.$total_out = Long_ZERO;
    var$1.$total_in = Long_ZERO;
    $this.$z.$msg = null;
    $this.$mode0 = 14;
    $this.$need_bytes = (-1);
    cjj_InfBlocks_reset($this.$blocks);
    return 0;
}
function cjj_Inflate_inflateEnd($this) {
    if ($this.$blocks !== null)
        cjj_InfBlocks_free($this.$blocks);
    return 0;
}
function cjj_Inflate_inflateInit($this, $w) {
    var var$2, var$3, var$4, var$5;
    $this.$z.$msg = null;
    $this.$blocks = null;
    $this.$wrap4 = 0;
    if ($w < 0)
        $w =  -$w;
    else if ($w & 1073741824) {
        $this.$wrap4 = 4;
        $w = $w & (-1073741825);
        if ($w < 48)
            $w = $w & 15;
    } else if ($w & (-32)) {
        $this.$wrap4 = 4;
        $w = $w & 15;
    } else {
        $this.$wrap4 = ($w >> 4) + 1 | 0;
        if ($w < 48)
            $w = $w & 15;
    }
    if ($w >= 8 && $w <= 15) {
        if ($this.$blocks !== null && $this.$wbits != $w) {
            cjj_InfBlocks_free($this.$blocks);
            $this.$blocks = null;
        }
        $this.$wbits = $w;
        var$2 = new cjj_InfBlocks;
        var$3 = $this.$z;
        $w = 1 << $w;
        var$2.$bb = $rt_createIntArray(1);
        var$2.$tb = $rt_createIntArray(1);
        var$2.$bl = $rt_createIntArray(1);
        var$2.$bd = $rt_createIntArray(1);
        var$2.$tl = $rt_createArray($rt_arraycls($rt_intcls()), 1);
        var$2.$td = $rt_createArray($rt_arraycls($rt_intcls()), 1);
        var$2.$tli = $rt_createIntArray(1);
        var$2.$tdi = $rt_createIntArray(1);
        var$2.$inftree = cjj_InfTree__init_0();
        var$2.$z1 = var$3;
        var$4 = new cjj_InfCodes;
        var$5 = var$2.$z1;
        var$4.$tree_index = 0;
        var$4.$z2 = var$5;
        var$4.$s = var$2;
        var$2.$codes = var$4;
        var$2.$hufts = $rt_createIntArray(4320);
        var$2.$window = $rt_createByteArray($w);
        var$2.$end1 = $w;
        var$2.$check = var$3.$istate.$wrap4 ? 1 : 0;
        var$2.$mode1 = 0;
        cjj_InfBlocks_reset(var$2);
        $this.$blocks = var$2;
        cjj_Inflate_inflateReset($this);
        return 0;
    }
    cjj_Inflate_inflateEnd($this);
    return (-2);
}
function cjj_Inflate_inflate($this, $f) {
    var var$2, $r, $e, $foo, var$6, $b, var$8, $$je;
    if ($this.$z !== null && $this.$z.$next_in !== null) {
        var$2 = $f != 4 ? 0 : (-5);
        $r = (-5);
        a: {
            b: {
                c: {
                    d: {
                        e: {
                            f: {
                                g: {
                                    h: {
                                        i: while (true) {
                                            j: {
                                                k: {
                                                    l: {
                                                        m: {
                                                            n: {
                                                                o: {
                                                                    p: {
                                                                        q: {
                                                                            r: {
                                                                                s: {
                                                                                    t: {
                                                                                        u: {
                                                                                            v: {
                                                                                                w: {
                                                                                                    switch ($this.$mode0) {
                                                                                                        case 6:
                                                                                                            $this.$mode0 = 13;
                                                                                                            $this.$z.$msg = $rt_s(428);
                                                                                                            $this.$marker = 0;
                                                                                                            return (-2);
                                                                                                        case 7:
                                                                                                            $r = cjj_InfBlocks_proc($this.$blocks, $r);
                                                                                                            if ($r == (-3)) {
                                                                                                                $this.$mode0 = 13;
                                                                                                                $this.$marker = 0;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if (!$r)
                                                                                                                $r = var$2;
                                                                                                            if ($r != 1)
                                                                                                                break i;
                                                                                                            $this.$was = $this.$z.$adler.$getValue();
                                                                                                            cjj_InfBlocks_reset($this.$blocks);
                                                                                                            if (!$this.$wrap4) {
                                                                                                                $this.$mode0 = 12;
                                                                                                                $r = var$2;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            $this.$mode0 = 8;
                                                                                                            $r = var$2;
                                                                                                            break w;
                                                                                                        case 12:
                                                                                                            break e;
                                                                                                        case 13:
                                                                                                            return (-3);
                                                                                                        case 14:
                                                                                                            break r;
                                                                                                        case 23:
                                                                                                            try {
                                                                                                                $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                                                            } catch ($$e) {
                                                                                                                $$je = $rt_wrapException($$e);
                                                                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                                                                    $e = $$je;
                                                                                                                    return $e.$r;
                                                                                                                } else {
                                                                                                                    throw $$e;
                                                                                                                }
                                                                                                            }
                                                                                                            $this.$flags1 = $this.$need.lo & 65535;
                                                                                                            if (($this.$flags1 & 255) != 8) {
                                                                                                                $this.$z.$msg = $rt_s(429);
                                                                                                                $this.$mode0 = 13;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if ($this.$flags1 & 57344) {
                                                                                                                $this.$z.$msg = $rt_s(430);
                                                                                                                $this.$mode0 = 13;
                                                                                                                continue i;
                                                                                                            }
                                                                                                            if ($this.$flags1 & 512)
                                                                                                                cjj_Inflate_checksum($this, 2, $this.$need);
                                                                                                            $this.$mode0 = 16;
                                                                                                            break p;
                                                                                                        case 2:
                                                                                                            break d;
                                                                                                        case 3:
                                                                                                            break c;
                                                                                                        case 4:
                                                                                                            break b;
                                                                                                        case 5:
                                                                                                            var$2 = $r;
                                                                                                            break a;
                                                                                                        case 8:
                                                                                                            break w;
                                                                                                        case 9:
                                                                                                            break v;
                                                                                                        case 10:
                                                                                                            break u;
                                                                                                        case 11:
                                                                                                            break t;
                                                                                                        case 15:
                                                                                                            break s;
                                                                                                        case 16:
                                                                                                            break p;
                                                                                                        case 17:
                                                                                                            break o;
                                                                                                        case 18:
                                                                                                            break n;
                                                                                                        case 19:
                                                                                                            break q;
                                                                                                        case 20:
                                                                                                            break l;
                                                                                                        case 21:
                                                                                                            break k;
                                                                                                        case 22:
                                                                                                            break;
                                                                                                        default:
                                                                                                            return (-2);
                                                                                                    }
                                                                                                    break j;
                                                                                                }
                                                                                                if (!$this.$z.$avail_in)
                                                                                                    return $r;
                                                                                                $e = $this.$z;
                                                                                                $e.$avail_in = $e.$avail_in - 1 | 0;
                                                                                                $e = $this.$z;
                                                                                                $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
                                                                                                $foo = $this.$z.$next_in.data;
                                                                                                $e = $this.$z;
                                                                                                $f = $e.$next_in_index;
                                                                                                $e.$next_in_index = $f + 1 | 0;
                                                                                                $this.$need = Long_and(Long_fromInt(($foo[$f] & 255) << 24), new Long(4278190080, 0));
                                                                                                $this.$mode0 = 9;
                                                                                                $r = var$2;
                                                                                            }
                                                                                            if (!$this.$z.$avail_in)
                                                                                                return $r;
                                                                                            $e = $this.$z;
                                                                                            $e.$avail_in = $e.$avail_in - 1 | 0;
                                                                                            $e = $this.$z;
                                                                                            $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
                                                                                            var$6 = $this.$need;
                                                                                            $foo = $this.$z.$next_in.data;
                                                                                            $e = $this.$z;
                                                                                            $f = $e.$next_in_index;
                                                                                            $e.$next_in_index = $f + 1 | 0;
                                                                                            $this.$need = Long_add(var$6, Long_and(Long_fromInt(($foo[$f] & 255) << 16), Long_fromInt(16711680)));
                                                                                            $this.$mode0 = 10;
                                                                                            $r = var$2;
                                                                                        }
                                                                                        if (!$this.$z.$avail_in)
                                                                                            return $r;
                                                                                        $e = $this.$z;
                                                                                        $e.$avail_in = $e.$avail_in - 1 | 0;
                                                                                        $e = $this.$z;
                                                                                        $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
                                                                                        var$6 = $this.$need;
                                                                                        $foo = $this.$z.$next_in.data;
                                                                                        $e = $this.$z;
                                                                                        $f = $e.$next_in_index;
                                                                                        $e.$next_in_index = $f + 1 | 0;
                                                                                        $this.$need = Long_add(var$6, Long_and(Long_fromInt(($foo[$f] & 255) << 8), Long_fromInt(65280)));
                                                                                        $this.$mode0 = 11;
                                                                                        $r = var$2;
                                                                                    }
                                                                                    if (!$this.$z.$avail_in)
                                                                                        return $r;
                                                                                    $e = $this.$z;
                                                                                    $e.$avail_in = $e.$avail_in - 1 | 0;
                                                                                    $e = $this.$z;
                                                                                    $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
                                                                                    var$6 = $this.$need;
                                                                                    $foo = $this.$z.$next_in.data;
                                                                                    $e = $this.$z;
                                                                                    $f = $e.$next_in_index;
                                                                                    $e.$next_in_index = $f + 1 | 0;
                                                                                    $this.$need = Long_add(var$6, Long_and(Long_fromInt($foo[$f]), Long_fromInt(255)));
                                                                                    if ($this.$flags1)
                                                                                        $this.$need = Long_and(Long_or(Long_or(Long_or(Long_shr(Long_and($this.$need, Long_fromInt(-16777216)), 24), Long_shr(Long_and($this.$need, Long_fromInt(16711680)), 8)), Long_shl(Long_and($this.$need, Long_fromInt(65280)), 8)), Long_shl(Long_and($this.$need, Long_fromInt(65535)), 24)), new Long(4294967295, 0));
                                                                                    if ($this.$was.lo != $this.$need.lo)
                                                                                        $this.$z.$msg = $rt_s(431);
                                                                                    else if ($this.$flags1 && $this.$gheader !== null)
                                                                                        $this.$gheader.$crc = $this.$need;
                                                                                    $this.$mode0 = 15;
                                                                                    $r = var$2;
                                                                                }
                                                                                if (!($this.$wrap4 && $this.$flags1)) {
                                                                                    if ($this.$z.$msg === null)
                                                                                        break f;
                                                                                    if (!jl_String_equals($this.$z.$msg, $rt_s(431)))
                                                                                        break f;
                                                                                    $this.$mode0 = 13;
                                                                                    $this.$marker = 5;
                                                                                    continue i;
                                                                                }
                                                                                try {
                                                                                    $r = cjj_Inflate_readBytes($this, 4, $r, var$2);
                                                                                } catch ($$e) {
                                                                                    $$je = $rt_wrapException($$e);
                                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                                        $e = $$je;
                                                                                        return $e.$r;
                                                                                    } else {
                                                                                        throw $$e;
                                                                                    }
                                                                                }
                                                                                if ($this.$z.$msg !== null && jl_String_equals($this.$z.$msg, $rt_s(431))) {
                                                                                    $this.$mode0 = 13;
                                                                                    $this.$marker = 5;
                                                                                    continue i;
                                                                                }
                                                                                if (Long_eq($this.$need, Long_and($this.$z.$total_out, new Long(4294967295, 0)))) {
                                                                                    $this.$z.$msg = null;
                                                                                    break f;
                                                                                }
                                                                                $this.$z.$msg = $rt_s(432);
                                                                                $this.$mode0 = 13;
                                                                                continue i;
                                                                            }
                                                                            if (!$this.$wrap4) {
                                                                                $this.$mode0 = 7;
                                                                                continue i;
                                                                            }
                                                                            try {
                                                                                $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                            } catch ($$e) {
                                                                                $$je = $rt_wrapException($$e);
                                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                                    $e = $$je;
                                                                                    return $e.$r;
                                                                                } else {
                                                                                    throw $$e;
                                                                                }
                                                                            }
                                                                            if (!($this.$wrap4 != 4 && !($this.$wrap4 & 2)) && Long_eq($this.$need, Long_fromInt(35615))) {
                                                                                if ($this.$wrap4 == 4)
                                                                                    $this.$wrap4 = 2;
                                                                                $this.$z.$adler = cjj_CRC32__init_0();
                                                                                cjj_Inflate_checksum($this, 2, $this.$need);
                                                                                if ($this.$gheader === null)
                                                                                    $this.$gheader = cjj_GZIPHeader__init_0();
                                                                                $this.$mode0 = 23;
                                                                                continue i;
                                                                            }
                                                                            if ($this.$wrap4 & 2) {
                                                                                $this.$mode0 = 13;
                                                                                $this.$z.$msg = $rt_s(433);
                                                                                continue i;
                                                                            }
                                                                            $this.$flags1 = 0;
                                                                            $this.$method = $this.$need.lo & 255;
                                                                            $b = Long_shr($this.$need, 8).lo & 255;
                                                                            if (!($this.$wrap4 & 1 && !((($this.$method << 8) + $b | 0) % 31 | 0)) && ($this.$method & 15) != 8) {
                                                                                if ($this.$wrap4 != 4) {
                                                                                    $this.$mode0 = 13;
                                                                                    $this.$z.$msg = $rt_s(433);
                                                                                    continue i;
                                                                                }
                                                                                $e = $this.$z;
                                                                                $e.$next_in_index = $e.$next_in_index - 2 | 0;
                                                                                $e = $this.$z;
                                                                                $e.$avail_in = $e.$avail_in + 2 | 0;
                                                                                $e = $this.$z;
                                                                                $e.$total_in = Long_sub($e.$total_in, Long_fromInt(2));
                                                                                $this.$wrap4 = 0;
                                                                                $this.$mode0 = 7;
                                                                                continue i;
                                                                            }
                                                                            if (($this.$method & 15) != 8) {
                                                                                $this.$mode0 = 13;
                                                                                $this.$z.$msg = $rt_s(429);
                                                                                continue i;
                                                                            }
                                                                            if ($this.$wrap4 == 4)
                                                                                $this.$wrap4 = 1;
                                                                            if ((($this.$method >> 4) + 8 | 0) > $this.$wbits) {
                                                                                $this.$mode0 = 13;
                                                                                $this.$z.$msg = $rt_s(434);
                                                                                continue i;
                                                                            }
                                                                            $this.$z.$adler = cjj_Adler32__init_0();
                                                                            if ($b & 32) {
                                                                                $this.$mode0 = 2;
                                                                                break d;
                                                                            }
                                                                            $this.$mode0 = 7;
                                                                            continue i;
                                                                        }
                                                                        break m;
                                                                    }
                                                                    try {
                                                                        $r = cjj_Inflate_readBytes($this, 4, $r, var$2);
                                                                    } catch ($$e) {
                                                                        $$je = $rt_wrapException($$e);
                                                                        if ($$je instanceof cjj_Inflate$Return) {
                                                                            $e = $$je;
                                                                            return $e.$r;
                                                                        } else {
                                                                            throw $$e;
                                                                        }
                                                                    }
                                                                    if ($this.$gheader !== null)
                                                                        $this.$gheader.$time0 = $this.$need;
                                                                    if ($this.$flags1 & 512)
                                                                        cjj_Inflate_checksum($this, 4, $this.$need);
                                                                    $this.$mode0 = 17;
                                                                }
                                                                try {
                                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                                if ($this.$gheader !== null) {
                                                                    $this.$gheader.$xflags = $this.$need.lo & 255;
                                                                    $this.$gheader.$os = $this.$need.lo >> 8 & 255;
                                                                }
                                                                if ($this.$flags1 & 512)
                                                                    cjj_Inflate_checksum($this, 2, $this.$need);
                                                                $this.$mode0 = 18;
                                                            }
                                                            if ($this.$flags1 & 1024) {
                                                                try {
                                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                                if ($this.$gheader !== null)
                                                                    $this.$gheader.$extra = $rt_createByteArray($this.$need.lo & 65535);
                                                                if ($this.$flags1 & 512)
                                                                    cjj_Inflate_checksum($this, 2, $this.$need);
                                                            } else if ($this.$gheader !== null)
                                                                $this.$gheader.$extra = null;
                                                            $this.$mode0 = 19;
                                                        }
                                                        if ($this.$flags1 & 1024)
                                                            x: {
                                                                try {
                                                                    $r = cjj_Inflate_readBytes0($this, $r, var$2);
                                                                    if ($this.$gheader === null)
                                                                        break x;
                                                                    $foo = ji_ByteArrayOutputStream_toByteArray($this.$tmp_string);
                                                                    var$8 = $foo.data;
                                                                    $this.$tmp_string = null;
                                                                    $f = var$8.length;
                                                                    if ($f != $this.$gheader.$extra.data.length) {
                                                                        $this.$z.$msg = $rt_s(435);
                                                                        $this.$mode0 = 13;
                                                                        continue i;
                                                                    }
                                                                    jl_System_arraycopy($foo, 0, $this.$gheader.$extra, 0, $f);
                                                                    break x;
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        return $e.$r;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                            }
                                                        else if ($this.$gheader !== null)
                                                            $this.$gheader.$extra = null;
                                                        $this.$mode0 = 20;
                                                    }
                                                    y: {
                                                        if ($this.$flags1 & 2048) {
                                                            z: {
                                                                try {
                                                                    $r = cjj_Inflate_readString($this, $r, var$2);
                                                                    if ($this.$gheader === null)
                                                                        break z;
                                                                    $this.$gheader.$name4 = ji_ByteArrayOutputStream_toByteArray($this.$tmp_string);
                                                                    break z;
                                                                } catch ($$e) {
                                                                    $$je = $rt_wrapException($$e);
                                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                                        $e = $$je;
                                                                        break h;
                                                                    } else {
                                                                        throw $$e;
                                                                    }
                                                                }
                                                            }
                                                            try {
                                                                $this.$tmp_string = null;
                                                                break y;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                    $e = $$je;
                                                                    break h;
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        } else if ($this.$gheader !== null)
                                                            $this.$gheader.$name4 = null;
                                                    }
                                                    $this.$mode0 = 21;
                                                }
                                                ba: {
                                                    if ($this.$flags1 & 4096) {
                                                        bb: {
                                                            try {
                                                                $r = cjj_Inflate_readString($this, $r, var$2);
                                                                if ($this.$gheader === null)
                                                                    break bb;
                                                                $this.$gheader.$comment = ji_ByteArrayOutputStream_toByteArray($this.$tmp_string);
                                                                break bb;
                                                            } catch ($$e) {
                                                                $$je = $rt_wrapException($$e);
                                                                if ($$je instanceof cjj_Inflate$Return) {
                                                                    $e = $$je;
                                                                    break g;
                                                                } else {
                                                                    throw $$e;
                                                                }
                                                            }
                                                        }
                                                        try {
                                                            $this.$tmp_string = null;
                                                            break ba;
                                                        } catch ($$e) {
                                                            $$je = $rt_wrapException($$e);
                                                            if ($$je instanceof cjj_Inflate$Return) {
                                                                $e = $$je;
                                                                break g;
                                                            } else {
                                                                throw $$e;
                                                            }
                                                        }
                                                    } else if ($this.$gheader !== null)
                                                        $this.$gheader.$comment = null;
                                                }
                                                $this.$mode0 = 22;
                                            }
                                            if ($this.$flags1 & 512) {
                                                try {
                                                    $r = cjj_Inflate_readBytes($this, 2, $r, var$2);
                                                } catch ($$e) {
                                                    $$je = $rt_wrapException($$e);
                                                    if ($$je instanceof cjj_Inflate$Return) {
                                                        $e = $$je;
                                                        return $e.$r;
                                                    } else {
                                                        throw $$e;
                                                    }
                                                }
                                                if ($this.$gheader !== null)
                                                    $this.$gheader.$hcrc = Long_and($this.$need, Long_fromInt(65535)).lo;
                                                if (Long_ne($this.$need, Long_and($this.$z.$adler.$getValue(), Long_fromInt(65535)))) {
                                                    $this.$mode0 = 13;
                                                    $this.$z.$msg = $rt_s(436);
                                                    $this.$marker = 5;
                                                    continue;
                                                }
                                            }
                                            $this.$z.$adler = cjj_CRC32__init_0();
                                            $this.$mode0 = 7;
                                        }
                                        return $r;
                                    }
                                    return $e.$r;
                                }
                                return $e.$r;
                            }
                            $this.$mode0 = 12;
                        }
                        return 1;
                    }
                    if (!$this.$z.$avail_in)
                        return $r;
                    $e = $this.$z;
                    $e.$avail_in = $e.$avail_in - 1 | 0;
                    $e = $this.$z;
                    $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
                    $foo = $this.$z.$next_in.data;
                    $e = $this.$z;
                    $r = $e.$next_in_index;
                    $e.$next_in_index = $r + 1 | 0;
                    $this.$need = Long_and(Long_fromInt(($foo[$r] & 255) << 24), new Long(4278190080, 0));
                    $this.$mode0 = 3;
                    $r = var$2;
                }
                if (!$this.$z.$avail_in)
                    return $r;
                $e = $this.$z;
                $e.$avail_in = $e.$avail_in - 1 | 0;
                $e = $this.$z;
                $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
                var$6 = $this.$need;
                $foo = $this.$z.$next_in.data;
                $e = $this.$z;
                $r = $e.$next_in_index;
                $e.$next_in_index = $r + 1 | 0;
                $this.$need = Long_add(var$6, Long_and(Long_fromInt(($foo[$r] & 255) << 16), Long_fromInt(16711680)));
                $this.$mode0 = 4;
                $r = var$2;
            }
            if (!$this.$z.$avail_in)
                return $r;
            $e = $this.$z;
            $e.$avail_in = $e.$avail_in - 1 | 0;
            $e = $this.$z;
            $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
            var$6 = $this.$need;
            $foo = $this.$z.$next_in.data;
            $e = $this.$z;
            $f = $e.$next_in_index;
            $e.$next_in_index = $f + 1 | 0;
            $this.$need = Long_add(var$6, Long_and(Long_fromInt(($foo[$f] & 255) << 8), Long_fromInt(65280)));
            $this.$mode0 = 5;
        }
        if (!$this.$z.$avail_in)
            return var$2;
        $e = $this.$z;
        $e.$avail_in = $e.$avail_in - 1 | 0;
        $e = $this.$z;
        $e.$total_in = Long_add($e.$total_in, Long_fromInt(1));
        var$6 = $this.$need;
        $foo = $this.$z.$next_in.data;
        $e = $this.$z;
        $f = $e.$next_in_index;
        $e.$next_in_index = $f + 1 | 0;
        $this.$need = Long_add(var$6, Long_and(Long_fromInt($foo[$f]), Long_fromInt(255)));
        $this.$z.$adler.$reset0($this.$need);
        $this.$mode0 = 6;
        return 2;
    }
    if ($f == 4 && $this.$mode0 == 14)
        return 0;
    return (-2);
}
function cjj_Inflate_readBytes($this, $n, $r, $f) {
    var var$4, var$5, var$6, var$7;
    if ($this.$need_bytes == (-1)) {
        $this.$need_bytes = $n;
        $this.$need = Long_ZERO;
    }
    while (true) {
        if ($this.$need_bytes <= 0) {
            if ($n == 2)
                $this.$need = Long_and($this.$need, Long_fromInt(65535));
            else if ($n == 4)
                $this.$need = Long_and($this.$need, new Long(4294967295, 0));
            $this.$need_bytes = (-1);
            return $r;
        }
        if (!$this.$z.$avail_in)
            break;
        var$4 = $this.$z;
        var$4.$avail_in = var$4.$avail_in - 1 | 0;
        var$4 = $this.$z;
        var$4.$total_in = Long_add(var$4.$total_in, Long_fromInt(1));
        var$5 = $this.$need;
        var$6 = $this.$z.$next_in.data;
        var$4 = $this.$z;
        var$7 = var$4.$next_in_index;
        var$4.$next_in_index = var$7 + 1 | 0;
        $this.$need = Long_or(var$5, Long_fromInt((var$6[var$7] & 255) << (($n - $this.$need_bytes | 0) * 8 | 0)));
        $this.$need_bytes = $this.$need_bytes - 1 | 0;
        $r = $f;
    }
    $rt_throw(cjj_Inflate$Return__init_($this, $r));
}
function cjj_Inflate_readString($this, $r, $f) {
    var var$3, var$4;
    if ($this.$tmp_string === null)
        $this.$tmp_string = ji_ByteArrayOutputStream__init_0();
    while (true) {
        if (!$this.$z.$avail_in)
            $rt_throw(cjj_Inflate$Return__init_($this, $r));
        var$3 = $this.$z;
        var$3.$avail_in = var$3.$avail_in - 1 | 0;
        var$3 = $this.$z;
        var$3.$total_in = Long_add(var$3.$total_in, Long_fromInt(1));
        var$4 = $this.$z.$next_in.data[$this.$z.$next_in_index];
        if (var$4)
            ji_ByteArrayOutputStream_write0($this.$tmp_string, $this.$z.$next_in, $this.$z.$next_in_index, 1);
        $this.$z.$adler.$update($this.$z.$next_in, $this.$z.$next_in_index, 1);
        var$3 = $this.$z;
        var$3.$next_in_index = var$3.$next_in_index + 1 | 0;
        if (!var$4)
            break;
        $r = $f;
    }
    return $f;
}
function cjj_Inflate_readBytes0($this, $r, $f) {
    var var$3;
    if ($this.$tmp_string === null)
        $this.$tmp_string = ji_ByteArrayOutputStream__init_0();
    while (Long_gt($this.$need, Long_ZERO)) {
        if (!$this.$z.$avail_in)
            $rt_throw(cjj_Inflate$Return__init_($this, $r));
        var$3 = $this.$z;
        var$3.$avail_in = var$3.$avail_in - 1 | 0;
        var$3 = $this.$z;
        var$3.$total_in = Long_add(var$3.$total_in, Long_fromInt(1));
        ji_ByteArrayOutputStream_write0($this.$tmp_string, $this.$z.$next_in, $this.$z.$next_in_index, 1);
        $this.$z.$adler.$update($this.$z.$next_in, $this.$z.$next_in_index, 1);
        var$3 = $this.$z;
        var$3.$next_in_index = var$3.$next_in_index + 1 | 0;
        $this.$need = Long_sub($this.$need, Long_fromInt(1));
        $r = $f;
    }
    return $r;
}
function cjj_Inflate_checksum($this, $n, $v) {
    var $i;
    $i = 0;
    while ($i < $n) {
        $this.$crcbuf.data[$i] = Long_and($v, Long_fromInt(255)).lo << 24 >> 24;
        $v = Long_shr($v, 8);
        $i = $i + 1 | 0;
    }
    $this.$z.$adler.$update($this.$crcbuf, 0, $n);
}
function cjj_Inflate__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createByteArray(4);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = (-1);
    var$2[3] = (-1);
    cjj_Inflate_mark = var$1;
}
function jl_IllegalStateException() {
    jl_Exception.call(this);
}
function jl_IllegalStateException__init_0() {
    var var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_(var_0);
    return var_0;
}
function jl_IllegalStateException__init_($this) {
    jl_Throwable__init_0($this);
}
function ju_NoSuchElementException() {
    jl_RuntimeException.call(this);
}
function ju_NoSuchElementException__init_0() {
    var var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_(var_0);
    return var_0;
}
function ju_NoSuchElementException__init_($this) {
    jl_Throwable__init_0($this);
}
function ju_Iterator() {
}
function ju_AbstractList$1() {
    var a = this; jl_Object.call(a);
    a.$index = 0;
    a.$modCount0 = 0;
    a.$size2 = 0;
    a.$removeIndex = 0;
    a.$this$0 = null;
}
function ju_AbstractList$1_hasNext($this) {
    return $this.$index >= $this.$size2 ? 0 : 1;
}
function ju_AbstractList$1_next($this) {
    var var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex = $this.$index;
    var$1 = $this.$this$0;
    var$2 = $this.$index;
    $this.$index = var$2 + 1 | 0;
    return ju_ArrayList_get(var$1, var$2);
}
function ju_AbstractList$1_remove($this) {
    var var$1;
    if ($this.$removeIndex < 0) {
        var$1 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    ju_AbstractList$1_checkConcurrentModification($this);
    ju_ArrayList_remove($this.$this$0, $this.$removeIndex);
    $this.$modCount0 = $this.$this$0.$modCount;
    if ($this.$removeIndex < $this.$index)
        $this.$index = $this.$index - 1 | 0;
    $this.$size2 = $this.$size2 - 1 | 0;
    $this.$removeIndex = (-1);
}
function ju_AbstractList$1_checkConcurrentModification($this) {
    var var$1;
    if ($this.$modCount0 >= $this.$this$0.$modCount)
        return;
    var$1 = new ju_ConcurrentModificationException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function olug_GLU() {
    olo_GL11.call(this);
}
function olug_GLU__init_0() {
    var var_0 = new olug_GLU();
    olug_GLU__init_(var_0);
    return var_0;
}
function olug_GLU__init_($this) {
    olo_EaglerAdapterGL30__init_($this);
}
function nms_IBlockAccess() {
}
function nms_World() {
    var a = this; jl_Object.call(a);
    a.$field_4214_a = 0;
    a.$field_1051_z = null;
    a.$loadedEntityList = null;
    a.$field_1024_A = null;
    a.$scheduledTickTreeSet = null;
    a.$scheduledTickSet = null;
    a.$loadedTileEntityList = null;
    a.$playerEntities = null;
    a.$worldTime = Long_ZERO;
    a.$field_1019_F = Long_ZERO;
    a.$skylightSubtracted = 0;
    a.$field_9437_g = 0;
    a.$field_9436_h = 0;
    a.$field_1043_h = 0;
    a.$field_1054_E = Long_ZERO;
    a.$autosavePeriod = 0;
    a.$difficultySetting = 0;
    a.$rand1 = null;
    a.$spawnX = 0;
    a.$spawnY = 0;
    a.$spawnZ = 0;
    a.$field_1033_r = 0;
    a.$worldProvider = null;
    a.$worldAccesses = null;
    a.$chunkProvider = null;
    a.$field_9433_s = null;
    a.$field_9432_t = null;
    a.$randomSeed = Long_ZERO;
    a.$nbtCompoundPlayer = null;
    a.$sizeOnDisk = Long_ZERO;
    a.$field_9431_w = null;
    a.$field_9430_x = 0;
    a.$field_9428_I = null;
    a.$field_4204_J = 0;
    a.$field_9427_K = null;
    a.$field_9426_L = 0;
    a.$field_1012_M = null;
}
var nms_World_field_9429_y = 0;
function nms_World__init_0(var_0, var_1) {
    var var_2 = new nms_World();
    nms_World__init_1(var_2, var_0, var_1);
    return var_2;
}
function nms_World__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_World();
    nms_World__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_World_func_629_a($var1) {
    var $var5, $data, $var6, $var7, $$je;
    $var5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var5);
    $data = nlea_EaglerAdapterImpl2_readFile(jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var5, $rt_s(437)), $var1), $rt_s(438))));
    if ($data !== null) {
        a: {
            try {
                $var6 = nms_NBTTagCompound_getCompoundTag(nms_CompressedStreamTools_func_1138_a(ji_ByteArrayInputStream__init_($data)), $rt_s(439));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var7 = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $var6;
        }
        jl_Throwable_printStackTrace0($var7);
    }
    return null;
}
function nms_World_func_4075_a($this) {
    return $this.$worldProvider.$worldChunkMgr;
}
function nms_World__init_1($this, $var1, $var2) {
    $this.$field_4214_a = 0;
    $this.$field_1051_z = ju_ArrayList__init_0();
    $this.$loadedEntityList = ju_ArrayList__init_0();
    $this.$field_1024_A = ju_ArrayList__init_0();
    $this.$scheduledTickTreeSet = ju_TreeSet__init_0();
    $this.$scheduledTickSet = ju_HashSet__init_0();
    $this.$loadedTileEntityList = ju_ArrayList__init_0();
    $this.$playerEntities = ju_ArrayList__init_0();
    $this.$worldTime = Long_ZERO;
    $this.$field_1019_F = Long_fromInt(16777215);
    $this.$skylightSubtracted = 0;
    $this.$field_9437_g = ju_Random_nextInt0(new ju_Random);
    $this.$field_9436_h = 1013904223;
    $this.$field_1043_h = 0;
    $this.$field_1054_E = jl_System_currentTimeMillis();
    $this.$autosavePeriod = 40;
    $this.$rand1 = new ju_Random;
    $this.$field_1033_r = 0;
    $this.$worldAccesses = ju_ArrayList__init_0();
    $this.$randomSeed = Long_ZERO;
    $this.$sizeOnDisk = Long_ZERO;
    $this.$field_9428_I = ju_ArrayList__init_0();
    $this.$field_4204_J = 0;
    $this.$field_9427_K = ju_HashSet__init_0();
    $this.$field_9426_L = ju_Random_nextInt($this.$rand1, 12000);
    $this.$field_1012_M = ju_ArrayList__init_0();
    $this.$field_1054_E = $var1.$field_1054_E;
    $this.$field_9433_s = $var1.$field_9433_s;
    $this.$field_9432_t = $var1.$field_9432_t;
    $this.$field_9431_w = $var1.$field_9431_w;
    $this.$randomSeed = $var1.$randomSeed;
    $this.$worldTime = $var1.$worldTime;
    $this.$spawnX = $var1.$spawnX;
    $this.$spawnY = $var1.$spawnY;
    $this.$spawnZ = $var1.$spawnZ;
    $this.$sizeOnDisk = $var1.$sizeOnDisk;
    $this.$worldProvider = $var2;
    nms_WorldProvider_registerWorld($var2, $this);
    $this.$chunkProvider = nms_World_func_4081_a($this, $this.$field_9432_t);
    nms_World_calculateInitialSkylight($this);
}
function nms_World__init_2($this, $var1, $var2, $var3, $var5) {
    var $var14, $data, $var7, $var16, $var17, $var18, $var10, $data_0, $var9, $var19, $$je;
    $this.$field_4214_a = 0;
    $this.$field_1051_z = ju_ArrayList__init_0();
    $this.$loadedEntityList = ju_ArrayList__init_0();
    $this.$field_1024_A = ju_ArrayList__init_0();
    $this.$scheduledTickTreeSet = ju_TreeSet__init_0();
    $this.$scheduledTickSet = ju_HashSet__init_0();
    $this.$loadedTileEntityList = ju_ArrayList__init_0();
    $this.$playerEntities = ju_ArrayList__init_0();
    $this.$worldTime = Long_ZERO;
    $this.$field_1019_F = Long_fromInt(16777215);
    $this.$skylightSubtracted = 0;
    $this.$field_9437_g = ju_Random_nextInt0(new ju_Random);
    $this.$field_9436_h = 1013904223;
    $this.$field_1043_h = 0;
    $this.$field_1054_E = jl_System_currentTimeMillis();
    $this.$autosavePeriod = 40;
    $this.$rand1 = new ju_Random;
    $this.$field_1033_r = 0;
    $this.$worldAccesses = ju_ArrayList__init_0();
    $this.$randomSeed = Long_ZERO;
    $this.$sizeOnDisk = Long_ZERO;
    $this.$field_9428_I = ju_ArrayList__init_0();
    $this.$field_4204_J = 0;
    $this.$field_9427_K = ju_HashSet__init_0();
    $this.$field_9426_L = ju_Random_nextInt($this.$rand1, 12000);
    $this.$field_1012_M = ju_ArrayList__init_0();
    $this.$field_9433_s = $var1;
    $this.$field_9431_w = $var2;
    $var14 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var14);
    $this.$field_9432_t = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var14, $var1), $rt_s(14)), $var2));
    a: {
        try {
            $data = ji_ByteArrayOutputStream__init_0();
            $var7 = ji_DataOutputStream__init_($data);
            b: {
                try {
                    ji_DataOutputStream_writeLong($var7, $this.$field_1054_E);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $var1 = $$je;

                }
                ji_DataOutputStream_flush($var7);
                nlea_EaglerAdapterImpl2_writeFile(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$field_9432_t), $rt_s(440))), ji_ByteArrayOutputStream_toByteArray($data));
                ji_FilterOutputStream_close($var7);
                $rt_throw($var1);
            }
            ji_DataOutputStream_flush($var7);
            nlea_EaglerAdapterImpl2_writeFile(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$field_9432_t), $rt_s(440))), ji_ByteArrayOutputStream_toByteArray($data));
            ji_FilterOutputStream_close($var7);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
                $var16 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var16);
        $var1 = new jl_RuntimeException;
        jl_Throwable__init_($var1, $rt_s(441));
        $rt_throw($var1);
    }
    $var17 = nms_WorldProvider__init_0();
    $var1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var1);
    $var18 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($var1, $this.$field_9432_t), $rt_s(438)));
    $var10 = nlea_EaglerAdapterImpl2_readFile($var18) !== null ? 0 : 1;
    c: {
        $this.$field_1033_r = $var10;
        $data_0 = nlea_EaglerAdapterImpl2_readFile($var18);
        if ($data_0 !== null) {
            try {
                $var18 = $var17;
                $var9 = nms_NBTTagCompound_getCompoundTag(nms_CompressedStreamTools_func_1138_a(ji_ByteArrayInputStream__init_($data_0)), $rt_s(439));
                $this.$randomSeed = nms_NBTTagCompound_getLong($var9, $rt_s(442));
                $this.$spawnX = nms_NBTTagCompound_getInteger($var9, $rt_s(443));
                $this.$spawnY = nms_NBTTagCompound_getInteger($var9, $rt_s(444));
                $this.$spawnZ = nms_NBTTagCompound_getInteger($var9, $rt_s(445));
                $this.$worldTime = nms_NBTTagCompound_getLong($var9, $rt_s(446));
                $this.$sizeOnDisk = nms_NBTTagCompound_getLong($var9, $rt_s(447));
                if (nms_NBTTagCompound_hasKey($var9, $rt_s(4))) {
                    $var18 = $var17;
                    $this.$nbtCompoundPlayer = nms_NBTTagCompound_getCompoundTag($var9, $rt_s(4));
                    if (nms_NBTTagCompound_getInteger($this.$nbtCompoundPlayer, $rt_s(448)) == (-1)) {
                        $var18 = $var17;
                        $var17 = new nms_WorldProviderHell;
                        $var18 = $var17;
                        nms_WorldProviderHell__init_($var17);
                    }
                }
                break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var14 = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($var14);
            $var17 = $var18;
        }
    }
    if ($var5 === null)
        $var5 = $var17;
    $var19 = 0;
    if (Long_eq($this.$randomSeed, Long_ZERO)) {
        $this.$randomSeed = $var3;
        $var19 = 1;
    }
    $this.$worldProvider = $var5;
    nms_WorldProvider_registerWorld($this.$worldProvider, $this);
    $this.$chunkProvider = nms_World_func_4081_a($this, $this.$field_9432_t);
    if ($var19) {
        $this.$field_9430_x = 1;
        $this.$spawnX = 0;
        $this.$spawnY = 64;
        $this.$spawnZ = 0;
        while (!$this.$worldProvider.$canCoordinateBeSpawn($this.$spawnX, $this.$spawnZ)) {
            $this.$spawnX = $this.$spawnX + (ju_Random_nextInt($this.$rand1, 64) - ju_Random_nextInt($this.$rand1, 64) | 0) | 0;
            $this.$spawnZ = $this.$spawnZ + (ju_Random_nextInt($this.$rand1, 64) - ju_Random_nextInt($this.$rand1, 64) | 0) | 0;
        }
        $this.$field_9430_x = 0;
    }
    nms_World_calculateInitialSkylight($this);
}
function nms_World_func_4081_a($this, $var1) {
    var var$2, var$3;
    var$2 = new nms_ChunkProviderLoadOrGenerate;
    $var1 = $this.$worldProvider.$getChunkLoader($var1);
    var$3 = $this.$worldProvider.$getChunkProvider();
    var$2.$chunks = $rt_createArray(nms_Chunk, 1024);
    var$2.$lastQueriedChunkXPos = (-999999999);
    var$2.$lastQueriedChunkZPos = (-999999999);
    var$2.$blankChunk = nms_Chunk__init_($this, $rt_createByteArray(32768), 0, 0);
    var$2.$blankChunk.$field_1524_q = 1;
    var$2.$blankChunk.$neverSave = 1;
    var$2.$worldObj3 = $this;
    var$2.$chunkLoader = $var1;
    var$2.$chunkProvider0 = var$3;
    return var$2;
}
function nms_World_func_4076_b($this) {
    if ($this.$spawnY <= 0)
        $this.$spawnY = 64;
    while (!nms_World_func_614_g($this, $this.$spawnX, $this.$spawnZ)) {
        $this.$spawnX = $this.$spawnX + (ju_Random_nextInt($this.$rand1, 8) - ju_Random_nextInt($this.$rand1, 8) | 0) | 0;
        $this.$spawnZ = $this.$spawnZ + (ju_Random_nextInt($this.$rand1, 8) - ju_Random_nextInt($this.$rand1, 8) | 0) | 0;
    }
}
function nms_World_func_614_g($this, $var1, $var2) {
    var $var3, $var3_0;
    $var3 = 63;
    while (true) {
        $var3_0 = $var3 + 1 | 0;
        if (!nms_World_getBlockId($this, $var1, $var3_0, $var2))
            break;
        $var3 = $var3_0;
    }
    return nms_World_getBlockId($this, $var1, $var3, $var2);
}
function nms_World_func_6464_c($this) {
    return;
}
function nms_World_func_608_a($this, $var1) {
    var $var3, $$je;
    a: {
        try {
            if ($this.$nbtCompoundPlayer !== null) {
                nms_Entity_readFromNBT($var1, $this.$nbtCompoundPlayer);
                $this.$nbtCompoundPlayer = null;
            }
            nms_World_entityJoinedWorld($this, $var1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var3 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var3);
    }
}
function nms_World_saveWorld($this, $var1, $var2) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($var2 !== null)
            nms_LoadingScreenRenderer_func_594_b($var2, $rt_s(449));
        nms_World_saveLevel($this);
        if ($var2 === null) {
            var$3 = $this.$chunkProvider;
            $ptr = 1;
            continue main;
        }
        var$3 = $rt_s(450);
        $ptr = 2;
        continue main;
    case 1:
        nms_ChunkProviderLoadOrGenerate_saveChunks(var$3, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    case 2:
        nms_LoadingScreenRenderer_displayLoadingString($var2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        var$3 = $this.$chunkProvider;
        $ptr = 1;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_World_saveLevel($this) {
    var $var1, $var2, $var3, $var4, $var5, $var6, $data, $var7, $$je;
    nms_World_func_663_l($this);
    $var1 = nms_NBTTagCompound__init_0();
    nms_NBTTagCompound_setLong($var1, $rt_s(442), $this.$randomSeed);
    nms_NBTTagCompound_setInteger($var1, $rt_s(443), $this.$spawnX);
    nms_NBTTagCompound_setInteger($var1, $rt_s(444), $this.$spawnY);
    nms_NBTTagCompound_setInteger($var1, $rt_s(445), $this.$spawnZ);
    nms_NBTTagCompound_setLong($var1, $rt_s(446), $this.$worldTime);
    nms_NBTTagCompound_setLong($var1, $rt_s(447), $this.$sizeOnDisk);
    nms_NBTTagCompound_setLong($var1, $rt_s(451), jl_System_currentTimeMillis());
    $var2 = null;
    if ($this.$playerEntities.$size > 0)
        $var2 = ju_ArrayList_get($this.$playerEntities, 0);
    if ($var2 !== null) {
        $var3 = nms_NBTTagCompound__init_0();
        nms_Entity_writeToNBT($var2, $var3);
        nms_NBTTagCompound_setCompoundTag($var1, $rt_s(4), $var3);
    }
    $var3 = nms_NBTTagCompound__init_0();
    nms_NBTTagCompound_setTag($var3, $rt_s(439), $var1);
    a: {
        try {
            $var4 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$field_9432_t), $rt_s(452)));
            $var5 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$field_9432_t), $rt_s(453)));
            $var6 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$field_9432_t), $rt_s(438)));
            $data = ji_ByteArrayOutputStream__init_0();
            nms_CompressedStreamTools_writeGzippedCompoundToOutputStream($var3, $data);
            nlea_EaglerAdapterImpl2_writeFile($var4, ji_ByteArrayOutputStream_toByteArray($data));
            if (nlea_EaglerAdapterImpl2_readFile($var5) !== null)
                nlea_EaglerAdapterImpl2_deleteFile($var5);
            nlea_EaglerAdapterImpl2_renameFile($var6, $var5);
            if (nlea_EaglerAdapterImpl2_readFile($var6) !== null)
                nlea_EaglerAdapterImpl2_deleteFile($var6);
            nlea_EaglerAdapterImpl2_renameFile($var4, $var6);
            if (nlea_EaglerAdapterImpl2_readFile($var4) !== null)
                nlea_EaglerAdapterImpl2_deleteFile($var4);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var7 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var7);
    }
}
function nms_World_func_650_a($this, $var1) {
    var var$2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!$var1)
            nms_World_saveLevel($this);
        var$2 = $this.$chunkProvider;
        $var1 = 0;
        var$3 = null;
        $ptr = 1;
    case 1:
        $tmp = nms_ChunkProviderLoadOrGenerate_saveChunks(var$2, $var1, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var1 = $tmp;
        return $var1;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $ptr);
}
function nms_World_getBlockId($this, $var1, $var2, $var3) {
    return $var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000 ? ($var2 < 0 ? 0 : $var2 >= 128 ? 0 : nms_Chunk_getBlockID(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15)) : 0;
}
function nms_World_blockExists($this, $var1, $var2, $var3) {
    return $var2 >= 0 && $var2 < 128 ? nms_World_chunkExists($this, $var1 >> 4, $var3 >> 4) : 0;
}
function nms_World_checkChunksExist($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8;
    if ($var5 >= 0 && $var2 < 128) {
        $var7 = $var1 >> 4;
        $var1 = $var3 >> 4;
        $var2 = $var4 >> 4;
        $var3 = $var6 >> 4;
        while ($var7 <= $var2) {
            $var8 = $var1;
            while ($var8 <= $var3) {
                if (!nms_World_chunkExists($this, $var7, $var8))
                    return 0;
                $var8 = $var8 + 1 | 0;
            }
            $var7 = $var7 + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function nms_World_chunkExists($this, $var1, $var2) {
    return nms_ChunkProviderLoadOrGenerate_chunkExists($this.$chunkProvider, $var1, $var2);
}
function nms_World_getChunkFromBlockCoords($this, $var1, $var2) {
    return nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var2 >> 4);
}
function nms_World_getChunkFromChunkCoords($this, $var1, $var2) {
    return nms_ChunkProviderLoadOrGenerate_provideChunk($this.$chunkProvider, $var1, $var2);
}
function nms_World_setBlockAndMetadata($this, $var1, $var2, $var3, $var4, $var5) {
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        if ($var2 < 0)
            return 0;
        if ($var2 >= 128)
            return 0;
        return nms_Chunk_setBlockIDWithMetadata(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15, $var4, $var5);
    }
    return 0;
}
function nms_World_setBlock($this, $var1, $var2, $var3, $var4) {
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        if ($var2 < 0)
            return 0;
        if ($var2 >= 128)
            return 0;
        return nms_Chunk_setBlockID(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15, $var4);
    }
    return 0;
}
function nms_World_getBlockMaterial($this, $var1, $var2, $var3) {
    var $var4, var$5;
    $var4 = nms_World_getBlockId($this, $var1, $var2, $var3);
    if (!$var4)
        var$5 = nms_Material_air;
    else {
        nms_Block_$callClinit();
        var$5 = nms_Block_blocksList.data[$var4].$blockMaterial;
    }
    return var$5;
}
function nms_World_getBlockMetadata($this, $var1, $var2, $var3) {
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        if ($var2 < 0)
            return 0;
        if ($var2 >= 128)
            return 0;
        return nms_Chunk_getBlockMetadata(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15);
    }
    return 0;
}
function nms_World_setBlockMetadataWithNotify($this, $var1, $var2, $var3, $var4) {
    if (nms_World_setBlockMetadata($this, $var1, $var2, $var3, $var4))
        nms_World_notifyBlockChange($this, $var1, $var2, $var3, nms_World_getBlockId($this, $var1, $var2, $var3));
}
function nms_World_setBlockMetadata($this, $var1, $var2, $var3, $var4) {
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        if ($var2 < 0)
            return 0;
        if ($var2 >= 128)
            return 0;
        nms_Chunk_setBlockMetadata(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15, $var4);
        return 1;
    }
    return 0;
}
function nms_World_setBlockWithNotify($this, $var1, $var2, $var3, $var4) {
    if (!nms_World_setBlock($this, $var1, $var2, $var3, $var4))
        return 0;
    nms_World_notifyBlockChange($this, $var1, $var2, $var3, $var4);
    return 1;
}
function nms_World_setBlockAndMetadataWithNotify($this, $var1, $var2, $var3, $var4, $var5) {
    if (!nms_World_setBlockAndMetadata($this, $var1, $var2, $var3, $var4, $var5))
        return 0;
    nms_World_notifyBlockChange($this, $var1, $var2, $var3, $var4);
    return 1;
}
function nms_World_func_665_h($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = 0;
    while ($var4 < $this.$worldAccesses.$size) {
        nms_RenderGlobal_func_934_a(ju_ArrayList_get($this.$worldAccesses, $var4), $var1, $var2, $var3);
        $var4 = $var4 + 1 | 0;
    }
}
function nms_World_notifyBlockChange($this, $var1, $var2, $var3, $var4) {
    nms_World_func_665_h($this, $var1, $var2, $var3);
    nms_World_notifyBlocksOfNeighborChange($this, $var1, $var2, $var3, $var4);
}
function nms_World_func_680_f($this, $var1, $var2, $var3, $var4) {
    var var$5;
    if ($var3 <= $var4) {
        var$5 = $var3;
        $var3 = $var4;
        $var4 = var$5;
    }
    nms_World_func_701_b($this, $var1, $var4, $var2, $var1, $var3, $var2);
}
function nms_World_func_701_b($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = 0;
    while ($var7 < $this.$worldAccesses.$size) {
        nms_RenderGlobal_func_937_b(ju_ArrayList_get($this.$worldAccesses, $var7), $var1, $var2, $var3, $var4, $var5, $var6);
        $var7 = $var7 + 1 | 0;
    }
}
function nms_World_notifyBlocksOfNeighborChange($this, $var1, $var2, $var3, $var4) {
    nms_World_notifyBlockOfNeighborChange($this, $var1 - 1 | 0, $var2, $var3, $var4);
    nms_World_notifyBlockOfNeighborChange($this, $var1 + 1 | 0, $var2, $var3, $var4);
    nms_World_notifyBlockOfNeighborChange($this, $var1, $var2 - 1 | 0, $var3, $var4);
    nms_World_notifyBlockOfNeighborChange($this, $var1, $var2 + 1 | 0, $var3, $var4);
    nms_World_notifyBlockOfNeighborChange($this, $var1, $var2, $var3 - 1 | 0, $var4);
    nms_World_notifyBlockOfNeighborChange($this, $var1, $var2, $var3 + 1 | 0, $var4);
}
function nms_World_notifyBlockOfNeighborChange($this, $var1, $var2, $var3, $var4) {
    var $var5;
    if (!$this.$field_1043_h) {
        nms_Block_$callClinit();
        $var5 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var1, $var2, $var3)];
        if ($var5 !== null)
            $var5.$onNeighborBlockChange($this, $var1, $var2, $var3, $var4);
    }
}
function nms_World_canBlockSeeTheSky($this, $var1, $var2, $var3) {
    return nms_Chunk_canBlockSeeTheSky(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15);
}
function nms_World_getBlockLightValue($this, $var1, $var2, $var3) {
    return nms_World_getBlockLightValue0($this, $var1, $var2, $var3, 1);
}
function nms_World_getBlockLightValue0($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, $var10;
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        a: {
            if ($var4) {
                $var5 = nms_World_getBlockId($this, $var1, $var2, $var3);
                nms_Block_$callClinit();
                if ($var5 == nms_Block_stairSingle.$blockID)
                    break a;
                if ($var5 == nms_Block_tilledField.$blockID)
                    break a;
            }
            if ($var2 < 0)
                return 0;
            if ($var2 >= 128) {
                $var5 = 15 - $this.$skylightSubtracted | 0;
                if ($var5 < 0)
                    $var5 = 0;
                return $var5;
            }
            return nms_Chunk_getBlockLightValue(nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4), $var1 & 15, $var2, $var3 & 15, $this.$skylightSubtracted);
        }
        $var6 = nms_World_getBlockLightValue0($this, $var1, $var2 + 1 | 0, $var3, 0);
        $var7 = nms_World_getBlockLightValue0($this, $var1 + 1 | 0, $var2, $var3, 0);
        $var8 = nms_World_getBlockLightValue0($this, $var1 - 1 | 0, $var2, $var3, 0);
        $var9 = nms_World_getBlockLightValue0($this, $var1, $var2, $var3 + 1 | 0, 0);
        $var10 = nms_World_getBlockLightValue0($this, $var1, $var2, $var3 - 1 | 0, 0);
        if ($var7 <= $var6)
            $var7 = $var6;
        if ($var8 <= $var7)
            $var8 = $var7;
        if ($var9 <= $var8)
            $var9 = $var8;
        if ($var10 <= $var9)
            $var10 = $var9;
        return $var10;
    }
    return 15;
}
function nms_World_canExistingBlockSeeTheSky($this, $var1, $var2, $var3) {
    var var$4, var$5;
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        if ($var2 < 0)
            return 0;
        if ($var2 >= 128)
            return 1;
        var$4 = $var1 >> 4;
        var$5 = $var3 >> 4;
        if (!nms_World_chunkExists($this, var$4, var$5))
            return 0;
        return nms_Chunk_canBlockSeeTheSky(nms_World_getChunkFromChunkCoords($this, var$4, var$5), $var1 & 15, $var2, $var3 & 15);
    }
    return 0;
}
function nms_World_getHeightValue($this, $var1, $var2) {
    var var$3, var$4;
    if ($var1 >= (-32000000) && $var2 >= (-32000000) && $var1 < 32000000 && $var2 <= 32000000) {
        var$3 = $var1 >> 4;
        var$4 = $var2 >> 4;
        if (!nms_World_chunkExists($this, var$3, var$4))
            return 0;
        return nms_Chunk_getHeightValue(nms_World_getChunkFromChunkCoords($this, var$3, var$4), $var1 & 15, $var2 & 15);
    }
    return 0;
}
function nms_World_neighborLightPropagationChanged($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6;
    if (!($this.$worldProvider.$field_6478_e && $var1 === nms_EnumSkyBlock_Sky) && nms_World_blockExists($this, $var2, $var3, $var4)) {
        if ($var1 === nms_EnumSkyBlock_Sky) {
            if (nms_World_canExistingBlockSeeTheSky($this, $var2, $var3, $var4))
                $var5 = 15;
        } else if ($var1 === nms_EnumSkyBlock_Block) {
            $var6 = nms_World_getBlockId($this, $var2, $var3, $var4);
            nms_Block_$callClinit();
            if (nms_Block_lightValue.data[$var6] > $var5)
                $var5 = nms_Block_lightValue.data[$var6];
        }
        if (nms_World_getSavedLightValue($this, $var1, $var2, $var3, $var4) != $var5)
            nms_World_func_616_a($this, $var1, $var2, $var3, $var4, $var2, $var3, $var4);
    }
}
function nms_World_getSavedLightValue($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    if ($var3 >= 0 && $var3 < 128 && $var2 >= (-32000000) && $var4 >= (-32000000) && $var2 < 32000000 && $var4 <= 32000000) {
        $var5 = $var2 >> 4;
        $var6 = $var4 >> 4;
        if (!nms_World_chunkExists($this, $var5, $var6))
            return 0;
        return nms_Chunk_getSavedLightValue(nms_World_getChunkFromChunkCoords($this, $var5, $var6), $var1, $var2 & 15, $var3, $var4 & 15);
    }
    return $var1.$field_1722_c;
}
function nms_World_setLightValue($this, $var1, $var2, $var3, $var4, $var5) {
    var $var7, var$7;
    a: {
        if ($var2 >= (-32000000) && $var4 >= (-32000000) && $var2 < 32000000 && $var4 <= 32000000 && $var3 >= 0 && $var3 < 128) {
            $var7 = $var2 >> 4;
            var$7 = $var4 >> 4;
            if (nms_World_chunkExists($this, $var7, var$7)) {
                nms_Chunk_setLightValue(nms_World_getChunkFromChunkCoords($this, $var7, var$7), $var1, $var2 & 15, $var3, $var4 & 15, $var5);
                $var7 = 0;
                while (true) {
                    if ($var7 >= $this.$worldAccesses.$size)
                        break a;
                    nms_RenderGlobal_func_934_a(ju_ArrayList_get($this.$worldAccesses, $var7), $var2, $var3, $var4);
                    $var7 = $var7 + 1 | 0;
                }
            }
        }
    }
}
function nms_World_getLightBrightness($this, $var1, $var2, $var3) {
    return $this.$worldProvider.$lightBrightnessTable.data[nms_World_getBlockLightValue($this, $var1, $var2, $var3)];
}
function nms_World_isDaytime($this) {
    return $this.$skylightSubtracted >= 4 ? 0 : 1;
}
function nms_World_rayTraceBlocks($this, $var1, $var2) {
    return nms_World_rayTraceBlocks0($this, $var1, $var2, 0);
}
function nms_World_rayTraceBlocks0($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, $var8, $var9, $var10, $var10_0, $var11, $var13, $var15, $var35, $var17, $var19, $var21, $var23, $var25, $var27, $var30, $var31, $var32, $var33, $var34;
    if (!(isNaN($var1.$xCoord) ? 1 : 0) && !(isNaN($var1.$yCoord) ? 1 : 0) && !(isNaN($var1.$zCoord) ? 1 : 0)) {
        if (!(isNaN($var2.$xCoord) ? 1 : 0) && !(isNaN($var2.$yCoord) ? 1 : 0) && !(isNaN($var2.$zCoord) ? 1 : 0)) {
            $var4 = nms_MathHelper_floor_double($var2.$xCoord);
            $var5 = nms_MathHelper_floor_double($var2.$yCoord);
            $var6 = nms_MathHelper_floor_double($var2.$zCoord);
            $var7 = nms_MathHelper_floor_double($var1.$xCoord);
            $var8 = nms_MathHelper_floor_double($var1.$yCoord);
            $var9 = nms_MathHelper_floor_double($var1.$zCoord);
            $var10 = 200;
            a: {
                while (true) {
                    $var10_0 = $var10 + (-1) | 0;
                    if ($var10 < 0)
                        return null;
                    if (isNaN($var1.$xCoord) ? 1 : 0)
                        break a;
                    if (isNaN($var1.$yCoord) ? 1 : 0)
                        break a;
                    if (isNaN($var1.$zCoord) ? 1 : 0)
                        break a;
                    if ($var7 == $var4 && $var8 == $var5 && $var9 == $var6)
                        return null;
                    $var11 = 999.0;
                    $var13 = 999.0;
                    $var15 = 999.0;
                    $var10 = $rt_compare($var4, $var7);
                    if ($var10 > 0)
                        $var11 = $var7 + 1.0;
                    if ($var10 < 0)
                        $var11 = $var7 + 0.0;
                    $var7 = $rt_compare($var5, $var8);
                    if ($var7 > 0)
                        $var13 = $var8 + 1.0;
                    if ($var7 < 0)
                        $var13 = $var8 + 0.0;
                    $var35 = $rt_compare($var6, $var9);
                    if ($var35 > 0)
                        $var15 = $var9 + 1.0;
                    if ($var35 < 0)
                        $var15 = $var9 + 0.0;
                    $var17 = 999.0;
                    $var19 = 999.0;
                    $var21 = 999.0;
                    $var23 = $var2.$xCoord - $var1.$xCoord;
                    $var25 = $var2.$yCoord - $var1.$yCoord;
                    $var27 = $var2.$zCoord - $var1.$zCoord;
                    if ($var11 !== 999.0)
                        $var17 = ($var11 - $var1.$xCoord) / $var23;
                    if ($var13 !== 999.0)
                        $var19 = ($var13 - $var1.$yCoord) / $var25;
                    if ($var15 !== 999.0)
                        $var21 = ($var15 - $var1.$zCoord) / $var27;
                    if ($var17 < $var19 && $var17 < $var21) {
                        $var35 = $var10 <= 0 ? 5 : 4;
                        $var1.$xCoord = $var11;
                        $var1.$yCoord = $var1.$yCoord + $var25 * $var17;
                        $var1.$zCoord = $var1.$zCoord + $var27 * $var17;
                    } else if ($var19 >= $var21) {
                        $var35 = $var35 <= 0 ? 3 : 2;
                        $var1.$xCoord = $var1.$xCoord + $var23 * $var21;
                        $var1.$yCoord = $var1.$yCoord + $var25 * $var21;
                        $var1.$zCoord = $var15;
                    } else {
                        $var35 = $var7 <= 0 ? 1 : 0;
                        $var1.$xCoord = $var1.$xCoord + $var23 * $var19;
                        $var1.$yCoord = $var13;
                        $var1.$zCoord = $var1.$zCoord + $var27 * $var19;
                    }
                    $var30 = nms_Vec3D_createVector($var1.$xCoord, $var1.$yCoord, $var1.$zCoord);
                    $var11 = nms_MathHelper_floor_double($var1.$xCoord);
                    $var30.$xCoord = $var11;
                    $var7 = $var11 | 0;
                    if ($var35 == 5) {
                        $var7 = $var7 + (-1) | 0;
                        $var30.$xCoord = $var30.$xCoord + 1.0;
                    }
                    $var11 = nms_MathHelper_floor_double($var1.$yCoord);
                    $var30.$yCoord = $var11;
                    $var8 = $var11 | 0;
                    if ($var35 == 1) {
                        $var8 = $var8 + (-1) | 0;
                        $var30.$yCoord = $var30.$yCoord + 1.0;
                    }
                    $var11 = nms_MathHelper_floor_double($var1.$zCoord);
                    $var30.$zCoord = $var11;
                    $var9 = $var11 | 0;
                    if ($var35 == 3) {
                        $var9 = $var9 + (-1) | 0;
                        $var30.$zCoord = $var30.$zCoord + 1.0;
                    }
                    $var31 = nms_World_getBlockId($this, $var7, $var8, $var9);
                    $var32 = nms_World_getBlockMetadata($this, $var7, $var8, $var9);
                    nms_Block_$callClinit();
                    $var33 = nms_Block_blocksList.data[$var31];
                    if ($var31 > 0 && $var33.$canCollideCheck($var32, $var3)) {
                        $var34 = $var33.$collisionRayTrace($this, $var7, $var8, $var9, $var1, $var2);
                        if ($var34 !== null)
                            break;
                    }
                    $var10 = $var10_0;
                }
                return $var34;
            }
            return null;
        }
        return null;
    }
    return null;
}
function nms_World_playSoundAtEntity($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = 0;
    while ($var5 < $this.$worldAccesses.$size) {
        nms_RenderGlobal_playSound(ju_ArrayList_get($this.$worldAccesses, $var5), $var2, $var1.$posX, $var1.$posY - $var1.$yOffset, $var1.$posZ, $var3, $var4);
        $var5 = $var5 + 1 | 0;
    }
}
function nms_World_playSoundEffect($this, $var1, $var3, $var5, $var7, $var8, $var9) {
    var $var10;
    $var10 = 0;
    while ($var10 < $this.$worldAccesses.$size) {
        nms_RenderGlobal_playSound(ju_ArrayList_get($this.$worldAccesses, $var10), $var7, $var1, $var3, $var5, $var8, $var9);
        $var10 = $var10 + 1 | 0;
    }
}
function nms_World_playRecord($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = 0;
    while ($var5 < $this.$worldAccesses.$size) {
        nms_RenderGlobal_playRecord(ju_ArrayList_get($this.$worldAccesses, $var5), $var1, $var2, $var3, $var4);
        $var5 = $var5 + 1 | 0;
    }
}
function nms_World_spawnParticle($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12) {
    var $var14;
    $var14 = 0;
    while ($var14 < $this.$worldAccesses.$size) {
        nms_RenderGlobal_spawnParticle(ju_ArrayList_get($this.$worldAccesses, $var14), $var1, $var2, $var4, $var6, $var8, $var10, $var12);
        $var14 = $var14 + 1 | 0;
    }
}
function nms_World_entityJoinedWorld($this, $var1) {
    var $var2, $var3, $var4, var$5, var$6, var$7;
    $var2 = nms_MathHelper_floor_double($var1.$posX / 16.0);
    $var3 = nms_MathHelper_floor_double($var1.$posZ / 16.0);
    $var4 = 0;
    var$5 = $var1 instanceof nms_EntityPlayer;
    if (var$5)
        $var4 = 1;
    if (!$var4 && !nms_World_chunkExists($this, $var2, $var3))
        return 0;
    if (var$5) {
        ju_ArrayList_add($this.$playerEntities, $var1);
        var$6 = jl_System_out();
        var$7 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$7);
        ji_PrintStream_println(var$6, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(454)), $this.$playerEntities.$size)));
    }
    nms_Chunk_addEntity(nms_World_getChunkFromChunkCoords($this, $var2, $var3), $var1);
    ju_ArrayList_add($this.$loadedEntityList, $var1);
    nms_World_obtainEntitySkin($this, $var1);
    return 1;
}
function nms_World_obtainEntitySkin($this, $var1) {
    var $var2;
    $var2 = 0;
    while ($var2 < $this.$worldAccesses.$size) {
        ju_ArrayList_get($this.$worldAccesses, $var2);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_World_releaseEntitySkin($this, $var1) {
    var $var2;
    $var2 = 0;
    while ($var2 < $this.$worldAccesses.$size) {
        ju_ArrayList_get($this.$worldAccesses, $var2);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_World_setEntityDead($this, $var1) {
    nms_Entity_setEntityDead($var1);
    if ($var1 instanceof nms_EntityPlayer)
        ju_ArrayList_remove0($this.$playerEntities, $var1);
}
function nms_World_addWorldAccess($this, $var1) {
    ju_ArrayList_add($this.$worldAccesses, $var1);
}
function nms_World_removeWorldAccess($this, $var1) {
    ju_ArrayList_remove0($this.$worldAccesses, $var1);
}
function nms_World_getCollidingBoundingBoxes($this, $var1, $var2) {
    var $var9, $var4, $var5, $var6, $var7, $var8, $var16, $var10, $var11, $var12, $var15, $var13;
    ju_ArrayList_clear($this.$field_9428_I);
    $var9 = nms_MathHelper_floor_double($var2.$minX);
    $var4 = nms_MathHelper_floor_double($var2.$maxX0 + 1.0);
    $var5 = nms_MathHelper_floor_double($var2.$minY0);
    $var6 = nms_MathHelper_floor_double($var2.$maxY0 + 1.0);
    $var7 = nms_MathHelper_floor_double($var2.$minZ0);
    $var8 = nms_MathHelper_floor_double($var2.$maxZ0 + 1.0);
    $var16 = $var5 - 1 | 0;
    while ($var9 < $var4) {
        $var10 = $var7;
        while ($var10 < $var8) {
            a: {
                if (nms_World_blockExists($this, $var9, 64, $var10)) {
                    $var11 = $var16;
                    while (true) {
                        if ($var11 >= $var6)
                            break a;
                        nms_Block_$callClinit();
                        $var12 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var9, $var11, $var10)];
                        if ($var12 !== null)
                            $var12.$getCollidingBoundingBoxes($this, $var9, $var11, $var10, $var2, $this.$field_9428_I);
                        $var11 = $var11 + 1 | 0;
                    }
                }
            }
            $var10 = $var10 + 1 | 0;
        }
        $var9 = $var9 + 1 | 0;
    }
    $var15 = nms_World_getEntitiesWithinAABBExcludingEntity($this, $var1, nms_AxisAlignedBB_expands($var2, 0.25, 0.25, 0.25));
    $var16 = 0;
    while ($var16 < $var15.$size) {
        $var13 = ju_ArrayList_get($var15, $var16).$func_372_f_();
        if ($var13 !== null && nms_AxisAlignedBB_intersectsWith($var13, $var2))
            ju_ArrayList_add($this.$field_9428_I, $var13);
        $var12 = $var1.$func_383_b_(ju_ArrayList_get($var15, $var16));
        if ($var12 !== null && nms_AxisAlignedBB_intersectsWith($var12, $var2))
            ju_ArrayList_add($this.$field_9428_I, $var12);
        $var16 = $var16 + 1 | 0;
    }
    return $this.$field_9428_I;
}
function nms_World_calculateSkylightSubtracted($this, $var1) {
    var $var3;
    $var3 = 1.0 - (nms_MathHelper_cos(nms_World_getCelestialAngle($this, $var1) * 3.1415927410125732 * 2.0) * 2.0 + 0.5);
    if ($var3 < 0.0)
        $var3 = 0.0;
    if ($var3 > 1.0)
        $var3 = 1.0;
    return $var3 * 11.0 | 0;
}
function nms_World_func_4079_a($this, $var1, $var2) {
    var $var4, $var5, $var6, $var7, $var8, $var9, $var10, $var11;
    $var4 = nms_MathHelper_cos(nms_World_getCelestialAngle($this, $var2) * 3.1415927410125732 * 2.0) * 2.0 + 0.5;
    if ($var4 < 0.0)
        $var4 = 0.0;
    if ($var4 > 1.0)
        $var4 = 1.0;
    $var5 = nms_MathHelper_floor_double($var1.$posX);
    $var6 = nms_MathHelper_floor_double($var1.$posZ);
    $var7 = nms_World_func_4075_a($this).$func_4072_b($var5, $var6);
    $var8 = nms_MobSpawnerBase_getSkyColorByTemp(nms_World_func_4075_a($this).$func_4073_a($var5, $var6), $var7);
    $var9 = ($var8 >> 16 & 255) / 255.0;
    $var10 = ($var8 >> 8 & 255) / 255.0;
    $var11 = ($var8 & 255) / 255.0;
    return nms_Vec3D_createVector($var9 * $var4, $var10 * $var4, $var11 * $var4);
}
function nms_World_getCelestialAngle($this, $var1) {
    return $this.$worldProvider.$calculateCelestialAngle($this.$worldTime, $var1);
}
function nms_World_func_628_d($this, $var1) {
    var $var3, $var4, $var5, $var6;
    $var3 = nms_MathHelper_cos(nms_World_getCelestialAngle($this, $var1) * 3.1415927410125732 * 2.0) * 2.0 + 0.5;
    if ($var3 < 0.0)
        $var3 = 0.0;
    if ($var3 > 1.0)
        $var3 = 1.0;
    $var4 = Long_toNumber(Long_and(Long_shr($this.$field_1019_F, 16), Long_fromInt(255))) / 255.0;
    $var5 = Long_toNumber(Long_and(Long_shr($this.$field_1019_F, 8), Long_fromInt(255))) / 255.0;
    $var6 = Long_toNumber(Long_and($this.$field_1019_F, Long_fromInt(255))) / 255.0;
    $var1 = $var3 * 0.8999999761581421 + 0.10000000149011612;
    return nms_Vec3D_createVector($var4 * $var1, $var5 * $var1, $var6 * ($var3 * 0.8500000238418579 + 0.15000000596046448));
}
function nms_World_func_4082_d($this, $var1) {
    var $var2;
    $var2 = nms_World_getCelestialAngle($this, $var1);
    return $this.$worldProvider.$func_4096_a($var2, $var1);
}
function nms_World_func_4083_e($this, $var1, $var2) {
    var $var3, $var4, var$5, $var5;
    $var3 = nms_World_getChunkFromBlockCoords($this, $var1, $var2);
    $var4 = 127;
    while (nms_World_getBlockMaterial($this, $var1, $var4, $var2).$func_880_c() && $var4 > 0) {
        $var4 = $var4 + (-1) | 0;
    }
    var$5 = $var1 & 15;
    $var2 = $var2 & 15;
    a: {
        while ($var4 > 0) {
            $var5 = nms_Chunk_getBlockID($var3, var$5, $var4, $var2);
            if ($var5) {
                nms_Block_$callClinit();
                if (nms_Block_blocksList.data[$var5].$blockMaterial.$func_880_c())
                    break a;
                if (nms_Block_blocksList.data[$var5].$blockMaterial.$getIsLiquid())
                    break a;
            }
            $var4 = $var4 + (-1) | 0;
        }
        return (-1);
    }
    return $var4 + 1 | 0;
}
function nms_World_func_696_e($this, $var1, $var2) {
    return nms_Chunk_getHeightValue(nms_World_getChunkFromBlockCoords($this, $var1, $var2), $var1 & 15, $var2 & 15);
}
function nms_World_func_679_f($this, $var1) {
    var $var3;
    $var3 = 1.0 - (nms_MathHelper_cos(nms_World_getCelestialAngle($this, $var1) * 3.1415927410125732 * 2.0) * 2.0 + 0.75);
    if ($var3 < 0.0)
        $var3 = 0.0;
    if ($var3 > 1.0)
        $var3 = 1.0;
    return $var3 * $var3 * 0.5;
}
function nms_World_scheduleBlockUpdate($this, $var1, $var2, $var3, $var4) {
    var $var5, var$6, $var7;
    $var5 = new nms_NextTickListEntry;
    var$6 = nms_NextTickListEntry_nextTickEntryID;
    nms_NextTickListEntry_nextTickEntryID = Long_add(var$6, Long_fromInt(1));
    $var5.$tickEntryID = var$6;
    $var5.$xCoord1 = $var1;
    $var5.$yCoord1 = $var2;
    $var5.$zCoord1 = $var3;
    $var5.$blockID1 = $var4;
    if ($this.$field_4214_a) {
        if (nms_World_checkChunksExist($this, $var5.$xCoord1 - 8 | 0, $var5.$yCoord1 - 8 | 0, $var5.$zCoord1 - 8 | 0, $var5.$xCoord1 + 8 | 0, $var5.$yCoord1 + 8 | 0, $var5.$zCoord1 + 8 | 0)) {
            $var7 = nms_World_getBlockId($this, $var5.$xCoord1, $var5.$yCoord1, $var5.$zCoord1);
            if ($var7 == $var5.$blockID1 && $var7 > 0) {
                nms_Block_$callClinit();
                nms_Block_blocksList.data[$var7].$updateTick($this, $var5.$xCoord1, $var5.$yCoord1, $var5.$zCoord1, $this.$rand1);
            }
        }
    } else if (nms_World_checkChunksExist($this, $var1 - 8 | 0, $var2 - 8 | 0, $var3 - 8 | 0, $var1 + 8 | 0, $var2 + 8 | 0, $var3 + 8 | 0)) {
        if ($var4 > 0) {
            nms_Block_$callClinit();
            $var5.$scheduledTime = Long_add(Long_fromInt(nms_Block_blocksList.data[$var4].$tickRate()), $this.$worldTime);
        }
        if (!ju_HashSet_contains($this.$scheduledTickSet, $var5)) {
            ju_HashSet_add($this.$scheduledTickSet, $var5);
            ju_TreeSet_add($this.$scheduledTickTreeSet, $var5);
        }
    }
}
function nms_World_func_633_c($this) {
    var $var1, $var2, $var3, $var4, $var3_0, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();$var3_0 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        ju_AbstractCollection_removeAll($this.$loadedEntityList, $this.$field_1024_A);
        $var1 = 0;
        while ($var1 < $this.$field_1024_A.$size) {
            $var2 = ju_ArrayList_get($this.$field_1024_A, $var1);
            $var3 = $var2.$field_657_ba;
            $var4 = $var2.$field_654_bc;
            if ($var2.$field_621_aZ && nms_World_chunkExists($this, $var3, $var4))
                nms_Chunk_func_1015_b(nms_World_getChunkFromChunkCoords($this, $var3, $var4), $var2);
            $var1 = $var1 + 1 | 0;
        }
        $var1 = 0;
        while ($var1 < $this.$field_1024_A.$size) {
            nms_World_releaseEntitySkin($this, ju_ArrayList_get($this.$field_1024_A, $var1));
            $var1 = $var1 + 1 | 0;
        }
        ju_ArrayList_clear($this.$field_1024_A);
        $var3 = 0;
        while ($var3 < $this.$loadedEntityList.$size) {
            a: {
                $var2 = ju_ArrayList_get($this.$loadedEntityList, $var3);
                if ($var2.$ridingEntity !== null) {
                    if (!$var2.$ridingEntity.$isDead && $var2.$ridingEntity.$riddenByEntity === $var2)
                        break a;
                    $var2.$ridingEntity.$riddenByEntity = null;
                    $var2.$ridingEntity = null;
                }
                if (!$var2.$isDead) {
                    $ptr = 1;
                    continue main;
                }
                if ($var2.$isDead) {
                    $var3_0 = $var2.$field_657_ba;
                    $var4 = $var2.$field_654_bc;
                    if ($var2.$field_621_aZ && nms_World_chunkExists($this, $var3_0, $var4))
                        nms_Chunk_func_1015_b(nms_World_getChunkFromChunkCoords($this, $var3_0, $var4), $var2);
                    $var5 = $this.$loadedEntityList;
                    $var1 = $var3 + (-1) | 0;
                    ju_ArrayList_remove($var5, $var3);
                    nms_World_releaseEntitySkin($this, $var2);
                    $var3 = $var1;
                }
            }
            $var3 = $var3 + 1 | 0;
        }
        $var1 = 0;
        while ($var1 < $this.$loadedTileEntityList.$size) {
            ju_ArrayList_get($this.$loadedTileEntityList, $var1).$updateEntity();
            $var1 = $var1 + 1 | 0;
        }
        return;
    case 1:
        nms_World_func_667_e($this, $var2);
        if ($rt_suspending()) {
            break main;
        }
        b: while (true) {
            if ($var2.$isDead) {
                $var3_0 = $var2.$field_657_ba;
                $var4 = $var2.$field_654_bc;
                if ($var2.$field_621_aZ && nms_World_chunkExists($this, $var3_0, $var4))
                    nms_Chunk_func_1015_b(nms_World_getChunkFromChunkCoords($this, $var3_0, $var4), $var2);
                $var5 = $this.$loadedEntityList;
                $var1 = $var3 + (-1) | 0;
                ju_ArrayList_remove($var5, $var3);
                nms_World_releaseEntitySkin($this, $var2);
                $var3 = $var1;
            }
            c: {
                while (true) {
                    $var3 = $var3 + 1 | 0;
                    if ($var3 >= $this.$loadedEntityList.$size)
                        break b;
                    $var2 = ju_ArrayList_get($this.$loadedEntityList, $var3);
                    if ($var2.$ridingEntity === null)
                        break c;
                    if ($var2.$ridingEntity.$isDead)
                        break;
                    if ($var2.$ridingEntity.$riddenByEntity !== $var2)
                        break;
                }
                $var2.$ridingEntity.$riddenByEntity = null;
                $var2.$ridingEntity = null;
            }
            if ($var2.$isDead)
                continue;
            else {
                continue main;
            }
        }
        $var1 = 0;
        while ($var1 < $this.$loadedTileEntityList.$size) {
            ju_ArrayList_get($this.$loadedTileEntityList, $var1).$updateEntity();
            $var1 = $var1 + 1 | 0;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var3_0, $var5, $ptr);
}
function nms_World_func_667_e($this, $var1) {
    var var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = 1;
        $ptr = 1;
    case 1:
        nms_World_func_4084_a($this, $var1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $ptr);
}
function nms_World_func_4084_a($this, $var1, $var2) {
    var $var3, $var4, $var6, $var7, $var8, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = nms_MathHelper_floor_double($var1.$posX);
        $var4 = nms_MathHelper_floor_double($var1.$posZ);
        if (!(!$var2 && !nms_World_checkChunksExist($this, $var3 - 16 | 0, 0, $var4 - 16 | 0, $var3 + 16 | 0, 128, $var4 + 16 | 0))) {
            $var1.$lastTickPosX = $var1.$posX;
            $var1.$lastTickPosY = $var1.$posY;
            $var1.$lastTickPosZ = $var1.$posZ;
            $var1.$prevRotationYaw = $var1.$rotationYaw;
            $var1.$prevRotationPitch = $var1.$rotationPitch;
            if ($var2 && $var1.$field_621_aZ) {
                if ($var1.$ridingEntity === null) {
                    $ptr = 1;
                    continue main;
                }
                $ptr = 2;
                continue main;
            }
            if (!(!(isNaN($var1.$posX) ? 1 : 0) && !(!isFinite($var1.$posX) ? 1 : 0)))
                $var1.$posX = $var1.$lastTickPosX;
            if (!(!(isNaN($var1.$posY) ? 1 : 0) && !(!isFinite($var1.$posY) ? 1 : 0)))
                $var1.$posY = $var1.$lastTickPosY;
            if (!(!(isNaN($var1.$posZ) ? 1 : 0) && !(!isFinite($var1.$posZ) ? 1 : 0)))
                $var1.$posZ = $var1.$lastTickPosZ;
            if (!(!(isNaN($var1.$rotationPitch) ? 1 : 0) && !(!isFinite($var1.$rotationPitch) ? 1 : 0)))
                $var1.$rotationPitch = $var1.$prevRotationPitch;
            if (!(!(isNaN($var1.$rotationYaw) ? 1 : 0) && !(!isFinite($var1.$rotationYaw) ? 1 : 0)))
                $var1.$rotationYaw = $var1.$prevRotationYaw;
            $var6 = nms_MathHelper_floor_double($var1.$posX / 16.0);
            $var7 = nms_MathHelper_floor_double($var1.$posY / 16.0);
            $var8 = nms_MathHelper_floor_double($var1.$posZ / 16.0);
            if (!($var1.$field_621_aZ && $var1.$field_657_ba == $var6 && $var1.$field_656_bb == $var7 && $var1.$field_654_bc == $var8)) {
                if ($var1.$field_621_aZ && nms_World_chunkExists($this, $var1.$field_657_ba, $var1.$field_654_bc))
                    nms_Chunk_func_1016_a(nms_World_getChunkFromChunkCoords($this, $var1.$field_657_ba, $var1.$field_654_bc), $var1, $var1.$field_656_bb);
                if (!nms_World_chunkExists($this, $var6, $var8))
                    $var1.$field_621_aZ = 0;
                else {
                    $var1.$field_621_aZ = 1;
                    nms_Chunk_addEntity(nms_World_getChunkFromChunkCoords($this, $var6, $var8), $var1);
                }
            }
            if ($var2 && $var1.$field_621_aZ && $var1.$riddenByEntity !== null) {
                if (!$var1.$riddenByEntity.$isDead && $var1.$riddenByEntity.$ridingEntity === $var1) {
                    $var1 = $var1.$riddenByEntity;
                    $ptr = 3;
                    continue main;
                }
                $var1.$riddenByEntity.$ridingEntity = null;
                $var1.$riddenByEntity = null;
            }
        }
        return;
    case 1:
        $var1.$onUpdate();
        if ($rt_suspending()) {
            break main;
        }
        if (!(!(isNaN($var1.$posX) ? 1 : 0) && !(!isFinite($var1.$posX) ? 1 : 0)))
            $var1.$posX = $var1.$lastTickPosX;
        if (!(!(isNaN($var1.$posY) ? 1 : 0) && !(!isFinite($var1.$posY) ? 1 : 0)))
            $var1.$posY = $var1.$lastTickPosY;
        if (!(!(isNaN($var1.$posZ) ? 1 : 0) && !(!isFinite($var1.$posZ) ? 1 : 0)))
            $var1.$posZ = $var1.$lastTickPosZ;
        if (!(!(isNaN($var1.$rotationPitch) ? 1 : 0) && !(!isFinite($var1.$rotationPitch) ? 1 : 0)))
            $var1.$rotationPitch = $var1.$prevRotationPitch;
        if (!(!(isNaN($var1.$rotationYaw) ? 1 : 0) && !(!isFinite($var1.$rotationYaw) ? 1 : 0)))
            $var1.$rotationYaw = $var1.$prevRotationYaw;
        $var6 = nms_MathHelper_floor_double($var1.$posX / 16.0);
        $var7 = nms_MathHelper_floor_double($var1.$posY / 16.0);
        $var8 = nms_MathHelper_floor_double($var1.$posZ / 16.0);
        if (!($var1.$field_621_aZ && $var1.$field_657_ba == $var6 && $var1.$field_656_bb == $var7 && $var1.$field_654_bc == $var8)) {
            if ($var1.$field_621_aZ && nms_World_chunkExists($this, $var1.$field_657_ba, $var1.$field_654_bc))
                nms_Chunk_func_1016_a(nms_World_getChunkFromChunkCoords($this, $var1.$field_657_ba, $var1.$field_654_bc), $var1, $var1.$field_656_bb);
            if (!nms_World_chunkExists($this, $var6, $var8))
                $var1.$field_621_aZ = 0;
            else {
                $var1.$field_621_aZ = 1;
                nms_Chunk_addEntity(nms_World_getChunkFromChunkCoords($this, $var6, $var8), $var1);
            }
        }
        if ($var2 && $var1.$field_621_aZ && $var1.$riddenByEntity !== null) {
            if (!$var1.$riddenByEntity.$isDead && $var1.$riddenByEntity.$ridingEntity === $var1) {
                $var1 = $var1.$riddenByEntity;
                $ptr = 3;
                continue main;
            }
            $var1.$riddenByEntity.$ridingEntity = null;
            $var1.$riddenByEntity = null;
        }
        return;
    case 2:
        $var1.$func_350_p();
        if ($rt_suspending()) {
            break main;
        }
        if (!(!(isNaN($var1.$posX) ? 1 : 0) && !(!isFinite($var1.$posX) ? 1 : 0)))
            $var1.$posX = $var1.$lastTickPosX;
        if (!(!(isNaN($var1.$posY) ? 1 : 0) && !(!isFinite($var1.$posY) ? 1 : 0)))
            $var1.$posY = $var1.$lastTickPosY;
        if (!(!(isNaN($var1.$posZ) ? 1 : 0) && !(!isFinite($var1.$posZ) ? 1 : 0)))
            $var1.$posZ = $var1.$lastTickPosZ;
        if (!(!(isNaN($var1.$rotationPitch) ? 1 : 0) && !(!isFinite($var1.$rotationPitch) ? 1 : 0)))
            $var1.$rotationPitch = $var1.$prevRotationPitch;
        if (!(!(isNaN($var1.$rotationYaw) ? 1 : 0) && !(!isFinite($var1.$rotationYaw) ? 1 : 0)))
            $var1.$rotationYaw = $var1.$prevRotationYaw;
        $var6 = nms_MathHelper_floor_double($var1.$posX / 16.0);
        $var7 = nms_MathHelper_floor_double($var1.$posY / 16.0);
        $var8 = nms_MathHelper_floor_double($var1.$posZ / 16.0);
        if (!($var1.$field_621_aZ && $var1.$field_657_ba == $var6 && $var1.$field_656_bb == $var7 && $var1.$field_654_bc == $var8)) {
            if ($var1.$field_621_aZ && nms_World_chunkExists($this, $var1.$field_657_ba, $var1.$field_654_bc))
                nms_Chunk_func_1016_a(nms_World_getChunkFromChunkCoords($this, $var1.$field_657_ba, $var1.$field_654_bc), $var1, $var1.$field_656_bb);
            if (!nms_World_chunkExists($this, $var6, $var8))
                $var1.$field_621_aZ = 0;
            else {
                $var1.$field_621_aZ = 1;
                nms_Chunk_addEntity(nms_World_getChunkFromChunkCoords($this, $var6, $var8), $var1);
            }
        }
        if ($var2 && $var1.$field_621_aZ && $var1.$riddenByEntity !== null) {
            if (!$var1.$riddenByEntity.$isDead && $var1.$riddenByEntity.$ridingEntity === $var1) {
                $var1 = $var1.$riddenByEntity;
                $ptr = 3;
                continue main;
            }
            $var1.$riddenByEntity.$ridingEntity = null;
            $var1.$riddenByEntity = null;
        }
        return;
    case 3:
        nms_World_func_667_e($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var6, $var7, $var8, $ptr);
}
function nms_World_checkIfAABBIsClear($this, $var1) {
    var $var2, $var3, $var4;
    $var2 = nms_World_getEntitiesWithinAABBExcludingEntity($this, null, $var1);
    $var3 = 0;
    while ($var3 < $var2.$size) {
        $var4 = ju_ArrayList_get($var2, $var3);
        if (!$var4.$isDead && $var4.$field_618_ad)
            return 0;
        $var3 = $var3 + 1 | 0;
    }
    return 1;
}
function nms_World_getIsAnyLiquid($this, $var1) {
    var $var8, $var3, $var4, $var5, $var6, $var7, $var9, $var10, $var11;
    $var8 = nms_MathHelper_floor_double($var1.$minX);
    $var3 = nms_MathHelper_floor_double($var1.$maxX0 + 1.0);
    $var4 = nms_MathHelper_floor_double($var1.$minY0);
    $var5 = nms_MathHelper_floor_double($var1.$maxY0 + 1.0);
    $var6 = nms_MathHelper_floor_double($var1.$minZ0);
    $var7 = nms_MathHelper_floor_double($var1.$maxZ0 + 1.0);
    if ($var1.$minX < 0.0)
        $var8 = $var8 + (-1) | 0;
    if ($var1.$minY0 < 0.0)
        $var4 = $var4 + (-1) | 0;
    if ($var1.$minZ0 < 0.0)
        $var6 = $var6 + (-1) | 0;
    while ($var8 < $var3) {
        $var9 = $var4;
        while ($var9 < $var5) {
            $var10 = $var6;
            while ($var10 < $var7) {
                nms_Block_$callClinit();
                $var11 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var8, $var9, $var10)];
                if ($var11 !== null && $var11.$blockMaterial.$getIsLiquid())
                    return 1;
                $var10 = $var10 + 1 | 0;
            }
            $var9 = $var9 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
    return 0;
}
function nms_World_isBoundingBoxBurning($this, $var1) {
    var $var8, $var3, $var4, $var5, $var6, $var7, $var9, $var10, $var11;
    $var8 = nms_MathHelper_floor_double($var1.$minX);
    $var3 = nms_MathHelper_floor_double($var1.$maxX0 + 1.0);
    $var4 = nms_MathHelper_floor_double($var1.$minY0);
    $var5 = nms_MathHelper_floor_double($var1.$maxY0 + 1.0);
    $var6 = nms_MathHelper_floor_double($var1.$minZ0);
    $var7 = nms_MathHelper_floor_double($var1.$maxZ0 + 1.0);
    a: {
        while ($var8 < $var3) {
            $var9 = $var4;
            while ($var9 < $var5) {
                $var10 = $var6;
                while ($var10 < $var7) {
                    $var11 = nms_World_getBlockId($this, $var8, $var9, $var10);
                    nms_Block_$callClinit();
                    if ($var11 == nms_Block_fire.$blockID)
                        break a;
                    if ($var11 == nms_Block_lavaStill.$blockID)
                        break a;
                    if ($var11 == nms_Block_lavaMoving.$blockID)
                        break a;
                    $var10 = $var10 + 1 | 0;
                }
                $var9 = $var9 + 1 | 0;
            }
            $var8 = $var8 + 1 | 0;
        }
        return 0;
    }
    return 1;
}
function nms_World_func_682_a($this, $var1, $var2, $var3) {
    var $var12, $var5, $var6, $var7, $var8, $var9, $var10, $var11, $var18, $var13, $var14, $var15;
    $var12 = nms_MathHelper_floor_double($var1.$minX);
    $var5 = nms_MathHelper_floor_double($var1.$maxX0 + 1.0);
    $var6 = nms_MathHelper_floor_double($var1.$minY0);
    $var7 = nms_MathHelper_floor_double($var1.$maxY0 + 1.0);
    $var8 = nms_MathHelper_floor_double($var1.$minZ0);
    $var9 = nms_MathHelper_floor_double($var1.$maxZ0 + 1.0);
    $var10 = 0;
    $var11 = nms_Vec3D_createVector(0.0, 0.0, 0.0);
    $var18 = $var7;
    while ($var12 < $var5) {
        $var13 = $var6;
        while ($var13 < $var7) {
            $var14 = $var8;
            while ($var14 < $var9) {
                nms_Block_$callClinit();
                $var15 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var12, $var13, $var14)];
                if ($var15 !== null && $var15.$blockMaterial === $var2 && $var18 >= ($var13 + 1 | 0) - nms_BlockFluids_func_288_b(nms_World_getBlockMetadata($this, $var12, $var13, $var14))) {
                    $var10 = 1;
                    $var15.$velocityToAddToEntity($this, $var12, $var13, $var14, $var3, $var11);
                }
                $var14 = $var14 + 1 | 0;
            }
            $var13 = $var13 + 1 | 0;
        }
        $var12 = $var12 + 1 | 0;
    }
    if (nms_Vec3D_lengthVector($var11) > 0.0) {
        $var1 = nms_Vec3D_normalize($var11);
        $var3.$motionX = $var3.$motionX + $var1.$xCoord * 0.004;
        $var3.$motionY = $var3.$motionY + $var1.$yCoord * 0.004;
        $var3.$motionZ = $var3.$motionZ + $var1.$zCoord * 0.004;
    }
    return $var10;
}
function nms_World_func_689_a($this, $var1, $var2) {
    var $var9, $var4, $var5, $var6, $var7, $var8, $var10, $var11, $var12;
    $var9 = nms_MathHelper_floor_double($var1.$minX);
    $var4 = nms_MathHelper_floor_double($var1.$maxX0 + 1.0);
    $var5 = nms_MathHelper_floor_double($var1.$minY0);
    $var6 = nms_MathHelper_floor_double($var1.$maxY0 + 1.0);
    $var7 = nms_MathHelper_floor_double($var1.$minZ0);
    $var8 = nms_MathHelper_floor_double($var1.$maxZ0 + 1.0);
    while ($var9 < $var4) {
        $var10 = $var5;
        while ($var10 < $var6) {
            $var11 = $var7;
            while ($var11 < $var8) {
                nms_Block_$callClinit();
                $var12 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var9, $var10, $var11)];
                if ($var12 !== null && $var12.$blockMaterial === $var2)
                    return 1;
                $var11 = $var11 + 1 | 0;
            }
            $var10 = $var10 + 1 | 0;
        }
        $var9 = $var9 + 1 | 0;
    }
    return 0;
}
function nms_World_func_707_b($this, $var1, $var2) {
    var $var9, $var4, $var5, $var6, $var7, $var8, $var10, $var11, $var12, $var13, $var14;
    $var9 = nms_MathHelper_floor_double($var1.$minX);
    $var4 = nms_MathHelper_floor_double($var1.$maxX0 + 1.0);
    $var5 = nms_MathHelper_floor_double($var1.$minY0);
    $var6 = nms_MathHelper_floor_double($var1.$maxY0 + 1.0);
    $var7 = nms_MathHelper_floor_double($var1.$minZ0);
    $var8 = nms_MathHelper_floor_double($var1.$maxZ0 + 1.0);
    while ($var9 < $var4) {
        $var10 = $var5;
        while ($var10 < $var6) {
            $var11 = $var7;
            while ($var11 < $var8) {
                nms_Block_$callClinit();
                $var12 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var9, $var10, $var11)];
                if ($var12 !== null && $var12.$blockMaterial === $var2) {
                    $var13 = nms_World_getBlockMetadata($this, $var9, $var10, $var11);
                    $var14 = $var10 + 1 | 0;
                    if ($var13 < 8)
                        $var14 = $var14 - $var13 / 8.0;
                    if ($var14 >= $var1.$minY0)
                        return 1;
                }
                $var11 = $var11 + 1 | 0;
            }
            $var10 = $var10 + 1 | 0;
        }
        $var9 = $var9 + 1 | 0;
    }
    return 0;
}
function nms_World_func_12243_a($this, $var1, $var2, $var4, $var6, $var8) {
    return nms_World_func_12244_a($this, $var1, $var2, $var4, $var6, $var8, 0);
}
function nms_World_func_12244_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10;
    $var10 = new nms_Explosion;
    $var10.$field_12257_a = 0;
    $var10.$field_12250_h = new ju_Random;
    $var10.$field_12251_g = ju_HashSet__init_0();
    $var10.$field_12249_i = $this;
    $var10.$field_12253_e = $var1;
    $var10.$field_12252_f = $var8;
    $var10.$field_12256_b = $var2;
    $var10.$field_12255_c = $var4;
    $var10.$field_12254_d = $var6;
    $var10.$field_12257_a = $var9;
    nms_Explosion_func_12248_a($var10);
    nms_Explosion_func_12247_b($var10);
    return $var10;
}
function nms_World_func_675_a($this, $var1, $var2) {
    var $var3, $var5, $var7, $var9, $var10, $var11, $var12, $var13, $var14, $var16, $var18, var$14, var$15;
    $var3 = 1.0 / (($var2.$maxX0 - $var2.$minX) * 2.0 + 1.0);
    $var5 = 1.0 / (($var2.$maxY0 - $var2.$minY0) * 2.0 + 1.0);
    $var7 = 1.0 / (($var2.$maxZ0 - $var2.$minZ0) * 2.0 + 1.0);
    $var9 = 0;
    $var10 = 0;
    $var11 = 0.0;
    while ($var11 <= 1.0) {
        $var12 = 0.0;
        while ($var12 <= 1.0) {
            $var13 = 0.0;
            while ($var13 <= 1.0) {
                $var14 = $var2.$minX + ($var2.$maxX0 - $var2.$minX) * $var11;
                $var16 = $var2.$minY0 + ($var2.$maxY0 - $var2.$minY0) * $var12;
                $var18 = $var2.$minZ0;
                var$14 = $var2.$maxZ0 - $var2.$minZ0;
                var$15 = $var13;
                if (nms_World_rayTraceBlocks($this, nms_Vec3D_createVector($var14, $var16, $var18 + var$14 * var$15), $var1) === null)
                    $var9 = $var9 + 1 | 0;
                $var10 = $var10 + 1 | 0;
                $var13 = var$15 + $var7;
            }
            $var12 = $var12 + $var5;
        }
        $var11 = $var11 + $var3;
    }
    return $var9 / $var10;
}
function nms_World_onBlockHit($this, $var1, $var2, $var3, $var4) {
    if (!$var4)
        $var2 = $var2 + (-1) | 0;
    if ($var4 == 1)
        $var2 = $var2 + 1 | 0;
    if ($var4 == 2)
        $var3 = $var3 + (-1) | 0;
    if ($var4 == 3)
        $var3 = $var3 + 1 | 0;
    if ($var4 == 4)
        $var1 = $var1 + (-1) | 0;
    if ($var4 == 5)
        $var1 = $var1 + 1 | 0;
    $var4 = nms_World_getBlockId($this, $var1, $var2, $var3);
    nms_Block_$callClinit();
    if ($var4 == nms_Block_fire.$blockID) {
        nms_World_playSoundEffect($this, $var1 + 0.5, $var2 + 0.5, $var3 + 0.5, $rt_s(279), 0.5, 2.5999999046325684 + (ju_Random_nextFloat($this.$rand1) - ju_Random_nextFloat($this.$rand1)) * 0.800000011920929);
        nms_World_setBlockWithNotify($this, $var1, $var2, $var3, 0);
    }
}
function nms_World_func_4085_a($this, $var1) {
    return null;
}
function nms_World_func_687_d($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(455)), $this.$loadedEntityList.$size));
}
function nms_World_getBlockTileEntity($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4);
    return $var4 === null ? null : nms_Chunk_getChunkBlockTileEntity($var4, $var1 & 15, $var2, $var3 & 15);
}
function nms_World_setBlockTileEntity($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4);
    if ($var5 !== null)
        nms_Chunk_setChunkBlockTileEntity($var5, $var1 & 15, $var2, $var3 & 15, $var4);
}
function nms_World_removeBlockTileEntity($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = nms_World_getChunkFromChunkCoords($this, $var1 >> 4, $var3 >> 4);
    if ($var4 !== null)
        nms_Chunk_removeChunkBlockTileEntity($var4, $var1 & 15, $var2, $var3 & 15);
}
function nms_World_isBlockOpaqueCube($this, $var1, $var2, $var3) {
    var $var4;
    nms_Block_$callClinit();
    $var4 = nms_Block_blocksList.data[nms_World_getBlockId($this, $var1, $var2, $var3)];
    return $var4 !== null ? $var4.$isOpaqueCube() : 0;
}
function nms_World_func_651_a($this, $var1) {
    var var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = 1;
        $ptr = 1;
    case 1:
        nms_World_saveWorld($this, var$2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $ptr);
}
function nms_World_func_6465_g($this) {
    var $var1, var$2, $$je;
    if ($this.$field_4204_J >= 50)
        return 0;
    $this.$field_4204_J = $this.$field_4204_J + 1 | 0;
    a: {
        b: {
            try {
                $var1 = 5000;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break b;

            }
            c: {
                try {
                    while (ju_ArrayList_size($this.$field_1051_z) > 0) {
                        $var1 = $var1 + (-1) | 0;
                        if ($var1 <= 0)
                            break c;
                        nms_MetadataChunkBlock_func_4127_a(ju_ArrayList_remove($this.$field_1051_z, ju_ArrayList_size($this.$field_1051_z) - 1 | 0), $this);
                    }
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;
                    break b;

                }
                $this.$field_4204_J = $this.$field_4204_J - 1 | 0;
                return 0;
            }
            try {
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;

            }
        }
        $this.$field_4204_J = $this.$field_4204_J - 1 | 0;
        $rt_throw(var$2);
    }
    $this.$field_4204_J = $this.$field_4204_J - 1 | 0;
    return 1;
}
function nms_World_func_616_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    nms_World_func_627_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, 1);
}
function nms_World_func_627_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8) {
    var $var11, $var13, $var14, var$12;
    if (!($this.$worldProvider.$field_6478_e && $var1 === nms_EnumSkyBlock_Sky)) {
        nms_World_field_9429_y = nms_World_field_9429_y + 1 | 0;
        if (nms_World_field_9429_y == 50)
            nms_World_field_9429_y = nms_World_field_9429_y - 1 | 0;
        else if (!nms_World_blockExists($this, ($var5 + $var2 | 0) / 2 | 0, 64, ($var7 + $var4 | 0) / 2 | 0))
            nms_World_field_9429_y = nms_World_field_9429_y - 1 | 0;
        else {
            a: {
                $var11 = $this.$field_1051_z.$size;
                if ($var8) {
                    if (4 <= $var11)
                        $var11 = 4;
                    $var13 = 0;
                    while (true) {
                        if ($var13 >= $var11)
                            break a;
                        $var14 = ju_ArrayList_get($this.$field_1051_z, ($this.$field_1051_z.$size - $var13 | 0) - 1 | 0);
                        if ($var14.$field_1299_a === $var1 && nms_MetadataChunkBlock_func_866_a($var14, $var2, $var3, $var4, $var5, $var6, $var7))
                            break;
                        $var13 = $var13 + 1 | 0;
                    }
                    nms_World_field_9429_y = nms_World_field_9429_y - 1 | 0;
                    return;
                }
            }
            $var14 = $this.$field_1051_z;
            var$12 = new nms_MetadataChunkBlock;
            var$12.$field_1299_a = $var1;
            var$12.$field_1298_b = $var2;
            var$12.$field_1304_c = $var3;
            var$12.$field_1303_d = $var4;
            var$12.$field_1302_e = $var5;
            var$12.$field_1301_f = $var6;
            var$12.$field_1300_g = $var7;
            ju_ArrayList_add($var14, var$12);
            if ($this.$field_1051_z.$size > 100000)
                ju_ArrayList_clear($this.$field_1051_z);
            nms_World_field_9429_y = nms_World_field_9429_y - 1 | 0;
        }
    }
}
function nms_World_calculateInitialSkylight($this) {
    var $var1;
    $var1 = nms_World_calculateSkylightSubtracted($this, 1.0);
    if ($var1 != $this.$skylightSubtracted)
        $this.$skylightSubtracted = $var1;
}
function nms_World_tick($this) {
    var $var1, $var2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            nms_SpawnerAnimals_performSpawning($this);
            nms_ChunkProviderLoadOrGenerate_func_532_a($this.$chunkProvider);
            $var1 = nms_World_calculateSkylightSubtracted($this, 1.0);
            if ($var1 != $this.$skylightSubtracted) {
                $this.$skylightSubtracted = $var1;
                $var2 = 0;
                while (true) {
                    if ($var2 >= $this.$worldAccesses.$size)
                        break a;
                    nms_RenderGlobal_func_936_e(ju_ArrayList_get($this.$worldAccesses, $var2));
                    $var2 = $var2 + 1 | 0;
                }
            }
        }
        $this.$worldTime = Long_add($this.$worldTime, Long_fromInt(1));
        if (Long_ne(Long_rem($this.$worldTime, Long_fromInt($this.$autosavePeriod)), Long_ZERO)) {
            nms_World_TickUpdates($this, 0);
            nms_World_func_4080_j($this);
            return;
        }
        $var1 = 0;
        var$3 = null;
        $ptr = 1;
    case 1:
        nms_World_saveWorld($this, $var1, var$3);
        if ($rt_suspending()) {
            break main;
        }
        nms_World_TickUpdates($this, 0);
        nms_World_func_4080_j($this);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_World_func_4080_j($this) {
    var $var1, $var2, $var3, $var4, $var6, $var7, $var12, $var13, $var14, $var8, $var9, $var10, $var15, var$14, var$15, var$16, $var11;
    ju_HashSet_clear($this.$field_9427_K);
    $var1 = 0;
    while ($var1 < $this.$playerEntities.$size) {
        $var2 = ju_ArrayList_get($this.$playerEntities, $var1);
        $var3 = nms_MathHelper_floor_double($var2.$posX / 16.0);
        $var4 = nms_MathHelper_floor_double($var2.$posZ / 16.0);
        $var6 = (-9);
        while ($var6 <= 9) {
            $var7 = (-9);
            while ($var7 <= 9) {
                ju_HashSet_add($this.$field_9427_K, nms_ChunkCoordIntPair__init_($var6 + $var3 | 0, $var7 + $var4 | 0));
                $var7 = $var7 + 1 | 0;
            }
            $var6 = $var6 + 1 | 0;
        }
        $var1 = $var1 + 1 | 0;
    }
    if ($this.$field_9426_L > 0)
        $this.$field_9426_L = $this.$field_9426_L - 1 | 0;
    $var12 = ju_HashSet_iterator($this.$field_9427_K);
    while (ju_HashMap$AbstractMapIterator_hasNext($var12)) {
        $var13 = ju_HashMap$KeyIterator_next($var12);
        $var3 = $var13.$chunkXPos * 16 | 0;
        $var4 = $var13.$chunkZPos * 16 | 0;
        $var14 = nms_World_getChunkFromChunkCoords($this, $var13.$chunkXPos, $var13.$chunkZPos);
        if (!$this.$field_9426_L) {
            $this.$field_9437_g = ($this.$field_9437_g * 3 | 0) + $this.$field_9436_h | 0;
            $var6 = $this.$field_9437_g >> 2;
            $var7 = $var6 & 15;
            $var8 = $var6 >> 8 & 15;
            $var9 = $var6 >> 16 & 127;
            $var10 = nms_Chunk_getBlockID($var14, $var7, $var9, $var8);
            $var15 = $var7 + $var3 | 0;
            $var8 = $var8 + $var4 | 0;
            if (!$var10 && nms_World_getBlockLightValue($this, $var15, $var9, $var8) <= ju_Random_nextInt($this.$rand1, 8) && nms_World_getSavedLightValue($this, nms_EnumSkyBlock_Sky, $var15, $var9, $var8) <= 0) {
                var$14 = $var15 + 0.5;
                var$15 = $var9 + 0.5;
                var$16 = $var8 + 0.5;
                $var11 = nms_World_getClosestPlayer($this, var$14, var$15, var$16, 8.0);
                if ($var11 !== null && nms_Entity_getDistanceSq($var11, var$14, var$15, var$16) > 4.0) {
                    nms_World_playSoundEffect($this, var$14, var$15, var$16, $rt_s(456), 0.699999988079071, 0.800000011920929 + ju_Random_nextFloat($this.$rand1) * 0.20000000298023224);
                    $this.$field_9426_L = ju_Random_nextInt($this.$rand1, 12000) + 6000 | 0;
                }
            }
        }
        $var6 = 0;
        while ($var6 < 80) {
            $this.$field_9437_g = ($this.$field_9437_g * 3 | 0) + $this.$field_9436_h | 0;
            $var7 = $this.$field_9437_g >> 2;
            $var8 = $var7 & 15;
            $var9 = $var7 >> 8 & 15;
            $var10 = $var7 >> 16 & 127;
            $var15 = $var14.$blocks0.data[$var8 << 11 | $var9 << 7 | $var10];
            nms_Block_$callClinit();
            if (nms_Block_tickOnLoad.data[$var15])
                nms_Block_blocksList.data[$var15].$updateTick($this, $var8 + $var3 | 0, $var10, $var9 + $var4 | 0, $this.$rand1);
            $var6 = $var6 + 1 | 0;
        }
    }
}
function nms_World_TickUpdates($this, $var1) {
    var $var2, var$3, $var3, $var4, $var6;
    $var2 = ju_TreeSet_size($this.$scheduledTickTreeSet);
    if ($var2 != ju_HashSet_size($this.$scheduledTickSet)) {
        var$3 = new jl_IllegalStateException;
        jl_Throwable__init_(var$3, $rt_s(457));
        $rt_throw(var$3);
    }
    if ($var2 > 1000)
        $var2 = 1000;
    $var3 = 0;
    a: {
        while (true) {
            if ($var3 >= $var2)
                break a;
            $var4 = ju_TreeSet_first($this.$scheduledTickTreeSet);
            if (!$var1 && Long_gt($var4.$scheduledTime, $this.$worldTime))
                break;
            ju_TreeSet_remove($this.$scheduledTickTreeSet, $var4);
            ju_HashSet_remove($this.$scheduledTickSet, $var4);
            if (nms_World_checkChunksExist($this, $var4.$xCoord1 - 8 | 0, $var4.$yCoord1 - 8 | 0, $var4.$zCoord1 - 8 | 0, $var4.$xCoord1 + 8 | 0, $var4.$yCoord1 + 8 | 0, $var4.$zCoord1 + 8 | 0)) {
                $var6 = nms_World_getBlockId($this, $var4.$xCoord1, $var4.$yCoord1, $var4.$zCoord1);
                if ($var6 == $var4.$blockID1 && $var6 > 0) {
                    nms_Block_$callClinit();
                    nms_Block_blocksList.data[$var6].$updateTick($this, $var4.$xCoord1, $var4.$yCoord1, $var4.$zCoord1, $this.$rand1);
                }
            }
            $var3 = $var3 + 1 | 0;
        }
    }
    return !ju_TreeSet_size($this.$scheduledTickTreeSet) ? 0 : 1;
}
function nms_World_randomDisplayUpdates($this, $var1, $var2, $var3) {
    var $var5, $var6, $var7, $var8, $var9, $var10;
    $var5 = new ju_Random;
    $var6 = 0;
    while ($var6 < 1000) {
        $var7 = ($var1 + ju_Random_nextInt($this.$rand1, 16) | 0) - ju_Random_nextInt($this.$rand1, 16) | 0;
        $var8 = ($var2 + ju_Random_nextInt($this.$rand1, 16) | 0) - ju_Random_nextInt($this.$rand1, 16) | 0;
        $var9 = ($var3 + ju_Random_nextInt($this.$rand1, 16) | 0) - ju_Random_nextInt($this.$rand1, 16) | 0;
        $var10 = nms_World_getBlockId($this, $var7, $var8, $var9);
        if ($var10 > 0) {
            nms_Block_$callClinit();
            nms_Block_blocksList.data[$var10].$randomDisplayTick($this, $var7, $var8, $var9, $var5);
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_World_getEntitiesWithinAABBExcludingEntity($this, $var1, $var2) {
    var $var7, $var4, $var5, $var6, $var8;
    ju_ArrayList_clear($this.$field_1012_M);
    $var7 = nms_MathHelper_floor_double(($var2.$minX - 2.0) / 16.0);
    $var4 = nms_MathHelper_floor_double(($var2.$maxX0 + 2.0) / 16.0);
    $var5 = nms_MathHelper_floor_double(($var2.$minZ0 - 2.0) / 16.0);
    $var6 = nms_MathHelper_floor_double(($var2.$maxZ0 + 2.0) / 16.0);
    while ($var7 <= $var4) {
        $var8 = $var5;
        while ($var8 <= $var6) {
            if (nms_World_chunkExists($this, $var7, $var8))
                nms_Chunk_getEntitiesWithinAABBForEntity(nms_World_getChunkFromChunkCoords($this, $var7, $var8), $var1, $var2, $this.$field_1012_M);
            $var8 = $var8 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
    return $this.$field_1012_M;
}
function nms_World_getEntitiesWithinAABB($this, $var1, $var2) {
    var $var8, $var4, $var5, $var6, $var7, $var9;
    $var8 = nms_MathHelper_floor_double(($var2.$minX - 2.0) / 16.0);
    $var4 = nms_MathHelper_floor_double(($var2.$maxX0 + 2.0) / 16.0);
    $var5 = nms_MathHelper_floor_double(($var2.$minZ0 - 2.0) / 16.0);
    $var6 = nms_MathHelper_floor_double(($var2.$maxZ0 + 2.0) / 16.0);
    $var7 = ju_ArrayList__init_0();
    while ($var8 <= $var4) {
        $var9 = $var5;
        while ($var9 <= $var6) {
            if (nms_World_chunkExists($this, $var8, $var9))
                nms_Chunk_getEntitiesOfTypeWithinAAAB(nms_World_getChunkFromChunkCoords($this, $var8, $var9), $var1, $var2, $var7);
            $var9 = $var9 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
    return $var7;
}
function nms_World_func_658_i($this) {
    return $this.$loadedEntityList;
}
function nms_World_func_698_b($this, $var1, $var2, $var3, $var4) {
    var $var5;
    if (nms_World_blockExists($this, $var1, $var2, $var3))
        nms_Chunk_setChunkModified(nms_World_getChunkFromBlockCoords($this, $var1, $var3));
    $var5 = 0;
    while ($var5 < $this.$worldAccesses.$size) {
        ju_ArrayList_get($this.$worldAccesses, $var5);
        $var5 = $var5 + 1 | 0;
    }
}
function nms_World_countEntities($this, $var1) {
    var $var2, $var3;
    $var2 = 0;
    $var3 = 0;
    while ($var3 < $this.$loadedEntityList.$size) {
        if (jl_Class_isAssignableFrom($var1, jl_Object_getClass(ju_ArrayList_get($this.$loadedEntityList, $var3))))
            $var2 = $var2 + 1 | 0;
        $var3 = $var3 + 1 | 0;
    }
    return $var2;
}
function nms_World_func_636_a($this, $var1) {
    var $var2;
    ju_AbstractCollection_addAll($this.$loadedEntityList, $var1);
    $var2 = 0;
    while ($var2 < $var1.$size) {
        nms_World_obtainEntitySkin($this, ju_ArrayList_get($var1, $var2));
        $var2 = $var2 + 1 | 0;
    }
}
function nms_World_func_632_b($this, $var1) {
    ju_AbstractCollection_addAll($this.$field_1024_A, $var1);
}
function nms_World_func_656_j($this) {
    while (nms_ChunkProviderLoadOrGenerate_func_532_a($this.$chunkProvider)) {
    }
}
function nms_World_canBlockBePlacedAt($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9;
    $var6 = nms_World_getBlockId($this, $var2, $var3, $var4);
    nms_Block_$callClinit();
    $var7 = nms_Block_blocksList.data[$var6];
    $var8 = nms_Block_blocksList.data[$var1];
    $var9 = $var8.$getCollisionBoundingBoxFromPool($this, $var2, $var3, $var4);
    if ($var5)
        $var9 = null;
    return $var9 !== null && !nms_World_checkIfAABBIsClear($this, $var9) ? 0 : $var7 !== nms_Block_waterStill && $var7 !== nms_Block_waterMoving && $var7 !== nms_Block_lavaStill && $var7 !== nms_Block_lavaMoving && $var7 !== nms_Block_fire && $var7 !== nms_Block_snow ? ($var1 > 0 && $var7 === null && $var8.$canPlaceBlockAt($this, $var2, $var3, $var4) ? 1 : 0) : 1;
}
function nms_World_getPathToEntity($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7;
    $var4 = nms_MathHelper_floor_double($var1.$posX);
    $var5 = nms_MathHelper_floor_double($var1.$posY);
    $var6 = nms_MathHelper_floor_double($var1.$posZ);
    $var7 = $var3 + 16.0 | 0;
    return nms_Pathfinder_createEntityPathTo(nms_Pathfinder__init_(nms_ChunkCache__init_($this, $var4 - $var7 | 0, $var5 - $var7 | 0, $var6 - $var7 | 0, $var4 + $var7 | 0, $var5 + $var7 | 0, $var6 + $var7 | 0)), $var1, $var2, $var3);
}
function nms_World_getEntityPathToXYZ($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9;
    $var6 = nms_MathHelper_floor_double($var1.$posX);
    $var7 = nms_MathHelper_floor_double($var1.$posY);
    $var8 = nms_MathHelper_floor_double($var1.$posZ);
    $var9 = $var5 + 8.0 | 0;
    return nms_Pathfinder_createEntityPathTo0(nms_Pathfinder__init_(nms_ChunkCache__init_($this, $var6 - $var9 | 0, $var7 - $var9 | 0, $var8 - $var9 | 0, $var6 + $var9 | 0, $var7 + $var9 | 0, $var8 + $var9 | 0)), $var1, $var2, $var3, $var4, $var5);
}
function nms_World_isBlockProvidingPowerTo($this, $var1, $var2, $var3, $var4) {
    var $var5;
    $var5 = nms_World_getBlockId($this, $var1, $var2, $var3);
    if (!$var5)
        $var1 = 0;
    else {
        nms_Block_$callClinit();
        $var1 = nms_Block_blocksList.data[$var5].$isIndirectlyPoweringTo($this, $var1, $var2, $var3, $var4);
    }
    return $var1;
}
function nms_World_isBlockGettingPowered($this, $var1, $var2, $var3) {
    return nms_World_isBlockProvidingPowerTo($this, $var1, $var2 - 1 | 0, $var3, 0) ? 1 : nms_World_isBlockProvidingPowerTo($this, $var1, $var2 + 1 | 0, $var3, 1) ? 1 : nms_World_isBlockProvidingPowerTo($this, $var1, $var2, $var3 - 1 | 0, 2) ? 1 : nms_World_isBlockProvidingPowerTo($this, $var1, $var2, $var3 + 1 | 0, 3) ? 1 : nms_World_isBlockProvidingPowerTo($this, $var1 - 1 | 0, $var2, $var3, 4) ? 1 : nms_World_isBlockProvidingPowerTo($this, $var1 + 1 | 0, $var2, $var3, 5);
}
function nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1, $var2, $var3, $var4) {
    var $var5;
    if (nms_World_isBlockOpaqueCube($this, $var1, $var2, $var3))
        return nms_World_isBlockGettingPowered($this, $var1, $var2, $var3);
    $var5 = nms_World_getBlockId($this, $var1, $var2, $var3);
    if (!$var5)
        $var1 = 0;
    else {
        nms_Block_$callClinit();
        $var1 = nms_Block_blocksList.data[$var5].$isPoweringTo($this, $var1, $var2, $var3, $var4);
    }
    return $var1;
}
function nms_World_isBlockIndirectlyGettingPowered($this, $var1, $var2, $var3) {
    return nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1, $var2 - 1 | 0, $var3, 0) ? 1 : nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1, $var2 + 1 | 0, $var3, 1) ? 1 : nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1, $var2, $var3 - 1 | 0, 2) ? 1 : nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1, $var2, $var3 + 1 | 0, 3) ? 1 : nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1 - 1 | 0, $var2, $var3, 4) ? 1 : nms_World_isBlockIndirectlyProvidingPowerTo($this, $var1
    + 1 | 0, $var2, $var3, 5);
}
function nms_World_getClosestPlayerToEntity($this, $var1, $var2) {
    return nms_World_getClosestPlayer($this, $var1.$posX, $var1.$posY, $var1.$posZ, $var2);
}
function nms_World_getClosestPlayer($this, $var1, $var3, $var5, $var7) {
    var $var9, $var11, $var12, var$8, var$9, $var13, $var14;
    $var9 = (-1.0);
    $var11 = null;
    $var12 = 0;
    var$8 = $rt_compare($var7, 0.0);
    var$9 = $var7 * $var7;
    while ($var12 < $this.$playerEntities.$size) {
        $var13 = ju_ArrayList_get($this.$playerEntities, $var12);
        $var14 = nms_Entity_getDistanceSq($var13, $var1, $var3, $var5);
        if (!(var$8 >= 0 && $var14 >= var$9) && !($var9 !== (-1.0) && $var14 >= $var9)) {
            $var9 = $var14;
            $var11 = $var13;
        }
        $var12 = $var12 + 1 | 0;
    }
    return $var11;
}
function nms_World_func_663_l($this) {
    var $var1, $var2, var$3, $$je;
    a: {
        try {
            $var1 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$field_9432_t), $rt_s(440)));
            $var2 = ji_DataInputStream__init_(ji_ByteArrayInputStream__init_(nlea_EaglerAdapterImpl2_readFile($var1)));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
                break a;
            } else {
                throw $$e;
            }
        }
        b: {
            c: {
                try {
                    try {
                        if (Long_ne(ji_DataInputStream_readLong($var2), $this.$field_1054_E))
                            break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$3 = $$je;
                        break b;

                    }
                    ji_FilterInputStream_close($var2);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_IOException) {
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return;
            }
            try {
                $rt_throw(nms_MinecraftException__init_($rt_s(458)));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;

            }
        }
        try {
            ji_FilterInputStream_close($var2);
            $rt_throw(var$3);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
    }
    var$3 = new nms_MinecraftException;
    jl_Throwable__init_(var$3, $rt_s(441));
    $rt_throw(var$3);
}
function nms_World_func_705_f($this, $var1) {
    var $var2, $var3, $var5, var$5, $var4, $var6;
    $var2 = nms_MathHelper_floor_double($var1.$posX / 16.0);
    $var3 = nms_MathHelper_floor_double($var1.$posZ / 16.0);
    $var5 = $var2 - 2 | 0;
    $var2 = $var2 + 2 | 0;
    var$5 = $var3 - 2 | 0;
    $var4 = $var3 + 2 | 0;
    while ($var5 <= $var2) {
        $var6 = var$5;
        while ($var6 <= $var4) {
            nms_World_getChunkFromChunkCoords($this, $var5, $var6);
            $var6 = $var6 + 1 | 0;
        }
        $var5 = $var5 + 1 | 0;
    }
    if (!ju_AbstractCollection_contains($this.$loadedEntityList, $var1))
        ju_ArrayList_add($this.$loadedEntityList, $var1);
}
function nms_World_func_6466_a($this, $var1, $var2, $var3, $var4) {
    return 1;
}
function nms_World_func_9425_a($this, $var1, $var2) {
    return;
}
function nms_World_func_9424_o($this) {
    var $var1, $var2, $var3, $var4, $var3_0, var$6;
    ju_AbstractCollection_removeAll($this.$loadedEntityList, $this.$field_1024_A);
    $var1 = 0;
    while ($var1 < $this.$field_1024_A.$size) {
        $var2 = ju_ArrayList_get($this.$field_1024_A, $var1);
        $var3 = $var2.$field_657_ba;
        $var4 = $var2.$field_654_bc;
        if ($var2.$field_621_aZ && nms_World_chunkExists($this, $var3, $var4))
            nms_Chunk_func_1015_b(nms_World_getChunkFromChunkCoords($this, $var3, $var4), $var2);
        $var1 = $var1 + 1 | 0;
    }
    $var1 = 0;
    while ($var1 < $this.$field_1024_A.$size) {
        nms_World_releaseEntitySkin($this, ju_ArrayList_get($this.$field_1024_A, $var1));
        $var1 = $var1 + 1 | 0;
    }
    ju_ArrayList_clear($this.$field_1024_A);
    $var3 = 0;
    while ($var3 < $this.$loadedEntityList.$size) {
        a: {
            $var2 = ju_ArrayList_get($this.$loadedEntityList, $var3);
            if ($var2.$ridingEntity !== null) {
                if (!$var2.$ridingEntity.$isDead && $var2.$ridingEntity.$riddenByEntity === $var2)
                    break a;
                $var2.$ridingEntity.$riddenByEntity = null;
                $var2.$ridingEntity = null;
            }
            if ($var2.$isDead) {
                $var3_0 = $var2.$field_657_ba;
                $var4 = $var2.$field_654_bc;
                if ($var2.$field_621_aZ && nms_World_chunkExists($this, $var3_0, $var4))
                    nms_Chunk_func_1015_b(nms_World_getChunkFromChunkCoords($this, $var3_0, $var4), $var2);
                var$6 = $this.$loadedEntityList;
                $var1 = $var3 + (-1) | 0;
                ju_ArrayList_remove(var$6, $var3);
                nms_World_releaseEntitySkin($this, $var2);
                $var3 = $var1;
            }
        }
        $var3 = $var3 + 1 | 0;
    }
}
function nms_World__clinit_() {
    nms_World_field_9429_y = 0;
}
function otr_EventQueue$Event() {
}
function jl_ThreadInterruptHandler() {
}
function jl_Thread$SleepHandler() {
    var a = this; jl_Object.call(a);
    a.$thread = null;
    a.$callback = null;
    a.$isInterrupted = 0;
    a.$scheduleId = 0;
}
function jl_Thread$SleepHandler_run($this) {
    if (!$this.$isInterrupted) {
        $this.$thread.$interruptHandler = null;
        jl_Thread_setCurrentThread($this.$thread);
        otpp_AsyncCallbackWrapper_complete($this.$callback, null);
    }
}
function jl_InterruptedException() {
    jl_Exception.call(this);
}
function jl_InterruptedException__init_0() {
    var var_0 = new jl_InterruptedException();
    jl_InterruptedException__init_(var_0);
    return var_0;
}
function jl_InterruptedException__init_($this) {
    jl_Throwable__init_0($this);
}
function nms_PlayerController() {
    var a = this; jl_Object.call(a);
    a.$mc6 = null;
    a.$field_1064_b = 0;
}
function nms_PlayerController_sendUseItem($this, $var1, $var2, $var3) {
    var $var4, $var5;
    $var4 = $var3.$stackSize;
    $var5 = nms_ItemStack_useItemRightClick($var3, $var2, $var1);
    if ($var5 === $var3 && !($var5 !== null && $var5.$stackSize != $var4))
        return 0;
    $var1.$inventory0.$mainInventory.data[$var1.$inventory0.$currentItem] = $var5;
    if (!$var5.$stackSize)
        $var1.$inventory0.$mainInventory.data[$var1.$inventory0.$currentItem] = null;
    return 1;
}
function nms_PlayerController_func_6469_d($this) {
    return 1;
}
function nms_PlayerController_func_6473_b($this, $var1) {
    return;
}
function nms_PlayerController_sendPlaceBlock($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    a: {
        $var8 = nms_World_getBlockId($var2, $var4, $var5, $var6);
        if ($var8 > 0) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[$var8].$blockActivated($var2, $var4, $var5, $var6, $var1)) {
                $var4 = 1;
                break a;
            }
        }
        if ($var3 !== null)
            $var4 = nms_ItemStack_useItem($var3, $var1, $var2, $var4, $var5, $var6, $var7);
        else
            $var4 = 0;
    }
    return $var4;
}
function nms_PlayerController_func_4087_b($this, $var1) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = new nms_EntityPlayerSP;
    var$3 = $this.$mc6;
    var$4 = $this.$mc6.$field_6320_i;
    var$5 = $var1.$worldProvider.$field_4218_e;
    nms_EntityLiving__init_(var$2, $var1);
    var$6 = new nms_InventoryPlayer;
    var$6.$mainInventory = $rt_createArray(nms_ItemStack, 37);
    var$6.$armorInventory = $rt_createArray(nms_ItemStack, 4);
    var$6.$craftingInventory = $rt_createArray(nms_ItemStack, 4);
    var$6.$currentItem = 0;
    var$6.$field_845_f = 0;
    var$6.$player = var$2;
    var$2.$inventory0 = var$6;
    var$2.$field_9371_f = 0;
    var$2.$score = 0;
    var$2.$field_9369_j = 0;
    var$2.$field_9368_k = 0;
    var$2.$field_781_a = 0;
    var$2.$fishEntity = null;
    var$2.$yOffset = 1.6200000047683716;
    nms_Entity_setLocationAndAngles(var$2, $var1.$spawnX + 0.5, $var1.$spawnY + 1 | 0, $var1.$spawnZ + 0.5, 0.0, 0.0);
    var$2.$health = 20;
    var$2.$field_9351_C = $rt_s(459);
    var$2.$field_9353_B = 180.0;
    var$2.$field_9310_bf = 20;
    var$2.$texture = $rt_s(460);
    var$2.$field_9373_b = 20;
    var$2.$field_9374_bx = 0;
    var$2.$mc7 = var$3;
    var$2.$dimension = var$5;
    if (var$4 !== null && var$4.$inventory !== null && jl_String_length(var$4.$inventory) > 0) {
        $var1 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($var1);
        var$2.$skinUrl = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var1, $rt_s(461)), var$4.$inventory), $rt_s(462)));
        $var1 = jl_System_out();
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        ji_PrintStream_println($var1, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(463)), var$2.$skinUrl)));
    }
    var$2.$field_771_i = var$4.$inventory;
    return var$2;
}
function nms_PlayerController_func_6475_a($this, $var1, $var2) {
    nms_EntityPlayerSP_func_6415_a_($var1, $var2);
}
function nms_PlayerController_func_6472_b($this, $var1, $var2) {
    nms_EntityPlayer_attackTargetEntityWithCurrentItem($var1, $var2);
}
function nms_Tessellator() {
    var a = this; jl_Object.call(a);
    a.$intBuffer = null;
    a.$floatBuffer = null;
    a.$vertexCount = 0;
    a.$textureU = 0.0;
    a.$textureV = 0.0;
    a.$color = 0;
    a.$hasColor = 0;
    a.$hasTexture = 0;
    a.$rawBufferIndex = 0;
    a.$addedVertices = 0;
    a.$isColorDisabled = 0;
    a.$drawMode = 0;
    a.$xOffset = 0.0;
    a.$yOffset0 = 0.0;
    a.$zOffset = 0.0;
    a.$isDrawing = 0;
}
var nms_Tessellator_instance = null;
function nms_Tessellator_$callClinit() {
    nms_Tessellator_$callClinit = $rt_eraseClinit(nms_Tessellator);
    nms_Tessellator__clinit_();
}
function nms_Tessellator_draw($this) {
    var var$1, var$2, var$3, var$4, $var1;
    if (!$this.$isDrawing)
        return 0;
    $this.$isDrawing = 0;
    if ($this.$vertexCount > 0) {
        if ($this.$hasTexture)
            olo_EaglerAdapterGL30_glEnableVertexAttrib(32888);
        if ($this.$hasColor)
            olo_EaglerAdapterGL30_glEnableVertexAttrib(32886);
        var$1 = $this.$drawMode;
        var$2 = $this.$vertexCount;
        var$3 = $this.$intBuffer.buffer;
        var$4 = $this.$vertexCount * 7 | 0;
        olo_EaglerAdapterGL30_glDrawArrays(var$1, 0, var$2, new Int32Array(var$3, 0, var$4));
        if ($this.$hasTexture)
            olo_EaglerAdapterGL30_glDisableVertexAttrib(32888);
        if ($this.$hasColor)
            olo_EaglerAdapterGL30_glDisableVertexAttrib(32886);
    }
    $var1 = $this.$rawBufferIndex * 4 | 0;
    nms_Tessellator_reset($this);
    return $var1;
}
function nms_Tessellator_reset($this) {
    $this.$vertexCount = 0;
    $this.$rawBufferIndex = 0;
    $this.$addedVertices = 0;
}
function nms_Tessellator_startDrawingQuads($this) {
    nms_Tessellator_startDrawing($this, 7);
}
function nms_Tessellator_startDrawing($this, $par1) {
    if ($this.$isDrawing)
        nms_Tessellator_draw($this);
    $this.$isDrawing = 1;
    nms_Tessellator_reset($this);
    $this.$drawMode = $par1;
    $this.$hasColor = 0;
    $this.$hasTexture = 0;
    $this.$isColorDisabled = 0;
}
function nms_Tessellator_setTextureUV($this, $par1, $par3) {
    $this.$hasTexture = 1;
    $this.$textureU = $par1;
    $this.$textureV = $par3;
}
function nms_Tessellator_setColorOpaque_F($this, $par1, $par2, $par3) {
    nms_Tessellator_setColorOpaque($this, $par1 * 255.0 | 0, $par2 * 255.0 | 0, $par3 * 255.0 | 0);
}
function nms_Tessellator_setColorRGBA_F($this, $par1, $par2, $par3, $par4) {
    nms_Tessellator_setColorRGBA($this, $par1 * 255.0 | 0, $par2 * 255.0 | 0, $par3 * 255.0 | 0, $par4 * 255.0 | 0);
}
function nms_Tessellator_setColorOpaque($this, $par1, $par2, $par3) {
    nms_Tessellator_setColorRGBA($this, $par1, $par2, $par3, 255);
}
function nms_Tessellator_setColorRGBA($this, $par1, $par2, $par3, $par4) {
    if (!$this.$isColorDisabled) {
        if ($par1 > 255)
            $par1 = 255;
        if ($par2 > 255)
            $par2 = 255;
        if ($par3 > 255)
            $par3 = 255;
        if ($par4 > 255)
            $par4 = 255;
        if ($par1 < 0)
            $par1 = 0;
        if ($par2 < 0)
            $par2 = 0;
        if ($par3 < 0)
            $par3 = 0;
        if ($par4 < 0)
            $par4 = 0;
        $this.$hasColor = 1;
        $this.$color = $par4 << 24 | $par3 << 16 | $par2 << 8 | $par1;
    }
}
function nms_Tessellator_addVertexWithUV($this, $par1, $par3, $par5, $par7, $par9) {
    nms_Tessellator_setTextureUV($this, $par7, $par9);
    nms_Tessellator_addVertex($this, $par1, $par3, $par5);
}
function nms_Tessellator_addVertex($this, $par1, $par3, $par5) {
    var $bufferIndex, $intBuffer0, $floatBuffer0, var$7, var$8;
    if ($this.$addedVertices > 65534)
        return;
    $this.$addedVertices = $this.$addedVertices + 1 | 0;
    $this.$vertexCount = $this.$vertexCount + 1 | 0;
    $bufferIndex = $this.$rawBufferIndex;
    $intBuffer0 = $this.$intBuffer;
    $floatBuffer0 = $this.$floatBuffer;
    var$7 = $bufferIndex + 0 | 0;
    var$8 = $par1 + $this.$xOffset;
    $floatBuffer0[var$7] = var$8;
    var$7 = $bufferIndex + 1 | 0;
    var$8 = $par3 + $this.$yOffset0;
    $floatBuffer0[var$7] = var$8;
    var$7 = $bufferIndex + 2 | 0;
    var$8 = $par5 + $this.$zOffset;
    $floatBuffer0[var$7] = var$8;
    if ($this.$hasTexture) {
        var$7 = $bufferIndex + 3 | 0;
        var$8 = $this.$textureU;
        $floatBuffer0[var$7] = var$8;
        var$7 = $bufferIndex + 4 | 0;
        var$8 = $this.$textureV;
        $floatBuffer0[var$7] = var$8;
    }
    if ($this.$hasColor) {
        var$7 = $bufferIndex + 5 | 0;
        $bufferIndex = $this.$color;
        $intBuffer0[var$7] = $bufferIndex;
    }
    $this.$rawBufferIndex = $this.$rawBufferIndex + 7 | 0;
}
function nms_Tessellator_setColorOpaque_I($this, $par1) {
    nms_Tessellator_setColorOpaque($this, $par1 >> 16 & 255, $par1 >> 8 & 255, $par1 & 255);
}
function nms_Tessellator_disableColor($this) {
    $this.$isColorDisabled = 1;
}
function nms_Tessellator_setNormal($this, $par1, $par2, $par3) {
    olo_EaglerAdapterGL30_glNormal3f($par1, $par2, $par3);
}
function nms_Tessellator_setTranslationD($this, $par1, $par3, $par5) {
    $this.$xOffset = $par1;
    $this.$yOffset0 = $par3;
    $this.$zOffset = $par5;
}
function nms_Tessellator_setTranslationF($this, $par1, $par2, $par3) {
    $this.$xOffset = $this.$xOffset + $par1;
    $this.$yOffset0 = $this.$yOffset0 + $par2;
    $this.$zOffset = $this.$zOffset + $par3;
}
function nms_Tessellator__clinit_() {
    var var$1, var$2;
    var$1 = new nms_Tessellator;
    nms_Tessellator_$callClinit();
    var$1.$vertexCount = 0;
    var$1.$hasColor = 0;
    var$1.$hasTexture = 0;
    var$1.$rawBufferIndex = 0;
    var$1.$addedVertices = 0;
    var$1.$isColorDisabled = 0;
    var$1.$isDrawing = 0;
    var$2 = new ArrayBuffer(2097152);
    var$1.$intBuffer = new Int32Array(var$2);
    var$1.$floatBuffer = new Float32Array(var$2);
    nms_Tessellator_instance = var$1;
}
function nms_ScaledResolution() {
    var a = this; jl_Object.call(a);
    a.$scaledWidth = 0;
    a.$scaledHeight = 0;
    a.$scaleFactor = 0;
}
function nms_ScaledResolution__init_(var_0, var_1) {
    var var_2 = new nms_ScaledResolution();
    nms_ScaledResolution__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ScaledResolution__init_0($this, $var1, $var2) {
    $this.$scaledWidth = $var1;
    $this.$scaledHeight = $var2;
    $this.$scaleFactor = 1;
    while (($this.$scaledWidth / ($this.$scaleFactor + 1 | 0) | 0) >= 320 && ($this.$scaledHeight / ($this.$scaleFactor + 1 | 0) | 0) >= 240) {
        $this.$scaleFactor = $this.$scaleFactor + 1 | 0;
    }
    $this.$scaledWidth = $this.$scaledWidth / $this.$scaleFactor | 0;
    $this.$scaledHeight = $this.$scaledHeight / $this.$scaleFactor | 0;
}
function nms_ScaledResolution_getScaledWidth($this) {
    return $this.$scaledWidth;
}
function nms_ScaledResolution_getScaledHeight($this) {
    return $this.$scaledHeight;
}
function jl_ConsoleOutputStreamStderr() {
    ji_OutputStream.call(this);
}
function jl_ConsoleOutputStreamStderr__init_0() {
    var var_0 = new jl_ConsoleOutputStreamStderr();
    jl_ConsoleOutputStreamStderr__init_(var_0);
    return var_0;
}
function jl_ConsoleOutputStreamStderr__init_($this) {
    return;
}
function jl_ConsoleOutputStreamStderr_write($this, $b) {
    $rt_putStderr($b);
}
function jt_SimpleDatePatternParser() {
    var a = this; jl_Object.call(a);
    a.$symbols = null;
    a.$locale0 = null;
    a.$elements0 = null;
    a.$index0 = 0;
    a.$pattern1 = null;
}
function jt_SimpleDatePatternParser_getElements($this) {
    return $this.$elements0;
}
function jt_SimpleDatePatternParser_parsePattern($this, $pattern) {
    var $c, $sb, var$4, $rep;
    ju_ArrayList_clear($this.$elements0);
    $this.$pattern1 = $pattern;
    $this.$index0 = 0;
    while ($this.$index0 < jl_String_length($pattern)) {
        a: {
            b: {
                c: {
                    $c = jl_String_charAt($pattern, $this.$index0);
                    switch ($c) {
                        case 39:
                            $this.$index0 = $this.$index0 + 1 | 0;
                            $sb = new jl_StringBuilder;
                            jl_AbstractStringBuilder__init_($sb);
                            while ($this.$index0 < jl_String_length($this.$pattern1)) {
                                var$4 = $this.$pattern1;
                                $rep = $this.$index0;
                                $this.$index0 = $rep + 1 | 0;
                                $c = jl_String_charAt(var$4, $rep);
                                if ($c != 39)
                                    jl_AbstractStringBuilder_append($sb, $c);
                                else {
                                    if ($this.$index0 >= jl_String_length($this.$pattern1))
                                        break;
                                    if (jl_String_charAt($this.$pattern1, $this.$index0) != 39)
                                        break;
                                    jl_AbstractStringBuilder_append($sb, 39);
                                    $this.$index0 = $this.$index0 + 1 | 0;
                                }
                            }
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$ConstantText__init_(jl_AbstractStringBuilder_toString($sb)));
                            break a;
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 65:
                        case 66:
                        case 67:
                        case 73:
                        case 74:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 98:
                        case 101:
                        case 102:
                        case 103:
                        case 105:
                        case 106:
                        case 108:
                        case 110:
                        case 111:
                        case 112:
                        case 113:
                        case 114:
                        case 116:
                        case 118:
                        case 120:
                            break b;
                        case 68:
                            break;
                        case 69:
                        case 99:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$WeekdayText__init_($this.$symbols, $rep > 3 ? 0 : 1));
                            break a;
                        case 70:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(8, $rep));
                            break a;
                        case 71:
                            jt_SimpleDatePatternParser_parseRepetitions($this);
                            $sb = $this.$elements0;
                            var$4 = new jt_DateFormatElement$EraText;
                            var$4.$eras0 = jt_DateFormatSymbols_getEras($this.$symbols);
                            ju_ArrayList_add($sb, var$4);
                            break a;
                        case 72:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(11, $rep));
                            break a;
                        case 75:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(10, $rep));
                            break a;
                        case 76:
                        case 77:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            if ($rep <= 2) {
                                ju_ArrayList_add($this.$elements0, jt_DateFormatElement$NumericMonth__init_($rep));
                                break a;
                            }
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$MonthText__init_($this.$symbols, $rep != 3 ? 0 : 1));
                            break a;
                        case 83:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(14, $rep));
                            break a;
                        case 87:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(4, $rep));
                            break a;
                        case 88:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            if ($rep > 3) {
                                $pattern = new jl_IllegalArgumentException;
                                $sb = new jl_StringBuilder;
                                jl_AbstractStringBuilder__init_($sb);
                                jl_IllegalArgumentException__init_2($pattern, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append($sb, $rt_s(464)), $this.$index0)));
                                $rt_throw($pattern);
                            }
                            $sb = $this.$elements0;
                            var$4 = new jt_DateFormatElement$Iso8601Timezone;
                            var$4.$size4 = $rep;
                            ju_ArrayList_add($sb, var$4);
                            break a;
                        case 89:
                        case 121:
                            break c;
                        case 90:
                            jt_SimpleDatePatternParser_parseRepetitions($this);
                            $sb = $this.$elements0;
                            var$4 = new jt_DateFormatElement$Rfc822Timezone;
                            jt_DateFormatElement$BaseTimezone__init_(var$4, $this.$locale0);
                            ju_ArrayList_add($sb, var$4);
                            break a;
                        case 97:
                            jt_SimpleDatePatternParser_parseRepetitions($this);
                            $sb = $this.$elements0;
                            var$4 = new jt_DateFormatElement$AmPmText;
                            var$4.$ampms0 = jt_DateFormatSymbols_getAmPmStrings($this.$symbols);
                            ju_ArrayList_add($sb, var$4);
                            break a;
                        case 100:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(5, $rep));
                            break a;
                        case 104:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$NumericHour__init_(10, $rep, 12));
                            break a;
                        case 107:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$NumericHour__init_(11, $rep, 24));
                            break a;
                        case 109:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(12, $rep));
                            break a;
                        case 115:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(13, $rep));
                            break a;
                        case 117:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            $sb = $this.$elements0;
                            var$4 = new jt_DateFormatElement$NumericWeekday;
                            jt_DateFormatElement$Numeric__init_0(var$4, 7, $rep);
                            ju_ArrayList_add($sb, var$4);
                            break a;
                        case 119:
                            $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                            ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(3, $rep));
                            break a;
                        case 122:
                            jt_SimpleDatePatternParser_parseRepetitions($this);
                            $sb = $this.$elements0;
                            var$4 = new jt_DateFormatElement$GeneralTimezone;
                            jt_DateFormatElement$BaseTimezone__init_(var$4, $this.$locale0);
                            ju_ArrayList_add($sb, var$4);
                            break a;
                        default:
                            break b;
                    }
                    $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                    ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(6, $rep));
                    break a;
                }
                $rep = jt_SimpleDatePatternParser_parseRepetitions($this);
                if ($rep != 2) {
                    ju_ArrayList_add($this.$elements0, jt_DateFormatElement$Numeric__init_(1, $rep));
                    break a;
                }
                $sb = $this.$elements0;
                var$4 = new jt_DateFormatElement$Year;
                var$4.$field = 1;
                ju_ArrayList_add($sb, var$4);
                break a;
            }
            if (jt_SimpleDatePatternParser_isControl($this, $c))
                jt_SimpleDatePatternParser_parseRepetitions($this);
            else {
                $sb = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($sb);
                while ($this.$index0 < jl_String_length($pattern) && !jt_SimpleDatePatternParser_isControl($this, jl_String_charAt($pattern, $this.$index0))) {
                    $rep = $this.$index0;
                    $this.$index0 = $rep + 1 | 0;
                    jl_AbstractStringBuilder_append($sb, jl_String_charAt($pattern, $rep));
                }
                ju_ArrayList_add($this.$elements0, jt_DateFormatElement$ConstantText__init_(jl_AbstractStringBuilder_toString($sb)));
            }
        }
    }
}
function jt_SimpleDatePatternParser_isControl($this, $c) {
    a: {
        b: {
            if ($c != 39 && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            $c = 1;
            break a;
        }
        $c = 0;
    }
    return $c;
}
function jt_SimpleDatePatternParser_parseRepetitions($this) {
    var $count, var$2, var$3, $orig;
    $count = 1;
    var$2 = $this.$pattern1;
    var$3 = $this.$index0;
    $this.$index0 = var$3 + 1 | 0;
    $orig = jl_String_charAt(var$2, var$3);
    while ($this.$index0 < jl_String_length($this.$pattern1) && jl_String_charAt($this.$pattern1, $this.$index0) == $orig) {
        $this.$index0 = $this.$index0 + 1 | 0;
        $count = $count + 1 | 0;
    }
    return $count;
}
function jt_DateFormatElement() {
    jl_Object.call(this);
}
function jl_NegativeArraySizeException() {
    jl_RuntimeException.call(this);
}
function jl_NegativeArraySizeException__init_0() {
    var var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_(var_0);
    return var_0;
}
function jl_NegativeArraySizeException__init_($this) {
    jl_Throwable__init_0($this);
}
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name5 = null;
}
var jnc_CodingErrorAction_IGNORE = null;
var jnc_CodingErrorAction_REPLACE = null;
var jnc_CodingErrorAction_REPORT = null;
function jnc_CodingErrorAction__init_(var_0) {
    var var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
}
function jnc_CodingErrorAction__init_0($this, $name) {
    $this.$name5 = $name;
}
function jnc_CodingErrorAction__clinit_() {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(465));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(466));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(467));
}
function nPgv_Matrix() {
    jl_Object.call(this);
}
function nPgv_Matrix4f() {
    var a = this; nPgv_Matrix.call(a);
    a.$m00 = 0.0;
    a.$m01 = 0.0;
    a.$m02 = 0.0;
    a.$m03 = 0.0;
    a.$m10 = 0.0;
    a.$m11 = 0.0;
    a.$m12 = 0.0;
    a.$m13 = 0.0;
    a.$m20 = 0.0;
    a.$m21 = 0.0;
    a.$m22 = 0.0;
    a.$m23 = 0.0;
    a.$m30 = 0.0;
    a.$m31 = 0.0;
    a.$m32 = 0.0;
    a.$m33 = 0.0;
}
function nPgv_Matrix4f__init_0() {
    var var_0 = new nPgv_Matrix4f();
    nPgv_Matrix4f__init_(var_0);
    return var_0;
}
function nPgv_Matrix4f__init_($this) {
    nPgv_Matrix4f_setIdentity($this);
}
function nPgv_Matrix4f_setIdentity($this) {
    $this.$m00 = 1.0;
    $this.$m01 = 0.0;
    $this.$m02 = 0.0;
    $this.$m03 = 0.0;
    $this.$m10 = 0.0;
    $this.$m11 = 1.0;
    $this.$m12 = 0.0;
    $this.$m13 = 0.0;
    $this.$m20 = 0.0;
    $this.$m21 = 0.0;
    $this.$m22 = 1.0;
    $this.$m23 = 0.0;
    $this.$m30 = 0.0;
    $this.$m31 = 0.0;
    $this.$m32 = 0.0;
    $this.$m33 = 1.0;
    return $this;
}
function nPgv_Matrix4f_setZero($this) {
    $this.$m00 = 0.0;
    $this.$m01 = 0.0;
    $this.$m02 = 0.0;
    $this.$m03 = 0.0;
    $this.$m10 = 0.0;
    $this.$m11 = 0.0;
    $this.$m12 = 0.0;
    $this.$m13 = 0.0;
    $this.$m20 = 0.0;
    $this.$m21 = 0.0;
    $this.$m22 = 0.0;
    $this.$m23 = 0.0;
    $this.$m30 = 0.0;
    $this.$m31 = 0.0;
    $this.$m32 = 0.0;
    $this.$m33 = 0.0;
    return $this;
}
function nPgv_Matrix4f_load($this, $src) {
    $this.$m00 = $src.$m00;
    $this.$m01 = $src.$m01;
    $this.$m02 = $src.$m02;
    $this.$m03 = $src.$m03;
    $this.$m10 = $src.$m10;
    $this.$m11 = $src.$m11;
    $this.$m12 = $src.$m12;
    $this.$m13 = $src.$m13;
    $this.$m20 = $src.$m20;
    $this.$m21 = $src.$m21;
    $this.$m22 = $src.$m22;
    $this.$m23 = $src.$m23;
    $this.$m30 = $src.$m30;
    $this.$m31 = $src.$m31;
    $this.$m32 = $src.$m32;
    $this.$m33 = $src.$m33;
    return $this;
}
function nPgv_Matrix4f_store($this, $buf) {
    jn_FloatBufferImpl_put($buf, $this.$m00);
    jn_FloatBufferImpl_put($buf, $this.$m01);
    jn_FloatBufferImpl_put($buf, $this.$m02);
    jn_FloatBufferImpl_put($buf, $this.$m03);
    jn_FloatBufferImpl_put($buf, $this.$m10);
    jn_FloatBufferImpl_put($buf, $this.$m11);
    jn_FloatBufferImpl_put($buf, $this.$m12);
    jn_FloatBufferImpl_put($buf, $this.$m13);
    jn_FloatBufferImpl_put($buf, $this.$m20);
    jn_FloatBufferImpl_put($buf, $this.$m21);
    jn_FloatBufferImpl_put($buf, $this.$m22);
    jn_FloatBufferImpl_put($buf, $this.$m23);
    jn_FloatBufferImpl_put($buf, $this.$m30);
    jn_FloatBufferImpl_put($buf, $this.$m31);
    jn_FloatBufferImpl_put($buf, $this.$m32);
    jn_FloatBufferImpl_put($buf, $this.$m33);
    return $this;
}
function nPgv_Matrix4f_store0($this, $buf) {
    $buf = $buf.data;
    $buf[0] = $this.$m00;
    $buf[1] = $this.$m01;
    $buf[2] = $this.$m02;
    $buf[3] = $this.$m03;
    $buf[4] = $this.$m10;
    $buf[5] = $this.$m11;
    $buf[6] = $this.$m12;
    $buf[7] = $this.$m13;
    $buf[8] = $this.$m20;
    $buf[9] = $this.$m21;
    $buf[10] = $this.$m22;
    $buf[11] = $this.$m23;
    $buf[12] = $this.$m30;
    $buf[13] = $this.$m31;
    $buf[14] = $this.$m32;
    $buf[15] = $this.$m33;
    return $this;
}
function nPgv_Matrix4f_translate0($this, $vec) {
    return nPgv_Matrix4f_translate($this, $vec, $this);
}
function nPgv_Matrix4f_scale($this, $vec) {
    $this.$m00 = $this.$m00 * $vec.$x0;
    $this.$m01 = $this.$m01 * $vec.$x0;
    $this.$m02 = $this.$m02 * $vec.$x0;
    $this.$m03 = $this.$m03 * $vec.$x0;
    $this.$m10 = $this.$m10 * $vec.$y0;
    $this.$m11 = $this.$m11 * $vec.$y0;
    $this.$m12 = $this.$m12 * $vec.$y0;
    $this.$m13 = $this.$m13 * $vec.$y0;
    $this.$m20 = $this.$m20 * $vec.$z3;
    $this.$m21 = $this.$m21 * $vec.$z3;
    $this.$m22 = $this.$m22 * $vec.$z3;
    $this.$m23 = $this.$m23 * $vec.$z3;
    return $this;
}
function nPgv_Matrix4f_rotate0($this, $angle, $axis) {
    return nPgv_Matrix4f_rotate($this, $angle, $axis, $this);
}
function nPgv_Matrix4f_rotate($this, $angle, $axis, $dest) {
    return nPgv_Matrix4f_rotate1($angle, $axis, $this, $dest);
}
function nPgv_Matrix4f_rotate1($angle, $axis, $src, $dest) {
    var var$5, $c, $s, $oneminusc, $xy, $yz, $xz, $xs, $ys, $zs, $f00, $f01, $t13, $f02, $f10, $f11, $f12, $f20, $f21, $f22, $t00, $t01, $t02, $t03, $t10, $t11, $t12;
    if ($dest === null)
        $dest = nPgv_Matrix4f__init_0();
    var$5 = $angle;
    $c = jl_Math_cos(var$5);
    $s = jl_Math_sin(var$5);
    $oneminusc = 1.0 - $c;
    $xy = $axis.$x0 * $axis.$y0;
    $yz = $axis.$y0 * $axis.$z3;
    $xz = $axis.$x0 * $axis.$z3;
    $xs = $axis.$x0 * $s;
    $ys = $axis.$y0 * $s;
    $zs = $axis.$z3 * $s;
    $f00 = $axis.$x0 * $axis.$x0 * $oneminusc + $c;
    $angle = $xy * $oneminusc;
    $f01 = $angle + $zs;
    $t13 = $xz * $oneminusc;
    $f02 = $t13 - $ys;
    $f10 = $angle - $zs;
    $f11 = $axis.$y0 * $axis.$y0 * $oneminusc + $c;
    $angle = $yz * $oneminusc;
    $f12 = $angle + $xs;
    $f20 = $t13 + $ys;
    $f21 = $angle - $xs;
    $f22 = $axis.$z3 * $axis.$z3 * $oneminusc + $c;
    $t00 = $src.$m00 * $f00 + $src.$m10 * $f01 + $src.$m20 * $f02;
    $t01 = $src.$m01 * $f00 + $src.$m11 * $f01 + $src.$m21 * $f02;
    $t02 = $src.$m02 * $f00 + $src.$m12 * $f01 + $src.$m22 * $f02;
    $t03 = $src.$m03 * $f00 + $src.$m13 * $f01 + $src.$m23 * $f02;
    $t10 = $src.$m00 * $f10 + $src.$m10 * $f11 + $src.$m20 * $f12;
    $t11 = $src.$m01 * $f10 + $src.$m11 * $f11 + $src.$m21 * $f12;
    $t12 = $src.$m02 * $f10 + $src.$m12 * $f11 + $src.$m22 * $f12;
    $t13 = $src.$m03 * $f10 + $src.$m13 * $f11 + $src.$m23 * $f12;
    $dest.$m20 = $src.$m00 * $f20 + $src.$m10 * $f21 + $src.$m20 * $f22;
    $dest.$m21 = $src.$m01 * $f20 + $src.$m11 * $f21 + $src.$m21 * $f22;
    $dest.$m22 = $src.$m02 * $f20 + $src.$m12 * $f21 + $src.$m22 * $f22;
    $dest.$m23 = $src.$m03 * $f20 + $src.$m13 * $f21 + $src.$m23 * $f22;
    $dest.$m00 = $t00;
    $dest.$m01 = $t01;
    $dest.$m02 = $t02;
    $dest.$m03 = $t03;
    $dest.$m10 = $t10;
    $dest.$m11 = $t11;
    $dest.$m12 = $t12;
    $dest.$m13 = $t13;
    return $dest;
}
function nPgv_Matrix4f_translate($this, $vec, $dest) {
    if ($dest === null)
        $dest = nPgv_Matrix4f__init_0();
    $dest.$m30 = $dest.$m30 + $this.$m00 * $vec.$x0 + $this.$m10 * $vec.$y0 + $this.$m20 * $vec.$z3;
    $dest.$m31 = $dest.$m31 + $this.$m01 * $vec.$x0 + $this.$m11 * $vec.$y0 + $this.$m21 * $vec.$z3;
    $dest.$m32 = $dest.$m32 + $this.$m02 * $vec.$x0 + $this.$m12 * $vec.$y0 + $this.$m22 * $vec.$z3;
    $dest.$m33 = $dest.$m33 + $this.$m03 * $vec.$x0 + $this.$m13 * $vec.$y0 + $this.$m23 * $vec.$z3;
    return $dest;
}
function nPgv_Matrix4f_equals($this, $m) {
    var var$2;
    a: {
        if ($m instanceof nPgv_Matrix4f) {
            b: {
                c: {
                    $m = $m;
                    if ($this.$m00 !== $m.$m00)
                        break c;
                    if ($this.$m01 !== $m.$m01)
                        break c;
                    if ($this.$m02 !== $m.$m02)
                        break c;
                    if ($this.$m03 !== $m.$m03)
                        break c;
                    if ($this.$m10 !== $m.$m10)
                        break c;
                    if ($this.$m11 !== $m.$m11)
                        break c;
                    if ($this.$m12 !== $m.$m12)
                        break c;
                    if ($this.$m13 !== $m.$m13)
                        break c;
                    if ($this.$m20 !== $m.$m20)
                        break c;
                    if ($this.$m21 !== $m.$m21)
                        break c;
                    if ($this.$m22 !== $m.$m22)
                        break c;
                    if ($this.$m23 !== $m.$m23)
                        break c;
                    if ($this.$m30 !== $m.$m30)
                        break c;
                    if ($this.$m31 !== $m.$m31)
                        break c;
                    if ($this.$m32 !== $m.$m32)
                        break c;
                    if ($this.$m33 === $m.$m33) {
                        var$2 = 1;
                        break b;
                    }
                }
                var$2 = 0;
            }
            if (var$2) {
                var$2 = 1;
                break a;
            }
        }
        var$2 = 0;
    }
    return var$2;
}
function jl_Thread$switchContext$lambda$_18_0() {
    var a = this; jl_Object.call(a);
    a.$_02 = null;
    a.$_10 = null;
}
function jl_Thread$switchContext$lambda$_18_0_run(var$0) {
    var var$1, var$2;
    var$1 = var$0.$_02;
    var$2 = var$0.$_10;
    jl_Thread_setCurrentThread(var$1);
    otpp_AsyncCallbackWrapper_complete(var$2, null);
}
function jn_CharBufferImpl() {
    jn_CharBuffer.call(this);
}
function jn_CharBufferImpl_compact($this) {
    var var$1, $sz, $src, $i, var$5;
    if (jn_CharBufferImpl_isReadOnly($this)) {
        var$1 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position > 0) {
            $src = $this.$position;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$5 = $src + 1 | 0;
                jn_CharBufferOverArray_putChar($this, $i, jn_CharBufferOverArray_getChar($this, $src));
                $i = $i + 1 | 0;
                $src = var$5;
            }
        }
    }
    $this.$position = $sz;
    $this.$limit = $this.$capacity;
    $this.$mark0 = (-1);
    return $this;
}
function jn_CharBufferImpl_isReadOnly($this) {
    return $this.$readOnly1;
}
function jn_CharBufferOverArray() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$start4 = 0;
    a.$array3 = null;
}
function jn_CharBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_Buffer__init_($this, $capacity);
    $this.$position = $position;
    $this.$limit = $limit;
    $this.$start4 = $start;
    $this.$readOnly1 = $readOnly;
    $this.$array3 = $array;
}
function jn_CharBufferOverArray_getChar($this, $index) {
    return $this.$array3.data[$index + $this.$start4 | 0];
}
function jn_CharBufferOverArray_putChar($this, $index, $value) {
    $this.$array3.data[$index + $this.$start4 | 0] = $value;
}
function jn_CharBufferOverArray_isArrayPresent($this) {
    return 1;
}
function jn_CharBufferOverArray_getArray($this) {
    return $this.$array3;
}
function jn_CharBufferOverArray_readOnly($this) {
    return $this.$readOnly1;
}
function jnc_CharsetEncoder() {
    var a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$replacement0 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$status = 0;
}
function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
    var var$2;
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$2, $rt_s(468));
    $rt_throw(var$2);
}
function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {
    return;
}
function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
    var var$2;
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$2, $rt_s(468));
    $rt_throw(var$2);
}
function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {
    return;
}
function jnc_CharsetEncoder_encode($this, $in, $out, $endOfInput) {
    var $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status != 2)
                break a;
        }
        $in = new jl_IllegalStateException;
        jl_Throwable__init_0($in);
        $rt_throw($in);
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = jnci_BufferedEncoder_encodeLoop($this, $in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_($e));
            } else {
                throw $$e;
            }
        }
        if (jnc_CoderResult_isUnderflow($result)) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if (jnc_CoderResult_isOverflow($result))
            break;
        $action = !jnc_CoderResult_isUnmappable($result) ? $this.$malformedAction0 : $this.$unmappableAction0;
        b: {
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement0.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put0($out, $this.$replacement0);
        }
        jn_Buffer_position0($in, $in.$position + jnc_CoderResult_length($result) | 0);
    }
    return $result;
}
function jnc_CharsetEncoder_encode0($this, $in) {
    var $output, $result;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    jnc_CharsetEncoder_reset($this);
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (jnc_CoderResult_isError($in))
        jnc_CoderResult_throwException($in);
    while (true) {
        $in = jnc_CharsetEncoder_flush($this, $output);
        if (jnc_CoderResult_isUnderflow($in))
            break;
        if (!jnc_CoderResult_isOverflow($in))
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_Buffer_flip($output);
    return $output;
}
function jnc_CharsetEncoder_allocateMore($this, $buffer) {
    var $array, $result;
    $array = $buffer.$array0;
    $result = jn_ByteBuffer_wrap0(ju_Arrays_copyOf1($array, $array.data.length * 2 | 0));
    jn_Buffer_position0($result, $buffer.$position);
    return $result;
}
function jnc_CharsetEncoder_flush($this, $out) {
    var $result;
    if ($this.$status != 2 && $this.$status != 4) {
        $out = new jl_IllegalStateException;
        jl_Throwable__init_0($out);
        $rt_throw($out);
    }
    $result = jnc_CoderResult_UNDERFLOW;
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status = 3;
    return $result;
}
function jnc_CharsetEncoder_implFlush($this, $out) {
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetEncoder_reset($this) {
    $this.$status = 0;
    return $this;
}
function jnc_CharsetEncoder_implReset($this) {
    return;
}
function jnc_CoderResult() {
    var a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length1 = 0;
}
var jnc_CoderResult_UNDERFLOW = null;
var jnc_CoderResult_OVERFLOW = null;
function jnc_CoderResult__init_(var_0, var_1) {
    var var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_CoderResult__init_0($this, $kind, $length) {
    $this.$kind = $kind;
    $this.$length1 = $length;
}
function jnc_CoderResult_isUnderflow($this) {
    return $this.$kind ? 0 : 1;
}
function jnc_CoderResult_isOverflow($this) {
    return $this.$kind != 1 ? 0 : 1;
}
function jnc_CoderResult_isError($this) {
    return !jnc_CoderResult_isMalformed($this) && !jnc_CoderResult_isUnmappable($this) ? 0 : 1;
}
function jnc_CoderResult_isMalformed($this) {
    return $this.$kind != 2 ? 0 : 1;
}
function jnc_CoderResult_isUnmappable($this) {
    return $this.$kind != 3 ? 0 : 1;
}
function jnc_CoderResult_length($this) {
    var var$1;
    if (jnc_CoderResult_isError($this))
        return $this.$length1;
    var$1 = new jl_UnsupportedOperationException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function jnc_CoderResult_malformedForLength($length) {
    return jnc_CoderResult__init_(2, $length);
}
function jnc_CoderResult_throwException($this) {
    var var$1, var$2;
    switch ($this.$kind) {
        case 0:
            var$1 = new jnc_BufferUnderflowException;
            jl_Throwable__init_0(var$1);
            $rt_throw(var$1);
        case 1:
            var$1 = new jnc_BufferOverflowException;
            jl_Throwable__init_0(var$1);
            $rt_throw(var$1);
        case 2:
            var$1 = new jnc_MalformedInputException;
            var$2 = $this.$length1;
            jl_Throwable__init_0(var$1);
            var$1.$length2 = var$2;
            $rt_throw(var$1);
        case 3:
            var$1 = new jnc_UnmappableCharacterException;
            var$2 = $this.$length1;
            jl_Throwable__init_0(var$1);
            var$1.$length3 = var$2;
            $rt_throw(var$1);
        default:
    }
}
function jnc_CoderResult__clinit_() {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
}
function nPg_GLObjectMap() {
    var a = this; jl_Object.call(a);
    a.$values1 = null;
    a.$size5 = 0;
    a.$insertIndex = 0;
    a.$allocatedObjects = 0;
}
function nPg_GLObjectMap__init_(var_0) {
    var var_1 = new nPg_GLObjectMap();
    nPg_GLObjectMap__init_0(var_1, var_0);
    return var_1;
}
function nPg_GLObjectMap__init_0($this, $initialSize) {
    $this.$values1 = $rt_createArray(jl_Object, $initialSize);
    $this.$size5 = $initialSize;
    $this.$insertIndex = 0;
    $this.$allocatedObjects = 0;
}
function nPg_GLObjectMap_register($this, $obj) {
    var $start, var$3;
    $start = $this.$insertIndex;
    while (true) {
        $this.$insertIndex = $this.$insertIndex + 1 | 0;
        if ($this.$insertIndex >= $this.$size5)
            $this.$insertIndex = 0;
        if ($this.$insertIndex == $start) {
            $start = $this.$size5;
            $this.$size5 = $this.$size5 + ($this.$size5 / 2 | 0) | 0;
            var$3 = $this.$values1;
            $this.$values1 = $rt_createArray(jl_Object, $this.$size5);
            jl_System_arraycopy(var$3, 0, $this.$values1, 0, $start);
            return nPg_GLObjectMap_register($this, $obj);
        }
        if ($this.$values1.data[$this.$insertIndex] !== null)
            continue;
        else
            break;
    }
    $this.$values1.data[$this.$insertIndex] = $obj;
    $this.$allocatedObjects = $this.$allocatedObjects + 1 | 0;
    return $this.$insertIndex;
}
function nPg_GLObjectMap_get($this, $obj) {
    if ($obj < $this.$size5 && $obj >= 0)
        return $this.$values1.data[$obj];
    return null;
}
function nPgv_ReadableVector() {
}
function nPgv_Vector() {
    jl_Object.call(this);
}
function nPgv_ReadableVector2f() {
}
function nPgv_ReadableVector3f() {
}
function nPgv_WritableVector2f() {
}
function nPgv_WritableVector3f() {
}
function nPgv_Vector3f() {
    var a = this; nPgv_Vector.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
    a.$z3 = 0.0;
}
function nPgv_Vector3f__init_0() {
    var var_0 = new nPgv_Vector3f();
    nPgv_Vector3f__init_(var_0);
    return var_0;
}
function nPgv_Vector3f__init_($this) {
    return;
}
function nPgv_Vector3f_set($this, $x, $y, $z) {
    $this.$x0 = $x;
    $this.$y0 = $y;
    $this.$z3 = $z;
}
function nPgv_ReadableVector4f() {
}
function nPgv_WritableVector4f() {
}
function nPgv_Vector4f() {
    var a = this; nPgv_Vector.call(a);
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$z4 = 0.0;
    a.$w0 = 0.0;
}
function nPgv_Vector4f__init_0() {
    var var_0 = new nPgv_Vector4f();
    nPgv_Vector4f__init_(var_0);
    return var_0;
}
function nPgv_Vector4f__init_($this) {
    return;
}
function nPgv_Vector4f_set($this, $src) {
    $this.$x1 = $src.$x1;
    $this.$y1 = $src.$y1;
    $this.$z4 = $src.$z4;
    $this.$w0 = $src.$w0;
    return $this;
}
function nPgv_Vector4f_getX($this) {
    return $this.$x1;
}
function nPgv_Vector4f_getY($this) {
    return $this.$y1;
}
function nPgv_Vector4f_getZ($this) {
    return $this.$z4;
}
function nPgv_Vector4f_getW($this) {
    return $this.$w0;
}
function nPgv_Vector4f_equals($this, $obj) {
    var $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if ($this.$x1 === $other.$x1 && $this.$y1 === $other.$y1 && $this.$z4 === $other.$z4 && $this.$w0 === $other.$w0)
        return 1;
    return 0;
}
function jl_Float() {
    jl_Number.call(this);
}
var jl_Float_NaN = 0.0;
var jl_Float_TYPE = null;
function jl_Float_parseFloat($string) {
    var $start, $end, $negative, $c, $mantissa, $exp, $hasOneDigit, var$9, $negativeExp, $numExp;
    if (jl_String_isEmpty($string)) {
        $string = new jl_NumberFormatException;
        jl_Throwable__init_0($string);
        $rt_throw($string);
    }
    $start = 0;
    $end = jl_String_length($string);
    while (true) {
        if (jl_String_charAt($string, $start) > 32) {
            while (jl_String_charAt($string, $end - 1 | 0) <= 32) {
                $end = $end + (-1) | 0;
            }
            $negative = 0;
            if (jl_String_charAt($string, $start) == 45) {
                $start = $start + 1 | 0;
                $negative = 1;
            } else if (jl_String_charAt($string, $start) == 43)
                $start = $start + 1 | 0;
            if ($start == $end) {
                $string = new jl_NumberFormatException;
                jl_Throwable__init_0($string);
                $rt_throw($string);
            }
            a: {
                $c = jl_String_charAt($string, $start);
                $mantissa = 0;
                $exp = 0;
                $hasOneDigit = 0;
                if ($c != 46) {
                    $hasOneDigit = 1;
                    if ($c >= 48 && $c <= 57) {
                        b: {
                            while ($start < $end) {
                                if (jl_String_charAt($string, $start) != 48)
                                    break b;
                                $start = $start + 1 | 0;
                            }
                        }
                        while ($start < $end) {
                            var$9 = jl_String_charAt($string, $start);
                            if (var$9 < 48)
                                break a;
                            if (var$9 > 57)
                                break a;
                            if ($mantissa >= 1.0E8)
                                $exp = $exp + 1 | 0;
                            else
                                $mantissa = ($mantissa * 10 | 0) + (var$9 - 48 | 0) | 0;
                            $start = $start + 1 | 0;
                        }
                    } else {
                        $string = new jl_NumberFormatException;
                        jl_Throwable__init_0($string);
                        $rt_throw($string);
                    }
                }
            }
            if ($start < $end && jl_String_charAt($string, $start) == 46) {
                $start = $start + 1 | 0;
                c: {
                    while (true) {
                        if ($start >= $end)
                            break c;
                        $negativeExp = jl_String_charAt($string, $start);
                        if ($negativeExp < 48)
                            break c;
                        if ($negativeExp > 57)
                            break;
                        if ($mantissa < 1.0E38) {
                            $mantissa = ($mantissa * 10 | 0) + ($negativeExp - 48 | 0) | 0;
                            $exp = $exp + (-1) | 0;
                        }
                        $start = $start + 1 | 0;
                        $hasOneDigit = 1;
                    }
                }
                if (!$hasOneDigit) {
                    $string = new jl_NumberFormatException;
                    jl_Throwable__init_0($string);
                    $rt_throw($string);
                }
            }
            if ($start < $end) {
                var$9 = jl_String_charAt($string, $start);
                if (var$9 != 101 && var$9 != 69) {
                    $string = new jl_NumberFormatException;
                    jl_Throwable__init_0($string);
                    $rt_throw($string);
                }
                var$9 = $start + 1 | 0;
                $negativeExp = 0;
                if (var$9 == $end) {
                    $string = new jl_NumberFormatException;
                    jl_Throwable__init_0($string);
                    $rt_throw($string);
                }
                if (jl_String_charAt($string, var$9) == 45) {
                    var$9 = var$9 + 1 | 0;
                    $negativeExp = 1;
                } else if (jl_String_charAt($string, var$9) == 43)
                    var$9 = var$9 + 1 | 0;
                $numExp = 0;
                $start = 0;
                d: {
                    while (true) {
                        if (var$9 >= $end)
                            break d;
                        $c = jl_String_charAt($string, var$9);
                        if ($c < 48)
                            break d;
                        if ($c > 57)
                            break;
                        $numExp = (10 * $numExp | 0) + ($c - 48 | 0) | 0;
                        $start = 1;
                        var$9 = var$9 + 1 | 0;
                    }
                }
                if (!$start) {
                    $string = new jl_NumberFormatException;
                    jl_Throwable__init_0($string);
                    $rt_throw($string);
                }
                if ($negativeExp)
                    $numExp =  -$numExp;
                $exp = $exp + $numExp | 0;
            }
            e: {
                var$9 = $rt_compare($exp, 38);
                if (var$9 <= 0) {
                    if (var$9)
                        break e;
                    if ($mantissa <= 34028234)
                        break e;
                }
                return $negative ? (-Infinity) : Infinity;
            }
            if ($negative)
                $mantissa =  -$mantissa;
            return $mantissa * jl_Float_decimalExponent($exp);
        }
        $start = $start + 1 | 0;
        if ($start == $end)
            break;
    }
    $string = new jl_NumberFormatException;
    jl_Throwable__init_0($string);
    $rt_throw($string);
}
function jl_Float_decimalExponent($n) {
    var $d, $result;
    if ($n >= 0)
        $d = 10.0;
    else {
        $d = 0.1;
        $n =  -$n;
    }
    $result = 1.0;
    while ($n) {
        if ($n % 2 | 0)
            $result = $result * $d;
        $d = $d * $d;
        $n = $n / 2 | 0;
    }
    return $result;
}
function jl_Float__clinit_() {
    jl_Float_NaN = NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
}
function jl_Double() {
    jl_Number.call(this);
}
var jl_Double_NaN = 0.0;
var jl_Double_TYPE = null;
function jl_Double__clinit_() {
    jl_Double_NaN = NaN;
    jl_Double_TYPE = $rt_cls($rt_doublecls());
}
function nms_MouseHelper() {
    var a = this; jl_Object.call(a);
    a.$field_1114_a = 0;
    a.$field_1113_b = 0;
}
function nms_MouseHelper__init_0() {
    var var_0 = new nms_MouseHelper();
    nms_MouseHelper__init_(var_0);
    return var_0;
}
function nms_MouseHelper__init_($this) {
    return;
}
function nms_MouseHelper_func_774_a($this) {
    oli_Mouse_setGrabbed(1);
    $this.$field_1114_a = 0;
    $this.$field_1113_b = 0;
}
function nms_MouseHelper_func_773_b($this) {
    oli_Mouse_setGrabbed(0);
}
function nms_MouseHelper_func_772_c($this) {
    var var$1;
    nlea_EaglerAdapterImpl2_$callClinit();
    var$1 = nlea_EaglerAdapterImpl2_mouseDX;
    nlea_EaglerAdapterImpl2_mouseDX = 0.0;
    $this.$field_1114_a = var$1 | 0;
    var$1 = nlea_EaglerAdapterImpl2_mouseDY;
    nlea_EaglerAdapterImpl2_mouseDY = 0.0;
    $this.$field_1113_b = var$1 | 0;
}
function oli_Mouse() {
    olo_GL11.call(this);
}
function oli_Mouse__init_0() {
    var var_0 = new oli_Mouse();
    oli_Mouse__init_(var_0);
    return var_0;
}
function oli_Mouse__init_($this) {
    olo_EaglerAdapterGL30__init_($this);
}
function oli_Mouse_next() {
    var var$1, var$2;
    a: {
        nlea_EaglerAdapterImpl2_$callClinit();
        nlea_EaglerAdapterImpl2_currentEvent = null;
        if (!ju_AbstractCollection_isEmpty(nlea_EaglerAdapterImpl2_mouseEvents)) {
            var$1 = ju_AbstractSequentialList_remove(nlea_EaglerAdapterImpl2_mouseEvents, 0);
            nlea_EaglerAdapterImpl2_currentEvent = var$1;
            if (var$1 !== null) {
                var$2 = 1;
                break a;
            }
        }
        var$2 = 0;
    }
    return var$2;
}
function oli_Mouse_getEventButtonState() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_currentEvent === null ? 0 : jl_String_equals($rt_str(nlea_EaglerAdapterImpl2_currentEvent.type), $rt_s(469));
}
function oli_Mouse_getEventX() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_currentEvent === null ? (-1) : nlea_EaglerAdapterImpl2_currentEvent.clientX;
}
function oli_Mouse_getEventY() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_currentEvent === null ? (-1) : nlea_EaglerAdapterImpl2_canvas.clientHeight - nlea_EaglerAdapterImpl2_currentEvent.clientY | 0;
}
function oli_Mouse_getEventButton() {
    var var$1;
    nlea_EaglerAdapterImpl2_$callClinit();
    if (nlea_EaglerAdapterImpl2_currentEvent === null)
        var$1 = (-1);
    else {
        var$1 = nlea_EaglerAdapterImpl2_currentEvent.button;
        if (var$1 == 1)
            var$1 = 2;
        else if (var$1 == 2)
            var$1 = 1;
    }
    return var$1;
}
function oli_Mouse_setGrabbed($b) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_needsPointerLock = $b;
    if ($b) {
        nlea_EaglerAdapterImpl2_mouseDX = 0.0;
        nlea_EaglerAdapterImpl2_mouseDY = 0.0;
        setTimeout(otji_JS_function(new nlea_EaglerAdapterImpl2$14, "onTimer"), 200);
    } else {
        nlea_EaglerAdapterImpl2_mouseUngrabTimer = jl_System_currentTimeMillis();
        if (nlea_EaglerAdapterImpl2_mouseUngrabTimeout)
            clearTimeout(nlea_EaglerAdapterImpl2_mouseUngrabTimeout);
        nlea_EaglerAdapterImpl2_mouseUngrabTimeout = 0;
        nlea_EaglerAdapterImpl2_doc.exitPointerLock();
    }
}
function oli_Mouse_isButtonDown($i) {
    nlea_EaglerAdapterImpl2_$callClinit();
    return nlea_EaglerAdapterImpl2_buttonStates.data[$i];
}
function oli_Mouse_getEventDWheel() {
    nlea_EaglerAdapterImpl2_$callClinit();
    return !jl_String_equals($rt_s(470), $rt_str(nlea_EaglerAdapterImpl2_currentEvent.type)) ? 0 : nlea_EaglerAdapterImpl2_currentEvent.deltaY === 0.0 ? 0 : nlea_EaglerAdapterImpl2_currentEvent.deltaY <= 0.0 ? 1 : (-1);
}
function nms_RenderManager() {
    var a = this; jl_Object.call(a);
    a.$entityRenderMap = null;
    a.$field_1218_p = null;
    a.$renderEngine0 = null;
    a.$field_4236_f = null;
    a.$worldObj4 = null;
    a.$field_1226_h = null;
    a.$field_1225_i = 0.0;
    a.$field_1224_j = 0.0;
    a.$options0 = null;
    a.$field_1222_l = 0.0;
    a.$field_1221_m = 0.0;
    a.$field_1220_n = 0.0;
}
var nms_RenderManager_instance = null;
var nms_RenderManager_field_1232_b = 0.0;
var nms_RenderManager_field_1231_c = 0.0;
var nms_RenderManager_field_1230_d = 0.0;
function nms_RenderManager_$callClinit() {
    nms_RenderManager_$callClinit = $rt_eraseClinit(nms_RenderManager);
    nms_RenderManager__clinit_();
}
function nms_RenderManager__init_0() {
    var var_0 = new nms_RenderManager();
    nms_RenderManager__init_(var_0);
    return var_0;
}
function nms_RenderManager__init_($this) {
    var $var2, var$2, $var1, var$4, var$5;
    nms_RenderManager_$callClinit();
    $this.$entityRenderMap = ju_HashMap__init_0();
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntitySpider), nms_RenderSpider__init_0());
    $var2 = $this.$entityRenderMap;
    var$2 = new nms_RenderPig;
    $var1 = nms_ModelPig__init_0();
    var$4 = new nms_ModelPig;
    nms_ModelQuadraped__init_(var$4, 6, 0.5);
    nms_RenderLiving__init_(var$2, $var1, 0.699999988079071);
    var$2.$field_6332_f = var$4;
    ju_HashMap_putImpl($var2, $rt_cls(nms_EntityPig), var$2);
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderSheep;
    var$2 = nms_ModelSheep2__init_0();
    var$4 = nms_ModelSheep1__init_0();
    nms_RenderLiving__init_(var$5, var$2, 0.699999988079071);
    var$5.$field_6332_f = var$4;
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntitySheep), var$5);
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderCow;
    nms_RenderLiving__init_(var$5, nms_ModelCow__init_0(), 0.699999988079071);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityCow), var$5);
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderChicken;
    nms_RenderLiving__init_(var$5, nms_ModelChicken__init_0(), 0.30000001192092896);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityChicken), var$5);
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityCreeper), nms_RenderCreeper__init_0());
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntitySkeleton), nms_RenderBiped__init_(nms_ModelSkeleton__init_0(), 0.5));
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderBiped;
    var$2 = new nms_ModelZombie;
    nms_ModelBiped__init_(var$2);
    nms_RenderBiped__init_0(var$5, var$2, 0.5);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityZombie), var$5);
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderSlime;
    var$2 = nms_ModelSlime__init_(16);
    var$4 = nms_ModelSlime__init_(0);
    nms_RenderLiving__init_(var$5, var$2, 0.25);
    var$5.$field_205_f = var$4;
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntitySlime), var$5);
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityPlayer), nms_RenderPlayer__init_0());
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderZombieSimple;
    var$2 = new nms_ModelZombie;
    nms_ModelBiped__init_(var$2);
    nms_RenderLiving__init_(var$5, var$2, 3.0);
    var$5.$field_204_f = 6.0;
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityZombieSimple), var$5);
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityGhast), nms_RenderGhast__init_0());
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityLiving), nms_RenderLiving__init_0(nms_ModelBiped__init_1(), 0.5));
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderEntity;
    nms_Render__init_(var$5);
    ju_HashMap_putImpl($var1, $rt_cls(nms_Entity), var$5);
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityPainting), nms_RenderPainting__init_0());
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderArrow;
    nms_Render__init_(var$5);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityArrow), var$5);
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderSnowball;
    nms_Render__init_(var$5);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntitySnowball), var$5);
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderFireball;
    nms_Render__init_(var$5);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityFireball), var$5);
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityItem), nms_RenderItem__init_0());
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityTNTPrimed), nms_RenderTNTPrimed__init_0());
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityFallingSand), nms_RenderFallingSand__init_0());
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityMinecart), nms_RenderMinecart__init_0());
    ju_HashMap_putImpl($this.$entityRenderMap, $rt_cls(nms_EntityBoat), nms_RenderBoat__init_0());
    $var1 = $this.$entityRenderMap;
    var$5 = new nms_RenderFish;
    nms_Render__init_(var$5);
    ju_HashMap_putImpl($var1, $rt_cls(nms_EntityFish), var$5);
    $var1 = ju_HashMap$2_iterator(ju_HashMap_values($this.$entityRenderMap));
    while (ju_HashMap$AbstractMapIterator_hasNext($var1)) {
        ju_HashMap$ValueIterator_next($var1).$renderManager = $this;
    }
}
function nms_RenderManager_func_4117_a($this, $var1) {
    var $var2;
    $var2 = ju_HashMap_get($this.$entityRenderMap, $var1);
    if ($var2 === null && $var1 !== $rt_cls(nms_Entity)) {
        $var2 = nms_RenderManager_func_4117_a($this, jl_Class_getSuperclass($var1));
        ju_HashMap_putImpl($this.$entityRenderMap, $var1, $var2);
    }
    return $var2;
}
function nms_RenderManager_func_855_a($this, $var1) {
    return nms_RenderManager_func_4117_a($this, jl_Object_getClass($var1));
}
function nms_RenderManager_func_857_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7, var$8, var$9;
    $this.$worldObj4 = $var1;
    $this.$renderEngine0 = $var2;
    $this.$options0 = $var5;
    $this.$field_1226_h = $var4;
    $this.$field_1218_p = $var3;
    $this.$field_1225_i = $var4.$prevRotationYaw + ($var4.$rotationYaw - $var4.$prevRotationYaw) * $var6;
    $this.$field_1224_j = $var4.$prevRotationPitch + ($var4.$rotationPitch - $var4.$prevRotationPitch) * $var6;
    var$7 = $var4.$lastTickPosX;
    var$8 = $var4.$posX - $var4.$lastTickPosX;
    var$9 = $var6;
    $this.$field_1222_l = var$7 + var$8 * var$9;
    $this.$field_1221_m = $var4.$lastTickPosY + ($var4.$posY - $var4.$lastTickPosY) * var$9;
    $this.$field_1220_n = $var4.$lastTickPosZ + ($var4.$posZ - $var4.$lastTickPosZ) * var$9;
}
function nms_RenderManager_func_854_a($this, $var1, $var2) {
    var $var5, $var3, var$5, $var7, $var9, $var10, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var7 = $thread.pop();var$5 = $thread.pop();$var3 = $thread.pop();$var5 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = $var1.$lastTickPosX;
        $var3 = $var1.$posX - $var1.$lastTickPosX;
        var$5 = $var2;
        $var3 = $var5 + $var3 * var$5;
        $var5 = $var1.$lastTickPosY + ($var1.$posY - $var1.$lastTickPosY) * var$5;
        $var7 = $var1.$lastTickPosZ + ($var1.$posZ - $var1.$lastTickPosZ) * var$5;
        $var9 = $var1.$prevRotationYaw + ($var1.$rotationYaw - $var1.$prevRotationYaw) * $var2;
        $var10 = $var1.$getEntityBrightness($var2);
        olo_EaglerAdapterGL30_glColor3f($var10, $var10, $var10);
        $var3 = $var3 - nms_RenderManager_field_1232_b;
        $var5 = $var5 - nms_RenderManager_field_1231_c;
        var$5 = $var7 - nms_RenderManager_field_1230_d;
        $ptr = 1;
    case 1:
        nms_RenderManager_func_853_a($this, $var1, $var3, $var5, var$5, $var9, $var2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var5, $var3, var$5, $var7, $var9, $var10, $ptr);
}
function nms_RenderManager_func_853_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var10 = nms_RenderManager_func_855_a($this, $var1);
        if ($var10 === null)
            return;
        $ptr = 1;
    case 1:
        $var10.$doRender($var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        $ptr = 2;
    case 2:
        nms_Render_doRenderShadowAndFire($var10, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $ptr);
}
function nms_RenderManager_func_852_a($this, $var1) {
    $this.$worldObj4 = $var1;
}
function nms_RenderManager_func_851_a($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11;
    $var7 = $var1 - $this.$field_1222_l;
    $var9 = $var3 - $this.$field_1221_m;
    $var11 = $var5 - $this.$field_1220_n;
    return $var7 * $var7 + $var9 * $var9 + $var11 * $var11;
}
function nms_RenderManager_getFontRenderer($this) {
    return $this.$field_1218_p;
}
function nms_RenderManager__clinit_() {
    nms_RenderManager_instance = nms_RenderManager__init_0();
}
function nms_RenderEngine() {
    var a = this; jl_Object.call(a);
    a.$textureNameToImageMap = null;
    a.$singleIntBuffer = null;
    a.$imageDataB1 = null;
    a.$imageDataB2 = null;
    a.$textureList = null;
    a.$options = null;
    a.$clampTexture = 0;
    a.$blurTexture = 0;
}
var nms_RenderEngine_useMipmaps = 0;
var nms_RenderEngine_textureMap = null;
function nms_RenderEngine_getTexture($this, $s) {
    var $integer, $i, var$4, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$4 = $thread.pop();$i = $thread.pop();$integer = $thread.pop();$s = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $integer = ju_HashMap_get(nms_RenderEngine_textureMap, $s);
        if ($integer !== null)
            return $integer.$value;
        try {
            jn_IntBuffer_clear($this.$singleIntBuffer);
            nms_GLAllocation_generateTextureNames($this.$singleIntBuffer);
            $i = jn_IntBufferImpl_get0($this.$singleIntBuffer, 0);
            if (!jl_String_startsWith($s, $rt_s(471))) {
                nms_RenderEngine_useMipmaps = 1;
                var$4 = nlea_EaglerAdapterImpl2_loadResourceBytes($s);
                $ptr = 1;
                continue main;
            }
            $this.$clampTexture = 1;
            var$4 = nlea_EaglerAdapterImpl2_loadResourceBytes(jl_String_substring($s, 7));
            $ptr = 2;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
        $s = new jl_RuntimeException;
        jl_Throwable__init_($s, $rt_s(472));
        $rt_throw($s);
    case 1:
        a: {
            try {
                $tmp = nms_RenderEngine_readTextureImage($this, var$4);
                if ($rt_suspending()) {
                    break main;
                }
                $integer = $tmp;
                nms_RenderEngine_setupTexture($this, $integer, $i);
                nms_RenderEngine_useMipmaps = 0;
                ju_HashMap_put(nms_RenderEngine_textureMap, $s, jl_Integer_valueOf($i));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $i;
        }
        $s = new jl_RuntimeException;
        jl_Throwable__init_($s, $rt_s(472));
        $rt_throw($s);
    case 2:
        a: {
            try {
                $tmp = nms_RenderEngine_readTextureImage($this, var$4);
                if ($rt_suspending()) {
                    break main;
                }
                $integer = $tmp;
                nms_RenderEngine_setupTexture($this, $integer, $i);
                $this.$clampTexture = 0;
                ju_HashMap_put(nms_RenderEngine_textureMap, $s, jl_Integer_valueOf($i));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $i;
        }
        $s = new jl_RuntimeException;
        jl_Throwable__init_($s, $rt_s(472));
        $rt_throw($s);
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $s, $integer, $i, var$4, $ptr);
}
function nms_RenderEngine_allocateAndSetupTexture($this, $bufferedimage) {
    var $i;
    jn_IntBuffer_clear($this.$singleIntBuffer);
    nms_GLAllocation_generateTextureNames($this.$singleIntBuffer);
    $i = jn_IntBufferImpl_get0($this.$singleIntBuffer, 0);
    nms_RenderEngine_setupTexture($this, $bufferedimage, $i);
    ju_HashMap_putImpl($this.$textureNameToImageMap, jl_Integer_valueOf($i), $bufferedimage);
    return $i;
}
function nms_RenderEngine_setupTexture($this, $bufferedimage, $i) {
    var $j, $k, $ai, $abyte0, var$7, $l, var$9, $j1, $j3, $l3, $j4, $k1, $i1, $i2, $k2, $i3, $k3, $i4, $k4, $l4, $i5, $j5, $tmp_0;
    nms_RenderEngine_bindTexture($this, $i);
    if (!nms_RenderEngine_useMipmaps) {
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10241, 9728);
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10240, 9728);
    } else {
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10241, 9986);
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10240, 9728);
        olo_EaglerAdapterGL30_glTexParameteri(3553, 33085, 4);
    }
    if ($this.$blurTexture) {
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10241, 9729);
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10240, 9729);
    }
    if (!$this.$clampTexture) {
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10242, 10497);
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10243, 10497);
    } else {
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10242, 10496);
        olo_EaglerAdapterGL30_glTexParameteri(3553, 10243, 10496);
    }
    $j = $bufferedimage.$w1;
    $k = $bufferedimage.$h1;
    $ai = $bufferedimage.$data;
    $abyte0 = $rt_createByteArray($rt_imul($j, $k) * 4 | 0);
    var$7 = $abyte0.data;
    $l = 0;
    while (true) {
        var$9 = $ai.data;
        if ($l >= var$9.length)
            break;
        $j1 = var$9[$l] >> 24 & 255;
        $j3 = var$9[$l] >> 16 & 255;
        $l3 = var$9[$l] >> 8 & 255;
        $j4 = var$9[$l] >> 0 & 255;
        if ($this.$options !== null && $this.$options.$anaglyph) {
            $k1 = $j3 * 30 | 0;
            $j3 = (($k1 + ($l3 * 59 | 0) | 0) + ($j4 * 11 | 0) | 0) / 100 | 0;
            $l3 = ($k1 + ($l3 * 70 | 0) | 0) / 100 | 0;
            $j4 = ($k1 + ($j4 * 70 | 0) | 0) / 100 | 0;
        }
        $i = $l * 4 | 0;
        var$7[$i + 0 | 0] = $j3 << 24 >> 24;
        var$7[$i + 1 | 0] = $l3 << 24 >> 24;
        var$7[$i + 2 | 0] = $j4 << 24 >> 24;
        var$7[$i + 3 | 0] = $j1 << 24 >> 24;
        $l = $l + 1 | 0;
    }
    a: {
        jn_Buffer_clear($this.$imageDataB1);
        jn_ByteBuffer_put0($this.$imageDataB1, $abyte0);
        $bufferedimage = $this.$imageDataB1;
        jn_Buffer_position0($bufferedimage, 0);
        jn_Buffer_limit0($bufferedimage, var$7.length);
        olo_EaglerAdapterGL30_glTexImage2D(3553, 0, 6408, $j, $k, 0, 6408, 5121, $this.$imageDataB1);
        if (nms_RenderEngine_useMipmaps) {
            $i1 = 1;
            while (true) {
                if ($i1 > 4)
                    break a;
                $k1 = $j >> ($i1 - 1 | 0);
                $i2 = $j >> $i1;
                $k2 = $k >> $i1;
                jn_Buffer_clear($this.$imageDataB2);
                $i3 = 0;
                while ($i3 < $i2) {
                    $k3 = 0;
                    while ($k3 < $k2) {
                        $bufferedimage = $this.$imageDataB1;
                        $i = $i3 * 2 | 0;
                        $l = $i + 0 | 0;
                        $j1 = $k3 * 2 | 0;
                        $j4 = $rt_imul($j1 + 0 | 0, $k1);
                        $i4 = jn_ByteBufferImpl_getInt($bufferedimage, ($l + $j4 | 0) * 4 | 0);
                        $bufferedimage = $this.$imageDataB1;
                        $i = $i + 1 | 0;
                        $k4 = jn_ByteBufferImpl_getInt($bufferedimage, ($i + $j4 | 0) * 4 | 0);
                        $bufferedimage = $this.$imageDataB1;
                        $j1 = $rt_imul($j1 + 1 | 0, $k1);
                        $l4 = jn_ByteBufferImpl_getInt($bufferedimage, ($i + $j1 | 0) * 4 | 0);
                        $i5 = jn_ByteBufferImpl_getInt($this.$imageDataB1, ($l + $j1 | 0) * 4 | 0);
                        $j5 = nms_RenderEngine_averageColor($this, nms_RenderEngine_averageColor($this, $i4, $k4), nms_RenderEngine_averageColor($this, $l4, $i5));
                        jn_ByteBufferImpl_putInt($this.$imageDataB2, ($i3 + $rt_imul($k3, $i2) | 0) * 4 | 0, $j5);
                        $k3 = $k3 + 1 | 0;
                    }
                    $i3 = $i3 + 1 | 0;
                }
                olo_EaglerAdapterGL30_glTexImage2D(3553, $i1, 6408, $i2, $k2, 0, 6408, 5121, $this.$imageDataB2);
                $tmp_0 = $this.$imageDataB1;
                $this.$imageDataB1 = $this.$imageDataB2;
                $this.$imageDataB2 = $tmp_0;
                $i1 = $i1 + 1 | 0;
            }
        }
    }
}
function nms_RenderEngine_registerTextureFX($this, $texturefx) {
    ju_ArrayList_add($this.$textureList, $texturefx);
    $texturefx.$func_783_a();
}
function nms_RenderEngine_averageColor($this, $i, $j) {
    return (((($i & (-16777216)) >> 24 & 255) + (($j & (-16777216)) >> 24 & 255) | 0) >> 1 << 24) + ((($i & 16711422) + ($j & 16711422) | 0) >> 1) | 0;
}
function nms_RenderEngine_readTextureImage($this, $inputstream) {
    var var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$inputstream = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        $tmp = nlea_EaglerAdapterImpl2_loadPNG($inputstream);
        if ($rt_suspending()) {
            break main;
        }
        var$2 = $tmp;
        return var$2;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $inputstream, var$2, $ptr);
}
function nms_RenderEngine_bindTexture($this, $i) {
    if ($i < 0)
        return;
    olo_EaglerAdapterGL30_glBindTexture(3553, $i);
}
function nms_RenderEngine_getTextureForDownloadableImage($this, $s, $s1) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$s1 = $thread.pop();$s = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($this, $s1);
        if ($rt_suspending()) {
            break main;
        }
        var$3 = $tmp;
        return var$3;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $s, $s1, var$3, $ptr);
}
function nms_RenderEngine__clinit_() {
    nms_RenderEngine_useMipmaps = 0;
}
function nms_FontRenderer() {
    var a = this; jl_Object.call(a);
    a.$charWidth = null;
    a.$fontTextureName = 0;
    a.$fontDisplayLists = 0;
}
function nms_FontRenderer__init_0(var_0, var_1, var_2) {
    var var_3 = new nms_FontRenderer();
    nms_FontRenderer__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_FontRenderer__init_($this, $gamesettings, $s, $renderengine) {
    var $ai, $bufferedimage, $i, $k, $l, $k1, $j2, $j1, $i3, $flag, $l3, $tessellator, $i1, $l1, $k2, var$19, var$20, var$21, var$22, var$23, var$24, $i2, $j4, $l4, $i5, $flag1, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$flag1 = $thread.pop();$i5 = $thread.pop();$l4 = $thread.pop();$j4 = $thread.pop();$i2 = $thread.pop();var$24 = $thread.pop();var$23 = $thread.pop();var$22 = $thread.pop();var$21 = $thread.pop();var$20 = $thread.pop();var$19 = $thread.pop();$k2 = $thread.pop();$l1 = $thread.pop();$i1 = $thread.pop();$tessellator = $thread.pop();$l3 = $thread.pop();$flag = $thread.pop();$i3 = $thread.pop();$j1 = $thread.pop();$j2 = $thread.pop();$k1 = $thread.pop();$l = $thread.pop();$k = $thread.pop();$i
        = $thread.pop();$bufferedimage = $thread.pop();$ai = $thread.pop();$renderengine = $thread.pop();$s = $thread.pop();$gamesettings = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$charWidth = $rt_createIntArray(256);
        $this.$fontTextureName = 0;
        $ai = nlea_EaglerAdapterImpl2_loadResourceBytes($s);
        $ptr = 1;
    case 1:
        $tmp = nlea_EaglerAdapterImpl2_loadPNG($ai);
        if ($rt_suspending()) {
            break main;
        }
        $bufferedimage = $tmp;
        $i = $bufferedimage.$w1;
        $ai = $bufferedimage.$data;
        $k = 0;
        while ($k < 256) {
            $l = $k % 16 | 0;
            $k1 = $k / 16 | 0;
            $j2 = 7;
            $l = $l * 8 | 0;
            $j1 = $k1 * 8 | 0;
            a: {
                while ($j2 >= 0) {
                    $i3 = $l + $j2 | 0;
                    $flag = 1;
                    $l3 = 0;
                    while ($l3 < 8 && $flag) {
                        if (($ai.data[$i3 + $rt_imul($j1 + $l3 | 0, $i) | 0] & 255) > 0)
                            $flag = 0;
                        $l3 = $l3 + 1 | 0;
                    }
                    if (!$flag)
                        break a;
                    $j2 = $j2 + (-1) | 0;
                }
            }
            if ($k == 32)
                $j2 = 2;
            $this.$charWidth.data[$k] = $j2 + 2 | 0;
            $k = $k + 1 | 0;
        }
        $this.$fontTextureName = nms_RenderEngine_allocateAndSetupTexture($renderengine, $bufferedimage);
        $this.$fontDisplayLists = nms_GLAllocation_generateDisplayLists(288);
        nms_Tessellator_$callClinit();
        $tessellator = nms_Tessellator_instance;
        $i1 = 0;
        while ($i1 < 256) {
            olo_EaglerAdapterGL30_glNewList($this.$fontDisplayLists + $i1 | 0, 4864);
            nms_Tessellator_startDrawingQuads($tessellator);
            $l1 = ($i1 % 16 | 0) * 8 | 0;
            $k2 = ($i1 / 16 | 0) * 8 | 0;
            var$19 = $l1;
            var$20 = var$19 / 128.0 + 0.0;
            var$21 = $k2;
            var$22 = (var$21 + 7.989999771118164) / 128.0 + 0.0;
            nms_Tessellator_addVertexWithUV($tessellator, 0.0, 7.989999771118164, 0.0, var$20, var$22);
            var$23 = (var$19 + 7.989999771118164) / 128.0 + 0.0;
            nms_Tessellator_addVertexWithUV($tessellator, 7.989999771118164, 7.989999771118164, 0.0, var$23, var$22);
            var$24 = var$21 / 128.0 + 0.0;
            nms_Tessellator_addVertexWithUV($tessellator, 7.989999771118164, 0.0, 0.0, var$23, var$24);
            nms_Tessellator_addVertexWithUV($tessellator, 0.0, 0.0, 0.0, var$20, var$24);
            nms_Tessellator_draw($tessellator);
            olo_EaglerAdapterGL30_glEndList();
            $i1 = $i1 + 1 | 0;
        }
        $j1 = 0;
        while ($j1 < 32) {
            $i2 = ($j1 >> 3 & 1) * 85 | 0;
            $j4 = (($j1 >> 2 & 1) * 170 | 0) + $i2 | 0;
            $l4 = (($j1 >> 1 & 1) * 170 | 0) + $i2 | 0;
            $i5 = (($j1 >> 0 & 1) * 170 | 0) + $i2 | 0;
            if ($j1 == 6)
                $j4 = $j4 + 85 | 0;
            $flag1 = $j1 < 16 ? 0 : 1;
            if ($gamesettings.$anaglyph) {
                $i = $j4 * 30 | 0;
                $j4 = (($i + ($l4 * 59 | 0) | 0) + ($i5 * 11 | 0) | 0) / 100 | 0;
                $l4 = ($i + ($l4 * 70 | 0) | 0) / 100 | 0;
                $i5 = ($i + ($i5 * 70 | 0) | 0) / 100 | 0;
            }
            if ($flag1) {
                $j4 = $j4 / 4 | 0;
                $l4 = $l4 / 4 | 0;
                $i5 = $i5 / 4 | 0;
            }
            olo_EaglerAdapterGL30_glNewList(($this.$fontDisplayLists + 256 | 0) + $j1 | 0, 4864);
            olo_EaglerAdapterGL30_glColor3f($j4 / 255.0, $l4 / 255.0, $i5 / 255.0);
            olo_EaglerAdapterGL30_glEndList();
            $j1 = $j1 + 1 | 0;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $gamesettings, $s, $renderengine, $ai, $bufferedimage, $i, $k, $l, $k1, $j2, $j1, $i3, $flag, $l3, $tessellator, $i1, $l1, $k2, var$19, var$20, var$21, var$22, var$23, var$24, $i2, $j4, $l4, $i5, $flag1, $ptr);
}
function nms_FontRenderer_drawStringWithShadow($this, $s, $i, $j, $k) {
    nms_FontRenderer_renderString($this, $s, $i + 1 | 0, $j + 1 | 0, $k, 1);
    nms_FontRenderer_drawString($this, $s, $i, $j, $k);
}
function nms_FontRenderer_drawString($this, $s, $i, $j, $k) {
    nms_FontRenderer_renderString($this, $s, $i, $j, $k, 0);
}
function nms_FontRenderer_renderString($this, $s, $i, $j, $k, $flag) {
    var $f, $f1, $f2, $f3, $i1, $j1, $k1;
    if ($s === null)
        return;
    if ($flag)
        $k = (($k & 16579836) >> 2) + ($k & (-16777216)) | 0;
    olo_EaglerAdapterGL30_glBindTexture(3553, $this.$fontTextureName);
    $f = ($k >> 16 & 255) / 255.0;
    $f1 = ($k >> 8 & 255) / 255.0;
    $f2 = ($k & 255) / 255.0;
    $f3 = ($k >> 24 & 255) / 255.0;
    if ($f3 === 0.0)
        $f3 = 1.0;
    olo_EaglerAdapterGL30_glColor4f($f, $f1, $f2, $f3);
    olo_EaglerAdapterGL30_glPushMatrix();
    olo_EaglerAdapterGL30_glTranslatef($i, $j, 0.0);
    $i1 = 0;
    while ($i1 < jl_String_length($s)) {
        $i = $i1;
        while (true) {
            $j = jl_String_length($s);
            $i1 = $i + 1 | 0;
            if ($j <= $i1)
                break;
            if (jl_String_charAt($s, $i) != 167)
                break;
            $j1 = jl_String_indexOf0($rt_s(473), jl_String_charAt(jl_String_toLowerCase($s), $i1));
            $i = $i + 2 | 0;
        }
        if ($i < jl_String_length($s)) {
            $k1 = nms_FontAllowedCharacters_isAllowed(jl_String_charAt($s, $i));
            if ($k1 >= 0) {
                olo_EaglerAdapterGL30_glCallList(($this.$fontDisplayLists + $k1 | 0) + 32 | 0);
                olo_EaglerAdapterGL30_glTranslatef($this.$charWidth.data[$k1 + 32 | 0], 0.0, 0.0);
            }
        }
    }
    olo_EaglerAdapterGL30_glPopMatrix();
}
function nms_FontRenderer_getStringWidth($this, $s) {
    var $i, $j, $k;
    if ($s === null)
        return 0;
    $i = 0;
    $j = 0;
    while ($j < jl_String_length($s)) {
        if (jl_String_charAt($s, $j) == 167)
            $j = $j + 1 | 0;
        else {
            $k = nms_FontAllowedCharacters_isAllowed(jl_String_charAt($s, $j));
            if ($k >= 0)
                $i = $i + $this.$charWidth.data[$k + 32 | 0] | 0;
        }
        $j = $j + 1 | 0;
    }
    return $i;
}
function nms_TextureCompassFX() {
    var a = this; nms_TextureFX.call(a);
    a.$compassSpriteSheet = null;
    a.$compassSpriteSheetLength = 0;
    a.$angleDelta = 0.0;
    a.$currentAngle = 0.0;
}
function nms_TextureCompassFX_func_783_a($this) {
    var $var1;
    $var1 = nmc_Minecraft_mc;
    if ($var1.$theWorld !== null && $var1.$thePlayer !== null)
        nms_TextureCompassFX_updateCompass($this, $var1.$theWorld, $var1.$thePlayer.$posX, $var1.$thePlayer.$posZ, $var1.$thePlayer.$rotationYaw, 0, 0);
    else
        nms_TextureCompassFX_updateCompass($this, null, 0.0, 0.0, 0.0, 1, 0);
}
function nms_TextureCompassFX_updateCompass($this, $par1World, $par2, $par4, $par6, $par8, $par9) {
    var $var10, $var13, $var15, $var17, $var18, $offset, $i, var$14, var$15, var$16, var$17;
    $var10 = 0.0;
    if ($par1World !== null && !$par8) {
        $var13 = $par1World.$spawnX - $par2;
        $var15 = $par1World.$spawnZ - $par4;
        $var10 =  -(($par6 % 360.0 - 90.0) * 3.141592653589793 / 180.0 - jl_Math_atan2($var15, $var13));
        if (!$par1World.$worldProvider.$field_4220_c)
            $var10 = jl_Math_random() * 3.141592653589793 * 2.0;
    }
    if ($par9)
        $this.$currentAngle = $var10;
    else {
        $var17 = $var10 - $this.$currentAngle;
        while ($var17 < (-3.141592653589793)) {
            $var17 = $var17 + 6.283185307179586;
        }
        while ($var17 >= 3.141592653589793) {
            $var17 = $var17 - 6.283185307179586;
        }
        if ($var17 < (-1.0))
            $var17 = (-1.0);
        if ($var17 > 1.0)
            $var17 = 1.0;
        $this.$angleDelta = $this.$angleDelta + $var17 * 0.1;
        $this.$angleDelta = $this.$angleDelta * 0.8;
        $this.$currentAngle = $this.$currentAngle + $this.$angleDelta;
    }
    $var18 = (($this.$currentAngle / 6.283185307179586 + 1.0) * $this.$compassSpriteSheetLength | 0) % $this.$compassSpriteSheetLength | 0;
    while ($var18 < 0) {
        $var18 = ($var18 + $this.$compassSpriteSheetLength | 0) % $this.$compassSpriteSheetLength | 0;
    }
    $offset = $var18 * 256 | 0;
    $i = 0;
    while ($i < 256) {
        var$14 = $this.$field_1127_a.data;
        var$15 = $i * 4 | 0;
        var$16 = $this.$compassSpriteSheet.data;
        var$17 = $offset + $i | 0;
        var$14[var$15] = (var$16[var$17] >> 16 & 255) << 24 >> 24;
        $this.$field_1127_a.data[var$15 + 1 | 0] = ($this.$compassSpriteSheet.data[var$17] >> 8 & 255) << 24 >> 24;
        $this.$field_1127_a.data[var$15 + 2 | 0] = ($this.$compassSpriteSheet.data[var$17] & 255) << 24 >> 24;
        $this.$field_1127_a.data[var$15 + 3 | 0] = ($this.$compassSpriteSheet.data[var$17] >> 24 & 255) << 24 >> 24;
        $i = $i + 1 | 0;
    }
}
function nms_IWorldAccess() {
}
function nms_RenderGlobal() {
    var a = this; jl_Object.call(a);
    a.$field_1458_a = null;
    a.$worldObj5 = null;
    a.$renderEngine1 = null;
    a.$field_1446_m = null;
    a.$field_1445_n = null;
    a.$field_1444_o = null;
    a.$field_1443_p = 0;
    a.$field_1442_q = 0;
    a.$field_1441_r = 0;
    a.$field_1440_s = 0;
    a.$mc8 = null;
    a.$field_1438_u = null;
    a.$field_1435_x = 0;
    a.$field_1434_y = 0;
    a.$field_1433_z = 0;
    a.$field_1432_A = 0;
    a.$field_1431_B = 0;
    a.$field_1430_C = 0;
    a.$field_1429_D = 0;
    a.$field_1428_E = 0;
    a.$field_1427_F = 0;
    a.$field_1426_G = 0;
    a.$field_1425_H = 0;
    a.$field_1424_I = 0;
    a.$field_1423_J = 0;
    a.$field_1422_K = 0;
    a.$field_1421_L = 0;
    a.$field_1457_b = null;
    a.$field_1456_c = null;
    a.$field_1420_M = 0;
    a.$field_1419_N = 0;
    a.$field_1418_O = 0;
    a.$field_1417_P = 0;
    a.$field_1416_Q = 0;
    a.$field_1415_R = null;
    a.$field_1414_S = null;
    a.$field_1455_d = 0;
    a.$field_1454_e = 0;
    a.$field_1453_f = 0.0;
    a.$field_1452_g = 0.0;
    a.$field_1451_h = 0.0;
    a.$field_1450_i = 0.0;
    a.$field_1449_j = 0;
}
function nms_RenderGlobal__init_(var_0, var_1) {
    var var_2 = new nms_RenderGlobal();
    nms_RenderGlobal__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_RenderGlobal__init_0($this, $var1, $var2) {
    var var$3, var$4, $var4, $var8, $var9, var$8, var$9, var$10, var$11, $var9_0, var$13;
    $this.$field_1458_a = ju_ArrayList__init_0();
    $this.$field_1446_m = ju_ArrayList__init_0();
    $this.$field_1435_x = 0;
    $this.$field_1425_H = (-1);
    $this.$field_1424_I = 2;
    $this.$field_1457_b = $rt_createIntArray(50000);
    $this.$field_1456_c = nms_GLAllocation_createDirectIntBuffer(64);
    $this.$field_1415_R = ju_ArrayList__init_0();
    var$3 = $rt_createArray(nms_RenderList, 4);
    var$4 = var$3.data;
    var$4[0] = nms_RenderList__init_0();
    var$4[1] = nms_RenderList__init_0();
    var$4[2] = nms_RenderList__init_0();
    var$4[3] = nms_RenderList__init_0();
    $this.$field_1414_S = var$3;
    $this.$field_1455_d = 0;
    $this.$field_1454_e = nms_GLAllocation_generateDisplayLists(1);
    $this.$field_1453_f = (-9999.0);
    $this.$field_1452_g = (-9999.0);
    $this.$field_1451_h = (-9999.0);
    $this.$field_1449_j = 0;
    $this.$mc8 = $var1;
    $this.$renderEngine1 = $var2;
    $this.$field_1440_s = nms_GLAllocation_generateDisplayLists(786432);
    $this.$field_1434_y = nms_GLAllocation_generateDisplayLists(3);
    olo_EaglerAdapterGL30_glPushMatrix();
    olo_EaglerAdapterGL30_glNewList($this.$field_1434_y, 4864);
    nms_RenderGlobal_func_950_f($this);
    olo_EaglerAdapterGL30_glEndList();
    olo_EaglerAdapterGL30_glPopMatrix();
    nms_Tessellator_$callClinit();
    $var4 = nms_Tessellator_instance;
    $this.$field_1433_z = $this.$field_1434_y + 1 | 0;
    olo_EaglerAdapterGL30_glNewList($this.$field_1433_z, 4864);
    $var8 = (-384);
    while ($var8 <= 384) {
        $var9 = (-384);
        while ($var9 <= 384) {
            nms_Tessellator_startDrawingQuads($var4);
            var$8 = $var8 + 0 | 0;
            var$9 = $var9 + 0 | 0;
            nms_Tessellator_addVertex($var4, var$8, 16.0, var$9);
            var$10 = $var8 + 64 | 0;
            nms_Tessellator_addVertex($var4, var$10, 16.0, var$9);
            $var9 = $var9 + 64 | 0;
            var$9 = $var9;
            nms_Tessellator_addVertex($var4, var$10, 16.0, var$9);
            nms_Tessellator_addVertex($var4, var$8, 16.0, var$9);
            nms_Tessellator_draw($var4);
        }
        $var8 = $var8 + 64 | 0;
    }
    olo_EaglerAdapterGL30_glEndList();
    $this.$field_1432_A = $this.$field_1434_y + 2 | 0;
    olo_EaglerAdapterGL30_glNewList($this.$field_1432_A, 4864);
    nms_Tessellator_startDrawingQuads($var4);
    var$11 = (-384);
    while (var$11 <= 384) {
        $var9_0 = (-384);
        while ($var9_0 <= 384) {
            var$9 = var$11 + 64 | 0;
            var$8 = $var9_0 + 0 | 0;
            nms_Tessellator_addVertex($var4, var$9, (-16.0), var$8);
            var$13 = var$11 + 0 | 0;
            nms_Tessellator_addVertex($var4, var$13, (-16.0), var$8);
            $var9_0 = $var9_0 + 64 | 0;
            var$8 = $var9_0;
            nms_Tessellator_addVertex($var4, var$13, (-16.0), var$8);
            nms_Tessellator_addVertex($var4, var$9, (-16.0), var$8);
        }
        var$11 = var$11 + 64 | 0;
    }
    nms_Tessellator_draw($var4);
    olo_EaglerAdapterGL30_glEndList();
}
function nms_RenderGlobal_func_950_f($this) {
    var $var1, $var2, $var3, $var4, $var6, $var8, $var10, $var12, $var47, $var14, $var16, $var18, $var20, $var22, $var24, $var26, $var28, $var30, $var32, $var34, $var36, $var38, $var39, $var41, $var43, $var49, $var53, $var55, $var57, $var61;
    $var1 = new ju_Random;
    nms_Tessellator_$callClinit();
    $var2 = nms_Tessellator_instance;
    nms_Tessellator_startDrawingQuads($var2);
    $var3 = 0;
    while ($var3 < 1500) {
        a: {
            $var4 = ju_Random_nextFloat($var1) * 2.0 - 1.0;
            $var6 = ju_Random_nextFloat($var1) * 2.0 - 1.0;
            $var8 = ju_Random_nextFloat($var1) * 2.0 - 1.0;
            $var10 = 0.25 + ju_Random_nextFloat($var1) * 0.25;
            $var12 = $var4 * $var4 + $var6 * $var6 + $var8 * $var8;
            if ($var12 < 1.0 && $var12 > 0.01) {
                $var47 = 1.0 / jl_Math_sqrt($var12);
                $var4 = $var4 * $var47;
                $var6 = $var6 * $var47;
                $var8 = $var8 * $var47;
                $var14 = $var4 * 100.0;
                $var16 = $var6 * 100.0;
                $var18 = $var8 * 100.0;
                $var20 = jl_Math_atan2($var4, $var8);
                $var22 = jl_Math_sin($var20);
                $var24 = jl_Math_cos($var20);
                $var26 = jl_Math_atan2(jl_Math_sqrt($var4 * $var4 + $var8 * $var8), $var6);
                $var28 = jl_Math_sin($var26);
                $var30 = jl_Math_cos($var26);
                $var32 = ju_Random_nextDouble($var1) * 3.141592653589793 * 2.0;
                $var34 = jl_Math_sin($var32);
                $var36 = jl_Math_cos($var32);
                $var38 = 0;
                $var8 = 0.0 * $var30;
                $var39 = 0.0 * $var28;
                while (true) {
                    if ($var38 >= 4)
                        break a;
                    $var41 = (($var38 & 2) - 1 | 0) * $var10;
                    $var38 = $var38 + 1 | 0;
                    $var43 = (($var38 & 2) - 1 | 0) * $var10;
                    $var47 = $var41 * $var36 - $var43 * $var34;
                    $var49 = $var43 * $var36 + $var41 * $var34;
                    $var53 = $var47 * $var28 + $var8;
                    $var55 = $var39 - $var47 * $var30;
                    $var57 = $var55 * $var22 - $var49 * $var24;
                    $var61 = $var49 * $var22 + $var55 * $var24;
                    nms_Tessellator_addVertex($var2, $var14 + $var57, $var16 + $var53, $var18 + $var61);
                }
            }
        }
        $var3 = $var3 + 1 | 0;
    }
    nms_Tessellator_draw($var2);
}
function nms_RenderGlobal_func_946_a($this, $var1) {
    if ($this.$worldObj5 !== null)
        nms_World_removeWorldAccess($this.$worldObj5, $this);
    $this.$field_1453_f = (-9999.0);
    $this.$field_1452_g = (-9999.0);
    $this.$field_1451_h = (-9999.0);
    nms_RenderManager_$callClinit();
    nms_RenderManager_instance.$worldObj4 = $var1;
    $this.$worldObj5 = $var1;
    $this.$field_1438_u = nms_RenderBlocks__init_1($var1);
    if ($var1 !== null) {
        nms_World_addWorldAccess($var1, $this);
        nms_RenderGlobal_func_958_a($this);
    }
}
function nms_RenderGlobal_func_958_a($this) {
    var $var1, $var2, $var3, $var4, var$5, $var5, $var6, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, $var7;
    a: {
        nms_Block_$callClinit();
        nms_BlockLeaves_setGraphicsLevel(nms_Block_leaves, $this.$mc8.$gameSettings.$fancyGraphics);
        $this.$field_1425_H = $this.$mc8.$gameSettings.$renderDistance;
        if ($this.$field_1444_o !== null) {
            $var1 = 0;
            while (true) {
                if ($var1 >= $this.$field_1444_o.data.length)
                    break a;
                nms_WorldRenderer_func_1204_c($this.$field_1444_o.data[$var1]);
                $var1 = $var1 + 1 | 0;
            }
        }
    }
    $var1 = 64 << (3 - $this.$field_1425_H | 0);
    if ($var1 > 400)
        $var1 = 400;
    $var1 = ($var1 / 16 | 0) + 1 | 0;
    $this.$field_1443_p = $var1;
    $this.$field_1442_q = 8;
    $this.$field_1441_r = $var1;
    $this.$field_1444_o = $rt_createArray(nms_WorldRenderer, $rt_imul($rt_imul($this.$field_1443_p, $this.$field_1442_q), $this.$field_1441_r));
    $this.$field_1445_n = $rt_createArray(nms_WorldRenderer, $rt_imul($rt_imul($this.$field_1443_p, $this.$field_1442_q), $this.$field_1441_r));
    $var2 = 0;
    $var3 = 0;
    $this.$field_1431_B = 0;
    $this.$field_1430_C = 0;
    $this.$field_1429_D = 0;
    $this.$field_1428_E = $this.$field_1443_p;
    $this.$field_1427_F = $this.$field_1442_q;
    $this.$field_1426_G = $this.$field_1441_r;
    $var4 = 0;
    while ($var4 < $this.$field_1446_m.$size) {
        ju_ArrayList_get($this.$field_1446_m, $var4).$needsUpdate = 0;
        $var4 = $var4 + 1 | 0;
    }
    ju_ArrayList_clear($this.$field_1446_m);
    ju_ArrayList_clear($this.$field_1458_a);
    var$5 = 0;
    while (var$5 < $this.$field_1443_p) {
        $var5 = 0;
        while ($var5 < $this.$field_1442_q) {
            $var6 = 0;
            while ($var6 < $this.$field_1441_r) {
                var$8 = $this.$field_1444_o.data;
                var$9 = $rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0;
                var$10 = new nms_WorldRenderer;
                var$11 = $this.$worldObj5;
                var$12 = $this.$field_1458_a;
                var$13 = var$5 * 16 | 0;
                var$14 = $var5 * 16 | 0;
                var$15 = $var6 * 16 | 0;
                var$16 = $this.$field_1440_s + $var2 | 0;
                nms_WorldRenderer_$callClinit();
                var$10.$field_1744_C = (-1);
                var$10.$field_1749_o = 0;
                var$10.$field_1748_p = $rt_createBooleanArray(2);
                var$10.$field_1734_x = 1;
                var$10.$field_1739_E = 0;
                var$10.$field_1745_B = ju_ArrayList__init_0();
                var$10.$worldObj2 = var$11;
                var$10.$field_1737_F = var$12;
                var$10.$field_1756_h = 16;
                var$10.$field_1757_g = 16;
                var$10.$field_1758_f = 16;
                var$10.$field_1740_t = nms_MathHelper_sqrt_float(($rt_imul(var$10.$field_1758_f, var$10.$field_1758_f) + $rt_imul(var$10.$field_1757_g, var$10.$field_1757_g) | 0) + $rt_imul(var$10.$field_1756_h, var$10.$field_1756_h) | 0) / 2.0;
                var$10.$field_1744_C = var$16;
                var$10.$field_1761_c = (-999);
                nms_WorldRenderer_func_1197_a(var$10, var$13, var$14, var$15);
                var$10.$needsUpdate = 0;
                var$8[var$9] = var$10;
                $this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0].$field_1733_y = 0;
                $this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0].$field_1734_x = 1;
                $this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0].$field_1749_o = 1;
                $var7 = $this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0];
                $var1 = $var3 + 1 | 0;
                $var7.$field_1735_w = $var3;
                nms_WorldRenderer_MarkDirty($this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0]);
                $this.$field_1445_n.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0] = $this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0];
                ju_ArrayList_add($this.$field_1446_m, $this.$field_1444_o.data[$rt_imul($rt_imul($var6, $this.$field_1442_q) + $var5 | 0, $this.$field_1443_p) + var$5 | 0]);
                $var2 = $var2 + 3 | 0;
                $var6 = $var6 + 1 | 0;
                $var3 = $var1;
            }
            $var5 = $var5 + 1 | 0;
        }
        var$5 = var$5 + 1 | 0;
    }
    if ($this.$worldObj5 !== null) {
        $var7 = $this.$mc8.$thePlayer;
        nms_RenderGlobal_func_956_b($this, nms_MathHelper_floor_double($var7.$posX), nms_MathHelper_floor_double($var7.$posY), nms_MathHelper_floor_double($var7.$posZ));
        ju_Arrays_sort($this.$field_1445_n, nms_EntitySorter__init_($var7));
    }
    $this.$field_1424_I = 2;
}
function nms_RenderGlobal_func_951_a($this, $var1, $var2, $var3) {
    var $var4, var$5, var$6, var$7, $var5, $var6, $var7, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            if ($this.$field_1424_I > 0)
                $this.$field_1424_I = $this.$field_1424_I - 1 | 0;
            else {
                nms_TileEntityRenderer_setRenderingContext(nms_TileEntityRenderer_instance, $this.$worldObj5, $this.$renderEngine1, $this.$mc8.$fontRenderer, $this.$mc8.$thePlayer, $var3);
                nms_RenderManager_$callClinit();
                nms_RenderManager_func_857_a(nms_RenderManager_instance, $this.$worldObj5, $this.$renderEngine1, $this.$mc8.$fontRenderer, $this.$mc8.$thePlayer, $this.$mc8.$gameSettings, $var3);
                $this.$field_1423_J = 0;
                $this.$field_1422_K = 0;
                $this.$field_1421_L = 0;
                $var4 = $this.$mc8.$thePlayer;
                var$5 = $var4.$lastTickPosX;
                var$6 = $var4.$posX - $var4.$lastTickPosX;
                var$7 = $var3;
                nms_RenderManager_field_1232_b = var$5 + var$6 * var$7;
                nms_RenderManager_field_1231_c = $var4.$lastTickPosY + ($var4.$posY - $var4.$lastTickPosY) * var$7;
                nms_RenderManager_field_1230_d = $var4.$lastTickPosZ + ($var4.$posZ - $var4.$lastTickPosZ) * var$7;
                nms_TileEntityRenderer_staticPlayerX = $var4.$lastTickPosX + ($var4.$posX - $var4.$lastTickPosX) * var$7;
                nms_TileEntityRenderer_staticPlayerY = $var4.$lastTickPosY + ($var4.$posY - $var4.$lastTickPosY) * var$7;
                nms_TileEntityRenderer_staticPlayerZ = $var4.$lastTickPosZ + ($var4.$posZ - $var4.$lastTickPosZ) * var$7;
                $var5 = $this.$worldObj5.$loadedEntityList;
                $this.$field_1423_J = $var5.$size;
                $var6 = 0;
                while (true) {
                    if ($var6 >= $var5.$size) {
                        $var6 = 0;
                        if ($var6 >= $this.$field_1458_a.$size)
                            break a;
                        else {
                            $var1 = nms_TileEntityRenderer_instance;
                            $var2 = ju_ArrayList_get($this.$field_1458_a, $var6);
                            $ptr = 1;
                            continue main;
                        }
                    }
                    $var7 = ju_ArrayList_get($var5, $var6);
                    if (nms_Entity_func_390_a($var7, $var1) && nms_Frustrum_func_342_a($var2, $var7.$boundingBox)) {
                        if ($var7 !== $this.$mc8.$thePlayer)
                            break;
                        if ($this.$mc8.$gameSettings.$thirdPersonView)
                            break;
                    }
                    $var6 = $var6 + 1 | 0;
                }
                $this.$field_1422_K = $this.$field_1422_K + 1 | 0;
                $var4 = nms_RenderManager_instance;
                $ptr = 2;
                continue main;
            }
        }
        return;
    case 1:
        nms_TileEntityRenderer_renderTileEntity($var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $var6 = $var6 + 1 | 0;
        if ($var6 >= $this.$field_1458_a.$size)
            return;
        $var1 = nms_TileEntityRenderer_instance;
        $var2 = ju_ArrayList_get($this.$field_1458_a, $var6);
        continue main;
    case 2:
        nms_RenderManager_func_854_a($var4, $var7, $var3);
        if ($rt_suspending()) {
            break main;
        }
        while (true) {
            $var6 = $var6 + 1 | 0;
            if ($var6 >= $var5.$size) {
                $var6 = 0;
                if ($var6 >= $this.$field_1458_a.$size)
                    return;
                $var1 = nms_TileEntityRenderer_instance;
                $var2 = ju_ArrayList_get($this.$field_1458_a, $var6);
                $ptr = 1;
                continue main;
            }
            $var7 = ju_ArrayList_get($var5, $var6);
            if (!nms_Entity_func_390_a($var7, $var1))
                continue;
            if (!nms_Frustrum_func_342_a($var2, $var7.$boundingBox))
                continue;
            if ($var7 !== $this.$mc8.$thePlayer)
                break;
            if (!$this.$mc8.$gameSettings.$thirdPersonView)
                continue;
            else
                break;
        }
        $this.$field_1422_K = $this.$field_1422_K + 1 | 0;
        $var4 = nms_RenderManager_instance;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, var$5, var$6, var$7, $var5, $var6, $var7, $ptr);
}
function nms_RenderGlobal_func_953_b($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(474)), $this.$field_1417_P), $rt_s(14)), $this.$field_1420_M), $rt_s(475)), $this.$field_1419_N), $rt_s(476)), $this.$field_1418_O), $rt_s(477)), $this.$field_1416_Q));
}
function nms_RenderGlobal_func_957_c($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(478)), $this.$field_1422_K), $rt_s(14)), $this.$field_1423_J), $rt_s(479)), $this.$field_1421_L), $rt_s(480)), ($this.$field_1423_J - $this.$field_1421_L | 0) - $this.$field_1422_K | 0));
}
function nms_RenderGlobal_func_956_b($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, var$7, $var7, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15;
    $var2 = $var1 + (-8) | 0;
    $var3 = $var3 + (-8) | 0;
    $this.$field_1431_B = 2147483647;
    $this.$field_1430_C = 2147483647;
    $this.$field_1429_D = 2147483647;
    $this.$field_1428_E = (-2147483648);
    $this.$field_1427_F = (-2147483648);
    $this.$field_1426_G = (-2147483648);
    $var4 = $this.$field_1443_p * 16 | 0;
    $var5 = $var4 / 2 | 0;
    $var6 = 0;
    var$7 = $var4 - 1 | 0;
    while ($var6 < $this.$field_1443_p) {
        $var7 = $var6 * 16 | 0;
        $var8 = ($var7 + $var5 | 0) - $var2 | 0;
        if ($var8 < 0)
            $var8 = $var8 - var$7 | 0;
        $var7 = $var7 - $rt_imul($var8 / $var4 | 0, $var4) | 0;
        if ($var7 < $this.$field_1431_B)
            $this.$field_1431_B = $var7;
        if ($var7 > $this.$field_1428_E)
            $this.$field_1428_E = $var7;
        $var9 = 0;
        while ($var9 < $this.$field_1441_r) {
            $var10 = $var9 * 16 | 0;
            $var11 = ($var10 + $var5 | 0) - $var3 | 0;
            if ($var11 < 0)
                $var11 = $var11 - var$7 | 0;
            $var8 = $var10 - $rt_imul($var11 / $var4 | 0, $var4) | 0;
            if ($var8 < $this.$field_1429_D)
                $this.$field_1429_D = $var8;
            if ($var8 > $this.$field_1426_G)
                $this.$field_1426_G = $var8;
            $var12 = 0;
            while ($var12 < $this.$field_1442_q) {
                $var13 = $var12 * 16 | 0;
                if ($var13 < $this.$field_1430_C)
                    $this.$field_1430_C = $var13;
                if ($var13 > $this.$field_1427_F)
                    $this.$field_1427_F = $var13;
                $var14 = $this.$field_1444_o.data[$rt_imul($rt_imul($var9, $this.$field_1442_q) + $var12 | 0, $this.$field_1443_p) + $var6 | 0];
                $var15 = $var14.$needsUpdate;
                nms_WorldRenderer_func_1197_a($var14, $var7, $var13, $var8);
                if (!$var15 && $var14.$needsUpdate)
                    ju_ArrayList_add($this.$field_1446_m, $var14);
                $var12 = $var12 + 1 | 0;
            }
            $var9 = $var9 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_RenderGlobal_func_943_a($this, $var1, $var2, $var3) {
    var $var11, $var13, $var15;
    if ($this.$mc8.$gameSettings.$renderDistance != $this.$field_1425_H)
        nms_RenderGlobal_func_958_a($this);
    if (!$var2) {
        $this.$field_1420_M = 0;
        $this.$field_1419_N = 0;
        $this.$field_1418_O = 0;
        $this.$field_1417_P = 0;
        $this.$field_1416_Q = 0;
    }
    $var11 = $var1.$posX - $this.$field_1453_f;
    $var13 = $var1.$posY - $this.$field_1452_g;
    $var15 = $var1.$posZ - $this.$field_1451_h;
    if ($var11 * $var11 + $var13 * $var13 + $var15 * $var15 > 16.0) {
        $this.$field_1453_f = $var1.$posX;
        $this.$field_1452_g = $var1.$posY;
        $this.$field_1451_h = $var1.$posZ;
        nms_RenderGlobal_func_956_b($this, nms_MathHelper_floor_double($var1.$posX), nms_MathHelper_floor_double($var1.$posY), nms_MathHelper_floor_double($var1.$posZ));
        ju_Arrays_sort($this.$field_1445_n, nms_EntitySorter__init_($var1));
    }
    return 0 + nms_RenderGlobal_func_952_a($this, 0, $this.$field_1445_n.data.length, $var2, $var3) | 0;
}
function nms_RenderGlobal_func_952_a($this, $var7, $var2, $var3, $var4) {
    var $var6, $var19, $var20, $var10, $var12, $var14, $var15, $var8, $var16, $var17, $var18;
    ju_ArrayList_clear($this.$field_1415_R);
    $var6 = 0;
    while ($var7 < $var2) {
        if (!$var3) {
            $this.$field_1420_M = $this.$field_1420_M + 1 | 0;
            if ($this.$field_1445_n.data[$var7].$field_1748_p.data[$var3])
                $this.$field_1416_Q = $this.$field_1416_Q + 1 | 0;
            else if ($this.$field_1445_n.data[$var7].$field_1749_o)
                $this.$field_1417_P = $this.$field_1417_P + 1 | 0;
            else
                $this.$field_1419_N = $this.$field_1419_N + 1 | 0;
        }
        if (!$this.$field_1445_n.data[$var7].$field_1748_p.data[$var3] && $this.$field_1445_n.data[$var7].$field_1749_o && $this.$field_1445_n.data[$var7].$field_1734_x && nms_WorldRenderer_func_1200_a($this.$field_1445_n.data[$var7], $var3) >= 0) {
            ju_ArrayList_add($this.$field_1415_R, $this.$field_1445_n.data[$var7]);
            $var6 = $var6 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
    $var19 = $this.$mc8.$thePlayer;
    $var20 = $var19.$lastTickPosX + ($var19.$posX - $var19.$lastTickPosX) * $var4;
    $var10 = $var19.$lastTickPosY + ($var19.$posY - $var19.$lastTickPosY) * $var4;
    $var12 = $var19.$lastTickPosZ + ($var19.$posZ - $var19.$lastTickPosZ) * $var4;
    $var14 = 0;
    $var15 = 0;
    while ($var15 < $this.$field_1414_S.data.length) {
        nms_RenderList_func_859_b($this.$field_1414_S.data[$var15]);
        $var15 = $var15 + 1 | 0;
    }
    $var8 = 0;
    while ($var8 < $this.$field_1415_R.$size) {
        $var16 = ju_ArrayList_get($this.$field_1415_R, $var8);
        $var17 = (-1);
        $var18 = 0;
        while ($var18 < $var14) {
            if (nms_RenderList_func_862_a($this.$field_1414_S.data[$var18], $var16.$field_1755_i, $var16.$field_1754_j, $var16.$field_1753_k))
                $var17 = $var18;
            $var18 = $var18 + 1 | 0;
        }
        if ($var17 < 0) {
            $var7 = $var14 + 1 | 0;
            nms_RenderList_func_861_a($this.$field_1414_S.data[$var14], $var16.$field_1755_i, $var16.$field_1754_j, $var16.$field_1753_k, $var20, $var10, $var12);
            $var17 = $var14;
            $var14 = $var7;
        }
        nms_RenderList_func_858_a($this.$field_1414_S.data[$var17], nms_WorldRenderer_func_1200_a($var16, $var3));
        $var8 = $var8 + 1 | 0;
    }
    nms_RenderGlobal_func_944_a($this, $var3, $var4);
    return $var6;
}
function nms_RenderGlobal_func_944_a($this, $var1, $var2) {
    var $var4;
    $var4 = 0;
    while ($var4 < $this.$field_1414_S.data.length) {
        nms_RenderList_func_860_a($this.$field_1414_S.data[$var4]);
        $var4 = $var4 + 1 | 0;
    }
}
function nms_RenderGlobal_func_945_d($this) {
    $this.$field_1435_x = $this.$field_1435_x + 1 | 0;
}
function nms_RenderGlobal_func_4142_a($this, $var1) {
    var $var2, $var6, $var7, $var8, $var11, $var14, $var15, $var10, $var12, $var13, $var9, var$13, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$13 = $thread.pop();$var9 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();$var10 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var11 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$mc8.$theWorld.$worldProvider.$field_4220_c)
            return;
        olo_EaglerAdapterGL30_glDisable(3553);
        $var2 = nms_World_func_4079_a($this.$worldObj5, $this.$mc8.$thePlayer, $var1);
        $var6 = $var2.$xCoord;
        $var7 = $var2.$yCoord;
        $var8 = $var2.$zCoord;
        if ($this.$mc8.$gameSettings.$anaglyph) {
            $var11 = $var6 * 30.0;
            $var6 = ($var11 + $var7 * 59.0 + $var8 * 11.0) / 100.0;
            $var7 = ($var11 + $var7 * 70.0) / 100.0;
            $var8 = ($var11 + $var8 * 70.0) / 100.0;
        }
        olo_EaglerAdapterGL30_glColor3f($var6, $var7, $var8);
        nms_Tessellator_$callClinit();
        $var14 = nms_Tessellator_instance;
        olo_EaglerAdapterGL30_glDepthMask(0);
        olo_EaglerAdapterGL30_glEnable(2912);
        olo_EaglerAdapterGL30_glColor3f($var6, $var7, $var8);
        olo_EaglerAdapterGL30_glCallList($this.$field_1433_z);
        olo_EaglerAdapterGL30_glDisable(2912);
        olo_EaglerAdapterGL30_glDisable(3008);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        $var15 = nms_WorldProvider_func_4097_b($this.$worldObj5.$worldProvider, nms_World_getCelestialAngle($this.$worldObj5, $var1), $var1);
        if ($var15 !== null) {
            olo_EaglerAdapterGL30_glDisable(3553);
            olo_EaglerAdapterGL30_glPushMatrix();
            olo_EaglerAdapterGL30_glRotatef(90.0, 1.0, 0.0, 0.0);
            $var11 = nms_World_getCelestialAngle($this.$worldObj5, $var1) <= 0.5 ? 0.0 : 180.0;
            $var15 = $var15.data;
            olo_EaglerAdapterGL30_glRotatef($var11, 0.0, 0.0, 1.0);
            nms_Tessellator_startDrawing($var14, 6);
            nms_Tessellator_setColorRGBA_F($var14, $var15[0], $var15[1], $var15[2], $var15[3]);
            nms_Tessellator_addVertex($var14, 0.0, 100.0, 0.0);
            nms_Tessellator_setColorRGBA_F($var14, $var15[0], $var15[1], $var15[2], 0.0);
            $var10 = 0;
            while ($var10 <= 16) {
                $var11 = $var10 * 3.1415927410125732 * 2.0 / 16.0;
                $var12 = nms_MathHelper_sin($var11);
                $var13 = nms_MathHelper_cos($var11);
                nms_Tessellator_addVertex($var14, $var12 * 120.0, $var13 * 120.0,  -$var13 * 40.0 * $var15[3]);
                $var10 = $var10 + 1 | 0;
            }
            nms_Tessellator_draw($var14);
            olo_EaglerAdapterGL30_glPopMatrix();
        }
        olo_EaglerAdapterGL30_glEnable(3553);
        olo_EaglerAdapterGL30_glBlendFunc(1, 1);
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef(0.0, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef(nms_World_getCelestialAngle($this.$worldObj5, $var1) * 360.0, 1.0, 0.0, 0.0);
        $var9 = 3553;
        $var2 = $this.$renderEngine1;
        var$13 = $rt_s(481);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var2, var$13);
        if ($rt_suspending()) {
            break main;
        }
        $var10 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var9, $var10);
        nms_Tessellator_startDrawingQuads($var14);
        nms_Tessellator_addVertexWithUV($var14, (-30.0), 100.0, (-30.0), 0.0, 0.0);
        nms_Tessellator_addVertexWithUV($var14, 30.0, 100.0, (-30.0), 1.0, 0.0);
        nms_Tessellator_addVertexWithUV($var14, 30.0, 100.0, 30.0, 1.0, 1.0);
        nms_Tessellator_addVertexWithUV($var14, (-30.0), 100.0, 30.0, 0.0, 1.0);
        nms_Tessellator_draw($var14);
        $var9 = 3553;
        $var2 = $this.$renderEngine1;
        var$13 = $rt_s(482);
        $ptr = 2;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var2, var$13);
        if ($rt_suspending()) {
            break main;
        }
        $var10 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var9, $var10);
        nms_Tessellator_startDrawingQuads($var14);
        nms_Tessellator_addVertexWithUV($var14, (-20.0), (-100.0), 20.0, 1.0, 1.0);
        nms_Tessellator_addVertexWithUV($var14, 20.0, (-100.0), 20.0, 0.0, 1.0);
        nms_Tessellator_addVertexWithUV($var14, 20.0, (-100.0), (-20.0), 0.0, 0.0);
        nms_Tessellator_addVertexWithUV($var14, (-20.0), (-100.0), (-20.0), 1.0, 0.0);
        nms_Tessellator_draw($var14);
        olo_EaglerAdapterGL30_glDisable(3553);
        $var11 = nms_World_func_679_f($this.$worldObj5, $var1);
        if ($var11 > 0.0) {
            olo_EaglerAdapterGL30_glColor4f($var11, $var11, $var11, $var11);
            olo_EaglerAdapterGL30_glCallList($this.$field_1434_y);
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glEnable(2912);
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glColor3f($var6 * 0.20000000298023224 + 0.03999999910593033, $var7 * 0.20000000298023224 + 0.03999999910593033, $var8 * 0.6000000238418579 + 0.10000000149011612);
        olo_EaglerAdapterGL30_glDisable(3553);
        olo_EaglerAdapterGL30_glCallList($this.$field_1432_A);
        olo_EaglerAdapterGL30_glEnable(3553);
        olo_EaglerAdapterGL30_glDepthMask(1);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var6, $var7, $var8, $var11, $var14, $var15, $var10, $var12, $var13, $var9, var$13, $ptr);
}
function nms_RenderGlobal_func_4141_b($this, $var1) {
    var $var22, var$3, $var13, $var2, $var3, $var5, $var15, $var6, var$10, $var16, $var10, $var11, $var12, $var17, $var18, $var19, var$18, $var20, $var21, var$21, $var21_0, var$23, var$24, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$24 = $thread.pop();var$23 = $thread.pop();$var21_0 = $thread.pop();var$21 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();var$18 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var16 = $thread.pop();var$10 = $thread.pop();$var6 = $thread.pop();$var15 = $thread.pop();$var5 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var13 = $thread.pop();var$3
        = $thread.pop();$var22 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$mc8.$theWorld.$worldProvider.$field_4220_c)
            return;
        if ($this.$mc8.$gameSettings.$fancyGraphics) {
            $ptr = 2;
            continue main;
        }
        olo_EaglerAdapterGL30_glDisable(2884);
        $var22 = $this.$mc8.$thePlayer.$lastTickPosY;
        var$3 = $this.$mc8.$thePlayer.$posY - $this.$mc8.$thePlayer.$lastTickPosY;
        $var13 = $var1;
        $var2 = $var22 + var$3 * $var13;
        $var3 = 32;
        nms_Tessellator_$callClinit();
        $var5 = nms_Tessellator_instance;
        $var15 = 3553;
        $var6 = $this.$renderEngine1;
        var$10 = $rt_s(483);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var6, var$10);
        if ($rt_suspending()) {
            break main;
        }
        $var16 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var15, $var16);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        $var6 = nms_World_func_628_d($this.$worldObj5, $var1);
        $var10 = $var6.$xCoord;
        $var11 = $var6.$yCoord;
        $var12 = $var6.$zCoord;
        if ($this.$mc8.$gameSettings.$anaglyph) {
            $var17 = $var10 * 30.0;
            $var10 = ($var17 + $var11 * 59.0 + $var12 * 11.0) / 100.0;
            $var11 = ($var17 + $var11 * 70.0) / 100.0;
            $var12 = ($var17 + $var12 * 70.0) / 100.0;
        }
        $var22 = $this.$mc8.$thePlayer.$prevPosX + ($this.$mc8.$thePlayer.$posX - $this.$mc8.$thePlayer.$prevPosX) * $var13 + ($this.$field_1435_x + $var1) * 0.029999999329447746;
        $var13 = $this.$mc8.$thePlayer.$prevPosZ + ($this.$mc8.$thePlayer.$posZ - $this.$mc8.$thePlayer.$prevPosZ) * $var13;
        $var15 = nms_MathHelper_floor_double($var22 / 2048.0);
        $var16 = nms_MathHelper_floor_double($var13 / 2048.0);
        $var22 = $var22 - ($var15 * 2048 | 0);
        var$3 = $var13 - ($var16 * 2048 | 0);
        $var17 = 120.0 - $var2 + 0.33000001311302185;
        $var18 = $var22 * 4.8828125E-4;
        $var19 = var$3 * 4.8828125E-4;
        nms_Tessellator_startDrawingQuads($var5);
        nms_Tessellator_setColorRGBA_F($var5, $var10, $var11, $var12, 0.800000011920929);
        var$18 = $var17;
        $var20 = (-256);
        while ($var20 < 256) {
            $var21 = (-256);
            while ($var21 < 256) {
                $var15 = $var20 + 0 | 0;
                var$21 = $var15;
                $var21_0 = $var21 + $var3 | 0;
                var$3 = $var21_0;
                var$23 = $var15 * 4.8828125E-4 + $var18;
                $var13 = $var21_0 * 4.8828125E-4 + $var19;
                nms_Tessellator_addVertexWithUV($var5, var$21, var$18, var$3, var$23, $var13);
                $var15 = $var20 + $var3 | 0;
                var$24 = $var15;
                $var22 = $var15 * 4.8828125E-4 + $var18;
                nms_Tessellator_addVertexWithUV($var5, var$24, var$18, var$3, $var22, $var13);
                $var15 = $var21 + 0 | 0;
                var$3 = $var15;
                $var13 = $var15 * 4.8828125E-4 + $var19;
                nms_Tessellator_addVertexWithUV($var5, var$24, var$18, var$3, $var22, $var13);
                nms_Tessellator_addVertexWithUV($var5, var$21, var$18, var$3, var$23, $var13);
                $var21 = $var21_0;
            }
            $var20 = $var20 + $var3 | 0;
        }
        nms_Tessellator_draw($var5);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glEnable(2884);
        return;
    case 2:
        nms_RenderGlobal_func_6510_c($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var22, var$3, $var13, $var2, $var3, $var5, $var15, $var6, var$10, $var16, $var10, $var11, $var12, $var17, $var18, $var19, var$18, $var20, $var21, var$21, $var21_0, var$23, var$24, $ptr);
}
function nms_RenderGlobal_func_6510_c($this, $var1) {
    var $var6, $var8, var$4, $var2, $var3, $var4, $var10, $var11, $var12, $var32, $var13, var$13, $var17, $var18, $var19, var$17, $var20, $var21, $var25, var$21, var$22, var$23, var$24, $var26, $var27, $var28, $var29, $var30, $var31, var$31, var$32, var$33, $var32_0, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var32_0 = $thread.pop();var$33 = $thread.pop();var$32 = $thread.pop();var$31 = $thread.pop();$var31 = $thread.pop();$var30 = $thread.pop();$var29 = $thread.pop();$var28 = $thread.pop();$var27 = $thread.pop();$var26 = $thread.pop();var$24 = $thread.pop();var$23 = $thread.pop();var$22 = $thread.pop();var$21 = $thread.pop();$var25 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();var$17 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();var$13
        = $thread.pop();$var13 = $thread.pop();$var32 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();var$4 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glDisable(2884);
        $var6 = $this.$mc8.$thePlayer.$lastTickPosY;
        $var8 = $this.$mc8.$thePlayer.$posY - $this.$mc8.$thePlayer.$lastTickPosY;
        var$4 = $var1;
        $var2 = $var6 + $var8 * var$4;
        nms_Tessellator_$callClinit();
        $var3 = nms_Tessellator_instance;
        $var4 = 12.0;
        $var6 = ($this.$mc8.$thePlayer.$prevPosX + ($this.$mc8.$thePlayer.$posX - $this.$mc8.$thePlayer.$prevPosX) * var$4 + ($this.$field_1435_x + $var1) * 0.029999999329447746) / 12.0;
        $var8 = ($this.$mc8.$thePlayer.$prevPosZ + ($this.$mc8.$thePlayer.$posZ - $this.$mc8.$thePlayer.$prevPosZ) * var$4) / 12.0 + 0.33000001311302185;
        $var10 = 108.0 - $var2 + 0.33000001311302185;
        $var11 = nms_MathHelper_floor_double($var6 / 2048.0);
        $var12 = nms_MathHelper_floor_double($var8 / 2048.0);
        var$4 = $var6 - ($var11 * 2048 | 0);
        $var8 = $var8 - ($var12 * 2048 | 0);
        $var32 = 3553;
        $var13 = $this.$renderEngine1;
        var$13 = $rt_s(483);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var13, var$13);
        if ($rt_suspending()) {
            break main;
        }
        $var11 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var32, $var11);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        $var13 = nms_World_func_628_d($this.$worldObj5, $var1);
        $var17 = $var13.$xCoord;
        $var18 = $var13.$yCoord;
        $var19 = $var13.$zCoord;
        if ($this.$mc8.$gameSettings.$anaglyph) {
            $var1 = $var17 * 30.0;
            $var17 = ($var1 + $var18 * 59.0 + $var19 * 11.0) / 100.0;
            $var18 = ($var1 + $var18 * 70.0) / 100.0;
            $var19 = ($var1 + $var19 * 70.0) / 100.0;
        }
        var$17 = nms_MathHelper_floor_double(var$4) * 0.00390625;
        $var1 = nms_MathHelper_floor_double($var8) * 0.00390625;
        $var20 = var$4 - nms_MathHelper_floor_double(var$4);
        $var21 = $var8 - nms_MathHelper_floor_double($var8);
        olo_EaglerAdapterGL30_glScalef($var4, 1.0, $var4);
        $var25 = 0;
        $var12 = $rt_compare($var10, (-5.0));
        var$21 = $var10 + 0.0;
        var$22 = $rt_compare($var10, 5.0);
        $var2 = $var10 + 4.0;
        var$23 = $var2 - 9.765625E-4;
        var$24 = $var2;
        while ($var25 < 2) {
            if ($var25)
                olo_EaglerAdapterGL30_glColorMask(1, 1, 1, 1);
            else
                olo_EaglerAdapterGL30_glColorMask(0, 0, 0, 0);
            $var26 = (-2);
            while ($var26 <= 3) {
                $var27 = (-2);
                while ($var27 <= 3) {
                    nms_Tessellator_startDrawingQuads($var3);
                    $var28 = $var26 * 8 | 0;
                    $var29 = $var27 * 8 | 0;
                    $var30 = $var28 - $var20;
                    $var31 = $var29 - $var21;
                    if ($var12 > 0) {
                        nms_Tessellator_setColorRGBA_F($var3, $var17 * 0.699999988079071, $var18 * 0.699999988079071, $var19 * 0.699999988079071, 0.800000011920929);
                        nms_Tessellator_setNormal($var3, 0.0, (-1.0), 0.0);
                        var$31 = $var30 + 0.0;
                        $var6 = $var31 + 8.0;
                        $var8 = ($var28 + 0.0) * 0.00390625 + var$17;
                        var$4 = ($var29 + 8.0) * 0.00390625 + $var1;
                        nms_Tessellator_addVertexWithUV($var3, var$31, var$21, $var6, $var8, var$4);
                        var$32 = $var30 + 8.0;
                        var$33 = ($var28 + 8.0) * 0.00390625 + var$17;
                        nms_Tessellator_addVertexWithUV($var3, var$32, var$21, $var6, var$33, var$4);
                        $var6 = $var31 + 0.0;
                        var$4 = ($var29 + 0.0) * 0.00390625 + $var1;
                        nms_Tessellator_addVertexWithUV($var3, var$32, var$21, $var6, var$33, var$4);
                        nms_Tessellator_addVertexWithUV($var3, var$31, var$21, $var6, $var8, var$4);
                    }
                    if (var$22 <= 0) {
                        nms_Tessellator_setColorRGBA_F($var3, $var17, $var18, $var19, 0.800000011920929);
                        nms_Tessellator_setNormal($var3, 0.0, 1.0, 0.0);
                        $var6 = $var30 + 0.0;
                        $var8 = $var31 + 8.0;
                        var$4 = ($var28 + 0.0) * 0.00390625 + var$17;
                        var$32 = ($var29 + 8.0) * 0.00390625 + $var1;
                        nms_Tessellator_addVertexWithUV($var3, $var6, var$23, $var8, var$4, var$32);
                        var$33 = $var30 + 8.0;
                        var$31 = ($var28 + 8.0) * 0.00390625 + var$17;
                        nms_Tessellator_addVertexWithUV($var3, var$33, var$23, $var8, var$31, var$32);
                        $var8 = $var31 + 0.0;
                        var$32 = ($var29 + 0.0) * 0.00390625 + $var1;
                        nms_Tessellator_addVertexWithUV($var3, var$33, var$23, $var8, var$31, var$32);
                        nms_Tessellator_addVertexWithUV($var3, $var6, var$23, $var8, var$4, var$32);
                    }
                    a: {
                        nms_Tessellator_setColorRGBA_F($var3, $var17 * 0.8999999761581421, $var18 * 0.8999999761581421, $var19 * 0.8999999761581421, 0.800000011920929);
                        if ($var26 > (-1)) {
                            nms_Tessellator_setNormal($var3, (-1.0), 0.0, 0.0);
                            $var32_0 = 0;
                            $var8 = $var31 + 8.0;
                            var$32 = ($var29 + 8.0) * 0.00390625 + $var1;
                            var$33 = $var31 + 0.0;
                            var$31 = ($var29 + 0.0) * 0.00390625 + $var1;
                            while (true) {
                                if ($var32_0 >= 8)
                                    break a;
                                $var2 = $var32_0;
                                $var6 = $var30 + $var2 + 0.0;
                                var$4 = ($var28 + $var2 + 0.5) * 0.00390625 + var$17;
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$21, $var8, var$4, var$32);
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$24, $var8, var$4, var$32);
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$24, var$33, var$4, var$31);
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$21, var$33, var$4, var$31);
                                $var32_0 = $var32_0 + 1 | 0;
                            }
                        }
                    }
                    b: {
                        if ($var26 <= 1) {
                            nms_Tessellator_setNormal($var3, 1.0, 0.0, 0.0);
                            $var32_0 = 0;
                            var$4 = $var31 + 8.0;
                            var$33 = ($var29 + 8.0) * 0.00390625 + $var1;
                            var$31 = $var31 + 0.0;
                            $var6 = ($var29 + 0.0) * 0.00390625 + $var1;
                            while (true) {
                                if ($var32_0 >= 8)
                                    break b;
                                $var2 = $var32_0;
                                $var8 = $var30 + $var2 + 1.0 - 9.765625E-4;
                                var$32 = ($var28 + $var2 + 0.5) * 0.00390625 + var$17;
                                nms_Tessellator_addVertexWithUV($var3, $var8, var$21, var$4, var$32, var$33);
                                nms_Tessellator_addVertexWithUV($var3, $var8, var$24, var$4, var$32, var$33);
                                nms_Tessellator_addVertexWithUV($var3, $var8, var$24, var$31, var$32, $var6);
                                nms_Tessellator_addVertexWithUV($var3, $var8, var$21, var$31, var$32, $var6);
                                $var32_0 = $var32_0 + 1 | 0;
                            }
                        }
                    }
                    c: {
                        nms_Tessellator_setColorRGBA_F($var3, $var17 * 0.800000011920929, $var18 * 0.800000011920929, $var19 * 0.800000011920929, 0.800000011920929);
                        if ($var27 > (-1)) {
                            nms_Tessellator_setNormal($var3, 0.0, 0.0, (-1.0));
                            $var32 = 0;
                            $var6 = $var30 + 0.0;
                            var$4 = ($var28 + 0.0) * 0.00390625 + var$17;
                            var$33 = $var30 + 8.0;
                            var$31 = ($var28 + 8.0) * 0.00390625 + var$17;
                            while (true) {
                                if ($var32 >= 8)
                                    break c;
                                $var2 = $var32;
                                $var8 = $var31 + $var2 + 0.0;
                                var$32 = ($var29 + $var2 + 0.5) * 0.00390625 + $var1;
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$24, $var8, var$4, var$32);
                                nms_Tessellator_addVertexWithUV($var3, var$33, var$24, $var8, var$31, var$32);
                                nms_Tessellator_addVertexWithUV($var3, var$33, var$21, $var8, var$31, var$32);
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$21, $var8, var$4, var$32);
                                $var32 = $var32 + 1 | 0;
                            }
                        }
                    }
                    d: {
                        if ($var27 <= 1) {
                            nms_Tessellator_setNormal($var3, 0.0, 0.0, 1.0);
                            $var32 = 0;
                            $var6 = $var30 + 0.0;
                            var$4 = ($var28 + 0.0) * 0.00390625 + var$17;
                            var$33 = $var30 + 8.0;
                            var$31 = ($var28 + 8.0) * 0.00390625 + var$17;
                            while (true) {
                                if ($var32 >= 8)
                                    break d;
                                $var2 = $var32;
                                $var8 = $var31 + $var2 + 1.0 - 9.765625E-4;
                                var$32 = ($var29 + $var2 + 0.5) * 0.00390625 + $var1;
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$24, $var8, var$4, var$32);
                                nms_Tessellator_addVertexWithUV($var3, var$33, var$24, $var8, var$31, var$32);
                                nms_Tessellator_addVertexWithUV($var3, var$33, var$21, $var8, var$31, var$32);
                                nms_Tessellator_addVertexWithUV($var3, $var6, var$21, $var8, var$4, var$32);
                                $var32 = $var32 + 1 | 0;
                            }
                        }
                    }
                    nms_Tessellator_draw($var3);
                    $var27 = $var27 + 1 | 0;
                }
                $var26 = $var26 + 1 | 0;
            }
            $var25 = $var25 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glEnable(2884);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var6, $var8, var$4, $var2, $var3, $var4, $var10, $var11, $var12, $var32, $var13, var$13, $var17, $var18, $var19, var$17, $var20, $var21, $var25, var$21, var$22, var$23, var$24, $var26, $var27, $var28, $var29, $var30, $var31, var$31, var$32, var$33, $var32_0, $ptr);
}
function nms_RenderGlobal_func_948_a($this, $var1, $var2) {
    var $var6, var$4, $var3, $var4, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();var$4 = $thread.pop();$var6 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var6 = $this.$field_1446_m;
        var$4 = new nms_RenderSorter;
        var$4.$field_4274_a = $var1;
        ju_Collections_sort($var6, var$4);
        $var3 = $this.$field_1446_m.$size - 1 | 0;
        $var4 = $this.$field_1446_m.$size;
        $var5 = 0;
        a: {
            while ($var5 < $var4) {
                $var6 = ju_ArrayList_get($this.$field_1446_m, $var3 - $var5 | 0);
                if (!$var2) {
                    if (nms_WorldRenderer_func_1202_a($var6, $var1) <= 1024.0)
                        break a;
                    if (!$var6.$field_1749_o) {
                        if ($var5 < 1)
                            break a;
                        return 0;
                    }
                    if ($var5 < 3)
                        break a;
                    return 0;
                }
                if ($var6.$field_1749_o)
                    break a;
                $var5 = $var5 + 1 | 0;
            }
            return $this.$field_1446_m.$size ? 0 : 1;
        }
        $ptr = 1;
    case 1:
        nms_WorldRenderer_func_1198_a($var6);
        if ($rt_suspending()) {
            break main;
        }
        ju_ArrayList_remove0($this.$field_1446_m, $var6);
        $var6.$needsUpdate = 0;
        a: {
            while (true) {
                $var5 = $var5 + 1 | 0;
                if ($var5 >= $var4)
                    break;
                $var6 = ju_ArrayList_get($this.$field_1446_m, $var3 - $var5 | 0);
                if (!$var2) {
                    if (nms_WorldRenderer_func_1202_a($var6, $var1) <= 1024.0)
                        break a;
                    if (!$var6.$field_1749_o) {
                        if ($var5 < 1)
                            break a;
                        return 0;
                    }
                    if ($var5 < 3)
                        break a;
                    return 0;
                }
                if ($var6.$field_1749_o)
                    break a;
            }
            return $this.$field_1446_m.$size ? 0 : 1;
        }
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var6, var$4, $var3, $var4, $var5, $ptr);
}
function nms_RenderGlobal_func_959_a($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var9, $var16, $var8, $var7, $var10, $var12, $var14, var$14, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$14 = $thread.pop();$var14 = $thread.pop();$var12 = $thread.pop();$var10 = $thread.pop();$var7 = $thread.pop();$var8 = $thread.pop();$var16 = $thread.pop();$var9 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            nms_Tessellator_$callClinit();
            $var6 = nms_Tessellator_instance;
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glEnable(3008);
            olo_EaglerAdapterGL30_glBlendFunc(770, 1);
            olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, (nms_MathHelper_sin(Long_toNumber(jl_System_currentTimeMillis()) / 100.0) * 0.20000000298023224 + 0.4000000059604645) * 0.5);
            if (!$var3) {
                if ($this.$field_1450_i <= 0.0)
                    break a;
                olo_EaglerAdapterGL30_glBlendFunc(774, 768);
                $var4 = $this.$renderEngine1;
                $var9 = $rt_s(193);
                $ptr = 2;
                continue main;
            }
            if ($var4 !== null) {
                olo_EaglerAdapterGL30_glBlendFunc(770, 771);
                $var16 = nms_MathHelper_sin(Long_toNumber(jl_System_currentTimeMillis()) / 100.0) * 0.20000000298023224 + 0.800000011920929;
                olo_EaglerAdapterGL30_glColor4f($var16, $var16, $var16, nms_MathHelper_sin(Long_toNumber(jl_System_currentTimeMillis()) / 200.0) * 0.20000000298023224 + 0.5);
                $var1 = $this.$renderEngine1;
                $var4 = $rt_s(193);
                $ptr = 1;
                continue main;
            }
        }
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glDisable(3008);
        return;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var1, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var8 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(3553, $var8);
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glDisable(3008);
        return;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var4, $var9);
        if ($rt_suspending()) {
            break main;
        }
        $var7 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(3553, $var7);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 0.5);
        olo_EaglerAdapterGL30_glPushMatrix();
        $var8 = nms_World_getBlockId($this.$worldObj5, $var2.$blockX, $var2.$blockY, $var2.$blockZ);
        if ($var8 <= 0)
            $var9 = null;
        else {
            nms_Block_$callClinit();
            $var9 = nms_Block_blocksList.data[$var8];
        }
        olo_EaglerAdapterGL30_glDisable(3008);
        olo_EaglerAdapterGL30_glPolygonOffset((-3.0), (-3.0));
        olo_EaglerAdapterGL30_glEnable(32823);
        nms_Tessellator_startDrawingQuads($var6);
        $var10 = $var1.$lastTickPosX;
        $var12 = $var1.$posX - $var1.$lastTickPosX;
        $var14 = $var5;
        nms_Tessellator_setTranslationD($var6,  -($var10 + $var12 * $var14),  -($var1.$lastTickPosY + ($var1.$posY - $var1.$lastTickPosY) * $var14),  -($var1.$lastTickPosZ + ($var1.$posZ - $var1.$lastTickPosZ) * $var14));
        nms_Tessellator_disableColor($var6);
        if ($var9 === null) {
            nms_Block_$callClinit();
            $var9 = nms_Block_stone;
        }
        $var1 = $this.$field_1438_u;
        $var3 = $var2.$blockX;
        $var7 = $var2.$blockY;
        $var8 = $var2.$blockZ;
        var$14 = 240 + ($this.$field_1450_i * 10.0 | 0) | 0;
        $ptr = 3;
    case 3:
        nms_RenderBlocks_renderBlockUsingTexture($var1, $var9, $var3, $var7, $var8, var$14);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_draw($var6);
        nms_Tessellator_setTranslationD($var6, 0.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glPolygonOffset(0.0, 0.0);
        olo_EaglerAdapterGL30_glDisable(32823);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glDisable(3008);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var9, $var16, $var8, $var7, $var10, $var12, $var14, var$14, $ptr);
}
function nms_RenderGlobal_drawSelectionBox($this, $var1, $var2, $var3, $var4, $var5) {
    var $var7, $var8, $var10, $var12;
    if (!$var3 && !$var2.$typeOfHit) {
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        olo_EaglerAdapterGL30_glColor4f(0.0, 0.0, 0.0, 0.4000000059604645);
        olo_EaglerAdapterGL30_glDisable(3553);
        olo_EaglerAdapterGL30_glDepthMask(0);
        $var7 = nms_World_getBlockId($this.$worldObj5, $var2.$blockX, $var2.$blockY, $var2.$blockZ);
        if ($var7 > 0) {
            nms_Block_$callClinit();
            nms_Block_blocksList.data[$var7].$setBlockBoundsBasedOnState($this.$worldObj5, $var2.$blockX, $var2.$blockY, $var2.$blockZ);
            $var8 = $var1.$lastTickPosX;
            $var10 = $var1.$posX - $var1.$lastTickPosX;
            $var12 = $var5;
            $var8 = $var8 + $var10 * $var12;
            $var10 = $var1.$lastTickPosY + ($var1.$posY - $var1.$lastTickPosY) * $var12;
            $var12 = $var1.$lastTickPosZ + ($var1.$posZ - $var1.$lastTickPosZ) * $var12;
            $var1 = nms_AxisAlignedBB_getOffsetBoundingBox(nms_AxisAlignedBB_expands(nms_Block_blocksList.data[$var7].$getSelectedBoundingBoxFromPool($this.$worldObj5, $var2.$blockX, $var2.$blockY, $var2.$blockZ), 0.0020000000949949026, 0.0020000000949949026, 0.0020000000949949026),  -$var8,  -$var10,  -$var12);
            nms_Tessellator_$callClinit();
            $var2 = nms_Tessellator_instance;
            nms_Tessellator_startDrawing($var2, 3);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$minY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$minY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$minY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$minY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$minY0, $var1.$minZ0);
            nms_Tessellator_draw($var2);
            nms_Tessellator_startDrawing($var2, 3);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$maxY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$maxY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$maxY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$maxY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$maxY0, $var1.$minZ0);
            nms_Tessellator_draw($var2);
            nms_Tessellator_startDrawing($var2, 1);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$minY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$maxY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$minY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$maxY0, $var1.$minZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$minY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$maxX0, $var1.$maxY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$minY0, $var1.$maxZ0);
            nms_Tessellator_addVertex($var2, $var1.$minX, $var1.$maxY0, $var1.$maxZ0);
            nms_Tessellator_draw($var2);
        }
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glEnable(3553);
        olo_EaglerAdapterGL30_glDisable(3042);
    }
}
function nms_RenderGlobal_func_949_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var13, $var8, $var9, $var10, $var11, $var12, $var14, $var15, $var16, $var17, $var18, $var19, $var20;
    $var13 = nms_MathHelper_bucketInt($var1, 16);
    $var8 = nms_MathHelper_bucketInt($var2, 16);
    $var9 = nms_MathHelper_bucketInt($var3, 16);
    $var10 = nms_MathHelper_bucketInt($var4, 16);
    $var11 = nms_MathHelper_bucketInt($var5, 16);
    $var12 = nms_MathHelper_bucketInt($var6, 16);
    while ($var13 <= $var10) {
        $var14 = $var13 % $this.$field_1443_p | 0;
        if ($var14 < 0)
            $var14 = $var14 + $this.$field_1443_p | 0;
        $var15 = $var8;
        while ($var15 <= $var11) {
            $var16 = $var15 % $this.$field_1442_q | 0;
            if ($var16 < 0)
                $var16 = $var16 + $this.$field_1442_q | 0;
            $var17 = $var9;
            while ($var17 <= $var12) {
                $var18 = $var17 % $this.$field_1441_r | 0;
                if ($var18 < 0)
                    $var18 = $var18 + $this.$field_1441_r | 0;
                $var19 = $rt_imul($rt_imul($var18, $this.$field_1442_q) + $var16 | 0, $this.$field_1443_p) + $var14 | 0;
                $var20 = $this.$field_1444_o.data[$var19];
                if (!$var20.$needsUpdate)
                    ju_ArrayList_add($this.$field_1446_m, $var20);
                nms_WorldRenderer_MarkDirty($var20);
                $var17 = $var17 + 1 | 0;
            }
            $var15 = $var15 + 1 | 0;
        }
        $var13 = $var13 + 1 | 0;
    }
}
function nms_RenderGlobal_func_934_a($this, $var1, $var2, $var3) {
    nms_RenderGlobal_func_949_a($this, $var1 - 1 | 0, $var2 - 1 | 0, $var3 - 1 | 0, $var1 + 1 | 0, $var2 + 1 | 0, $var3 + 1 | 0);
}
function nms_RenderGlobal_func_937_b($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_RenderGlobal_func_949_a($this, $var1 - 1 | 0, $var2 - 1 | 0, $var3 - 1 | 0, $var4 + 1 | 0, $var5 + 1 | 0, $var6 + 1 | 0);
}
function nms_RenderGlobal_func_960_a($this, $var1, $var2) {
    var $var3;
    $var3 = 0;
    while ($var3 < $this.$field_1444_o.data.length) {
        if (!nms_WorldRenderer_func_1196_e($this.$field_1444_o.data[$var3]) && !($this.$field_1444_o.data[$var3].$field_1749_o && ($var3 + $this.$field_1449_j | 0) & 15))
            nms_WorldRenderer_func_1199_a($this.$field_1444_o.data[$var3], $var1);
        $var3 = $var3 + 1 | 0;
    }
    $this.$field_1449_j = $this.$field_1449_j + 1 | 0;
}
function nms_RenderGlobal_playRecord($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6;
    if ($var1 !== null) {
        var$5 = $this.$mc8.$ingameGUI;
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$6);
        nms_GuiIngame_func_553_b(var$5, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(484)), $var1)));
    }
}
function nms_RenderGlobal_playSound($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    return;
}
function nms_RenderGlobal_spawnParticle($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12) {
    var $var14, $var16, $var18, var$11, var$12, var$13, var$14, var$15;
    a: {
        $var14 = $this.$mc8.$thePlayer.$posX - $var2;
        $var16 = $this.$mc8.$thePlayer.$posY - $var4;
        $var18 = $this.$mc8.$thePlayer.$posZ - $var6;
        if ($var14 * $var14 + $var16 * $var16 + $var18 * $var18 > 256.0)
            break a;
        if ($var1 === $rt_s(485)) {
            $var1 = $this.$mc8.$field_6321_h;
            var$11 = new nms_EntityBubbleFX;
            nms_EntityFX__init_(var$11, $this.$worldObj5, $var2, $var4, $var6, $var8, $var10, $var12);
            var$11.$field_663_i = 1.0;
            var$11.$field_662_j = 1.0;
            var$11.$field_661_k = 1.0;
            var$11.$field_670_b = 32;
            nms_Entity_setSize(var$11, 0.019999999552965164, 0.019999999552965164);
            var$11.$field_665_g = var$11.$field_665_g * (ju_Random_nextFloat(var$11.$rand2) * 0.6000000238418579 + 0.20000000298023224);
            var$11.$motionX = $var8 * 0.20000000298023224 + (jl_Math_random() * 2.0 - 1.0) * 0.019999999552965164;
            var$11.$motionY = $var10 * 0.20000000298023224 + (jl_Math_random() * 2.0 - 1.0) * 0.019999999552965164;
            var$11.$motionZ = $var12 * 0.20000000298023224 + (jl_Math_random() * 2.0 - 1.0) * 0.019999999552965164;
            var$11.$field_666_f = 8.0 / (jl_Math_random() * 0.8 + 0.2) | 0;
            nms_EffectRenderer_func_1192_a($var1, var$11);
            break a;
        }
        if ($var1 === $rt_s(283)) {
            nms_EffectRenderer_func_1192_a($this.$mc8.$field_6321_h, nms_EntitySmokeFX__init_($this.$worldObj5, $var2, $var4, $var6, 1.0));
            break a;
        }
        if ($var1 === $rt_s(313)) {
            $var1 = $this.$mc8.$field_6321_h;
            var$11 = new nms_EntityPortalFX;
            nms_EntityFX__init_(var$11, $this.$worldObj5, $var2, $var4, $var6, $var8, $var10, $var12);
            var$11.$motionX = $var8;
            var$11.$motionY = $var10;
            var$11.$motionZ = $var12;
            var$11.$posX = $var2;
            var$11.$field_4086_p = $var2;
            var$11.$posY = $var4;
            var$11.$field_4085_q = $var4;
            var$11.$posZ = $var6;
            var$11.$field_4084_r = $var6;
            var$12 = ju_Random_nextFloat(var$11.$rand2) * 0.6000000238418579 + 0.4000000059604645;
            var$13 = ju_Random_nextFloat(var$11.$rand2) * 0.20000000298023224 + 0.5;
            var$11.$field_665_g = var$13;
            var$11.$field_4083_a = var$13;
            var$12 = 1.0 * var$12;
            var$11.$field_661_k = var$12;
            var$11.$field_662_j = var$12;
            var$11.$field_663_i = var$12;
            var$11.$field_662_j = var$11.$field_662_j * 0.30000001192092896;
            var$11.$field_663_i = var$11.$field_663_i * 0.8999999761581421;
            var$11.$field_666_f = (jl_Math_random() * 10.0 | 0) + 40 | 0;
            var$11.$field_9314_ba = 1;
            var$11.$field_670_b = jl_Math_random() * 8.0 | 0;
            nms_EffectRenderer_func_1192_a($var1, var$11);
            break a;
        }
        if ($var1 === $rt_s(486)) {
            nms_EffectRenderer_func_1192_a($this.$mc8.$field_6321_h, nms_EntityExplodeFX__init_($this.$worldObj5, $var2, $var4, $var6, $var8, $var10, $var12));
            break a;
        }
        if ($var1 === $rt_s(284)) {
            nms_EffectRenderer_func_1192_a($this.$mc8.$field_6321_h, nms_EntityFlameFX__init_($this.$worldObj5, $var2, $var4, $var6, $var8, $var10, $var12));
            break a;
        }
        if ($var1 === $rt_s(278)) {
            nms_EffectRenderer_func_1192_a($this.$mc8.$field_6321_h, nms_EntityLavaFX__init_($this.$worldObj5, $var2, $var4, $var6));
            break a;
        }
        if ($var1 === $rt_s(487)) {
            $var1 = $this.$mc8.$field_6321_h;
            var$11 = new nms_EntitySplashFX;
            nms_EntityRainFX__init_(var$11, $this.$worldObj5, $var2, $var4, $var6);
            var$11.$field_664_h = 0.03999999910593033;
            var$11.$field_670_b = var$11.$field_670_b + 1 | 0;
            if ($var10 === 0.0 && !($var8 === 0.0 && $var12 === 0.0)) {
                var$11.$motionX = $var8;
                var$11.$motionY = $var10 + 0.1;
                var$11.$motionZ = $var12;
            }
            nms_EffectRenderer_func_1192_a($var1, var$11);
            break a;
        }
        if ($var1 === $rt_s(280)) {
            nms_EffectRenderer_func_1192_a($this.$mc8.$field_6321_h, nms_EntitySmokeFX__init_($this.$worldObj5, $var2, $var4, $var6, 2.5));
            break a;
        }
        if ($var1 === $rt_s(287)) {
            nms_EffectRenderer_func_1192_a($this.$mc8.$field_6321_h, nms_EntityReddustFX__init_($this.$worldObj5, $var2, $var4, $var6, 1.0));
            break a;
        }
        if ($var1 === $rt_s(488)) {
            $var1 = $this.$mc8.$field_6321_h;
            var$11 = new nms_EntitySlimeFX;
            var$14 = $this.$worldObj5;
            nms_Item_$callClinit();
            nms_EntitySlimeFX__init_(var$11, var$14, $var2, $var4, $var6, nms_Item_snowball);
            nms_EffectRenderer_func_1192_a($var1, var$11);
            break a;
        }
        if ($var1 !== $rt_s(489))
            break a;
        var$11 = $this.$mc8.$field_6321_h;
        var$14 = new nms_EntitySlimeFX;
        var$15 = $this.$worldObj5;
        nms_Item_$callClinit();
        nms_EntitySlimeFX__init_(var$14, var$15, $var2, $var4, $var6, nms_Item_slimeBall);
        nms_EffectRenderer_func_1192_a(var$11, var$14);
    }
}
function nms_RenderGlobal_obtainEntitySkin($this, $var1) {
    return;
}
function nms_RenderGlobal_releaseEntitySkin($this, $var1) {
    return;
}
function nms_RenderGlobal_func_936_e($this) {
    var $var1;
    $var1 = 0;
    while ($var1 < $this.$field_1444_o.data.length) {
        if ($this.$field_1444_o.data[$var1].$field_1747_A) {
            if (!$this.$field_1444_o.data[$var1].$needsUpdate)
                ju_ArrayList_add($this.$field_1446_m, $this.$field_1444_o.data[$var1]);
            nms_WorldRenderer_MarkDirty($this.$field_1444_o.data[$var1]);
        }
        $var1 = $var1 + 1 | 0;
    }
}
function nms_RenderGlobal_func_935_a($this, $var1, $var2, $var3, $var4) {
    return;
}
function nms_EffectRenderer() {
    var a = this; jl_Object.call(a);
    a.$worldObj = null;
    a.$field_1728_b = null;
    a.$field_1731_c = null;
    a.$rand = null;
}
function nms_EffectRenderer_func_1192_a($this, $var1) {
    var $var2;
    $var2 = $var1.$func_404_c();
    ju_ArrayList_add($this.$field_1728_b.data[$var2], $var1);
}
function nms_EffectRenderer_func_1193_a($this) {
    var $var1, $var2, $var3, var$4;
    $var1 = 0;
    while ($var1 < 4) {
        $var2 = 0;
        while ($var2 < $this.$field_1728_b.data[$var1].$size) {
            $var3 = ju_ArrayList_get($this.$field_1728_b.data[$var1], $var2);
            $var3.$onUpdate();
            if (!$var3.$isDead)
                var$4 = $var2;
            else {
                $var3 = $this.$field_1728_b.data[$var1];
                var$4 = $var2 + (-1) | 0;
                ju_ArrayList_remove($var3, $var2);
            }
            $var2 = var$4 + 1 | 0;
        }
        $var1 = $var1 + 1 | 0;
    }
}
function nms_EffectRenderer_func_1189_a($this, $var1, $var2) {
    var $var3, $var4, $var5, $var6, $var7, var$8, var$9, var$10, $var8, $var12, $var10, $var11, $var9, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var12 = $thread.pop();$var8 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = nms_MathHelper_cos($var1.$rotationYaw * 3.1415927410125732 / 180.0);
        $var4 = nms_MathHelper_sin($var1.$rotationYaw * 3.1415927410125732 / 180.0);
        $var5 =  -$var4 * nms_MathHelper_sin($var1.$rotationPitch * 3.1415927410125732 / 180.0);
        $var6 = $var3 * nms_MathHelper_sin($var1.$rotationPitch * 3.1415927410125732 / 180.0);
        $var7 = nms_MathHelper_cos($var1.$rotationPitch * 3.1415927410125732 / 180.0);
        var$8 = $var1.$lastTickPosX;
        var$9 = $var1.$posX - $var1.$lastTickPosX;
        var$10 = $var2;
        nms_EntityFX_field_660_l = var$8 + var$9 * var$10;
        nms_EntityFX_field_659_m = $var1.$lastTickPosY + ($var1.$posY - $var1.$lastTickPosY) * var$10;
        nms_EntityFX_field_658_n = $var1.$lastTickPosZ + ($var1.$posZ - $var1.$lastTickPosZ) * var$10;
        $var8 = 0;
        while ($var8 < 3) {
            if ($this.$field_1728_b.data[$var8].$size) {
                if (!$var8) {
                    $var1 = $this.$field_1731_c;
                    $var12 = $rt_s(490);
                    $ptr = 1;
                    continue main;
                }
                if ($var8 == 1) {
                    $var1 = $this.$field_1731_c;
                    $var12 = $rt_s(193);
                    $ptr = 2;
                    continue main;
                }
                if ($var8 == 2) {
                    $var1 = $this.$field_1731_c;
                    $var12 = $rt_s(176);
                    $ptr = 3;
                    continue main;
                }
                olo_EaglerAdapterGL30_glBindTexture(3553, 0);
                nms_Tessellator_$callClinit();
                $var10 = nms_Tessellator_instance;
                nms_Tessellator_startDrawingQuads($var10);
                $var11 = 0;
                if ($var11 < $this.$field_1728_b.data[$var8].$size) {
                    $var12 = ju_ArrayList_get($this.$field_1728_b.data[$var8], $var11);
                    $ptr = 4;
                    continue main;
                }
                nms_Tessellator_draw($var10);
            }
            $var8 = $var8 + 1 | 0;
        }
        return;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var1, $var12);
        if ($rt_suspending()) {
            break main;
        }
        $var9 = $tmp;
        a: while (true) {
            if ($var8 == 1) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(193);
                $ptr = 2;
                continue main;
            }
            if ($var8 == 2) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(176);
                $ptr = 3;
                continue main;
            }
            olo_EaglerAdapterGL30_glBindTexture(3553, $var9);
            nms_Tessellator_$callClinit();
            $var10 = nms_Tessellator_instance;
            nms_Tessellator_startDrawingQuads($var10);
            $var11 = 0;
            if ($var11 < $this.$field_1728_b.data[$var8].$size) {
                $var12 = ju_ArrayList_get($this.$field_1728_b.data[$var8], $var11);
                $ptr = 4;
                continue main;
            }
            nms_Tessellator_draw($var10);
            while (true) {
                $var8 = $var8 + 1 | 0;
                if ($var8 >= 3)
                    break a;
                if (!$this.$field_1728_b.data[$var8].$size)
                    continue;
                else
                    break;
            }
            $var9 = 0;
            if (!$var8) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(490);
                continue main;
            }
        }
        return;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var1, $var12);
        if ($rt_suspending()) {
            break main;
        }
        $var9 = $tmp;
        a: while (true) {
            if ($var8 == 2) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(176);
                $ptr = 3;
                continue main;
            }
            olo_EaglerAdapterGL30_glBindTexture(3553, $var9);
            nms_Tessellator_$callClinit();
            $var10 = nms_Tessellator_instance;
            nms_Tessellator_startDrawingQuads($var10);
            $var11 = 0;
            if ($var11 < $this.$field_1728_b.data[$var8].$size) {
                $var12 = ju_ArrayList_get($this.$field_1728_b.data[$var8], $var11);
                $ptr = 4;
                continue main;
            }
            nms_Tessellator_draw($var10);
            while (true) {
                $var8 = $var8 + 1 | 0;
                if ($var8 >= 3)
                    break a;
                if (!$this.$field_1728_b.data[$var8].$size)
                    continue;
                else
                    break;
            }
            $var9 = 0;
            if (!$var8) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(490);
                $ptr = 1;
                continue main;
            }
            if ($var8 == 1) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(193);
                continue main;
            }
        }
        return;
    case 3:
        $tmp = nms_RenderEngine_getTexture($var1, $var12);
        if ($rt_suspending()) {
            break main;
        }
        $var9 = $tmp;
        a: while (true) {
            olo_EaglerAdapterGL30_glBindTexture(3553, $var9);
            nms_Tessellator_$callClinit();
            $var10 = nms_Tessellator_instance;
            nms_Tessellator_startDrawingQuads($var10);
            $var11 = 0;
            if ($var11 < $this.$field_1728_b.data[$var8].$size) {
                $var12 = ju_ArrayList_get($this.$field_1728_b.data[$var8], $var11);
                $ptr = 4;
                continue main;
            }
            nms_Tessellator_draw($var10);
            while (true) {
                $var8 = $var8 + 1 | 0;
                if ($var8 >= 3)
                    break a;
                if (!$this.$field_1728_b.data[$var8].$size)
                    continue;
                else
                    break;
            }
            $var9 = 0;
            if (!$var8) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(490);
                $ptr = 1;
                continue main;
            }
            if ($var8 == 1) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(193);
                $ptr = 2;
                continue main;
            }
            if ($var8 == 2) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(176);
                continue main;
            }
        }
        return;
    case 4:
        $var12.$func_406_a($var10, $var2, $var3, $var7, $var4, $var5, $var6);
        if ($rt_suspending()) {
            break main;
        }
        $var11 = $var11 + 1 | 0;
        a: while (true) {
            if ($var11 < $this.$field_1728_b.data[$var8].$size) {
                $var12 = ju_ArrayList_get($this.$field_1728_b.data[$var8], $var11);
                continue main;
            }
            nms_Tessellator_draw($var10);
            while (true) {
                $var8 = $var8 + 1 | 0;
                if ($var8 >= 3)
                    break a;
                if (!$this.$field_1728_b.data[$var8].$size)
                    continue;
                else
                    break;
            }
            if (!$var8) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(490);
                $ptr = 1;
                continue main;
            }
            if ($var8 == 1) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(193);
                $ptr = 2;
                continue main;
            }
            if ($var8 == 2) {
                $var1 = $this.$field_1731_c;
                $var12 = $rt_s(176);
                $ptr = 3;
                continue main;
            }
            olo_EaglerAdapterGL30_glBindTexture(3553, 0);
            nms_Tessellator_$callClinit();
            $var10 = nms_Tessellator_instance;
            nms_Tessellator_startDrawingQuads($var10);
            $var11 = 0;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, var$8, var$9, var$10, $var8, $var12, $var10, $var11, $var9, $ptr);
}
function nms_EffectRenderer_func_1187_b($this, $var1, $var2) {
    var $var3, $var4, $var5, $var6, var$7, var$8, var$9, var$10, var$11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = 3;
        if ($this.$field_1728_b.data[$var3].$size) {
            nms_Tessellator_$callClinit();
            $var4 = nms_Tessellator_instance;
            $var5 = 0;
            if ($var5 < $this.$field_1728_b.data[$var3].$size) {
                $var6 = ju_ArrayList_get($this.$field_1728_b.data[$var3], $var5);
                var$7 = 0.0;
                var$8 = 0.0;
                var$9 = 0.0;
                var$10 = 0.0;
                var$11 = 0.0;
                $ptr = 1;
                continue main;
            }
        }
        return;
    case 1:
        $var6.$func_406_a($var4, $var2, var$7, var$8, var$9, var$10, var$11);
        if ($rt_suspending()) {
            break main;
        }
        $var5 = $var5 + 1 | 0;
        if ($var5 >= $this.$field_1728_b.data[$var3].$size)
            return;
        $var6 = ju_ArrayList_get($this.$field_1728_b.data[$var3], $var5);
        var$7 = 0.0;
        var$8 = 0.0;
        var$9 = 0.0;
        var$10 = 0.0;
        var$11 = 0.0;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, var$7, var$8, var$9, var$10, var$11, $ptr);
}
function nms_EffectRenderer_func_1188_a($this, $var1) {
    var $var2;
    $this.$worldObj = $var1;
    $var2 = 0;
    while ($var2 < 4) {
        ju_ArrayList_clear($this.$field_1728_b.data[$var2]);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_EffectRenderer_func_1186_a($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, var$8, var$9, var$10, $var8, $var9, $var10, $var12, $var14, var$16, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$16 = $thread.pop();$var14 = $thread.pop();$var12 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            $var4 = nms_World_getBlockId($this.$worldObj, $var1, $var2, $var3);
            if ($var4) {
                nms_Block_$callClinit();
                $var5 = nms_Block_blocksList.data[$var4];
                $var6 = 4;
                $var7 = 0;
                var$8 = $var1;
                var$9 = $var2;
                var$10 = $var3;
                while (true) {
                    if ($var7 >= $var6)
                        break a;
                    $var8 = 0;
                    while ($var8 < $var6) {
                        $var9 = 0;
                        if ($var9 < $var6) {
                            $var10 = var$8 + ($var7 + 0.5) / 4.0;
                            $var12 = var$9 + ($var8 + 0.5) / 4.0;
                            $var14 = var$10 + ($var9 + 0.5) / 4.0;
                            var$16 = nms_EntityDiggingFX__init_($this.$worldObj, $var10, $var12, $var14, $var10 - var$8 - 0.5, $var12 - var$9 - 0.5, $var14 - var$10 - 0.5, $var5);
                            $ptr = 1;
                            continue main;
                        }
                        $var8 = $var8 + 1 | 0;
                    }
                    $var7 = $var7 + 1 | 0;
                }
            }
        }
        return;
    case 1:
        $tmp = nms_EntityDiggingFX_func_4041_a(var$16, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        var$16 = $tmp;
        nms_EffectRenderer_func_1192_a($this, var$16);
        $var9 = $var9 + 1 | 0;
        a: while (true) {
            if ($var9 < $var6) {
                $var10 = var$8 + ($var7 + 0.5) / 4.0;
                $var12 = var$9 + ($var8 + 0.5) / 4.0;
                $var14 = var$10 + ($var9 + 0.5) / 4.0;
                var$16 = nms_EntityDiggingFX__init_($this.$worldObj, $var10, $var12, $var14, $var10 - var$8 - 0.5, $var12 - var$9 - 0.5, $var14 - var$10 - 0.5, $var5);
                continue main;
            }
            $var8 = $var8 + 1 | 0;
            while ($var8 >= $var6) {
                $var7 = $var7 + 1 | 0;
                if ($var7 >= $var6)
                    break a;
                $var8 = 0;
            }
            $var9 = 0;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, var$8, var$9, var$10, $var8, $var9, $var10, $var12, $var14, var$16, $ptr);
}
function nms_EffectRenderer_func_1191_a($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, var$7, $var8, var$9, $var10, var$11, $var12, var$13, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$13 = $thread.pop();$var12 = $thread.pop();var$11 = $thread.pop();$var10 = $thread.pop();var$9 = $thread.pop();$var8 = $thread.pop();var$7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = nms_World_getBlockId($this.$worldObj, $var1, $var2, $var3);
        if (!$var5)
            return;
        nms_Block_$callClinit();
        $var6 = nms_Block_blocksList.data[$var5];
        var$7 = $var1;
        $var8 = var$7 + ju_Random_nextDouble($this.$rand) * ($var6.$maxX - $var6.$field_370_bf - 0.20000000298023224) + 0.10000000149011612 + $var6.$field_370_bf;
        var$9 = $var2;
        $var10 = var$9 + ju_Random_nextDouble($this.$rand) * ($var6.$maxY - $var6.$minY - 0.20000000298023224) + 0.10000000149011612 + $var6.$minY;
        var$11 = $var3;
        $var12 = var$11 + ju_Random_nextDouble($this.$rand) * ($var6.$maxZ - $var6.$minZ - 0.20000000298023224) + 0.10000000149011612 + $var6.$minZ;
        if (!$var4)
            $var10 = var$9 + $var6.$minY - 0.10000000149011612;
        if ($var4 == 1)
            $var10 = var$9 + $var6.$maxY + 0.10000000149011612;
        if ($var4 == 2)
            $var12 = var$11 + $var6.$minZ - 0.10000000149011612;
        if ($var4 == 3)
            $var12 = var$11 + $var6.$maxZ + 0.10000000149011612;
        if ($var4 == 4)
            $var8 = var$7 + $var6.$field_370_bf - 0.10000000149011612;
        if ($var4 == 5)
            $var8 = var$7 + $var6.$maxX + 0.10000000149011612;
        var$13 = nms_EntityDiggingFX__init_($this.$worldObj, $var8, $var10, $var12, 0.0, 0.0, 0.0, $var6);
        $ptr = 1;
    case 1:
        $tmp = nms_EntityDiggingFX_func_4041_a(var$13, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        var$13 = $tmp;
        nms_EffectRenderer_func_1192_a($this, nms_EntityFX_func_405_d(nms_EntityFX_func_407_b(var$13, 0.20000000298023224), 0.6000000238418579));
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, var$7, $var8, var$9, $var10, var$11, $var12, var$13, $ptr);
}
function nms_EffectRenderer_func_1190_b($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(17)), ($this.$field_1728_b.data[0].$size + $this.$field_1728_b.data[1].$size | 0) + $this.$field_1728_b.data[2].$size | 0));
}
function nms_GuiIngame() {
    var a = this; nms_Gui.call(a);
    a.$chatMessageList = null;
    a.$rand0 = null;
    a.$mc2 = null;
    a.$field_933_a = null;
    a.$updateCounter = 0;
    a.$field_9420_i = null;
    a.$field_9419_j = 0;
    a.$field_6446_b = 0.0;
    a.$field_931_c = 0.0;
}
var nms_GuiIngame_itemRenderer = null;
function nms_GuiIngame_renderGameOverlay($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var10, $var9, $var23, $var11, $var26, $var15, $var12, $var13, $var14, $var15_0, $var16, $var17, $var20, $var28, $var18, $var27, $var19, $var17_0, $var24, $var29, $var21, $var25, $var16_0, $var31, $var22, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var22 = $thread.pop();$var31 = $thread.pop();$var16_0 = $thread.pop();$var25 = $thread.pop();$var21 = $thread.pop();$var29 = $thread.pop();$var24 = $thread.pop();$var17_0 = $thread.pop();$var19 = $thread.pop();$var27 = $thread.pop();$var18 = $thread.pop();$var28 = $thread.pop();$var20 = $thread.pop();$var17 = $thread.pop();$var16 = $thread.pop();$var15_0 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();$var15 = $thread.pop();$var26 = $thread.pop();$var11
        = $thread.pop();$var23 = $thread.pop();$var9 = $thread.pop();$var10 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = nms_ScaledResolution__init_($this.$mc2.$displayWidth, $this.$mc2.$displayHeight);
        $var6 = nms_ScaledResolution_getScaledWidth($var5);
        $var7 = nms_ScaledResolution_getScaledHeight($var5);
        $var8 = $this.$mc2.$fontRenderer;
        nms_EntityRenderer_func_905_b($this.$mc2.$field_9243_r);
        olo_EaglerAdapterGL30_glEnable(3042);
        if ($this.$mc2.$gameSettings.$fancyGraphics) {
            $var10 = nms_Entity_getEntityBrightness($this.$mc2.$thePlayer, $var1);
            $ptr = 1;
            continue main;
        }
        $var9 = nms_InventoryPlayer_armorItemInSlot($this.$mc2.$thePlayer.$inventory0, 3);
        if (!$this.$mc2.$gameSettings.$thirdPersonView && $var9 !== null) {
            $var2 = $var9.$itemID;
            nms_Block_$callClinit();
            if ($var2 == nms_Block_pumpkin.$blockID) {
                $ptr = 5;
                continue main;
            }
        }
        $var10 = $this.$mc2.$thePlayer.$field_4133_d + ($this.$mc2.$thePlayer.$field_4134_c - $this.$mc2.$thePlayer.$field_4133_d) * $var1;
        if ($var10 > 0.0) {
            $ptr = 4;
            continue main;
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        $var2 = 3553;
        $var5 = $this.$mc2.$renderEngine;
        $var23 = $rt_s(491);
        $ptr = 2;
        continue main;
    case 1:
        nms_GuiIngame_func_4064_a($this, $var10, $var6, $var7);
        if ($rt_suspending()) {
            break main;
        }
        $var9 = nms_InventoryPlayer_armorItemInSlot($this.$mc2.$thePlayer.$inventory0, 3);
        if (!$this.$mc2.$gameSettings.$thirdPersonView && $var9 !== null) {
            $var2 = $var9.$itemID;
            nms_Block_$callClinit();
            if ($var2 == nms_Block_pumpkin.$blockID) {
                $ptr = 5;
                continue main;
            }
        }
        $var10 = $this.$mc2.$thePlayer.$field_4133_d + ($this.$mc2.$thePlayer.$field_4134_c - $this.$mc2.$thePlayer.$field_4133_d) * $var1;
        if ($var10 > 0.0) {
            $ptr = 4;
            continue main;
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        $var2 = 3553;
        $var5 = $this.$mc2.$renderEngine;
        $var23 = $rt_s(491);
        $ptr = 2;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var5, $var23);
        if ($rt_suspending()) {
            break main;
        }
        $var3 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var2, $var3);
        $var11 = $this.$mc2.$thePlayer.$inventory0;
        $this.$zLevel = (-90.0);
        $var26 = $var6 / 2 | 0;
        $var15 = $var26 - 91 | 0;
        $var12 = $var7 - 22 | 0;
        nms_Gui_drawTexturedModalRect($this, $var15, $var12, 0, 0, 182, 22);
        nms_Gui_drawTexturedModalRect($this, ($var15 - 1 | 0) + ($var11.$currentItem * 20 | 0) | 0, $var12 - 1 | 0, 0, 22, 24, 22);
        $var2 = 3553;
        $var5 = $this.$mc2.$renderEngine;
        $var23 = $rt_s(492);
        $ptr = 3;
    case 3:
        $tmp = nms_RenderEngine_getTexture($var5, $var23);
        if ($rt_suspending()) {
            break main;
        }
        $var3 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var2, $var3);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(775, 769);
        nms_Gui_drawTexturedModalRect($this, $var26 - 7 | 0, ($var7 / 2 | 0) - 7 | 0, 0, 0, 16, 16);
        olo_EaglerAdapterGL30_glDisable(3042);
        $var12 = (($this.$mc2.$thePlayer.$field_9306_bj / 3 | 0) % 2 | 0) != 1 ? 0 : 1;
        if ($this.$mc2.$thePlayer.$field_9306_bj < 10)
            $var12 = 0;
        a: {
            $var13 = $this.$mc2.$thePlayer.$health;
            $var14 = $this.$mc2.$thePlayer.$field_9335_K;
            ju_Random_setSeed($this.$rand0, Long_fromInt($rt_imul($this.$updateCounter, 312871)));
            if (nms_PlayerController_func_6469_d($this.$mc2.$field_6327_b)) {
                $var15_0 = nms_EntityPlayerSP_getPlayerArmorValue($this.$mc2.$thePlayer);
                $var16 = 0;
                $var17 = $var7 - 32 | 0;
                $var20 = $var26 + 91 | 0;
                $var28 = $rt_compare($var13, 4);
                while ($var16 < 10) {
                    if ($var15_0 > 0) {
                        $var18 = ($var20 - ($var16 * 8 | 0) | 0) - 9 | 0;
                        $var2 = $rt_compare(($var16 * 2 | 0) + 1 | 0, $var15_0);
                        if ($var2 < 0)
                            nms_Gui_drawTexturedModalRect($this, $var18, $var17, 34, 9, 9, 9);
                        if (!$var2)
                            nms_Gui_drawTexturedModalRect($this, $var18, $var17, 25, 9, 9, 9);
                        if ($var2 > 0)
                            nms_Gui_drawTexturedModalRect($this, $var18, $var17, 16, 9, 9, 9);
                    }
                    $var27 = 0;
                    if ($var12)
                        $var27 = 1;
                    $var19 = $var15 + ($var16 * 8 | 0) | 0;
                    $var2 = $var28 > 0 ? $var17 : $var17 + ju_Random_nextInt($this.$rand0, 2) | 0;
                    nms_Gui_drawTexturedModalRect($this, $var19, $var2, 16 + ($var27 * 9 | 0) | 0, 0, 9, 9);
                    if ($var12) {
                        $var3 = $rt_compare(($var16 * 2 | 0) + 1 | 0, $var14);
                        if ($var3 < 0)
                            nms_Gui_drawTexturedModalRect($this, $var19, $var2, 70, 0, 9, 9);
                        if (!$var3)
                            nms_Gui_drawTexturedModalRect($this, $var19, $var2, 79, 0, 9, 9);
                    }
                    $var3 = $rt_compare(($var16 * 2 | 0) + 1 | 0, $var13);
                    if ($var3 < 0)
                        nms_Gui_drawTexturedModalRect($this, $var19, $var2, 52, 0, 9, 9);
                    if (!$var3)
                        nms_Gui_drawTexturedModalRect($this, $var19, $var2, 61, 0, 9, 9);
                    $var16 = $var16 + 1 | 0;
                }
                if (nms_Entity_isInsideOfMaterial($this.$mc2.$thePlayer, nms_Material_water)) {
                    $var3 = jl_Math_ceil(($this.$mc2.$thePlayer.$air - 2 | 0) * 10.0 / 300.0) | 0;
                    $var17_0 = (jl_Math_ceil($this.$mc2.$thePlayer.$air * 10.0 / 300.0) | 0) - $var3 | 0;
                    $var18 = 0;
                    $var4 = $var3 + $var17_0 | 0;
                    $var17_0 = $var17 - 9 | 0;
                    while (true) {
                        if ($var18 >= $var4)
                            break a;
                        if ($var18 >= $var3)
                            nms_Gui_drawTexturedModalRect($this, $var15 + ($var18 * 8 | 0) | 0, $var17_0, 25, 18, 9, 9);
                        else
                            nms_Gui_drawTexturedModalRect($this, $var15 + ($var18 * 8 | 0) | 0, $var17_0, 16, 18, 9, 9);
                        $var18 = $var18 + 1 | 0;
                    }
                }
            }
        }
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glRotatef(180.0, 1.0, 0.0, 0.0);
        nms_RenderHelper_enableStandardItemLighting();
        olo_EaglerAdapterGL30_glPopMatrix();
        $var15 = 0;
        $var3 = $var26 - 90 | 0;
        $var17_0 = ($var7 - 16 | 0) - 3 | 0;
        if ($var15 >= 9) {
            nms_RenderHelper_disableStandardItemLighting();
            olo_EaglerAdapterGL30_glDisable(32826);
            if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4)) {
                nms_FontRenderer_drawStringWithShadow($var8, jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(493)), $this.$mc2.$field_6292_I), $rt_s(34))), 2, 2, 16777215);
                nms_FontRenderer_drawStringWithShadow($var8, nmc_Minecraft_func_6241_m($this.$mc2), 2, 12, 16777215);
                nms_FontRenderer_drawStringWithShadow($var8, nmc_Minecraft_func_6262_n($this.$mc2), 2, 22, 16777215);
                nms_FontRenderer_drawStringWithShadow($var8, nmc_Minecraft_func_6245_o($this.$mc2), 2, 32, 16777215);
                $var24 = nlea_EaglerAdapterImpl2_maxMemory();
                $var29 = nlea_EaglerAdapterImpl2_totalMemory();
                $var21 = Long_sub($var29, nlea_EaglerAdapterImpl2_freeMemory());
                $var23 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(494)), Long_div(Long_mul($var21, Long_fromInt(100)), $var24)), $rt_s(495)), Long_div(Long_div($var21, Long_fromInt(1024)), Long_fromInt(1024))), $rt_s(496)), Long_div(Long_div($var24, Long_fromInt(1024)), Long_fromInt(1024))), $rt_s(497)));
                nms_Gui_drawString($this, $var8, $var23, ($var6 - nms_FontRenderer_getStringWidth($var8, $var23) | 0) - 2 | 0, 2, 14737632);
                $var5 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(498)), Long_div(Long_mul($var29, Long_fromInt(100)), $var24)), $rt_s(495)), Long_div(Long_div($var29, Long_fromInt(1024)), Long_fromInt(1024))), $rt_s(499)));
                nms_Gui_drawString($this, $var8, $var5, ($var6 - nms_FontRenderer_getStringWidth($var8, $var5) | 0) - 2 | 0, 12, 14737632);
                nms_Gui_drawString($this, $var8, jl_StringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(500)), $this.$mc2.$thePlayer.$posX)), 2, 64, 14737632);
                nms_Gui_drawString($this, $var8, jl_StringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(501)), $this.$mc2.$thePlayer.$posY)), 2, 72, 14737632);
                nms_Gui_drawString($this, $var8, jl_StringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(502)), $this.$mc2.$thePlayer.$posZ)), 2, 80, 14737632);
            } else
                nms_FontRenderer_drawStringWithShadow($var8, $rt_s(503), 2, 2, 16777215);
            if ($this.$field_9419_j > 0) {
                $var25 = $this.$field_9419_j - $var1;
                $var16_0 = $var25 * 256.0 / 20.0 | 0;
                if ($var16_0 > 255)
                    $var16_0 = 255;
                if ($var16_0 > 0) {
                    olo_EaglerAdapterGL30_glPushMatrix();
                    olo_EaglerAdapterGL30_glTranslatef($var26, $var7 - 48 | 0, 0.0);
                    olo_EaglerAdapterGL30_glEnable(3042);
                    olo_EaglerAdapterGL30_glBlendFunc(770, 771);
                    $var17_0 = nms_GuiIngame_hsbToRgb($var25 / 50.0, 0.699999988079071, 0.6000000238418579) & 16777215;
                    nms_FontRenderer_drawString($var8, $this.$field_9420_i,  -nms_FontRenderer_getStringWidth($var8, $this.$field_9420_i) / 2 | 0, (-4), $var17_0 + ($var16_0 << 24) | 0);
                    olo_EaglerAdapterGL30_glDisable(3042);
                    olo_EaglerAdapterGL30_glPopMatrix();
                }
            }
            $var26 = 10;
            $var28 = 0;
            if ($this.$mc2.$currentScreen instanceof nms_GuiChat) {
                $var26 = 20;
                $var28 = 1;
            }
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(770, 771);
            olo_EaglerAdapterGL30_glDisable(3008);
            olo_EaglerAdapterGL30_glPushMatrix();
            olo_EaglerAdapterGL30_glTranslatef(0.0, $var7 - 48 | 0, 0.0);
            $var17_0 = 0;
            while ($var17_0 < ju_ArrayList_size($this.$chatMessageList) && $var17_0 < $var26) {
                if (!(ju_ArrayList_get($this.$chatMessageList, $var17_0).$updateCounter1 >= 200 && !$var28)) {
                    $var31 = (1.0 - ju_ArrayList_get($this.$chatMessageList, $var17_0).$updateCounter1 / 200.0) * 10.0;
                    if ($var31 < 0.0)
                        $var31 = 0.0;
                    if ($var31 > 1.0)
                        $var31 = 1.0;
                    $var20 = 255.0 * $var31 * $var31 | 0;
                    if ($var28)
                        $var20 = 255;
                    if ($var20 > 0) {
                        $var22 =  -$var17_0 * 9 | 0;
                        $var23 = ju_ArrayList_get($this.$chatMessageList, $var17_0).$message0;
                        nms_Gui_drawRect($this, 2, $var22 - 1 | 0, 322, $var22 + 8 | 0, ($var20 / 2 | 0) << 24);
                        olo_EaglerAdapterGL30_glEnable(3042);
                        nms_FontRenderer_drawStringWithShadow($var8, $var23, 2, $var22, 16777215 + ($var20 << 24) | 0);
                    }
                }
                $var17_0 = $var17_0 + 1 | 0;
            }
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glEnable(3008);
            olo_EaglerAdapterGL30_glDisable(3042);
            return;
        }
        $var16_0 = ($var3 + ($var15 * 20 | 0) | 0) + 2 | 0;
        $ptr = 6;
        continue main;
    case 4:
        nms_GuiIngame_func_4065_b($this, $var10, $var6, $var7);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        $var2 = 3553;
        $var5 = $this.$mc2.$renderEngine;
        $var23 = $rt_s(491);
        $ptr = 2;
        continue main;
    case 5:
        nms_GuiIngame_func_4063_a($this, $var6, $var7);
        if ($rt_suspending()) {
            break main;
        }
        $var10 = $this.$mc2.$thePlayer.$field_4133_d + ($this.$mc2.$thePlayer.$field_4134_c - $this.$mc2.$thePlayer.$field_4133_d) * $var1;
        if ($var10 > 0.0) {
            $ptr = 4;
            continue main;
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        $var2 = 3553;
        $var5 = $this.$mc2.$renderEngine;
        $var23 = $rt_s(491);
        $ptr = 2;
        continue main;
    case 6:
        nms_GuiIngame_func_554_a($this, $var15, $var16_0, $var17_0, $var1);
        if ($rt_suspending()) {
            break main;
        }
        $var15 = $var15 + 1 | 0;
        if ($var15 >= 9) {
            nms_RenderHelper_disableStandardItemLighting();
            olo_EaglerAdapterGL30_glDisable(32826);
            if (nlea_EaglerAdapterImpl2_getEventKey() == 33 && nlea_EaglerAdapterImpl2_isKeyDown(4)) {
                nms_FontRenderer_drawStringWithShadow($var8, jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(493)), $this.$mc2.$field_6292_I), $rt_s(34))), 2, 2, 16777215);
                nms_FontRenderer_drawStringWithShadow($var8, nmc_Minecraft_func_6241_m($this.$mc2), 2, 12, 16777215);
                nms_FontRenderer_drawStringWithShadow($var8, nmc_Minecraft_func_6262_n($this.$mc2), 2, 22, 16777215);
                nms_FontRenderer_drawStringWithShadow($var8, nmc_Minecraft_func_6245_o($this.$mc2), 2, 32, 16777215);
                $var24 = nlea_EaglerAdapterImpl2_maxMemory();
                $var29 = nlea_EaglerAdapterImpl2_totalMemory();
                $var21 = Long_sub($var29, nlea_EaglerAdapterImpl2_freeMemory());
                $var23 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(494)), Long_div(Long_mul($var21, Long_fromInt(100)), $var24)), $rt_s(495)), Long_div(Long_div($var21, Long_fromInt(1024)), Long_fromInt(1024))), $rt_s(496)), Long_div(Long_div($var24, Long_fromInt(1024)), Long_fromInt(1024))), $rt_s(497)));
                nms_Gui_drawString($this, $var8, $var23, ($var6 - nms_FontRenderer_getStringWidth($var8, $var23) | 0) - 2 | 0, 2, 14737632);
                $var5 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(498)), Long_div(Long_mul($var29, Long_fromInt(100)), $var24)), $rt_s(495)), Long_div(Long_div($var29, Long_fromInt(1024)), Long_fromInt(1024))), $rt_s(499)));
                nms_Gui_drawString($this, $var8, $var5, ($var6 - nms_FontRenderer_getStringWidth($var8, $var5) | 0) - 2 | 0, 12, 14737632);
                nms_Gui_drawString($this, $var8, jl_StringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(500)), $this.$mc2.$thePlayer.$posX)), 2, 64, 14737632);
                nms_Gui_drawString($this, $var8, jl_StringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(501)), $this.$mc2.$thePlayer.$posY)), 2, 72, 14737632);
                nms_Gui_drawString($this, $var8, jl_StringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(502)), $this.$mc2.$thePlayer.$posZ)), 2, 80, 14737632);
            } else
                nms_FontRenderer_drawStringWithShadow($var8, $rt_s(503), 2, 2, 16777215);
            if ($this.$field_9419_j > 0) {
                $var25 = $this.$field_9419_j - $var1;
                $var16_0 = $var25 * 256.0 / 20.0 | 0;
                if ($var16_0 > 255)
                    $var16_0 = 255;
                if ($var16_0 > 0) {
                    olo_EaglerAdapterGL30_glPushMatrix();
                    olo_EaglerAdapterGL30_glTranslatef($var26, $var7 - 48 | 0, 0.0);
                    olo_EaglerAdapterGL30_glEnable(3042);
                    olo_EaglerAdapterGL30_glBlendFunc(770, 771);
                    $var17_0 = nms_GuiIngame_hsbToRgb($var25 / 50.0, 0.699999988079071, 0.6000000238418579) & 16777215;
                    nms_FontRenderer_drawString($var8, $this.$field_9420_i,  -nms_FontRenderer_getStringWidth($var8, $this.$field_9420_i) / 2 | 0, (-4), $var17_0 + ($var16_0 << 24) | 0);
                    olo_EaglerAdapterGL30_glDisable(3042);
                    olo_EaglerAdapterGL30_glPopMatrix();
                }
            }
            $var26 = 10;
            $var28 = 0;
            if ($this.$mc2.$currentScreen instanceof nms_GuiChat) {
                $var26 = 20;
                $var28 = 1;
            }
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(770, 771);
            olo_EaglerAdapterGL30_glDisable(3008);
            olo_EaglerAdapterGL30_glPushMatrix();
            olo_EaglerAdapterGL30_glTranslatef(0.0, $var7 - 48 | 0, 0.0);
            $var17_0 = 0;
            while ($var17_0 < ju_ArrayList_size($this.$chatMessageList) && $var17_0 < $var26) {
                if (!(ju_ArrayList_get($this.$chatMessageList, $var17_0).$updateCounter1 >= 200 && !$var28)) {
                    $var31 = (1.0 - ju_ArrayList_get($this.$chatMessageList, $var17_0).$updateCounter1 / 200.0) * 10.0;
                    if ($var31 < 0.0)
                        $var31 = 0.0;
                    if ($var31 > 1.0)
                        $var31 = 1.0;
                    $var20 = 255.0 * $var31 * $var31 | 0;
                    if ($var28)
                        $var20 = 255;
                    if ($var20 > 0) {
                        $var22 =  -$var17_0 * 9 | 0;
                        $var23 = ju_ArrayList_get($this.$chatMessageList, $var17_0).$message0;
                        nms_Gui_drawRect($this, 2, $var22 - 1 | 0, 322, $var22 + 8 | 0, ($var20 / 2 | 0) << 24);
                        olo_EaglerAdapterGL30_glEnable(3042);
                        nms_FontRenderer_drawStringWithShadow($var8, $var23, 2, $var22, 16777215 + ($var20 << 24) | 0);
                    }
                }
                $var17_0 = $var17_0 + 1 | 0;
            }
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glEnable(3008);
            olo_EaglerAdapterGL30_glDisable(3042);
            return;
        }
        $var16_0 = ($var3 + ($var15 * 20 | 0) | 0) + 2 | 0;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var10, $var9, $var23, $var11, $var26, $var15, $var12, $var13, $var14, $var15_0, $var16, $var17, $var20, $var28, $var18, $var27, $var19, $var17_0, $var24, $var29, $var21, $var25, $var16_0, $var31, $var22, $ptr);
}
function nms_GuiIngame_func_4063_a($this, $var1, $var2) {
    var var$3, $var3, var$5, var$6, var$7, var$8, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();$var3 = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glDisable(2929);
        olo_EaglerAdapterGL30_glDepthMask(0);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3008);
        var$3 = 3553;
        $var3 = $this.$mc2.$renderEngine;
        var$5 = $rt_s(504);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var3, var$5);
        if ($rt_suspending()) {
            break main;
        }
        var$6 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$3, var$6);
        nms_Tessellator_$callClinit();
        $var3 = nms_Tessellator_instance;
        nms_Tessellator_startDrawingQuads($var3);
        var$7 = $var2;
        nms_Tessellator_addVertexWithUV($var3, 0.0, var$7, (-90.0), 0.0, 1.0);
        var$8 = $var1;
        nms_Tessellator_addVertexWithUV($var3, var$8, var$7, (-90.0), 1.0, 1.0);
        nms_Tessellator_addVertexWithUV($var3, var$8, 0.0, (-90.0), 1.0, 0.0);
        nms_Tessellator_addVertexWithUV($var3, 0.0, 0.0, (-90.0), 0.0, 0.0);
        nms_Tessellator_draw($var3);
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glEnable(2929);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $var3, var$5, var$6, var$7, var$8, $ptr);
}
function nms_GuiIngame_func_4064_a($this, $var1, $var2, $var3) {
    var var$4, $var4, var$6, var$7, var$8, var$9, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();$var4 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = 1.0 - $var1;
        if ($var1 < 0.0)
            $var1 = 0.0;
        if ($var1 > 1.0)
            $var1 = 1.0;
        $this.$field_931_c = $this.$field_931_c + ($var1 - $this.$field_931_c) * 0.01;
        olo_EaglerAdapterGL30_glDisable(2929);
        olo_EaglerAdapterGL30_glDepthMask(0);
        olo_EaglerAdapterGL30_glBlendFunc(0, 769);
        olo_EaglerAdapterGL30_glColor4f($this.$field_931_c, $this.$field_931_c, $this.$field_931_c, 1.0);
        var$4 = 3553;
        $var4 = $this.$mc2.$renderEngine;
        var$6 = $rt_s(505);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var4, var$6);
        if ($rt_suspending()) {
            break main;
        }
        var$7 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$4, var$7);
        nms_Tessellator_$callClinit();
        $var4 = nms_Tessellator_instance;
        nms_Tessellator_startDrawingQuads($var4);
        var$8 = $var3;
        nms_Tessellator_addVertexWithUV($var4, 0.0, var$8, (-90.0), 0.0, 1.0);
        var$9 = $var2;
        nms_Tessellator_addVertexWithUV($var4, var$9, var$8, (-90.0), 1.0, 1.0);
        nms_Tessellator_addVertexWithUV($var4, var$9, 0.0, (-90.0), 1.0, 0.0);
        nms_Tessellator_addVertexWithUV($var4, 0.0, 0.0, (-90.0), 0.0, 0.0);
        nms_Tessellator_draw($var4);
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glEnable(2929);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, $var4, var$6, var$7, var$8, var$9, $ptr);
}
function nms_GuiIngame_func_4065_b($this, $var1, $var2, $var3) {
    var $var4, var$5, $var8, var$7, var$8, $var5, $var6, $var7, var$12, var$13, var$14, var$15, var$16, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$16 = $thread.pop();var$15 = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$var8 = $thread.pop();var$5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1 * $var1;
        $var4 = $var1 * $var1 * 0.800000011920929 + 0.20000000298023224;
        olo_EaglerAdapterGL30_glDisable(3008);
        olo_EaglerAdapterGL30_glDisable(2929);
        olo_EaglerAdapterGL30_glDepthMask(0);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, $var4);
        var$5 = 3553;
        $var8 = $this.$mc2.$renderEngine;
        var$7 = $rt_s(193);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var8, var$7);
        if ($rt_suspending()) {
            break main;
        }
        var$8 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$5, var$8);
        nms_Block_$callClinit();
        $var4 = (nms_Block_portal.$blockIndexInTexture % 16 | 0) / 16.0;
        $var5 = (nms_Block_portal.$blockIndexInTexture / 16 | 0) / 16.0;
        $var6 = ((nms_Block_portal.$blockIndexInTexture % 16 | 0) + 1 | 0) / 16.0;
        $var7 = ((nms_Block_portal.$blockIndexInTexture / 16 | 0) + 1 | 0) / 16.0;
        nms_Tessellator_$callClinit();
        $var8 = nms_Tessellator_instance;
        nms_Tessellator_startDrawingQuads($var8);
        var$12 = $var3;
        var$13 = $var4;
        var$14 = $var7;
        nms_Tessellator_addVertexWithUV($var8, 0.0, var$12, (-90.0), var$13, var$14);
        var$15 = $var2;
        var$16 = $var6;
        nms_Tessellator_addVertexWithUV($var8, var$15, var$12, (-90.0), var$16, var$14);
        var$14 = $var5;
        nms_Tessellator_addVertexWithUV($var8, var$15, 0.0, (-90.0), var$16, var$14);
        nms_Tessellator_addVertexWithUV($var8, 0.0, 0.0, (-90.0), var$13, var$14);
        nms_Tessellator_draw($var8);
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glEnable(2929);
        olo_EaglerAdapterGL30_glEnable(3008);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, var$5, $var8, var$7, var$8, $var5, $var6, $var7, var$12, var$13, var$14, var$15, var$16, $ptr);
}
function nms_GuiIngame_func_554_a($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, var$8, var$9, var$10, var$11, var$12, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = $this.$mc2.$thePlayer.$inventory0.$mainInventory.data[$var1];
        if ($var5 === null)
            return;
        $var6 = $var5.$animationsToGo - $var4;
        $var1 = $rt_compare($var6, 0.0);
        if ($var1 > 0) {
            olo_EaglerAdapterGL30_glPushMatrix();
            $var7 = 1.0 + $var6 / 5.0;
            var$8 = $var2 + 8 | 0;
            $var6 = var$8;
            var$9 = $var3 + 12 | 0;
            olo_EaglerAdapterGL30_glTranslatef($var6, var$9, 0.0);
            olo_EaglerAdapterGL30_glScalef(1.0 / $var7, ($var7 + 1.0) / 2.0, 1.0);
            olo_EaglerAdapterGL30_glTranslatef( -var$8,  -var$9, 0.0);
        }
        var$10 = nms_GuiIngame_itemRenderer;
        var$11 = $this.$mc2.$fontRenderer;
        var$12 = $this.$mc2.$renderEngine;
        $ptr = 1;
    case 1:
        nms_RenderItem_renderItemIntoGUI(var$10, var$11, var$12, $var5, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        if ($var1 > 0)
            olo_EaglerAdapterGL30_glPopMatrix();
        nms_RenderItem_renderItemOverlayIntoGUI(nms_GuiIngame_itemRenderer, $this.$mc2.$fontRenderer, $this.$mc2.$renderEngine, $var5, $var2, $var3);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, var$8, var$9, var$10, var$11, var$12, $ptr);
}
function nms_GuiIngame_func_555_a($this) {
    var $var1, var$2;
    if ($this.$field_9419_j > 0)
        $this.$field_9419_j = $this.$field_9419_j - 1 | 0;
    $this.$updateCounter = $this.$updateCounter + 1 | 0;
    $var1 = 0;
    while ($var1 < $this.$chatMessageList.$size) {
        var$2 = ju_ArrayList_get($this.$chatMessageList, $var1);
        var$2.$updateCounter1 = var$2.$updateCounter1 + 1 | 0;
        $var1 = $var1 + 1 | 0;
    }
}
function nms_GuiIngame_func_553_b($this, $var1) {
    var var$2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    $this.$field_9420_i = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(506)), $var1));
    $this.$field_9419_j = 60;
}
function nms_GuiIngame_hsbToRgb($hue, $saturation, $brightness) {
    var $q, $b, $g, $r, $b_0;
    $hue = $hue % 1.0 + 1.0;
    $saturation = jl_Math_min0(1.0, jl_Math_max0(0.0, $saturation));
    $brightness = jl_Math_min0(1.0, jl_Math_max0(0.0, $brightness));
    $q = $brightness >= 0.5 ? $brightness + $saturation - $brightness * $saturation : $brightness * (1.0 + $saturation);
    $b = 2.0 * $brightness - $q;
    if ($hue < 0.1666666716337204)
        $g = $b + ($q - $b) * 6.0 * $hue;
    else if ($hue < 0.3333333432674408) {
        $r = $b - ($q - $b) * 6.0 * ($hue - 0.1666666716337204);
        $g = $q;
        $q = $r;
    } else if ($hue < 0.5) {
        $hue = ($q - $b) * 6.0 * ($hue - 0.3333333432674408);
        $g = $q - $hue;
        $b_0 = $b - $hue;
        $q = $b;
        $b = $b_0;
    } else if ($hue < 0.6666666865348816) {
        $b_0 = $q - ($q - $b) * 6.0 * ($hue - 0.5);
        $q = $b;
        $g = $b;
        $b = $b_0;
    } else if ($hue >= 0.8333333134651184)
        $g = $b - ($q - $b) * 6.0 * ($hue - 0.8333333134651184);
    else {
        $r = $b + ($q - $b) * 6.0 * ($hue - 0.6666666865348816);
        $b_0 = $q;
        $q = $r;
        $g = $b;
        $b = $b_0;
    }
    return (jl_Math_max0(0.0, jl_Math_min0(255.0, $q * 255.0)) | 0) << 16 | (jl_Math_max0(0.0, jl_Math_min0(255.0, $g * 255.0)) | 0) << 8 | jl_Math_max0(0.0, jl_Math_min0(255.0, $b * 255.0)) | 0;
}
function nms_GuiIngame__clinit_() {
    nms_GuiIngame_itemRenderer = nms_RenderItem__init_0();
}
function nms_GuiMainMenu() {
    var a = this; nms_GuiScreen.call(a);
    a.$minecraftLogo = null;
    a.$logoEffects = null;
    a.$updateCounter2 = 0.0;
    a.$splashText = null;
}
var nms_GuiMainMenu_rand = null;
function nms_GuiMainMenu__init_0() {
    var var_0 = new nms_GuiMainMenu();
    nms_GuiMainMenu__init_(var_0);
    return var_0;
}
function nms_GuiMainMenu__init_($this) {
    var var$1, var$2, $var1, $var2, var$5, $$je;
    nms_GuiScreen__init_($this);
    var$1 = $rt_createArray(jl_String, 5);
    var$2 = var$1.data;
    var$2[0] = $rt_s(507);
    var$2[1] = $rt_s(508);
    var$2[2] = $rt_s(509);
    var$2[3] = $rt_s(510);
    var$2[4] = $rt_s(511);
    $this.$minecraftLogo = var$1;
    $this.$updateCounter2 = 0.0;
    $this.$splashText = $rt_s(512);
    a: {
        try {
            $var1 = ju_ArrayList__init_0();
            $var2 = ji_BufferedReader__init_(ji_InputStreamReader__init_0(jl_Class_getResourceAsStream($rt_cls(nms_GuiMainMenu), $rt_s(513))));
            while (true) {
                var$5 = ji_BufferedReader_readLine($var2);
                if (var$5 === null)
                    break;
                var$5 = jl_String_trim(var$5);
                if (jl_String_length(var$5) <= 0)
                    continue;
                ju_ArrayList_add($var1, var$5);
            }
            $this.$splashText = ju_ArrayList_get($var1, ju_Random_nextInt(nms_GuiMainMenu_rand, ju_ArrayList_size($var1)));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
            } else {
                throw $$e;
            }
        }
    }
}
function nms_GuiMainMenu_updateScreen($this) {
    var $var1, $var2;
    a: {
        $this.$updateCounter2 = $this.$updateCounter2 + 1.0;
        if ($this.$logoEffects !== null) {
            $var1 = 0;
            while (true) {
                if ($var1 >= $this.$logoEffects.data.length)
                    break a;
                $var2 = 0;
                while ($var2 < $this.$logoEffects.data[$var1].data.length) {
                    nms_LogoEffectRandomizer_func_875_a($this.$logoEffects.data[$var1].data[$var2]);
                    $var2 = $var2 + 1 | 0;
                }
                $var1 = $var1 + 1 | 0;
            }
        }
    }
}
function nms_GuiMainMenu_keyTyped($this, $var1, $var2) {
    return;
}
function nms_GuiMainMenu_initGui($this) {
    var $var1, var$2;
    $var1 = ju_Calendar_getInstance();
    ju_Calendar_setTime($var1, ju_Date__init_0());
    if ((ju_Calendar_get($var1, 2) + 1 | 0) == 11 && ju_Calendar_get($var1, 5) == 9)
        $this.$splashText = $rt_s(514);
    else if ((ju_Calendar_get($var1, 2) + 1 | 0) == 6 && ju_Calendar_get($var1, 5) == 1)
        $this.$splashText = $rt_s(515);
    else if ((ju_Calendar_get($var1, 2) + 1 | 0) == 12 && ju_Calendar_get($var1, 5) == 24)
        $this.$splashText = $rt_s(516);
    else if ((ju_Calendar_get($var1, 2) + 1 | 0) == 1 && ju_Calendar_get($var1, 5) == 1)
        $this.$splashText = $rt_s(517);
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(1, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 48 | 0, $rt_s(518)));
    $var1 = $this.$controlList;
    var$2 = nms_GuiButton__init_(2, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 72 | 0, $rt_s(519));
    ju_ArrayList_add($var1, var$2);
    var$2.$enabled = 0;
    $var1 = $this.$controlList;
    var$2 = nms_GuiButton__init_(3, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 96 | 0, $rt_s(520));
    ju_ArrayList_add($var1, var$2);
    var$2.$enabled = 0;
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(0, ($this.$width / 2 | 0) - 100 | 0, (($this.$height0 / 4 | 0) + 120 | 0) + 12 | 0, $rt_s(521)));
    if ($this.$mc5.$field_6320_i === null)
        ju_ArrayList_get($this.$controlList, 1).$enabled = 0;
}
function nms_GuiMainMenu_actionPerformed($this, $var1) {
    if (!$var1.$id2)
        nmc_Minecraft_displayGuiScreen($this.$mc5, nms_GuiOptions__init_($this, $this.$mc5.$gameSettings));
    if ($var1.$id2 == 1)
        nmc_Minecraft_displayGuiScreen($this.$mc5, nms_GuiSelectWorld__init_($this));
}
function nms_GuiMainMenu_drawScreen($this, $var1, $var2, $var3) {
    var $var4, var$5, $var6, var$7, var$8, var$9, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$var6 = $thread.pop();var$5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var4 = nms_Tessellator_instance;
        $ptr = 2;
    case 2:
        nms_GuiMainMenu_drawLogo($this, $var3);
        if ($rt_suspending()) {
            break main;
        }
        var$5 = 3553;
        $var6 = $this.$mc5.$renderEngine;
        var$7 = $rt_s(522);
        $ptr = 3;
    case 3:
        $tmp = nms_RenderEngine_getTexture($var6, var$7);
        if ($rt_suspending()) {
            break main;
        }
        var$8 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$5, var$8);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_Tessellator_setColorOpaque_I($var4, 16777215);
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef(($this.$width / 2 | 0) + 90 | 0, 70.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef((-20.0), 0.0, 0.0, 1.0);
        var$9 = nms_MathHelper_sin(Long_toNumber(Long_rem(jl_System_currentTimeMillis(), Long_fromInt(1000))) / 1000.0 * 3.1415927410125732 * 2.0) * 0.10000000149011612;
        if (var$9 < 0.0)
            var$9 =  -var$9;
        $var5 = (1.7999999523162842 - var$9) * 100.0 / (nms_FontRenderer_getStringWidth($this.$fontRenderer0, $this.$splashText) + 32 | 0);
        olo_EaglerAdapterGL30_glScalef($var5, $var5, $var5);
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$splashText, 0, (-8), 16776960);
        olo_EaglerAdapterGL30_glPopMatrix();
        nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(503), 2, 2, 5263440);
        nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(523), ($this.$width - nms_FontRenderer_getStringWidth($this.$fontRenderer0, $rt_s(523)) | 0) - 2 | 0, $this.$height0 - 10 | 0, 16777215);
        $ptr = 4;
    case 4:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, var$5, $var6, var$7, var$8, var$9, $var5, $ptr);
}
function nms_GuiMainMenu_drawLogo($this, $var1) {
    var $var2, $var3, var$4, $var14, var$6, $var4, $var5, var$9, $var9, $var6, $var7, $var10, $var11, $var12, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var9 = $thread.pop();var$9 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();var$6 = $thread.pop();$var14 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        a: {
            if ($this.$logoEffects === null) {
                $this.$logoEffects = $rt_createMultiArray($rt_arraycls($rt_arraycls(nms_LogoEffectRandomizer)), [$this.$minecraftLogo.data.length, jl_String_length($this.$minecraftLogo.data[0])]);
                $var2 = 0;
                while (true) {
                    if ($var2 >= $this.$logoEffects.data.length)
                        break a;
                    $var3 = 0;
                    while ($var3 < $this.$logoEffects.data[$var2].data.length) {
                        var$4 = $this.$logoEffects.data[$var2].data;
                        $var14 = new nms_LogoEffectRandomizer;
                        $var14.$mainMenu = $this;
                        var$6 = (10 + $var3 | 0) + ju_Random_nextDouble(nms_GuiMainMenu_rand) * 32.0 + $var2;
                        $var14.$field_1311_b = var$6;
                        $var14.$field_1312_a = var$6;
                        var$4[$var3] = $var14;
                        $var3 = $var3 + 1 | 0;
                    }
                    $var2 = $var2 + 1 | 0;
                }
            }
        }
        olo_EaglerAdapterGL30_glMatrixMode(5889);
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glLoadIdentity();
        $var3 = 120 * nms_ScaledResolution__init_($this.$mc5.$displayWidth, $this.$mc5.$displayHeight).$scaleFactor | 0;
        olo_EaglerAdapterGL30_gluPerspective(70.0, $this.$mc5.$displayWidth / $var3, 0.05000000074505806, 100.0);
        olo_EaglerAdapterGL30_glViewport(0, $this.$mc5.$displayHeight - $var3 | 0, $this.$mc5.$displayWidth, $var3);
        olo_EaglerAdapterGL30_glMatrixMode(5888);
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glLoadIdentity();
        olo_EaglerAdapterGL30_glDisable(2884);
        olo_EaglerAdapterGL30_glCullFace(1029);
        olo_EaglerAdapterGL30_glDepthMask(1);
        $var4 = nms_RenderBlocks__init_0();
        $var5 = 0;
        var$9 = $var1;
        if ($var5 >= 3) {
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glMatrixMode(5889);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glMatrixMode(5888);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glViewport(0, 0, $this.$mc5.$displayWidth, $this.$mc5.$displayHeight);
            olo_EaglerAdapterGL30_glEnable(2884);
            return;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef(0.4000000059604645, 0.6000000238418579, (-13.0));
        if (!$var5) {
            olo_EaglerAdapterGL30_glClear(256);
            olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.4000000059604645), 0.0);
            olo_EaglerAdapterGL30_glScalef(0.9800000190734863, 1.0, 1.0);
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        }
        if ($var5 == 1) {
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glClear(256);
        }
        if ($var5 == 2) {
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(768, 1);
        }
        olo_EaglerAdapterGL30_glScalef(1.0, (-1.0), 1.0);
        olo_EaglerAdapterGL30_glRotatef(15.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glScalef(0.8899999856948853, 1.0, 0.4000000059604645);
        olo_EaglerAdapterGL30_glTranslatef( -jl_String_length($this.$minecraftLogo.data[0]) * 0.5,  -$this.$minecraftLogo.data.length * 0.5, 0.0);
        $var3 = 3553;
        $var14 = $this.$mc5.$renderEngine;
        $var9 = $rt_s(193);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var14, $var9);
        if ($rt_suspending()) {
            break main;
        }
        $var6 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var3, $var6);
        if (!$var5) {
            $var3 = 3553;
            $var14 = $this.$mc5.$renderEngine;
            $var9 = $rt_s(524);
            $ptr = 2;
            continue main;
        }
        $var6 = 0;
        while ($var6 < $this.$minecraftLogo.data.length) {
            $var7 = 0;
            while ($var7 < jl_String_length($this.$minecraftLogo.data[$var6])) {
                if (jl_String_charAt($this.$minecraftLogo.data[$var6], $var7) != 32) {
                    olo_EaglerAdapterGL30_glPushMatrix();
                    $var9 = $this.$logoEffects.data[$var7].data[$var6];
                    $var10 = $var9.$field_1311_b + ($var9.$field_1312_a - $var9.$field_1311_b) * var$9;
                    $var11 = 1.0;
                    $var12 = 1.0;
                    if (!$var5) {
                        $var11 = $var10 * 0.03999999910593033 + 1.0;
                        $var12 = 1.0 / $var11;
                        $var10 = 0.0;
                    }
                    olo_EaglerAdapterGL30_glTranslatef($var7, $var6, $var10);
                    olo_EaglerAdapterGL30_glScalef($var11, $var11, $var11);
                    olo_EaglerAdapterGL30_glRotatef(0.0, 0.0, 1.0, 0.0);
                    nms_Block_$callClinit();
                    nms_RenderBlocks_func_1238_a($var4, nms_Block_stone, $var12);
                    olo_EaglerAdapterGL30_glPopMatrix();
                }
                $var7 = $var7 + 1 | 0;
            }
            $var6 = $var6 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        $var5 = $var5 + 1 | 0;
        if ($var5 >= 3) {
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glMatrixMode(5889);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glMatrixMode(5888);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glViewport(0, 0, $this.$mc5.$displayWidth, $this.$mc5.$displayHeight);
            olo_EaglerAdapterGL30_glEnable(2884);
            return;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef(0.4000000059604645, 0.6000000238418579, (-13.0));
        if (!$var5) {
            olo_EaglerAdapterGL30_glClear(256);
            olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.4000000059604645), 0.0);
            olo_EaglerAdapterGL30_glScalef(0.9800000190734863, 1.0, 1.0);
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        }
        if ($var5 == 1) {
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glClear(256);
        }
        if ($var5 == 2) {
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(768, 1);
        }
        olo_EaglerAdapterGL30_glScalef(1.0, (-1.0), 1.0);
        olo_EaglerAdapterGL30_glRotatef(15.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glScalef(0.8899999856948853, 1.0, 0.4000000059604645);
        olo_EaglerAdapterGL30_glTranslatef( -jl_String_length($this.$minecraftLogo.data[0]) * 0.5,  -$this.$minecraftLogo.data.length * 0.5, 0.0);
        $var3 = 3553;
        $var14 = $this.$mc5.$renderEngine;
        $var9 = $rt_s(193);
        continue main;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var14, $var9);
        if ($rt_suspending()) {
            break main;
        }
        $var6 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture($var3, $var6);
        $var6 = 0;
        while ($var6 < $this.$minecraftLogo.data.length) {
            $var7 = 0;
            while ($var7 < jl_String_length($this.$minecraftLogo.data[$var6])) {
                if (jl_String_charAt($this.$minecraftLogo.data[$var6], $var7) != 32) {
                    olo_EaglerAdapterGL30_glPushMatrix();
                    $var9 = $this.$logoEffects.data[$var7].data[$var6];
                    $var10 = $var9.$field_1311_b + ($var9.$field_1312_a - $var9.$field_1311_b) * var$9;
                    $var11 = 1.0;
                    $var12 = 1.0;
                    if (!$var5) {
                        $var11 = $var10 * 0.03999999910593033 + 1.0;
                        $var12 = 1.0 / $var11;
                        $var10 = 0.0;
                    }
                    olo_EaglerAdapterGL30_glTranslatef($var7, $var6, $var10);
                    olo_EaglerAdapterGL30_glScalef($var11, $var11, $var11);
                    olo_EaglerAdapterGL30_glRotatef(0.0, 0.0, 1.0, 0.0);
                    nms_Block_$callClinit();
                    nms_RenderBlocks_func_1238_a($var4, nms_Block_stone, $var12);
                    olo_EaglerAdapterGL30_glPopMatrix();
                }
                $var7 = $var7 + 1 | 0;
            }
            $var6 = $var6 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        $var5 = $var5 + 1 | 0;
        if ($var5 >= 3) {
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glMatrixMode(5889);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glMatrixMode(5888);
            olo_EaglerAdapterGL30_glPopMatrix();
            olo_EaglerAdapterGL30_glViewport(0, 0, $this.$mc5.$displayWidth, $this.$mc5.$displayHeight);
            olo_EaglerAdapterGL30_glEnable(2884);
            return;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef(0.4000000059604645, 0.6000000238418579, (-13.0));
        if (!$var5) {
            olo_EaglerAdapterGL30_glClear(256);
            olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.4000000059604645), 0.0);
            olo_EaglerAdapterGL30_glScalef(0.9800000190734863, 1.0, 1.0);
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        }
        if ($var5 == 1) {
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glClear(256);
        }
        if ($var5 == 2) {
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(768, 1);
        }
        olo_EaglerAdapterGL30_glScalef(1.0, (-1.0), 1.0);
        olo_EaglerAdapterGL30_glRotatef(15.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glScalef(0.8899999856948853, 1.0, 0.4000000059604645);
        olo_EaglerAdapterGL30_glTranslatef( -jl_String_length($this.$minecraftLogo.data[0]) * 0.5,  -$this.$minecraftLogo.data.length * 0.5, 0.0);
        $var3 = 3553;
        $var14 = $this.$mc5.$renderEngine;
        $var9 = $rt_s(193);
        $ptr = 1;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, $var14, var$6, $var4, $var5, var$9, $var9, $var6, $var7, $var10, $var11, $var12, $ptr);
}
function nms_GuiMainMenu__clinit_() {
    nms_GuiMainMenu_rand = new ju_Random;
}
function nms_Entity() {
    var a = this; jl_Object.call(a);
    a.$field_620_ab = 0;
    a.$field_619_ac = 0.0;
    a.$field_618_ad = 0;
    a.$riddenByEntity = null;
    a.$ridingEntity = null;
    a.$worldObj0 = null;
    a.$prevPosX = 0.0;
    a.$prevPosY = 0.0;
    a.$prevPosZ = 0.0;
    a.$posX = 0.0;
    a.$posY = 0.0;
    a.$posZ = 0.0;
    a.$motionX = 0.0;
    a.$motionY = 0.0;
    a.$motionZ = 0.0;
    a.$rotationYaw = 0.0;
    a.$rotationPitch = 0.0;
    a.$prevRotationYaw = 0.0;
    a.$prevRotationPitch = 0.0;
    a.$boundingBox = null;
    a.$onGround = 0;
    a.$field_9297_aI = 0;
    a.$field_9296_aJ = 0;
    a.$field_9295_aK = 0;
    a.$field_9294_aL = 0;
    a.$field_9293_aM = 0;
    a.$isDead = 0;
    a.$yOffset = 0.0;
    a.$width0 = 0.0;
    a.$height = 0.0;
    a.$field_9291_aR = 0.0;
    a.$field_9290_aS = 0.0;
    a.$entityWalks = 0;
    a.$fallDistance = 0.0;
    a.$field_863_b = 0;
    a.$lastTickPosX = 0.0;
    a.$lastTickPosY = 0.0;
    a.$lastTickPosZ = 0.0;
    a.$field_9287_aY = 0.0;
    a.$field_9286_aZ = 0.0;
    a.$field_9314_ba = 0;
    a.$field_632_aO = 0.0;
    a.$field_9313_bc = 0;
    a.$rand2 = null;
    a.$field_9311_be = 0;
    a.$field_9310_bf = 0;
    a.$fire = 0;
    a.$field_9308_bh = 0;
    a.$field_9307_bi = 0;
    a.$field_9306_bj = 0;
    a.$air = 0;
    a.$field_862_c = 0;
    a.$skinUrl = null;
    a.$isImmuneToFire = 0;
    a.$minecartType = 0.0;
    a.$field_667_e = 0.0;
    a.$field_621_aZ = 0;
    a.$field_657_ba = 0;
    a.$field_656_bb = 0;
    a.$field_654_bc = 0;
    a.$field_9300_bu = 0;
    a.$field_9299_bv = 0;
    a.$field_12240_bw = 0;
}
var nms_Entity_field_864_a = 0;
function nms_Entity__init_0(var_0) {
    var var_1 = new nms_Entity();
    nms_Entity__init_(var_1, var_0);
    return var_1;
}
function nms_Entity__init_($this, $var1) {
    var var$2;
    var$2 = nms_Entity_field_864_a;
    nms_Entity_field_864_a = var$2 + 1 | 0;
    $this.$field_620_ab = var$2;
    $this.$field_619_ac = 1.0;
    $this.$field_618_ad = 0;
    $this.$boundingBox = nms_AxisAlignedBB_getBoundingBox(0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    $this.$onGround = 0;
    $this.$field_9295_aK = 0;
    $this.$field_9294_aL = 0;
    $this.$field_9293_aM = 1;
    $this.$isDead = 0;
    $this.$yOffset = 0.0;
    $this.$width0 = 0.6000000238418579;
    $this.$height = 1.7999999523162842;
    $this.$field_9291_aR = 0.0;
    $this.$field_9290_aS = 0.0;
    $this.$entityWalks = 1;
    $this.$fallDistance = 0.0;
    $this.$field_863_b = 1;
    $this.$field_9287_aY = 0.0;
    $this.$field_9286_aZ = 0.0;
    $this.$field_9314_ba = 0;
    $this.$field_632_aO = 0.0;
    $this.$field_9313_bc = 0;
    $this.$rand2 = new ju_Random;
    $this.$field_9311_be = 0;
    $this.$field_9310_bf = 1;
    $this.$fire = 0;
    $this.$field_9308_bh = 300;
    $this.$field_9307_bi = 0;
    $this.$field_9306_bj = 0;
    $this.$air = 300;
    $this.$field_862_c = 1;
    $this.$isImmuneToFire = 0;
    $this.$field_621_aZ = 0;
    $this.$worldObj0 = $var1;
    nms_Entity_setPosition($this, 0.0, 0.0, 0.0);
}
function nms_Entity_equals($this, $var1) {
    return !($var1 instanceof nms_Entity) ? 0 : $var1.$field_620_ab != $this.$field_620_ab ? 0 : 1;
}
function nms_Entity_hashCode($this) {
    return $this.$field_620_ab;
}
function nms_Entity_setEntityDead($this) {
    $this.$isDead = 1;
}
function nms_Entity_setSize($this, $var1, $var2) {
    $this.$width0 = $var1;
    $this.$height = $var2;
}
function nms_Entity_setRotation($this, $var1, $var2) {
    $this.$rotationYaw = $var1;
    $this.$rotationPitch = $var2;
}
function nms_Entity_setPosition($this, $var1, $var3, $var5) {
    var $var7, $var8, var$6, var$7;
    $this.$posX = $var1;
    $this.$posY = $var3;
    $this.$posZ = $var5;
    $var7 = $this.$width0 / 2.0;
    $var8 = $this.$height;
    var$6 = $this.$boundingBox;
    var$7 = $var7;
    nms_AxisAlignedBB_setBounds(var$6, $var1 - var$7, $var3 - $this.$yOffset + $this.$field_9287_aY, $var5 - var$7, $var1 + var$7, $var3 - $this.$yOffset + $this.$field_9287_aY + $var8, $var5 + var$7);
}
function nms_Entity_func_346_d($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = $this.$rotationPitch;
    $var4 = $this.$rotationYaw;
    $this.$rotationYaw = $this.$rotationYaw + $var1 * 0.15;
    $this.$rotationPitch = $this.$rotationPitch - $var2 * 0.15;
    if ($this.$rotationPitch < (-90.0))
        $this.$rotationPitch = (-90.0);
    if ($this.$rotationPitch > 90.0)
        $this.$rotationPitch = 90.0;
    $this.$prevRotationPitch = $this.$prevRotationPitch + $this.$rotationPitch - $var3;
    $this.$prevRotationYaw = $this.$prevRotationYaw + $this.$rotationYaw - $var4;
}
function nms_Entity_onUpdate($this) {
    $this.$func_391_y();
}
function nms_Entity_func_391_y($this) {
    var $var1, $var2, $var3, var$4, $var4, $var5;
    if ($this.$ridingEntity !== null && $this.$ridingEntity.$isDead)
        $this.$ridingEntity = null;
    $this.$field_9311_be = $this.$field_9311_be + 1 | 0;
    $this.$field_9291_aR = $this.$field_9290_aS;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $this.$prevRotationPitch = $this.$rotationPitch;
    $this.$prevRotationYaw = $this.$rotationYaw;
    if (!$this.$handleWaterMovement())
        $this.$field_9307_bi = 0;
    else {
        a: {
            if (!$this.$field_9307_bi && !$this.$field_862_c) {
                $var1 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX * 0.20000000298023224 + $this.$motionY * $this.$motionY + $this.$motionZ * $this.$motionZ * 0.20000000298023224) * 0.20000000298023224;
                if ($var1 > 1.0)
                    $var1 = 1.0;
                nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(525), $var1, 1.0 + (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.4000000059604645);
                $var2 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
                $var3 = 0;
                var$4 = $var2 + 1.0;
                while ($var3 < 1.0 + $this.$width0 * 20.0) {
                    $var4 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                    $var5 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                    nms_World_spawnParticle($this.$worldObj0, $rt_s(485), $this.$posX + $var4, var$4, $this.$posZ + $var5, $this.$motionX, $this.$motionY - ju_Random_nextFloat($this.$rand2) * 0.20000000298023224, $this.$motionZ);
                    $var3 = $var3 + 1 | 0;
                }
                $var3 = 0;
                while (true) {
                    if ($var3 >= 1.0 + $this.$width0 * 20.0)
                        break a;
                    $var4 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                    $var5 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                    nms_World_spawnParticle($this.$worldObj0, $rt_s(487), $this.$posX + $var4, var$4, $this.$posZ + $var5, $this.$motionX, $this.$motionY, $this.$motionZ);
                    $var3 = $var3 + 1 | 0;
                }
            }
        }
        $this.$fallDistance = 0.0;
        $this.$field_9307_bi = 1;
        $this.$fire = 0;
    }
    if ($this.$fire > 0) {
        if ($this.$isImmuneToFire) {
            $this.$fire = $this.$fire - 4 | 0;
            if ($this.$fire < 0)
                $this.$fire = 0;
        } else {
            if (!($this.$fire % 20 | 0))
                $this.$canAttackEntity(null, 1);
            $this.$fire = $this.$fire - 1 | 0;
        }
    }
    if (nms_Entity_handleLavaMovement($this))
        nms_Entity_func_4038_J($this);
    if ($this.$posY < (-64.0))
        $this.$func_4034_G();
    $this.$field_862_c = 0;
}
function nms_Entity_func_4038_J($this) {
    if (!$this.$isImmuneToFire) {
        $this.$canAttackEntity(null, 4);
        $this.$fire = 600;
    }
}
function nms_Entity_func_4034_G($this) {
    $this.$setEntityDead0();
}
function nms_Entity_func_403_b($this, $var1, $var3, $var5) {
    var $var7;
    $var7 = nms_AxisAlignedBB_getOffsetBoundingBox($this.$boundingBox, $var1, $var3, $var5);
    return nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, $var7).$size > 0 ? 0 : nms_World_getIsAnyLiquid($this.$worldObj0, $var7) ? 0 : 1;
}
function nms_Entity_moveEntity($this, $var1, $var3, $var5) {
    var $var7, $var9, $var17, $var18, var$8, $var28, var$10, $var21, $var35, $var20, var$14, $var36, $var37, $var19, $var23, $var27, $var38, $var26, $var40, $var29, $var31, $var41, $var30, $var32, $var33, $var34, $var39;
    if (!$this.$field_9314_ba) {
        $var7 = $this.$posX;
        $var9 = $this.$posZ;
        $var17 = nms_AxisAlignedBB_copy($this.$boundingBox);
        $var18 = $this.$onGround && $this.$func_381_o() ? 1 : 0;
        a: {
            if ($var18) {
                var$8 = $var1;
                b: {
                    while (true) {
                        $var28 = $rt_compare($var1, 0.0);
                        if (!$var28)
                            break;
                        if (ju_ArrayList_size(nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, nms_AxisAlignedBB_getOffsetBoundingBox($this.$boundingBox, $var1, (-1.0), 0.0)))) {
                            var$10 = $var5;
                            break b;
                        }
                        $var1 = $var1 < 0.05 && $var1 >= (-0.05) ? 0.0 : $var28 <= 0 ? $var1 + 0.05 : $var1 - 0.05;
                        var$8 = $var1;
                    }
                    var$10 = $var5;
                }
                while (true) {
                    $var21 = $rt_compare($var5, 0.0);
                    if (!$var21)
                        break;
                    if (ju_ArrayList_size(nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, nms_AxisAlignedBB_getOffsetBoundingBox($this.$boundingBox, 0.0, (-1.0), $var5))))
                        break a;
                    $var5 = $var5 < 0.05 && $var5 >= (-0.05) ? 0.0 : $var21 <= 0 ? $var5 + 0.05 : $var5 - 0.05;
                    var$10 = $var5;
                }
            } else {
                var$8 = $var1;
                var$10 = $var5;
            }
        }
        $var35 = nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, nms_AxisAlignedBB_addCoord($this.$boundingBox, $var1, $var3, $var5));
        $var20 = 0;
        var$14 = $var3;
        while ($var20 < ju_ArrayList_size($var35)) {
            var$14 = nms_AxisAlignedBB_func_1172_b(ju_ArrayList_get($var35, $var20), $this.$boundingBox, var$14);
            $var20 = $var20 + 1 | 0;
        }
        nms_AxisAlignedBB_offset($this.$boundingBox, 0.0, var$14, 0.0);
        if (!$this.$field_9293_aM && $var3 !== var$14) {
            $var1 = 0.0;
            $var5 = $var1;
            var$14 = $var1;
        }
        c: {
            d: {
                if (!$this.$onGround) {
                    if ($var3 === var$14)
                        break d;
                    if ($var3 >= 0.0)
                        break d;
                }
                $var36 = 1;
                break c;
            }
            $var36 = 0;
        }
        $var21 = 0;
        while ($var21 < ju_ArrayList_size($var35)) {
            $var1 = nms_AxisAlignedBB_func_1163_a(ju_ArrayList_get($var35, $var21), $this.$boundingBox, $var1);
            $var21 = $var21 + 1 | 0;
        }
        nms_AxisAlignedBB_offset($this.$boundingBox, $var1, 0.0, 0.0);
        if (!$this.$field_9293_aM && var$8 !== $var1) {
            $var1 = 0.0;
            $var5 = $var1;
            var$14 = $var1;
        }
        $var21 = 0;
        while ($var21 < ju_ArrayList_size($var35)) {
            $var5 = nms_AxisAlignedBB_func_1162_c(ju_ArrayList_get($var35, $var21), $this.$boundingBox, $var5);
            $var21 = $var21 + 1 | 0;
        }
        nms_AxisAlignedBB_offset($this.$boundingBox, 0.0, 0.0, $var5);
        if (!$this.$field_9293_aM && var$10 !== $var5) {
            $var1 = 0.0;
            $var5 = $var1;
            var$14 = $var1;
        }
        if ($this.$field_9286_aZ <= 0.0) {
            $var37 = $var1;
            $var19 = var$14;
            $var23 = $var5;
        } else if (!$var36) {
            $var37 = $var1;
            $var19 = var$14;
            $var23 = $var5;
        } else if ($this.$field_9287_aY >= 0.05000000074505806) {
            $var37 = $var1;
            $var19 = var$14;
            $var23 = $var5;
        } else if (var$8 === $var1 && var$10 === $var5) {
            $var37 = $var1;
            $var19 = var$14;
            $var23 = $var5;
        } else {
            $var19 = $this.$field_9286_aZ;
            $var27 = nms_AxisAlignedBB_copy($this.$boundingBox);
            nms_AxisAlignedBB_setBB($this.$boundingBox, $var17);
            $var35 = nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, nms_AxisAlignedBB_addCoord($this.$boundingBox, var$8, $var19, var$10));
            $var28 = 0;
            while ($var28 < ju_ArrayList_size($var35)) {
                $var19 = nms_AxisAlignedBB_func_1172_b(ju_ArrayList_get($var35, $var28), $this.$boundingBox, $var19);
                $var28 = $var28 + 1 | 0;
            }
            nms_AxisAlignedBB_offset($this.$boundingBox, 0.0, $var19, 0.0);
            if ($this.$field_9293_aM) {
                $var23 = var$10;
                $var37 = var$8;
            } else if ($var3 === $var19) {
                $var23 = var$10;
                $var37 = var$8;
            } else {
                $var37 = 0.0;
                $var23 = $var37;
                $var19 = $var37;
            }
            $var21 = 0;
            while ($var21 < ju_ArrayList_size($var35)) {
                $var37 = nms_AxisAlignedBB_func_1163_a(ju_ArrayList_get($var35, $var21), $this.$boundingBox, $var37);
                $var21 = $var21 + 1 | 0;
            }
            nms_AxisAlignedBB_offset($this.$boundingBox, $var37, 0.0, 0.0);
            if (!$this.$field_9293_aM && var$8 !== $var37) {
                $var37 = 0.0;
                $var23 = $var37;
                $var19 = $var37;
            }
            $var21 = 0;
            while ($var21 < ju_ArrayList_size($var35)) {
                $var23 = nms_AxisAlignedBB_func_1162_c(ju_ArrayList_get($var35, $var21), $this.$boundingBox, $var23);
                $var21 = $var21 + 1 | 0;
            }
            nms_AxisAlignedBB_offset($this.$boundingBox, 0.0, 0.0, $var23);
            if (!$this.$field_9293_aM && var$10 !== $var23) {
                $var37 = 0.0;
                $var23 = $var37;
                $var19 = $var37;
            }
            if ($var1 * $var1 + $var5 * $var5 >= $var37 * $var37 + $var23 * $var23) {
                nms_AxisAlignedBB_setBB($this.$boundingBox, $var27);
                $var37 = $var1;
                $var19 = var$14;
                $var23 = $var5;
            } else
                $this.$field_9287_aY = $this.$field_9287_aY + 0.5;
        }
        $this.$posX = ($this.$boundingBox.$minX + $this.$boundingBox.$maxX0) / 2.0;
        $this.$posY = $this.$boundingBox.$minY0 + $this.$yOffset - $this.$field_9287_aY;
        $this.$posZ = ($this.$boundingBox.$minZ0 + $this.$boundingBox.$maxZ0) / 2.0;
        $var21 = $rt_compare(var$8, $var37);
        $this.$field_9297_aI = !$var21 && var$10 === $var23 ? 0 : 1;
        $var28 = $rt_compare($var3, $var19);
        $this.$field_9296_aJ = !$var28 ? 0 : 1;
        $this.$onGround = $var28 && $var3 < 0.0 ? 1 : 0;
        $this.$field_9295_aK = !$this.$field_9297_aI && !$this.$field_9296_aJ ? 0 : 1;
        nms_Entity_func_9279_a($this, $var19, $this.$onGround);
        if ($var21)
            $this.$motionX = 0.0;
        if ($var28)
            $this.$motionY = 0.0;
        if (var$10 !== $var23)
            $this.$motionZ = 0.0;
        $var37 = $this.$posX - $var7;
        $var23 = $this.$posZ - $var9;
        if ($this.$entityWalks && !$var18) {
            $this.$field_9290_aS = $this.$field_9290_aS + nms_MathHelper_sqrt_double($var37 * $var37 + $var23 * $var23) * 0.6;
            $var38 = nms_MathHelper_floor_double($this.$posX);
            $var26 = nms_MathHelper_floor_double($this.$posY - 0.20000000298023224 - $this.$yOffset);
            $var40 = nms_MathHelper_floor_double($this.$posZ);
            $var28 = nms_World_getBlockId($this.$worldObj0, $var38, $var26, $var40);
            if ($this.$field_9290_aS > $this.$field_863_b && $var28 > 0) {
                $this.$field_863_b = $this.$field_863_b + 1 | 0;
                nms_Block_$callClinit();
                $var29 = nms_Block_blocksList.data[$var28].$stepSound;
                if (nms_World_getBlockId($this.$worldObj0, $var38, $var26 + 1 | 0, $var40) == nms_Block_snow.$blockID) {
                    $var27 = nms_Block_snow.$stepSound;
                    nms_World_playSoundAtEntity($this.$worldObj0, $this, nms_StepSound_func_1145_d($var27), nms_StepSound_func_1147_b($var27) * 0.15000000596046448, nms_StepSound_func_1144_c($var27));
                } else if (!nms_Block_blocksList.data[$var28].$blockMaterial.$getIsLiquid())
                    nms_World_playSoundAtEntity($this.$worldObj0, $this, nms_StepSound_func_1145_d($var29), nms_StepSound_func_1147_b($var29) * 0.15000000596046448, nms_StepSound_func_1144_c($var29));
                nms_Block_blocksList.data[$var28].$onEntityWalking($this.$worldObj0, $var38, $var26, $var40, $this);
            }
        }
        $var31 = nms_MathHelper_floor_double($this.$boundingBox.$minX);
        $var26 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
        $var40 = nms_MathHelper_floor_double($this.$boundingBox.$minZ0);
        $var28 = nms_MathHelper_floor_double($this.$boundingBox.$maxX0);
        $var41 = nms_MathHelper_floor_double($this.$boundingBox.$maxY0);
        $var30 = nms_MathHelper_floor_double($this.$boundingBox.$maxZ0);
        while ($var31 <= $var28) {
            $var32 = $var26;
            while ($var32 <= $var41) {
                $var33 = $var40;
                while ($var33 <= $var30) {
                    $var34 = nms_World_getBlockId($this.$worldObj0, $var31, $var32, $var33);
                    if ($var34 > 0) {
                        nms_Block_$callClinit();
                        nms_Block_blocksList.data[$var34].$onEntityCollidedWithBlock($this.$worldObj0, $var31, $var32, $var33, $this);
                    }
                    $var33 = $var33 + 1 | 0;
                }
                $var32 = $var32 + 1 | 0;
            }
            $var31 = $var31 + 1 | 0;
        }
        $this.$field_9287_aY = $this.$field_9287_aY * 0.4000000059604645;
        $var39 = $this.$handleWaterMovement();
        if (nms_World_isBoundingBoxBurning($this.$worldObj0, $this.$boundingBox)) {
            $this.$func_355_a(1);
            if (!$var39) {
                $this.$fire = $this.$fire + 1 | 0;
                if (!$this.$fire)
                    $this.$fire = 300;
            }
        } else if ($this.$fire <= 0)
            $this.$fire =  -$this.$field_9310_bf;
        if ($var39 && $this.$fire > 0) {
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(279), 0.699999988079071, 1.600000023841858 + (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.4000000059604645);
            $this.$fire =  -$this.$field_9310_bf;
        }
    } else {
        nms_AxisAlignedBB_offset($this.$boundingBox, $var1, $var3, $var5);
        $this.$posX = ($this.$boundingBox.$minX + $this.$boundingBox.$maxX0) / 2.0;
        $this.$posY = $this.$boundingBox.$minY0 + $this.$yOffset - $this.$field_9287_aY;
        $this.$posZ = ($this.$boundingBox.$minZ0 + $this.$boundingBox.$maxZ0) / 2.0;
    }
}
function nms_Entity_func_9279_a($this, $var1, $var3) {
    if (!$var3) {
        if ($var1 < 0.0)
            $this.$fallDistance = $this.$fallDistance - $var1;
    } else if ($this.$fallDistance > 0.0) {
        $this.$fall($this.$fallDistance);
        $this.$fallDistance = 0.0;
    }
}
function nms_Entity_func_381_o($this) {
    return 0;
}
function nms_Entity_func_372_f_($this) {
    return null;
}
function nms_Entity_func_355_a($this, $var1) {
    if (!$this.$isImmuneToFire)
        $this.$canAttackEntity(null, $var1);
}
function nms_Entity_fall($this, $var1) {
    return;
}
function nms_Entity_handleWaterMovement($this) {
    return nms_World_func_682_a($this.$worldObj0, nms_AxisAlignedBB_expands($this.$boundingBox, 0.0, (-0.4000000059604645), 0.0), nms_Material_water, $this);
}
function nms_Entity_isInsideOfMaterial($this, $var1) {
    var $var2, $var4, $var5, $var6, $var7;
    $var2 = $this.$posY + $this.$func_373_s();
    $var4 = nms_MathHelper_floor_double($this.$posX);
    $var5 = nms_MathHelper_floor_float(nms_MathHelper_floor_double($var2));
    $var6 = nms_MathHelper_floor_double($this.$posZ);
    $var7 = nms_World_getBlockId($this.$worldObj0, $var4, $var5, $var6);
    if ($var7) {
        nms_Block_$callClinit();
        if (nms_Block_blocksList.data[$var7].$blockMaterial === $var1)
            return $var2 >= ($var5 + 1 | 0) - (nms_BlockFluids_func_288_b(nms_World_getBlockMetadata($this.$worldObj0, $var4, $var5, $var6)) - 0.1111111119389534) ? 0 : 1;
    }
    return 0;
}
function nms_Entity_handleLavaMovement($this) {
    return nms_World_func_689_a($this.$worldObj0, nms_AxisAlignedBB_expands($this.$boundingBox, 0.0, (-0.4000000059604645), 0.0), nms_Material_lava);
}
function nms_Entity_func_351_a($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6;
    $var4 = nms_MathHelper_sqrt_float($var1 * $var1 + $var2 * $var2);
    if ($var4 >= 0.009999999776482582) {
        if ($var4 < 1.0)
            $var4 = 1.0;
        $var3 = $var3 / $var4;
        $var1 = $var1 * $var3;
        $var2 = $var2 * $var3;
        $var5 = nms_MathHelper_sin($this.$rotationYaw * 3.1415927410125732 / 180.0);
        $var6 = nms_MathHelper_cos($this.$rotationYaw * 3.1415927410125732 / 180.0);
        $this.$motionX = $this.$motionX + $var1 * $var6 - $var2 * $var5;
        $this.$motionZ = $this.$motionZ + $var2 * $var6 + $var1 * $var5;
    }
}
function nms_Entity_getEntityBrightness($this, $var1) {
    var $var2, $var3, $var5, $var6;
    $var2 = nms_MathHelper_floor_double($this.$posX);
    $var3 = ($this.$boundingBox.$maxY0 - $this.$boundingBox.$minY0) * 0.66;
    $var5 = nms_MathHelper_floor_double($this.$posY - $this.$yOffset + $var3);
    $var6 = nms_MathHelper_floor_double($this.$posZ);
    return nms_World_getLightBrightness($this.$worldObj0, $var2, $var5, $var6);
}
function nms_Entity_setWorld($this, $var1) {
    $this.$worldObj0 = $var1;
}
function nms_Entity_setLocationAndAngles($this, $var1, $var3, $var5, $var7, $var8) {
    $this.$posX = $var1;
    $this.$prevPosX = $var1;
    $var1 = $var3 + $this.$yOffset;
    $this.$posY = $var1;
    $this.$prevPosY = $var1;
    $this.$posZ = $var5;
    $this.$prevPosZ = $var5;
    $this.$rotationYaw = $var7;
    $this.$rotationPitch = $var8;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
}
function nms_Entity_getDistanceToEntity($this, $var1) {
    var $var2, $var3, $var4;
    $var2 = $this.$posX - $var1.$posX;
    $var3 = $this.$posY - $var1.$posY;
    $var4 = $this.$posZ - $var1.$posZ;
    return nms_MathHelper_sqrt_float($var2 * $var2 + $var3 * $var3 + $var4 * $var4);
}
function nms_Entity_getDistanceSq($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11;
    $var7 = $this.$posX - $var1;
    $var9 = $this.$posY - $var3;
    $var11 = $this.$posZ - $var5;
    return $var7 * $var7 + $var9 * $var9 + $var11 * $var11;
}
function nms_Entity_getDistance($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11;
    $var7 = $this.$posX - $var1;
    $var9 = $this.$posY - $var3;
    $var11 = $this.$posZ - $var5;
    return nms_MathHelper_sqrt_double($var7 * $var7 + $var9 * $var9 + $var11 * $var11);
}
function nms_Entity_getDistanceSqToEntity($this, $var1) {
    var $var2, $var4, $var6;
    $var2 = $this.$posX - $var1.$posX;
    $var4 = $this.$posY - $var1.$posY;
    $var6 = $this.$posZ - $var1.$posZ;
    return $var2 * $var2 + $var4 * $var4 + $var6 * $var6;
}
function nms_Entity_onCollideWithPlayer($this, $var1) {
    return;
}
function nms_Entity_applyEntityCollision($this, $var1) {
    var $var2, $var4, $var6, $var6_0, $var8;
    if ($var1.$riddenByEntity !== $this && $var1.$ridingEntity !== $this) {
        $var2 = $var1.$posX - $this.$posX;
        $var4 = $var1.$posZ - $this.$posZ;
        $var6 = $var2 < 0.0 ?  -$var2 : $var2;
        $var6_0 = $var4 < 0.0 ?  -$var4 : $var4;
        if ($var6 > $var6_0)
            $var6_0 = $var6;
        if ($var6_0 >= 0.009999999776482582) {
            $var6 = nms_MathHelper_sqrt_double($var6_0);
            $var2 = $var2 / $var6;
            $var6_0 = $var4 / $var6;
            $var8 = 1.0 / $var6;
            if ($var8 > 1.0)
                $var8 = 1.0;
            $var2 = $var2 * $var8;
            $var6 = $var6_0 * $var8;
            $var2 = $var2 * 0.05000000074505806;
            $var6 = $var6 * 0.05000000074505806;
            $var2 = $var2 * (1.0 - $this.$field_632_aO);
            $var6 = $var6 * (1.0 - $this.$field_632_aO);
            nms_Entity_addVelocity($this,  -$var2, 0.0,  -$var6);
            nms_Entity_addVelocity($var1, $var2, 0.0, $var6);
        }
    }
}
function nms_Entity_addVelocity($this, $var1, $var3, $var5) {
    $this.$motionX = $this.$motionX + $var1;
    $this.$motionY = $this.$motionY + $var3;
    $this.$motionZ = $this.$motionZ + $var5;
}
function nms_Entity_func_9281_M($this) {
    $this.$field_9294_aL = 1;
}
function nms_Entity_canAttackEntity($this, $var1, $var2) {
    nms_Entity_func_9281_M($this);
    return 0;
}
function nms_Entity_canBeCollidedWith($this) {
    return 0;
}
function nms_Entity_canBePushed($this) {
    return 0;
}
function nms_Entity_addToPlayerScore($this, $var1, $var2) {
    return;
}
function nms_Entity_func_390_a($this, $var1) {
    var $var2, $var4, $var6;
    $var2 = $this.$posX - $var1.$xCoord;
    $var4 = $this.$posY - $var1.$yCoord;
    $var6 = $this.$posZ - $var1.$zCoord;
    return $this.$func_384_a($var2 * $var2 + $var4 * $var4 + $var6 * $var6);
}
function nms_Entity_func_384_a($this, $var1) {
    var var$2;
    var$2 = nms_AxisAlignedBB_getAverageEdgeLength($this.$boundingBox) * 64.0 * $this.$field_619_ac;
    return $var1 >= var$2 * var$2 ? 0 : 1;
}
function nms_Entity_func_358_c($this, $var1) {
    var $var2;
    $var2 = nms_Entity_getEntityString($this);
    if (!$this.$isDead && $var2 !== null) {
        nms_NBTTagCompound_setString($var1, $rt_s(292), $var2);
        nms_Entity_writeToNBT($this, $var1);
        return 1;
    }
    return 0;
}
function nms_Entity_writeToNBT($this, $var1) {
    var var$2, var$3;
    var$2 = $rt_createDoubleArray(3);
    var$3 = var$2.data;
    var$3[0] = $this.$posX;
    var$3[1] = $this.$posY;
    var$3[2] = $this.$posZ;
    nms_NBTTagCompound_setTag($var1, $rt_s(526), nms_Entity_func_375_a($this, var$2));
    var$2 = $rt_createDoubleArray(3);
    var$3 = var$2.data;
    var$3[0] = $this.$motionX;
    var$3[1] = $this.$motionY;
    var$3[2] = $this.$motionZ;
    nms_NBTTagCompound_setTag($var1, $rt_s(527), nms_Entity_func_375_a($this, var$2));
    var$2 = $rt_createFloatArray(2);
    var$3 = var$2.data;
    var$3[0] = $this.$rotationYaw;
    var$3[1] = $this.$rotationPitch;
    nms_NBTTagCompound_setTag($var1, $rt_s(528), nms_Entity_func_377_a($this, var$2));
    nms_NBTTagCompound_setFloat($var1, $rt_s(529), $this.$fallDistance);
    nms_NBTTagCompound_setShort($var1, $rt_s(530), $this.$fire << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(531), $this.$air << 16 >> 16);
    nms_NBTTagCompound_setBoolean($var1, $rt_s(532), $this.$onGround);
    $this.$writeEntityToNBT($var1);
}
function nms_Entity_readFromNBT($this, $var1) {
    var $var2, $var3, $var4, var$5, var$6;
    $var2 = nms_NBTTagCompound_getTagList($var1, $rt_s(526));
    $var3 = nms_NBTTagCompound_getTagList($var1, $rt_s(527));
    $var4 = nms_NBTTagCompound_getTagList($var1, $rt_s(528));
    nms_Entity_setPosition($this, 0.0, 0.0, 0.0);
    $this.$motionX = nms_NBTTagList_tagAt($var3, 0).$doubleValue0;
    $this.$motionY = nms_NBTTagList_tagAt($var3, 1).$doubleValue0;
    $this.$motionZ = nms_NBTTagList_tagAt($var3, 2).$doubleValue0;
    var$5 = nms_NBTTagList_tagAt($var2, 0).$doubleValue0;
    $this.$posX = var$5;
    $this.$lastTickPosX = var$5;
    $this.$prevPosX = var$5;
    var$5 = nms_NBTTagList_tagAt($var2, 1).$doubleValue0;
    $this.$posY = var$5;
    $this.$lastTickPosY = var$5;
    $this.$prevPosY = var$5;
    var$5 = nms_NBTTagList_tagAt($var2, 2).$doubleValue0;
    $this.$posZ = var$5;
    $this.$lastTickPosZ = var$5;
    $this.$prevPosZ = var$5;
    var$6 = nms_NBTTagList_tagAt($var4, 0).$floatValue0;
    $this.$rotationYaw = var$6;
    $this.$prevRotationYaw = var$6;
    var$6 = nms_NBTTagList_tagAt($var4, 1).$floatValue0;
    $this.$rotationPitch = var$6;
    $this.$prevRotationPitch = var$6;
    $this.$fallDistance = nms_NBTTagCompound_getFloat($var1, $rt_s(529));
    $this.$fire = nms_NBTTagCompound_getShort($var1, $rt_s(530));
    $this.$air = nms_NBTTagCompound_getShort($var1, $rt_s(531));
    $this.$onGround = nms_NBTTagCompound_getBoolean($var1, $rt_s(532));
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$readEntityFromNBT($var1);
}
function nms_Entity_getEntityString($this) {
    return ju_HashMap_get(nms_EntityList_classToStringMapping, jl_Object_getClass($this));
}
function nms_Entity_func_375_a($this, $var1) {
    var $var2, $var4, $var5;
    $var1 = $var1.data;
    $var2 = nms_NBTTagList__init_0();
    $var4 = $var1.length;
    $var5 = 0;
    while ($var5 < $var4) {
        nms_NBTTagList_setTag($var2, nms_NBTTagDouble__init_0($var1[$var5]));
        $var5 = $var5 + 1 | 0;
    }
    return $var2;
}
function nms_Entity_func_377_a($this, $var1) {
    var $var2, $var4, $var5;
    $var1 = $var1.data;
    $var2 = nms_NBTTagList__init_0();
    $var4 = $var1.length;
    $var5 = 0;
    while ($var5 < $var4) {
        nms_NBTTagList_setTag($var2, nms_NBTTagFloat__init_0($var1[$var5]));
        $var5 = $var5 + 1 | 0;
    }
    return $var2;
}
function nms_Entity_func_392_h_($this) {
    return $this.$height / 2.0;
}
function nms_Entity_dropItem($this, $var1, $var2) {
    return nms_Entity_dropItemWithOffset($this, $var1, $var2, 0.0);
}
function nms_Entity_dropItemWithOffset($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = nms_EntityItem__init_($this.$worldObj0, $this.$posX, $this.$posY + $var3, $this.$posZ, nms_ItemStack__init_3($var1, $var2));
    $var4.$field_805_c = 10;
    nms_World_entityJoinedWorld($this.$worldObj0, $var4);
    return $var4;
}
function nms_Entity_func_345_I($this) {
    var $var1, $var2, $var3;
    $var1 = nms_MathHelper_floor_double($this.$posX);
    $var2 = nms_MathHelper_floor_double($this.$posY + $this.$func_373_s());
    $var3 = nms_MathHelper_floor_double($this.$posZ);
    return nms_World_isBlockOpaqueCube($this.$worldObj0, $var1, $var2, $var3);
}
function nms_Entity_interact($this, $var1) {
    return 0;
}
function nms_Entity_func_383_b_($this, $var1) {
    return null;
}
function nms_Entity_func_350_p($this) {
    var $var1, $var3, var$3, var$4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();$var3 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$ridingEntity.$isDead) {
            $this.$ridingEntity = null;
            return;
        }
        $this.$motionX = 0.0;
        $this.$motionY = 0.0;
        $this.$motionZ = 0.0;
        $ptr = 1;
    case 1:
        $this.$onUpdate();
        if ($rt_suspending()) {
            break main;
        }
        $this.$ridingEntity.$func_366_i_();
        $this.$field_667_e = $this.$field_667_e + $this.$ridingEntity.$rotationYaw - $this.$ridingEntity.$prevRotationYaw;
        $this.$minecartType = $this.$minecartType + $this.$ridingEntity.$rotationPitch - $this.$ridingEntity.$prevRotationPitch;
        while ($this.$field_667_e >= 180.0) {
            $this.$field_667_e = $this.$field_667_e - 360.0;
        }
        while ($this.$field_667_e < (-180.0)) {
            $this.$field_667_e = $this.$field_667_e + 360.0;
        }
        while ($this.$minecartType >= 180.0) {
            $this.$minecartType = $this.$minecartType - 360.0;
        }
        while ($this.$minecartType < (-180.0)) {
            $this.$minecartType = $this.$minecartType + 360.0;
        }
        $var1 = $this.$field_667_e * 0.5;
        $var3 = $this.$minecartType * 0.5;
        var$3 = 10.0;
        if ($var1 > var$3)
            $var1 = var$3;
        var$4 = (-10.0);
        if ($var1 < var$4)
            $var1 = var$4;
        if ($var3 <= var$3)
            var$3 = $var3;
        if (var$3 >= var$4)
            var$4 = var$3;
        $this.$field_667_e = $this.$field_667_e - $var1;
        $this.$minecartType = $this.$minecartType - var$4;
        $this.$rotationYaw = $this.$rotationYaw + $var1;
        $this.$rotationPitch = $this.$rotationPitch + var$4;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var3, var$3, var$4, $ptr);
}
function nms_Entity_func_366_i_($this) {
    nms_Entity_setPosition($this.$riddenByEntity, $this.$posX, $this.$posY + $this.$func_402_h() + $this.$riddenByEntity.$func_388_v(), $this.$posZ);
}
function nms_Entity_func_388_v($this) {
    return $this.$yOffset;
}
function nms_Entity_func_402_h($this) {
    return $this.$height * 0.75;
}
function nms_Entity_mountEntity($this, $var1) {
    $this.$minecartType = 0.0;
    $this.$field_667_e = 0.0;
    if ($var1 === null) {
        if ($this.$ridingEntity !== null) {
            nms_Entity_setLocationAndAngles($this, $this.$ridingEntity.$posX, $this.$ridingEntity.$boundingBox.$minY0 + $this.$ridingEntity.$height, $this.$ridingEntity.$posZ, $this.$rotationYaw, $this.$rotationPitch);
            $this.$ridingEntity.$riddenByEntity = null;
        }
        $this.$ridingEntity = null;
    } else if ($this.$ridingEntity === $var1) {
        $this.$ridingEntity.$riddenByEntity = null;
        $this.$ridingEntity = null;
        nms_Entity_setLocationAndAngles($this, $var1.$posX, $var1.$boundingBox.$minY0 + $var1.$height, $var1.$posZ, $this.$rotationYaw, $this.$rotationPitch);
    } else {
        if ($this.$ridingEntity !== null)
            $this.$ridingEntity.$riddenByEntity = null;
        if ($var1.$riddenByEntity !== null)
            $var1.$riddenByEntity.$ridingEntity = null;
        $this.$ridingEntity = $var1;
        $var1.$riddenByEntity = $this;
    }
}
function nms_Entity_func_4035_j_($this) {
    return 0.10000000149011612;
}
function nms_Entity_func_4039_q($this) {
    return;
}
function nms_Entity__clinit_() {
    nms_Entity_field_864_a = 0;
}
function nms_EntityLiving() {
    var a = this; nms_Entity.call(a);
    a.$field_9366_o = 0;
    a.$field_9365_p = 0.0;
    a.$field_9364_q = 0.0;
    a.$field_9363_r = 0.0;
    a.$field_735_n = 0.0;
    a.$field_734_o = 0.0;
    a.$field_9362_u = 0.0;
    a.$field_9361_v = 0.0;
    a.$field_9360_w = 0.0;
    a.$field_9359_x = 0.0;
    a.$field_9358_y = 0;
    a.$texture = null;
    a.$field_9355_A = 0;
    a.$field_9353_B = 0.0;
    a.$field_9351_C = null;
    a.$field_9349_D = 0.0;
    a.$field_9347_E = 0;
    a.$field_9345_F = 0.0;
    a.$field_9343_G = 0;
    a.$prevSwingProgress = 0.0;
    a.$swingProgress = 0.0;
    a.$health = 0;
    a.$field_9335_K = 0;
    a.$a0 = 0;
    a.$hurtTime = 0;
    a.$field_9332_M = 0;
    a.$field_9331_N = 0.0;
    a.$deathTime = 0;
    a.$attackTime = 0;
    a.$field_9329_Q = 0.0;
    a.$field_9328_R = 0.0;
    a.$field_9327_S = 0;
    a.$field_9326_T = 0;
    a.$field_9325_U = 0.0;
    a.$field_705_Q = 0.0;
    a.$field_704_R = 0.0;
    a.$field_703_S = 0.0;
    a.$field_9324_Y = 0;
    a.$field_9323_Z = 0.0;
    a.$field_9356_aa = 0.0;
    a.$field_9354_ab = 0.0;
    a.$field_9352_ac = 0.0;
    a.$field_9350_ad = 0.0;
    a.$field_9348_ae = 0.0;
    a.$field_9346_af = 0;
    a.$field_9344_ag = 0;
    a.$field_9342_ah = 0.0;
    a.$field_9340_ai = 0.0;
    a.$field_9338_aj = 0.0;
    a.$isJumping = 0;
    a.$field_9334_al = 0.0;
    a.$field_9333_am = 0.0;
    a.$b1 = null;
    a.$c0 = 0;
}
function nms_EntityLiving__init_0(var_0) {
    var var_1 = new nms_EntityLiving();
    nms_EntityLiving__init_(var_1, var_0);
    return var_1;
}
function nms_EntityLiving__init_($this, $var1) {
    nms_Entity__init_($this, $var1);
    $this.$field_9366_o = 20;
    $this.$field_735_n = 0.0;
    $this.$field_734_o = 0.0;
    $this.$field_9358_y = 1;
    $this.$texture = $rt_s(460);
    $this.$field_9355_A = 1;
    $this.$field_9353_B = 0.0;
    $this.$field_9351_C = null;
    $this.$field_9349_D = 1.0;
    $this.$field_9347_E = 0;
    $this.$field_9345_F = 0.0;
    $this.$field_9343_G = 0;
    $this.$health = 10;
    $this.$field_9331_N = 0.0;
    $this.$deathTime = 0;
    $this.$attackTime = 0;
    $this.$field_9327_S = 0;
    $this.$field_9326_T = (-1);
    $this.$field_9325_U = jl_Math_random() * 0.8999999761581421 + 0.10000000149011612;
    $this.$field_9348_ae = 0.0;
    $this.$field_9346_af = 0;
    $this.$field_9344_ag = 0;
    $this.$isJumping = 0;
    $this.$field_9334_al = 0.0;
    $this.$field_9333_am = 0.699999988079071;
    $this.$c0 = 0;
    $this.$field_618_ad = 1;
    $this.$field_9363_r = (jl_Math_random() + 1.0) * 0.009999999776482582;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$field_9365_p = jl_Math_random() * 12398.0;
    $this.$rotationYaw = jl_Math_random() * 3.1415927410125732 * 2.0;
    $this.$field_9364_q = 1.0;
    $this.$field_9286_aZ = 0.5;
}
function nms_EntityLiving_canEntityBeSeen($this, $var1) {
    return nms_World_rayTraceBlocks($this.$worldObj0, nms_Vec3D_createVector($this.$posX, $this.$posY + nms_EntityLiving_func_373_s($this), $this.$posZ), nms_Vec3D_createVector($var1.$posX, $var1.$posY + $var1.$func_373_s(), $var1.$posZ)) !== null ? 0 : 1;
}
function nms_EntityLiving_getEntityTexture($this) {
    return $this.$texture;
}
function nms_EntityLiving_canBeCollidedWith($this) {
    return $this.$isDead ? 0 : 1;
}
function nms_EntityLiving_canBePushed($this) {
    return $this.$isDead ? 0 : 1;
}
function nms_EntityLiving_func_373_s($this) {
    return $this.$height * 0.8500000238418579;
}
function nms_EntityLiving_func_421_b($this) {
    return 80;
}
function nms_EntityLiving_func_391_y($this) {
    var var$1, var$2, $var1, $var8, $var2, $var3, $var4, $var9, $var10, $var6;
    $this.$prevSwingProgress = $this.$swingProgress;
    nms_Entity_func_391_y($this);
    var$1 = ju_Random_nextInt($this.$rand2, 1000);
    var$2 = $this.$a0;
    $this.$a0 = var$2 + 1 | 0;
    if (var$1 < var$2) {
        $this.$a0 =  -$this.$func_421_b();
        $var1 = $this.$getLivingSound();
        if ($var1 !== null)
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $var1, $this.$getSoundVolume(), (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
    }
    if (nms_EntityLiving_isEntityAlive($this) && nms_Entity_func_345_I($this))
        $this.$canAttackEntity(null, 1);
    if ($this.$isImmuneToFire)
        $this.$fire = 0;
    if (nms_EntityLiving_isEntityAlive($this) && nms_Entity_isInsideOfMaterial($this, nms_Material_water)) {
        $this.$air = $this.$air - 1 | 0;
        if ($this.$air == (-20)) {
            $this.$air = 0;
            $var8 = 0;
            while ($var8 < 8) {
                $var2 = ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2);
                $var3 = ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2);
                $var4 = ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2);
                nms_World_spawnParticle($this.$worldObj0, $rt_s(485), $this.$posX + $var2, $this.$posY + $var3, $this.$posZ + $var4, $this.$motionX, $this.$motionY, $this.$motionZ);
                $var8 = $var8 + 1 | 0;
            }
            $this.$canAttackEntity(null, 2);
        }
        $this.$fire = 0;
    } else
        $this.$air = $this.$field_9308_bh;
    $this.$field_9329_Q = $this.$field_9328_R;
    if ($this.$attackTime > 0)
        $this.$attackTime = $this.$attackTime - 1 | 0;
    if ($this.$hurtTime > 0)
        $this.$hurtTime = $this.$hurtTime - 1 | 0;
    if ($this.$field_9306_bj > 0)
        $this.$field_9306_bj = $this.$field_9306_bj - 1 | 0;
    a: {
        if ($this.$health <= 0) {
            $this.$deathTime = $this.$deathTime + 1 | 0;
            if ($this.$deathTime > 20) {
                $this.$setEntityDead0();
                $var8 = 0;
                while (true) {
                    if ($var8 >= 20)
                        break a;
                    $var9 = ju_Random_nextGaussian($this.$rand2) * 0.02;
                    $var10 = ju_Random_nextGaussian($this.$rand2) * 0.02;
                    $var6 = ju_Random_nextGaussian($this.$rand2) * 0.02;
                    nms_World_spawnParticle($this.$worldObj0, $rt_s(486), $this.$posX + ju_Random_nextFloat($this.$rand2) * $this.$width0 * 2.0 - $this.$width0, $this.$posY + ju_Random_nextFloat($this.$rand2) * $this.$height, $this.$posZ + ju_Random_nextFloat($this.$rand2) * $this.$width0 * 2.0 - $this.$width0, $var9, $var10, $var6);
                    $var8 = $var8 + 1 | 0;
                }
            }
        }
    }
    $this.$field_9359_x = $this.$field_9360_w;
    $this.$field_734_o = $this.$field_735_n;
    $this.$prevRotationYaw = $this.$rotationYaw;
    $this.$prevRotationPitch = $this.$rotationPitch;
}
function nms_EntityLiving_spawnExplosionParticle($this) {
    var $var1, $var2, $var4, $var6;
    $var1 = 0;
    while ($var1 < 20) {
        $var2 = ju_Random_nextGaussian($this.$rand2) * 0.02;
        $var4 = ju_Random_nextGaussian($this.$rand2) * 0.02;
        $var6 = ju_Random_nextGaussian($this.$rand2) * 0.02;
        nms_World_spawnParticle($this.$worldObj0, $rt_s(486), $this.$posX + ju_Random_nextFloat($this.$rand2) * $this.$width0 * 2.0 - $this.$width0 - $var2 * 10.0, $this.$posY + ju_Random_nextFloat($this.$rand2) * $this.$height - $var4 * 10.0, $this.$posZ + ju_Random_nextFloat($this.$rand2) * $this.$width0 * 2.0 - $this.$width0 - $var6 * 10.0, $var2, $var4, $var6);
        $var1 = $var1 + 1 | 0;
    }
}
function nms_EntityLiving_func_350_p($this) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_Entity_func_350_p($this);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_9362_u = $this.$field_9361_v;
        $this.$field_9361_v = 0.0;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $ptr);
}
function nms_EntityLiving_onUpdate($this) {
    var $var1, $var3, $var5, $var6, $var7, $var8, $var9, $var10, $var11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var3 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$func_391_y();
        $ptr = 1;
    case 1:
        $this.$onLivingUpdate();
        if ($rt_suspending()) {
            break main;
        }
        $var1 = $this.$posX - $this.$prevPosX;
        $var3 = $this.$posZ - $this.$prevPosZ;
        $var5 = nms_MathHelper_sqrt_double($var1 * $var1 + $var3 * $var3);
        $var6 = $this.$field_735_n;
        $var7 = 0.0;
        $this.$field_9362_u = $this.$field_9361_v;
        $var8 = 0.0;
        if ($var5 > 0.05000000074505806) {
            $var8 = 1.0;
            $var7 = $var5 * 3.0;
            $var6 = jl_Math_atan2($var3, $var1) * 180.0 / 3.1415927410125732 - 90.0;
        }
        if ($this.$swingProgress > 0.0)
            $var6 = $this.$rotationYaw;
        if (!$this.$onGround)
            $var8 = 0.0;
        $this.$field_9361_v = $this.$field_9361_v + ($var8 - $this.$field_9361_v) * 0.30000001192092896;
        $var9 = $var6 - $this.$field_735_n;
        while ($var9 < (-180.0)) {
            $var9 = $var9 + 360.0;
        }
        while ($var9 >= 180.0) {
            $var9 = $var9 - 360.0;
        }
        $this.$field_735_n = $this.$field_735_n + $var9 * 0.30000001192092896;
        $var10 = $this.$rotationYaw - $this.$field_735_n;
        while ($var10 < (-180.0)) {
            $var10 = $var10 + 360.0;
        }
        while ($var10 >= 180.0) {
            $var10 = $var10 - 360.0;
        }
        $var11 = $var10 >= (-90.0) && $var10 < 90.0 ? 0 : 1;
        if ($var10 < (-75.0))
            $var10 = (-75.0);
        if ($var10 >= 75.0)
            $var10 = 75.0;
        $this.$field_735_n = $this.$rotationYaw - $var10;
        if ($var10 * $var10 > 2500.0)
            $this.$field_735_n = $this.$field_735_n + $var10 * 0.20000000298023224;
        if ($var11)
            $var7 = $var7 * (-1.0);
        while ($this.$rotationYaw - $this.$prevRotationYaw < (-180.0)) {
            $this.$prevRotationYaw = $this.$prevRotationYaw - 360.0;
        }
        while ($this.$rotationYaw - $this.$prevRotationYaw >= 180.0) {
            $this.$prevRotationYaw = $this.$prevRotationYaw + 360.0;
        }
        while ($this.$field_735_n - $this.$field_734_o < (-180.0)) {
            $this.$field_734_o = $this.$field_734_o - 360.0;
        }
        while ($this.$field_735_n - $this.$field_734_o >= 180.0) {
            $this.$field_734_o = $this.$field_734_o + 360.0;
        }
        while ($this.$rotationPitch - $this.$prevRotationPitch < (-180.0)) {
            $this.$prevRotationPitch = $this.$prevRotationPitch - 360.0;
        }
        while ($this.$rotationPitch - $this.$prevRotationPitch >= 180.0) {
            $this.$prevRotationPitch = $this.$prevRotationPitch + 360.0;
        }
        $this.$field_9360_w = $this.$field_9360_w + $var7;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var3, $var5, $var6, $var7, $var8, $var9, $var10, $var11, $ptr);
}
function nms_EntityLiving_setSize($this, $var1, $var2) {
    nms_Entity_setSize($this, $var1, $var2);
}
function nms_EntityLiving_heal($this, $var1) {
    if ($this.$health > 0) {
        $this.$health = $this.$health + $var1 | 0;
        if ($this.$health > 20)
            $this.$health = 20;
        $this.$field_9306_bj = $this.$field_9366_o / 2 | 0;
    }
}
function nms_EntityLiving_canAttackEntity($this, $var1, $var2) {
    var $var3, $var4, $var6;
    $this.$field_9344_ag = 0;
    if ($this.$health <= 0)
        return 0;
    $this.$field_704_R = 1.5;
    $var3 = 1;
    if ($this.$field_9306_bj <= $this.$field_9366_o / 2.0) {
        $this.$field_9346_af = $var2;
        $this.$field_9335_K = $this.$health;
        $this.$field_9306_bj = $this.$field_9366_o;
        $this.$damageEntity($var2);
        $this.$field_9332_M = 10;
        $this.$hurtTime = 10;
    } else {
        if ($var2 <= $this.$field_9346_af)
            return 0;
        $this.$damageEntity($var2 - $this.$field_9346_af | 0);
        $this.$field_9346_af = $var2;
        $var3 = 0;
    }
    $this.$field_9331_N = 0.0;
    if ($var3) {
        nms_Entity_func_9281_M($this);
        if ($var1 === null)
            $this.$field_9331_N = (jl_Math_random() * 2.0 | 0) * 180 | 0;
        else {
            $var4 = $var1.$posX - $this.$posX;
            $var6 = $var1.$posZ - $this.$posZ;
            while ($var4 * $var4 + $var6 * $var6 < 1.0E-4) {
                $var4 = (jl_Math_random() - jl_Math_random()) * 0.01;
                $var6 = (jl_Math_random() - jl_Math_random()) * 0.01;
            }
            $this.$field_9331_N = jl_Math_atan2($var6, $var4) * 180.0 / 3.1415927410125732 - $this.$rotationYaw;
            nms_EntityLiving_func_434_a($this, $var1, $var2, $var4, $var6);
        }
    }
    if ($this.$health <= 0) {
        if ($var3)
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $this.$getDeathSound(), $this.$getSoundVolume(), (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
        $this.$onDeath($var1);
    } else if ($var3)
        nms_World_playSoundAtEntity($this.$worldObj0, $this, $this.$getHurtSound(), $this.$getSoundVolume(), (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
    return 1;
}
function nms_EntityLiving_damageEntity($this, $var1) {
    $this.$health = $this.$health - $var1 | 0;
}
function nms_EntityLiving_getSoundVolume($this) {
    return 1.0;
}
function nms_EntityLiving_getLivingSound($this) {
    return null;
}
function nms_EntityLiving_getHurtSound($this) {
    return $rt_s(533);
}
function nms_EntityLiving_getDeathSound($this) {
    return $rt_s(533);
}
function nms_EntityLiving_func_434_a($this, $var1, $var2, $var3, $var5) {
    var $var7, var$6, var$7;
    $var7 = nms_MathHelper_sqrt_double($var3 * $var3 + $var5 * $var5);
    $this.$motionX = $this.$motionX / 2.0;
    $this.$motionY = $this.$motionY / 2.0;
    $this.$motionZ = $this.$motionZ / 2.0;
    var$6 = $this.$motionX;
    var$7 = $var7;
    $this.$motionX = var$6 - $var3 / var$7 * 0.4000000059604645;
    $this.$motionY = $this.$motionY + 0.4000000059604645;
    $this.$motionZ = $this.$motionZ - $var5 / var$7 * 0.4000000059604645;
    if ($this.$motionY > 0.4000000059604645)
        $this.$motionY = 0.4000000059604645;
}
function nms_EntityLiving_onDeath($this, $var1) {
    var $var2, $var3, $var4;
    if ($this.$field_9347_E > 0 && $var1 !== null)
        $var1.$addToPlayerScore($this, $this.$field_9347_E);
    a: {
        $this.$field_9327_S = 1;
        $var2 = $this.$getDropItemId();
        if ($var2 > 0) {
            $var3 = ju_Random_nextInt($this.$rand2, 3);
            $var4 = 0;
            while (true) {
                if ($var4 >= $var3)
                    break a;
                nms_Entity_dropItem($this, $var2, 1);
                $var4 = $var4 + 1 | 0;
            }
        }
    }
}
function nms_EntityLiving_getDropItemId($this) {
    return 0;
}
function nms_EntityLiving_fall($this, $var1) {
    var $var2, $var3, $var4;
    $var2 = jl_Math_ceil($var1 - 3.0) | 0;
    if ($var2 > 0) {
        $this.$canAttackEntity(null, $var2);
        $var3 = nms_World_getBlockId($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY - 0.20000000298023224 - $this.$yOffset), nms_MathHelper_floor_double($this.$posZ));
        if ($var3 > 0) {
            nms_Block_$callClinit();
            $var4 = nms_Block_blocksList.data[$var3].$stepSound;
            nms_World_playSoundAtEntity($this.$worldObj0, $this, nms_StepSound_func_1145_d($var4), $var4.$field_1677_b * 0.5, $var4.$field_1679_c * 0.75);
        }
    }
}
function nms_EntityLiving_func_435_b($this, $var1, $var2) {
    var $var3, $var8, $var4, $var9, $var5, $var10, $var7;
    if (nms_Entity_handleWaterMovement($this)) {
        $var3 = $this.$posY;
        nms_Entity_func_351_a($this, $var1, $var2, 0.019999999552965164);
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $this.$motionX = $this.$motionX * 0.800000011920929;
        $this.$motionY = $this.$motionY * 0.800000011920929;
        $this.$motionZ = $this.$motionZ * 0.800000011920929;
        $this.$motionY = $this.$motionY - 0.02;
        if ($this.$field_9297_aI && nms_Entity_func_403_b($this, $this.$motionX, $this.$motionY + 0.6000000238418579 - $this.$posY + $var3, $this.$motionZ))
            $this.$motionY = 0.30000001192092896;
    } else if (nms_Entity_handleLavaMovement($this)) {
        $var3 = $this.$posY;
        nms_Entity_func_351_a($this, $var1, $var2, 0.019999999552965164);
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $this.$motionX = $this.$motionX * 0.5;
        $this.$motionY = $this.$motionY * 0.5;
        $this.$motionZ = $this.$motionZ * 0.5;
        $this.$motionY = $this.$motionY - 0.02;
        if ($this.$field_9297_aI && nms_Entity_func_403_b($this, $this.$motionX, $this.$motionY + 0.6000000238418579 - $this.$posY + $var3, $this.$motionZ))
            $this.$motionY = 0.30000001192092896;
    } else {
        $var8 = 0.9100000262260437;
        if ($this.$onGround) {
            $var8 = 0.546000063419342;
            $var4 = nms_World_getBlockId($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$boundingBox.$minY0) - 1 | 0, nms_MathHelper_floor_double($this.$posZ));
            if ($var4 > 0) {
                nms_Block_$callClinit();
                $var8 = nms_Block_blocksList.data[$var4].$slipperiness * 0.9100000262260437;
            }
        }
        $var9 = 0.16277135908603668 / ($var8 * $var8 * $var8);
        nms_Entity_func_351_a($this, $var1, $var2, !$this.$onGround ? 0.019999999552965164 : 0.10000000149011612 * $var9);
        $var1 = 0.9100000262260437;
        if ($this.$onGround) {
            $var1 = 0.546000063419342;
            $var5 = nms_World_getBlockId($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$boundingBox.$minY0) - 1 | 0, nms_MathHelper_floor_double($this.$posZ));
            if ($var5 > 0) {
                nms_Block_$callClinit();
                $var1 = nms_Block_blocksList.data[$var5].$slipperiness * 0.9100000262260437;
            }
        }
        if ($this.$isOnLadder()) {
            $this.$fallDistance = 0.0;
            if ($this.$motionY < (-0.15))
                $this.$motionY = (-0.15);
        }
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        if ($this.$field_9297_aI && $this.$isOnLadder())
            $this.$motionY = 0.2;
        $this.$motionY = $this.$motionY - 0.08;
        $this.$motionY = $this.$motionY * 0.9800000190734863;
        $var3 = $this.$motionX;
        $var10 = $var1;
        $this.$motionX = $var3 * $var10;
        $this.$motionZ = $this.$motionZ * $var10;
    }
    $this.$field_705_Q = $this.$field_704_R;
    $var3 = $this.$posX - $this.$prevPosX;
    $var10 = $this.$posZ - $this.$prevPosZ;
    $var7 = nms_MathHelper_sqrt_double($var3 * $var3 + $var10 * $var10) * 4.0;
    if ($var7 > 1.0)
        $var7 = 1.0;
    $this.$field_704_R = $this.$field_704_R + ($var7 - $this.$field_704_R) * 0.4000000059604645;
    $this.$field_703_S = $this.$field_703_S + $this.$field_704_R;
}
function nms_EntityLiving_isOnLadder($this) {
    var $var1, $var2, $var3, var$4;
    $var1 = nms_MathHelper_floor_double($this.$posX);
    $var2 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
    $var3 = nms_MathHelper_floor_double($this.$posZ);
    var$4 = nms_World_getBlockId($this.$worldObj0, $var1, $var2, $var3);
    nms_Block_$callClinit();
    return var$4 != nms_Block_ladder.$blockID && nms_World_getBlockId($this.$worldObj0, $var1, $var2 + 1 | 0, $var3) != nms_Block_ladder.$blockID ? 0 : 1;
}
function nms_EntityLiving_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(534), $this.$health << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(535), $this.$hurtTime << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(536), $this.$deathTime << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(537), $this.$attackTime << 16 >> 16);
}
function nms_EntityLiving_readEntityFromNBT($this, $var1) {
    $this.$health = nms_NBTTagCompound_getShort($var1, $rt_s(534));
    if (!nms_NBTTagCompound_hasKey($var1, $rt_s(534)))
        $this.$health = 10;
    $this.$hurtTime = nms_NBTTagCompound_getShort($var1, $rt_s(535));
    $this.$deathTime = nms_NBTTagCompound_getShort($var1, $rt_s(536));
    $this.$attackTime = nms_NBTTagCompound_getShort($var1, $rt_s(537));
}
function nms_EntityLiving_isEntityAlive($this) {
    return !$this.$isDead && $this.$health > 0 ? 1 : 0;
}
function nms_EntityLiving_onLivingUpdate($this) {
    var $var1, $var3, $var5, $var7, $var9, $var2, $var10, $var4, $var11;
    if ($this.$field_9324_Y > 0) {
        $var1 = $this.$posX + ($this.$field_9323_Z - $this.$posX) / $this.$field_9324_Y;
        $var3 = $this.$posY + ($this.$field_9356_aa - $this.$posY) / $this.$field_9324_Y;
        $var5 = $this.$posZ + ($this.$field_9354_ab - $this.$posZ) / $this.$field_9324_Y;
        $var7 = $this.$field_9352_ac - $this.$rotationYaw;
        while ($var7 < (-180.0)) {
            $var7 = $var7 + 360.0;
        }
        while ($var7 >= 180.0) {
            $var7 = $var7 - 360.0;
        }
        $this.$rotationYaw = $this.$rotationYaw + $var7 / $this.$field_9324_Y;
        $this.$rotationPitch = $this.$rotationPitch + ($this.$field_9350_ad - $this.$rotationPitch) / $this.$field_9324_Y;
        $this.$field_9324_Y = $this.$field_9324_Y - 1 | 0;
        nms_Entity_setPosition($this, $var1, $var3, $var5);
        nms_Entity_setRotation($this, $this.$rotationYaw, $this.$rotationPitch);
    }
    if ($this.$health <= 0) {
        $this.$isJumping = 0;
        $this.$field_9342_ah = 0.0;
        $this.$field_9340_ai = 0.0;
        $this.$field_9338_aj = 0.0;
    } else if (!$this.$field_9343_G)
        $this.$func_418_b_();
    $var9 = nms_Entity_handleWaterMovement($this);
    $var2 = nms_Entity_handleLavaMovement($this);
    if ($this.$isJumping) {
        if ($var9)
            $this.$motionY = $this.$motionY + 0.03999999910593033;
        else if ($var2)
            $this.$motionY = $this.$motionY + 0.03999999910593033;
        else if ($this.$onGround)
            nms_EntityLiving_func_424_C($this);
    }
    a: {
        $this.$field_9342_ah = $this.$field_9342_ah * 0.9800000190734863;
        $this.$field_9340_ai = $this.$field_9340_ai * 0.9800000190734863;
        $this.$field_9338_aj = $this.$field_9338_aj * 0.8999999761581421;
        $this.$func_435_b($this.$field_9342_ah, $this.$field_9340_ai);
        $var10 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands($this.$boundingBox, 0.20000000298023224, 0.0, 0.20000000298023224));
        if ($var10 !== null && $var10.$size > 0) {
            $var4 = 0;
            while (true) {
                if ($var4 >= $var10.$size)
                    break a;
                $var11 = ju_ArrayList_get($var10, $var4);
                if ($var11.$canBePushed())
                    $var11.$applyEntityCollision($this);
                $var4 = $var4 + 1 | 0;
            }
        }
    }
}
function nms_EntityLiving_func_424_C($this) {
    $this.$motionY = 0.41999998688697815;
}
function nms_EntityLiving_func_418_b_($this) {
    var $var1, $var2, $var4, $var6, $var8, $var11, $var3;
    $this.$field_9344_ag = $this.$field_9344_ag + 1 | 0;
    $var1 = nms_World_getClosestPlayerToEntity($this.$worldObj0, $this, (-1.0));
    if ($var1 !== null) {
        $var2 = $var1.$posX - $this.$posX;
        $var4 = $var1.$posY - $this.$posY;
        $var6 = $var1.$posZ - $this.$posZ;
        $var8 = $var2 * $var2 + $var4 * $var4 + $var6 * $var6;
        if ($var8 > 16384.0)
            $this.$setEntityDead0();
        if ($this.$field_9344_ag > 600 && !ju_Random_nextInt($this.$rand2, 800)) {
            if ($var8 >= 1024.0)
                $this.$setEntityDead0();
            else
                $this.$field_9344_ag = 0;
        }
    }
    $this.$field_9342_ah = 0.0;
    $this.$field_9340_ai = 0.0;
    if (ju_Random_nextFloat($this.$rand2) < 0.019999999552965164) {
        $var1 = nms_World_getClosestPlayerToEntity($this.$worldObj0, $this, 8.0);
        if ($var1 === null)
            $this.$field_9338_aj = (ju_Random_nextFloat($this.$rand2) - 0.5) * 20.0;
        else {
            $this.$b1 = $var1;
            $this.$c0 = 10 + ju_Random_nextInt($this.$rand2, 20) | 0;
        }
    }
    if ($this.$b1 === null) {
        if (ju_Random_nextFloat($this.$rand2) < 0.05000000074505806)
            $this.$field_9338_aj = (ju_Random_nextFloat($this.$rand2) - 0.5) * 20.0;
        $this.$rotationYaw = $this.$rotationYaw + $this.$field_9338_aj;
        $this.$rotationPitch = $this.$field_9334_al;
    } else {
        nms_EntityLiving_faceEntity($this, $this.$b1, 10.0);
        $var11 = $this.$c0;
        $this.$c0 = $var11 - 1 | 0;
        if (!($var11 > 0 && !$this.$b1.$isDead && nms_Entity_getDistanceSqToEntity($this.$b1, $this) <= 64.0))
            $this.$b1 = null;
    }
    $var3 = nms_Entity_handleWaterMovement($this);
    $var11 = nms_Entity_handleLavaMovement($this);
    if (!(!$var3 && !$var11))
        $this.$isJumping = ju_Random_nextFloat($this.$rand2) >= 0.800000011920929 ? 0 : 1;
}
function nms_EntityLiving_faceEntity($this, $var1, $var2) {
    var $var3, $var7, $var5, $var9, $var13, $var11, $var12;
    $var3 = $var1.$posX - $this.$posX;
    $var7 = $var1.$posZ - $this.$posZ;
    if (!($var1 instanceof nms_EntityLiving))
        $var5 = ($var1.$boundingBox.$minY0 + $var1.$boundingBox.$maxY0) / 2.0 - ($this.$posY + $this.$func_373_s());
    else {
        $var9 = $var1;
        $var5 = $var9.$posY + $var9.$func_373_s() - ($this.$posY + $this.$func_373_s());
    }
    $var13 = nms_MathHelper_sqrt_double($var3 * $var3 + $var7 * $var7);
    $var11 = jl_Math_atan2($var7, $var3) * 180.0 / 3.1415927410125732 - 90.0;
    $var12 = jl_Math_atan2($var5, $var13) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch =  -nms_EntityLiving_updateRotation($this, $this.$rotationPitch, $var12, $var2);
    $this.$rotationYaw = nms_EntityLiving_updateRotation($this, $this.$rotationYaw, $var11, $var2);
}
function nms_EntityLiving_updateRotation($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = $var2 - $var1;
    while ($var4 < (-180.0)) {
        $var4 = $var4 + 360.0;
    }
    while ($var4 >= 180.0) {
        $var4 = $var4 - 360.0;
    }
    if ($var4 > $var3)
        $var4 = $var3;
    $var2 =  -$var3;
    if ($var4 >= $var2)
        $var2 = $var4;
    return $var1 + $var2;
}
function nms_EntityLiving_func_6392_F($this) {
    return;
}
function nms_EntityLiving_getCanSpawnHere($this) {
    return nms_World_checkIfAABBIsClear($this.$worldObj0, $this.$boundingBox) && !nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, $this.$boundingBox).$size && !nms_World_getIsAnyLiquid($this.$worldObj0, $this.$boundingBox) ? 1 : 0;
}
function nms_EntityLiving_func_4034_G($this) {
    $this.$canAttackEntity(null, 4);
}
function nms_EntityLiving_getSwingProgress($this, $var1) {
    var $var2;
    $var2 = $this.$swingProgress - $this.$prevSwingProgress;
    if ($var2 < 0.0)
        $var2 = $var2 + 1.0;
    return $this.$prevSwingProgress + $var2 * $var1;
}
function nms_EntityLiving_getPosition($this, $var1) {
    var $var2, $var4, $var6;
    if ($var1 === 1.0)
        return nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = $this.$prevPosX;
    $var4 = $this.$posX - $this.$prevPosX;
    $var6 = $var1;
    return nms_Vec3D_createVector($var2 + $var4 * $var6, $this.$prevPosY + ($this.$posY - $this.$prevPosY) * $var6, $this.$prevPosZ + ($this.$posZ - $this.$prevPosZ) * $var6);
}
function nms_EntityLiving_func_4037_H($this) {
    return nms_EntityLiving_getLook($this, 1.0);
}
function nms_EntityLiving_getLook($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6;
    if ($var1 === 1.0) {
        $var2 = nms_MathHelper_cos( -$this.$rotationYaw * 0.01745329238474369 - 3.1415927410125732);
        $var3 = nms_MathHelper_sin( -$this.$rotationYaw * 0.01745329238474369 - 3.1415927410125732);
        $var4 =  -nms_MathHelper_cos( -$this.$rotationPitch * 0.01745329238474369);
        return nms_Vec3D_createVector($var3 * $var4, nms_MathHelper_sin( -$this.$rotationPitch * 0.01745329238474369), $var2 * $var4);
    }
    $var2 = $this.$prevRotationPitch + ($this.$rotationPitch - $this.$prevRotationPitch) * $var1;
    $var1 =  -($this.$prevRotationYaw + ($this.$rotationYaw - $this.$prevRotationYaw) * $var1) * 0.01745329238474369 - 3.1415927410125732;
    $var4 = nms_MathHelper_cos($var1);
    $var5 = nms_MathHelper_sin($var1);
    $var1 =  -$var2 * 0.01745329238474369;
    $var6 =  -nms_MathHelper_cos($var1);
    return nms_Vec3D_createVector($var5 * $var6, nms_MathHelper_sin($var1), $var4 * $var6);
}
function nms_EntityLiving_rayTrace($this, $var1, $var3) {
    var $var4, $var5, $var6;
    $var4 = nms_EntityLiving_getPosition($this, $var3);
    $var5 = nms_EntityLiving_getLook($this, $var3);
    $var6 = nms_Vec3D_addVector($var4, $var5.$xCoord * $var1, $var5.$yCoord * $var1, $var5.$zCoord * $var1);
    return nms_World_rayTraceBlocks($this.$worldObj0, $var4, $var6);
}
function nms_EntityLiving_func_6391_i($this) {
    return 4;
}
function nms_EntityLiving_getHeldItem($this) {
    return null;
}
function nms_EntityPlayer() {
    var a = this; nms_EntityLiving.call(a);
    a.$inventory0 = null;
    a.$field_9371_f = 0;
    a.$score = 0;
    a.$field_775_e = 0.0;
    a.$field_774_f = 0.0;
    a.$field_9369_j = 0;
    a.$field_9368_k = 0;
    a.$field_771_i = null;
    a.$dimension = 0;
    a.$field_781_a = 0;
    a.$fishEntity = null;
}
function nms_EntityPlayer_func_350_p($this) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_EntityLiving_func_350_p($this);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_775_e = $this.$field_774_f;
        $this.$field_774_f = 0.0;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $ptr);
}
function nms_EntityPlayer_preparePlayerToSpawn($this) {
    $this.$yOffset = 1.6200000047683716;
    nms_Entity_setSize($this, 0.6000000238418579, 1.7999999523162842);
    if ($this.$worldObj0 !== null) {
        a: {
            while (true) {
                if ($this.$posY <= 0.0)
                    break a;
                nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
                if (!nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, $this.$boundingBox).$size)
                    break;
                $this.$posY = $this.$posY + 1.0;
            }
        }
        $this.$motionZ = 0.0;
        $this.$motionY = 0.0;
        $this.$motionX = 0.0;
        $this.$rotationPitch = 0.0;
    }
    $this.$health = 20;
    $this.$deathTime = 0;
}
function nms_EntityPlayer_onLivingUpdate($this) {
    var $var1, $var2, $var3, $var4;
    if (!$this.$worldObj0.$difficultySetting && $this.$health < 20 && !(($this.$field_9311_be % 20 | 0) * 4 | 0))
        nms_EntityLiving_heal($this, 1);
    nms_InventoryPlayer_decrementAnimations($this.$inventory0);
    $this.$field_775_e = $this.$field_774_f;
    nms_EntityLiving_onLivingUpdate($this);
    $var1 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
    $var2 = jl_Math_atan( -$this.$motionY * 0.20000000298023224) * 15.0;
    if ($var1 > 0.10000000149011612)
        $var1 = 0.10000000149011612;
    if (!($this.$onGround && $this.$health > 0))
        $var1 = 0.0;
    if (!(!$this.$onGround && $this.$health > 0))
        $var2 = 0.0;
    a: {
        $this.$field_774_f = $this.$field_774_f + ($var1 - $this.$field_774_f) * 0.4000000059604645;
        $this.$field_9328_R = $this.$field_9328_R + ($var2 - $this.$field_9328_R) * 0.800000011920929;
        if ($this.$health > 0) {
            $var3 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands($this.$boundingBox, 1.0, 0.0, 1.0));
            if ($var3 !== null) {
                $var4 = 0;
                while (true) {
                    if ($var4 >= $var3.$size)
                        break a;
                    ju_ArrayList_get($var3, $var4).$onCollideWithPlayer($this);
                    $var4 = $var4 + 1 | 0;
                }
            }
        }
    }
}
function nms_EntityPlayer_func_6417_t($this) {
    return $this.$score;
}
function nms_EntityPlayer_onDeath($this, $var1) {
    var var$2;
    nms_EntityLiving_onDeath($this, $var1);
    nms_Entity_setSize($this, 0.20000000298023224, 0.20000000298023224);
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$motionY = 0.10000000149011612;
    if (jl_String_equals($this.$field_771_i, $rt_s(538))) {
        var$2 = new nms_ItemStack;
        nms_Item_$callClinit();
        nms_ItemStack__init_4(var$2, nms_Item_appleRed, 1);
        nms_EntityPlayer_dropPlayerItemWithRandomChoice($this, var$2, 1);
    }
    nms_InventoryPlayer_dropAllItems($this.$inventory0);
    if ($var1 === null) {
        $this.$motionZ = 0.0;
        $this.$motionX = 0.0;
    } else {
        $this.$motionX =  -nms_MathHelper_cos(($this.$field_9331_N + $this.$rotationYaw) * 3.1415927410125732 / 180.0) * 0.10000000149011612;
        $this.$motionZ =  -nms_MathHelper_sin(($this.$field_9331_N + $this.$rotationYaw) * 3.1415927410125732 / 180.0) * 0.10000000149011612;
    }
    $this.$yOffset = 0.10000000149011612;
}
function nms_EntityPlayer_addToPlayerScore($this, $var1, $var2) {
    $this.$score = $this.$score + $var2 | 0;
}
function nms_EntityPlayer_dropPlayerItem($this, $var1) {
    nms_EntityPlayer_dropPlayerItemWithRandomChoice($this, $var1, 0);
}
function nms_EntityPlayer_dropPlayerItemWithRandomChoice($this, $var1, $var2) {
    var $var3, $var5, $var6, $var5_0, var$7, var$8, var$9, var$10;
    if ($var1 !== null) {
        $var3 = nms_EntityItem__init_($this.$worldObj0, $this.$posX, $this.$posY - 0.30000001192092896 + 0.11999999731779099, $this.$posZ, $var1);
        $var3.$field_805_c = 40;
        if ($var2) {
            $var5 = ju_Random_nextFloat($this.$rand2) * 0.5;
            $var6 = ju_Random_nextFloat($this.$rand2) * 3.1415927410125732 * 2.0;
            $var3.$motionX =  -nms_MathHelper_sin($var6) * $var5;
            $var3.$motionZ = nms_MathHelper_cos($var6) * $var5;
            $var3.$motionY = 0.20000000298023224;
        } else {
            $var3.$motionX =  -nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.30000001192092896;
            $var3.$motionZ = nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.30000001192092896;
            $var3.$motionY =  -nms_MathHelper_sin($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.30000001192092896 + 0.10000000149011612;
            $var5_0 = ju_Random_nextFloat($this.$rand2) * 3.1415927410125732 * 2.0;
            $var6 = 0.019999999552965164 * ju_Random_nextFloat($this.$rand2);
            var$7 = $var3.$motionX;
            var$8 = $var5_0;
            var$9 = jl_Math_cos(var$8);
            var$10 = $var6;
            $var3.$motionX = var$7 + var$9 * var$10;
            $var3.$motionY = $var3.$motionY + (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.10000000149011612;
            $var3.$motionZ = $var3.$motionZ + jl_Math_sin(var$8) * var$10;
        }
        nms_EntityPlayer_joinEntityItemWithWorld($this, $var3);
    }
}
function nms_EntityPlayer_joinEntityItemWithWorld($this, $var1) {
    nms_World_entityJoinedWorld($this.$worldObj0, $var1);
}
function nms_EntityPlayer_getCurrentPlayerStrVsBlock($this, $var1) {
    var $var2;
    $var2 = nms_InventoryPlayer_getStrVsBlock($this.$inventory0, $var1);
    if (nms_Entity_isInsideOfMaterial($this, nms_Material_water))
        $var2 = $var2 / 5.0;
    if (!$this.$onGround)
        $var2 = $var2 / 5.0;
    return $var2;
}
function nms_EntityPlayer_canHarvestBlock($this, $var1) {
    return nms_InventoryPlayer_canHarvestBlock($this.$inventory0, $var1);
}
function nms_EntityPlayer_func_373_s($this) {
    return 0.11999999731779099;
}
function nms_EntityPlayer_canAttackEntity($this, $var1, $var2) {
    $this.$field_9344_ag = 0;
    if ($this.$health <= 0)
        return 0;
    if (!(!($var1 instanceof nms_EntityMobs) && !($var1 instanceof nms_EntityArrow))) {
        if (!$this.$worldObj0.$difficultySetting)
            $var2 = 0;
        if ($this.$worldObj0.$difficultySetting == 1)
            $var2 = ($var2 / 3 | 0) + 1 | 0;
        if ($this.$worldObj0.$difficultySetting == 3)
            $var2 = ($var2 * 3 | 0) / 2 | 0;
    }
    return $var2 ? nms_EntityLiving_canAttackEntity($this, $var1, $var2) : 0;
}
function nms_EntityPlayer_damageEntity($this, $var1) {
    var $var3, $var2;
    $var3 = $rt_imul($var1, 25 - nms_InventoryPlayer_getTotalArmorValue($this.$inventory0) | 0) + $this.$field_781_a | 0;
    nms_InventoryPlayer_damageArmor($this.$inventory0, $var1);
    $var2 = $var3 / 25 | 0;
    $this.$field_781_a = $var3 % 25 | 0;
    nms_EntityLiving_damageEntity($this, $var2);
}
function nms_EntityPlayer_getCurrentEquippedItem($this) {
    return nms_InventoryPlayer_getCurrentItem($this.$inventory0);
}
function nms_EntityPlayer_destroyCurrentEquippedItem($this) {
    nms_InventoryPlayer_setInventorySlotContents($this.$inventory0, $this.$inventory0.$currentItem, null);
}
function nms_EntityPlayer_func_388_v($this) {
    return $this.$yOffset - 0.5;
}
function nms_EntityPlayer_func_457_w($this) {
    $this.$field_9368_k = (-1);
    $this.$field_9369_j = 1;
}
function nms_EntityPlayer_attackTargetEntityWithCurrentItem($this, $var1) {
    var $var2, $var3;
    $var2 = nms_InventoryPlayer_getDamageVsEntity($this.$inventory0, $var1);
    if ($var2 > 0) {
        $var1.$canAttackEntity($this, $var2);
        $var3 = nms_EntityPlayer_getCurrentEquippedItem($this);
        if ($var3 !== null && $var1 instanceof nms_EntityLiving) {
            nms_ItemStack_hitEntity($var3, $var1);
            if ($var3.$stackSize <= 0)
                nms_EntityPlayer_destroyCurrentEquippedItem($this);
        }
    }
}
function nms_EntityPlayerSP() {
    var a = this; nms_EntityPlayer.call(a);
    a.$field_787_a = null;
    a.$mc7 = null;
    a.$field_9373_b = 0;
    a.$field_9374_bx = 0;
    a.$field_4134_c = 0.0;
    a.$field_4133_d = 0.0;
}
function nms_EntityPlayerSP_func_418_b_($this) {
    if (!$this.$field_9369_j)
        $this.$field_9368_k = 0;
    else {
        $this.$field_9368_k = $this.$field_9368_k + 1 | 0;
        if ($this.$field_9368_k == 8) {
            $this.$field_9368_k = 0;
            $this.$field_9369_j = 0;
        }
    }
    $this.$swingProgress = $this.$field_9368_k / 8.0;
    $this.$field_9342_ah = $this.$field_787_a.$field_1174_a;
    $this.$field_9340_ai = $this.$field_787_a.$field_1173_b;
    $this.$isJumping = $this.$field_787_a.$field_1176_d;
}
function nms_EntityPlayerSP_onLivingUpdate($this) {
    var var$1, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$field_4133_d = $this.$field_4134_c;
        if (!$this.$field_9374_bx) {
            if ($this.$field_4134_c > 0.0)
                $this.$field_4134_c = $this.$field_4134_c - 0.05000000074505806;
            if ($this.$field_4134_c < 0.0)
                $this.$field_4134_c = 0.0;
        } else {
            $this.$field_4134_c = $this.$field_4134_c + 0.012500000186264515;
            if ($this.$field_4134_c >= 1.0) {
                $this.$field_4134_c = 1.0;
                $this.$field_9373_b = 10;
                var$1 = $this.$mc7;
                $ptr = 1;
                continue main;
            }
            $this.$field_9374_bx = 0;
        }
        if ($this.$field_9373_b > 0)
            $this.$field_9373_b = $this.$field_9373_b - 1 | 0;
        nms_MovementInputFromOptions_func_797_a($this.$field_787_a, $this);
        if ($this.$field_787_a.$field_1175_e && $this.$field_9287_aY < 0.20000000298023224)
            $this.$field_9287_aY = 0.20000000298023224;
        $ptr = 2;
        continue main;
    case 1:
        nmc_Minecraft_func_6237_k(var$1);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_9374_bx = 0;
        if ($this.$field_9373_b > 0)
            $this.$field_9373_b = $this.$field_9373_b - 1 | 0;
        nms_MovementInputFromOptions_func_797_a($this.$field_787_a, $this);
        if ($this.$field_787_a.$field_1175_e && $this.$field_9287_aY < 0.20000000298023224)
            $this.$field_9287_aY = 0.20000000298023224;
        $ptr = 2;
    case 2:
        nms_EntityPlayer_onLivingUpdate($this);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, var$1, $ptr);
}
function nms_EntityPlayerSP_func_458_k($this) {
    nms_MovementInputFromOptions_func_798_a($this.$field_787_a);
}
function nms_EntityPlayerSP_func_460_a($this, $var1, $var2) {
    nms_MovementInputFromOptions_func_796_a($this.$field_787_a, $var1, $var2);
}
function nms_EntityPlayerSP_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
    nms_NBTTagCompound_setTag($var1, $rt_s(364), nms_InventoryPlayer_writeToNBT($this.$inventory0, nms_NBTTagList__init_0()));
    nms_NBTTagCompound_setInteger($var1, $rt_s(448), $this.$dimension);
    nms_NBTTagCompound_setInteger($var1, $rt_s(539), $this.$score);
}
function nms_EntityPlayerSP_readEntityFromNBT($this, $var1) {
    var var$2;
    nms_EntityLiving_readEntityFromNBT($this, $var1);
    var$2 = nms_NBTTagCompound_getTagList($var1, $rt_s(364));
    nms_InventoryPlayer_readFromNBT($this.$inventory0, var$2);
    $this.$dimension = nms_NBTTagCompound_getInteger($var1, $rt_s(448));
    $this.$score = nms_NBTTagCompound_getInteger($var1, $rt_s(539));
}
function nms_EntityPlayerSP_displayGUIChest($this, $var1) {
    nmc_Minecraft_displayGuiScreen($this.$mc7, nms_GuiChest__init_($this.$inventory0, $var1));
}
function nms_EntityPlayerSP_displayGUIEditSign($this, $var1) {
    var var$2, var$3;
    var$2 = $this.$mc7;
    var$3 = new nms_GuiEditSign;
    nms_GuiScreen__init_(var$3);
    var$3.$screenTitle = $rt_s(540);
    var$3.$editLine = 0;
    var$3.$entitySign = $var1;
    nmc_Minecraft_displayGuiScreen(var$2, var$3);
}
function nms_EntityPlayerSP_displayWorkbenchGUI($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$mc7;
    var$2 = new nms_GuiCrafting;
    var$3 = $this.$inventory0;
    nms_GuiContainer__init_(var$2);
    var$2.$field_979_j = nms_CraftingInventoryWorkbenchCB__init_0();
    ju_ArrayList_add(var$2.$inventorySlots, nms_SlotCrafting__init_(var$2, var$2.$field_979_j.$craftMatrix, var$2.$field_979_j.$craftResult, 0, 124, 35));
    var$4 = 0;
    while (var$4 < 3) {
        var$5 = 0;
        while (var$5 < 3) {
            ju_ArrayList_add(var$2.$inventorySlots, nms_SlotInventory__init_(var$2, var$2.$field_979_j.$craftMatrix, var$5 + (var$4 * 3 | 0) | 0, 30 + (var$5 * 18 | 0) | 0, 17 + (var$4 * 18 | 0) | 0));
            var$5 = var$5 + 1 | 0;
        }
        var$4 = var$4 + 1 | 0;
    }
    var$4 = 0;
    while (var$4 < 3) {
        var$5 = 0;
        while (var$5 < 9) {
            ju_ArrayList_add(var$2.$inventorySlots, nms_SlotInventory__init_(var$2, var$3, var$5 + ((var$4 + 1 | 0) * 9 | 0) | 0, 8 + (var$5 * 18 | 0) | 0, 84 + (var$4 * 18 | 0) | 0));
            var$5 = var$5 + 1 | 0;
        }
        var$4 = var$4 + 1 | 0;
    }
    var$4 = 0;
    while (var$4 < 9) {
        ju_ArrayList_add(var$2.$inventorySlots, nms_SlotInventory__init_(var$2, var$3, var$4, 8 + (var$4 * 18 | 0) | 0, 142));
        var$4 = var$4 + 1 | 0;
    }
    nmc_Minecraft_displayGuiScreen(var$1, var$2);
}
function nms_EntityPlayerSP_displayGUIFurnace($this, $var1) {
    var var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = $this.$mc7;
    var$3 = new nms_GuiFurnace;
    var$4 = $this.$inventory0;
    nms_GuiContainer__init_(var$3);
    var$3.$field_978_j = $var1;
    ju_ArrayList_add(var$3.$inventorySlots, nms_SlotInventory__init_(var$3, $var1, 0, 56, 17));
    ju_ArrayList_add(var$3.$inventorySlots, nms_SlotInventory__init_(var$3, $var1, 1, 56, 53));
    ju_ArrayList_add(var$3.$inventorySlots, nms_SlotInventory__init_(var$3, $var1, 2, 116, 35));
    var$5 = 0;
    while (var$5 < 3) {
        var$6 = 0;
        while (var$6 < 9) {
            ju_ArrayList_add(var$3.$inventorySlots, nms_SlotInventory__init_(var$3, var$4, var$6 + ((var$5 + 1 | 0) * 9 | 0) | 0, 8 + (var$6 * 18 | 0) | 0, 84 + (var$5 * 18 | 0) | 0));
            var$6 = var$6 + 1 | 0;
        }
        var$5 = var$5 + 1 | 0;
    }
    var$7 = 0;
    while (var$7 < 9) {
        ju_ArrayList_add(var$3.$inventorySlots, nms_SlotInventory__init_(var$3, var$4, var$7, 8 + (var$7 * 18 | 0) | 0, 142));
        var$7 = var$7 + 1 | 0;
    }
    nmc_Minecraft_displayGuiScreen(var$2, var$3);
}
function nms_EntityPlayerSP_func_443_a_($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$mc7.$field_6321_h;
    var$4 = new nms_EntityPickupFX;
    nms_EntityFX__init_(var$4, $this.$mc7.$theWorld, $var1.$posX, $var1.$posY, $var1.$posZ, $var1.$motionX, $var1.$motionY, $var1.$motionZ);
    var$4.$field_678_p = 0;
    var$4.$field_677_q = 0;
    var$4.$field_675_a = $var1;
    var$4.$field_679_o = $this;
    var$4.$field_677_q = 3;
    var$4.$field_676_r = (-0.5);
    nms_EffectRenderer_func_1192_a(var$3, var$4);
}
function nms_EntityPlayerSP_getPlayerArmorValue($this) {
    return nms_InventoryPlayer_getTotalArmorValue($this.$inventory0);
}
function nms_EntityPlayerSP_func_6415_a_($this, $var1) {
    var $var2;
    if (!$var1.$interact($this)) {
        $var2 = nms_EntityPlayer_getCurrentEquippedItem($this);
        if ($var2 !== null && $var1 instanceof nms_EntityLiving) {
            nms_ItemStack_useItemOnEntity($var2, $var1);
            if ($var2.$stackSize <= 0)
                nms_EntityPlayer_destroyCurrentEquippedItem($this);
        }
    }
}
function nms_EntityPlayerSP_func_6420_o($this) {
    return;
}
function nms_EntityPlayerSP_func_381_o($this) {
    return $this.$field_787_a.$field_1175_e;
}
function nms_EntityPlayerSP_func_4039_q($this) {
    if ($this.$field_9373_b <= 0)
        $this.$field_9374_bx = 1;
    else
        $this.$field_9373_b = 10;
}
function nms_EntityPlayerSP_func_9367_r($this) {
    var var$1, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$1 = $this.$mc7;
        $ptr = 1;
    case 1:
        nmc_Minecraft_respawn(var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, var$1, $ptr);
}
function nms_MathHelper() {
    jl_Object.call(this);
}
var nms_MathHelper_SIN_TABLE = null;
function nms_MathHelper__init_0() {
    var var_0 = new nms_MathHelper();
    nms_MathHelper__init_(var_0);
    return var_0;
}
function nms_MathHelper__init_($this) {
    return;
}
function nms_MathHelper_sin($var0) {
    return nms_MathHelper_SIN_TABLE.data[($var0 * 10430.3779296875 | 0) & 65535];
}
function nms_MathHelper_cos($var0) {
    return nms_MathHelper_SIN_TABLE.data[($var0 * 10430.3779296875 + 16384.0 | 0) & 65535];
}
function nms_MathHelper_sqrt_float($var0) {
    return jl_Math_sqrt($var0);
}
function nms_MathHelper_sqrt_double($var0) {
    return jl_Math_sqrt($var0);
}
function nms_MathHelper_floor_float($var0) {
    var $var1;
    $var1 = $var0 | 0;
    if ($var0 < $var1)
        $var1 = $var1 - 1 | 0;
    return $var1;
}
function nms_MathHelper_floor_double($var0) {
    var $var2;
    $var2 = $var0 | 0;
    if ($var0 < $var2)
        $var2 = $var2 - 1 | 0;
    return $var2;
}
function nms_MathHelper_bucketInt($var0, $var1) {
    return $var0 >= 0 ? $var0 / $var1 | 0 :  -(( -$var0 - 1 | 0) / $var1 | 0) - 1 | 0;
}
function nms_MathHelper__clinit_() {
    var $var0;
    nms_MathHelper_SIN_TABLE = $rt_createFloatArray(65536);
    $var0 = 0;
    while ($var0 < 65536) {
        nms_MathHelper_SIN_TABLE.data[$var0] = jl_Math_sin($var0 * 3.141592653589793 * 2.0 / 65536.0);
        $var0 = $var0 + 1 | 0;
    }
}
function nms_KeyBinding() {
    var a = this; jl_Object.call(a);
    a.$keyDescription = null;
    a.$keyCode = 0;
}
function nms_KeyBinding__init_(var_0, var_1) {
    var var_2 = new nms_KeyBinding();
    nms_KeyBinding__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_KeyBinding__init_0($this, $var1, $var2) {
    $this.$keyDescription = $var1;
    $this.$keyCode = $var2;
}
function nms_IInventory() {
}
function nms_InventoryPlayer() {
    var a = this; jl_Object.call(a);
    a.$mainInventory = null;
    a.$armorInventory = null;
    a.$craftingInventory = null;
    a.$currentItem = 0;
    a.$player = null;
    a.$draggingItemStack = null;
    a.$field_845_f = 0;
}
function nms_InventoryPlayer_getCurrentItem($this) {
    return $this.$mainInventory.data[$this.$currentItem];
}
function nms_InventoryPlayer_getInventorySlotContainItem($this, $var1) {
    var $var2;
    $var2 = 0;
    while (true) {
        if ($var2 >= $this.$mainInventory.data.length)
            return (-1);
        if ($this.$mainInventory.data[$var2] !== null && $this.$mainInventory.data[$var2].$itemID == $var1)
            break;
        $var2 = $var2 + 1 | 0;
    }
    return $var2;
}
function nms_InventoryPlayer_getFirstEmptyStack($this) {
    var $var1;
    $var1 = 0;
    while (true) {
        if ($var1 >= $this.$mainInventory.data.length)
            return (-1);
        if ($this.$mainInventory.data[$var1] === null)
            break;
        $var1 = $var1 + 1 | 0;
    }
    return $var1;
}
function nms_InventoryPlayer_setCurrentItem($this, $var1, $var2) {
    var $var3;
    $var3 = nms_InventoryPlayer_getInventorySlotContainItem($this, $var1);
    if ($var3 >= 0 && $var3 < 9)
        $this.$currentItem = $var3;
}
function nms_InventoryPlayer_changeCurrentItem($this, $var1) {
    if ($var1 > 0)
        $var1 = 1;
    if ($var1 < 0)
        $var1 = (-1);
    $this.$currentItem = $this.$currentItem - $var1 | 0;
    while ($this.$currentItem < 0) {
        $this.$currentItem = $this.$currentItem + 9 | 0;
    }
    while ($this.$currentItem >= 9) {
        $this.$currentItem = $this.$currentItem - 9 | 0;
    }
}
function nms_InventoryPlayer_decrementAnimations($this) {
    var $var1, var$2;
    $var1 = 0;
    while ($var1 < $this.$mainInventory.data.length) {
        if ($this.$mainInventory.data[$var1] !== null && $this.$mainInventory.data[$var1].$animationsToGo > 0) {
            var$2 = $this.$mainInventory.data[$var1];
            var$2.$animationsToGo = var$2.$animationsToGo - 1 | 0;
        }
        $var1 = $var1 + 1 | 0;
    }
}
function nms_InventoryPlayer_consumeInventoryItem($this, $var1) {
    var $var2, var$3;
    $var2 = nms_InventoryPlayer_getInventorySlotContainItem($this, $var1);
    if ($var2 < 0)
        return 0;
    var$3 = $this.$mainInventory.data[$var2];
    $var1 = var$3.$stackSize - 1 | 0;
    var$3.$stackSize = $var1;
    if ($var1 <= 0)
        $this.$mainInventory.data[$var2] = null;
    return 1;
}
function nms_InventoryPlayer_addItemStackToInventory($this, $var1) {
    var $var2, var$3, var$4, var$5;
    if (!$var1.$itemDamage) {
        $var2 = $var1.$itemID;
        var$3 = $var1.$stackSize;
        var$4 = 0;
        a: {
            while (true) {
                if (var$4 >= $this.$mainInventory.data.length) {
                    var$4 = (-1);
                    break a;
                }
                if ($this.$mainInventory.data[var$4] !== null && $this.$mainInventory.data[var$4].$itemID == $var2 && $this.$mainInventory.data[var$4].$stackSize < nms_ItemStack_getMaxStackSize($this.$mainInventory.data[var$4]) && $this.$mainInventory.data[var$4].$stackSize < 64)
                    break;
                var$4 = var$4 + 1 | 0;
            }
        }
        if (var$4 < 0)
            var$4 = nms_InventoryPlayer_getFirstEmptyStack($this);
        if (var$4 >= 0) {
            if ($this.$mainInventory.data[var$4] === null)
                $this.$mainInventory.data[var$4] = nms_ItemStack__init_3($var2, 0);
            $var2 = var$3 <= (nms_ItemStack_getMaxStackSize($this.$mainInventory.data[var$4]) - $this.$mainInventory.data[var$4].$stackSize | 0) ? var$3 : nms_ItemStack_getMaxStackSize($this.$mainInventory.data[var$4]) - $this.$mainInventory.data[var$4].$stackSize | 0;
            if ($var2 > (64 - $this.$mainInventory.data[var$4].$stackSize | 0))
                $var2 = 64 - $this.$mainInventory.data[var$4].$stackSize | 0;
            if ($var2) {
                var$3 = var$3 - $var2 | 0;
                var$5 = $this.$mainInventory.data[var$4];
                var$5.$stackSize = var$5.$stackSize + $var2 | 0;
                $this.$mainInventory.data[var$4].$animationsToGo = 5;
            }
        }
        $var1.$stackSize = var$3;
        if (!$var1.$stackSize)
            return 1;
    }
    $var2 = nms_InventoryPlayer_getFirstEmptyStack($this);
    if ($var2 < 0)
        return 0;
    $this.$mainInventory.data[$var2] = $var1;
    $this.$mainInventory.data[$var2].$animationsToGo = 5;
    return 1;
}
function nms_InventoryPlayer_decrStackSize($this, $var1, $var2) {
    var $var3, $var4, $var4_0;
    $var3 = $this.$mainInventory;
    if ($var1 >= $this.$mainInventory.data.length) {
        $var3 = $this.$armorInventory;
        $var1 = $var1 - $this.$mainInventory.data.length | 0;
    }
    $var3 = $var3.data;
    if ($var3[$var1] === null)
        return null;
    if ($var3[$var1].$stackSize <= $var2) {
        $var4 = $var3[$var1];
        $var3[$var1] = null;
        return $var4;
    }
    $var4_0 = nms_ItemStack_splitStack($var3[$var1], $var2);
    if (!$var3[$var1].$stackSize)
        $var3[$var1] = null;
    return $var4_0;
}
function nms_InventoryPlayer_setInventorySlotContents($this, $var1, $var2) {
    var $var3, var$4, var$5;
    $var3 = $this.$mainInventory;
    var$4 = $var3.data.length;
    if ($var1 >= var$4) {
        $var1 = $var1 - var$4 | 0;
        $var3 = $this.$armorInventory;
    }
    var$5 = $var3.data.length;
    if ($var1 >= var$5) {
        $var1 = $var1 - var$5 | 0;
        $var3 = $this.$craftingInventory;
    }
    $var3.data[$var1] = $var2;
}
function nms_InventoryPlayer_getStrVsBlock($this, $var1) {
    var $var2;
    $var2 = 1.0;
    if ($this.$mainInventory.data[$this.$currentItem] !== null)
        $var2 = $var2 * nms_ItemStack_getStrVsBlock($this.$mainInventory.data[$this.$currentItem], $var1);
    return $var2;
}
function nms_InventoryPlayer_writeToNBT($this, $var1) {
    var $var2, $var3, var$4;
    $var2 = 0;
    while ($var2 < $this.$mainInventory.data.length) {
        if ($this.$mainInventory.data[$var2] !== null) {
            $var3 = nms_NBTTagCompound__init_0();
            nms_NBTTagCompound_setByte($var3, $rt_s(541), $var2 << 24 >> 24);
            nms_ItemStack_writeToNBT($this.$mainInventory.data[$var2], $var3);
            nms_NBTTagList_setTag($var1, $var3);
        }
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < $this.$armorInventory.data.length) {
        if ($this.$armorInventory.data[$var2] !== null) {
            $var3 = nms_NBTTagCompound__init_0();
            nms_NBTTagCompound_setByte($var3, $rt_s(541), ($var2 + 100 | 0) << 24 >> 24);
            nms_ItemStack_writeToNBT($this.$armorInventory.data[$var2], $var3);
            nms_NBTTagList_setTag($var1, $var3);
        }
        $var2 = $var2 + 1 | 0;
    }
    var$4 = 0;
    while (var$4 < $this.$craftingInventory.data.length) {
        if ($this.$craftingInventory.data[var$4] !== null) {
            $var3 = nms_NBTTagCompound__init_0();
            nms_NBTTagCompound_setByte($var3, $rt_s(541), (var$4 + 80 | 0) << 24 >> 24);
            nms_ItemStack_writeToNBT($this.$craftingInventory.data[var$4], $var3);
            nms_NBTTagList_setTag($var1, $var3);
        }
        var$4 = var$4 + 1 | 0;
    }
    return $var1;
}
function nms_InventoryPlayer_readFromNBT($this, $var1) {
    var $var2, $var3, $var4;
    $this.$mainInventory = $rt_createArray(nms_ItemStack, 36);
    $this.$armorInventory = $rt_createArray(nms_ItemStack, 4);
    $this.$craftingInventory = $rt_createArray(nms_ItemStack, 4);
    $var2 = 0;
    while ($var2 < nms_NBTTagList_tagCount($var1)) {
        $var3 = nms_NBTTagList_tagAt($var1, $var2);
        $var4 = nms_NBTTagCompound_getByte($var3, $rt_s(541)) & 255;
        if ($var4 >= 0 && $var4 < $this.$mainInventory.data.length)
            $this.$mainInventory.data[$var4] = nms_ItemStack__init_5($var3);
        if ($var4 >= 80 && $var4 < ($this.$craftingInventory.data.length + 80 | 0))
            $this.$craftingInventory.data[$var4 - 80 | 0] = nms_ItemStack__init_5($var3);
        if ($var4 >= 100 && $var4 < ($this.$armorInventory.data.length + 100 | 0))
            $this.$armorInventory.data[$var4 - 100 | 0] = nms_ItemStack__init_5($var3);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_InventoryPlayer_getSizeInventory($this) {
    return $this.$mainInventory.data.length + 4 | 0;
}
function nms_InventoryPlayer_getStackInSlot($this, $var1) {
    var $var2, var$3;
    $var2 = $this.$mainInventory;
    var$3 = $var2.data.length;
    if ($var1 >= var$3) {
        $var1 = $var1 - var$3 | 0;
        $var2 = $this.$armorInventory;
    }
    var$3 = $var2.data.length;
    if ($var1 >= var$3) {
        $var1 = $var1 - var$3 | 0;
        $var2 = $this.$craftingInventory;
    }
    return $var2.data[$var1];
}
function nms_InventoryPlayer_getInvName($this) {
    return $rt_s(364);
}
function nms_InventoryPlayer_getInventoryStackLimit($this) {
    return 64;
}
function nms_InventoryPlayer_getDamageVsEntity($this, $var1) {
    var $var2;
    $var2 = nms_InventoryPlayer_getStackInSlot($this, $this.$currentItem);
    return $var2 === null ? 1 : nms_ItemStack_getDamageVsEntity($var2, $var1);
}
function nms_InventoryPlayer_canHarvestBlock($this, $var1) {
    var $var2;
    if ($var1.$blockMaterial !== nms_Material_rock && $var1.$blockMaterial !== nms_Material_iron && $var1.$blockMaterial !== nms_Material_builtSnow && $var1.$blockMaterial !== nms_Material_snow)
        return 1;
    $var2 = nms_InventoryPlayer_getStackInSlot($this, $this.$currentItem);
    return $var2 === null ? 0 : nms_ItemStack_canHarvestBlock($var2, $var1);
}
function nms_InventoryPlayer_armorItemInSlot($this, $var1) {
    return $this.$armorInventory.data[$var1];
}
function nms_InventoryPlayer_getTotalArmorValue($this) {
    var $var1, $var2, $var3, $var4, $var5;
    $var1 = 0;
    $var2 = 0;
    $var3 = 0;
    $var4 = 0;
    while ($var4 < $this.$armorInventory.data.length) {
        if ($this.$armorInventory.data[$var4] !== null && nms_ItemStack_getItem($this.$armorInventory.data[$var4]) instanceof nms_ItemArmor) {
            $var5 = nms_ItemStack_getMaxDamage($this.$armorInventory.data[$var4]);
            $var2 = $var2 + ($var5 - $this.$armorInventory.data[$var4].$itemDamage | 0) | 0;
            $var3 = $var3 + $var5 | 0;
            $var1 = $var1 + nms_ItemStack_getItem($this.$armorInventory.data[$var4]).$damageReduceAmmount | 0;
        }
        $var4 = $var4 + 1 | 0;
    }
    if (!$var3)
        return 0;
    return ($rt_imul($var1 - 1 | 0, $var2) / $var3 | 0) + 1 | 0;
}
function nms_InventoryPlayer_damageArmor($this, $var1) {
    var $var2;
    $var2 = 0;
    while ($var2 < $this.$armorInventory.data.length) {
        if ($this.$armorInventory.data[$var2] !== null && nms_ItemStack_getItem($this.$armorInventory.data[$var2]) instanceof nms_ItemArmor) {
            nms_ItemStack_damageItem($this.$armorInventory.data[$var2], $var1);
            if (!$this.$armorInventory.data[$var2].$stackSize)
                $this.$armorInventory.data[$var2] = null;
        }
        $var2 = $var2 + 1 | 0;
    }
}
function nms_InventoryPlayer_dropAllItems($this) {
    var $var1;
    $var1 = 0;
    while ($var1 < $this.$mainInventory.data.length) {
        if ($this.$mainInventory.data[$var1] !== null) {
            nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$player, $this.$mainInventory.data[$var1], 1);
            $this.$mainInventory.data[$var1] = null;
        }
        $var1 = $var1 + 1 | 0;
    }
    $var1 = 0;
    while ($var1 < $this.$armorInventory.data.length) {
        if ($this.$armorInventory.data[$var1] !== null) {
            nms_EntityPlayer_dropPlayerItemWithRandomChoice($this.$player, $this.$armorInventory.data[$var1], 1);
            $this.$armorInventory.data[$var1] = null;
        }
        $var1 = $var1 + 1 | 0;
    }
}
function nms_InventoryPlayer_onInventoryChanged($this) {
    $this.$field_845_f = 1;
}
function nms_GuiContainer() {
    var a = this; nms_GuiScreen.call(a);
    a.$xSize = 0;
    a.$ySize = 0;
    a.$inventorySlots = null;
}
var nms_GuiContainer_itemRenderer = null;
function nms_GuiContainer__init_0() {
    var var_0 = new nms_GuiContainer();
    nms_GuiContainer__init_(var_0);
    return var_0;
}
function nms_GuiContainer__init_($this) {
    nms_GuiScreen__init_($this);
    $this.$xSize = 176;
    $this.$ySize = 166;
    $this.$inventorySlots = ju_ArrayList__init_0();
}
function nms_GuiContainer_drawScreen($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, $var10, $var8, var$10, var$11, var$12, var$13, var$14, $var9, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();$var8 = $thread.pop();$var10 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        $var4 = ($this.$width - $this.$xSize | 0) / 2 | 0;
        $var5 = ($this.$height0 - $this.$ySize | 0) / 2 | 0;
        $ptr = 2;
    case 2:
        $this.$drawGuiContainerBackgroundLayer($var3);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glRotatef(180.0, 1.0, 0.0, 0.0);
        nms_RenderHelper_enableStandardItemLighting();
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var4, $var5, 0.0);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glEnable(32826);
        $var6 = 0;
        if ($var6 < $this.$inventorySlots.$size) {
            $var7 = ju_ArrayList_get($this.$inventorySlots, $var6);
            $var10 = $var7.$inventory1;
            $var8 = $var7.$slotIndex;
            var$10 = $var7.$xPos;
            var$11 = $var7.$yPos;
            var$12 = $var10.$getStackInSlot($var8);
            if (var$12 === null) {
                $var8 = $var7.$func_775_c();
                if ($var8 >= 0) {
                    olo_EaglerAdapterGL30_glDisable(2896);
                    $var10 = $this.$mc5.$renderEngine;
                    var$13 = $this.$mc5.$renderEngine;
                    var$14 = $rt_s(176);
                    $ptr = 5;
                    continue main;
                }
            }
            var$13 = nms_GuiContainer_itemRenderer;
            var$14 = $this.$fontRenderer0;
            $var10 = $this.$mc5.$renderEngine;
            $ptr = 4;
            continue main;
        }
        $var10 = $this.$mc5.$thePlayer.$inventory0;
        if ($var10.$draggingItemStack === null) {
            olo_EaglerAdapterGL30_glDisable(32826);
            nms_RenderHelper_disableStandardItemLighting();
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            $this.$drawGuiContainerForegroundLayer();
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
            olo_EaglerAdapterGL30_glPopMatrix();
            return;
        }
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, 32.0);
        $var7 = nms_GuiContainer_itemRenderer;
        var$13 = $this.$fontRenderer0;
        var$14 = $this.$mc5.$renderEngine;
        var$12 = $var10.$draggingItemStack;
        $var1 = ($var1 - $var4 | 0) - 8 | 0;
        $var2 = ($var2 - $var5 | 0) - 8 | 0;
        $ptr = 3;
    case 3:
        nms_RenderItem_renderItemIntoGUI($var7, var$13, var$14, var$12, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        nms_RenderItem_renderItemOverlayIntoGUI(nms_GuiContainer_itemRenderer, $this.$fontRenderer0, $this.$mc5.$renderEngine, $var10.$draggingItemStack, $var1, $var2);
        olo_EaglerAdapterGL30_glDisable(32826);
        nms_RenderHelper_disableStandardItemLighting();
        olo_EaglerAdapterGL30_glDisable(2896);
        olo_EaglerAdapterGL30_glDisable(2929);
        $this.$drawGuiContainerForegroundLayer();
        olo_EaglerAdapterGL30_glEnable(2896);
        olo_EaglerAdapterGL30_glEnable(2929);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 4:
        nms_RenderItem_renderItemIntoGUI(var$13, var$14, $var10, var$12, var$10, var$11);
        if ($rt_suspending()) {
            break main;
        }
        nms_RenderItem_renderItemOverlayIntoGUI(nms_GuiContainer_itemRenderer, $this.$fontRenderer0, $this.$mc5.$renderEngine, var$12, var$10, var$11);
        if (nms_SlotInventory_isAtCursorPos($var7, $var1, $var2)) {
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            $var8 = $var7.$xPos;
            $var9 = $var7.$yPos;
            nms_Gui_drawGradientRect($this, $var8, $var9, $var8 + 16 | 0, $var9 + 16 | 0, (-2130706433), (-2130706433));
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
        }
        $var6 = $var6 + 1 | 0;
        if ($var6 < $this.$inventorySlots.$size) {
            $var7 = ju_ArrayList_get($this.$inventorySlots, $var6);
            $var10 = $var7.$inventory1;
            $var8 = $var7.$slotIndex;
            var$10 = $var7.$xPos;
            var$11 = $var7.$yPos;
            var$12 = $var10.$getStackInSlot($var8);
            if (var$12 === null) {
                $var8 = $var7.$func_775_c();
                if ($var8 >= 0) {
                    olo_EaglerAdapterGL30_glDisable(2896);
                    $var10 = $this.$mc5.$renderEngine;
                    var$13 = $this.$mc5.$renderEngine;
                    var$14 = $rt_s(176);
                    $ptr = 5;
                    continue main;
                }
            }
            var$13 = nms_GuiContainer_itemRenderer;
            var$14 = $this.$fontRenderer0;
            $var10 = $this.$mc5.$renderEngine;
            continue main;
        }
        $var10 = $this.$mc5.$thePlayer.$inventory0;
        if ($var10.$draggingItemStack === null) {
            olo_EaglerAdapterGL30_glDisable(32826);
            nms_RenderHelper_disableStandardItemLighting();
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            $this.$drawGuiContainerForegroundLayer();
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
            olo_EaglerAdapterGL30_glPopMatrix();
            return;
        }
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, 32.0);
        $var7 = nms_GuiContainer_itemRenderer;
        var$13 = $this.$fontRenderer0;
        var$14 = $this.$mc5.$renderEngine;
        var$12 = $var10.$draggingItemStack;
        $var1 = ($var1 - $var4 | 0) - 8 | 0;
        $var2 = ($var2 - $var5 | 0) - 8 | 0;
        $ptr = 3;
        continue main;
    case 5:
        $tmp = nms_RenderEngine_getTexture(var$13, var$14);
        if ($rt_suspending()) {
            break main;
        }
        $var9 = $tmp;
        nms_RenderEngine_bindTexture($var10, $var9);
        nms_Gui_drawTexturedModalRect($this, var$10, var$11, ($var8 % 16 | 0) * 16 | 0, ($var8 / 16 | 0) * 16 | 0, 16, 16);
        olo_EaglerAdapterGL30_glEnable(2896);
        if (nms_SlotInventory_isAtCursorPos($var7, $var1, $var2)) {
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            $var8 = $var7.$xPos;
            $var9 = $var7.$yPos;
            nms_Gui_drawGradientRect($this, $var8, $var9, $var8 + 16 | 0, $var9 + 16 | 0, (-2130706433), (-2130706433));
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
        }
        $var6 = $var6 + 1 | 0;
        if ($var6 < $this.$inventorySlots.$size) {
            $var7 = ju_ArrayList_get($this.$inventorySlots, $var6);
            $var10 = $var7.$inventory1;
            $var8 = $var7.$slotIndex;
            var$10 = $var7.$xPos;
            var$11 = $var7.$yPos;
            var$12 = $var10.$getStackInSlot($var8);
            if (var$12 === null) {
                $var8 = $var7.$func_775_c();
                if ($var8 >= 0) {
                    olo_EaglerAdapterGL30_glDisable(2896);
                    $var10 = $this.$mc5.$renderEngine;
                    var$13 = $this.$mc5.$renderEngine;
                    var$14 = $rt_s(176);
                    continue main;
                }
            }
            var$13 = nms_GuiContainer_itemRenderer;
            var$14 = $this.$fontRenderer0;
            $var10 = $this.$mc5.$renderEngine;
            $ptr = 4;
            continue main;
        }
        $var10 = $this.$mc5.$thePlayer.$inventory0;
        if ($var10.$draggingItemStack === null) {
            olo_EaglerAdapterGL30_glDisable(32826);
            nms_RenderHelper_disableStandardItemLighting();
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            $this.$drawGuiContainerForegroundLayer();
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
            olo_EaglerAdapterGL30_glPopMatrix();
            return;
        }
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, 32.0);
        $var7 = nms_GuiContainer_itemRenderer;
        var$13 = $this.$fontRenderer0;
        var$14 = $this.$mc5.$renderEngine;
        var$12 = $var10.$draggingItemStack;
        $var1 = ($var1 - $var4 | 0) - 8 | 0;
        $var2 = ($var2 - $var5 | 0) - 8 | 0;
        $ptr = 3;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var10, $var8, var$10, var$11, var$12, var$13, var$14, $var9, $ptr);
}
function nms_GuiContainer_getSlotAtPosition($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = 0;
    while (true) {
        if ($var3 >= $this.$inventorySlots.$size)
            return null;
        $var4 = ju_ArrayList_get($this.$inventorySlots, $var3);
        if (nms_SlotInventory_isAtCursorPos($var4, $var1, $var2))
            break;
        $var3 = $var3 + 1 | 0;
    }
    return $var4;
}
function nms_GuiContainer_mouseClicked($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, $var9, $var8;
    if (!($var3 && $var3 != 1)) {
        $var4 = nms_GuiContainer_getSlotAtPosition($this, $var1, $var2);
        $var5 = $this.$mc5.$thePlayer.$inventory0;
        if ($var4 !== null) {
            a: {
                $var6 = nms_Slot_getStack($var4);
                if ($var6 === null && $var5.$draggingItemStack === null)
                    break a;
                if ($var6 !== null && $var5.$draggingItemStack === null) {
                    $var7 = !$var3 ? $var6.$stackSize : ($var6.$stackSize + 1 | 0) / 2 | 0;
                    $var5.$draggingItemStack = $var4.$inventory1.$decrStackSize($var4.$slotIndex, $var7);
                    if (!$var6.$stackSize)
                        nms_Slot_putStack($var4, null);
                    $var4.$onPickupFromSlot();
                    break a;
                }
                if ($var6 === null && $var5.$draggingItemStack !== null && $var4.$isItemValid($var5.$draggingItemStack)) {
                    $var7 = $var3 ? 1 : $var5.$draggingItemStack.$stackSize;
                    if ($var7 > $var4.$getSlotStackLimit())
                        $var7 = $var4.$getSlotStackLimit();
                    nms_Slot_putStack($var4, nms_ItemStack_splitStack($var5.$draggingItemStack, $var7));
                    if ($var5.$draggingItemStack.$stackSize)
                        break a;
                    $var5.$draggingItemStack = null;
                    break a;
                }
                if ($var6 === null)
                    break a;
                if ($var5.$draggingItemStack === null)
                    break a;
                if (!$var4.$isItemValid($var5.$draggingItemStack)) {
                    if ($var6.$itemID != $var5.$draggingItemStack.$itemID)
                        break a;
                    if (nms_ItemStack_getMaxStackSize($var5.$draggingItemStack) <= 1)
                        break a;
                    $var7 = $var6.$stackSize;
                    if ($var7 <= 0)
                        break a;
                    if (($var7 + $var5.$draggingItemStack.$stackSize | 0) > nms_ItemStack_getMaxStackSize($var5.$draggingItemStack))
                        break a;
                    $var5 = $var5.$draggingItemStack;
                    $var5.$stackSize = $var5.$stackSize + $var7 | 0;
                    nms_ItemStack_splitStack($var6, $var7);
                    if (!$var6.$stackSize)
                        nms_Slot_putStack($var4, null);
                    $var4.$onPickupFromSlot();
                    break a;
                }
                if ($var6.$itemID != $var5.$draggingItemStack.$itemID) {
                    if ($var5.$draggingItemStack.$stackSize > $var4.$getSlotStackLimit())
                        break a;
                    nms_Slot_putStack($var4, $var5.$draggingItemStack);
                    $var5.$draggingItemStack = $var6;
                    break a;
                }
                if ($var6.$itemID != $var5.$draggingItemStack.$itemID)
                    break a;
                if (!$var3) {
                    $var7 = $var5.$draggingItemStack.$stackSize;
                    if ($var7 > ($var4.$getSlotStackLimit() - $var6.$stackSize | 0))
                        $var7 = $var4.$getSlotStackLimit() - $var6.$stackSize | 0;
                    if ($var7 > (nms_ItemStack_getMaxStackSize($var5.$draggingItemStack) - $var6.$stackSize | 0))
                        $var7 = nms_ItemStack_getMaxStackSize($var5.$draggingItemStack) - $var6.$stackSize | 0;
                    nms_ItemStack_splitStack($var5.$draggingItemStack, $var7);
                    if (!$var5.$draggingItemStack.$stackSize)
                        $var5.$draggingItemStack = null;
                    $var6.$stackSize = $var6.$stackSize + $var7 | 0;
                    break a;
                }
                if ($var3 != 1)
                    break a;
                $var7 = 1;
                if ($var7 > ($var4.$getSlotStackLimit() - $var6.$stackSize | 0))
                    $var7 = $var4.$getSlotStackLimit() - $var6.$stackSize | 0;
                if ($var7 > (nms_ItemStack_getMaxStackSize($var5.$draggingItemStack) - $var6.$stackSize | 0))
                    $var7 = nms_ItemStack_getMaxStackSize($var5.$draggingItemStack) - $var6.$stackSize | 0;
                nms_ItemStack_splitStack($var5.$draggingItemStack, $var7);
                if (!$var5.$draggingItemStack.$stackSize)
                    $var5.$draggingItemStack = null;
                $var6.$stackSize = $var6.$stackSize + $var7 | 0;
            }
            nms_Slot_onSlotChanged($var4);
        } else if ($var5.$draggingItemStack !== null) {
            $var9 = ($this.$width - $this.$xSize | 0) / 2 | 0;
            $var7 = ($this.$height0 - $this.$ySize | 0) / 2 | 0;
            if (!($var1 >= $var9 && $var2 >= $var7 && $var1 < ($var9 + $this.$xSize | 0) && $var2 < ($var7 + $this.$xSize | 0))) {
                $var8 = $this.$mc5.$thePlayer;
                if (!$var3) {
                    nms_EntityPlayer_dropPlayerItem($var8, $var5.$draggingItemStack);
                    $var5.$draggingItemStack = null;
                }
                if ($var3 == 1) {
                    nms_EntityPlayer_dropPlayerItem($var8, nms_ItemStack_splitStack($var5.$draggingItemStack, 1));
                    if (!$var5.$draggingItemStack.$stackSize)
                        $var5.$draggingItemStack = null;
                }
            }
        }
    }
}
function nms_GuiContainer_mouseMovedOrUp($this, $var1, $var2, $var3) {
    return;
}
function nms_GuiContainer_keyTyped($this, $var1, $var2) {
    if (!($var2 != 1 && $var2 != $this.$mc5.$gameSettings.$keyBindInventory.$keyCode))
        nmc_Minecraft_displayGuiScreen($this.$mc5, null);
}
function nms_GuiContainer_onGuiClosed($this) {
    var $var1;
    if ($this.$mc5.$thePlayer !== null) {
        $var1 = $this.$mc5.$thePlayer.$inventory0;
        if ($var1.$draggingItemStack !== null) {
            nms_EntityPlayer_dropPlayerItem($this.$mc5.$thePlayer, $var1.$draggingItemStack);
            $var1.$draggingItemStack = null;
        }
    }
}
function nms_GuiContainer_doesGuiPauseGame($this) {
    return 0;
}
function nms_GuiContainer__clinit_() {
    nms_GuiContainer_itemRenderer = nms_RenderItem__init_0();
}
function nms_GuiInventory() {
    var a = this; nms_GuiContainer.call(a);
    a.$field_977_j = null;
    a.$xSize_lo = 0.0;
    a.$ySize_lo = 0.0;
}
function nms_GuiInventory__init_(var_0, var_1) {
    var var_2 = new nms_GuiInventory();
    nms_GuiInventory__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_GuiInventory__init_0($this, $var1, $var2) {
    var var$3, var$4, var$5, $var3, $var4, $var4_0;
    var$3 = $var2.data;
    nms_GuiContainer__init_($this);
    $this.$field_948_f = 1;
    var$4 = new nms_CraftingInventoryPlayerCB;
    nms_CraftingInventoryCB__init_(var$4);
    var$4.$craftResult0 = nms_InventoryCraftResult__init_0();
    var$5 = new nms_InventoryCrafting;
    var$5.$nbrSlots = var$3.length;
    var$5.$stackList = $var2;
    var$5.$eventHandler = var$4;
    var$4.$craftMatrix0 = var$5;
    nms_CraftingInventoryPlayerCB_onCraftMatrixChanged(var$4, var$4.$craftMatrix0);
    $this.$field_977_j = var$4;
    ju_ArrayList_add($this.$inventorySlots, nms_SlotCrafting__init_($this, $this.$field_977_j.$craftMatrix0, $this.$field_977_j.$craftResult0, 0, 144, 36));
    $var3 = 0;
    while ($var3 < 2) {
        $var4 = 0;
        while ($var4 < 2) {
            ju_ArrayList_add($this.$inventorySlots, nms_SlotInventory__init_($this, $this.$field_977_j.$craftMatrix0, $var4 + ($var3 * 2 | 0) | 0, 88 + ($var4 * 18 | 0) | 0, 26 + ($var3 * 18 | 0) | 0));
            $var4 = $var4 + 1 | 0;
        }
        $var3 = $var3 + 1 | 0;
    }
    $var4 = 0;
    while ($var4 < 4) {
        var$5 = $this.$inventorySlots;
        var$4 = new nms_SlotArmor;
        nms_SlotInventory__init_0(var$4, $this, $var1, (nms_InventoryPlayer_getSizeInventory($var1) - 1 | 0) - $var4 | 0, 8, 8 + ($var4 * 18 | 0) | 0);
        var$4.$field_1123_d = $this;
        var$4.$field_1124_c = $var4;
        ju_ArrayList_add(var$5, var$4);
        $var4 = $var4 + 1 | 0;
    }
    $var4 = 0;
    while ($var4 < 3) {
        $var4_0 = 0;
        while ($var4_0 < 9) {
            ju_ArrayList_add($this.$inventorySlots, nms_SlotInventory__init_($this, $var1, $var4_0 + (($var4 + 1 | 0) * 9 | 0) | 0, 8 + ($var4_0 * 18 | 0) | 0, 84 + ($var4 * 18 | 0) | 0));
            $var4_0 = $var4_0 + 1 | 0;
        }
        $var4 = $var4 + 1 | 0;
    }
    $var3 = 0;
    while ($var3 < 9) {
        ju_ArrayList_add($this.$inventorySlots, nms_SlotInventory__init_($this, $var1, $var3, 8 + ($var3 * 18 | 0) | 0, 142));
        $var3 = $var3 + 1 | 0;
    }
}
function nms_GuiInventory_drawGuiContainerForegroundLayer($this) {
    nms_FontRenderer_drawString($this.$fontRenderer0, $rt_s(542), 86, 16, 4210752);
}
function nms_GuiInventory_drawScreen($this, $var1, $var2, $var3) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiContainer_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $this.$xSize_lo = $var1;
        $this.$ySize_lo = $var2;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function nms_GuiInventory_drawGuiContainerBackgroundLayer($this, $var1) {
    var var$2, var$3, $var2, $var3, $var4, $var6, $var7, $var8, $var9, $var10, var$12, var$13, var$14, $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = $this.$mc5.$renderEngine;
        var$3 = $rt_s(543);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_RenderEngine_bindTexture($this.$mc5.$renderEngine, $var2);
        $var3 = ($this.$width - $this.$xSize | 0) / 2 | 0;
        $var4 = ($this.$height0 - $this.$ySize | 0) / 2 | 0;
        nms_Gui_drawTexturedModalRect($this, $var3, $var4, 0, 0, $this.$xSize, $this.$ySize);
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glEnable(2903);
        olo_EaglerAdapterGL30_glPushMatrix();
        $var1 = $var3 + 51 | 0;
        $var2 = $var4 + 75 | 0;
        olo_EaglerAdapterGL30_glTranslatef($var1, $var2, 50.0);
        olo_EaglerAdapterGL30_glScalef((-30.0), 30.0, 30.0);
        olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 0.0, 1.0);
        $var6 = $this.$mc5.$thePlayer.$field_735_n;
        $var7 = $this.$mc5.$thePlayer.$rotationYaw;
        $var8 = $this.$mc5.$thePlayer.$rotationPitch;
        $var9 = $var1 - $this.$xSize_lo;
        $var10 = ($var2 - 50 | 0) - $this.$ySize_lo;
        olo_EaglerAdapterGL30_glRotatef(135.0, 0.0, 1.0, 0.0);
        nms_RenderHelper_enableStandardItemLighting();
        olo_EaglerAdapterGL30_glRotatef((-135.0), 0.0, 1.0, 0.0);
        var$12 = $var10 / 40.0;
        olo_EaglerAdapterGL30_glRotatef( -jl_Math_atan(var$12) * 20.0, 1.0, 0.0, 0.0);
        var$3 = $this.$mc5.$thePlayer;
        var$13 = $var9 / 40.0;
        var$3.$field_735_n = jl_Math_atan(var$13) * 20.0;
        $this.$mc5.$thePlayer.$rotationYaw = jl_Math_atan(var$13) * 40.0;
        $this.$mc5.$thePlayer.$rotationPitch =  -jl_Math_atan(var$12) * 20.0;
        olo_EaglerAdapterGL30_glTranslatef(0.0, $this.$mc5.$thePlayer.$yOffset, 0.0);
        nms_RenderManager_$callClinit();
        var$3 = nms_RenderManager_instance;
        var$2 = $this.$mc5.$thePlayer;
        var$12 = 0.0;
        var$13 = 0.0;
        var$14 = 0.0;
        $var1 = 0.0;
        $var5 = 1.0;
        $ptr = 2;
    case 2:
        nms_RenderManager_func_853_a(var$3, var$2, var$12, var$13, var$14, $var1, $var5);
        if ($rt_suspending()) {
            break main;
        }
        $this.$mc5.$thePlayer.$field_735_n = $var6;
        $this.$mc5.$thePlayer.$rotationYaw = $var7;
        $this.$mc5.$thePlayer.$rotationPitch = $var8;
        olo_EaglerAdapterGL30_glPopMatrix();
        nms_RenderHelper_disableStandardItemLighting();
        olo_EaglerAdapterGL30_glDisable(32826);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $var2, $var3, $var4, $var6, $var7, $var8, $var9, $var10, var$12, var$13, var$14, $var5, $ptr);
}
function nms_GuiUnused() {
    nms_GuiScreen.call(this);
}
function nms_GuiUnused__init_0() {
    var var_0 = new nms_GuiUnused();
    nms_GuiUnused__init_(var_0);
    return var_0;
}
function nms_GuiUnused__init_($this) {
    nms_GuiScreen__init_($this);
}
function nms_GuiGameOver() {
    nms_GuiScreen.call(this);
}
function nms_GuiGameOver__init_0() {
    var var_0 = new nms_GuiGameOver();
    nms_GuiGameOver__init_(var_0);
    return var_0;
}
function nms_GuiGameOver__init_($this) {
    nms_GuiScreen__init_($this);
}
function nms_GuiGameOver_initGui($this) {
    ju_ArrayList_clear($this.$controlList);
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(1, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 72 | 0, $rt_s(544)));
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(2, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 96 | 0, $rt_s(545)));
    if ($this.$mc5.$field_6320_i === null)
        ju_ArrayList_get($this.$controlList, 1).$enabled = 0;
}
function nms_GuiGameOver_keyTyped($this, $var1, $var2) {
    return;
}
function nms_GuiGameOver_actionPerformed($this, $var1) {
    var var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($var1.$id2 == 1) {
            var$2 = $this.$mc5.$thePlayer;
            $ptr = 1;
            continue main;
        }
        if ($var1.$id2 != 2)
            return;
        $var1 = $this.$mc5;
        var$2 = null;
        $ptr = 2;
        continue main;
    case 1:
        nms_EntityPlayerSP_func_9367_r(var$2);
        if ($rt_suspending()) {
            break main;
        }
        nmc_Minecraft_displayGuiScreen($this.$mc5, null);
        if ($var1.$id2 != 2)
            return;
        $var1 = $this.$mc5;
        var$2 = null;
        $ptr = 2;
    case 2:
        nmc_Minecraft_func_6261_a($var1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        nmc_Minecraft_displayGuiScreen($this.$mc5, nms_GuiMainMenu__init_0());
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, $ptr);
}
function nms_GuiGameOver_drawScreen($this, $var1, $var2, $var3) {
    var var$4, var$5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nms_Gui_drawGradientRect($this, 0, 0, $this.$width, $this.$height0, 1615855616, (-1602211792));
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glScalef(2.0, 2.0, 2.0);
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $rt_s(546), ($this.$width / 2 | 0) / 2 | 0, 30, 16777215);
        olo_EaglerAdapterGL30_glPopMatrix();
        var$4 = $this.$fontRenderer0;
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        nms_Gui_drawCenteredString($this, var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(547)), $this.$mc5.$thePlayer.$score)), $this.$width / 2 | 0, 100, 16777215);
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, var$5, $ptr);
}
function nms_GuiGameOver_doesGuiPauseGame($this) {
    return 0;
}
function nle_BaseNCodec$Context() {
    var a = this; jl_Object.call(a);
    a.$ibitWorkArea = 0;
    a.$buffer2 = null;
    a.$pos0 = 0;
    a.$readPos = 0;
    a.$eof0 = 0;
    a.$currentLinePos = 0;
    a.$modulus = 0;
}
function nle_BaseNCodec$Context__init_0() {
    var var_0 = new nle_BaseNCodec$Context();
    nle_BaseNCodec$Context__init_(var_0);
    return var_0;
}
function nle_BaseNCodec$Context__init_($this) {
    return;
}
function ju_HashMap$2() {
    ju_AbstractCollection.call(this);
    this.$this$01 = null;
}
function ju_HashMap$2_contains($this, $object) {
    return ju_HashMap_containsValue($this.$this$01, $object);
}
function ju_HashMap$2_iterator($this) {
    var var$1;
    var$1 = new ju_HashMap$ValueIterator;
    ju_HashMap$AbstractMapIterator__init_(var$1, $this.$this$01);
    return var$1;
}
function cjj_InfBlocks() {
    var a = this; jl_Object.call(a);
    a.$mode1 = 0;
    a.$left = 0;
    a.$table = 0;
    a.$index1 = 0;
    a.$blens = null;
    a.$bb = null;
    a.$tb = null;
    a.$bl = null;
    a.$bd = null;
    a.$tl = null;
    a.$td = null;
    a.$tli = null;
    a.$tdi = null;
    a.$codes = null;
    a.$last = 0;
    a.$bitk = 0;
    a.$bitb = 0;
    a.$hufts = null;
    a.$window = null;
    a.$end1 = 0;
    a.$read3 = 0;
    a.$write5 = 0;
    a.$check = 0;
    a.$inftree = null;
    a.$z1 = null;
}
var cjj_InfBlocks_inflate_mask = null;
var cjj_InfBlocks_border = null;
function cjj_InfBlocks_reset($this) {
    $this.$mode1 = 0;
    $this.$bitk = 0;
    $this.$bitb = 0;
    $this.$write5 = 0;
    $this.$read3 = 0;
    if ($this.$check)
        $this.$z1.$adler.$reset();
}
function cjj_InfBlocks_proc($this, $r) {
    var $p, $n, $b, $k, $q, $m, var$8, var$9, var$10, $i, $t, $c, var$14, $j, $i_0;
    $p = $this.$z1.$next_in_index;
    $n = $this.$z1.$avail_in;
    $b = $this.$bitb;
    $k = $this.$bitk;
    $q = $this.$write5;
    $m = $q >= $this.$read3 ? $this.$end1 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
    a: {
        b: {
            c: {
                d: {
                    e: while (true) {
                        f: {
                            g: {
                                h: {
                                    i: {
                                        j: {
                                            switch ($this.$mode1) {
                                                case 2:
                                                    break f;
                                                case 9:
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z1.$avail_in = $n;
                                                    var$8 = $this.$z1;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                    $this.$z1.$next_in_index = $p;
                                                    $this.$write5 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-3));
                                                case 0:
                                                    break j;
                                                case 1:
                                                    break;
                                                case 3:
                                                    while ($k < 14) {
                                                        if (!$n) {
                                                            $this.$bitb = $b;
                                                            $this.$bitk = $k;
                                                            $this.$z1.$avail_in = $n;
                                                            var$8 = $this.$z1;
                                                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                            $this.$z1.$next_in_index = $p;
                                                            $this.$write5 = $q;
                                                            return cjj_InfBlocks_inflate_flush($this, $r);
                                                        }
                                                        $r = 0;
                                                        $n = $n + (-1) | 0;
                                                        var$9 = $this.$z1.$next_in.data;
                                                        var$10 = $p + 1 | 0;
                                                        $b = $b | (var$9[$p] & 255) << $k;
                                                        $k = $k + 8 | 0;
                                                        $p = var$10;
                                                    }
                                                    var$10 = $b & 16383;
                                                    $this.$table = var$10;
                                                    $i = var$10 & 31;
                                                    if ($i > 29)
                                                        break d;
                                                    var$10 = var$10 >> 5 & 31;
                                                    if (var$10 > 29)
                                                        break d;
                                                    k: {
                                                        var$10 = (258 + $i | 0) + var$10 | 0;
                                                        if (!($this.$blens !== null && $this.$blens.data.length >= var$10))
                                                            $this.$blens = $rt_createIntArray(var$10);
                                                        else {
                                                            $i = 0;
                                                            while (true) {
                                                                if ($i >= var$10)
                                                                    break k;
                                                                $this.$blens.data[$i] = 0;
                                                                $i = $i + 1 | 0;
                                                            }
                                                        }
                                                    }
                                                    $b = $b >>> 14;
                                                    $k = $k + (-14) | 0;
                                                    $this.$index1 = 0;
                                                    $this.$mode1 = 4;
                                                    break i;
                                                case 4:
                                                    break i;
                                                case 5:
                                                    break h;
                                                case 6:
                                                    break g;
                                                case 7:
                                                    break b;
                                                case 8:
                                                    break a;
                                                default:
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z1.$avail_in = $n;
                                                    var$8 = $this.$z1;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                    $this.$z1.$next_in_index = $p;
                                                    $this.$write5 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-2));
                                            }
                                            while ($k < 32) {
                                                if (!$n) {
                                                    $this.$bitb = $b;
                                                    $this.$bitk = $k;
                                                    $this.$z1.$avail_in = $n;
                                                    var$8 = $this.$z1;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                    $this.$z1.$next_in_index = $p;
                                                    $this.$write5 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, $r);
                                                }
                                                $r = 0;
                                                $n = $n + (-1) | 0;
                                                var$9 = $this.$z1.$next_in.data;
                                                var$10 = $p + 1 | 0;
                                                $b = $b | (var$9[$p] & 255) << $k;
                                                $k = $k + 8 | 0;
                                                $p = var$10;
                                            }
                                            var$10 = ($b ^ (-1)) >>> 16 & 65535;
                                            $i = $b & 65535;
                                            if (var$10 != $i) {
                                                $this.$mode1 = 9;
                                                $this.$z1.$msg = $rt_s(548);
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z1.$avail_in = $n;
                                                var$8 = $this.$z1;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                $this.$z1.$next_in_index = $p;
                                                $this.$write5 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, (-3));
                                            }
                                            $this.$left = $i;
                                            $k = 0;
                                            $this.$mode1 = $this.$left ? 2 : !$this.$last ? 0 : 7;
                                            $b = $k;
                                            continue e;
                                        }
                                        while ($k < 3) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z1.$avail_in = $n;
                                                var$8 = $this.$z1;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                $this.$z1.$next_in_index = $p;
                                                $this.$write5 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z1.$next_in.data;
                                            var$10 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$10;
                                        }
                                        l: {
                                            $t = $b & 7;
                                            $this.$last = $t & 1;
                                            switch ($t >>> 1) {
                                                case 0:
                                                    var$10 = $b >>> 3;
                                                    $i = $k + (-3) | 0;
                                                    $c = $i & 7;
                                                    $b = var$10 >>> $c;
                                                    $k = $i - $c | 0;
                                                    $this.$mode1 = 1;
                                                    break l;
                                                case 1:
                                                    cjj_InfTree_inflate_trees_fixed($this.$bl, $this.$bd, $this.$tl, $this.$td, $this.$z1);
                                                    cjj_InfCodes_init($this.$codes, $this.$bl.data[0], $this.$bd.data[0], $this.$tl.data[0], 0, $this.$td.data[0], 0);
                                                    $b = $b >>> 3;
                                                    $k = $k + (-3) | 0;
                                                    $this.$mode1 = 6;
                                                    break l;
                                                case 2:
                                                    $b = $b >>> 3;
                                                    $k = $k + (-3) | 0;
                                                    $this.$mode1 = 3;
                                                    break l;
                                                case 3:
                                                    $r = $b >>> 3;
                                                    var$10 = $k + (-3) | 0;
                                                    $this.$mode1 = 9;
                                                    $this.$z1.$msg = $rt_s(549);
                                                    $this.$bitb = $r;
                                                    $this.$bitk = var$10;
                                                    $this.$z1.$avail_in = $n;
                                                    var$8 = $this.$z1;
                                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                    $this.$z1.$next_in_index = $p;
                                                    $this.$write5 = $q;
                                                    return cjj_InfBlocks_inflate_flush($this, (-3));
                                                default:
                                            }
                                        }
                                        continue e;
                                    }
                                    while ($this.$index1 < (4 + ($this.$table >>> 10) | 0)) {
                                        while ($k < 3) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z1.$avail_in = $n;
                                                var$8 = $this.$z1;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                $this.$z1.$next_in_index = $p;
                                                $this.$write5 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z1.$next_in.data;
                                            var$10 = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = var$10;
                                        }
                                        var$14 = $this.$blens.data;
                                        var$9 = cjj_InfBlocks_border.data;
                                        var$10 = $this.$index1;
                                        $this.$index1 = var$10 + 1 | 0;
                                        var$14[var$9[var$10]] = $b & 7;
                                        $b = $b >>> 3;
                                        $k = $k + (-3) | 0;
                                    }
                                    while ($this.$index1 < 19) {
                                        var$14 = $this.$blens.data;
                                        var$9 = cjj_InfBlocks_border.data;
                                        var$10 = $this.$index1;
                                        $this.$index1 = var$10 + 1 | 0;
                                        var$14[var$9[var$10]] = 0;
                                    }
                                    $this.$bb.data[0] = 7;
                                    var$10 = cjj_InfTree_inflate_trees_bits($this.$inftree, $this.$blens, $this.$bb, $this.$tb, $this.$hufts, $this.$z1);
                                    if (var$10) {
                                        if (var$10 == (-3)) {
                                            $this.$blens = null;
                                            $this.$mode1 = 9;
                                        }
                                        $this.$bitb = $b;
                                        $this.$bitk = $k;
                                        $this.$z1.$avail_in = $n;
                                        var$8 = $this.$z1;
                                        var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                        $this.$z1.$next_in_index = $p;
                                        $this.$write5 = $q;
                                        return cjj_InfBlocks_inflate_flush($this, var$10);
                                    }
                                    $this.$index1 = 0;
                                    $this.$mode1 = 5;
                                }
                                while (true) {
                                    var$10 = $this.$table;
                                    if ($this.$index1 >= ((258 + (var$10 & 31) | 0) + (var$10 >> 5 & 31) | 0))
                                        break;
                                    var$10 = $this.$bb.data[0];
                                    while ($k < var$10) {
                                        if (!$n) {
                                            $this.$bitb = $b;
                                            $this.$bitk = $k;
                                            $this.$z1.$avail_in = $n;
                                            var$8 = $this.$z1;
                                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                            $this.$z1.$next_in_index = $p;
                                            $this.$write5 = $q;
                                            return cjj_InfBlocks_inflate_flush($this, $r);
                                        }
                                        $r = 0;
                                        $n = $n + (-1) | 0;
                                        var$9 = $this.$z1.$next_in.data;
                                        $i = $p + 1 | 0;
                                        $b = $b | (var$9[$p] & 255) << $k;
                                        $k = $k + 8 | 0;
                                        $p = $i;
                                    }
                                    var$10 = $this.$hufts.data[(($this.$tb.data[0] + ($b & cjj_InfBlocks_inflate_mask.data[var$10]) | 0) * 3 | 0) + 1 | 0];
                                    $c = $this.$hufts.data[(($this.$tb.data[0] + ($b & cjj_InfBlocks_inflate_mask.data[var$10]) | 0) * 3 | 0) + 2 | 0];
                                    $i = $rt_compare($c, 16);
                                    if ($i < 0) {
                                        $b = $b >>> var$10;
                                        $k = $k - var$10 | 0;
                                        var$9 = $this.$blens.data;
                                        var$10 = $this.$index1;
                                        $this.$index1 = var$10 + 1 | 0;
                                        var$9[var$10] = $c;
                                    } else {
                                        $j = $rt_compare($c, 18);
                                        $i_0 = !$j ? 7 : $c - 14 | 0;
                                        $j = $j ? 3 : 11;
                                        while ($k < (var$10 + $i_0 | 0)) {
                                            if (!$n) {
                                                $this.$bitb = $b;
                                                $this.$bitk = $k;
                                                $this.$z1.$avail_in = $n;
                                                var$8 = $this.$z1;
                                                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                                $this.$z1.$next_in_index = $p;
                                                $this.$write5 = $q;
                                                return cjj_InfBlocks_inflate_flush($this, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$9 = $this.$z1.$next_in.data;
                                            $c = $p + 1 | 0;
                                            $b = $b | (var$9[$p] & 255) << $k;
                                            $k = $k + 8 | 0;
                                            $p = $c;
                                        }
                                        $c = $b >>> var$10;
                                        var$10 = $k - var$10 | 0;
                                        $j = $j + ($c & cjj_InfBlocks_inflate_mask.data[$i_0]) | 0;
                                        $b = $c >>> $i_0;
                                        $k = var$10 - $i_0 | 0;
                                        $m = $this.$index1;
                                        $i_0 = $this.$table;
                                        if (($m + $j | 0) > ((258 + ($i_0 & 31) | 0) + ($i_0 >> 5 & 31) | 0))
                                            break c;
                                        if (!$i && $m < 1)
                                            break c;
                                        var$10 = $i ? 0 : $this.$blens.data[$m - 1 | 0];
                                        while (true) {
                                            var$9 = $this.$blens.data;
                                            $i = $m + 1 | 0;
                                            var$9[$m] = var$10;
                                            $j = $j + (-1) | 0;
                                            if (!$j)
                                                break;
                                            $m = $i;
                                        }
                                        $this.$index1 = $i;
                                    }
                                }
                                $this.$tb.data[0] = (-1);
                                $this.$bl.data[0] = 9;
                                $this.$bd.data[0] = 6;
                                var$10 = $this.$table;
                                var$10 = cjj_InfTree_inflate_trees_dynamic($this.$inftree, 257 + (var$10 & 31) | 0, 1 + (var$10 >> 5 & 31) | 0, $this.$blens, $this.$bl, $this.$bd, $this.$tli, $this.$tdi, $this.$hufts, $this.$z1);
                                if (var$10) {
                                    if (var$10 == (-3)) {
                                        $this.$blens = null;
                                        $this.$mode1 = 9;
                                    }
                                    $this.$bitb = $b;
                                    $this.$bitk = $k;
                                    $this.$z1.$avail_in = $n;
                                    var$8 = $this.$z1;
                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                    $this.$z1.$next_in_index = $p;
                                    $this.$write5 = $q;
                                    return cjj_InfBlocks_inflate_flush($this, var$10);
                                }
                                cjj_InfCodes_init($this.$codes, $this.$bl.data[0], $this.$bd.data[0], $this.$hufts, $this.$tli.data[0], $this.$hufts, $this.$tdi.data[0]);
                                $this.$mode1 = 6;
                            }
                            $this.$bitb = $b;
                            $this.$bitk = $k;
                            $this.$z1.$avail_in = $n;
                            var$8 = $this.$z1;
                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                            $this.$z1.$next_in_index = $p;
                            $this.$write5 = $q;
                            $r = cjj_InfCodes_proc($this.$codes, $r);
                            if ($r != 1)
                                break e;
                            $r = 0;
                            cjj_InfCodes_free($this.$codes, $this.$z1);
                            $p = $this.$z1.$next_in_index;
                            $n = $this.$z1.$avail_in;
                            $b = $this.$bitb;
                            $k = $this.$bitk;
                            $q = $this.$write5;
                            $m = $q >= $this.$read3 ? $this.$end1 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                            if ($this.$last) {
                                $this.$mode1 = 7;
                                break b;
                            }
                            $this.$mode1 = 0;
                            continue e;
                        }
                        if (!$n) {
                            $this.$bitb = $b;
                            $this.$bitk = $k;
                            $this.$z1.$avail_in = $n;
                            var$8 = $this.$z1;
                            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                            $this.$z1.$next_in_index = $p;
                            $this.$write5 = $q;
                            return cjj_InfBlocks_inflate_flush($this, $r);
                        }
                        if (!$m) {
                            if ($q == $this.$end1 && $this.$read3) {
                                $q = 0;
                                $m = $q >= $this.$read3 ? $this.$end1 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                            }
                            if (!$m) {
                                $this.$write5 = $q;
                                $r = cjj_InfBlocks_inflate_flush($this, $r);
                                $q = $this.$write5;
                                $m = $q >= $this.$read3 ? $this.$end1 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                                if ($q == $this.$end1 && $this.$read3) {
                                    $q = 0;
                                    $m = $q >= $this.$read3 ? $this.$end1 - $q | 0 : ($this.$read3 - $q | 0) - 1 | 0;
                                }
                                if (!$m) {
                                    $this.$bitb = $b;
                                    $this.$bitk = $k;
                                    $this.$z1.$avail_in = $n;
                                    var$8 = $this.$z1;
                                    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                                    $this.$z1.$next_in_index = $p;
                                    $this.$write5 = $q;
                                    return cjj_InfBlocks_inflate_flush($this, $r);
                                }
                            }
                        }
                        $r = 0;
                        var$10 = $this.$left;
                        if (var$10 > $n)
                            var$10 = $n;
                        if (var$10 > $m)
                            var$10 = $m;
                        jl_System_arraycopy($this.$z1.$next_in, $p, $this.$window, $q, var$10);
                        $p = $p + var$10 | 0;
                        $n = $n - var$10 | 0;
                        $q = $q + var$10 | 0;
                        $m = $m - var$10 | 0;
                        var$10 = $this.$left - var$10 | 0;
                        $this.$left = var$10;
                        if (var$10)
                            continue;
                        $this.$mode1 = !$this.$last ? 0 : 7;
                    }
                    return cjj_InfBlocks_inflate_flush($this, $r);
                }
                $this.$mode1 = 9;
                $this.$z1.$msg = $rt_s(550);
                $this.$bitb = $b;
                $this.$bitk = $k;
                $this.$z1.$avail_in = $n;
                var$8 = $this.$z1;
                var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
                $this.$z1.$next_in_index = $p;
                $this.$write5 = $q;
                return cjj_InfBlocks_inflate_flush($this, (-3));
            }
            $this.$blens = null;
            $this.$mode1 = 9;
            $this.$z1.$msg = $rt_s(551);
            $this.$bitb = $b;
            $this.$bitk = $k;
            $this.$z1.$avail_in = $n;
            var$8 = $this.$z1;
            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
            $this.$z1.$next_in_index = $p;
            $this.$write5 = $q;
            return cjj_InfBlocks_inflate_flush($this, (-3));
        }
        $this.$write5 = $q;
        $r = cjj_InfBlocks_inflate_flush($this, $r);
        $q = $this.$write5;
        if ($this.$read3 != $this.$write5) {
            $this.$bitb = $b;
            $this.$bitk = $k;
            $this.$z1.$avail_in = $n;
            var$8 = $this.$z1;
            var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
            $this.$z1.$next_in_index = $p;
            $this.$write5 = $q;
            return cjj_InfBlocks_inflate_flush($this, $r);
        }
        $this.$mode1 = 8;
    }
    $this.$bitb = $b;
    $this.$bitk = $k;
    $this.$z1.$avail_in = $n;
    var$8 = $this.$z1;
    var$8.$total_in = Long_add(var$8.$total_in, Long_fromInt($p - $this.$z1.$next_in_index | 0));
    $this.$z1.$next_in_index = $p;
    $this.$write5 = $q;
    return cjj_InfBlocks_inflate_flush($this, 1);
}
function cjj_InfBlocks_free($this) {
    cjj_InfBlocks_reset($this);
    $this.$window = null;
    $this.$hufts = null;
}
function cjj_InfBlocks_inflate_flush($this, $r) {
    var $p, $q, $n, var$5, var$6;
    $p = $this.$z1.$next_out_index;
    $q = $this.$read3;
    $n = ($q > $this.$write5 ? $this.$end1 : $this.$write5) - $q | 0;
    if ($n > $this.$z1.$avail_out)
        $n = $this.$z1.$avail_out;
    if ($n && $r == (-5))
        $r = 0;
    var$5 = $this.$z1;
    var$5.$avail_out = var$5.$avail_out - $n | 0;
    var$5 = $this.$z1;
    var$5.$total_out = Long_add(var$5.$total_out, Long_fromInt($n));
    if ($this.$check && $n > 0)
        $this.$z1.$adler.$update($this.$window, $q, $n);
    jl_System_arraycopy($this.$window, $q, $this.$z1.$next_out, $p, $n);
    $p = $p + $n | 0;
    var$6 = $q + $n | 0;
    if (var$6 == $this.$end1) {
        if ($this.$write5 == $this.$end1)
            $this.$write5 = 0;
        $q = $this.$write5 - 0 | 0;
        if ($q > $this.$z1.$avail_out)
            $q = $this.$z1.$avail_out;
        if ($q && $r == (-5))
            $r = 0;
        var$5 = $this.$z1;
        var$5.$avail_out = var$5.$avail_out - $q | 0;
        var$5 = $this.$z1;
        var$5.$total_out = Long_add(var$5.$total_out, Long_fromInt($q));
        if ($this.$check && $q > 0)
            $this.$z1.$adler.$update($this.$window, 0, $q);
        jl_System_arraycopy($this.$window, 0, $this.$z1.$next_out, $p, $q);
        $p = $p + $q | 0;
        var$6 = 0 + $q | 0;
    }
    $this.$z1.$next_out_index = $p;
    $this.$read3 = var$6;
    return $r;
}
function cjj_InfBlocks__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 3;
    var$2[3] = 7;
    var$2[4] = 15;
    var$2[5] = 31;
    var$2[6] = 63;
    var$2[7] = 127;
    var$2[8] = 255;
    var$2[9] = 511;
    var$2[10] = 1023;
    var$2[11] = 2047;
    var$2[12] = 4095;
    var$2[13] = 8191;
    var$2[14] = 16383;
    var$2[15] = 32767;
    var$2[16] = 65535;
    cjj_InfBlocks_inflate_mask = var$1;
    var$1 = $rt_createIntArray(19);
    var$2 = var$1.data;
    var$2[0] = 16;
    var$2[1] = 17;
    var$2[2] = 18;
    var$2[3] = 0;
    var$2[4] = 8;
    var$2[5] = 7;
    var$2[6] = 9;
    var$2[7] = 6;
    var$2[8] = 10;
    var$2[9] = 5;
    var$2[10] = 11;
    var$2[11] = 4;
    var$2[12] = 12;
    var$2[13] = 3;
    var$2[14] = 13;
    var$2[15] = 2;
    var$2[16] = 14;
    var$2[17] = 1;
    var$2[18] = 15;
    cjj_InfBlocks_border = var$1;
}
function jt_DateFormatElement$Numeric() {
    var a = this; jt_DateFormatElement.call(a);
    a.$field0 = 0;
    a.$length4 = 0;
}
function jt_DateFormatElement$Numeric__init_(var_0, var_1) {
    var var_2 = new jt_DateFormatElement$Numeric();
    jt_DateFormatElement$Numeric__init_0(var_2, var_0, var_1);
    return var_2;
}
function jt_DateFormatElement$Numeric__init_0($this, $field, $length) {
    $this.$field0 = $field;
    $this.$length4 = $length;
}
function jt_DateFormatElement$Numeric_equals($this, $o) {
    var $numeric;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $numeric = $o;
        return $this.$field0 == $numeric.$field0 && $this.$length4 == $numeric.$length4 ? 1 : 0;
    }
    return 0;
}
function jt_DateFormatElement$Numeric_hashCode($this) {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_Object, 2);
    var$2 = var$1.data;
    var$2[0] = jl_Integer_valueOf($this.$field0);
    var$2[1] = jl_Integer_valueOf($this.$length4);
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$WeekdayText() {
    var a = this; jt_DateFormatElement.call(a);
    a.$weeks = null;
    a.$shortWeeks = null;
    a.$abbreviated = 0;
}
function jt_DateFormatElement$WeekdayText__init_(var_0, var_1) {
    var var_2 = new jt_DateFormatElement$WeekdayText();
    jt_DateFormatElement$WeekdayText__init_0(var_2, var_0, var_1);
    return var_2;
}
function jt_DateFormatElement$WeekdayText__init_0($this, $symbols, $abbreviated) {
    $this.$weeks = jt_DateFormatSymbols_getWeekdays($symbols);
    $this.$shortWeeks = jt_DateFormatSymbols_getShortWeekdays($symbols);
    $this.$abbreviated = $abbreviated;
}
function jt_DateFormatElement$WeekdayText_equals($this, $o) {
    var $that;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $that = $o;
        return $this.$abbreviated == $that.$abbreviated && ju_Arrays_equals($this.$weeks, $that.$weeks) && ju_Arrays_equals($this.$shortWeeks, $that.$shortWeeks) ? 1 : 0;
    }
    return 0;
}
function jt_DateFormatElement$WeekdayText_hashCode($this) {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_Object, 3);
    var$2 = var$1.data;
    var$2[0] = $this.$weeks;
    var$2[1] = $this.$shortWeeks;
    var$2[2] = jl_Boolean_valueOf($this.$abbreviated);
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$EraText() {
    jt_DateFormatElement.call(this);
    this.$eras0 = null;
}
function jt_DateFormatElement$EraText_equals($this, $o) {
    var $eraText;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $eraText = $o;
        return ju_Arrays_equals($this.$eras0, $eraText.$eras0);
    }
    return 0;
}
function jt_DateFormatElement$EraText_hashCode($this) {
    return ju_Arrays_hashCode($this.$eras0);
}
function jt_DateFormatElement$BaseTimezone() {
    var a = this; jt_DateFormatElement.call(a);
    a.$locale2 = null;
    a.$searchTrie = null;
}
function jt_DateFormatElement$BaseTimezone__init_0(var_0) {
    var var_1 = new jt_DateFormatElement$BaseTimezone();
    jt_DateFormatElement$BaseTimezone__init_(var_1, var_0);
    return var_1;
}
function jt_DateFormatElement$BaseTimezone__init_($this, $locale) {
    $this.$locale2 = $locale;
}
function jt_DateFormatElement$BaseTimezone_equals($this, $o) {
    var $that;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $that = $o;
        return ju_Objects_equals($this.$locale2, $that.$locale2) && ju_Objects_equals($this.$searchTrie, $that.$searchTrie) ? 1 : 0;
    }
    return 0;
}
function jt_DateFormatElement$BaseTimezone_hashCode($this) {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_Object, 2);
    var$2 = var$1.data;
    var$2[0] = $this.$locale2;
    var$2[1] = $this.$searchTrie;
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$Rfc822Timezone() {
    jt_DateFormatElement$BaseTimezone.call(this);
}
function jt_DateFormatElement$AmPmText() {
    jt_DateFormatElement.call(this);
    this.$ampms0 = null;
}
function jt_DateFormatElement$AmPmText_equals($this, $o) {
    var $amPmText;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $amPmText = $o;
        return ju_Arrays_equals($this.$ampms0, $amPmText.$ampms0);
    }
    return 0;
}
function jt_DateFormatElement$AmPmText_hashCode($this) {
    return ju_Arrays_hashCode($this.$ampms0);
}
function jt_DateFormatElement$NumericHour() {
    jt_DateFormatElement$Numeric.call(this);
    this.$limit1 = 0;
}
function jt_DateFormatElement$NumericHour__init_(var_0, var_1, var_2) {
    var var_3 = new jt_DateFormatElement$NumericHour();
    jt_DateFormatElement$NumericHour__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jt_DateFormatElement$NumericHour__init_0($this, $field, $length, $limit) {
    jt_DateFormatElement$Numeric__init_0($this, $field, $length);
    $this.$limit1 = $limit;
}
function jt_DateFormatElement$NumericHour_equals($this, $o) {
    var $that;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        if (!jt_DateFormatElement$Numeric_equals($this, $o))
            return 0;
        $that = $o;
        return $this.$limit1 != $that.$limit1 ? 0 : 1;
    }
    return 0;
}
function jt_DateFormatElement$NumericHour_hashCode($this) {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_Object, 2);
    var$2 = var$1.data;
    var$2[0] = jl_Integer_valueOf(jt_DateFormatElement$Numeric_hashCode($this));
    var$2[1] = jl_Integer_valueOf($this.$limit1);
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$NumericWeekday() {
    jt_DateFormatElement$Numeric.call(this);
}
function jt_DateFormatElement$GeneralTimezone() {
    jt_DateFormatElement$BaseTimezone.call(this);
}
function jt_DateFormatElement$ConstantText() {
    jt_DateFormatElement.call(this);
    this.$textConstant = null;
}
function jt_DateFormatElement$ConstantText__init_(var_0) {
    var var_1 = new jt_DateFormatElement$ConstantText();
    jt_DateFormatElement$ConstantText__init_0(var_1, var_0);
    return var_1;
}
function jt_DateFormatElement$ConstantText__init_0($this, $textConstant) {
    $this.$textConstant = $textConstant;
}
function jt_DateFormatElement$ConstantText_equals($this, $o) {
    var $that;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $that = $o;
        return ju_Objects_equals($this.$textConstant, $that.$textConstant);
    }
    return 0;
}
function jt_DateFormatElement$ConstantText_hashCode($this) {
    var var$1;
    var$1 = $rt_createArray(jl_Object, 1);
    var$1.data[0] = $this.$textConstant;
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$Year() {
    jt_DateFormatElement.call(this);
    this.$field = 0;
}
function jt_DateFormatElement$Year_equals($this, $o) {
    var $year;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $year = $o;
        return $this.$field != $year.$field ? 0 : 1;
    }
    return 0;
}
function jt_DateFormatElement$Year_hashCode($this) {
    var var$1;
    var$1 = $rt_createArray(jl_Object, 1);
    var$1.data[0] = jl_Integer_valueOf($this.$field);
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$Iso8601Timezone() {
    jt_DateFormatElement.call(this);
    this.$size4 = 0;
}
function jt_DateFormatElement$Iso8601Timezone_equals($this, $o) {
    var $that;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $that = $o;
        return $this.$size4 != $that.$size4 ? 0 : 1;
    }
    return 0;
}
function jt_DateFormatElement$Iso8601Timezone_hashCode($this) {
    var var$1;
    var$1 = $rt_createArray(jl_Object, 1);
    var$1.data[0] = jl_Integer_valueOf($this.$size4);
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$MonthText() {
    var a = this; jt_DateFormatElement.call(a);
    a.$months0 = null;
    a.$shortMonths0 = null;
    a.$abbreviated0 = 0;
}
function jt_DateFormatElement$MonthText__init_(var_0, var_1) {
    var var_2 = new jt_DateFormatElement$MonthText();
    jt_DateFormatElement$MonthText__init_0(var_2, var_0, var_1);
    return var_2;
}
function jt_DateFormatElement$MonthText__init_0($this, $symbols, $abbreviated) {
    $this.$months0 = jt_DateFormatSymbols_getMonths($symbols);
    $this.$shortMonths0 = jt_DateFormatSymbols_getShortMonths($symbols);
    $this.$abbreviated0 = $abbreviated;
}
function jt_DateFormatElement$MonthText_equals($this, $o) {
    var $monthText;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $monthText = $o;
        return $this.$abbreviated0 == $monthText.$abbreviated0 && ju_Arrays_equals($this.$months0, $monthText.$months0) && ju_Arrays_equals($this.$shortMonths0, $monthText.$shortMonths0) ? 1 : 0;
    }
    return 0;
}
function jt_DateFormatElement$MonthText_hashCode($this) {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_Object, 3);
    var$2 = var$1.data;
    var$2[0] = $this.$months0;
    var$2[1] = $this.$shortMonths0;
    var$2[2] = jl_Boolean_valueOf($this.$abbreviated0);
    return ju_Arrays_hashCode(var$1);
}
function jt_DateFormatElement$NumericMonth() {
    jt_DateFormatElement$Numeric.call(this);
}
function jt_DateFormatElement$NumericMonth__init_(var_0) {
    var var_1 = new jt_DateFormatElement$NumericMonth();
    jt_DateFormatElement$NumericMonth__init_0(var_1, var_0);
    return var_1;
}
function jt_DateFormatElement$NumericMonth__init_0($this, $length) {
    jt_DateFormatElement$Numeric__init_0($this, 2, $length);
}
function jnci_BufferedEncoder() {
    jnc_CharsetEncoder.call(this);
}
function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
    var $inArray, var$4, $inPos, $inSize, $outArray, var$8, $i, $outSize, var$11, $controller;
    $inArray = $rt_createCharArray(jl_Math_min(jn_Buffer_remaining($in), 512));
    var$4 = $inArray.data;
    $inPos = 0;
    $inSize = 0;
    $outArray = $rt_createByteArray(jl_Math_min(jn_Buffer_remaining($out), 512));
    var$8 = $outArray.data;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$4[$i - $inPos | 0] = var$4[$i];
                    $i = $i + 1 | 0;
                }
                $outSize = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + $outSize | 0, var$4.length);
                jn_CharBuffer_get0($in, $inArray, $outSize, $inSize - $outSize | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                var$11 = !jn_Buffer_hasRemaining($in) && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = new jnci_BufferedEncoder$Controller;
            $controller.$in0 = $in;
            $controller.$out3 = $out;
            var$11 = jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition;
            if (var$11 === null && 0 == $controller.$outPosition)
                var$11 = jnc_CoderResult_UNDERFLOW;
            jn_ByteBuffer_put($out, $outArray, 0, $controller.$outPosition);
            if (var$11 !== null)
                break;
        }
    }
    jn_Buffer_position0($in, $in.$position - ($inSize - $inPos | 0) | 0);
    return var$11;
}
function jnci_UTF8Encoder() {
    jnci_BufferedEncoder.call(this);
}
function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, $low, var$10, $ch, var$12, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                $low = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            $low = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    $low = $low + (-1) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 2))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    $low = $low + (-1) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 3))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                $inPos = $codePoint + 1 | 0;
                var$10[$codePoint] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if ($low >= $inSize) {
                    if (jnci_BufferedEncoder$Controller_hasMoreInput($controller))
                        break a;
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = $low + 1 | 0;
                $low = var$10[$low];
                if (!jl_Character_isLowSurrogate($low)) {
                    $low = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $low = $inPos + (-2) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 4))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                $low = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                $outPos = $low + 1 | 0;
                var$10[$low] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = $low + 1 | 0;
                var$10[$low] = (128 | $codePoint & 63) << 24 >> 24;
                $low = $inPos;
            }
            $inPos = $low;
            $outPos = var$12;
        }
        $low = $inPos;
    }
    $controller.$inPosition = $low;
    $controller.$outPosition = $outPos;
    return $result;
}
function ju_ConcurrentModificationException() {
    jl_RuntimeException.call(this);
}
function ju_ConcurrentModificationException__init_0() {
    var var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_(var_0);
    return var_0;
}
function ju_ConcurrentModificationException__init_($this) {
    jl_Throwable__init_0($this);
}
function nPg_FixedFunctionShader() {
    var a = this; jl_Object.call(a);
    a.$enable_color = 0;
    a.$enable_normal = 0;
    a.$enable_texture0 = 0;
    a.$enable_lighting = 0;
    a.$enable_fog = 0;
    a.$enable_alphatest = 0;
    a.$enable_unit0 = 0;
    a.$globject = null;
    a.$u_matrix_m = null;
    a.$u_matrix_p = null;
    a.$u_matrix_t = null;
    a.$u_fogColor = null;
    a.$u_fogMode = null;
    a.$u_fogStart = null;
    a.$u_fogEnd = null;
    a.$u_fogDensity = null;
    a.$u_fogPremultiply = null;
    a.$u_colorUniform = null;
    a.$u_normalUniform = null;
    a.$u_alphaTestF = null;
    a.$u_texCoordV0 = null;
    a.$u_light0Pos = null;
    a.$u_light1Pos = null;
    a.$a_position = 0;
    a.$a_texture0 = 0;
    a.$a_color = 0;
    a.$a_normal = 0;
    a.$attributeIndexesToEnable = 0;
    a.$genericArray = null;
    a.$genericBuffer = null;
    a.$bufferIsInitialized = 0;
    a.$modelBuffer = null;
    a.$projectionBuffer = null;
    a.$textureBuffer = null;
    a.$modelMatrix = null;
    a.$projectionMatrix = null;
    a.$textureMatrix = null;
    a.$light0Pos = null;
    a.$light1Pos = null;
    a.$fogMode = 0;
    a.$fogColorR = 0.0;
    a.$fogColorG = 0.0;
    a.$fogColorB = 0.0;
    a.$fogColorA = 0.0;
    a.$fogStart = 0.0;
    a.$fogEnd = 0.0;
    a.$fogDensity = 0.0;
    a.$alphaTestValue = 0.0;
    a.$tex0x = 0.0;
    a.$tex0y = 0.0;
    a.$colorUniformR = 0.0;
    a.$colorUniformG = 0.0;
    a.$colorUniformB = 0.0;
    a.$colorUniformA = 0.0;
    a.$normalUniformX = 0.0;
    a.$normalUniformY = 0.0;
    a.$normalUniformZ = 0.0;
}
var nPg_FixedFunctionShader_instances = null;
var nPg_FixedFunctionShader_shaderSource = null;
function nPg_FixedFunctionShader__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new nPg_FixedFunctionShader();
    nPg_FixedFunctionShader__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function nPg_FixedFunctionShader_instance($i) {
    var $s, $CC_a_color, $CC_a_normal, $CC_a_texture0, $CC_lighting, $CC_fog, $CC_alphatest, $CC_unit0;
    $s = nPg_FixedFunctionShader_instances.data[$i];
    if ($s === null) {
        $CC_a_color = 0;
        $CC_a_normal = 0;
        $CC_a_texture0 = 0;
        $CC_lighting = 0;
        $CC_fog = 0;
        $CC_alphatest = 0;
        $CC_unit0 = 0;
        if (($i & 1) == 1)
            $CC_a_color = 1;
        if (($i & 2) == 2)
            $CC_a_normal = 1;
        if (($i & 4) == 4)
            $CC_a_texture0 = 1;
        if (($i & 8) == 8)
            $CC_lighting = 1;
        if (($i & 16) == 16)
            $CC_fog = 1;
        if (($i & 32) == 32)
            $CC_alphatest = 1;
        if (($i & 64) == 64)
            $CC_unit0 = 1;
        $s = nPg_FixedFunctionShader__init_($i, $CC_a_color, $CC_a_normal, $CC_a_texture0, $CC_lighting, $CC_fog, $CC_alphatest, $CC_unit0);
        nPg_FixedFunctionShader_instances.data[$i] = $s;
    }
    return $s;
}
function nPg_FixedFunctionShader__init_0($this, $j, $CC_a_color, $CC_a_normal, $CC_a_texture0, $CC_lighting, $CC_fog, $CC_alphatest, $CC_unit0) {
    var $source, $v, $f;
    jl_Object__init_0($this);
    $this.$u_matrix_m = null;
    $this.$u_matrix_p = null;
    $this.$u_matrix_t = null;
    $this.$u_fogColor = null;
    $this.$u_fogMode = null;
    $this.$u_fogStart = null;
    $this.$u_fogEnd = null;
    $this.$u_fogDensity = null;
    $this.$u_fogPremultiply = null;
    $this.$u_colorUniform = null;
    $this.$u_normalUniform = null;
    $this.$u_alphaTestF = null;
    $this.$u_texCoordV0 = null;
    $this.$u_light0Pos = null;
    $this.$u_light1Pos = null;
    $this.$bufferIsInitialized = 0;
    $this.$modelBuffer = $rt_createFloatArray(16);
    $this.$projectionBuffer = $rt_createFloatArray(16);
    $this.$textureBuffer = $rt_createFloatArray(16);
    $this.$modelMatrix = nPgv_Matrix4f_setZero(nPgv_Matrix4f__init_0());
    $this.$projectionMatrix = nPgv_Matrix4f_setZero(nPgv_Matrix4f__init_0());
    $this.$textureMatrix = nPgv_Matrix4f_setZero(nPgv_Matrix4f__init_0());
    $this.$light0Pos = nPgv_Vector4f__init_0();
    $this.$light1Pos = nPgv_Vector4f__init_0();
    $this.$fogMode = 0;
    $this.$fogColorR = 0.0;
    $this.$fogColorG = 0.0;
    $this.$fogColorB = 0.0;
    $this.$fogColorA = 0.0;
    $this.$fogStart = 0.0;
    $this.$fogEnd = 0.0;
    $this.$fogDensity = 0.0;
    $this.$alphaTestValue = 0.0;
    $this.$tex0x = 0.0;
    $this.$tex0y = 0.0;
    $this.$colorUniformR = 0.0;
    $this.$colorUniformG = 0.0;
    $this.$colorUniformB = 0.0;
    $this.$colorUniformA = 0.0;
    $this.$normalUniformX = 0.0;
    $this.$normalUniformY = 0.0;
    $this.$normalUniformZ = 0.0;
    $this.$enable_color = $CC_a_color;
    $this.$enable_normal = $CC_a_normal;
    $this.$enable_texture0 = $CC_a_texture0;
    $this.$enable_lighting = $CC_lighting;
    $this.$enable_fog = $CC_fog;
    $this.$enable_alphatest = $CC_alphatest;
    $this.$enable_unit0 = $CC_unit0;
    if (nPg_FixedFunctionShader_shaderSource === null)
        nPg_FixedFunctionShader_shaderSource = nlea_EaglerAdapterImpl2_fileContents($rt_s(552));
    $source = $rt_s(17);
    if ($this.$enable_color)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(553)));
    if ($this.$enable_normal)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(554)));
    if ($this.$enable_texture0)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(555)));
    if ($this.$enable_lighting)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(556)));
    if ($this.$enable_fog)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(557)));
    if ($this.$enable_alphatest)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(558)));
    if ($this.$enable_unit0)
        $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), $rt_s(559)));
    $source = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $source), nPg_FixedFunctionShader_shaderSource));
    $v = nlea_EaglerAdapterImpl2__wglCreateShader(35633);
    nlea_EaglerAdapterImpl2__wglShaderSource($v, jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), nlea_EaglerAdapterImpl2__wgetShaderHeader()), $rt_s(560)), $source)));
    nlea_EaglerAdapterImpl2__wglCompileShader($v);
    if (!nlea_EaglerAdapterImpl2__wglGetShaderCompiled($v)) {
        ji_PrintStream_println(jl_System_err(), jl_String_replace0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(561)), nlea_EaglerAdapterImpl2__wglGetShaderInfoLog($v))), $rt_s(170), $rt_s(562)));
        $rt_throw(jl_RuntimeException__init_($rt_s(563)));
    }
    $f = nlea_EaglerAdapterImpl2__wglCreateShader(35632);
    nlea_EaglerAdapterImpl2__wglShaderSource($f, jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), nlea_EaglerAdapterImpl2__wgetShaderHeader()), $rt_s(564)), $source)));
    nlea_EaglerAdapterImpl2__wglCompileShader($f);
    if (!nlea_EaglerAdapterImpl2__wglGetShaderCompiled($f)) {
        ji_PrintStream_println(jl_System_err(), jl_String_replace0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(561)), nlea_EaglerAdapterImpl2__wglGetShaderInfoLog($f))), $rt_s(170), $rt_s(565)));
        $rt_throw(jl_RuntimeException__init_($rt_s(563)));
    }
    $this.$globject = nlea_EaglerAdapterImpl2__wglCreateProgram();
    nlea_EaglerAdapterImpl2__wglAttachShader($this.$globject, $v);
    nlea_EaglerAdapterImpl2__wglAttachShader($this.$globject, $f);
    $j = 1;
    $this.$a_position = 0;
    nlea_EaglerAdapterImpl2__wglBindAttributeLocation($this.$globject, $this.$a_position, $rt_s(566));
    if (!$this.$enable_texture0)
        $this.$a_texture0 = (-1);
    else {
        $this.$a_texture0 = $j;
        nlea_EaglerAdapterImpl2__wglBindAttributeLocation($this.$globject, $this.$a_texture0, $rt_s(567));
        $j = 2;
    }
    if (!$this.$enable_color)
        $this.$a_color = (-1);
    else {
        $CC_a_color = $j + 1 | 0;
        $this.$a_color = $j;
        nlea_EaglerAdapterImpl2__wglBindAttributeLocation($this.$globject, $this.$a_color, $rt_s(568));
        $j = $CC_a_color;
    }
    if (!$this.$enable_normal)
        $this.$a_normal = (-1);
    else {
        $CC_a_color = $j + 1 | 0;
        $this.$a_normal = $j;
        nlea_EaglerAdapterImpl2__wglBindAttributeLocation($this.$globject, $this.$a_normal, $rt_s(569));
        $j = $CC_a_color;
    }
    $this.$attributeIndexesToEnable = $j;
    nlea_EaglerAdapterImpl2__wglLinkProgram($this.$globject);
    nlea_EaglerAdapterImpl2__wglDetachShader($this.$globject, $v);
    nlea_EaglerAdapterImpl2__wglDetachShader($this.$globject, $f);
    nlea_EaglerAdapterImpl2__wglDeleteShader($v);
    nlea_EaglerAdapterImpl2__wglDeleteShader($f);
    if (!nlea_EaglerAdapterImpl2__wglGetProgramLinked($this.$globject)) {
        ji_PrintStream_println(jl_System_err(), jl_String_replace0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(561)), nlea_EaglerAdapterImpl2__wglGetProgramInfoLog($this.$globject))), $rt_s(170), $rt_s(570)));
        $rt_throw(jl_RuntimeException__init_($rt_s(563)));
    }
    nlea_EaglerAdapterImpl2__wglUseProgram($this.$globject);
    $this.$u_matrix_m = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(571));
    $this.$u_matrix_p = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(572));
    $this.$u_matrix_t = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(573));
    $this.$u_colorUniform = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(574));
    if ($this.$enable_lighting) {
        $this.$u_normalUniform = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(575));
        $this.$u_light0Pos = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(576));
        $this.$u_light1Pos = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(577));
    }
    if ($this.$enable_fog) {
        $this.$u_fogColor = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(578));
        $this.$u_fogMode = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(579));
        $this.$u_fogStart = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(580));
        $this.$u_fogEnd = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(581));
        $this.$u_fogDensity = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(582));
        $this.$u_fogPremultiply = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(583));
    }
    if ($this.$enable_alphatest)
        $this.$u_alphaTestF = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(584));
    nlea_EaglerAdapterImpl2__wglUniform1i(nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(585)), 0);
    $this.$u_texCoordV0 = nlea_EaglerAdapterImpl2__wglGetUniformLocation($this.$globject, $rt_s(586));
    $this.$genericArray = nlea_EaglerAdapterImpl2__wglCreateVertexArray();
    $this.$genericBuffer = nlea_EaglerAdapterImpl2__wglCreateBuffer();
    nlea_EaglerAdapterImpl2__wglBindVertexArray($this.$genericArray);
    nlea_EaglerAdapterImpl2__wglBindBuffer(34962, $this.$genericBuffer);
    nPg_FixedFunctionShader_setupArrayForProgram($this);
}
function nPg_FixedFunctionShader_setupArrayForProgram($this) {
    nlea_EaglerAdapterImpl2__wglEnableVertexAttribArray($this.$a_position);
    nlea_EaglerAdapterImpl2__wglVertexAttribPointer($this.$a_position, 3, 5126, 0, 28, 0);
    if ($this.$enable_texture0) {
        nlea_EaglerAdapterImpl2__wglEnableVertexAttribArray($this.$a_texture0);
        nlea_EaglerAdapterImpl2__wglVertexAttribPointer($this.$a_texture0, 2, 5126, 0, 28, 12);
    }
    if ($this.$enable_color) {
        nlea_EaglerAdapterImpl2__wglEnableVertexAttribArray($this.$a_color);
        nlea_EaglerAdapterImpl2__wglVertexAttribPointer($this.$a_color, 4, 5121, 1, 28, 20);
    }
    if ($this.$enable_normal) {
        nlea_EaglerAdapterImpl2__wglEnableVertexAttribArray($this.$a_normal);
        nlea_EaglerAdapterImpl2__wglVertexAttribPointer($this.$a_normal, 4, 5121, 1, 28, 24);
    }
}
function nPg_FixedFunctionShader_useProgram($this) {
    nlea_EaglerAdapterImpl2__wglUseProgram($this.$globject);
}
function nPg_FixedFunctionShader_unuseProgram($this) {
    return;
}
function nPg_FixedFunctionShader_setModelMatrix($this, $mat) {
    if (!nPgv_Matrix4f_equals($mat, $this.$modelMatrix)) {
        nPgv_Matrix4f_store0(nPgv_Matrix4f_load($this.$modelMatrix, $mat), $this.$modelBuffer);
        nlea_EaglerAdapterImpl2__wglUniformMat4fv($this.$u_matrix_m, $this.$modelBuffer);
    }
}
function nPg_FixedFunctionShader_setProjectionMatrix($this, $mat) {
    if (!nPgv_Matrix4f_equals($mat, $this.$projectionMatrix)) {
        nPgv_Matrix4f_store0(nPgv_Matrix4f_load($this.$projectionMatrix, $mat), $this.$projectionBuffer);
        nlea_EaglerAdapterImpl2__wglUniformMat4fv($this.$u_matrix_p, $this.$projectionBuffer);
    }
}
function nPg_FixedFunctionShader_setTextureMatrix($this, $mat) {
    if (!nPgv_Matrix4f_equals($mat, $this.$textureMatrix)) {
        nPgv_Matrix4f_store0(nPgv_Matrix4f_load($this.$textureMatrix, $mat), $this.$textureBuffer);
        nlea_EaglerAdapterImpl2__wglUniformMat4fv($this.$u_matrix_t, $this.$textureBuffer);
    }
}
function nPg_FixedFunctionShader_setLightPositions($this, $pos0, $pos1) {
    if (!(nPgv_Vector4f_equals($pos0, $this.$light0Pos) && nPgv_Vector4f_equals($pos1, $this.$light1Pos))) {
        nPgv_Vector4f_set($this.$light0Pos, $pos0);
        nPgv_Vector4f_set($this.$light1Pos, $pos1);
        nlea_EaglerAdapterImpl2__wglUniform3f($this.$u_light0Pos, $this.$light0Pos.$x1, $this.$light0Pos.$y1, $this.$light0Pos.$z4);
        nlea_EaglerAdapterImpl2__wglUniform3f($this.$u_light1Pos, $this.$light1Pos.$x1, $this.$light1Pos.$y1, $this.$light1Pos.$z4);
    }
}
function nPg_FixedFunctionShader_setFogMode($this, $mode) {
    if ($this.$fogMode != $mode) {
        $this.$fogMode = $mode;
        nlea_EaglerAdapterImpl2__wglUniform1i($this.$u_fogMode, $mode % 2 | 0);
        nlea_EaglerAdapterImpl2__wglUniform1f($this.$u_fogPremultiply, $mode / 2 | 0);
    }
}
function nPg_FixedFunctionShader_setFogColor($this, $r, $g, $b, $a) {
    if (!($this.$fogColorR === $r && $this.$fogColorG === $g && $this.$fogColorB === $b && $this.$fogColorA === $a)) {
        $this.$fogColorR = $r;
        $this.$fogColorG = $g;
        $this.$fogColorB = $b;
        $this.$fogColorA = $a;
        nlea_EaglerAdapterImpl2__wglUniform4f($this.$u_fogColor, $this.$fogColorR, $this.$fogColorG, $this.$fogColorB, $this.$fogColorA);
    }
}
function nPg_FixedFunctionShader_setFogStartEnd($this, $s, $e) {
    if (!($this.$fogStart === $s && $this.$fogEnd === $e)) {
        $this.$fogStart = $s;
        $this.$fogEnd = $e;
        nlea_EaglerAdapterImpl2__wglUniform1f($this.$u_fogStart, $this.$fogStart);
        nlea_EaglerAdapterImpl2__wglUniform1f($this.$u_fogEnd, $this.$fogEnd);
    }
}
function nPg_FixedFunctionShader_setFogDensity($this, $d) {
    if ($this.$fogDensity !== $d) {
        $this.$fogDensity = $d;
        nlea_EaglerAdapterImpl2__wglUniform1f($this.$u_fogDensity, $this.$fogDensity);
    }
}
function nPg_FixedFunctionShader_setAlphaTest($this, $limit) {
    if ($this.$alphaTestValue !== $limit) {
        $this.$alphaTestValue = $limit;
        nlea_EaglerAdapterImpl2__wglUniform1f($this.$u_alphaTestF, $this.$alphaTestValue);
    }
}
function nPg_FixedFunctionShader_setTex0Coords($this, $x, $y) {
    var var$3, var$4;
    if (!($this.$tex0x === $x && $this.$tex0y === $y)) {
        $this.$tex0x = $x;
        $this.$tex0y = $y;
        var$3 = $this.$u_texCoordV0;
        $x = $this.$tex0x;
        $y = $this.$tex0y;
        nlea_EaglerAdapterImpl2_$callClinit();
        if (var$3 !== null) {
            var$4 = nlea_EaglerAdapterImpl2_webgl;
            var$3 = var$3.$obj2;
            var$4.uniform2f(var$3, $x, $y);
        }
    }
}
function nPg_FixedFunctionShader_setColor($this, $r, $g, $b, $a) {
    if (!($this.$colorUniformR === $r && $this.$colorUniformG === $g && $this.$colorUniformB === $b && $this.$colorUniformA === $a)) {
        $this.$colorUniformR = $r;
        $this.$colorUniformG = $g;
        $this.$colorUniformB = $b;
        $this.$colorUniformA = $a;
        nlea_EaglerAdapterImpl2__wglUniform4f($this.$u_colorUniform, $this.$colorUniformR, $this.$colorUniformG, $this.$colorUniformB, $this.$colorUniformA);
    }
}
function nPg_FixedFunctionShader_setNormal($this, $x, $y, $z) {
    if (!($this.$normalUniformX === $x && $this.$normalUniformY === $y && $this.$normalUniformZ === $z)) {
        $this.$normalUniformX = $x;
        $this.$normalUniformY = $y;
        $this.$normalUniformZ = $z;
        nlea_EaglerAdapterImpl2__wglUniform3f($this.$u_normalUniform, $this.$normalUniformX, $this.$normalUniformY, $this.$normalUniformZ);
    }
}
function nPg_FixedFunctionShader__clinit_() {
    nPg_FixedFunctionShader_instances = $rt_createArray(nPg_FixedFunctionShader, 128);
    nPg_FixedFunctionShader_shaderSource = null;
}
function olo_EaglerAdapterGL30$DisplayList() {
    var a = this; jl_Object.call(a);
    a.$id = 0;
    a.$glarray = null;
    a.$glbuffer = null;
    a.$shaderMode = 0;
    a.$listLength = 0;
}
function nle_EaglerImage() {
    var a = this; jl_Object.call(a);
    a.$data = null;
    a.$w1 = 0;
    a.$h1 = 0;
    a.$alpha = 0;
}
function nms_RenderList() {
    var a = this; jl_Object.call(a);
    a.$field_1242_a = 0;
    a.$field_1241_b = 0;
    a.$field_1240_c = 0;
    a.$field_1239_d = 0.0;
    a.$field_1238_e = 0.0;
    a.$field_1237_f = 0.0;
    a.$field_1236_g = null;
    a.$field_1235_h = 0;
    a.$field_1234_i = 0;
}
function nms_RenderList__init_0() {
    var var_0 = new nms_RenderList();
    nms_RenderList__init_(var_0);
    return var_0;
}
function nms_RenderList__init_($this) {
    $this.$field_1236_g = nms_GLAllocation_createDirectIntBuffer(65536);
    $this.$field_1235_h = 0;
    $this.$field_1234_i = 0;
}
function nms_RenderList_func_861_a($this, $var1, $var2, $var3, $var4, $var6, $var8) {
    $this.$field_1235_h = 1;
    jn_IntBuffer_clear($this.$field_1236_g);
    $this.$field_1242_a = $var1;
    $this.$field_1241_b = $var2;
    $this.$field_1240_c = $var3;
    $this.$field_1239_d = $var4;
    $this.$field_1238_e = $var6;
    $this.$field_1237_f = $var8;
}
function nms_RenderList_func_862_a($this, $var1, $var2, $var3) {
    return !$this.$field_1235_h ? 0 : $var1 == $this.$field_1242_a && $var2 == $this.$field_1241_b && $var3 == $this.$field_1240_c ? 1 : 0;
}
function nms_RenderList_func_858_a($this, $var1) {
    jn_IntBufferImpl_put($this.$field_1236_g, $var1);
    if (!jn_Buffer_remaining($this.$field_1236_g))
        nms_RenderList_func_860_a($this);
}
function nms_RenderList_func_860_a($this) {
    var var$1;
    if ($this.$field_1235_h) {
        if (!$this.$field_1234_i) {
            jn_IntBuffer_flip($this.$field_1236_g);
            $this.$field_1234_i = 1;
        }
        if (jn_Buffer_remaining($this.$field_1236_g) > 0) {
            olo_EaglerAdapterGL30_glPushMatrix();
            olo_EaglerAdapterGL30_glTranslatef($this.$field_1242_a - $this.$field_1239_d, $this.$field_1241_b - $this.$field_1238_e, $this.$field_1240_c - $this.$field_1237_f);
            var$1 = $this.$field_1236_g;
            while (jn_Buffer_hasRemaining(var$1)) {
                olo_EaglerAdapterGL30_glCallList(jn_IntBufferImpl_get(var$1));
            }
            olo_EaglerAdapterGL30_glPopMatrix();
        }
    }
}
function nms_RenderList_func_859_b($this) {
    $this.$field_1235_h = 0;
    $this.$field_1234_i = 0;
}
function ji_Reader() {
    jl_Object.call(this);
    this.$lock0 = null;
}
function ji_Reader__init_() {
    var var_0 = new ji_Reader();
    ji_Reader__init_0(var_0);
    return var_0;
}
function ji_Reader__init_0($this) {
    $this.$lock0 = new jl_Object;
}
function ji_BufferedReader() {
    var a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer3 = null;
    a.$index2 = 0;
    a.$count2 = 0;
    a.$eof1 = 0;
    a.$mark1 = 0;
}
function ji_BufferedReader__init_(var_0) {
    var var_1 = new ji_BufferedReader();
    ji_BufferedReader__init_0(var_1, var_0);
    return var_1;
}
function ji_BufferedReader__init_0($this, $innerReader) {
    ji_Reader__init_0($this);
    $this.$mark1 = (-1);
    $this.$innerReader = $innerReader;
    $this.$buffer3 = $rt_createCharArray(jl_Math_max(64, 1024));
}
function ji_BufferedReader_close($this) {
    ji_BufferedReader_requireOpened($this);
    $this.$innerReader = null;
}
function ji_BufferedReader_readLine($this) {
    var $line, var$2, var$3, $ch;
    ji_BufferedReader_requireOpened($this);
    if ($this.$eof1 && $this.$index2 >= $this.$count2)
        return null;
    $line = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($line);
    a: {
        while (true) {
            if ($this.$index2 >= $this.$count2 && !ji_BufferedReader_fillBuffer($this, 0))
                break a;
            var$2 = $this.$buffer3.data;
            var$3 = $this.$index2;
            $this.$index2 = var$3 + 1 | 0;
            $ch = var$2[var$3];
            if ($ch == 10)
                break;
            if ($ch == 13) {
                if ($this.$index2 >= $this.$count2 && !ji_BufferedReader_fillBuffer($this, 0))
                    break a;
                if ($this.$buffer3.data[$this.$index2] != 10)
                    break a;
                $this.$index2 = $this.$index2 + 1 | 0;
                break a;
            }
            jl_AbstractStringBuilder_append($line, $ch);
        }
    }
    return jl_AbstractStringBuilder_toString($line);
}
function ji_BufferedReader_fillBuffer($this, $offset) {
    var $charsRead;
    if ($this.$eof1)
        return 0;
    a: {
        while (true) {
            if ($offset >= $this.$buffer3.data.length)
                break a;
            $charsRead = ji_InputStreamReader_read($this.$innerReader, $this.$buffer3, $offset, $this.$buffer3.data.length - $offset | 0);
            if ($charsRead == (-1)) {
                $this.$eof1 = 1;
                break a;
            }
            if (!$charsRead)
                break;
            $offset = $offset + $charsRead | 0;
        }
    }
    $this.$count2 = $offset;
    $this.$index2 = 0;
    $this.$mark1 = (-1);
    return 1;
}
function ji_BufferedReader_requireOpened($this) {
    var var$1;
    if ($this.$innerReader !== null)
        return;
    var$1 = new ji_IOException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function ji_InputStreamReader() {
    var a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof2 = 0;
}
function ji_InputStreamReader__init_(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_1(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_2(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_3(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_0(var_0) {
    var var_1 = new ji_InputStreamReader();
    ji_InputStreamReader__init_4(var_1, var_0);
    return var_1;
}
function ji_InputStreamReader__init_1($this, $in, $charsetName) {
    var var$3, $$je;
    a: {
        try {
            var$3 = jnc_Charset_forName(jl_String_toString($charsetName));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_UnsupportedCharsetException) {
                break a;
            } else {
                throw $$e;
            }
        }
        ji_InputStreamReader__init_3($this, $in, var$3);
        return;
    }
    $in = new ji_UnsupportedEncodingException;
    jl_Throwable__init_($in, $charsetName);
    $rt_throw($in);
}
function ji_InputStreamReader__init_3($this, $in, $charset) {
    $charset = jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput(jnci_UTF8Charset_newDecoder($charset), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE);
    ji_Reader__init_0($this);
    $this.$inData = $rt_createByteArray(8192);
    $this.$inBuffer = jn_ByteBuffer_wrap0($this.$inData);
    $this.$outData = $rt_createCharArray(1024);
    $this.$outBuffer = jn_CharBuffer_wrap($this.$outData);
    $this.$stream = $in;
    $this.$decoder = $charset;
    jn_Buffer_position0($this.$outBuffer, $this.$outBuffer.$limit);
    jn_Buffer_position0($this.$inBuffer, $this.$inBuffer.$limit);
}
function ji_InputStreamReader__init_4($this, $in) {
    ji_InputStreamReader__init_3($this, $in, jnci_UTF8Charset__init_0());
}
function ji_InputStreamReader_close($this) {
    return;
}
function ji_InputStreamReader_read($this, $cbuf, $off, $len) {
    var $bytesRead, $sz, var$6;
    if ($this.$eof2 && !jn_Buffer_hasRemaining($this.$outBuffer))
        return (-1);
    $bytesRead = 0;
    a: {
        while ($len > 0) {
            $sz = jl_Math_min($len, jn_Buffer_remaining($this.$outBuffer));
            jn_CharBuffer_get0($this.$outBuffer, $cbuf, $off + $bytesRead | 0, $sz);
            $len = $len - $sz | 0;
            $bytesRead = $bytesRead + $sz | 0;
            if (!jn_Buffer_hasRemaining($this.$outBuffer)) {
                if ($this.$eof2)
                    var$6 = 0;
                else {
                    jn_CharBufferImpl_compact($this.$outBuffer);
                    b: {
                        while (true) {
                            if (!jn_Buffer_hasRemaining($this.$inBuffer)) {
                                if ($this.$streamEof)
                                    var$6 = 0;
                                else {
                                    jn_ByteBufferImpl_compact($this.$inBuffer);
                                    c: {
                                        while (true) {
                                            if (!jn_Buffer_hasRemaining($this.$inBuffer))
                                                break c;
                                            var$6 = ji_ByteArrayInputStream_read0($this.$stream, $this.$inBuffer.$array0, $this.$inBuffer.$position, jn_Buffer_remaining($this.$inBuffer));
                                            if (var$6 == (-1)) {
                                                $this.$streamEof = 1;
                                                break c;
                                            }
                                            jn_Buffer_position0($this.$inBuffer, $this.$inBuffer.$position + var$6 | 0);
                                            if (!var$6)
                                                break;
                                        }
                                    }
                                    jn_Buffer_flip($this.$inBuffer);
                                    var$6 = 1;
                                }
                                if (!var$6)
                                    break b;
                            }
                            if (!jnc_CoderResult_isOverflow(jnc_CharsetDecoder_decode0($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof)))
                                continue;
                            else
                                break;
                        }
                    }
                    if (!jn_Buffer_hasRemaining($this.$inBuffer) && $this.$streamEof && jnc_CoderResult_isUnderflow(jnc_CharsetDecoder_flush($this.$decoder, $this.$outBuffer)))
                        $this.$eof2 = 1;
                    jn_Buffer_flip($this.$outBuffer);
                    var$6 = 1;
                }
                if (!var$6)
                    break a;
            }
        }
    }
    return $bytesRead;
}
function nms_MovingObjectPosition() {
    var a = this; jl_Object.call(a);
    a.$typeOfHit = 0;
    a.$blockX = 0;
    a.$blockY = 0;
    a.$blockZ = 0;
    a.$sideHit = 0;
    a.$hitVec = null;
    a.$entityHit = null;
}
function nms_MovingObjectPosition__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_MovingObjectPosition();
    nms_MovingObjectPosition__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_MovingObjectPosition__init_(var_0) {
    var var_1 = new nms_MovingObjectPosition();
    nms_MovingObjectPosition__init_2(var_1, var_0);
    return var_1;
}
function nms_MovingObjectPosition__init_1($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$typeOfHit = 0;
    $this.$blockX = $var1;
    $this.$blockY = $var2;
    $this.$blockZ = $var3;
    $this.$sideHit = $var4;
    $this.$hitVec = nms_Vec3D_createVector($var5.$xCoord, $var5.$yCoord, $var5.$zCoord);
}
function nms_MovingObjectPosition__init_2($this, $var1) {
    $this.$typeOfHit = 1;
    $this.$entityHit = $var1;
    $this.$hitVec = nms_Vec3D_createVector($var1.$posX, $var1.$posY, $var1.$posZ);
}
function nms_PlayerControllerTest() {
    nms_PlayerController.call(this);
}
function nms_ItemStack() {
    var a = this; jl_Object.call(a);
    a.$stackSize = 0;
    a.$animationsToGo = 0;
    a.$itemID = 0;
    a.$itemDamage = 0;
}
function nms_ItemStack__init_6(var_0) {
    var var_1 = new nms_ItemStack();
    nms_ItemStack__init_7(var_1, var_0);
    return var_1;
}
function nms_ItemStack__init_8(var_0, var_1) {
    var var_2 = new nms_ItemStack();
    nms_ItemStack__init_9(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemStack__init_10(var_0) {
    var var_1 = new nms_ItemStack();
    nms_ItemStack__init_2(var_1, var_0);
    return var_1;
}
function nms_ItemStack__init_11(var_0, var_1) {
    var var_2 = new nms_ItemStack();
    nms_ItemStack__init_4(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemStack__init_0(var_0) {
    var var_1 = new nms_ItemStack();
    nms_ItemStack__init_(var_1, var_0);
    return var_1;
}
function nms_ItemStack__init_3(var_0, var_1) {
    var var_2 = new nms_ItemStack();
    nms_ItemStack__init_12(var_2, var_0, var_1);
    return var_2;
}
function nms_ItemStack__init_1(var_0, var_1, var_2) {
    var var_3 = new nms_ItemStack();
    nms_ItemStack__init_13(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_ItemStack__init_5(var_0) {
    var var_1 = new nms_ItemStack();
    nms_ItemStack__init_14(var_1, var_0);
    return var_1;
}
function nms_ItemStack__init_7($this, $var1) {
    nms_ItemStack__init_9($this, $var1, 1);
}
function nms_ItemStack__init_9($this, $var1, $var2) {
    nms_ItemStack__init_12($this, $var1.$blockID, $var2);
}
function nms_ItemStack__init_2($this, $var1) {
    nms_ItemStack__init_4($this, $var1, 1);
}
function nms_ItemStack__init_4($this, $var1, $var2) {
    nms_ItemStack__init_12($this, $var1.$shiftedIndex, $var2);
}
function nms_ItemStack__init_($this, $var1) {
    nms_ItemStack__init_12($this, $var1, 1);
}
function nms_ItemStack__init_12($this, $var1, $var2) {
    $this.$stackSize = 0;
    $this.$itemID = $var1;
    $this.$stackSize = $var2;
}
function nms_ItemStack__init_13($this, $var1, $var2, $var3) {
    $this.$stackSize = 0;
    $this.$itemID = $var1;
    $this.$stackSize = $var2;
    $this.$itemDamage = $var3;
}
function nms_ItemStack__init_14($this, $var1) {
    $this.$stackSize = 0;
    nms_ItemStack_readFromNBT($this, $var1);
}
function nms_ItemStack_splitStack($this, $var1) {
    $this.$stackSize = $this.$stackSize - $var1 | 0;
    return nms_ItemStack__init_1($this.$itemID, $var1, $this.$itemDamage);
}
function nms_ItemStack_getItem($this) {
    nms_Item_$callClinit();
    return nms_Item_itemsList.data[$this.$itemID];
}
function nms_ItemStack_getIconIndex($this) {
    return nms_ItemStack_getItem($this).$iconIndex;
}
function nms_ItemStack_useItem($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    return nms_ItemStack_getItem($this).$onItemUse($this, $var1, $var2, $var3, $var4, $var5, $var6);
}
function nms_ItemStack_getStrVsBlock($this, $var1) {
    return nms_ItemStack_getItem($this).$getStrVsBlock0($this, $var1);
}
function nms_ItemStack_useItemRightClick($this, $var1, $var2) {
    return nms_ItemStack_getItem($this).$onItemRightClick($this, $var1, $var2);
}
function nms_ItemStack_writeToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(292), $this.$itemID << 16 >> 16);
    nms_NBTTagCompound_setByte($var1, $rt_s(587), $this.$stackSize << 24 >> 24);
    nms_NBTTagCompound_setShort($var1, $rt_s(588), $this.$itemDamage << 16 >> 16);
    return $var1;
}
function nms_ItemStack_readFromNBT($this, $var1) {
    $this.$itemID = nms_NBTTagCompound_getShort($var1, $rt_s(292));
    $this.$stackSize = nms_NBTTagCompound_getByte($var1, $rt_s(587));
    $this.$itemDamage = nms_NBTTagCompound_getShort($var1, $rt_s(588));
}
function nms_ItemStack_getMaxStackSize($this) {
    return nms_ItemStack_getItem($this).$maxStackSize;
}
function nms_ItemStack_getMaxDamage($this) {
    nms_Item_$callClinit();
    return nms_Item_itemsList.data[$this.$itemID].$maxDamage;
}
function nms_ItemStack_damageItem($this, $var1) {
    $this.$itemDamage = $this.$itemDamage + $var1 | 0;
    if ($this.$itemDamage > nms_ItemStack_getMaxDamage($this)) {
        $this.$stackSize = $this.$stackSize - 1 | 0;
        if ($this.$stackSize < 0)
            $this.$stackSize = 0;
        $this.$itemDamage = 0;
    }
}
function nms_ItemStack_hitEntity($this, $var1) {
    nms_Item_$callClinit();
    nms_Item_itemsList.data[$this.$itemID].$hitEntity0($this, $var1);
}
function nms_ItemStack_hitBlock($this, $var1, $var2, $var3, $var4) {
    nms_Item_$callClinit();
    nms_Item_itemsList.data[$this.$itemID].$hitBlock($this, $var1, $var2, $var3, $var4);
}
function nms_ItemStack_getDamageVsEntity($this, $var1) {
    nms_Item_$callClinit();
    return nms_Item_itemsList.data[$this.$itemID].$getDamageVsEntity($var1);
}
function nms_ItemStack_canHarvestBlock($this, $var1) {
    nms_Item_$callClinit();
    return nms_Item_itemsList.data[$this.$itemID].$canHarvestBlock($var1);
}
function nms_ItemStack_func_1097_a($this, $var1) {
    return;
}
function nms_ItemStack_useItemOnEntity($this, $var1) {
    nms_Item_$callClinit();
    nms_Item_itemsList.data[$this.$itemID].$func_4019_b($this, $var1);
}
function nms_CraftingInventoryCB() {
    jl_Object.call(this);
    this.$unusedList = null;
}
function nms_CraftingInventoryCB__init_0() {
    var var_0 = new nms_CraftingInventoryCB();
    nms_CraftingInventoryCB__init_(var_0);
    return var_0;
}
function nms_CraftingInventoryCB__init_($this) {
    $this.$unusedList = ju_ArrayList__init_0();
}
function nms_CraftingInventoryPlayerCB() {
    var a = this; nms_CraftingInventoryCB.call(a);
    a.$craftMatrix0 = null;
    a.$craftResult0 = null;
}
function nms_CraftingInventoryPlayerCB_onCraftMatrixChanged($this, $var1) {
    var $var2, var$3, $var3, $var4, $var5, $var6;
    $var2 = $rt_createIntArray(9);
    var$3 = $var2.data;
    $var3 = 0;
    while ($var3 < 3) {
        $var4 = 0;
        while ($var4 < 3) {
            $var5 = (-1);
            if ($var3 < 2 && $var4 < 2) {
                $var6 = nms_InventoryCrafting_getStackInSlot($this.$craftMatrix0, $var3 + ($var4 * 2 | 0) | 0);
                if ($var6 !== null)
                    $var5 = $var6.$itemID;
            }
            var$3[$var3 + ($var4 * 3 | 0) | 0] = $var5;
            $var4 = $var4 + 1 | 0;
        }
        $var3 = $var3 + 1 | 0;
    }
    nms_InventoryCraftResult_setInventorySlotContents($this.$craftResult0, 0, nms_CraftingManager_craft(nms_CraftingManager_getInstance(), $var2));
}
function nms_Slot() {
    var a = this; jl_Object.call(a);
    a.$slotIndex = 0;
    a.$inventory1 = null;
}
function nms_Slot_onPickupFromSlot($this) {
    nms_Slot_onSlotChanged($this);
}
function nms_Slot_isItemValid($this, $var1) {
    return 1;
}
function nms_Slot_getStack($this) {
    return $this.$inventory1.$getStackInSlot($this.$slotIndex);
}
function nms_Slot_putStack($this, $var1) {
    $this.$inventory1.$setInventorySlotContents($this.$slotIndex, $var1);
    nms_Slot_onSlotChanged($this);
}
function nms_Slot_func_775_c($this) {
    return (-1);
}
function nms_Slot_onSlotChanged($this) {
    $this.$inventory1.$onInventoryChanged();
}
function nms_Slot_getSlotStackLimit($this) {
    return $this.$inventory1.$getInventoryStackLimit();
}
function nms_SlotInventory() {
    var a = this; nms_Slot.call(a);
    a.$guiHandler = null;
    a.$xPos = 0;
    a.$yPos = 0;
}
function nms_SlotInventory__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_SlotInventory();
    nms_SlotInventory__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_SlotInventory__init_0($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$inventory1 = $var2;
    $this.$slotIndex = $var3;
    $this.$guiHandler = $var1;
    $this.$xPos = $var4;
    $this.$yPos = $var5;
}
function nms_SlotInventory_isAtCursorPos($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = ($this.$guiHandler.$width - $this.$guiHandler.$xSize | 0) / 2 | 0;
    $var4 = ($this.$guiHandler.$height0 - $this.$guiHandler.$ySize | 0) / 2 | 0;
    $var3 = $var1 - $var3 | 0;
    $var2 = $var2 - $var4 | 0;
    return $var3 >= ($this.$xPos - 1 | 0) && $var3 < (($this.$xPos + 16 | 0) + 1 | 0) && $var2 >= ($this.$yPos - 1 | 0) && $var2 < (($this.$yPos + 16 | 0) + 1 | 0) ? 1 : 0;
}
function nms_SlotCrafting() {
    nms_SlotInventory.call(this);
    this.$craftMatrix1 = null;
}
function nms_SlotCrafting__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new nms_SlotCrafting();
    nms_SlotCrafting__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function nms_SlotCrafting__init_0($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_SlotInventory__init_0($this, $var1, $var3, $var4, $var5, $var6);
    $this.$craftMatrix1 = $var2;
}
function nms_SlotCrafting_isItemValid($this, $var1) {
    return 0;
}
function nms_SlotCrafting_onPickupFromSlot($this) {
    var $var1;
    $var1 = 0;
    while ($var1 < $this.$craftMatrix1.$nbrSlots) {
        if (nms_InventoryCrafting_getStackInSlot($this.$craftMatrix1, $var1) !== null)
            nms_InventoryCrafting_decrStackSize($this.$craftMatrix1, $var1, 1);
        $var1 = $var1 + 1 | 0;
    }
}
function nms_SlotArmor() {
    var a = this; nms_SlotInventory.call(a);
    a.$field_1124_c = 0;
    a.$field_1123_d = null;
}
function nms_SlotArmor_getSlotStackLimit($this) {
    return 1;
}
function nms_SlotArmor_isItemValid($this, $var1) {
    var var$2, var$3, var$4;
    if (nms_ItemStack_getItem($var1) instanceof nms_ItemArmor)
        return nms_ItemStack_getItem($var1).$armorType != $this.$field_1124_c ? 0 : 1;
    var$2 = jl_System_out();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    ji_PrintStream_println(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, nms_ItemStack_getItem($var1).$shiftedIndex), $rt_s(311)), $this.$field_1124_c)));
    var$4 = nms_ItemStack_getItem($var1).$shiftedIndex;
    nms_Block_$callClinit();
    return var$4 != nms_Block_pumpkin.$blockID ? 0 : $this.$field_1124_c ? 0 : 1;
}
function nms_SlotArmor_func_775_c($this) {
    return 15 + ($this.$field_1124_c * 16 | 0) | 0;
}
function cjj_InfTree() {
    var a = this; jl_Object.call(a);
    a.$hn = null;
    a.$v = null;
    a.$c1 = null;
    a.$r0 = null;
    a.$u = null;
    a.$x2 = null;
}
var cjj_InfTree_fixed_tl = null;
var cjj_InfTree_fixed_td = null;
var cjj_InfTree_cplens = null;
var cjj_InfTree_cplext = null;
var cjj_InfTree_cpdist = null;
var cjj_InfTree_cpdext = null;
function cjj_InfTree__init_0() {
    var var_0 = new cjj_InfTree();
    cjj_InfTree__init_(var_0);
    return var_0;
}
function cjj_InfTree__init_($this) {
    $this.$hn = null;
    $this.$v = null;
    $this.$c1 = null;
    $this.$r0 = null;
    $this.$u = null;
    $this.$x2 = null;
}
function cjj_InfTree_huft_build($this, $b, $bindex, $n, $s, $d, $e, $t, $m, $hp, $hn, $v) {
    var $p, $i, var$14, var$15, $f, $l, $j, var$19, $y, var$21, $xp, $mask, $h, $w, $q, $z, $a, $a_0, var$30;
    $p = 0;
    $i = $n;
    while (true) {
        var$14 = $b.data;
        var$15 = $this.$c1.data;
        $f = var$14[$bindex + $p | 0];
        var$15[$f] = var$15[$f] + 1 | 0;
        $p = $p + 1 | 0;
        $i = $i + (-1) | 0;
        if (!$i)
            break;
    }
    if ($this.$c1.data[0] == $n) {
        $b = $t.data;
        $d = $m.data;
        $b[0] = (-1);
        $d[0] = 0;
        return 0;
    }
    $m = $m.data;
    $l = $m[0];
    $j = 1;
    a: {
        while (true) {
            if ($j > 15)
                break a;
            if ($this.$c1.data[$j])
                break;
            $j = $j + 1 | 0;
        }
    }
    if ($l < $j)
        $l = $j;
    var$19 = 15;
    b: {
        while (true) {
            if (!var$19)
                break b;
            if ($this.$c1.data[var$19])
                break;
            var$19 = var$19 + (-1) | 0;
        }
    }
    if ($l > var$19)
        $l = var$19;
    $m[0] = $l;
    $y = 1 << $j;
    $p = $j;
    while (true) {
        if ($p >= var$19) {
            var$21 = $y - $this.$c1.data[var$19] | 0;
            if (var$21 < 0)
                return (-3);
            $b = $this.$c1.data;
            $b[var$19] = $b[var$19] + var$21 | 0;
            $b = $this.$x2.data;
            $y = 0;
            $b[1] = $y;
            $p = 1;
            $xp = 2;
            $mask = var$19;
            while (true) {
                $mask = $mask + (-1) | 0;
                if (!$mask)
                    break;
                $m = $this.$x2.data;
                $y = $y + $this.$c1.data[$p] | 0;
                $m[$xp] = $y;
                $xp = $xp + 1 | 0;
                $p = $p + 1 | 0;
            }
            $p = 0;
            $xp = 0;
            while (true) {
                $mask = var$14[$bindex + $xp | 0];
                if ($mask) {
                    $m = $v.data;
                    $b = $this.$x2.data;
                    $f = $b[$mask];
                    $b[$mask] = $f + 1 | 0;
                    $m[$f] = $p;
                }
                $xp = $xp + 1 | 0;
                $p = $p + 1 | 0;
                if ($p >= $n)
                    break;
            }
            $y = $this.$x2.data[var$19];
            $b = $this.$x2.data;
            $p = 0;
            $b[0] = $p;
            $xp = 0;
            $h = (-1);
            $w =  -$l;
            $this.$u.data[0] = 0;
            $q = 0;
            $z = 0;
            c: while (true) {
                if ($j > var$19)
                    return var$21 && var$19 != 1 ? (-5) : 0;
                $a = $this.$c1.data[$j];
                while (true) {
                    $a_0 = $a + (-1) | 0;
                    if (!$a)
                        break;
                    $i = $a_0 + 1 | 0;
                    while (true) {
                        var$30 = $w + $l | 0;
                        if ($j <= var$30)
                            break;
                        $h = $h + 1 | 0;
                        $mask = var$19 - var$30 | 0;
                        if ($mask > $l)
                            $mask = $l;
                        d: {
                            $a = $j - var$30 | 0;
                            $bindex = 1 << $a;
                            if ($bindex > $i) {
                                $f = $bindex - $i | 0;
                                if ($a < $mask) {
                                    $bindex = $j;
                                    while (true) {
                                        $a = $a + 1 | 0;
                                        if ($a >= $mask)
                                            break;
                                        $n = $f << 1;
                                        $b = $this.$c1.data;
                                        $bindex = $bindex + 1 | 0;
                                        if ($n <= $b[$bindex])
                                            break d;
                                        $f = $n - $this.$c1.data[$bindex] | 0;
                                    }
                                }
                            }
                        }
                        $b = $hn.data;
                        $z = 1 << $a;
                        if (($b[0] + $z | 0) > 1440)
                            break c;
                        $m = $this.$u.data;
                        $q = $b[0];
                        $m[$h] = $q;
                        $b[0] = $b[0] + $z | 0;
                        if (!$h) {
                            $t.data[0] = $q;
                            $w = var$30;
                            continue;
                        }
                        $this.$x2.data[$h] = $p;
                        $this.$r0.data[0] = $a << 24 >> 24;
                        $this.$r0.data[1] = $l << 24 >> 24;
                        $bindex = $p >>> (var$30 - $l | 0);
                        $m = $this.$r0.data;
                        $b = $this.$u.data;
                        $f = $h - 1 | 0;
                        $m[2] = ($q - $b[$f] | 0) - $bindex | 0;
                        jl_System_arraycopy($this.$r0, 0, $hp, ($this.$u.data[$f] + $bindex | 0) * 3 | 0, 3);
                        $w = var$30;
                    }
                    $b = $this.$r0.data;
                    $mask = $j - $w | 0;
                    $b[1] = $mask << 24 >> 24;
                    if ($xp >= $y)
                        $this.$r0.data[0] = 192;
                    else {
                        var$15 = $v.data;
                        if (var$15[$xp] >= $s) {
                            $m = $e.data;
                            var$14 = $d.data;
                            $this.$r0.data[0] = (($m[var$15[$xp] - $s | 0] + 16 | 0) + 64 | 0) << 24 >> 24;
                            $b = $this.$r0.data;
                            $n = $xp + 1 | 0;
                            $b[2] = var$14[var$15[$xp] - $s | 0];
                            $xp = $n;
                        } else {
                            $b = $this.$r0;
                            $b.data[0] = (var$15[$xp] >= 256 ? 96 : 0) << 24 >> 24;
                            $b = $this.$r0.data;
                            $n = $xp + 1 | 0;
                            $b[2] = var$15[$xp];
                            $xp = $n;
                        }
                    }
                    $f = 1 << $mask;
                    $bindex = $p >>> $w;
                    while ($bindex < $z) {
                        jl_System_arraycopy($this.$r0, 0, $hp, ($q + $bindex | 0) * 3 | 0, 3);
                        $bindex = $bindex + $f | 0;
                    }
                    $bindex = 1 << ($j - 1 | 0);
                    while ($p & $bindex) {
                        $p = $p ^ $bindex;
                        $bindex = $bindex >>> 1;
                    }
                    $p = $p ^ $bindex;
                    $mask = (1 << $w) - 1 | 0;
                    while (($p & $mask) != $this.$x2.data[$h]) {
                        $h = $h + (-1) | 0;
                        $w = $w - $l | 0;
                        $mask = (1 << $w) - 1 | 0;
                    }
                    $a = $a_0;
                }
                $j = $j + 1 | 0;
            }
            return (-3);
        }
        $f = $y - $this.$c1.data[$p] | 0;
        if ($f < 0)
            break;
        $p = $p + 1 | 0;
        $y = $f << 1;
    }
    return (-3);
}
function cjj_InfTree_inflate_trees_bits($this, $c, $bb, $tb, $hp, $z) {
    var $result;
    cjj_InfTree_initWorkArea($this, 19);
    $this.$hn.data[0] = 0;
    $result = cjj_InfTree_huft_build($this, $c, 0, 19, 19, null, null, $tb, $bb, $hp, $this.$hn, $this.$v);
    if ($result == (-3))
        $z.$msg = $rt_s(589);
    else if (!($result != (-5) && $bb.data[0])) {
        $z.$msg = $rt_s(590);
        $result = (-3);
    }
    return $result;
}
function cjj_InfTree_inflate_trees_dynamic($this, $nl, $nd, $c, $bl, $bd, $tl, $td, $hp, $z) {
    var $result;
    cjj_InfTree_initWorkArea($this, 288);
    $this.$hn.data[0] = 0;
    $result = cjj_InfTree_huft_build($this, $c, 0, $nl, 257, cjj_InfTree_cplens, cjj_InfTree_cplext, $tl, $bl, $hp, $this.$hn, $this.$v);
    if (!$result && $bl.data[0]) {
        cjj_InfTree_initWorkArea($this, 288);
        $nd = cjj_InfTree_huft_build($this, $c, $nl, $nd, 0, cjj_InfTree_cpdist, cjj_InfTree_cpdext, $td, $bd, $hp, $this.$hn, $this.$v);
        if (!$nd && !(!$bd.data[0] && $nl > 257))
            return 0;
        if ($nd == (-3))
            $z.$msg = $rt_s(591);
        else if ($nd == (-5)) {
            $z.$msg = $rt_s(592);
            $nd = (-3);
        } else if ($nd != (-4)) {
            $z.$msg = $rt_s(593);
            $nd = (-3);
        }
        return $nd;
    }
    if ($result == (-3))
        $z.$msg = $rt_s(594);
    else if ($result != (-4)) {
        $z.$msg = $rt_s(595);
        $result = (-3);
    }
    return $result;
}
function cjj_InfTree_inflate_trees_fixed($bl, $bd, $tl, $td, $z) {
    $td = $td.data;
    $tl = $tl.data;
    $bd = $bd.data;
    $bl.data[0] = 9;
    $bd[0] = 5;
    $tl[0] = cjj_InfTree_fixed_tl;
    $td[0] = cjj_InfTree_fixed_td;
    return 0;
}
function cjj_InfTree_initWorkArea($this, $vsize) {
    var $i;
    if ($this.$hn === null) {
        $this.$hn = $rt_createIntArray(1);
        $this.$v = $rt_createIntArray($vsize);
        $this.$c1 = $rt_createIntArray(16);
        $this.$r0 = $rt_createIntArray(3);
        $this.$u = $rt_createIntArray(15);
        $this.$x2 = $rt_createIntArray(16);
    }
    if ($this.$v.data.length < $vsize)
        $this.$v = $rt_createIntArray($vsize);
    $i = 0;
    while ($i < $vsize) {
        $this.$v.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 16) {
        $this.$c1.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 3) {
        $this.$r0.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    jl_System_arraycopy($this.$c1, 0, $this.$u, 0, 15);
    jl_System_arraycopy($this.$c1, 0, $this.$x2, 0, 16);
}
function cjj_InfTree__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(1536);
    var$2 = var$1.data;
    var$2[0] = 96;
    var$2[1] = 7;
    var$2[2] = 256;
    var$2[3] = 0;
    var$2[4] = 8;
    var$2[5] = 80;
    var$2[6] = 0;
    var$2[7] = 8;
    var$2[8] = 16;
    var$2[9] = 84;
    var$2[10] = 8;
    var$2[11] = 115;
    var$2[12] = 82;
    var$2[13] = 7;
    var$2[14] = 31;
    var$2[15] = 0;
    var$2[16] = 8;
    var$2[17] = 112;
    var$2[18] = 0;
    var$2[19] = 8;
    var$2[20] = 48;
    var$2[21] = 0;
    var$2[22] = 9;
    var$2[23] = 192;
    var$2[24] = 80;
    var$2[25] = 7;
    var$2[26] = 10;
    var$2[27] = 0;
    var$2[28] = 8;
    var$2[29] = 96;
    var$2[30] = 0;
    var$2[31] = 8;
    var$2[32] = 32;
    var$2[33] = 0;
    var$2[34] = 9;
    var$2[35] = 160;
    var$2[36] = 0;
    var$2[37] = 8;
    var$2[38] = 0;
    var$2[39] = 0;
    var$2[40] = 8;
    var$2[41] = 128;
    var$2[42] = 0;
    var$2[43] = 8;
    var$2[44] = 64;
    var$2[45] = 0;
    var$2[46] = 9;
    var$2[47] = 224;
    var$2[48] = 80;
    var$2[49] = 7;
    var$2[50] = 6;
    var$2[51] = 0;
    var$2[52] = 8;
    var$2[53] = 88;
    var$2[54] = 0;
    var$2[55] = 8;
    var$2[56] = 24;
    var$2[57] = 0;
    var$2[58] = 9;
    var$2[59] = 144;
    var$2[60] = 83;
    var$2[61] = 7;
    var$2[62] = 59;
    var$2[63] = 0;
    var$2[64] = 8;
    var$2[65] = 120;
    var$2[66] = 0;
    var$2[67] = 8;
    var$2[68] = 56;
    var$2[69] = 0;
    var$2[70] = 9;
    var$2[71] = 208;
    var$2[72] = 81;
    var$2[73] = 7;
    var$2[74] = 17;
    var$2[75] = 0;
    var$2[76] = 8;
    var$2[77] = 104;
    var$2[78] = 0;
    var$2[79] = 8;
    var$2[80] = 40;
    var$2[81] = 0;
    var$2[82] = 9;
    var$2[83] = 176;
    var$2[84] = 0;
    var$2[85] = 8;
    var$2[86] = 8;
    var$2[87] = 0;
    var$2[88] = 8;
    var$2[89] = 136;
    var$2[90] = 0;
    var$2[91] = 8;
    var$2[92] = 72;
    var$2[93] = 0;
    var$2[94] = 9;
    var$2[95] = 240;
    var$2[96] = 80;
    var$2[97] = 7;
    var$2[98] = 4;
    var$2[99] = 0;
    var$2[100] = 8;
    var$2[101] = 84;
    var$2[102] = 0;
    var$2[103] = 8;
    var$2[104] = 20;
    var$2[105] = 85;
    var$2[106] = 8;
    var$2[107] = 227;
    var$2[108] = 83;
    var$2[109] = 7;
    var$2[110] = 43;
    var$2[111] = 0;
    var$2[112] = 8;
    var$2[113] = 116;
    var$2[114] = 0;
    var$2[115] = 8;
    var$2[116] = 52;
    var$2[117] = 0;
    var$2[118] = 9;
    var$2[119] = 200;
    var$2[120] = 81;
    var$2[121] = 7;
    var$2[122] = 13;
    var$2[123] = 0;
    var$2[124] = 8;
    var$2[125] = 100;
    var$2[126] = 0;
    var$2[127] = 8;
    var$2[128] = 36;
    var$2[129] = 0;
    var$2[130] = 9;
    var$2[131] = 168;
    var$2[132] = 0;
    var$2[133] = 8;
    var$2[134] = 4;
    var$2[135] = 0;
    var$2[136] = 8;
    var$2[137] = 132;
    var$2[138] = 0;
    var$2[139] = 8;
    var$2[140] = 68;
    var$2[141] = 0;
    var$2[142] = 9;
    var$2[143] = 232;
    var$2[144] = 80;
    var$2[145] = 7;
    var$2[146] = 8;
    var$2[147] = 0;
    var$2[148] = 8;
    var$2[149] = 92;
    var$2[150] = 0;
    var$2[151] = 8;
    var$2[152] = 28;
    var$2[153] = 0;
    var$2[154] = 9;
    var$2[155] = 152;
    var$2[156] = 84;
    var$2[157] = 7;
    var$2[158] = 83;
    var$2[159] = 0;
    var$2[160] = 8;
    var$2[161] = 124;
    var$2[162] = 0;
    var$2[163] = 8;
    var$2[164] = 60;
    var$2[165] = 0;
    var$2[166] = 9;
    var$2[167] = 216;
    var$2[168] = 82;
    var$2[169] = 7;
    var$2[170] = 23;
    var$2[171] = 0;
    var$2[172] = 8;
    var$2[173] = 108;
    var$2[174] = 0;
    var$2[175] = 8;
    var$2[176] = 44;
    var$2[177] = 0;
    var$2[178] = 9;
    var$2[179] = 184;
    var$2[180] = 0;
    var$2[181] = 8;
    var$2[182] = 12;
    var$2[183] = 0;
    var$2[184] = 8;
    var$2[185] = 140;
    var$2[186] = 0;
    var$2[187] = 8;
    var$2[188] = 76;
    var$2[189] = 0;
    var$2[190] = 9;
    var$2[191] = 248;
    var$2[192] = 80;
    var$2[193] = 7;
    var$2[194] = 3;
    var$2[195] = 0;
    var$2[196] = 8;
    var$2[197] = 82;
    var$2[198] = 0;
    var$2[199] = 8;
    var$2[200] = 18;
    var$2[201] = 85;
    var$2[202] = 8;
    var$2[203] = 163;
    var$2[204] = 83;
    var$2[205] = 7;
    var$2[206] = 35;
    var$2[207] = 0;
    var$2[208] = 8;
    var$2[209] = 114;
    var$2[210] = 0;
    var$2[211] = 8;
    var$2[212] = 50;
    var$2[213] = 0;
    var$2[214] = 9;
    var$2[215] = 196;
    var$2[216] = 81;
    var$2[217] = 7;
    var$2[218] = 11;
    var$2[219] = 0;
    var$2[220] = 8;
    var$2[221] = 98;
    var$2[222] = 0;
    var$2[223] = 8;
    var$2[224] = 34;
    var$2[225] = 0;
    var$2[226] = 9;
    var$2[227] = 164;
    var$2[228] = 0;
    var$2[229] = 8;
    var$2[230] = 2;
    var$2[231] = 0;
    var$2[232] = 8;
    var$2[233] = 130;
    var$2[234] = 0;
    var$2[235] = 8;
    var$2[236] = 66;
    var$2[237] = 0;
    var$2[238] = 9;
    var$2[239] = 228;
    var$2[240] = 80;
    var$2[241] = 7;
    var$2[242] = 7;
    var$2[243] = 0;
    var$2[244] = 8;
    var$2[245] = 90;
    var$2[246] = 0;
    var$2[247] = 8;
    var$2[248] = 26;
    var$2[249] = 0;
    var$2[250] = 9;
    var$2[251] = 148;
    var$2[252] = 84;
    var$2[253] = 7;
    var$2[254] = 67;
    var$2[255] = 0;
    var$2[256] = 8;
    var$2[257] = 122;
    var$2[258] = 0;
    var$2[259] = 8;
    var$2[260] = 58;
    var$2[261] = 0;
    var$2[262] = 9;
    var$2[263] = 212;
    var$2[264] = 82;
    var$2[265] = 7;
    var$2[266] = 19;
    var$2[267] = 0;
    var$2[268] = 8;
    var$2[269] = 106;
    var$2[270] = 0;
    var$2[271] = 8;
    var$2[272] = 42;
    var$2[273] = 0;
    var$2[274] = 9;
    var$2[275] = 180;
    var$2[276] = 0;
    var$2[277] = 8;
    var$2[278] = 10;
    var$2[279] = 0;
    var$2[280] = 8;
    var$2[281] = 138;
    var$2[282] = 0;
    var$2[283] = 8;
    var$2[284] = 74;
    var$2[285] = 0;
    var$2[286] = 9;
    var$2[287] = 244;
    var$2[288] = 80;
    var$2[289] = 7;
    var$2[290] = 5;
    var$2[291] = 0;
    var$2[292] = 8;
    var$2[293] = 86;
    var$2[294] = 0;
    var$2[295] = 8;
    var$2[296] = 22;
    var$2[297] = 192;
    var$2[298] = 8;
    var$2[299] = 0;
    var$2[300] = 83;
    var$2[301] = 7;
    var$2[302] = 51;
    var$2[303] = 0;
    var$2[304] = 8;
    var$2[305] = 118;
    var$2[306] = 0;
    var$2[307] = 8;
    var$2[308] = 54;
    var$2[309] = 0;
    var$2[310] = 9;
    var$2[311] = 204;
    var$2[312] = 81;
    var$2[313] = 7;
    var$2[314] = 15;
    var$2[315] = 0;
    var$2[316] = 8;
    var$2[317] = 102;
    var$2[318] = 0;
    var$2[319] = 8;
    var$2[320] = 38;
    var$2[321] = 0;
    var$2[322] = 9;
    var$2[323] = 172;
    var$2[324] = 0;
    var$2[325] = 8;
    var$2[326] = 6;
    var$2[327] = 0;
    var$2[328] = 8;
    var$2[329] = 134;
    var$2[330] = 0;
    var$2[331] = 8;
    var$2[332] = 70;
    var$2[333] = 0;
    var$2[334] = 9;
    var$2[335] = 236;
    var$2[336] = 80;
    var$2[337] = 7;
    var$2[338] = 9;
    var$2[339] = 0;
    var$2[340] = 8;
    var$2[341] = 94;
    var$2[342] = 0;
    var$2[343] = 8;
    var$2[344] = 30;
    var$2[345] = 0;
    var$2[346] = 9;
    var$2[347] = 156;
    var$2[348] = 84;
    var$2[349] = 7;
    var$2[350] = 99;
    var$2[351] = 0;
    var$2[352] = 8;
    var$2[353] = 126;
    var$2[354] = 0;
    var$2[355] = 8;
    var$2[356] = 62;
    var$2[357] = 0;
    var$2[358] = 9;
    var$2[359] = 220;
    var$2[360] = 82;
    var$2[361] = 7;
    var$2[362] = 27;
    var$2[363] = 0;
    var$2[364] = 8;
    var$2[365] = 110;
    var$2[366] = 0;
    var$2[367] = 8;
    var$2[368] = 46;
    var$2[369] = 0;
    var$2[370] = 9;
    var$2[371] = 188;
    var$2[372] = 0;
    var$2[373] = 8;
    var$2[374] = 14;
    var$2[375] = 0;
    var$2[376] = 8;
    var$2[377] = 142;
    var$2[378] = 0;
    var$2[379] = 8;
    var$2[380] = 78;
    var$2[381] = 0;
    var$2[382] = 9;
    var$2[383] = 252;
    var$2[384] = 96;
    var$2[385] = 7;
    var$2[386] = 256;
    var$2[387] = 0;
    var$2[388] = 8;
    var$2[389] = 81;
    var$2[390] = 0;
    var$2[391] = 8;
    var$2[392] = 17;
    var$2[393] = 85;
    var$2[394] = 8;
    var$2[395] = 131;
    var$2[396] = 82;
    var$2[397] = 7;
    var$2[398] = 31;
    var$2[399] = 0;
    var$2[400] = 8;
    var$2[401] = 113;
    var$2[402] = 0;
    var$2[403] = 8;
    var$2[404] = 49;
    var$2[405] = 0;
    var$2[406] = 9;
    var$2[407] = 194;
    var$2[408] = 80;
    var$2[409] = 7;
    var$2[410] = 10;
    var$2[411] = 0;
    var$2[412] = 8;
    var$2[413] = 97;
    var$2[414] = 0;
    var$2[415] = 8;
    var$2[416] = 33;
    var$2[417] = 0;
    var$2[418] = 9;
    var$2[419] = 162;
    var$2[420] = 0;
    var$2[421] = 8;
    var$2[422] = 1;
    var$2[423] = 0;
    var$2[424] = 8;
    var$2[425] = 129;
    var$2[426] = 0;
    var$2[427] = 8;
    var$2[428] = 65;
    var$2[429] = 0;
    var$2[430] = 9;
    var$2[431] = 226;
    var$2[432] = 80;
    var$2[433] = 7;
    var$2[434] = 6;
    var$2[435] = 0;
    var$2[436] = 8;
    var$2[437] = 89;
    var$2[438] = 0;
    var$2[439] = 8;
    var$2[440] = 25;
    var$2[441] = 0;
    var$2[442] = 9;
    var$2[443] = 146;
    var$2[444] = 83;
    var$2[445] = 7;
    var$2[446] = 59;
    var$2[447] = 0;
    var$2[448] = 8;
    var$2[449] = 121;
    var$2[450] = 0;
    var$2[451] = 8;
    var$2[452] = 57;
    var$2[453] = 0;
    var$2[454] = 9;
    var$2[455] = 210;
    var$2[456] = 81;
    var$2[457] = 7;
    var$2[458] = 17;
    var$2[459] = 0;
    var$2[460] = 8;
    var$2[461] = 105;
    var$2[462] = 0;
    var$2[463] = 8;
    var$2[464] = 41;
    var$2[465] = 0;
    var$2[466] = 9;
    var$2[467] = 178;
    var$2[468] = 0;
    var$2[469] = 8;
    var$2[470] = 9;
    var$2[471] = 0;
    var$2[472] = 8;
    var$2[473] = 137;
    var$2[474] = 0;
    var$2[475] = 8;
    var$2[476] = 73;
    var$2[477] = 0;
    var$2[478] = 9;
    var$2[479] = 242;
    var$2[480] = 80;
    var$2[481] = 7;
    var$2[482] = 4;
    var$2[483] = 0;
    var$2[484] = 8;
    var$2[485] = 85;
    var$2[486] = 0;
    var$2[487] = 8;
    var$2[488] = 21;
    var$2[489] = 80;
    var$2[490] = 8;
    var$2[491] = 258;
    var$2[492] = 83;
    var$2[493] = 7;
    var$2[494] = 43;
    var$2[495] = 0;
    var$2[496] = 8;
    var$2[497] = 117;
    var$2[498] = 0;
    var$2[499] = 8;
    var$2[500] = 53;
    var$2[501] = 0;
    var$2[502] = 9;
    var$2[503] = 202;
    var$2[504] = 81;
    var$2[505] = 7;
    var$2[506] = 13;
    var$2[507] = 0;
    var$2[508] = 8;
    var$2[509] = 101;
    var$2[510] = 0;
    var$2[511] = 8;
    var$2[512] = 37;
    var$2[513] = 0;
    var$2[514] = 9;
    var$2[515] = 170;
    var$2[516] = 0;
    var$2[517] = 8;
    var$2[518] = 5;
    var$2[519] = 0;
    var$2[520] = 8;
    var$2[521] = 133;
    var$2[522] = 0;
    var$2[523] = 8;
    var$2[524] = 69;
    var$2[525] = 0;
    var$2[526] = 9;
    var$2[527] = 234;
    var$2[528] = 80;
    var$2[529] = 7;
    var$2[530] = 8;
    var$2[531] = 0;
    var$2[532] = 8;
    var$2[533] = 93;
    var$2[534] = 0;
    var$2[535] = 8;
    var$2[536] = 29;
    var$2[537] = 0;
    var$2[538] = 9;
    var$2[539] = 154;
    var$2[540] = 84;
    var$2[541] = 7;
    var$2[542] = 83;
    var$2[543] = 0;
    var$2[544] = 8;
    var$2[545] = 125;
    var$2[546] = 0;
    var$2[547] = 8;
    var$2[548] = 61;
    var$2[549] = 0;
    var$2[550] = 9;
    var$2[551] = 218;
    var$2[552] = 82;
    var$2[553] = 7;
    var$2[554] = 23;
    var$2[555] = 0;
    var$2[556] = 8;
    var$2[557] = 109;
    var$2[558] = 0;
    var$2[559] = 8;
    var$2[560] = 45;
    var$2[561] = 0;
    var$2[562] = 9;
    var$2[563] = 186;
    var$2[564] = 0;
    var$2[565] = 8;
    var$2[566] = 13;
    var$2[567] = 0;
    var$2[568] = 8;
    var$2[569] = 141;
    var$2[570] = 0;
    var$2[571] = 8;
    var$2[572] = 77;
    var$2[573] = 0;
    var$2[574] = 9;
    var$2[575] = 250;
    var$2[576] = 80;
    var$2[577] = 7;
    var$2[578] = 3;
    var$2[579] = 0;
    var$2[580] = 8;
    var$2[581] = 83;
    var$2[582] = 0;
    var$2[583] = 8;
    var$2[584] = 19;
    var$2[585] = 85;
    var$2[586] = 8;
    var$2[587] = 195;
    var$2[588] = 83;
    var$2[589] = 7;
    var$2[590] = 35;
    var$2[591] = 0;
    var$2[592] = 8;
    var$2[593] = 115;
    var$2[594] = 0;
    var$2[595] = 8;
    var$2[596] = 51;
    var$2[597] = 0;
    var$2[598] = 9;
    var$2[599] = 198;
    var$2[600] = 81;
    var$2[601] = 7;
    var$2[602] = 11;
    var$2[603] = 0;
    var$2[604] = 8;
    var$2[605] = 99;
    var$2[606] = 0;
    var$2[607] = 8;
    var$2[608] = 35;
    var$2[609] = 0;
    var$2[610] = 9;
    var$2[611] = 166;
    var$2[612] = 0;
    var$2[613] = 8;
    var$2[614] = 3;
    var$2[615] = 0;
    var$2[616] = 8;
    var$2[617] = 131;
    var$2[618] = 0;
    var$2[619] = 8;
    var$2[620] = 67;
    var$2[621] = 0;
    var$2[622] = 9;
    var$2[623] = 230;
    var$2[624] = 80;
    var$2[625] = 7;
    var$2[626] = 7;
    var$2[627] = 0;
    var$2[628] = 8;
    var$2[629] = 91;
    var$2[630] = 0;
    var$2[631] = 8;
    var$2[632] = 27;
    var$2[633] = 0;
    var$2[634] = 9;
    var$2[635] = 150;
    var$2[636] = 84;
    var$2[637] = 7;
    var$2[638] = 67;
    var$2[639] = 0;
    var$2[640] = 8;
    var$2[641] = 123;
    var$2[642] = 0;
    var$2[643] = 8;
    var$2[644] = 59;
    var$2[645] = 0;
    var$2[646] = 9;
    var$2[647] = 214;
    var$2[648] = 82;
    var$2[649] = 7;
    var$2[650] = 19;
    var$2[651] = 0;
    var$2[652] = 8;
    var$2[653] = 107;
    var$2[654] = 0;
    var$2[655] = 8;
    var$2[656] = 43;
    var$2[657] = 0;
    var$2[658] = 9;
    var$2[659] = 182;
    var$2[660] = 0;
    var$2[661] = 8;
    var$2[662] = 11;
    var$2[663] = 0;
    var$2[664] = 8;
    var$2[665] = 139;
    var$2[666] = 0;
    var$2[667] = 8;
    var$2[668] = 75;
    var$2[669] = 0;
    var$2[670] = 9;
    var$2[671] = 246;
    var$2[672] = 80;
    var$2[673] = 7;
    var$2[674] = 5;
    var$2[675] = 0;
    var$2[676] = 8;
    var$2[677] = 87;
    var$2[678] = 0;
    var$2[679] = 8;
    var$2[680] = 23;
    var$2[681] = 192;
    var$2[682] = 8;
    var$2[683] = 0;
    var$2[684] = 83;
    var$2[685] = 7;
    var$2[686] = 51;
    var$2[687] = 0;
    var$2[688] = 8;
    var$2[689] = 119;
    var$2[690] = 0;
    var$2[691] = 8;
    var$2[692] = 55;
    var$2[693] = 0;
    var$2[694] = 9;
    var$2[695] = 206;
    var$2[696] = 81;
    var$2[697] = 7;
    var$2[698] = 15;
    var$2[699] = 0;
    var$2[700] = 8;
    var$2[701] = 103;
    var$2[702] = 0;
    var$2[703] = 8;
    var$2[704] = 39;
    var$2[705] = 0;
    var$2[706] = 9;
    var$2[707] = 174;
    var$2[708] = 0;
    var$2[709] = 8;
    var$2[710] = 7;
    var$2[711] = 0;
    var$2[712] = 8;
    var$2[713] = 135;
    var$2[714] = 0;
    var$2[715] = 8;
    var$2[716] = 71;
    var$2[717] = 0;
    var$2[718] = 9;
    var$2[719] = 238;
    var$2[720] = 80;
    var$2[721] = 7;
    var$2[722] = 9;
    var$2[723] = 0;
    var$2[724] = 8;
    var$2[725] = 95;
    var$2[726] = 0;
    var$2[727] = 8;
    var$2[728] = 31;
    var$2[729] = 0;
    var$2[730] = 9;
    var$2[731] = 158;
    var$2[732] = 84;
    var$2[733] = 7;
    var$2[734] = 99;
    var$2[735] = 0;
    var$2[736] = 8;
    var$2[737] = 127;
    var$2[738] = 0;
    var$2[739] = 8;
    var$2[740] = 63;
    var$2[741] = 0;
    var$2[742] = 9;
    var$2[743] = 222;
    var$2[744] = 82;
    var$2[745] = 7;
    var$2[746] = 27;
    var$2[747] = 0;
    var$2[748] = 8;
    var$2[749] = 111;
    var$2[750] = 0;
    var$2[751] = 8;
    var$2[752] = 47;
    var$2[753] = 0;
    var$2[754] = 9;
    var$2[755] = 190;
    var$2[756] = 0;
    var$2[757] = 8;
    var$2[758] = 15;
    var$2[759] = 0;
    var$2[760] = 8;
    var$2[761] = 143;
    var$2[762] = 0;
    var$2[763] = 8;
    var$2[764] = 79;
    var$2[765] = 0;
    var$2[766] = 9;
    var$2[767] = 254;
    var$2[768] = 96;
    var$2[769] = 7;
    var$2[770] = 256;
    var$2[771] = 0;
    var$2[772] = 8;
    var$2[773] = 80;
    var$2[774] = 0;
    var$2[775] = 8;
    var$2[776] = 16;
    var$2[777] = 84;
    var$2[778] = 8;
    var$2[779] = 115;
    var$2[780] = 82;
    var$2[781] = 7;
    var$2[782] = 31;
    var$2[783] = 0;
    var$2[784] = 8;
    var$2[785] = 112;
    var$2[786] = 0;
    var$2[787] = 8;
    var$2[788] = 48;
    var$2[789] = 0;
    var$2[790] = 9;
    var$2[791] = 193;
    var$2[792] = 80;
    var$2[793] = 7;
    var$2[794] = 10;
    var$2[795] = 0;
    var$2[796] = 8;
    var$2[797] = 96;
    var$2[798] = 0;
    var$2[799] = 8;
    var$2[800] = 32;
    var$2[801] = 0;
    var$2[802] = 9;
    var$2[803] = 161;
    var$2[804] = 0;
    var$2[805] = 8;
    var$2[806] = 0;
    var$2[807] = 0;
    var$2[808] = 8;
    var$2[809] = 128;
    var$2[810] = 0;
    var$2[811] = 8;
    var$2[812] = 64;
    var$2[813] = 0;
    var$2[814] = 9;
    var$2[815] = 225;
    var$2[816] = 80;
    var$2[817] = 7;
    var$2[818] = 6;
    var$2[819] = 0;
    var$2[820] = 8;
    var$2[821] = 88;
    var$2[822] = 0;
    var$2[823] = 8;
    var$2[824] = 24;
    var$2[825] = 0;
    var$2[826] = 9;
    var$2[827] = 145;
    var$2[828] = 83;
    var$2[829] = 7;
    var$2[830] = 59;
    var$2[831] = 0;
    var$2[832] = 8;
    var$2[833] = 120;
    var$2[834] = 0;
    var$2[835] = 8;
    var$2[836] = 56;
    var$2[837] = 0;
    var$2[838] = 9;
    var$2[839] = 209;
    var$2[840] = 81;
    var$2[841] = 7;
    var$2[842] = 17;
    var$2[843] = 0;
    var$2[844] = 8;
    var$2[845] = 104;
    var$2[846] = 0;
    var$2[847] = 8;
    var$2[848] = 40;
    var$2[849] = 0;
    var$2[850] = 9;
    var$2[851] = 177;
    var$2[852] = 0;
    var$2[853] = 8;
    var$2[854] = 8;
    var$2[855] = 0;
    var$2[856] = 8;
    var$2[857] = 136;
    var$2[858] = 0;
    var$2[859] = 8;
    var$2[860] = 72;
    var$2[861] = 0;
    var$2[862] = 9;
    var$2[863] = 241;
    var$2[864] = 80;
    var$2[865] = 7;
    var$2[866] = 4;
    var$2[867] = 0;
    var$2[868] = 8;
    var$2[869] = 84;
    var$2[870] = 0;
    var$2[871] = 8;
    var$2[872] = 20;
    var$2[873] = 85;
    var$2[874] = 8;
    var$2[875] = 227;
    var$2[876] = 83;
    var$2[877] = 7;
    var$2[878] = 43;
    var$2[879] = 0;
    var$2[880] = 8;
    var$2[881] = 116;
    var$2[882] = 0;
    var$2[883] = 8;
    var$2[884] = 52;
    var$2[885] = 0;
    var$2[886] = 9;
    var$2[887] = 201;
    var$2[888] = 81;
    var$2[889] = 7;
    var$2[890] = 13;
    var$2[891] = 0;
    var$2[892] = 8;
    var$2[893] = 100;
    var$2[894] = 0;
    var$2[895] = 8;
    var$2[896] = 36;
    var$2[897] = 0;
    var$2[898] = 9;
    var$2[899] = 169;
    var$2[900] = 0;
    var$2[901] = 8;
    var$2[902] = 4;
    var$2[903] = 0;
    var$2[904] = 8;
    var$2[905] = 132;
    var$2[906] = 0;
    var$2[907] = 8;
    var$2[908] = 68;
    var$2[909] = 0;
    var$2[910] = 9;
    var$2[911] = 233;
    var$2[912] = 80;
    var$2[913] = 7;
    var$2[914] = 8;
    var$2[915] = 0;
    var$2[916] = 8;
    var$2[917] = 92;
    var$2[918] = 0;
    var$2[919] = 8;
    var$2[920] = 28;
    var$2[921] = 0;
    var$2[922] = 9;
    var$2[923] = 153;
    var$2[924] = 84;
    var$2[925] = 7;
    var$2[926] = 83;
    var$2[927] = 0;
    var$2[928] = 8;
    var$2[929] = 124;
    var$2[930] = 0;
    var$2[931] = 8;
    var$2[932] = 60;
    var$2[933] = 0;
    var$2[934] = 9;
    var$2[935] = 217;
    var$2[936] = 82;
    var$2[937] = 7;
    var$2[938] = 23;
    var$2[939] = 0;
    var$2[940] = 8;
    var$2[941] = 108;
    var$2[942] = 0;
    var$2[943] = 8;
    var$2[944] = 44;
    var$2[945] = 0;
    var$2[946] = 9;
    var$2[947] = 185;
    var$2[948] = 0;
    var$2[949] = 8;
    var$2[950] = 12;
    var$2[951] = 0;
    var$2[952] = 8;
    var$2[953] = 140;
    var$2[954] = 0;
    var$2[955] = 8;
    var$2[956] = 76;
    var$2[957] = 0;
    var$2[958] = 9;
    var$2[959] = 249;
    var$2[960] = 80;
    var$2[961] = 7;
    var$2[962] = 3;
    var$2[963] = 0;
    var$2[964] = 8;
    var$2[965] = 82;
    var$2[966] = 0;
    var$2[967] = 8;
    var$2[968] = 18;
    var$2[969] = 85;
    var$2[970] = 8;
    var$2[971] = 163;
    var$2[972] = 83;
    var$2[973] = 7;
    var$2[974] = 35;
    var$2[975] = 0;
    var$2[976] = 8;
    var$2[977] = 114;
    var$2[978] = 0;
    var$2[979] = 8;
    var$2[980] = 50;
    var$2[981] = 0;
    var$2[982] = 9;
    var$2[983] = 197;
    var$2[984] = 81;
    var$2[985] = 7;
    var$2[986] = 11;
    var$2[987] = 0;
    var$2[988] = 8;
    var$2[989] = 98;
    var$2[990] = 0;
    var$2[991] = 8;
    var$2[992] = 34;
    var$2[993] = 0;
    var$2[994] = 9;
    var$2[995] = 165;
    var$2[996] = 0;
    var$2[997] = 8;
    var$2[998] = 2;
    var$2[999] = 0;
    var$2[1000] = 8;
    var$2[1001] = 130;
    var$2[1002] = 0;
    var$2[1003] = 8;
    var$2[1004] = 66;
    var$2[1005] = 0;
    var$2[1006] = 9;
    var$2[1007] = 229;
    var$2[1008] = 80;
    var$2[1009] = 7;
    var$2[1010] = 7;
    var$2[1011] = 0;
    var$2[1012] = 8;
    var$2[1013] = 90;
    var$2[1014] = 0;
    var$2[1015] = 8;
    var$2[1016] = 26;
    var$2[1017] = 0;
    var$2[1018] = 9;
    var$2[1019] = 149;
    var$2[1020] = 84;
    var$2[1021] = 7;
    var$2[1022] = 67;
    var$2[1023] = 0;
    var$2[1024] = 8;
    var$2[1025] = 122;
    var$2[1026] = 0;
    var$2[1027] = 8;
    var$2[1028] = 58;
    var$2[1029] = 0;
    var$2[1030] = 9;
    var$2[1031] = 213;
    var$2[1032] = 82;
    var$2[1033] = 7;
    var$2[1034] = 19;
    var$2[1035] = 0;
    var$2[1036] = 8;
    var$2[1037] = 106;
    var$2[1038] = 0;
    var$2[1039] = 8;
    var$2[1040] = 42;
    var$2[1041] = 0;
    var$2[1042] = 9;
    var$2[1043] = 181;
    var$2[1044] = 0;
    var$2[1045] = 8;
    var$2[1046] = 10;
    var$2[1047] = 0;
    var$2[1048] = 8;
    var$2[1049] = 138;
    var$2[1050] = 0;
    var$2[1051] = 8;
    var$2[1052] = 74;
    var$2[1053] = 0;
    var$2[1054] = 9;
    var$2[1055] = 245;
    var$2[1056] = 80;
    var$2[1057] = 7;
    var$2[1058] = 5;
    var$2[1059] = 0;
    var$2[1060] = 8;
    var$2[1061] = 86;
    var$2[1062] = 0;
    var$2[1063] = 8;
    var$2[1064] = 22;
    var$2[1065] = 192;
    var$2[1066] = 8;
    var$2[1067] = 0;
    var$2[1068] = 83;
    var$2[1069] = 7;
    var$2[1070] = 51;
    var$2[1071] = 0;
    var$2[1072] = 8;
    var$2[1073] = 118;
    var$2[1074] = 0;
    var$2[1075] = 8;
    var$2[1076] = 54;
    var$2[1077] = 0;
    var$2[1078] = 9;
    var$2[1079] = 205;
    var$2[1080] = 81;
    var$2[1081] = 7;
    var$2[1082] = 15;
    var$2[1083] = 0;
    var$2[1084] = 8;
    var$2[1085] = 102;
    var$2[1086] = 0;
    var$2[1087] = 8;
    var$2[1088] = 38;
    var$2[1089] = 0;
    var$2[1090] = 9;
    var$2[1091] = 173;
    var$2[1092] = 0;
    var$2[1093] = 8;
    var$2[1094] = 6;
    var$2[1095] = 0;
    var$2[1096] = 8;
    var$2[1097] = 134;
    var$2[1098] = 0;
    var$2[1099] = 8;
    var$2[1100] = 70;
    var$2[1101] = 0;
    var$2[1102] = 9;
    var$2[1103] = 237;
    var$2[1104] = 80;
    var$2[1105] = 7;
    var$2[1106] = 9;
    var$2[1107] = 0;
    var$2[1108] = 8;
    var$2[1109] = 94;
    var$2[1110] = 0;
    var$2[1111] = 8;
    var$2[1112] = 30;
    var$2[1113] = 0;
    var$2[1114] = 9;
    var$2[1115] = 157;
    var$2[1116] = 84;
    var$2[1117] = 7;
    var$2[1118] = 99;
    var$2[1119] = 0;
    var$2[1120] = 8;
    var$2[1121] = 126;
    var$2[1122] = 0;
    var$2[1123] = 8;
    var$2[1124] = 62;
    var$2[1125] = 0;
    var$2[1126] = 9;
    var$2[1127] = 221;
    var$2[1128] = 82;
    var$2[1129] = 7;
    var$2[1130] = 27;
    var$2[1131] = 0;
    var$2[1132] = 8;
    var$2[1133] = 110;
    var$2[1134] = 0;
    var$2[1135] = 8;
    var$2[1136] = 46;
    var$2[1137] = 0;
    var$2[1138] = 9;
    var$2[1139] = 189;
    var$2[1140] = 0;
    var$2[1141] = 8;
    var$2[1142] = 14;
    var$2[1143] = 0;
    var$2[1144] = 8;
    var$2[1145] = 142;
    var$2[1146] = 0;
    var$2[1147] = 8;
    var$2[1148] = 78;
    var$2[1149] = 0;
    var$2[1150] = 9;
    var$2[1151] = 253;
    var$2[1152] = 96;
    var$2[1153] = 7;
    var$2[1154] = 256;
    var$2[1155] = 0;
    var$2[1156] = 8;
    var$2[1157] = 81;
    var$2[1158] = 0;
    var$2[1159] = 8;
    var$2[1160] = 17;
    var$2[1161] = 85;
    var$2[1162] = 8;
    var$2[1163] = 131;
    var$2[1164] = 82;
    var$2[1165] = 7;
    var$2[1166] = 31;
    var$2[1167] = 0;
    var$2[1168] = 8;
    var$2[1169] = 113;
    var$2[1170] = 0;
    var$2[1171] = 8;
    var$2[1172] = 49;
    var$2[1173] = 0;
    var$2[1174] = 9;
    var$2[1175] = 195;
    var$2[1176] = 80;
    var$2[1177] = 7;
    var$2[1178] = 10;
    var$2[1179] = 0;
    var$2[1180] = 8;
    var$2[1181] = 97;
    var$2[1182] = 0;
    var$2[1183] = 8;
    var$2[1184] = 33;
    var$2[1185] = 0;
    var$2[1186] = 9;
    var$2[1187] = 163;
    var$2[1188] = 0;
    var$2[1189] = 8;
    var$2[1190] = 1;
    var$2[1191] = 0;
    var$2[1192] = 8;
    var$2[1193] = 129;
    var$2[1194] = 0;
    var$2[1195] = 8;
    var$2[1196] = 65;
    var$2[1197] = 0;
    var$2[1198] = 9;
    var$2[1199] = 227;
    var$2[1200] = 80;
    var$2[1201] = 7;
    var$2[1202] = 6;
    var$2[1203] = 0;
    var$2[1204] = 8;
    var$2[1205] = 89;
    var$2[1206] = 0;
    var$2[1207] = 8;
    var$2[1208] = 25;
    var$2[1209] = 0;
    var$2[1210] = 9;
    var$2[1211] = 147;
    var$2[1212] = 83;
    var$2[1213] = 7;
    var$2[1214] = 59;
    var$2[1215] = 0;
    var$2[1216] = 8;
    var$2[1217] = 121;
    var$2[1218] = 0;
    var$2[1219] = 8;
    var$2[1220] = 57;
    var$2[1221] = 0;
    var$2[1222] = 9;
    var$2[1223] = 211;
    var$2[1224] = 81;
    var$2[1225] = 7;
    var$2[1226] = 17;
    var$2[1227] = 0;
    var$2[1228] = 8;
    var$2[1229] = 105;
    var$2[1230] = 0;
    var$2[1231] = 8;
    var$2[1232] = 41;
    var$2[1233] = 0;
    var$2[1234] = 9;
    var$2[1235] = 179;
    var$2[1236] = 0;
    var$2[1237] = 8;
    var$2[1238] = 9;
    var$2[1239] = 0;
    var$2[1240] = 8;
    var$2[1241] = 137;
    var$2[1242] = 0;
    var$2[1243] = 8;
    var$2[1244] = 73;
    var$2[1245] = 0;
    var$2[1246] = 9;
    var$2[1247] = 243;
    var$2[1248] = 80;
    var$2[1249] = 7;
    var$2[1250] = 4;
    var$2[1251] = 0;
    var$2[1252] = 8;
    var$2[1253] = 85;
    var$2[1254] = 0;
    var$2[1255] = 8;
    var$2[1256] = 21;
    var$2[1257] = 80;
    var$2[1258] = 8;
    var$2[1259] = 258;
    var$2[1260] = 83;
    var$2[1261] = 7;
    var$2[1262] = 43;
    var$2[1263] = 0;
    var$2[1264] = 8;
    var$2[1265] = 117;
    var$2[1266] = 0;
    var$2[1267] = 8;
    var$2[1268] = 53;
    var$2[1269] = 0;
    var$2[1270] = 9;
    var$2[1271] = 203;
    var$2[1272] = 81;
    var$2[1273] = 7;
    var$2[1274] = 13;
    var$2[1275] = 0;
    var$2[1276] = 8;
    var$2[1277] = 101;
    var$2[1278] = 0;
    var$2[1279] = 8;
    var$2[1280] = 37;
    var$2[1281] = 0;
    var$2[1282] = 9;
    var$2[1283] = 171;
    var$2[1284] = 0;
    var$2[1285] = 8;
    var$2[1286] = 5;
    var$2[1287] = 0;
    var$2[1288] = 8;
    var$2[1289] = 133;
    var$2[1290] = 0;
    var$2[1291] = 8;
    var$2[1292] = 69;
    var$2[1293] = 0;
    var$2[1294] = 9;
    var$2[1295] = 235;
    var$2[1296] = 80;
    var$2[1297] = 7;
    var$2[1298] = 8;
    var$2[1299] = 0;
    var$2[1300] = 8;
    var$2[1301] = 93;
    var$2[1302] = 0;
    var$2[1303] = 8;
    var$2[1304] = 29;
    var$2[1305] = 0;
    var$2[1306] = 9;
    var$2[1307] = 155;
    var$2[1308] = 84;
    var$2[1309] = 7;
    var$2[1310] = 83;
    var$2[1311] = 0;
    var$2[1312] = 8;
    var$2[1313] = 125;
    var$2[1314] = 0;
    var$2[1315] = 8;
    var$2[1316] = 61;
    var$2[1317] = 0;
    var$2[1318] = 9;
    var$2[1319] = 219;
    var$2[1320] = 82;
    var$2[1321] = 7;
    var$2[1322] = 23;
    var$2[1323] = 0;
    var$2[1324] = 8;
    var$2[1325] = 109;
    var$2[1326] = 0;
    var$2[1327] = 8;
    var$2[1328] = 45;
    var$2[1329] = 0;
    var$2[1330] = 9;
    var$2[1331] = 187;
    var$2[1332] = 0;
    var$2[1333] = 8;
    var$2[1334] = 13;
    var$2[1335] = 0;
    var$2[1336] = 8;
    var$2[1337] = 141;
    var$2[1338] = 0;
    var$2[1339] = 8;
    var$2[1340] = 77;
    var$2[1341] = 0;
    var$2[1342] = 9;
    var$2[1343] = 251;
    var$2[1344] = 80;
    var$2[1345] = 7;
    var$2[1346] = 3;
    var$2[1347] = 0;
    var$2[1348] = 8;
    var$2[1349] = 83;
    var$2[1350] = 0;
    var$2[1351] = 8;
    var$2[1352] = 19;
    var$2[1353] = 85;
    var$2[1354] = 8;
    var$2[1355] = 195;
    var$2[1356] = 83;
    var$2[1357] = 7;
    var$2[1358] = 35;
    var$2[1359] = 0;
    var$2[1360] = 8;
    var$2[1361] = 115;
    var$2[1362] = 0;
    var$2[1363] = 8;
    var$2[1364] = 51;
    var$2[1365] = 0;
    var$2[1366] = 9;
    var$2[1367] = 199;
    var$2[1368] = 81;
    var$2[1369] = 7;
    var$2[1370] = 11;
    var$2[1371] = 0;
    var$2[1372] = 8;
    var$2[1373] = 99;
    var$2[1374] = 0;
    var$2[1375] = 8;
    var$2[1376] = 35;
    var$2[1377] = 0;
    var$2[1378] = 9;
    var$2[1379] = 167;
    var$2[1380] = 0;
    var$2[1381] = 8;
    var$2[1382] = 3;
    var$2[1383] = 0;
    var$2[1384] = 8;
    var$2[1385] = 131;
    var$2[1386] = 0;
    var$2[1387] = 8;
    var$2[1388] = 67;
    var$2[1389] = 0;
    var$2[1390] = 9;
    var$2[1391] = 231;
    var$2[1392] = 80;
    var$2[1393] = 7;
    var$2[1394] = 7;
    var$2[1395] = 0;
    var$2[1396] = 8;
    var$2[1397] = 91;
    var$2[1398] = 0;
    var$2[1399] = 8;
    var$2[1400] = 27;
    var$2[1401] = 0;
    var$2[1402] = 9;
    var$2[1403] = 151;
    var$2[1404] = 84;
    var$2[1405] = 7;
    var$2[1406] = 67;
    var$2[1407] = 0;
    var$2[1408] = 8;
    var$2[1409] = 123;
    var$2[1410] = 0;
    var$2[1411] = 8;
    var$2[1412] = 59;
    var$2[1413] = 0;
    var$2[1414] = 9;
    var$2[1415] = 215;
    var$2[1416] = 82;
    var$2[1417] = 7;
    var$2[1418] = 19;
    var$2[1419] = 0;
    var$2[1420] = 8;
    var$2[1421] = 107;
    var$2[1422] = 0;
    var$2[1423] = 8;
    var$2[1424] = 43;
    var$2[1425] = 0;
    var$2[1426] = 9;
    var$2[1427] = 183;
    var$2[1428] = 0;
    var$2[1429] = 8;
    var$2[1430] = 11;
    var$2[1431] = 0;
    var$2[1432] = 8;
    var$2[1433] = 139;
    var$2[1434] = 0;
    var$2[1435] = 8;
    var$2[1436] = 75;
    var$2[1437] = 0;
    var$2[1438] = 9;
    var$2[1439] = 247;
    var$2[1440] = 80;
    var$2[1441] = 7;
    var$2[1442] = 5;
    var$2[1443] = 0;
    var$2[1444] = 8;
    var$2[1445] = 87;
    var$2[1446] = 0;
    var$2[1447] = 8;
    var$2[1448] = 23;
    var$2[1449] = 192;
    var$2[1450] = 8;
    var$2[1451] = 0;
    var$2[1452] = 83;
    var$2[1453] = 7;
    var$2[1454] = 51;
    var$2[1455] = 0;
    var$2[1456] = 8;
    var$2[1457] = 119;
    var$2[1458] = 0;
    var$2[1459] = 8;
    var$2[1460] = 55;
    var$2[1461] = 0;
    var$2[1462] = 9;
    var$2[1463] = 207;
    var$2[1464] = 81;
    var$2[1465] = 7;
    var$2[1466] = 15;
    var$2[1467] = 0;
    var$2[1468] = 8;
    var$2[1469] = 103;
    var$2[1470] = 0;
    var$2[1471] = 8;
    var$2[1472] = 39;
    var$2[1473] = 0;
    var$2[1474] = 9;
    var$2[1475] = 175;
    var$2[1476] = 0;
    var$2[1477] = 8;
    var$2[1478] = 7;
    var$2[1479] = 0;
    var$2[1480] = 8;
    var$2[1481] = 135;
    var$2[1482] = 0;
    var$2[1483] = 8;
    var$2[1484] = 71;
    var$2[1485] = 0;
    var$2[1486] = 9;
    var$2[1487] = 239;
    var$2[1488] = 80;
    var$2[1489] = 7;
    var$2[1490] = 9;
    var$2[1491] = 0;
    var$2[1492] = 8;
    var$2[1493] = 95;
    var$2[1494] = 0;
    var$2[1495] = 8;
    var$2[1496] = 31;
    var$2[1497] = 0;
    var$2[1498] = 9;
    var$2[1499] = 159;
    var$2[1500] = 84;
    var$2[1501] = 7;
    var$2[1502] = 99;
    var$2[1503] = 0;
    var$2[1504] = 8;
    var$2[1505] = 127;
    var$2[1506] = 0;
    var$2[1507] = 8;
    var$2[1508] = 63;
    var$2[1509] = 0;
    var$2[1510] = 9;
    var$2[1511] = 223;
    var$2[1512] = 82;
    var$2[1513] = 7;
    var$2[1514] = 27;
    var$2[1515] = 0;
    var$2[1516] = 8;
    var$2[1517] = 111;
    var$2[1518] = 0;
    var$2[1519] = 8;
    var$2[1520] = 47;
    var$2[1521] = 0;
    var$2[1522] = 9;
    var$2[1523] = 191;
    var$2[1524] = 0;
    var$2[1525] = 8;
    var$2[1526] = 15;
    var$2[1527] = 0;
    var$2[1528] = 8;
    var$2[1529] = 143;
    var$2[1530] = 0;
    var$2[1531] = 8;
    var$2[1532] = 79;
    var$2[1533] = 0;
    var$2[1534] = 9;
    var$2[1535] = 255;
    cjj_InfTree_fixed_tl = var$1;
    var$1 = $rt_createIntArray(96);
    var$2 = var$1.data;
    var$2[0] = 80;
    var$2[1] = 5;
    var$2[2] = 1;
    var$2[3] = 87;
    var$2[4] = 5;
    var$2[5] = 257;
    var$2[6] = 83;
    var$2[7] = 5;
    var$2[8] = 17;
    var$2[9] = 91;
    var$2[10] = 5;
    var$2[11] = 4097;
    var$2[12] = 81;
    var$2[13] = 5;
    var$2[14] = 5;
    var$2[15] = 89;
    var$2[16] = 5;
    var$2[17] = 1025;
    var$2[18] = 85;
    var$2[19] = 5;
    var$2[20] = 65;
    var$2[21] = 93;
    var$2[22] = 5;
    var$2[23] = 16385;
    var$2[24] = 80;
    var$2[25] = 5;
    var$2[26] = 3;
    var$2[27] = 88;
    var$2[28] = 5;
    var$2[29] = 513;
    var$2[30] = 84;
    var$2[31] = 5;
    var$2[32] = 33;
    var$2[33] = 92;
    var$2[34] = 5;
    var$2[35] = 8193;
    var$2[36] = 82;
    var$2[37] = 5;
    var$2[38] = 9;
    var$2[39] = 90;
    var$2[40] = 5;
    var$2[41] = 2049;
    var$2[42] = 86;
    var$2[43] = 5;
    var$2[44] = 129;
    var$2[45] = 192;
    var$2[46] = 5;
    var$2[47] = 24577;
    var$2[48] = 80;
    var$2[49] = 5;
    var$2[50] = 2;
    var$2[51] = 87;
    var$2[52] = 5;
    var$2[53] = 385;
    var$2[54] = 83;
    var$2[55] = 5;
    var$2[56] = 25;
    var$2[57] = 91;
    var$2[58] = 5;
    var$2[59] = 6145;
    var$2[60] = 81;
    var$2[61] = 5;
    var$2[62] = 7;
    var$2[63] = 89;
    var$2[64] = 5;
    var$2[65] = 1537;
    var$2[66] = 85;
    var$2[67] = 5;
    var$2[68] = 97;
    var$2[69] = 93;
    var$2[70] = 5;
    var$2[71] = 24577;
    var$2[72] = 80;
    var$2[73] = 5;
    var$2[74] = 4;
    var$2[75] = 88;
    var$2[76] = 5;
    var$2[77] = 769;
    var$2[78] = 84;
    var$2[79] = 5;
    var$2[80] = 49;
    var$2[81] = 92;
    var$2[82] = 5;
    var$2[83] = 12289;
    var$2[84] = 82;
    var$2[85] = 5;
    var$2[86] = 13;
    var$2[87] = 90;
    var$2[88] = 5;
    var$2[89] = 3073;
    var$2[90] = 86;
    var$2[91] = 5;
    var$2[92] = 193;
    var$2[93] = 192;
    var$2[94] = 5;
    var$2[95] = 24577;
    cjj_InfTree_fixed_td = var$1;
    var$1 = $rt_createIntArray(31);
    var$2 = var$1.data;
    var$2[0] = 3;
    var$2[1] = 4;
    var$2[2] = 5;
    var$2[3] = 6;
    var$2[4] = 7;
    var$2[5] = 8;
    var$2[6] = 9;
    var$2[7] = 10;
    var$2[8] = 11;
    var$2[9] = 13;
    var$2[10] = 15;
    var$2[11] = 17;
    var$2[12] = 19;
    var$2[13] = 23;
    var$2[14] = 27;
    var$2[15] = 31;
    var$2[16] = 35;
    var$2[17] = 43;
    var$2[18] = 51;
    var$2[19] = 59;
    var$2[20] = 67;
    var$2[21] = 83;
    var$2[22] = 99;
    var$2[23] = 115;
    var$2[24] = 131;
    var$2[25] = 163;
    var$2[26] = 195;
    var$2[27] = 227;
    var$2[28] = 258;
    var$2[29] = 0;
    var$2[30] = 0;
    cjj_InfTree_cplens = var$1;
    var$1 = $rt_createIntArray(31);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 0;
    var$2[5] = 0;
    var$2[6] = 0;
    var$2[7] = 0;
    var$2[8] = 1;
    var$2[9] = 1;
    var$2[10] = 1;
    var$2[11] = 1;
    var$2[12] = 2;
    var$2[13] = 2;
    var$2[14] = 2;
    var$2[15] = 2;
    var$2[16] = 3;
    var$2[17] = 3;
    var$2[18] = 3;
    var$2[19] = 3;
    var$2[20] = 4;
    var$2[21] = 4;
    var$2[22] = 4;
    var$2[23] = 4;
    var$2[24] = 5;
    var$2[25] = 5;
    var$2[26] = 5;
    var$2[27] = 5;
    var$2[28] = 0;
    var$2[29] = 112;
    var$2[30] = 112;
    cjj_InfTree_cplext = var$1;
    var$1 = $rt_createIntArray(30);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 2;
    var$2[2] = 3;
    var$2[3] = 4;
    var$2[4] = 5;
    var$2[5] = 7;
    var$2[6] = 9;
    var$2[7] = 13;
    var$2[8] = 17;
    var$2[9] = 25;
    var$2[10] = 33;
    var$2[11] = 49;
    var$2[12] = 65;
    var$2[13] = 97;
    var$2[14] = 129;
    var$2[15] = 193;
    var$2[16] = 257;
    var$2[17] = 385;
    var$2[18] = 513;
    var$2[19] = 769;
    var$2[20] = 1025;
    var$2[21] = 1537;
    var$2[22] = 2049;
    var$2[23] = 3073;
    var$2[24] = 4097;
    var$2[25] = 6145;
    var$2[26] = 8193;
    var$2[27] = 12289;
    var$2[28] = 16385;
    var$2[29] = 24577;
    cjj_InfTree_cpdist = var$1;
    var$1 = $rt_createIntArray(30);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 1;
    var$2[5] = 1;
    var$2[6] = 2;
    var$2[7] = 2;
    var$2[8] = 3;
    var$2[9] = 3;
    var$2[10] = 4;
    var$2[11] = 4;
    var$2[12] = 5;
    var$2[13] = 5;
    var$2[14] = 6;
    var$2[15] = 6;
    var$2[16] = 7;
    var$2[17] = 7;
    var$2[18] = 8;
    var$2[19] = 8;
    var$2[20] = 9;
    var$2[21] = 9;
    var$2[22] = 10;
    var$2[23] = 10;
    var$2[24] = 11;
    var$2[25] = 11;
    var$2[26] = 12;
    var$2[27] = 12;
    var$2[28] = 13;
    var$2[29] = 13;
    cjj_InfTree_cpdext = var$1;
}
function cjj_InfCodes() {
    var a = this; jl_Object.call(a);
    a.$mode2 = 0;
    a.$len = 0;
    a.$tree = null;
    a.$tree_index = 0;
    a.$need0 = 0;
    a.$lit = 0;
    a.$get11 = 0;
    a.$dist = 0;
    a.$lbits = 0;
    a.$dbits = 0;
    a.$ltree = null;
    a.$ltree_index = 0;
    a.$dtree = null;
    a.$dtree_index = 0;
    a.$z2 = null;
    a.$s = null;
}
var cjj_InfCodes_inflate_mask = null;
function cjj_InfCodes_init($this, $bl, $bd, $tl, $tl_index, $td, $td_index) {
    $this.$mode2 = 0;
    $this.$lbits = $bl << 24 >> 24;
    $this.$dbits = $bd << 24 >> 24;
    $this.$ltree = $tl;
    $this.$ltree_index = $tl_index;
    $this.$dtree = $td;
    $this.$dtree_index = $td_index;
    $this.$tree = null;
}
function cjj_InfCodes_proc($this, $r) {
    var var$2, $n, var$4, var$5, $q, $m, $f, var$9, var$10, $j, $tindex, $e, var$14;
    var$2 = $this.$z2.$next_in_index;
    $n = $this.$z2.$avail_in;
    var$4 = $this.$s.$bitb;
    var$5 = $this.$s.$bitk;
    $q = $this.$s.$write5;
    $m = $q >= $this.$s.$read3 ? $this.$s.$end1 - $q | 0 : ($this.$s.$read3 - $q | 0) - 1 | 0;
    a: {
        b: while (true) {
            c: {
                d: {
                    e: {
                        f: {
                            g: {
                                switch ($this.$mode2) {
                                    case 0:
                                        break f;
                                    case 2:
                                        $f = $this.$get11;
                                        while (var$5 < $f) {
                                            if (!$n) {
                                                $this.$s.$bitb = var$4;
                                                $this.$s.$bitk = var$5;
                                                $this.$z2.$avail_in = $n;
                                                var$9 = $this.$z2;
                                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                                $this.$z2.$next_in_index = var$2;
                                                $this.$s.$write5 = $q;
                                                return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$10 = $this.$z2.$next_in.data;
                                            $j = var$2 + 1 | 0;
                                            var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                            var$5 = var$5 + 8 | 0;
                                            var$2 = $j;
                                        }
                                        $this.$len = $this.$len + (var$4 & cjj_InfCodes_inflate_mask.data[$f]) | 0;
                                        var$4 = var$4 >> $f;
                                        var$5 = var$5 - $f | 0;
                                        $this.$need0 = $this.$dbits;
                                        $this.$tree = $this.$dtree;
                                        $this.$tree_index = $this.$dtree_index;
                                        $this.$mode2 = 3;
                                        break g;
                                    case 4:
                                        $f = $this.$get11;
                                        while (var$5 < $f) {
                                            if (!$n) {
                                                $this.$s.$bitb = var$4;
                                                $this.$s.$bitk = var$5;
                                                $this.$z2.$avail_in = $n;
                                                var$9 = $this.$z2;
                                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                                $this.$z2.$next_in_index = var$2;
                                                $this.$s.$write5 = $q;
                                                return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                            }
                                            $r = 0;
                                            $n = $n + (-1) | 0;
                                            var$10 = $this.$z2.$next_in.data;
                                            $j = var$2 + 1 | 0;
                                            var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                            var$5 = var$5 + 8 | 0;
                                            var$2 = $j;
                                        }
                                        $this.$dist = $this.$dist + (var$4 & cjj_InfCodes_inflate_mask.data[$f]) | 0;
                                        var$4 = var$4 >> $f;
                                        var$5 = var$5 - $f | 0;
                                        $this.$mode2 = 5;
                                        break c;
                                    case 6:
                                        break d;
                                    case 7:
                                        if (var$5 > 7) {
                                            var$5 = var$5 + (-8) | 0;
                                            $n = $n + 1 | 0;
                                            var$2 = var$2 + (-1) | 0;
                                        }
                                        $this.$s.$write5 = $q;
                                        $r = cjj_InfBlocks_inflate_flush($this.$s, $r);
                                        $q = $this.$s.$write5;
                                        if ($this.$s.$read3 != $this.$s.$write5) {
                                            $this.$s.$bitb = var$4;
                                            $this.$s.$bitk = var$5;
                                            $this.$z2.$avail_in = $n;
                                            var$9 = $this.$z2;
                                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                            $this.$z2.$next_in_index = var$2;
                                            $this.$s.$write5 = $q;
                                            return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                        }
                                        $this.$mode2 = 8;
                                        break a;
                                    case 9:
                                        $this.$s.$bitb = var$4;
                                        $this.$s.$bitk = var$5;
                                        $this.$z2.$avail_in = $n;
                                        var$9 = $this.$z2;
                                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                        $this.$z2.$next_in_index = var$2;
                                        $this.$s.$write5 = $q;
                                        return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                                    case 1:
                                        break e;
                                    case 3:
                                        break;
                                    case 5:
                                        break c;
                                    case 8:
                                        break a;
                                    default:
                                        $this.$s.$bitb = var$4;
                                        $this.$s.$bitk = var$5;
                                        $this.$z2.$avail_in = $n;
                                        var$9 = $this.$z2;
                                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                        $this.$z2.$next_in_index = var$2;
                                        $this.$s.$write5 = $q;
                                        return cjj_InfBlocks_inflate_flush($this.$s, (-2));
                                }
                            }
                            $j = $this.$need0;
                            while (var$5 < $j) {
                                if (!$n) {
                                    $this.$s.$bitb = var$4;
                                    $this.$s.$bitk = var$5;
                                    $this.$z2.$avail_in = $n;
                                    var$9 = $this.$z2;
                                    var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                    $this.$z2.$next_in_index = var$2;
                                    $this.$s.$write5 = $q;
                                    return cjj_InfBlocks_inflate_flush($this.$s, $r);
                                }
                                $r = 0;
                                $n = $n + (-1) | 0;
                                var$10 = $this.$z2.$next_in.data;
                                $f = var$2 + 1 | 0;
                                var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                                var$5 = var$5 + 8 | 0;
                                var$2 = $f;
                            }
                            $tindex = ($this.$tree_index + (var$4 & cjj_InfCodes_inflate_mask.data[$j]) | 0) * 3 | 0;
                            var$10 = $this.$tree.data;
                            $f = $tindex + 1 | 0;
                            var$4 = var$4 >> var$10[$f];
                            var$5 = var$5 - $this.$tree.data[$f] | 0;
                            $j = $this.$tree.data[$tindex];
                            if ($j & 16) {
                                $this.$get11 = $j & 15;
                                $this.$dist = $this.$tree.data[$tindex + 2 | 0];
                                $this.$mode2 = 4;
                                continue b;
                            }
                            if ($j & 64) {
                                $this.$mode2 = 9;
                                $this.$z2.$msg = $rt_s(596);
                                $this.$s.$bitb = var$4;
                                $this.$s.$bitk = var$5;
                                $this.$z2.$avail_in = $n;
                                var$9 = $this.$z2;
                                var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                                $this.$z2.$next_in_index = var$2;
                                $this.$s.$write5 = $q;
                                return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                            }
                            $this.$need0 = $j;
                            $this.$tree_index = ($tindex / 3 | 0) + $this.$tree.data[$tindex + 2 | 0] | 0;
                            continue b;
                        }
                        if ($m >= 258 && $n >= 10) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z2.$avail_in = $n;
                            var$9 = $this.$z2;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                            $this.$z2.$next_in_index = var$2;
                            $this.$s.$write5 = $q;
                            $r = cjj_InfCodes_inflate_fast($this, $this.$lbits, $this.$dbits, $this.$ltree, $this.$ltree_index, $this.$dtree, $this.$dtree_index, $this.$s, $this.$z2);
                            var$2 = $this.$z2.$next_in_index;
                            $n = $this.$z2.$avail_in;
                            var$4 = $this.$s.$bitb;
                            var$5 = $this.$s.$bitk;
                            $q = $this.$s.$write5;
                            $m = $q >= $this.$s.$read3 ? $this.$s.$end1 - $q | 0 : ($this.$s.$read3 - $q | 0) - 1 | 0;
                            if ($r) {
                                $this.$mode2 = $r != 1 ? 9 : 7;
                                continue b;
                            }
                        }
                        $this.$need0 = $this.$lbits;
                        $this.$tree = $this.$ltree;
                        $this.$tree_index = $this.$ltree_index;
                        $this.$mode2 = 1;
                    }
                    $j = $this.$need0;
                    while (var$5 < $j) {
                        if (!$n)
                            break b;
                        $r = 0;
                        $n = $n + (-1) | 0;
                        var$10 = $this.$z2.$next_in.data;
                        $f = var$2 + 1 | 0;
                        var$4 = var$4 | (var$10[var$2] & 255) << var$5;
                        var$5 = var$5 + 8 | 0;
                        var$2 = $f;
                    }
                    $tindex = ($this.$tree_index + (var$4 & cjj_InfCodes_inflate_mask.data[$j]) | 0) * 3 | 0;
                    var$10 = $this.$tree.data;
                    $f = $tindex + 1 | 0;
                    var$4 = var$4 >>> var$10[$f];
                    var$5 = var$5 - $this.$tree.data[$f] | 0;
                    $e = $this.$tree.data[$tindex];
                    if (!$e) {
                        $this.$lit = $this.$tree.data[$tindex + 2 | 0];
                        $this.$mode2 = 6;
                        continue b;
                    }
                    if ($e & 16) {
                        $this.$get11 = $e & 15;
                        $this.$len = $this.$tree.data[$tindex + 2 | 0];
                        $this.$mode2 = 2;
                        continue b;
                    }
                    if (!($e & 64)) {
                        $this.$need0 = $e;
                        $this.$tree_index = ($tindex / 3 | 0) + $this.$tree.data[$tindex + 2 | 0] | 0;
                        continue b;
                    }
                    if (!($e & 32)) {
                        $this.$mode2 = 9;
                        $this.$z2.$msg = $rt_s(597);
                        $this.$s.$bitb = var$4;
                        $this.$s.$bitk = var$5;
                        $this.$z2.$avail_in = $n;
                        var$9 = $this.$z2;
                        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                        $this.$z2.$next_in_index = var$2;
                        $this.$s.$write5 = $q;
                        return cjj_InfBlocks_inflate_flush($this.$s, (-3));
                    }
                    $this.$mode2 = 7;
                    continue b;
                }
                if ($m)
                    $f = $q;
                else {
                    if ($q != $this.$s.$end1)
                        $f = $q;
                    else if (!$this.$s.$read3)
                        $f = $q;
                    else {
                        $f = 0;
                        $m = $f >= $this.$s.$read3 ? $this.$s.$end1 - $f | 0 : ($this.$s.$read3 - $f | 0) - 1 | 0;
                    }
                    if (!$m) {
                        $this.$s.$write5 = $f;
                        $r = cjj_InfBlocks_inflate_flush($this.$s, $r);
                        $f = $this.$s.$write5;
                        $m = $f >= $this.$s.$read3 ? $this.$s.$end1 - $f | 0 : ($this.$s.$read3 - $f | 0) - 1 | 0;
                        if ($f == $this.$s.$end1 && $this.$s.$read3) {
                            $f = 0;
                            $m = $f >= $this.$s.$read3 ? $this.$s.$end1 - $f | 0 : ($this.$s.$read3 - $f | 0) - 1 | 0;
                        }
                        if (!$m) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z2.$avail_in = $n;
                            var$9 = $this.$z2;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                            $this.$z2.$next_in_index = var$2;
                            $this.$s.$write5 = $f;
                            return cjj_InfBlocks_inflate_flush($this.$s, $r);
                        }
                    }
                }
                $r = 0;
                var$10 = $this.$s.$window.data;
                $q = $f + 1 | 0;
                var$10[$f] = $this.$lit << 24 >> 24;
                $m = $m + (-1) | 0;
                $this.$mode2 = 0;
                continue b;
            }
            $f = $q - $this.$dist | 0;
            while ($f < 0) {
                $f = $f + $this.$s.$end1 | 0;
            }
            while ($this.$len) {
                if ($m)
                    $j = $q;
                else {
                    if ($q != $this.$s.$end1)
                        $j = $q;
                    else if (!$this.$s.$read3)
                        $j = $q;
                    else {
                        $j = 0;
                        $m = $j >= $this.$s.$read3 ? $this.$s.$end1 - $j | 0 : ($this.$s.$read3 - $j | 0) - 1 | 0;
                    }
                    if (!$m) {
                        $this.$s.$write5 = $j;
                        $r = cjj_InfBlocks_inflate_flush($this.$s, $r);
                        $j = $this.$s.$write5;
                        $m = $j >= $this.$s.$read3 ? $this.$s.$end1 - $j | 0 : ($this.$s.$read3 - $j | 0) - 1 | 0;
                        if ($j == $this.$s.$end1 && $this.$s.$read3) {
                            $j = 0;
                            $m = $j >= $this.$s.$read3 ? $this.$s.$end1 - $j | 0 : ($this.$s.$read3 - $j | 0) - 1 | 0;
                        }
                        if (!$m) {
                            $this.$s.$bitb = var$4;
                            $this.$s.$bitk = var$5;
                            $this.$z2.$avail_in = $n;
                            var$9 = $this.$z2;
                            var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
                            $this.$z2.$next_in_index = var$2;
                            $this.$s.$write5 = $j;
                            return cjj_InfBlocks_inflate_flush($this.$s, $r);
                        }
                    }
                }
                var$14 = $this.$s.$window.data;
                $q = $j + 1 | 0;
                var$10 = $this.$s.$window.data;
                $tindex = $f + 1 | 0;
                var$14[$j] = var$10[$f];
                $m = $m + (-1) | 0;
                $f = $tindex == $this.$s.$end1 ? 0 : $tindex;
                $this.$len = $this.$len - 1 | 0;
            }
            $this.$mode2 = 0;
        }
        $this.$s.$bitb = var$4;
        $this.$s.$bitk = var$5;
        $this.$z2.$avail_in = $n;
        var$9 = $this.$z2;
        var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
        $this.$z2.$next_in_index = var$2;
        $this.$s.$write5 = $q;
        return cjj_InfBlocks_inflate_flush($this.$s, $r);
    }
    $this.$s.$bitb = var$4;
    $this.$s.$bitk = var$5;
    $this.$z2.$avail_in = $n;
    var$9 = $this.$z2;
    var$9.$total_in = Long_add(var$9.$total_in, Long_fromInt(var$2 - $this.$z2.$next_in_index | 0));
    $this.$z2.$next_in_index = var$2;
    $this.$s.$write5 = $q;
    return cjj_InfBlocks_inflate_flush($this.$s, 1);
}
function cjj_InfCodes_free($this, $z) {
    return;
}
function cjj_InfCodes_inflate_fast($this, $bl, $bd, $tl, $tl_index, $td, $td_index, $s, $z) {
    var $p, $n, $b, $k, $q, $m, $ml, $md, var$17, var$18, $t, $tp_index_t_3, $c, $r, $d;
    $p = $z.$next_in_index;
    $n = $z.$avail_in;
    $b = $s.$bitb;
    $k = $s.$bitk;
    $q = $s.$write5;
    $m = $q >= $s.$read3 ? $s.$end1 - $q | 0 : ($s.$read3 - $q | 0) - 1 | 0;
    $ml = cjj_InfCodes_inflate_mask.data[$bl];
    $md = cjj_InfCodes_inflate_mask.data[$bd];
    while (true) {
        if ($k < 20) {
            $n = $n + (-1) | 0;
            var$17 = $z.$next_in.data;
            $bl = $p + 1 | 0;
            $b = $b | (var$17[$p] & 255) << $k;
            $k = $k + 8 | 0;
            $p = $bl;
            continue;
        }
        a: {
            var$18 = $tl.data;
            $t = $b & $ml;
            $tp_index_t_3 = ($tl_index + $t | 0) * 3 | 0;
            $bd = var$18[$tp_index_t_3];
            if (!$bd) {
                $bl = $tp_index_t_3 + 1 | 0;
                $b = $b >> var$18[$bl];
                $k = $k - var$18[$bl] | 0;
                var$17 = $s.$window.data;
                $bd = $q + 1 | 0;
                var$17[$q] = var$18[$tp_index_t_3 + 2 | 0] << 24 >> 24;
                $m = $m + (-1) | 0;
            } else {
                while (true) {
                    $bl = $tp_index_t_3 + 1 | 0;
                    $b = $b >> var$18[$bl];
                    $k = $k - var$18[$bl] | 0;
                    if ($bd & 16) {
                        $bl = $bd & 15;
                        $c = var$18[$tp_index_t_3 + 2 | 0] + ($b & cjj_InfCodes_inflate_mask.data[$bl]) | 0;
                        $r = $b >> $bl;
                        $k = $k - $bl | 0;
                        while ($k < 15) {
                            $n = $n + (-1) | 0;
                            var$17 = $z.$next_in.data;
                            $bl = $p + 1 | 0;
                            $r = $r | (var$17[$p] & 255) << $k;
                            $k = $k + 8 | 0;
                            $p = $bl;
                        }
                        var$17 = $td.data;
                        $bl = $r & $md;
                        $d = ($td_index + $bl | 0) * 3 | 0;
                        $bd = var$17[$d];
                        while (true) {
                            $b = $d + 1 | 0;
                            $r = $r >> var$17[$b];
                            $k = $k - var$17[$b] | 0;
                            if ($bd & 16)
                                break;
                            if ($bd & 64) {
                                $z.$msg = $rt_s(596);
                                $bl = $z.$avail_in - $n | 0;
                                $bd = $k >> 3;
                                if ($bd < $bl)
                                    $bl = $bd;
                                $bd = $n + $bl | 0;
                                $tl_index = $p - $bl | 0;
                                $bl = $k - ($bl << 3) | 0;
                                $s.$bitb = $r;
                                $s.$bitk = $bl;
                                $z.$avail_in = $bd;
                                $z.$total_in = Long_add($z.$total_in, Long_fromInt($tl_index - $z.$next_in_index | 0));
                                $z.$next_in_index = $tl_index;
                                $s.$write5 = $q;
                                return (-3);
                            }
                            $bl = ($bl + var$17[$d + 2 | 0] | 0) + ($r & cjj_InfCodes_inflate_mask.data[$bd]) | 0;
                            $d = ($td_index + $bl | 0) * 3 | 0;
                            $bd = var$17[$d];
                        }
                        $bl = $bd & 15;
                        while ($k < $bl) {
                            $n = $n + (-1) | 0;
                            var$18 = $z.$next_in.data;
                            $bd = $p + 1 | 0;
                            $r = $r | (var$18[$p] & 255) << $k;
                            $k = $k + 8 | 0;
                            $p = $bd;
                        }
                        $d = var$17[$d + 2 | 0] + ($r & cjj_InfCodes_inflate_mask.data[$bl]) | 0;
                        $b = $r >> $bl;
                        $k = $k - $bl | 0;
                        $m = $m - $c | 0;
                        if ($q >= $d) {
                            $r = $q - $d | 0;
                            $bl = $q - $r | 0;
                            if ($bl > 0 && 2 > $bl) {
                                var$18 = $s.$window.data;
                                $bl = $q + 1 | 0;
                                var$17 = $s.$window.data;
                                $bd = $r + 1 | 0;
                                var$18[$q] = var$17[$r];
                                var$18 = $s.$window.data;
                                $q = $bl + 1 | 0;
                                var$17 = $s.$window.data;
                                $r = $bd + 1 | 0;
                                var$18[$bl] = var$17[$bd];
                                $c = $c + (-2) | 0;
                            } else {
                                jl_System_arraycopy($s.$window, $r, $s.$window, $q, 2);
                                $q = $q + 2 | 0;
                                $r = $r + 2 | 0;
                                $c = $c + (-2) | 0;
                            }
                        } else {
                            $r = $q - $d | 0;
                            while (true) {
                                $r = $r + $s.$end1 | 0;
                                if ($r >= 0)
                                    break;
                            }
                            $bl = $s.$end1 - $r | 0;
                            if ($c > $bl) {
                                $c = $c - $bl | 0;
                                $bd = $q - $r | 0;
                                if ($bd > 0 && $bl > $bd) {
                                    $bd = $q;
                                    while (true) {
                                        var$18 = $s.$window.data;
                                        $q = $bd + 1 | 0;
                                        var$17 = $s.$window.data;
                                        $d = $r + 1 | 0;
                                        var$18[$bd] = var$17[$r];
                                        $bl = $bl + (-1) | 0;
                                        if (!$bl)
                                            break;
                                        $bd = $q;
                                        $r = $d;
                                    }
                                } else {
                                    jl_System_arraycopy($s.$window, $r, $s.$window, $q, $bl);
                                    $q = $q + $bl | 0;
                                }
                                $r = 0;
                            }
                        }
                        $bl = $q - $r | 0;
                        if ($bl > 0 && $c > $bl) {
                            while (true) {
                                var$18 = $s.$window.data;
                                $bd = $q + 1 | 0;
                                var$17 = $s.$window.data;
                                $bl = $r + 1 | 0;
                                var$18[$q] = var$17[$r];
                                $c = $c + (-1) | 0;
                                if (!$c)
                                    break;
                                $q = $bd;
                                $r = $bl;
                            }
                            break a;
                        }
                        jl_System_arraycopy($s.$window, $r, $s.$window, $q, $c);
                        $bd = $q + $c | 0;
                        break a;
                    }
                    if ($bd & 64) {
                        if ($bd & 32) {
                            $c = $z.$avail_in - $n | 0;
                            $bl = $k >> 3;
                            if ($bl < $c)
                                $c = $bl;
                            $bl = $n + $c | 0;
                            $bd = $p - $c | 0;
                            $tl_index = $k - ($c << 3) | 0;
                            $s.$bitb = $b;
                            $s.$bitk = $tl_index;
                            $z.$avail_in = $bl;
                            $z.$total_in = Long_add($z.$total_in, Long_fromInt($bd - $z.$next_in_index | 0));
                            $z.$next_in_index = $bd;
                            $s.$write5 = $q;
                            return 1;
                        }
                        $z.$msg = $rt_s(597);
                        $c = $z.$avail_in - $n | 0;
                        $bl = $k >> 3;
                        if ($bl < $c)
                            $c = $bl;
                        $tl_index = $n + $c | 0;
                        $bl = $p - $c | 0;
                        $bd = $k - ($c << 3) | 0;
                        $s.$bitb = $b;
                        $s.$bitk = $bd;
                        $z.$avail_in = $tl_index;
                        $z.$total_in = Long_add($z.$total_in, Long_fromInt($bl - $z.$next_in_index | 0));
                        $z.$next_in_index = $bl;
                        $s.$write5 = $q;
                        return (-3);
                    }
                    $t = ($t + var$18[$tp_index_t_3 + 2 | 0] | 0) + ($b & cjj_InfCodes_inflate_mask.data[$bd]) | 0;
                    $tp_index_t_3 = ($tl_index + $t | 0) * 3 | 0;
                    $bd = var$18[$tp_index_t_3];
                    if (!$bd)
                        break;
                }
                $bl = $tp_index_t_3 + 1 | 0;
                $b = $b >> var$18[$bl];
                $k = $k - var$18[$bl] | 0;
                var$17 = $s.$window.data;
                $bd = $q + 1 | 0;
                var$17[$q] = var$18[$tp_index_t_3 + 2 | 0] << 24 >> 24;
                $m = $m + (-1) | 0;
            }
        }
        if ($m < 258)
            break;
        if ($n < 10)
            break;
        $q = $bd;
    }
    $c = $z.$avail_in - $n | 0;
    $bl = $k >> 3;
    if ($bl < $c)
        $c = $bl;
    $bl = $n + $c | 0;
    $tl_index = $p - $c | 0;
    $td_index = $k - ($c << 3) | 0;
    $s.$bitb = $b;
    $s.$bitk = $td_index;
    $z.$avail_in = $bl;
    $z.$total_in = Long_add($z.$total_in, Long_fromInt($tl_index - $z.$next_in_index | 0));
    $z.$next_in_index = $tl_index;
    $s.$write5 = $bd;
    return 0;
}
function cjj_InfCodes__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(17);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 3;
    var$2[3] = 7;
    var$2[4] = 15;
    var$2[5] = 31;
    var$2[6] = 63;
    var$2[7] = 127;
    var$2[8] = 255;
    var$2[9] = 511;
    var$2[10] = 1023;
    var$2[11] = 2047;
    var$2[12] = 4095;
    var$2[13] = 8191;
    var$2[14] = 16383;
    var$2[15] = 32767;
    var$2[16] = 65535;
    cjj_InfCodes_inflate_mask = var$1;
}
function nlea_EaglerAdapterImpl2$BufferGL() {
    jl_Object.call(this);
    this.$obj1 = null;
}
function nlea_EaglerAdapterImpl2$BufferArrayGL() {
    var a = this; jl_Object.call(a);
    a.$obj3 = null;
    a.$isQuadBufferBound = 0;
}
function jn_IntBuffer() {
    jn_Buffer.call(this);
}
function jn_IntBuffer_wrap($array) {
    var var$2, var$3;
    var$2 = $array.data.length;
    var$3 = new jn_IntBufferOverArray;
    jn_IntBufferImpl__init_(var$3, var$2, 0, 0 + var$2 | 0);
    var$3.$start5 = 0;
    var$3.$readOnly2 = 0;
    var$3.$array4 = $array;
    return var$3;
}
function jn_IntBuffer_clear0($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_IntBuffer_flip0($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_IntBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_IntBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function nms_Render() {
    var a = this; jl_Object.call(a);
    a.$renderManager = null;
    a.$unusedModelBiped = null;
    a.$unusedRenderBlocks = null;
    a.$field_9246_c = 0.0;
    a.$field_194_c = 0.0;
}
function nms_Render__init_0() {
    var var_0 = new nms_Render();
    nms_Render__init_(var_0);
    return var_0;
}
function nms_Render__init_($this) {
    $this.$unusedModelBiped = nms_ModelBiped__init_1();
    $this.$unusedRenderBlocks = nms_RenderBlocks__init_0();
    $this.$field_9246_c = 0.0;
    $this.$field_194_c = 1.0;
}
function nms_Render_loadTexture($this, $var1) {
    var $var2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var2 = $this.$renderManager.$renderEngine0;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        var$3 = $tmp;
        nms_RenderEngine_bindTexture($var2, var$3);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_Render_func_140_a($this, $var1, $var2) {
    var $var3, var$4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = $this.$renderManager.$renderEngine0;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var3, $var2);
        if ($rt_suspending()) {
            break main;
        }
        var$4 = $tmp;
        nms_RenderEngine_bindTexture($var3, var$4);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, $ptr);
}
function nms_Render_renderEntityOnFire($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17, $var18, $var20, $var21, var$18, var$19, var$20, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$20 = $thread.pop();var$19 = $thread.pop();var$18 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var16 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glDisable(2896);
        nms_Block_$callClinit();
        $var9 = nms_Block_fire.$blockIndexInTexture;
        $var10 = ($var9 & 15) << 4;
        $var11 = $var9 & 240;
        $var8 = $var10;
        $var12 = $var8 / 256.0;
        $var13 = ($var8 + 15.989999771118164) / 256.0;
        $var8 = $var11;
        $var14 = $var8 / 256.0;
        $var15 = ($var8 + 15.989999771118164) / 256.0;
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        $var16 = $var1.$width0 * 1.399999976158142;
        olo_EaglerAdapterGL30_glScalef($var16, $var16, $var16);
        $var17 = $rt_s(193);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var17);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var17 = nms_Tessellator_instance;
        $var18 = 1.0;
        $var20 = 0.0;
        $var21 = $var1.$height / $var1.$width0;
        olo_EaglerAdapterGL30_glRotatef( -$this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-0.4000000059604645) + ($var21 | 0) * 0.019999999552965164);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_Tessellator_startDrawingQuads($var17);
        $var6 = $var13;
        var$18 = $var15;
        var$19 = $var12;
        var$20 = $var14;
        while ($var21 > 0.0) {
            $var2 = $var18 - 0.5;
            $var4 = 0.0 - $var20;
            nms_Tessellator_addVertexWithUV($var17, $var2, $var4, 0.0, $var6, var$18);
            nms_Tessellator_addVertexWithUV($var17, (-0.5), $var4, 0.0, var$19, var$18);
            $var4 = 1.399999976158142 - $var20;
            nms_Tessellator_addVertexWithUV($var17, (-0.5), $var4, 0.0, var$19, var$20);
            nms_Tessellator_addVertexWithUV($var17, $var2, $var4, 0.0, $var6, var$20);
            $var21 = $var21 - 1.0;
            $var20 = $var20 - 1.0;
            $var18 = $var18 * 0.8999999761581421;
            olo_EaglerAdapterGL30_glTranslatef(0.0, 0.0, (-0.03999999910593033));
        }
        nms_Tessellator_draw($var17);
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glEnable(2896);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17, $var18, $var20, $var21, var$18, var$19, var$20, $ptr);
}
function nms_Render_renderShadow($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var31, $var35, $var11, $var12, $var15, $var13, $var17, var$15, $var32, $var20, $var21, $var22, $var23, $var24, $var25, $var27, $var29, var$25, $var33, $var34, var$28, var$29, var$30, var$31, var$32, var$33, var$34, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$34 = $thread.pop();var$33 = $thread.pop();var$32 = $thread.pop();var$31 = $thread.pop();var$30 = $thread.pop();var$29 = $thread.pop();var$28 = $thread.pop();$var34 = $thread.pop();$var33 = $thread.pop();var$25 = $thread.pop();$var29 = $thread.pop();$var27 = $thread.pop();$var25 = $thread.pop();$var24 = $thread.pop();$var23 = $thread.pop();$var22 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();$var32 = $thread.pop();var$15 = $thread.pop();$var17 = $thread.pop();$var13
        = $thread.pop();$var15 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var35 = $thread.pop();$var31 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        $var10 = $this.$renderManager.$renderEngine0;
        $var31 = $rt_s(598);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var10, $var31);
        if ($rt_suspending()) {
            break main;
        }
        $var35 = $tmp;
        nms_RenderEngine_bindTexture($var10, $var35);
        $var11 = nms_Render_getWorldFromRenderManager($this);
        olo_EaglerAdapterGL30_glDepthMask(0);
        $var12 = $this.$field_9246_c;
        $var15 = $var1.$lastTickPosX;
        $var13 = $var1.$posX - $var1.$lastTickPosX;
        $var17 = $var9;
        $var13 = $var15 + $var13 * $var17;
        $var15 = $var1.$lastTickPosY + ($var1.$posY - $var1.$lastTickPosY) * $var17 + $var1.$func_392_h_();
        $var17 = $var1.$lastTickPosZ + ($var1.$posZ - $var1.$lastTickPosZ) * $var17;
        var$15 = $var12;
        $var32 = nms_MathHelper_floor_double($var13 - var$15);
        $var20 = nms_MathHelper_floor_double($var13 + var$15);
        $var21 = nms_MathHelper_floor_double($var15 - var$15);
        $var22 = nms_MathHelper_floor_double($var15);
        $var23 = nms_MathHelper_floor_double($var17 - var$15);
        $var24 = nms_MathHelper_floor_double($var17 + var$15);
        $var25 = $var2 - $var13;
        $var27 = $var4 - $var15;
        $var29 = $var6 - $var17;
        nms_Tessellator_$callClinit();
        $var31 = nms_Tessellator_instance;
        nms_Tessellator_startDrawingQuads($var31);
        var$25 = $var8;
        while ($var32 <= $var20) {
            $var33 = $var21;
            while ($var33 <= $var22) {
                $var34 = $var23;
                while ($var34 <= $var24) {
                    $var35 = nms_World_getBlockId($var11, $var32, $var33 - 1 | 0, $var34);
                    if ($var35 > 0 && nms_World_getBlockLightValue($var11, $var32, $var33, $var34) > 3) {
                        nms_Block_$callClinit();
                        $var10 = nms_Block_blocksList.data[$var35];
                        $var13 = $var4 + $var1.$func_392_h_();
                        $var17 = $var27 + $var1.$func_392_h_();
                        var$28 = nms_Tessellator_instance;
                        if ($var10.$renderAsNormalBlock()) {
                            $var15 = $var33;
                            $var13 = (var$25 - ($var13 - ($var15 + $var17)) / 2.0) * 0.5 * nms_World_getLightBrightness(nms_Render_getWorldFromRenderManager($this), $var32, $var33, $var34);
                            if ($var13 >= 0.0) {
                                if ($var13 > 1.0)
                                    $var13 = 1.0;
                                nms_Tessellator_setColorRGBA_F(var$28, 1.0, 1.0, 1.0, $var13);
                                $var13 = $var32;
                                var$29 = $var13 + $var10.$field_370_bf + $var25;
                                var$30 = $var13 + $var10.$maxX + $var25;
                                $var13 = $var15 + $var10.$minY + $var17 + 0.015625;
                                $var17 = $var34;
                                $var15 = $var17 + $var10.$minZ + $var29;
                                $var17 = $var17 + $var10.$maxZ + $var29;
                                $var12 = ($var2 - var$29) / 2.0 / var$15 + 0.5;
                                var$31 = ($var2 - var$30) / 2.0 / var$15 + 0.5;
                                $var8 = ($var6 - $var15) / 2.0 / var$15 + 0.5;
                                $var9 = ($var6 - $var17) / 2.0 / var$15 + 0.5;
                                var$32 = $var12;
                                var$33 = $var8;
                                nms_Tessellator_addVertexWithUV(var$28, var$29, $var13, $var15, var$32, var$33);
                                var$34 = $var9;
                                nms_Tessellator_addVertexWithUV(var$28, var$29, $var13, $var17, var$32, var$34);
                                var$32 = var$31;
                                nms_Tessellator_addVertexWithUV(var$28, var$30, $var13, $var17, var$32, var$34);
                                nms_Tessellator_addVertexWithUV(var$28, var$30, $var13, $var15, var$32, var$33);
                            }
                        }
                    }
                    $var34 = $var34 + 1 | 0;
                }
                $var33 = $var33 + 1 | 0;
            }
            $var32 = $var32 + 1 | 0;
        }
        nms_Tessellator_draw($var31);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glDepthMask(1);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var31, $var35, $var11, $var12, $var15, $var13, $var17, var$15, $var32, $var20, $var21, $var22, $var23, $var24, $var25, $var27, $var29, var$25, $var33, $var34, var$28, var$29, var$30, var$31, var$32, var$33, var$34, $ptr);
}
function nms_Render_getWorldFromRenderManager($this) {
    return $this.$renderManager.$worldObj4;
}
function nms_Render_renderOffsetAABB($var0, $var1, $var3, $var5) {
    var $var7;
    olo_EaglerAdapterGL30_glDisable(3553);
    nms_Tessellator_$callClinit();
    $var7 = nms_Tessellator_instance;
    olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
    nms_Tessellator_startDrawingQuads($var7);
    nms_Tessellator_setTranslationD($var7, $var1, $var3, $var5);
    olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, (-1.0));
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$maxY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$maxY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$minY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$minY0, $var0.$minZ0);
    olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, 1.0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$minY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$minY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$maxY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$maxY0, $var0.$maxZ0);
    olo_EaglerAdapterGL30_glNormal3f(0.0, (-1.0), 0.0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$minY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$minY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$minY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$minY0, $var0.$maxZ0);
    olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$maxY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$maxY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$maxY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$maxY0, $var0.$minZ0);
    olo_EaglerAdapterGL30_glNormal3f((-1.0), 0.0, 0.0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$minY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$maxY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$maxY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$minX, $var0.$minY0, $var0.$minZ0);
    olo_EaglerAdapterGL30_glNormal3f(1.0, 0.0, 0.0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$minY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$maxY0, $var0.$minZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$maxY0, $var0.$maxZ0);
    nms_Tessellator_addVertex($var7, $var0.$maxX0, $var0.$minY0, $var0.$maxZ0);
    nms_Tessellator_setTranslationD($var7, 0.0, 0.0, 0.0);
    nms_Tessellator_draw($var7);
    olo_EaglerAdapterGL30_glEnable(3553);
}
function nms_Render_setRenderManager($this, $var1) {
    $this.$renderManager = $var1;
}
function nms_Render_doRenderShadowAndFire($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var12, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var12 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$renderManager.$options0.$fancyGraphics && $this.$field_9246_c > 0.0) {
            $var12 = (1.0 - nms_RenderManager_func_851_a($this.$renderManager, $var1.$posX, $var1.$posY, $var1.$posZ) / 256.0) * $this.$field_194_c;
            if ($var12 > 0.0) {
                $ptr = 2;
                continue main;
            }
        }
        if ($var1.$fire <= 0 && !$var1.$field_9299_bv)
            return;
        $ptr = 1;
    case 1:
        nms_Render_renderEntityOnFire($this, $var1, $var2, $var4, $var6, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    case 2:
        nms_Render_renderShadow($this, $var1, $var2, $var4, $var6, $var12, $var9);
        if ($rt_suspending()) {
            break main;
        }
        if ($var1.$fire <= 0 && !$var1.$field_9299_bv)
            return;
        $ptr = 1;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var12, $ptr);
}
function nms_Render_getFontRendererFromRenderManager($this) {
    return $this.$renderManager.$field_1218_p;
}
function nms_RenderItem() {
    var a = this; nms_Render.call(a);
    a.$renderBlocks = null;
    a.$random0 = null;
}
function nms_RenderItem__init_0() {
    var var_0 = new nms_RenderItem();
    nms_RenderItem__init_(var_0);
    return var_0;
}
function nms_RenderItem__init_($this) {
    nms_Render__init_($this);
    $this.$renderBlocks = nms_RenderBlocks__init_0();
    $this.$random0 = new ju_Random;
    $this.$field_9246_c = 0.15000000596046448;
    $this.$field_194_c = 0.75;
}
function nms_RenderItem_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var11, $var12, $var13, $var14, $var15, $var28, $var16, $var17, $var18, $var19, $var23, var$19, var$20, $var27, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var27 = $thread.pop();var$20 = $thread.pop();var$19 = $thread.pop();$var23 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var16 = $thread.pop();$var28 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this =
        $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var10 = $var1.$item;
        olo_EaglerAdapterGL30_glPushMatrix();
        $var11 = nms_MathHelper_sin(($var1.$age + $var9) / 10.0 + $var1.$field_804_d) * 0.10000000149011612 + 0.10000000149011612;
        $var12 = (($var1.$age + $var9) / 20.0 + $var1.$field_804_d) * 57.2957763671875;
        $var13 = 1;
        if ($var1.$item.$stackSize > 1)
            $var13 = 2;
        if ($var1.$item.$stackSize > 5)
            $var13 = 3;
        if ($var1.$item.$stackSize > 20)
            $var13 = 4;
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4 + $var11, $var6);
        olo_EaglerAdapterGL30_glEnable(32826);
        if ($var10.$itemID < 256) {
            nms_Block_$callClinit();
            if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var10.$itemID].$getRenderType())) {
                olo_EaglerAdapterGL30_glRotatef($var12, 0.0, 1.0, 0.0);
                $var1 = $rt_s(193);
                $ptr = 3;
                continue main;
            }
        }
        olo_EaglerAdapterGL30_glScalef(0.5, 0.5, 0.5);
        $var14 = nms_ItemStack_getIconIndex($var10);
        if ($var10.$itemID >= 256) {
            $var1 = $rt_s(176);
            $ptr = 1;
            continue main;
        }
        $var1 = $rt_s(193);
        $ptr = 2;
        continue main;
    case 1:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var15 = nms_Tessellator_instance;
        $var28 = ($var14 % 16 | 0) * 16 | 0;
        $var16 = ($var28 + 0 | 0) / 256.0;
        $var17 = ($var28 + 16 | 0) / 256.0;
        $var14 = ($var14 / 16 | 0) * 16 | 0;
        $var18 = ($var14 + 0 | 0) / 256.0;
        $var19 = ($var14 + 16 | 0) / 256.0;
        $var23 = 0;
        $var4 = $var16;
        $var6 = $var19;
        var$19 = $var17;
        var$20 = $var18;
        while ($var23 < $var13) {
            olo_EaglerAdapterGL30_glPushMatrix();
            if ($var23 > 0)
                olo_EaglerAdapterGL30_glTranslatef((ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.30000001192092896, (ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.30000001192092896, (ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.30000001192092896);
            olo_EaglerAdapterGL30_glRotatef(180.0 - $this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
            nms_Tessellator_startDrawingQuads($var15);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
            nms_Tessellator_addVertexWithUV($var15, (-0.5), (-0.25), 0.0, $var4, $var6);
            nms_Tessellator_addVertexWithUV($var15, 0.5, (-0.25), 0.0, var$19, $var6);
            nms_Tessellator_addVertexWithUV($var15, 0.5, 0.75, 0.0, var$19, var$20);
            nms_Tessellator_addVertexWithUV($var15, (-0.5), 0.75, 0.0, $var4, var$20);
            nms_Tessellator_draw($var15);
            olo_EaglerAdapterGL30_glPopMatrix();
            $var23 = $var23 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 2:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var15 = nms_Tessellator_instance;
        $var28 = ($var14 % 16 | 0) * 16 | 0;
        $var16 = ($var28 + 0 | 0) / 256.0;
        $var17 = ($var28 + 16 | 0) / 256.0;
        $var14 = ($var14 / 16 | 0) * 16 | 0;
        $var18 = ($var14 + 0 | 0) / 256.0;
        $var19 = ($var14 + 16 | 0) / 256.0;
        $var23 = 0;
        $var4 = $var16;
        $var6 = $var19;
        var$19 = $var17;
        var$20 = $var18;
        while ($var23 < $var13) {
            olo_EaglerAdapterGL30_glPushMatrix();
            if ($var23 > 0)
                olo_EaglerAdapterGL30_glTranslatef((ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.30000001192092896, (ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.30000001192092896, (ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.30000001192092896);
            olo_EaglerAdapterGL30_glRotatef(180.0 - $this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
            nms_Tessellator_startDrawingQuads($var15);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
            nms_Tessellator_addVertexWithUV($var15, (-0.5), (-0.25), 0.0, $var4, $var6);
            nms_Tessellator_addVertexWithUV($var15, 0.5, (-0.25), 0.0, var$19, $var6);
            nms_Tessellator_addVertexWithUV($var15, 0.5, 0.75, 0.0, var$19, var$20);
            nms_Tessellator_addVertexWithUV($var15, (-0.5), 0.75, 0.0, $var4, var$20);
            nms_Tessellator_draw($var15);
            olo_EaglerAdapterGL30_glPopMatrix();
            $var23 = $var23 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 3:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        $var27 = 0.25;
        if (!nms_Block_blocksList.data[$var10.$itemID].$renderAsNormalBlock() && $var10.$itemID != nms_Block_stairSingle.$blockID)
            $var27 = 0.5;
        olo_EaglerAdapterGL30_glScalef($var27, $var27, $var27);
        $var28 = 0;
        while ($var28 < $var13) {
            olo_EaglerAdapterGL30_glPushMatrix();
            if ($var28 > 0)
                olo_EaglerAdapterGL30_glTranslatef((ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.20000000298023224 / $var27, (ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.20000000298023224 / $var27, (ju_Random_nextFloat($this.$random0) * 2.0 - 1.0) * 0.20000000298023224 / $var27);
            nms_RenderBlocks_func_1227_a($this.$renderBlocks, nms_Block_blocksList.data[$var10.$itemID]);
            olo_EaglerAdapterGL30_glPopMatrix();
            $var28 = $var28 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var28, $var16, $var17, $var18, $var19, $var23, var$19, var$20, $var27, $ptr);
}
function nms_RenderItem_renderItemIntoGUI($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, $var7, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var7 = $thread.pop();var$7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($var3 !== null) {
            if ($var3.$itemID < 256) {
                nms_Block_$callClinit();
                if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var3.$itemID].$getRenderType())) {
                    $var6 = $var3.$itemID;
                    $var1 = $rt_s(193);
                    $ptr = 1;
                    continue main;
                }
            }
            if (nms_ItemStack_getIconIndex($var3) >= 0) {
                olo_EaglerAdapterGL30_glDisable(2896);
                if ($var3.$itemID >= 256) {
                    $var1 = $rt_s(176);
                    $ptr = 2;
                    continue main;
                }
                $var1 = $rt_s(193);
                $ptr = 3;
                continue main;
            }
            olo_EaglerAdapterGL30_glEnable(2884);
        }
        return;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        var$7 = $tmp;
        nms_RenderEngine_bindTexture($var2, var$7);
        $var7 = nms_Block_blocksList.data[$var6];
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var4 - 2 | 0, $var5 + 3 | 0, 0.0);
        olo_EaglerAdapterGL30_glScalef(10.0, 10.0, 10.0);
        olo_EaglerAdapterGL30_glTranslatef(1.0, 0.5, 8.0);
        olo_EaglerAdapterGL30_glRotatef(210.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glScalef(1.0, 1.0, 1.0);
        nms_RenderBlocks_func_1227_a($this.$renderBlocks, $var7);
        olo_EaglerAdapterGL30_glPopMatrix();
        olo_EaglerAdapterGL30_glEnable(2884);
        return;
    case 2:
        $tmp = nms_RenderEngine_getTexture($var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        $var6 = $tmp;
        nms_RenderEngine_bindTexture($var2, $var6);
        nms_RenderItem_renderTexturedQuad($this, $var4, $var5, (nms_ItemStack_getIconIndex($var3) % 16 | 0) * 16 | 0, (nms_ItemStack_getIconIndex($var3) / 16 | 0) * 16 | 0, 16, 16);
        olo_EaglerAdapterGL30_glEnable(2896);
        olo_EaglerAdapterGL30_glEnable(2884);
        return;
    case 3:
        $tmp = nms_RenderEngine_getTexture($var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        $var6 = $tmp;
        nms_RenderEngine_bindTexture($var2, $var6);
        nms_RenderItem_renderTexturedQuad($this, $var4, $var5, (nms_ItemStack_getIconIndex($var3) % 16 | 0) * 16 | 0, (nms_ItemStack_getIconIndex($var3) / 16 | 0) * 16 | 0, 16, 16);
        olo_EaglerAdapterGL30_glEnable(2896);
        olo_EaglerAdapterGL30_glEnable(2884);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, var$7, $var7, $ptr);
}
function nms_RenderItem_renderItemOverlayIntoGUI($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var11, $var7, $var8, $var10, $var9;
    if ($var3 !== null) {
        if ($var3.$stackSize > 1) {
            $var2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($var2);
            $var6 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append($var2, $rt_s(17)), $var3.$stackSize));
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            nms_FontRenderer_drawStringWithShadow($var1, $var6, (($var4 + 19 | 0) - 2 | 0) - nms_FontRenderer_getStringWidth($var1, $var6) | 0, ($var5 + 6 | 0) + 3 | 0, 16777215);
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
        }
        if ($var3.$itemDamage > 0) {
            $var11 = 13 - (($var3.$itemDamage * 13 | 0) / nms_ItemStack_getMaxDamage($var3) | 0) | 0;
            $var7 = 255 - (($var3.$itemDamage * 255 | 0) / nms_ItemStack_getMaxDamage($var3) | 0) | 0;
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glDisable(2929);
            olo_EaglerAdapterGL30_glDisable(3553);
            nms_Tessellator_$callClinit();
            $var8 = nms_Tessellator_instance;
            $var10 = 255 - $var7 | 0;
            $var9 = $var10 << 16 | $var7 << 8;
            $var10 = ($var10 / 4 | 0) << 16 | 16128;
            $var4 = $var4 + 2 | 0;
            $var5 = $var5 + 13 | 0;
            nms_RenderItem_renderQuad($this, $var8, $var4, $var5, 13, 2, 0);
            nms_RenderItem_renderQuad($this, $var8, $var4, $var5, 12, 1, $var10);
            nms_RenderItem_renderQuad($this, $var8, $var4, $var5, $var11, 1, $var9);
            olo_EaglerAdapterGL30_glEnable(3553);
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(2929);
            olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        }
    }
}
function nms_RenderItem_renderQuad($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7, var$8, var$9;
    nms_Tessellator_startDrawingQuads($var1);
    nms_Tessellator_setColorOpaque_I($var1, $var6);
    var$7 = $var2 + 0 | 0;
    var$8 = $var3 + 0 | 0;
    nms_Tessellator_addVertex($var1, var$7, var$8, 0.0);
    var$9 = $var3 + $var5 | 0;
    nms_Tessellator_addVertex($var1, var$7, var$9, 0.0);
    var$7 = $var2 + $var4 | 0;
    nms_Tessellator_addVertex($var1, var$7, var$9, 0.0);
    nms_Tessellator_addVertex($var1, var$7, var$8, 0.0);
    nms_Tessellator_draw($var1);
}
function nms_RenderItem_renderTexturedQuad($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var10, var$8, var$9, var$10, var$11, var$12, var$13;
    nms_Tessellator_$callClinit();
    $var10 = nms_Tessellator_instance;
    nms_Tessellator_startDrawingQuads($var10);
    var$8 = $var1 + 0 | 0;
    var$9 = $var2 + $var6 | 0;
    var$10 = ($var3 + 0 | 0) * 0.00390625;
    var$11 = ($var4 + $var6 | 0) * 0.00390625;
    nms_Tessellator_addVertexWithUV($var10, var$8, var$9, 0.0, var$10, var$11);
    var$12 = $var1 + $var5 | 0;
    var$13 = ($var3 + $var5 | 0) * 0.00390625;
    nms_Tessellator_addVertexWithUV($var10, var$12, var$9, 0.0, var$13, var$11);
    var$11 = $var2 + 0 | 0;
    var$9 = ($var4 + 0 | 0) * 0.00390625;
    nms_Tessellator_addVertexWithUV($var10, var$12, var$11, 0.0, var$13, var$9);
    nms_Tessellator_addVertexWithUV($var10, var$8, var$11, 0.0, var$10, var$9);
    nms_Tessellator_draw($var10);
}
function nms_RenderItem_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderItem_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nlea_EaglerAdapterImpl2$TextureGL() {
    var a = this; jl_Object.call(a);
    a.$obj4 = null;
    a.$w = 0;
    a.$h0 = 0;
    a.$nearest = 0;
    a.$anisotropic = 0;
}
function nms_InventoryCraftResult() {
    jl_Object.call(this);
    this.$stackResult = null;
}
function nms_InventoryCraftResult__init_0() {
    var var_0 = new nms_InventoryCraftResult();
    nms_InventoryCraftResult__init_(var_0);
    return var_0;
}
function nms_InventoryCraftResult__init_($this) {
    $this.$stackResult = $rt_createArray(nms_ItemStack, 1);
}
function nms_InventoryCraftResult_getStackInSlot($this, $var1) {
    return $this.$stackResult.data[$var1];
}
function nms_InventoryCraftResult_decrStackSize($this, $var1, $var2) {
    var $var3;
    if ($this.$stackResult.data[$var1] === null)
        return null;
    $var3 = $this.$stackResult.data[$var1];
    $this.$stackResult.data[$var1] = null;
    return $var3;
}
function nms_InventoryCraftResult_setInventorySlotContents($this, $var1, $var2) {
    $this.$stackResult.data[$var1] = $var2;
}
function nms_InventoryCraftResult_getInventoryStackLimit($this) {
    return 64;
}
function nms_InventoryCraftResult_onInventoryChanged($this) {
    return;
}
function nms_InventoryCrafting() {
    var a = this; jl_Object.call(a);
    a.$stackList = null;
    a.$nbrSlots = 0;
    a.$eventHandler = null;
}
function nms_InventoryCrafting_getSizeInventory($this) {
    return $this.$nbrSlots;
}
function nms_InventoryCrafting_getStackInSlot($this, $var1) {
    return $this.$stackList.data[$var1];
}
function nms_InventoryCrafting_decrStackSize($this, $var1, $var2) {
    var $var3, $var3_0;
    if ($this.$stackList.data[$var1] === null)
        return null;
    if ($this.$stackList.data[$var1].$stackSize <= $var2) {
        $var3 = $this.$stackList.data[$var1];
        $this.$stackList.data[$var1] = null;
        $this.$eventHandler.$onCraftMatrixChanged($this);
        return $var3;
    }
    $var3_0 = nms_ItemStack_splitStack($this.$stackList.data[$var1], $var2);
    if (!$this.$stackList.data[$var1].$stackSize)
        $this.$stackList.data[$var1] = null;
    $this.$eventHandler.$onCraftMatrixChanged($this);
    return $var3_0;
}
function nms_InventoryCrafting_setInventorySlotContents($this, $var1, $var2) {
    $this.$stackList.data[$var1] = $var2;
    $this.$eventHandler.$onCraftMatrixChanged($this);
}
function nms_InventoryCrafting_getInventoryStackLimit($this) {
    return 64;
}
function nms_InventoryCrafting_onInventoryChanged($this) {
    return;
}
function ji_UTFDataFormatException() {
    ji_IOException.call(this);
}
function ji_UTFDataFormatException__init_0() {
    var var_0 = new ji_UTFDataFormatException();
    ji_UTFDataFormatException__init_(var_0);
    return var_0;
}
function ji_UTFDataFormatException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_IllegalMonitorStateException() {
    jl_RuntimeException.call(this);
}
function jl_IllegalMonitorStateException__init_0() {
    var var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_(var_0);
    return var_0;
}
function jl_IllegalMonitorStateException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_Object$Monitor() {
    var a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Object$Monitor__init_() {
    var var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_0(var_0);
    return var_0;
}
function jl_Object$Monitor__init_0($this) {
    $this.$owner = jl_Thread_currentThread0;
}
function nms_EntityCreature() {
    var a = this; nms_EntityLiving.call(a);
    a.$pathToEntity = null;
    a.$playerToAttack = null;
    a.$hasAttacked = 0;
}
function nms_EntityCreature_func_418_b_($this) {
    var $var2, $var21, $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var10, $var11, $var22, $var23, $var24, $var25, $var26, $var12, $var27, $var28, $var15, $var16, $var18, $var20, $var1;
    $this.$hasAttacked = 0;
    if ($this.$playerToAttack === null) {
        $this.$playerToAttack = $this.$findPlayerToAttack();
        if ($this.$playerToAttack !== null)
            $this.$pathToEntity = nms_World_getPathToEntity($this.$worldObj0, $this, $this.$playerToAttack, 16.0);
    } else if (!nms_EntityLiving_isEntityAlive($this.$playerToAttack))
        $this.$playerToAttack = null;
    else {
        $var2 = nms_Entity_getDistanceToEntity($this.$playerToAttack, $this);
        if (nms_EntityLiving_canEntityBeSeen($this, $this.$playerToAttack))
            $this.$attackEntity($this.$playerToAttack, $var2);
    }
    if (!$this.$hasAttacked && $this.$playerToAttack !== null && !($this.$pathToEntity !== null && ju_Random_nextInt($this.$rand2, 20)))
        $this.$pathToEntity = nms_World_getPathToEntity($this.$worldObj0, $this, $this.$playerToAttack, 16.0);
    else if (!(!($this.$pathToEntity === null && !ju_Random_nextInt($this.$rand2, 80)) && ju_Random_nextInt($this.$rand2, 80))) {
        $var21 = 0;
        $var3 = (-1);
        $var4 = (-1);
        $var5 = (-1);
        $var6 = (-99999.0);
        $var7 = 0;
        while ($var7 < 10) {
            $var8 = nms_MathHelper_floor_double($this.$posX + ju_Random_nextInt($this.$rand2, 13) - 6.0);
            $var9 = nms_MathHelper_floor_double($this.$posY + ju_Random_nextInt($this.$rand2, 7) - 3.0);
            $var10 = nms_MathHelper_floor_double($this.$posZ + ju_Random_nextInt($this.$rand2, 13) - 6.0);
            $var11 = $this.$func_439_a($var8, $var9, $var10);
            if ($var11 > $var6) {
                $var21 = 1;
                $var6 = $var11;
                $var3 = $var8;
                $var4 = $var9;
                $var5 = $var10;
            }
            $var7 = $var7 + 1 | 0;
        }
        if ($var21)
            $this.$pathToEntity = nms_World_getEntityPathToXYZ($this.$worldObj0, $this, $var3, $var4, $var5, 10.0);
    }
    $var22 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
    $var23 = nms_Entity_handleWaterMovement($this);
    $var24 = nms_Entity_handleLavaMovement($this);
    $this.$rotationPitch = 0.0;
    if ($this.$pathToEntity !== null && ju_Random_nextInt($this.$rand2, 100)) {
        $var25 = nms_PathEntity_getPosition($this.$pathToEntity, $this);
        $var26 = $this.$width0 * 2.0;
        $var12 = $var26 * $var26;
        while ($var25 !== null && nms_Vec3D_squareDistanceTo0($var25, $this.$posX, $var25.$yCoord, $this.$posZ) < $var12) {
            nms_PathEntity_incrementPathIndex($this.$pathToEntity);
            if (!nms_PathEntity_isFinished($this.$pathToEntity)) {
                $var25 = nms_PathEntity_getPosition($this.$pathToEntity, $this);
                continue;
            }
            $var25 = null;
            $this.$pathToEntity = null;
        }
        $this.$isJumping = 0;
        if ($var25 !== null) {
            $var27 = $var25.$xCoord - $this.$posX;
            $var28 = $var25.$zCoord - $this.$posZ;
            $var12 = $var25.$yCoord - $var22;
            $var15 = jl_Math_atan2($var28, $var27) * 180.0 / 3.1415927410125732 - 90.0 - $this.$rotationYaw;
            $this.$field_9340_ai = $this.$field_9333_am;
            while ($var15 < (-180.0)) {
                $var15 = $var15 + 360.0;
            }
            while ($var15 >= 180.0) {
                $var15 = $var15 - 360.0;
            }
            if ($var15 > 30.0)
                $var15 = 30.0;
            if ($var15 < (-30.0))
                $var15 = (-30.0);
            $this.$rotationYaw = $this.$rotationYaw + $var15;
            if ($this.$hasAttacked && $this.$playerToAttack !== null) {
                $var16 = $this.$playerToAttack.$posX - $this.$posX;
                $var18 = $this.$playerToAttack.$posZ - $this.$posZ;
                $var20 = $this.$rotationYaw;
                $this.$rotationYaw = jl_Math_atan2($var18, $var16) * 180.0 / 3.1415927410125732 - 90.0;
                $var1 = ($var20 - $this.$rotationYaw + 90.0) * 3.1415927410125732 / 180.0;
                $this.$field_9342_ah =  -nms_MathHelper_sin($var1) * $this.$field_9340_ai * 1.0;
                $this.$field_9340_ai = nms_MathHelper_cos($var1) * $this.$field_9340_ai * 1.0;
            }
            if ($var12 > 0.0)
                $this.$isJumping = 1;
        }
        if ($this.$playerToAttack !== null)
            nms_EntityLiving_faceEntity($this, $this.$playerToAttack, 30.0);
        if ($this.$field_9297_aI)
            $this.$isJumping = 1;
        if (ju_Random_nextFloat($this.$rand2) < 0.800000011920929 && !(!$var23 && !$var24))
            $this.$isJumping = 1;
    } else {
        nms_EntityLiving_func_418_b_($this);
        $this.$pathToEntity = null;
    }
}
function nms_EntityCreature_attackEntity($this, $var1, $var2) {
    return;
}
function nms_EntityCreature_findPlayerToAttack($this) {
    return null;
}
function nms_EntityCreature_getCanSpawnHere($this) {
    var $var1, $var2, $var3;
    $var1 = nms_MathHelper_floor_double($this.$posX);
    $var2 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
    $var3 = nms_MathHelper_floor_double($this.$posZ);
    return nms_EntityLiving_getCanSpawnHere($this) && $this.$func_439_a($var1, $var2, $var3) >= 0.0 ? 1 : 0;
}
function nms_IMobs() {
}
function nms_EntityMobs() {
    nms_EntityCreature.call(this);
    this.$field_762_e = 0;
}
function nms_EntityMobs_onLivingUpdate($this) {
    if (nms_Entity_getEntityBrightness($this, 1.0) > 0.5)
        $this.$field_9344_ag = $this.$field_9344_ag + 2 | 0;
    nms_EntityLiving_onLivingUpdate($this);
}
function nms_EntityMobs_onUpdate($this) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_EntityLiving_onUpdate($this);
        if ($rt_suspending()) {
            break main;
        }
        if (!$this.$worldObj0.$difficultySetting)
            nms_Entity_setEntityDead($this);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $ptr);
}
function nms_EntityMobs_findPlayerToAttack($this) {
    var $var1;
    $var1 = nms_World_getClosestPlayerToEntity($this.$worldObj0, $this, 16.0);
    if (!($var1 !== null && nms_EntityLiving_canEntityBeSeen($this, $var1)))
        $var1 = null;
    return $var1;
}
function nms_EntityMobs_canAttackEntity($this, $var1, $var2) {
    if (!nms_EntityLiving_canAttackEntity($this, $var1, $var2))
        return 0;
    if ($this.$riddenByEntity !== $var1 && $this.$ridingEntity !== $var1) {
        if ($var1 !== $this)
            $this.$playerToAttack = $var1;
        return 1;
    }
    return 1;
}
function nms_EntityMobs_attackEntity($this, $var1, $var2) {
    if ($var2 < 2.5 && $var1.$boundingBox.$maxY0 > $this.$boundingBox.$minY0 && $var1.$boundingBox.$minY0 < $this.$boundingBox.$maxY0) {
        $this.$attackTime = 20;
        $var1.$canAttackEntity($this, $this.$field_762_e);
    }
}
function nms_EntityMobs_func_439_a($this, $var1, $var2, $var3) {
    return 0.5 - nms_World_getLightBrightness($this.$worldObj0, $var1, $var2, $var3);
}
function nms_EntityMobs_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
}
function nms_EntityMobs_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
}
function nms_EntityMobs_getCanSpawnHere($this) {
    var $var1, $var2, $var3;
    $var1 = nms_MathHelper_floor_double($this.$posX);
    $var2 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
    $var3 = nms_MathHelper_floor_double($this.$posZ);
    if (nms_World_getSavedLightValue($this.$worldObj0, nms_EnumSkyBlock_Sky, $var1, $var2, $var3) > ju_Random_nextInt($this.$rand2, 32))
        return 0;
    return nms_World_getBlockLightValue($this.$worldObj0, $var1, $var2, $var3) <= ju_Random_nextInt($this.$rand2, 8) && nms_EntityCreature_getCanSpawnHere($this) ? 1 : 0;
}
function nms_EntitySpider() {
    nms_EntityMobs.call(this);
}
function nms_EntitySpider_func_402_h($this) {
    return $this.$height * 0.75 - 0.5;
}
function nms_EntitySpider_findPlayerToAttack($this) {
    if (nms_Entity_getEntityBrightness($this, 1.0) >= 0.5)
        return null;
    return nms_World_getClosestPlayerToEntity($this.$worldObj0, $this, 16.0);
}
function nms_EntitySpider_getLivingSound($this) {
    return $rt_s(599);
}
function nms_EntitySpider_getHurtSound($this) {
    return $rt_s(599);
}
function nms_EntitySpider_getDeathSound($this) {
    return $rt_s(600);
}
function nms_EntitySpider_attackEntity($this, $var1, $var2) {
    var $var4, $var6, var$5;
    if (nms_Entity_getEntityBrightness($this, 1.0) > 0.5 && !ju_Random_nextInt($this.$rand2, 100))
        $this.$playerToAttack = null;
    else if (!($var2 > 2.0 && $var2 < 6.0 && !ju_Random_nextInt($this.$rand2, 10)))
        nms_EntityMobs_attackEntity($this, $var1, $var2);
    else if ($this.$onGround) {
        $var4 = $var1.$posX - $this.$posX;
        $var6 = $var1.$posZ - $this.$posZ;
        var$5 = nms_MathHelper_sqrt_double($var4 * $var4 + $var6 * $var6);
        $this.$motionX = $var4 / var$5 * 0.5 * 0.800000011920929 + $this.$motionX * 0.20000000298023224;
        $this.$motionZ = $var6 / var$5 * 0.5 * 0.800000011920929 + $this.$motionZ * 0.20000000298023224;
        $this.$motionY = 0.4000000059604645;
    }
}
function nms_EntitySpider_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
}
function nms_EntitySpider_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
}
function nms_EntitySpider_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_silk.$shiftedIndex;
}
function nms_RenderLiving() {
    var a = this; nms_Render.call(a);
    a.$e = null;
    a.$field_6332_f = null;
}
function nms_RenderLiving__init_0(var_0, var_1) {
    var var_2 = new nms_RenderLiving();
    nms_RenderLiving__init_(var_2, var_0, var_1);
    return var_2;
}
function nms_RenderLiving__init_($this, $var1, $var2) {
    nms_Render__init_($this);
    $this.$e = $var1;
    $this.$field_9246_c = $var2;
}
function nms_RenderLiving_func_4013_a($this, $var1) {
    $this.$field_6332_f = $var1;
}
function nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var24, var$15, $var17, $var25, $var18, $var19, $var26, $var20, $var21, $var22, $var23, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var23 = $thread.pop();$var22 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();$var26 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var25 = $thread.pop();$var17 = $thread.pop();var$15 = $thread.pop();$var24 = $thread.pop();$var16 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4
        = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glDisable(2884);
        $this.$e.$field_1244_k = nms_EntityLiving_getSwingProgress($var1, $var9);
        $this.$e.$field_1243_l = $var1.$ridingEntity === null && !$var1.$field_9300_bu ? 0 : 1;
        if ($this.$field_6332_f !== null)
            $this.$field_6332_f.$field_1243_l = $this.$e.$field_1243_l;
        try {
            $var10 = $var1.$field_734_o + ($var1.$field_735_n - $var1.$field_734_o) * $var9;
            $var11 = $var1.$prevRotationYaw + ($var1.$rotationYaw - $var1.$prevRotationYaw) * $var9;
            $var12 = $var1.$prevRotationPitch + ($var1.$rotationPitch - $var1.$prevRotationPitch) * $var9;
            olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
            $var13 = $this.$func_170_d($var1, $var9);
            olo_EaglerAdapterGL30_glRotatef(180.0 - $var10, 0.0, 1.0, 0.0);
            if ($var1.$deathTime > 0) {
                $var8 = nms_MathHelper_sqrt_float(($var1.$deathTime + $var9 - 1.0) / 20.0 * 1.600000023841858);
                if ($var8 > 1.0)
                    $var8 = 1.0;
                olo_EaglerAdapterGL30_glRotatef($var8 * $this.$func_172_a($var1), 0.0, 0.0, 1.0);
            }
            $var14 = 0.0625;
            olo_EaglerAdapterGL30_glEnable(32826);
            olo_EaglerAdapterGL30_glScalef((-1.0), (-1.0), 1.0);
            $this.$func_6330_a($var1, $var9);
            olo_EaglerAdapterGL30_glTranslatef(0.0, (-1.5078125), 0.0);
            $var15 = $var1.$field_705_Q + ($var1.$field_704_R - $var1.$field_705_Q) * $var9;
            $var16 = $var1.$field_703_S - $var1.$field_704_R * (1.0 - $var9);
            if ($var15 > 1.0)
                $var15 = 1.0;
            $var24 = $var1.$skinUrl;
            var$15 = nms_EntityLiving_getEntityTexture($var1);
            $ptr = 1;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var24 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var24);
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 1:
        try {
            nms_Render_func_140_a($this, $var24, var$15);
            if ($rt_suspending()) {
                break main;
            }
            olo_EaglerAdapterGL30_glEnable(3008);
            $var24 = $this.$e;
            $var8 = $var11 - $var10;
            $var24.$render0($var16, $var15, $var13, $var8, $var12, $var14);
            $var17 = 0;
            if ($var17 >= 4) {
                $ptr = 2;
                continue main;
            }
            $ptr = 3;
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var24 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var24);
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 2:
        a: {
            try {
                $this.$func_6331_b($var1, $var9);
                if ($rt_suspending()) {
                    break main;
                }
                $var25 = nms_Entity_getEntityBrightness($var1, $var9);
                $var18 = $this.$func_173_a($var1, $var25, $var9);
                $var17 = $var18 >> 24 & 255;
                if (!($var17 <= 0 && $var1.$hurtTime <= 0 && $var1.$deathTime <= 0)) {
                    olo_EaglerAdapterGL30_glDisable(3553);
                    olo_EaglerAdapterGL30_glDisable(3008);
                    olo_EaglerAdapterGL30_glEnable(3042);
                    olo_EaglerAdapterGL30_glBlendFunc(770, 771);
                    olo_EaglerAdapterGL30_glDepthFunc(514);
                    if (!($var1.$hurtTime <= 0 && $var1.$deathTime <= 0)) {
                        olo_EaglerAdapterGL30_glColor4f($var25, 0.0, 0.0, 0.4000000059604645);
                        $this.$e.$render0($var16, $var15, $var13, $var8, $var12, $var14);
                        $var19 = 0;
                        if ($var19 < 4) {
                            $ptr = 4;
                            continue main;
                        }
                    }
                    if ($var17 > 0) {
                        $var26 = ($var18 >> 16 & 255) / 255.0;
                        $var20 = ($var18 >> 8 & 255) / 255.0;
                        $var21 = ($var18 & 255) / 255.0;
                        $var22 = $var17 / 255.0;
                        olo_EaglerAdapterGL30_glColor4f($var26, $var20, $var21, $var22);
                        $this.$e.$render0($var16, $var15, $var13, $var8, $var12, $var14);
                        $var23 = 0;
                        if ($var23 < 4) {
                            $ptr = 5;
                            continue main;
                        }
                    }
                    olo_EaglerAdapterGL30_glDepthFunc(515);
                    olo_EaglerAdapterGL30_glDisable(3042);
                    olo_EaglerAdapterGL30_glEnable(3008);
                    olo_EaglerAdapterGL30_glEnable(3553);
                }
                olo_EaglerAdapterGL30_glDisable(32826);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var24 = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($var24);
        }
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 3:
        try {
            $tmp = $this.$func_166_a($var1, $var17);
            if ($rt_suspending()) {
                break main;
            }
            $var18 = $tmp;
            if ($var18) {
                $this.$field_6332_f.$render0($var16, $var15, $var13, $var8, $var12, $var14);
                olo_EaglerAdapterGL30_glDisable(3042);
                olo_EaglerAdapterGL30_glEnable(3008);
            }
            $var17 = $var17 + 1 | 0;
            if ($var17 >= 4) {
                $ptr = 2;
                continue main;
            }
            continue main;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var24 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var24);
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 4:
        a: {
            try {
                $tmp = $this.$func_166_a($var1, $var19);
                if ($rt_suspending()) {
                    break main;
                }
                $var23 = $tmp;
                if ($var23) {
                    olo_EaglerAdapterGL30_glColor4f($var25, 0.0, 0.0, 0.4000000059604645);
                    $this.$field_6332_f.$render0($var16, $var15, $var13, $var8, $var12, $var14);
                }
                $var19 = $var19 + 1 | 0;
                if ($var19 < 4) {
                    continue main;
                }
                if ($var17 > 0) {
                    $var26 = ($var18 >> 16 & 255) / 255.0;
                    $var20 = ($var18 >> 8 & 255) / 255.0;
                    $var21 = ($var18 & 255) / 255.0;
                    $var22 = $var17 / 255.0;
                    olo_EaglerAdapterGL30_glColor4f($var26, $var20, $var21, $var22);
                    $this.$e.$render0($var16, $var15, $var13, $var8, $var12, $var14);
                    $var23 = 0;
                    if ($var23 < 4) {
                        $ptr = 5;
                        continue main;
                    }
                }
                olo_EaglerAdapterGL30_glDepthFunc(515);
                olo_EaglerAdapterGL30_glDisable(3042);
                olo_EaglerAdapterGL30_glEnable(3008);
                olo_EaglerAdapterGL30_glEnable(3553);
                olo_EaglerAdapterGL30_glDisable(32826);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var24 = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($var24);
        }
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 5:
        a: {
            try {
                $tmp = $this.$func_166_a($var1, $var23);
                if ($rt_suspending()) {
                    break main;
                }
                $var17 = $tmp;
                if ($var17) {
                    olo_EaglerAdapterGL30_glColor4f($var26, $var20, $var21, $var22);
                    $this.$field_6332_f.$render0($var16, $var15, $var13, $var8, $var12, $var14);
                }
                $var23 = $var23 + 1 | 0;
                if ($var23 >= 4) {
                    olo_EaglerAdapterGL30_glDepthFunc(515);
                    olo_EaglerAdapterGL30_glDisable(3042);
                    olo_EaglerAdapterGL30_glEnable(3008);
                    olo_EaglerAdapterGL30_glEnable(3553);
                    olo_EaglerAdapterGL30_glDisable(32826);
                    break a;
                }
                continue main;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var24 = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($var24);
        }
        olo_EaglerAdapterGL30_glEnable(2884);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var24, var$15, $var17, $var25, $var18, $var19, $var26, $var20, $var21, $var22, $var23, $ptr);
}
function nms_RenderLiving_func_167_c($this, $var1, $var2) {
    return nms_EntityLiving_getSwingProgress($var1, $var2);
}
function nms_RenderLiving_func_170_d($this, $var1, $var2) {
    return $var1.$field_9311_be + $var2;
}
function nms_RenderLiving_func_6331_b($this, $var1, $var2) {
    return;
}
function nms_RenderLiving_func_166_a($this, $var1, $var2) {
    return 0;
}
function nms_RenderLiving_func_172_a($this, $var1) {
    return 90.0;
}
function nms_RenderLiving_func_173_a($this, $var1, $var2, $var3) {
    return 0;
}
function nms_RenderLiving_func_6330_a($this, $var1, $var2) {
    return;
}
function nms_RenderLiving_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        $this.$a2($var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderSpider() {
    nms_RenderLiving.call(this);
}
function nms_RenderSpider__init_0() {
    var var_0 = new nms_RenderSpider();
    nms_RenderSpider__init_(var_0);
    return var_0;
}
function nms_RenderSpider__init_($this) {
    nms_RenderLiving__init_($this, nms_ModelSpider__init_0(), 1.0);
    $this.$field_6332_f = nms_ModelSpider__init_0();
}
function nms_RenderSpider_a($this, $var1) {
    return 180.0;
}
function nms_RenderSpider_a0($this, $var1, $var2) {
    var var$3, $var3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($var2)
            return 0;
        if ($var2)
            return 0;
        var$3 = $rt_s(601);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var3 = (1.0 - nms_Entity_getEntityBrightness($var1, 1.0)) * 0.5;
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glDisable(3008);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, $var3);
        return 1;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $var3, $ptr);
}
function nms_RenderSpider_func_172_a($this, $var1) {
    return 180.0;
}
function nms_RenderSpider_func_166_a($this, $var1, $var2) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderSpider_a0($this, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $ptr);
}
function nms_EntityAnimals() {
    nms_EntityCreature.call(this);
}
function nms_EntityAnimals_func_439_a($this, $var1, $var2, $var3) {
    var var$4;
    var$4 = nms_World_getBlockId($this.$worldObj0, $var1, $var2 - 1 | 0, $var3);
    nms_Block_$callClinit();
    return var$4 == nms_Block_grass.$blockID ? 10.0 : nms_World_getLightBrightness($this.$worldObj0, $var1, $var2, $var3) - 0.5;
}
function nms_EntityAnimals_getCanSpawnHere($this) {
    var $var1, $var2, $var3, var$4;
    $var1 = nms_MathHelper_floor_double($this.$posX);
    $var2 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
    $var3 = nms_MathHelper_floor_double($this.$posZ);
    var$4 = nms_World_getBlockId($this.$worldObj0, $var1, $var2 - 1 | 0, $var3);
    nms_Block_$callClinit();
    return var$4 == nms_Block_grass.$blockID && nms_World_getBlockLightValue($this.$worldObj0, $var1, $var2, $var3) > 8 && nms_EntityCreature_getCanSpawnHere($this) ? 1 : 0;
}
function nms_EntityAnimals_func_421_b($this) {
    return 120;
}
function nms_EntityPig() {
    nms_EntityAnimals.call(this);
    this.$rideable = 0;
}
function nms_EntityPig_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
    nms_NBTTagCompound_setBoolean($var1, $rt_s(602), $this.$rideable);
}
function nms_EntityPig_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
    $this.$rideable = nms_NBTTagCompound_getBoolean($var1, $rt_s(602));
}
function nms_EntityPig_getLivingSound($this) {
    return $rt_s(603);
}
function nms_EntityPig_getHurtSound($this) {
    return $rt_s(603);
}
function nms_EntityPig_getDeathSound($this) {
    return $rt_s(604);
}
function nms_EntityPig_interact($this, $var1) {
    if (!$this.$rideable)
        return 0;
    nms_Entity_mountEntity($var1, $this);
    return 1;
}
function nms_EntityPig_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_porkRaw.$shiftedIndex;
}
function nms_RenderPig() {
    nms_RenderLiving.call(this);
}
function nms_RenderPig_a($this, $var1, $var2) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$3 = $rt_s(605);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, var$3);
        if ($rt_suspending()) {
            break main;
        }
        return !$var2 && $var1.$rideable ? 1 : 0;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_RenderPig_func_166_a($this, $var1, $var2) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderPig_a($this, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $ptr);
}
function nms_ModelQuadraped() {
    var a = this; nms_ModelBase.call(a);
    a.$head = null;
    a.$body = null;
    a.$leg1 = null;
    a.$leg2 = null;
    a.$leg3 = null;
    a.$leg4 = null;
}
function nms_ModelQuadraped__init_0(var_0, var_1) {
    var var_2 = new nms_ModelQuadraped();
    nms_ModelQuadraped__init_(var_2, var_0, var_1);
    return var_2;
}
function nms_ModelQuadraped__init_($this, $var1, $var2) {
    var var$3, var$4;
    nms_ModelBase__init_0($this);
    $this.$head = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$head, (-4.0), (-4.0), (-8.0), 8, 8, 8, $var2);
    nms_ModelRenderer_setPosition($this.$head, 0.0, 18 - $var1 | 0, (-6.0));
    $this.$body = nms_ModelRenderer__init_(28, 8);
    nms_ModelRenderer_addBox($this.$body, (-5.0), (-10.0), (-7.0), 10, 16, 8, $var2);
    nms_ModelRenderer_setPosition($this.$body, 0.0, 17 - $var1 | 0, 2.0);
    $this.$leg1 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg1, (-2.0), 0.0, (-2.0), 4, $var1, 4, $var2);
    var$3 = $this.$leg1;
    var$4 = 24 - $var1 | 0;
    nms_ModelRenderer_setPosition(var$3, (-3.0), var$4, 7.0);
    $this.$leg2 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg2, (-2.0), 0.0, (-2.0), 4, $var1, 4, $var2);
    nms_ModelRenderer_setPosition($this.$leg2, 3.0, var$4, 7.0);
    $this.$leg3 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg3, (-2.0), 0.0, (-2.0), 4, $var1, 4, $var2);
    nms_ModelRenderer_setPosition($this.$leg3, (-3.0), var$4, (-5.0));
    $this.$leg4 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg4, (-2.0), 0.0, (-2.0), 4, $var1, 4, $var2);
    nms_ModelRenderer_setPosition($this.$leg4, 3.0, var$4, (-5.0));
}
function nms_ModelQuadraped_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    $this.$setRotationAngles($var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$head, $var6);
    nms_ModelRenderer_render($this.$body, $var6);
    nms_ModelRenderer_render($this.$leg1, $var6);
    nms_ModelRenderer_render($this.$leg2, $var6);
    nms_ModelRenderer_render($this.$leg3, $var6);
    nms_ModelRenderer_render($this.$leg4, $var6);
}
function nms_ModelQuadraped_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7;
    $this.$head.$rotateAngleX =  -($var5 / 57.2957763671875);
    $this.$head.$rotateAngleY = $var4 / 57.2957763671875;
    $this.$body.$rotateAngleX = 1.5707963705062866;
    var$7 = $this.$leg1;
    $var1 = $var1 * 0.6661999821662903;
    var$7.$rotateAngleX = nms_MathHelper_cos($var1) * 1.399999976158142 * $var2;
    var$7 = $this.$leg2;
    $var3 = $var1 + 3.1415927410125732;
    var$7.$rotateAngleX = nms_MathHelper_cos($var3) * 1.399999976158142 * $var2;
    $this.$leg3.$rotateAngleX = nms_MathHelper_cos($var3) * 1.399999976158142 * $var2;
    $this.$leg4.$rotateAngleX = nms_MathHelper_cos($var1) * 1.399999976158142 * $var2;
}
function nms_ModelPig() {
    nms_ModelQuadraped.call(this);
}
function nms_ModelPig__init_0() {
    var var_0 = new nms_ModelPig();
    nms_ModelPig__init_(var_0);
    return var_0;
}
function nms_ModelPig__init_($this) {
    nms_ModelQuadraped__init_($this, 6, 0.0);
}
function nms_EntitySheep() {
    nms_EntityAnimals.call(this);
    this.$sheared = 0;
}
function nms_EntitySheep_canAttackEntity($this, $var1, $var2) {
    var $var3, $var4, $var5;
    a: {
        if (!$this.$sheared && $var1 instanceof nms_EntityLiving) {
            $this.$sheared = 1;
            $var3 = 1 + ju_Random_nextInt($this.$rand2, 3) | 0;
            $var4 = 0;
            while (true) {
                if ($var4 >= $var3)
                    break a;
                nms_Block_$callClinit();
                $var5 = nms_Entity_dropItemWithOffset($this, nms_Block_cloth.$blockID, 1, 1.0);
                $var5.$motionY = $var5.$motionY + ju_Random_nextFloat($this.$rand2) * 0.05000000074505806;
                $var5.$motionX = $var5.$motionX + (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.10000000149011612;
                $var5.$motionZ = $var5.$motionZ + (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.10000000149011612;
                $var4 = $var4 + 1 | 0;
            }
        }
    }
    return nms_EntityLiving_canAttackEntity($this, $var1, $var2);
}
function nms_EntitySheep_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
    nms_NBTTagCompound_setBoolean($var1, $rt_s(606), $this.$sheared);
}
function nms_EntitySheep_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
    $this.$sheared = nms_NBTTagCompound_getBoolean($var1, $rt_s(606));
}
function nms_EntitySheep_getLivingSound($this) {
    return $rt_s(607);
}
function nms_EntitySheep_getHurtSound($this) {
    return $rt_s(607);
}
function nms_EntitySheep_getDeathSound($this) {
    return $rt_s(607);
}
function nms_RenderSheep() {
    nms_RenderLiving.call(this);
}
function nms_RenderSheep_a($this, $var1, $var2) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$3 = $rt_s(608);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, var$3);
        if ($rt_suspending()) {
            break main;
        }
        return !$var2 && !$var1.$sheared ? 1 : 0;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_RenderSheep_func_166_a($this, $var1, $var2) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderSheep_a($this, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $ptr);
}
function nms_ModelSheep2() {
    nms_ModelQuadraped.call(this);
}
function nms_ModelSheep2__init_0() {
    var var_0 = new nms_ModelSheep2();
    nms_ModelSheep2__init_(var_0);
    return var_0;
}
function nms_ModelSheep2__init_($this) {
    nms_ModelQuadraped__init_($this, 12, 0.0);
    $this.$head = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$head, (-3.0), (-4.0), (-6.0), 6, 6, 8, 0.0);
    nms_ModelRenderer_setPosition($this.$head, 0.0, 6.0, (-8.0));
    $this.$body = nms_ModelRenderer__init_(28, 8);
    nms_ModelRenderer_addBox($this.$body, (-4.0), (-10.0), (-7.0), 8, 16, 6, 0.0);
    nms_ModelRenderer_setPosition($this.$body, 0.0, 5.0, 2.0);
}
function nms_ModelSheep1() {
    nms_ModelQuadraped.call(this);
}
function nms_ModelSheep1__init_0() {
    var var_0 = new nms_ModelSheep1();
    nms_ModelSheep1__init_(var_0);
    return var_0;
}
function nms_ModelSheep1__init_($this) {
    nms_ModelQuadraped__init_($this, 12, 0.0);
    $this.$head = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$head, (-3.0), (-4.0), (-4.0), 6, 6, 6, 0.6000000238418579);
    nms_ModelRenderer_setPosition($this.$head, 0.0, 6.0, (-8.0));
    $this.$body = nms_ModelRenderer__init_(28, 8);
    nms_ModelRenderer_addBox($this.$body, (-4.0), (-10.0), (-7.0), 8, 16, 6, 1.75);
    nms_ModelRenderer_setPosition($this.$body, 0.0, 5.0, 2.0);
    $this.$leg1 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg1, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.5);
    nms_ModelRenderer_setPosition($this.$leg1, (-3.0), 12.0, 7.0);
    $this.$leg2 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg2, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.5);
    nms_ModelRenderer_setPosition($this.$leg2, 3.0, 12.0, 7.0);
    $this.$leg3 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg3, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.5);
    nms_ModelRenderer_setPosition($this.$leg3, (-3.0), 12.0, (-5.0));
    $this.$leg4 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg4, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.5);
    nms_ModelRenderer_setPosition($this.$leg4, 3.0, 12.0, (-5.0));
}
function nms_EntityCow() {
    nms_EntityAnimals.call(this);
}
function nms_EntityCow_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
}
function nms_EntityCow_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
}
function nms_EntityCow_getLivingSound($this) {
    return $rt_s(609);
}
function nms_EntityCow_getHurtSound($this) {
    return $rt_s(610);
}
function nms_EntityCow_getDeathSound($this) {
    return $rt_s(610);
}
function nms_EntityCow_getSoundVolume($this) {
    return 0.4000000059604645;
}
function nms_EntityCow_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_leather.$shiftedIndex;
}
function nms_EntityCow_interact($this, $var1) {
    var $var2, var$3;
    $var2 = nms_InventoryPlayer_getCurrentItem($var1.$inventory0);
    if ($var2 !== null) {
        var$3 = $var2.$itemID;
        nms_Item_$callClinit();
        if (var$3 == nms_Item_bucketEmpty.$shiftedIndex) {
            nms_InventoryPlayer_setInventorySlotContents($var1.$inventory0, $var1.$inventory0.$currentItem, nms_ItemStack__init_10(nms_Item_bucketMilk));
            return 1;
        }
    }
    return 0;
}
function nms_RenderCow() {
    nms_RenderLiving.call(this);
}
function nms_RenderCow_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderCow_a0($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderCow_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_ModelCow() {
    var a = this; nms_ModelQuadraped.call(a);
    a.$udders = null;
    a.$horn1 = null;
    a.$horn2 = null;
}
function nms_ModelCow__init_0() {
    var var_0 = new nms_ModelCow();
    nms_ModelCow__init_(var_0);
    return var_0;
}
function nms_ModelCow__init_($this) {
    var var$1;
    nms_ModelQuadraped__init_($this, 12, 0.0);
    $this.$head = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$head, (-4.0), (-4.0), (-6.0), 8, 8, 6, 0.0);
    nms_ModelRenderer_setPosition($this.$head, 0.0, 4.0, (-8.0));
    $this.$horn1 = nms_ModelRenderer__init_(22, 0);
    nms_ModelRenderer_addBox($this.$horn1, (-4.0), (-5.0), (-4.0), 1, 3, 1, 0.0);
    nms_ModelRenderer_setPosition($this.$horn1, 0.0, 3.0, (-7.0));
    $this.$horn2 = nms_ModelRenderer__init_(22, 0);
    nms_ModelRenderer_addBox($this.$horn2, 4.0, (-5.0), (-4.0), 1, 3, 1, 0.0);
    nms_ModelRenderer_setPosition($this.$horn2, 0.0, 3.0, (-7.0));
    $this.$udders = nms_ModelRenderer__init_(52, 0);
    nms_ModelRenderer_addBox($this.$udders, (-2.0), (-3.0), 0.0, 4, 6, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$udders, 0.0, 14.0, 6.0);
    $this.$udders.$rotateAngleX = 1.5707963705062866;
    $this.$body = nms_ModelRenderer__init_(18, 4);
    nms_ModelRenderer_addBox($this.$body, (-6.0), (-10.0), (-7.0), 12, 18, 10, 0.0);
    nms_ModelRenderer_setPosition($this.$body, 0.0, 5.0, 2.0);
    var$1 = $this.$leg1;
    var$1.$offsetX = var$1.$offsetX - 1.0;
    var$1 = $this.$leg2;
    var$1.$offsetX = var$1.$offsetX + 1.0;
    var$1 = $this.$leg1;
    var$1.$offsetZ = var$1.$offsetZ + 0.0;
    var$1 = $this.$leg2;
    var$1.$offsetZ = var$1.$offsetZ + 0.0;
    var$1 = $this.$leg3;
    var$1.$offsetX = var$1.$offsetX - 1.0;
    var$1 = $this.$leg4;
    var$1.$offsetX = var$1.$offsetX + 1.0;
    var$1 = $this.$leg3;
    var$1.$offsetZ = var$1.$offsetZ - 1.0;
    var$1 = $this.$leg4;
    var$1.$offsetZ = var$1.$offsetZ - 1.0;
}
function nms_ModelCow_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelQuadraped_render($this, $var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$horn1, $var6);
    nms_ModelRenderer_render($this.$horn2, $var6);
    nms_ModelRenderer_render($this.$udders, $var6);
}
function nms_ModelCow_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelQuadraped_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6);
    $this.$horn1.$rotateAngleY = $this.$head.$rotateAngleY;
    $this.$horn1.$rotateAngleX = $this.$head.$rotateAngleX;
    $this.$horn2.$rotateAngleY = $this.$head.$rotateAngleY;
    $this.$horn2.$rotateAngleX = $this.$head.$rotateAngleX;
}
function nms_EntityChicken() {
    var a = this; nms_EntityAnimals.call(a);
    a.$field_752_b = 0.0;
    a.$field_758_c = 0.0;
    a.$field_757_d = 0.0;
    a.$field_756_e = 0.0;
    a.$field_755_h = 0.0;
    a.$timeUntilNextEgg = 0;
}
function nms_EntityChicken_onLivingUpdate($this) {
    var var$1;
    nms_EntityLiving_onLivingUpdate($this);
    $this.$field_756_e = $this.$field_752_b;
    $this.$field_757_d = $this.$field_758_c;
    $this.$field_758_c = $this.$field_758_c + (!$this.$onGround ? 4 : (-1)) * 0.3;
    if ($this.$field_758_c < 0.0)
        $this.$field_758_c = 0.0;
    if ($this.$field_758_c > 1.0)
        $this.$field_758_c = 1.0;
    if (!$this.$onGround && $this.$field_755_h < 1.0)
        $this.$field_755_h = 1.0;
    $this.$field_755_h = $this.$field_755_h * 0.9;
    if (!$this.$onGround && $this.$motionY < 0.0)
        $this.$motionY = $this.$motionY * 0.6;
    $this.$field_752_b = $this.$field_752_b + $this.$field_755_h * 2.0;
    var$1 = $this.$timeUntilNextEgg - 1 | 0;
    $this.$timeUntilNextEgg = var$1;
    if (var$1 <= 0) {
        nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(611), 1.0, (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
        nms_Item_$callClinit();
        nms_Entity_dropItem($this, nms_Item_egg.$shiftedIndex, 1);
        $this.$timeUntilNextEgg = ju_Random_nextInt($this.$rand2, 6000) + 6000 | 0;
    }
}
function nms_EntityChicken_fall($this, $var1) {
    return;
}
function nms_EntityChicken_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
}
function nms_EntityChicken_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
}
function nms_EntityChicken_getLivingSound($this) {
    return $rt_s(612);
}
function nms_EntityChicken_getHurtSound($this) {
    return $rt_s(613);
}
function nms_EntityChicken_getDeathSound($this) {
    return $rt_s(613);
}
function nms_EntityChicken_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_feather.$shiftedIndex;
}
function nms_RenderChicken() {
    nms_RenderLiving.call(this);
}
function nms_RenderChicken_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderChicken_a0($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = $var1.$field_756_e + ($var1.$field_752_b - $var1.$field_756_e) * $var2;
    $var4 = $var1.$field_757_d + ($var1.$field_758_c - $var1.$field_757_d) * $var2;
    return (nms_MathHelper_sin($var3) + 1.0) * $var4;
}
function nms_RenderChicken_func_170_d($this, $var1, $var2) {
    return nms_RenderChicken_a0($this, $var1, $var2);
}
function nms_RenderChicken_a1($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderChicken_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_ModelChicken() {
    var a = this; nms_ModelBase.call(a);
    a.$field_1289_a = null;
    a.$field_1288_b = null;
    a.$field_1295_c = null;
    a.$field_1294_d = null;
    a.$field_1293_e = null;
    a.$field_1292_f = null;
    a.$field_1291_g = null;
    a.$field_1290_h = null;
}
function nms_ModelChicken__init_0() {
    var var_0 = new nms_ModelChicken();
    nms_ModelChicken__init_(var_0);
    return var_0;
}
function nms_ModelChicken__init_($this) {
    nms_ModelBase__init_0($this);
    $this.$field_1289_a = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$field_1289_a, (-2.0), (-6.0), (-2.0), 4, 6, 3, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1289_a, 0.0, 15.0, (-4.0));
    $this.$field_1291_g = nms_ModelRenderer__init_(14, 0);
    nms_ModelRenderer_addBox($this.$field_1291_g, (-2.0), (-4.0), (-4.0), 4, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1291_g, 0.0, 15.0, (-4.0));
    $this.$field_1290_h = nms_ModelRenderer__init_(14, 4);
    nms_ModelRenderer_addBox($this.$field_1290_h, (-1.0), (-2.0), (-3.0), 2, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1290_h, 0.0, 15.0, (-4.0));
    $this.$field_1288_b = nms_ModelRenderer__init_(0, 9);
    nms_ModelRenderer_addBox($this.$field_1288_b, (-3.0), (-4.0), (-3.0), 6, 8, 6, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1288_b, 0.0, 16.0, 0.0);
    $this.$field_1295_c = nms_ModelRenderer__init_(26, 0);
    nms_ModelRenderer_func_921_a($this.$field_1295_c, (-1.0), 0.0, (-3.0), 3, 5, 3);
    nms_ModelRenderer_setPosition($this.$field_1295_c, (-2.0), 19.0, 1.0);
    $this.$field_1294_d = nms_ModelRenderer__init_(26, 0);
    nms_ModelRenderer_func_921_a($this.$field_1294_d, (-1.0), 0.0, (-3.0), 3, 5, 3);
    nms_ModelRenderer_setPosition($this.$field_1294_d, 1.0, 19.0, 1.0);
    $this.$field_1293_e = nms_ModelRenderer__init_(24, 13);
    nms_ModelRenderer_func_921_a($this.$field_1293_e, 0.0, 0.0, (-3.0), 1, 4, 6);
    nms_ModelRenderer_setPosition($this.$field_1293_e, (-4.0), 13.0, 0.0);
    $this.$field_1292_f = nms_ModelRenderer__init_(24, 13);
    nms_ModelRenderer_func_921_a($this.$field_1292_f, (-1.0), 0.0, (-3.0), 1, 4, 6);
    nms_ModelRenderer_setPosition($this.$field_1292_f, 4.0, 13.0, 0.0);
}
function nms_ModelChicken_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelChicken_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$field_1289_a, $var6);
    nms_ModelRenderer_render($this.$field_1291_g, $var6);
    nms_ModelRenderer_render($this.$field_1290_h, $var6);
    nms_ModelRenderer_render($this.$field_1288_b, $var6);
    nms_ModelRenderer_render($this.$field_1295_c, $var6);
    nms_ModelRenderer_render($this.$field_1294_d, $var6);
    nms_ModelRenderer_render($this.$field_1293_e, $var6);
    nms_ModelRenderer_render($this.$field_1292_f, $var6);
}
function nms_ModelChicken_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7;
    $this.$field_1289_a.$rotateAngleX =  -($var5 / 57.2957763671875);
    $this.$field_1289_a.$rotateAngleY = $var4 / 57.2957763671875;
    $this.$field_1291_g.$rotateAngleX = $this.$field_1289_a.$rotateAngleX;
    $this.$field_1291_g.$rotateAngleY = $this.$field_1289_a.$rotateAngleY;
    $this.$field_1290_h.$rotateAngleX = $this.$field_1289_a.$rotateAngleX;
    $this.$field_1290_h.$rotateAngleY = $this.$field_1289_a.$rotateAngleY;
    $this.$field_1288_b.$rotateAngleX = 1.5707963705062866;
    var$7 = $this.$field_1295_c;
    $var1 = $var1 * 0.6661999821662903;
    var$7.$rotateAngleX = nms_MathHelper_cos($var1) * 1.399999976158142 * $var2;
    $this.$field_1294_d.$rotateAngleX = nms_MathHelper_cos($var1 + 3.1415927410125732) * 1.399999976158142 * $var2;
    $this.$field_1293_e.$rotateAngleZ = $var3;
    $this.$field_1292_f.$rotateAngleZ =  -$var3;
}
function nms_EntityCreeper() {
    var a = this; nms_EntityMobs.call(a);
    a.$timeSinceIgnited = 0;
    a.$lastActiveTime = 0;
    a.$fuseTime = 0;
    a.$creeperState = 0;
    a.$field_12241_e = 0;
}
function nms_EntityCreeper_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
}
function nms_EntityCreeper_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
}
function nms_EntityCreeper_onUpdate($this) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$lastActiveTime = $this.$timeSinceIgnited;
        $ptr = 1;
    case 1:
        nms_EntityMobs_onUpdate($this);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $ptr);
}
function nms_EntityCreeper_func_418_b_($this) {
    if ($this.$field_12241_e != $this.$creeperState)
        $this.$field_12241_e = $this.$creeperState;
    $this.$lastActiveTime = $this.$timeSinceIgnited;
    if ($this.$timeSinceIgnited > 0 && $this.$creeperState < 0)
        $this.$timeSinceIgnited = $this.$timeSinceIgnited - 1 | 0;
    if ($this.$creeperState >= 0)
        $this.$creeperState = 2;
    nms_EntityCreature_func_418_b_($this);
    if ($this.$creeperState != 1)
        $this.$creeperState = (-1);
}
function nms_EntityCreeper_getHurtSound($this) {
    return $rt_s(614);
}
function nms_EntityCreeper_getDeathSound($this) {
    return $rt_s(615);
}
function nms_EntityCreeper_onDeath($this, $var1) {
    nms_EntityLiving_onDeath($this, $var1);
    if ($var1 instanceof nms_EntitySkeleton) {
        nms_Item_$callClinit();
        nms_Entity_dropItem($this, nms_Item_record13.$shiftedIndex + ju_Random_nextInt($this.$rand2, 2) | 0, 1);
    }
}
function nms_EntityCreeper_attackEntity($this, $var1, $var2) {
    a: {
        if (!($this.$creeperState <= 0 && $var2 < 3.0)) {
            if ($this.$creeperState <= 0)
                break a;
            if ($var2 >= 7.0)
                break a;
        }
        if (!$this.$timeSinceIgnited)
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(282), 1.0, 0.5);
        $this.$creeperState = 1;
        $this.$timeSinceIgnited = $this.$timeSinceIgnited + 1 | 0;
        if ($this.$timeSinceIgnited == $this.$fuseTime) {
            nms_World_func_12243_a($this.$worldObj0, $this, $this.$posX, $this.$posY, $this.$posZ, 3.0);
            nms_Entity_setEntityDead($this);
        }
        $this.$hasAttacked = 1;
    }
}
function nms_EntityCreeper_func_440_b($this, $var1) {
    return ($this.$lastActiveTime + ($this.$timeSinceIgnited - $this.$lastActiveTime | 0) * $var1) / ($this.$fuseTime - 2 | 0);
}
function nms_EntityCreeper_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_gunpowder.$shiftedIndex;
}
function nms_RenderCreeper() {
    nms_RenderLiving.call(this);
}
function nms_RenderCreeper__init_0() {
    var var_0 = new nms_RenderCreeper();
    nms_RenderCreeper__init_(var_0);
    return var_0;
}
function nms_RenderCreeper__init_($this) {
    nms_RenderLiving__init_($this, nms_ModelCreeper__init_0(), 0.5);
}
function nms_RenderCreeper_a($this, $var1, $var2) {
    var $var4, $var5, $var6;
    $var4 = nms_EntityCreeper_func_440_b($var1, $var2);
    $var5 = 1.0 + nms_MathHelper_sin($var4 * 100.0) * $var4 * 0.009999999776482582;
    if ($var4 < 0.0)
        $var4 = 0.0;
    if ($var4 > 1.0)
        $var4 = 1.0;
    $var2 = $var4 * $var4;
    $var2 = $var2 * $var2;
    $var6 = (1.0 + $var2 * 0.4000000059604645) * $var5;
    olo_EaglerAdapterGL30_glScalef($var6, (1.0 + $var2 * 0.10000000149011612) / $var5, $var6);
}
function nms_RenderCreeper_a0($this, $var1, $var2, $var3) {
    var $var5, $var6;
    $var5 = nms_EntityCreeper_func_440_b($var1, $var3);
    if (!(($var5 * 10.0 | 0) % 2 | 0))
        return 0;
    $var6 = $var5 * 0.20000000298023224 * 255.0 | 0;
    if ($var6 < 0)
        $var6 = 0;
    if ($var6 > 255)
        $var6 = 255;
    return $var6 << 24 | 16711680 | 65280 | 255;
}
function nms_RenderCreeper_func_6330_a($this, $var1, $var2) {
    nms_RenderCreeper_a($this, $var1, $var2);
}
function nms_RenderCreeper_func_173_a($this, $var1, $var2, $var3) {
    return nms_RenderCreeper_a0($this, $var1, $var2, $var3);
}
function nms_EntitySkeleton() {
    nms_EntityMobs.call(this);
}
var nms_EntitySkeleton_defaultHeldItem = null;
function nms_EntitySkeleton_$callClinit() {
    nms_EntitySkeleton_$callClinit = $rt_eraseClinit(nms_EntitySkeleton);
    nms_EntitySkeleton__clinit_();
}
function nms_EntitySkeleton_getLivingSound($this) {
    return $rt_s(616);
}
function nms_EntitySkeleton_getHurtSound($this) {
    return $rt_s(617);
}
function nms_EntitySkeleton_getDeathSound($this) {
    return $rt_s(617);
}
function nms_EntitySkeleton_onLivingUpdate($this) {
    var $var1;
    if (nms_World_isDaytime($this.$worldObj0)) {
        $var1 = nms_Entity_getEntityBrightness($this, 1.0);
        if ($var1 > 0.5 && nms_World_canBlockSeeTheSky($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY), nms_MathHelper_floor_double($this.$posZ)) && ju_Random_nextFloat($this.$rand2) * 30.0 < ($var1 - 0.4000000059604645) * 2.0)
            $this.$fire = 300;
    }
    nms_EntityMobs_onLivingUpdate($this);
}
function nms_EntitySkeleton_attackEntity($this, $var1, $var2) {
    var $var3, $var5, $var7, $var8, $var10;
    if ($var2 < 10.0) {
        $var3 = $var1.$posX - $this.$posX;
        $var5 = $var1.$posZ - $this.$posZ;
        if (!$this.$attackTime) {
            $var7 = nms_EntityArrow__init_($this.$worldObj0, $this);
            $var7.$posY = $var7.$posY + 1.399999976158142;
            $var8 = $var1.$posY - 0.20000000298023224 - $var7.$posY;
            $var10 = nms_MathHelper_sqrt_double($var3 * $var3 + $var5 * $var5) * 0.20000000298023224;
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(345), 1.0, 1.0 / (ju_Random_nextFloat($this.$rand2) * 0.4000000059604645 + 0.800000011920929));
            nms_World_entityJoinedWorld($this.$worldObj0, $var7);
            nms_EntityArrow_func_408_a($var7, $var3, $var8 + $var10, $var5, 0.6000000238418579, 12.0);
            $this.$attackTime = 30;
        }
        $this.$rotationYaw = jl_Math_atan2($var5, $var3) * 180.0 / 3.1415927410125732 - 90.0;
        $this.$hasAttacked = 1;
    }
}
function nms_EntitySkeleton_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
}
function nms_EntitySkeleton_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
}
function nms_EntitySkeleton_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_arrow.$shiftedIndex;
}
function nms_EntitySkeleton_getHeldItem($this) {
    return nms_EntitySkeleton_defaultHeldItem;
}
function nms_EntitySkeleton__clinit_() {
    var var$1;
    var$1 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_4(var$1, nms_Item_bow, 1);
    nms_EntitySkeleton_defaultHeldItem = var$1;
}
function nms_RenderBiped() {
    nms_RenderLiving.call(this);
    this.$field_4013_a = null;
}
function nms_RenderBiped__init_(var_0, var_1) {
    var var_2 = new nms_RenderBiped();
    nms_RenderBiped__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_RenderBiped__init_0($this, $var1, $var2) {
    nms_RenderLiving__init_($this, $var1, $var2);
    $this.$field_4013_a = $var1;
}
function nms_RenderBiped_func_6331_b($this, $var1, $var2) {
    var $var3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = $var1.$getHeldItem();
        if ($var3 === null)
            return;
        a: {
            olo_EaglerAdapterGL30_glPushMatrix();
            nms_ModelRenderer_func_926_b($this.$field_4013_a.$bipedRightArm, 0.0625);
            olo_EaglerAdapterGL30_glTranslatef((-0.0625), 0.4375, 0.0625);
            if ($var3.$itemID < 256) {
                nms_Block_$callClinit();
                if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var3.$itemID].$getRenderType())) {
                    olo_EaglerAdapterGL30_glTranslatef(0.0, 0.1875, (-0.3125));
                    olo_EaglerAdapterGL30_glRotatef(20.0, 1.0, 0.0, 0.0);
                    olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
                    olo_EaglerAdapterGL30_glScalef(0.375, (-0.375), 0.375);
                    break a;
                }
            }
            nms_Item_$callClinit();
            if (nms_Item_itemsList.data[$var3.$itemID].$isFull3D()) {
                olo_EaglerAdapterGL30_glTranslatef(0.0, 0.1875, 0.0);
                olo_EaglerAdapterGL30_glScalef(0.625, (-0.625), 0.625);
                olo_EaglerAdapterGL30_glRotatef((-100.0), 1.0, 0.0, 0.0);
                olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
            } else {
                olo_EaglerAdapterGL30_glTranslatef(0.25, 0.1875, (-0.1875));
                olo_EaglerAdapterGL30_glScalef(0.375, 0.375, 0.375);
                olo_EaglerAdapterGL30_glRotatef(60.0, 0.0, 0.0, 1.0);
                olo_EaglerAdapterGL30_glRotatef((-90.0), 1.0, 0.0, 0.0);
                olo_EaglerAdapterGL30_glRotatef(20.0, 0.0, 0.0, 1.0);
            }
        }
        $var1 = $this.$renderManager.$field_4236_f;
        $ptr = 1;
    case 1:
        nms_ItemRenderer_renderItem($var1, $var3);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function nms_ModelZombie() {
    nms_ModelBiped.call(this);
}
function nms_ModelZombie__init_0() {
    var var_0 = new nms_ModelZombie();
    nms_ModelZombie__init_(var_0);
    return var_0;
}
function nms_ModelZombie__init_($this) {
    nms_ModelBiped__init_($this);
}
function nms_ModelZombie_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8, var$9;
    nms_ModelBiped_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6);
    $var7 = nms_MathHelper_sin($this.$field_1244_k * 3.1415927410125732);
    $var8 = nms_MathHelper_sin((1.0 - (1.0 - $this.$field_1244_k) * (1.0 - $this.$field_1244_k)) * 3.1415927410125732);
    $this.$bipedRightArm.$rotateAngleZ = 0.0;
    $this.$bipedLeftArm.$rotateAngleZ = 0.0;
    var$9 = $this.$bipedRightArm;
    $var1 = 0.10000000149011612 - $var7 * 0.6000000238418579;
    var$9.$rotateAngleY =  -$var1;
    $this.$bipedLeftArm.$rotateAngleY = $var1;
    $this.$bipedRightArm.$rotateAngleX = (-1.5707963705062866);
    $this.$bipedLeftArm.$rotateAngleX = (-1.5707963705062866);
    var$9 = $this.$bipedRightArm;
    $var1 = var$9.$rotateAngleX;
    $var2 = $var7 * 1.2000000476837158 - $var8 * 0.4000000059604645;
    var$9.$rotateAngleX = $var1 - $var2;
    var$9 = $this.$bipedLeftArm;
    var$9.$rotateAngleX = var$9.$rotateAngleX - $var2;
    var$9 = $this.$bipedRightArm;
    $var1 = var$9.$rotateAngleZ;
    $var2 = $var3 * 0.09000000357627869;
    var$9.$rotateAngleZ = $var1 + nms_MathHelper_cos($var2) * 0.05000000074505806 + 0.05000000074505806;
    var$9 = $this.$bipedLeftArm;
    var$9.$rotateAngleZ = var$9.$rotateAngleZ - (nms_MathHelper_cos($var2) * 0.05000000074505806 + 0.05000000074505806);
    var$9 = $this.$bipedRightArm;
    $var1 = var$9.$rotateAngleX;
    $var2 = $var3 * 0.06700000166893005;
    var$9.$rotateAngleX = $var1 + nms_MathHelper_sin($var2) * 0.05000000074505806;
    var$9 = $this.$bipedLeftArm;
    var$9.$rotateAngleX = var$9.$rotateAngleX - nms_MathHelper_sin($var2) * 0.05000000074505806;
}
function nms_ModelSkeleton() {
    nms_ModelZombie.call(this);
}
function nms_ModelSkeleton__init_0() {
    var var_0 = new nms_ModelSkeleton();
    nms_ModelSkeleton__init_(var_0);
    return var_0;
}
function nms_ModelSkeleton__init_($this) {
    nms_ModelBiped__init_($this);
    $this.$bipedRightArm = nms_ModelRenderer__init_(40, 16);
    nms_ModelRenderer_addBox($this.$bipedRightArm, (-1.0), (-2.0), (-1.0), 2, 12, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$bipedRightArm, (-5.0), 2.0, 0.0);
    $this.$bipedLeftArm = nms_ModelRenderer__init_(40, 16);
    $this.$bipedLeftArm.$mirror = 1;
    nms_ModelRenderer_addBox($this.$bipedLeftArm, (-1.0), (-2.0), (-1.0), 2, 12, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$bipedLeftArm, 5.0, 2.0, 0.0);
    $this.$bipedRightLeg = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$bipedRightLeg, (-1.0), 0.0, (-1.0), 2, 12, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$bipedRightLeg, (-2.0), 12.0, 0.0);
    $this.$bipedLeftLeg = nms_ModelRenderer__init_(0, 16);
    $this.$bipedLeftLeg.$mirror = 1;
    nms_ModelRenderer_addBox($this.$bipedLeftLeg, (-1.0), 0.0, (-1.0), 2, 12, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$bipedLeftLeg, 2.0, 12.0, 0.0);
}
function nms_EntityZombie() {
    nms_EntityMobs.call(this);
}
function nms_EntityZombie_onLivingUpdate($this) {
    var $var1;
    if (nms_World_isDaytime($this.$worldObj0)) {
        $var1 = nms_Entity_getEntityBrightness($this, 1.0);
        if ($var1 > 0.5 && nms_World_canBlockSeeTheSky($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY), nms_MathHelper_floor_double($this.$posZ)) && ju_Random_nextFloat($this.$rand2) * 30.0 < ($var1 - 0.4000000059604645) * 2.0)
            $this.$fire = 300;
    }
    nms_EntityMobs_onLivingUpdate($this);
}
function nms_EntityZombie_getLivingSound($this) {
    return $rt_s(618);
}
function nms_EntityZombie_getHurtSound($this) {
    return $rt_s(619);
}
function nms_EntityZombie_getDeathSound($this) {
    return $rt_s(620);
}
function nms_EntityZombie_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_feather.$shiftedIndex;
}
function nms_EntitySlime() {
    var a = this; nms_EntityLiving.call(a);
    a.$field_768_a = 0.0;
    a.$field_767_b = 0.0;
    a.$field_769_d = 0;
    a.$field_770_c = 0;
}
function nms_EntitySlime_func_441_c($this, $var1) {
    var var$2;
    $this.$field_770_c = $var1;
    var$2 = 0.6000000238418579 * $var1;
    nms_Entity_setSize($this, var$2, var$2);
    $this.$health = $rt_imul($var1, $var1);
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
}
function nms_EntitySlime_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
    nms_NBTTagCompound_setInteger($var1, $rt_s(621), $this.$field_770_c - 1 | 0);
}
function nms_EntitySlime_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
    $this.$field_770_c = nms_NBTTagCompound_getInteger($var1, $rt_s(621)) + 1 | 0;
}
function nms_EntitySlime_onUpdate($this) {
    var $var1, $var2, $var3, $var4, $var5, $var6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$field_767_b = $this.$field_768_a;
        $var1 = $this.$onGround;
        $ptr = 1;
    case 1:
        nms_EntityLiving_onUpdate($this);
        if ($rt_suspending()) {
            break main;
        }
        if ($this.$onGround && !$var1) {
            $var2 = 0;
            while ($var2 < ($this.$field_770_c * 8 | 0)) {
                $var3 = ju_Random_nextFloat($this.$rand2) * 3.1415927410125732 * 2.0;
                $var4 = ju_Random_nextFloat($this.$rand2) * 0.5 + 0.5;
                $var5 = nms_MathHelper_sin($var3) * $this.$field_770_c * 0.5 * $var4;
                $var6 = nms_MathHelper_cos($var3) * $this.$field_770_c * 0.5 * $var4;
                nms_World_spawnParticle($this.$worldObj0, $rt_s(489), $this.$posX + $var5, $this.$boundingBox.$minY0, $this.$posZ + $var6, 0.0, 0.0, 0.0);
                $var2 = $var2 + 1 | 0;
            }
            if ($this.$field_770_c > 2)
                nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(622), 0.6000000238418579, ((ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0) / 0.800000011920929);
            $this.$field_768_a = (-0.5);
        }
        $this.$field_768_a = $this.$field_768_a * 0.6000000238418579;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $ptr);
}
function nms_EntitySlime_func_418_b_($this) {
    var $var1, var$2;
    $var1 = nms_World_getClosestPlayerToEntity($this.$worldObj0, $this, 16.0);
    if ($var1 !== null)
        nms_EntityLiving_faceEntity($this, $var1, 10.0);
    a: {
        b: {
            if ($this.$onGround) {
                var$2 = $this.$field_769_d;
                $this.$field_769_d = var$2 - 1 | 0;
                if (var$2 <= 0)
                    break b;
            }
            $this.$isJumping = 0;
            if (!$this.$onGround)
                break a;
            $this.$field_9340_ai = 0.0;
            $this.$field_9342_ah = 0.0;
            break a;
        }
        $this.$field_769_d = ju_Random_nextInt($this.$rand2, 20) + 10 | 0;
        if ($var1 !== null)
            $this.$field_769_d = $this.$field_769_d / 3 | 0;
        $this.$isJumping = 1;
        if ($this.$field_770_c > 1)
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(622), 0.6000000238418579, ((ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0) * 0.800000011920929);
        $this.$field_768_a = 1.0;
        $this.$field_9342_ah = 1.0 - ju_Random_nextFloat($this.$rand2) * 2.0;
        $this.$field_9340_ai = 1 * $this.$field_770_c | 0;
    }
}
function nms_EntitySlime_setEntityDead($this) {
    var $var1, $var2, $var3, $var4;
    a: {
        if ($this.$field_770_c > 1 && !$this.$health) {
            $var1 = 0;
            while (true) {
                if ($var1 >= 4)
                    break a;
                $var2 = (($var1 % 2 | 0) - 0.5) * $this.$field_770_c / 4.0;
                $var3 = (($var1 / 2 | 0) - 0.5) * $this.$field_770_c / 4.0;
                $var4 = new nms_EntitySlime;
                nms_EntityLiving__init_($var4, $this.$worldObj0);
                $var4.$field_769_d = 0;
                $var4.$field_770_c = 1;
                $var4.$texture = $rt_s(623);
                $var4.$field_770_c = 1 << ju_Random_nextInt($var4.$rand2, 3);
                $var4.$yOffset = 0.0;
                $var4.$field_769_d = ju_Random_nextInt($var4.$rand2, 20) + 10 | 0;
                nms_EntitySlime_func_441_c($var4, $var4.$field_770_c);
                nms_EntitySlime_func_441_c($var4, $this.$field_770_c / 2 | 0);
                nms_Entity_setLocationAndAngles($var4, $this.$posX + $var2, $this.$posY + 0.5, $this.$posZ + $var3, ju_Random_nextFloat($this.$rand2) * 360.0, 0.0);
                nms_World_entityJoinedWorld($this.$worldObj0, $var4);
                $var1 = $var1 + 1 | 0;
            }
        }
    }
    nms_Entity_setEntityDead($this);
}
function nms_EntitySlime_onCollideWithPlayer($this, $var1) {
    if ($this.$field_770_c > 1 && nms_EntityLiving_canEntityBeSeen($this, $var1) && nms_Entity_getDistanceToEntity($this, $var1) < 0.6 * $this.$field_770_c && nms_EntityPlayer_canAttackEntity($var1, $this, $this.$field_770_c))
        nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(624), 1.0, (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
}
function nms_EntitySlime_getHurtSound($this) {
    return $rt_s(622);
}
function nms_EntitySlime_getDeathSound($this) {
    return $rt_s(622);
}
function nms_EntitySlime_getDropItemId($this) {
    var var$1;
    if ($this.$field_770_c != 1)
        var$1 = 0;
    else {
        nms_Item_$callClinit();
        var$1 = nms_Item_slimeBall.$shiftedIndex;
    }
    return var$1;
}
function nms_EntitySlime_getCanSpawnHere($this) {
    nms_World_getChunkFromBlockCoords($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posZ));
    return !($this.$field_770_c != 1 && $this.$worldObj0.$difficultySetting <= 0) && !ju_Random_nextInt($this.$rand2, 10) && !ju_Random_nextInt(new ju_Random, 10) && $this.$posY < 16.0 ? 1 : 0;
}
function nms_EntitySlime_getSoundVolume($this) {
    return 0.6000000238418579;
}
function nms_RenderSlime() {
    nms_RenderLiving.call(this);
    this.$field_205_f = null;
}
function nms_RenderSlime_a($this, $var1, $var2) {
    if (!$var2) {
        $this.$field_6332_f = $this.$field_205_f;
        olo_EaglerAdapterGL30_glEnable(2977);
        olo_EaglerAdapterGL30_glEnable(3042);
        olo_EaglerAdapterGL30_glBlendFunc(770, 771);
        return 1;
    }
    if ($var2 == 1) {
        olo_EaglerAdapterGL30_glDisable(3042);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
    }
    return 0;
}
function nms_RenderSlime_a0($this, $var1, $var2) {
    var $var4, $var5;
    $var4 = 1.0 / (($var1.$field_767_b + ($var1.$field_768_a - $var1.$field_767_b) * $var2) / ($var1.$field_770_c * 0.5 + 1.0) + 1.0);
    $var5 = $var1.$field_770_c;
    $var2 = $var4 * $var5;
    olo_EaglerAdapterGL30_glScalef($var2, 1.0 / $var4 * $var5, $var2);
}
function nms_RenderSlime_func_6330_a($this, $var1, $var2) {
    nms_RenderSlime_a0($this, $var1, $var2);
}
function nms_RenderSlime_func_166_a($this, $var1, $var2) {
    return nms_RenderSlime_a($this, $var1, $var2);
}
function nms_ModelSlime() {
    var a = this; nms_ModelBase.call(a);
    a.$field_1258_a = null;
    a.$field_1257_b = null;
    a.$field_1260_c = null;
    a.$field_1259_d = null;
}
function nms_ModelSlime__init_(var_0) {
    var var_1 = new nms_ModelSlime();
    nms_ModelSlime__init_0(var_1, var_0);
    return var_1;
}
function nms_ModelSlime__init_0($this, $var1) {
    nms_ModelBase__init_0($this);
    $this.$field_1258_a = nms_ModelRenderer__init_(0, $var1);
    nms_ModelRenderer_func_921_a($this.$field_1258_a, (-4.0), 16.0, (-4.0), 8, 8, 8);
    if ($var1 > 0) {
        $this.$field_1258_a = nms_ModelRenderer__init_(0, $var1);
        nms_ModelRenderer_func_921_a($this.$field_1258_a, (-3.0), 17.0, (-3.0), 6, 6, 6);
        $this.$field_1257_b = nms_ModelRenderer__init_(32, 0);
        nms_ModelRenderer_func_921_a($this.$field_1257_b, (-3.25), 18.0, (-3.5), 2, 2, 2);
        $this.$field_1260_c = nms_ModelRenderer__init_(32, 4);
        nms_ModelRenderer_func_921_a($this.$field_1260_c, 1.25, 18.0, (-3.5), 2, 2, 2);
        $this.$field_1259_d = nms_ModelRenderer__init_(32, 8);
        nms_ModelRenderer_func_921_a($this.$field_1259_d, 0.0, 21.0, (-3.5), 1, 1, 1);
    }
}
function nms_ModelSlime_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    return;
}
function nms_ModelSlime_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelRenderer_render($this.$field_1258_a, $var6);
    if ($this.$field_1257_b !== null) {
        nms_ModelRenderer_render($this.$field_1257_b, $var6);
        nms_ModelRenderer_render($this.$field_1260_c, $var6);
        nms_ModelRenderer_render($this.$field_1259_d, $var6);
    }
}
function nms_RenderPlayer() {
    var a = this; nms_RenderLiving.call(a);
    a.$field_209_f = null;
    a.$field_208_g = null;
    a.$field_207_h = null;
}
var nms_RenderPlayer_armorFilenamePrefix = null;
function nms_RenderPlayer__init_0() {
    var var_0 = new nms_RenderPlayer();
    nms_RenderPlayer__init_(var_0);
    return var_0;
}
function nms_RenderPlayer__init_($this) {
    nms_RenderLiving__init_($this, nms_ModelBiped__init_0(0.0), 0.5);
    $this.$field_209_f = $this.$e;
    $this.$field_208_g = nms_ModelBiped__init_0(1.0);
    $this.$field_207_h = nms_ModelBiped__init_0(0.5);
}
function nms_RenderPlayer_a($this, $var1, $var2) {
    var $var3, $var4, $var5, var$6, $var6, var$8, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$8 = $thread.pop();$var6 = $thread.pop();var$6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = nms_InventoryPlayer_armorItemInSlot($var1.$inventory0, 3 - $var2 | 0);
        if ($var3 !== null) {
            $var4 = nms_ItemStack_getItem($var3);
            if ($var4 instanceof nms_ItemArmor) {
                $var5 = $var4;
                $var1 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($var1);
                $var1 = jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var1, $rt_s(625)), nms_RenderPlayer_armorFilenamePrefix.data[$var5.$renderIndex]), $rt_s(626));
                var$6 = $rt_compare($var2, 2);
                $var1 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1($var1, var$6 ? 1 : 2), $rt_s(462)));
                $ptr = 1;
                continue main;
            }
        }
        return 0;
    case 1:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        $var6 = var$6 ? $this.$field_208_g : $this.$field_207_h;
        $var6.$bipedHead.$field_1403_h = $var2 ? 0 : 1;
        $var6.$field_1285_b.$field_1403_h = $var2 ? 0 : 1;
        $var1 = $var6.$field_1284_c;
        var$8 = $rt_compare($var2, 1);
        $var1.$field_1403_h = var$8 && var$6 ? 0 : 1;
        $var6.$bipedRightArm.$field_1403_h = var$8 ? 0 : 1;
        $var6.$bipedLeftArm.$field_1403_h = var$8 ? 0 : 1;
        $var6.$bipedRightLeg.$field_1403_h = var$6 && $var2 != 3 ? 0 : 1;
        $var6.$bipedLeftLeg.$field_1403_h = var$6 && $var2 != 3 ? 0 : 1;
        $this.$field_6332_f = $var6;
        return 1;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, var$6, $var6, var$8, $ptr);
}
function nms_RenderPlayer_a0($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var17, $var18, $var19, $var20, $var11, $var15, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var15 = $thread.pop();$var11 = $thread.pop();$var20 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var17 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var10 = nms_InventoryPlayer_getCurrentItem($var1.$inventory0);
        $var17 = $this.$field_208_g;
        $var18 = $this.$field_207_h;
        $var19 = $this.$field_209_f;
        $var20 = $var10 === null ? 0 : 1;
        $var19.$field_1278_i = $var20;
        $var18.$field_1278_i = $var20;
        $var17.$field_1278_i = $var20;
        $var10 = $this.$field_208_g;
        $var17 = $this.$field_207_h;
        $var18 = $this.$field_209_f;
        $var20 = nms_EntityPlayerSP_func_381_o($var1);
        $var18.$field_1277_j = $var20;
        $var17.$field_1277_j = $var20;
        $var10.$field_1277_j = $var20;
        $var11 = $var4 - $var1.$yOffset;
        if ($var1.$field_12240_bw)
            $var11 = $var11 - 0.125;
        $ptr = 1;
    case 1:
        nms_RenderLiving_a($this, $var1, $var2, $var11, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        $var10 = $this.$field_208_g;
        $var17 = $this.$field_207_h;
        $this.$field_209_f.$field_1277_j = 0;
        $var17.$field_1277_j = 0;
        $var10.$field_1277_j = 0;
        $var10 = $this.$field_208_g;
        $var17 = $this.$field_207_h;
        $this.$field_209_f.$field_1278_i = 0;
        $var17.$field_1278_i = 0;
        $var10.$field_1278_i = 0;
        $var15 = nms_Entity_getDistanceToEntity($var1, $this.$renderManager.$field_1226_h);
        if ($var15 < (!nms_EntityPlayerSP_func_381_o($var1) ? 64.0 : 32.0)) {
            $var8 = 0.0266666691750288 * jl_Math_sqrt($var15) / 2.0;
            $var17 = nms_Render_getFontRendererFromRenderManager($this);
            olo_EaglerAdapterGL30_glPushMatrix();
            olo_EaglerAdapterGL30_glTranslatef($var2 + 0.0, $var4 + 2.299999952316284, $var6);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glRotatef( -$this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glRotatef($this.$renderManager.$field_1224_j, 1.0, 0.0, 0.0);
            $var9 =  -$var8;
            olo_EaglerAdapterGL30_glScalef($var9, $var9, $var8);
            $var18 = $var1.$field_771_i;
            olo_EaglerAdapterGL30_glDisable(2896);
            if (nms_EntityPlayerSP_func_381_o($var1)) {
                olo_EaglerAdapterGL30_glTranslatef(0.0, 0.25 / $var8, 0.0);
                olo_EaglerAdapterGL30_glDepthMask(0);
                olo_EaglerAdapterGL30_glEnable(3042);
                olo_EaglerAdapterGL30_glBlendFunc(770, 771);
                nms_Tessellator_$callClinit();
                $var19 = nms_Tessellator_instance;
                olo_EaglerAdapterGL30_glDisable(3553);
                nms_Tessellator_startDrawingQuads($var19);
                $var20 = nms_FontRenderer_getStringWidth($var17, $var18) / 2 | 0;
                nms_Tessellator_setColorRGBA_F($var19, 0.0, 0.0, 0.0, 0.25);
                $var2 =  -$var20 - 1 | 0;
                nms_Tessellator_addVertex($var19, $var2, (-1.0), 0.0);
                nms_Tessellator_addVertex($var19, $var2, 8.0, 0.0);
                $var2 = $var20 + 1 | 0;
                nms_Tessellator_addVertex($var19, $var2, 8.0, 0.0);
                nms_Tessellator_addVertex($var19, $var2, (-1.0), 0.0);
                nms_Tessellator_draw($var19);
                olo_EaglerAdapterGL30_glEnable(3553);
                olo_EaglerAdapterGL30_glDepthMask(1);
                nms_FontRenderer_drawString($var17, $var18,  -nms_FontRenderer_getStringWidth($var17, $var18) / 2 | 0, 0, 553648127);
                olo_EaglerAdapterGL30_glEnable(2896);
                olo_EaglerAdapterGL30_glDisable(3042);
                olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
                olo_EaglerAdapterGL30_glPopMatrix();
            } else {
                olo_EaglerAdapterGL30_glDepthMask(0);
                olo_EaglerAdapterGL30_glDisable(2929);
                olo_EaglerAdapterGL30_glEnable(3042);
                olo_EaglerAdapterGL30_glBlendFunc(770, 771);
                nms_Tessellator_$callClinit();
                $var19 = nms_Tessellator_instance;
                olo_EaglerAdapterGL30_glDisable(3553);
                nms_Tessellator_startDrawingQuads($var19);
                $var20 = nms_FontRenderer_getStringWidth($var17, $var18) / 2 | 0;
                nms_Tessellator_setColorRGBA_F($var19, 0.0, 0.0, 0.0, 0.25);
                $var2 =  -$var20 - 1 | 0;
                nms_Tessellator_addVertex($var19, $var2, (-1.0), 0.0);
                nms_Tessellator_addVertex($var19, $var2, 8.0, 0.0);
                $var2 = $var20 + 1 | 0;
                nms_Tessellator_addVertex($var19, $var2, 8.0, 0.0);
                nms_Tessellator_addVertex($var19, $var2, (-1.0), 0.0);
                nms_Tessellator_draw($var19);
                olo_EaglerAdapterGL30_glEnable(3553);
                nms_FontRenderer_drawString($var17, $var18,  -nms_FontRenderer_getStringWidth($var17, $var18) / 2 | 0, 0, 553648127);
                olo_EaglerAdapterGL30_glEnable(2929);
                olo_EaglerAdapterGL30_glDepthMask(1);
                nms_FontRenderer_drawString($var17, $var18,  -nms_FontRenderer_getStringWidth($var17, $var18) / 2 | 0, 0, (-1));
                olo_EaglerAdapterGL30_glEnable(2896);
                olo_EaglerAdapterGL30_glDisable(3042);
                olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
                olo_EaglerAdapterGL30_glPopMatrix();
            }
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var17, $var18, $var19, $var20, $var11, $var15, $ptr);
}
function nms_RenderPlayer_a1($this, $var1, $var2) {
    var $var3, $var6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var6 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = nms_InventoryPlayer_armorItemInSlot($var1.$inventory0, 3);
        if ($var3 !== null && nms_ItemStack_getItem($var3).$shiftedIndex < 256) {
            olo_EaglerAdapterGL30_glPushMatrix();
            nms_ModelRenderer_func_926_b($this.$field_209_f.$bipedHead, 0.0625);
            nms_Block_$callClinit();
            if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var3.$itemID].$getRenderType())) {
                olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.25), 0.0);
                olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 1.0, 0.0);
                olo_EaglerAdapterGL30_glScalef(0.625, (-0.625), 0.625);
            }
            $var6 = $this.$renderManager.$field_4236_f;
            $ptr = 1;
            continue main;
        }
        $var6 = nms_InventoryPlayer_getCurrentItem($var1.$inventory0);
        if ($var6 === null)
            return;
        olo_EaglerAdapterGL30_glPushMatrix();
        nms_ModelRenderer_func_926_b($this.$field_209_f.$bipedRightArm, 0.0625);
        olo_EaglerAdapterGL30_glTranslatef((-0.0625), 0.4375, 0.0625);
        if ($var1.$fishEntity !== null) {
            $var6 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_($var6, nms_Item_stick.$shiftedIndex);
        }
        a: {
            if ($var6.$itemID < 256) {
                nms_Block_$callClinit();
                if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var6.$itemID].$getRenderType())) {
                    olo_EaglerAdapterGL30_glTranslatef(0.0, 0.1875, (-0.3125));
                    olo_EaglerAdapterGL30_glRotatef(20.0, 1.0, 0.0, 0.0);
                    olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
                    olo_EaglerAdapterGL30_glScalef(0.375, (-0.375), 0.375);
                    break a;
                }
            }
            nms_Item_$callClinit();
            if (!nms_Item_itemsList.data[$var6.$itemID].$isFull3D()) {
                olo_EaglerAdapterGL30_glTranslatef(0.25, 0.1875, (-0.1875));
                olo_EaglerAdapterGL30_glScalef(0.375, 0.375, 0.375);
                olo_EaglerAdapterGL30_glRotatef(60.0, 0.0, 0.0, 1.0);
                olo_EaglerAdapterGL30_glRotatef((-90.0), 1.0, 0.0, 0.0);
                olo_EaglerAdapterGL30_glRotatef(20.0, 0.0, 0.0, 1.0);
            } else {
                if (nms_Item_itemsList.data[$var6.$itemID].$shouldRotateAroundWhenRendering()) {
                    olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 0.0, 1.0);
                    olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.125), 0.0);
                }
                olo_EaglerAdapterGL30_glTranslatef(0.0, 0.1875, 0.0);
                olo_EaglerAdapterGL30_glScalef(0.625, (-0.625), 0.625);
                olo_EaglerAdapterGL30_glRotatef((-100.0), 1.0, 0.0, 0.0);
                olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
            }
        }
        $var1 = $this.$renderManager.$field_4236_f;
        $ptr = 2;
        continue main;
    case 1:
        nms_ItemRenderer_renderItem($var6, $var3);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        $var6 = nms_InventoryPlayer_getCurrentItem($var1.$inventory0);
        if ($var6 === null)
            return;
        olo_EaglerAdapterGL30_glPushMatrix();
        nms_ModelRenderer_func_926_b($this.$field_209_f.$bipedRightArm, 0.0625);
        olo_EaglerAdapterGL30_glTranslatef((-0.0625), 0.4375, 0.0625);
        if ($var1.$fishEntity !== null) {
            $var6 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_($var6, nms_Item_stick.$shiftedIndex);
        }
        b: {
            if ($var6.$itemID < 256) {
                nms_Block_$callClinit();
                if (nms_RenderBlocks_func_1219_a(nms_Block_blocksList.data[$var6.$itemID].$getRenderType())) {
                    olo_EaglerAdapterGL30_glTranslatef(0.0, 0.1875, (-0.3125));
                    olo_EaglerAdapterGL30_glRotatef(20.0, 1.0, 0.0, 0.0);
                    olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
                    olo_EaglerAdapterGL30_glScalef(0.375, (-0.375), 0.375);
                    break b;
                }
            }
            nms_Item_$callClinit();
            if (!nms_Item_itemsList.data[$var6.$itemID].$isFull3D()) {
                olo_EaglerAdapterGL30_glTranslatef(0.25, 0.1875, (-0.1875));
                olo_EaglerAdapterGL30_glScalef(0.375, 0.375, 0.375);
                olo_EaglerAdapterGL30_glRotatef(60.0, 0.0, 0.0, 1.0);
                olo_EaglerAdapterGL30_glRotatef((-90.0), 1.0, 0.0, 0.0);
                olo_EaglerAdapterGL30_glRotatef(20.0, 0.0, 0.0, 1.0);
            } else {
                if (nms_Item_itemsList.data[$var6.$itemID].$shouldRotateAroundWhenRendering()) {
                    olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 0.0, 1.0);
                    olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.125), 0.0);
                }
                olo_EaglerAdapterGL30_glTranslatef(0.0, 0.1875, 0.0);
                olo_EaglerAdapterGL30_glScalef(0.625, (-0.625), 0.625);
                olo_EaglerAdapterGL30_glRotatef((-100.0), 1.0, 0.0, 0.0);
                olo_EaglerAdapterGL30_glRotatef(45.0, 0.0, 1.0, 0.0);
            }
        }
        $var1 = $this.$renderManager.$field_4236_f;
        $ptr = 2;
    case 2:
        nms_ItemRenderer_renderItem($var1, $var6);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var6, $ptr);
}
function nms_RenderPlayer_b($this, $var1, $var2) {
    olo_EaglerAdapterGL30_glScalef(0.9375, 0.9375, 0.9375);
}
function nms_RenderPlayer_drawFirstPersonHand($this) {
    $this.$field_209_f.$field_1244_k = 0.0;
    $this.$field_209_f.$setRotationAngles(0.0, 0.0, 0.0, 0.0, 0.0, 0.0625);
    nms_ModelRenderer_render($this.$field_209_f.$bipedRightArm, 0.0625);
}
function nms_RenderPlayer_func_6330_a($this, $var1, $var2) {
    nms_RenderPlayer_b($this, $var1, $var2);
}
function nms_RenderPlayer_func_166_a($this, $var1, $var2) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderPlayer_a($this, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        return $var2;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $ptr);
}
function nms_RenderPlayer_func_6331_b($this, $var1, $var2) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderPlayer_a1($this, $var1, $var2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $ptr);
}
function nms_RenderPlayer_a2($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderPlayer_a0($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderPlayer_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderPlayer_a0($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_RenderPlayer__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createArray(jl_String, 5);
    var$2 = var$1.data;
    var$2[0] = $rt_s(241);
    var$2[1] = $rt_s(627);
    var$2[2] = $rt_s(628);
    var$2[3] = $rt_s(629);
    var$2[4] = $rt_s(630);
    nms_RenderPlayer_armorFilenamePrefix = var$1;
}
function nms_EntityZombieSimple() {
    nms_EntityMobs.call(this);
}
function nms_EntityZombieSimple_func_439_a($this, $var1, $var2, $var3) {
    return nms_World_getLightBrightness($this.$worldObj0, $var1, $var2, $var3) - 0.5;
}
function nms_RenderZombieSimple() {
    nms_RenderLiving.call(this);
    this.$field_204_f = 0.0;
}
function nms_RenderZombieSimple_a($this, $var1, $var2) {
    olo_EaglerAdapterGL30_glScalef($this.$field_204_f, $this.$field_204_f, $this.$field_204_f);
}
function nms_RenderZombieSimple_func_6330_a($this, $var1, $var2) {
    nms_RenderZombieSimple_a($this, $var1, $var2);
}
function nms_EntityFlying() {
    nms_EntityLiving.call(this);
}
function nms_EntityFlying_fall($this, $var1) {
    return;
}
function nms_EntityFlying_func_435_b($this, $var1, $var2) {
    var $var3, $var4, $var8, $var5, $var10, $var9, $var7;
    if (nms_Entity_handleWaterMovement($this)) {
        nms_Entity_func_351_a($this, $var1, $var2, 0.019999999552965164);
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $this.$motionX = $this.$motionX * 0.800000011920929;
        $this.$motionY = $this.$motionY * 0.800000011920929;
        $this.$motionZ = $this.$motionZ * 0.800000011920929;
    } else if (nms_Entity_handleLavaMovement($this)) {
        nms_Entity_func_351_a($this, $var1, $var2, 0.019999999552965164);
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $this.$motionX = $this.$motionX * 0.5;
        $this.$motionY = $this.$motionY * 0.5;
        $this.$motionZ = $this.$motionZ * 0.5;
    } else {
        $var3 = 0.9100000262260437;
        if ($this.$onGround) {
            $var3 = 0.546000063419342;
            $var4 = nms_World_getBlockId($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$boundingBox.$minY0) - 1 | 0, nms_MathHelper_floor_double($this.$posZ));
            if ($var4 > 0) {
                nms_Block_$callClinit();
                $var3 = nms_Block_blocksList.data[$var4].$slipperiness * 0.9100000262260437;
            }
        }
        $var8 = 0.16277135908603668 / ($var3 * $var3 * $var3);
        nms_Entity_func_351_a($this, $var1, $var2, !$this.$onGround ? 0.019999999552965164 : 0.10000000149011612 * $var8);
        $var1 = 0.9100000262260437;
        if ($this.$onGround) {
            $var1 = 0.546000063419342;
            $var5 = nms_World_getBlockId($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$boundingBox.$minY0) - 1 | 0, nms_MathHelper_floor_double($this.$posZ));
            if ($var5 > 0) {
                nms_Block_$callClinit();
                $var1 = nms_Block_blocksList.data[$var5].$slipperiness * 0.9100000262260437;
            }
        }
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $var10 = $this.$motionX;
        $var9 = $var1;
        $this.$motionX = $var10 * $var9;
        $this.$motionY = $this.$motionY * $var9;
        $this.$motionZ = $this.$motionZ * $var9;
    }
    $this.$field_705_Q = $this.$field_704_R;
    $var10 = $this.$posX - $this.$prevPosX;
    $var9 = $this.$posZ - $this.$prevPosZ;
    $var7 = nms_MathHelper_sqrt_double($var10 * $var10 + $var9 * $var9) * 4.0;
    if ($var7 > 1.0)
        $var7 = 1.0;
    $this.$field_704_R = $this.$field_704_R + ($var7 - $this.$field_704_R) * 0.4000000059604645;
    $this.$field_703_S = $this.$field_703_S + $this.$field_704_R;
}
function nms_EntityFlying_isOnLadder($this) {
    return 0;
}
function nms_EntityGhast() {
    var a = this; nms_EntityFlying.call(a);
    a.$field_4121_a = 0;
    a.$field_4120_b = 0.0;
    a.$field_4127_c = 0.0;
    a.$field_4126_d = 0.0;
    a.$field_4123_g = null;
    a.$field_4122_h = 0;
    a.$field_4125_e = 0;
    a.$field_4124_f = 0;
}
function nms_EntityGhast_func_418_b_($this) {
    var $var1, $var3, $var5, $var7, var$5, var$6, $var11, $var13, $var15, $var17, $var20;
    if (!$this.$worldObj0.$difficultySetting)
        nms_Entity_setEntityDead($this);
    $this.$field_4125_e = $this.$field_4124_f;
    $var1 = $this.$field_4120_b - $this.$posX;
    $var3 = $this.$field_4127_c - $this.$posY;
    $var5 = $this.$field_4126_d - $this.$posZ;
    $var7 = nms_MathHelper_sqrt_double($var1 * $var1 + $var3 * $var3 + $var5 * $var5);
    if (!($var7 >= 1.0 && $var7 <= 60.0)) {
        $this.$field_4120_b = $this.$posX + (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * 16.0;
        $this.$field_4127_c = $this.$posY + (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * 16.0;
        $this.$field_4126_d = $this.$posZ + (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * 16.0;
    }
    var$5 = $this.$field_4121_a;
    $this.$field_4121_a = var$5 - 1 | 0;
    if (var$5 <= 0) {
        $this.$field_4121_a = $this.$field_4121_a + (ju_Random_nextInt($this.$rand2, 5) + 2 | 0) | 0;
        if (!nms_EntityGhast_func_4050_a($this, $this.$field_4120_b, $this.$field_4127_c, $this.$field_4126_d, $var7)) {
            $this.$field_4120_b = $this.$posX;
            $this.$field_4127_c = $this.$posY;
            $this.$field_4126_d = $this.$posZ;
        } else {
            $this.$motionX = $this.$motionX + $var1 / $var7 * 0.1;
            $this.$motionY = $this.$motionY + $var3 / $var7 * 0.1;
            $this.$motionZ = $this.$motionZ + $var5 / $var7 * 0.1;
        }
    }
    if ($this.$field_4123_g !== null && $this.$field_4123_g.$isDead)
        $this.$field_4123_g = null;
    a: {
        if ($this.$field_4123_g !== null) {
            var$5 = $this.$field_4122_h;
            $this.$field_4122_h = var$5 - 1 | 0;
            if (var$5 > 0)
                break a;
        }
        $this.$field_4123_g = nms_World_getClosestPlayerToEntity($this.$worldObj0, $this, 100.0);
        if ($this.$field_4123_g !== null)
            $this.$field_4122_h = 20;
    }
    if (!($this.$field_4123_g !== null && nms_Entity_getDistanceSqToEntity($this.$field_4123_g, $this) < 4096.0)) {
        var$6 =  -jl_Math_atan2($this.$motionX, $this.$motionZ) * 180.0 / 3.1415927410125732;
        $this.$rotationYaw = var$6;
        $this.$field_735_n = var$6;
        if ($this.$field_4124_f > 0)
            $this.$field_4124_f = $this.$field_4124_f - 1 | 0;
    } else {
        $var11 = $this.$field_4123_g.$posX - $this.$posX;
        $var13 = $this.$field_4123_g.$boundingBox.$minY0 + $this.$field_4123_g.$height / 2.0 - ($this.$posY + $this.$height / 2.0);
        $var15 = $this.$field_4123_g.$posZ - $this.$posZ;
        var$6 =  -jl_Math_atan2($var11, $var15) * 180.0 / 3.1415927410125732;
        $this.$rotationYaw = var$6;
        $this.$field_735_n = var$6;
        if (nms_EntityLiving_canEntityBeSeen($this, $this.$field_4123_g)) {
            if ($this.$field_4124_f == 10)
                nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(631), nms_EntityGhast_getSoundVolume($this), (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
            $this.$field_4124_f = $this.$field_4124_f + 1 | 0;
            if ($this.$field_4124_f == 20) {
                nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(632), nms_EntityGhast_getSoundVolume($this), (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0);
                $var17 = nms_EntityFireball__init_($this.$worldObj0, $this, $var11, $var13, $var15);
                $var20 = nms_EntityLiving_getLook($this, 1.0);
                $var17.$posX = $this.$posX + $var20.$xCoord * 4.0;
                $var17.$posY = $this.$posY + $this.$height / 2.0 + 0.5;
                $var17.$posZ = $this.$posZ + $var20.$zCoord * 4.0;
                nms_World_entityJoinedWorld($this.$worldObj0, $var17);
                $this.$field_4124_f = (-40);
            }
        } else if ($this.$field_4124_f > 0)
            $this.$field_4124_f = $this.$field_4124_f - 1 | 0;
    }
    $this.$texture = $this.$field_4124_f <= 10 ? $rt_s(633) : $rt_s(634);
}
function nms_EntityGhast_func_4050_a($this, $var1, $var3, $var5, $var7) {
    var $var9, $var11, $var13, $var15, $var16;
    $var9 = ($this.$field_4120_b - $this.$posX) / $var7;
    $var11 = ($this.$field_4127_c - $this.$posY) / $var7;
    $var13 = ($this.$field_4126_d - $this.$posZ) / $var7;
    $var15 = nms_AxisAlignedBB_copy($this.$boundingBox);
    $var16 = 1;
    while ($var16 < $var7) {
        nms_AxisAlignedBB_offset($var15, $var9, $var11, $var13);
        if (nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, $var15).$size > 0)
            return 0;
        $var16 = $var16 + 1 | 0;
    }
    return 1;
}
function nms_EntityGhast_getLivingSound($this) {
    return $rt_s(635);
}
function nms_EntityGhast_getHurtSound($this) {
    return $rt_s(636);
}
function nms_EntityGhast_getDeathSound($this) {
    return $rt_s(637);
}
function nms_EntityGhast_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_gunpowder.$shiftedIndex;
}
function nms_EntityGhast_getSoundVolume($this) {
    return 10.0;
}
function nms_EntityGhast_getCanSpawnHere($this) {
    return !ju_Random_nextInt($this.$rand2, 20) && nms_EntityLiving_getCanSpawnHere($this) && $this.$worldObj0.$difficultySetting > 0 ? 1 : 0;
}
function nms_EntityGhast_func_6391_i($this) {
    return 1;
}
function nms_RenderGhast() {
    nms_RenderLiving.call(this);
}
function nms_RenderGhast__init_0() {
    var var_0 = new nms_RenderGhast();
    nms_RenderGhast__init_(var_0);
    return var_0;
}
function nms_RenderGhast__init_($this) {
    nms_RenderLiving__init_($this, nms_ModelGhast__init_0(), 0.5);
}
function nms_RenderGhast_a($this, $var1, $var2) {
    var $var4, $var5, $var6;
    $var4 = ($var1.$field_4125_e + ($var1.$field_4124_f - $var1.$field_4125_e | 0) * $var2) / 20.0;
    if ($var4 < 0.0)
        $var4 = 0.0;
    $var2 = 1.0 / ($var4 * $var4 * $var4 * $var4 * $var4 * 2.0 + 1.0);
    $var5 = (8.0 + $var2) / 2.0;
    $var6 = (8.0 + 1.0 / $var2) / 2.0;
    olo_EaglerAdapterGL30_glScalef($var6, $var5, $var6);
    olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
}
function nms_RenderGhast_func_6330_a($this, $var1, $var2) {
    nms_RenderGhast_a($this, $var1, $var2);
}
function nms_RenderEntity() {
    nms_Render.call(this);
}
function nms_RenderEntity__init_0() {
    var var_0 = new nms_RenderEntity();
    nms_RenderEntity__init_(var_0);
    return var_0;
}
function nms_RenderEntity__init_($this) {
    nms_Render__init_($this);
}
function nms_RenderEntity_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    olo_EaglerAdapterGL30_glPushMatrix();
    nms_Render_renderOffsetAABB($var1.$boundingBox, $var2 - $var1.$lastTickPosX, $var4 - $var1.$lastTickPosY, $var6 - $var1.$lastTickPosZ);
    olo_EaglerAdapterGL30_glPopMatrix();
}
function nms_EntityPainting() {
    var a = this; nms_Entity.call(a);
    a.$field_695_c = 0;
    a.$field_691_a = 0;
    a.$field_9322_d = 0;
    a.$field_9321_e = 0;
    a.$field_9320_f = 0;
    a.$field_690_b = null;
}
function nms_EntityPainting_func_412_b($this, $var1) {
    var $var2, $var3, $var4, var$5, $var5, $var6, $var7, var$9, var$10, var$11;
    $this.$field_691_a = $var1;
    $var2 = $var1 * 90 | 0;
    $this.$rotationYaw = $var2;
    $this.$prevRotationYaw = $var2;
    $var2 = $this.$field_690_b.$field_1623_z;
    $var3 = $this.$field_690_b.$field_1636_A;
    $var4 = $this.$field_690_b.$field_1623_z;
    if ($var1 && $var1 != 2)
        $var2 = 0.5;
    else
        $var4 = 0.5;
    $var2 = $var2 / 32.0;
    $var3 = $var3 / 32.0;
    var$5 = $var4 / 32.0;
    $var5 = $this.$field_9322_d + 0.5;
    $var6 = $this.$field_9321_e + 0.5;
    $var7 = $this.$field_9320_f + 0.5;
    if (!$var1)
        $var7 = $var7 - 0.5625;
    var$9 = $rt_compare($var1, 1);
    if (!var$9)
        $var5 = $var5 - 0.5625;
    var$10 = $rt_compare($var1, 2);
    if (!var$10)
        $var7 = $var7 + 0.5625;
    var$11 = $rt_compare($var1, 3);
    if (!var$11)
        $var5 = $var5 + 0.5625;
    if (!$var1)
        $var5 = $var5 - nms_EntityPainting_func_411_c($this, $this.$field_690_b.$field_1623_z);
    if (!var$9)
        $var7 = $var7 + nms_EntityPainting_func_411_c($this, $this.$field_690_b.$field_1623_z);
    if (!var$10)
        $var5 = $var5 + nms_EntityPainting_func_411_c($this, $this.$field_690_b.$field_1623_z);
    if (!var$11)
        $var7 = $var7 - nms_EntityPainting_func_411_c($this, $this.$field_690_b.$field_1623_z);
    $var4 = $var6 + nms_EntityPainting_func_411_c($this, $this.$field_690_b.$field_1636_A);
    nms_Entity_setPosition($this, $var5, $var4, $var7);
    nms_AxisAlignedBB_setBounds($this.$boundingBox, $var5 - $var2 + 0.0062500000931322575, $var4 - $var3 + 0.0062500000931322575, $var7 - var$5 + 0.0062500000931322575, $var5 + $var2 + (-0.0062500000931322575), $var4 + $var3 + (-0.0062500000931322575), $var7 + var$5 + (-0.0062500000931322575));
}
function nms_EntityPainting_func_411_c($this, $var1) {
    return $var1 == 32 ? 0.5 : $var1 != 64 ? 0.0 : 0.5;
}
function nms_EntityPainting_onUpdate($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$field_695_c;
    $this.$field_695_c = var$1 + 1 | 0;
    if (var$1 == 100 && !nms_EntityPainting_func_410_i($this)) {
        $this.$field_695_c = 0;
        nms_Entity_setEntityDead($this);
        var$2 = $this.$worldObj0;
        var$3 = new nms_EntityItem;
        var$4 = $this.$worldObj0;
        var$5 = $this.$posX;
        var$6 = $this.$posY;
        var$7 = $this.$posZ;
        var$8 = new nms_ItemStack;
        nms_Item_$callClinit();
        nms_ItemStack__init_2(var$8, nms_Item_painting);
        nms_EntityItem__init_0(var$3, var$4, var$5, var$6, var$7, var$8);
        nms_World_entityJoinedWorld(var$2, var$3);
    }
}
function nms_EntityPainting_func_410_i($this) {
    var $var1, $var2, $var3, $var5, var$5, $var6, $var9, $var7, $var7_0;
    if (nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, $this.$boundingBox).$size > 0)
        return 0;
    $var1 = $this.$field_690_b.$field_1623_z / 16 | 0;
    $var2 = $this.$field_690_b.$field_1636_A / 16 | 0;
    $var3 = $this.$field_9322_d;
    $var5 = $this.$field_9320_f;
    if (!$this.$field_691_a)
        $var3 = nms_MathHelper_floor_double($this.$posX - $this.$field_690_b.$field_1623_z / 32.0);
    if ($this.$field_691_a == 1)
        $var5 = nms_MathHelper_floor_double($this.$posZ - $this.$field_690_b.$field_1623_z / 32.0);
    if ($this.$field_691_a == 2)
        $var3 = nms_MathHelper_floor_double($this.$posX - $this.$field_690_b.$field_1623_z / 32.0);
    if ($this.$field_691_a == 3)
        $var5 = nms_MathHelper_floor_double($this.$posZ - $this.$field_690_b.$field_1623_z / 32.0);
    var$5 = nms_MathHelper_floor_double($this.$posY - $this.$field_690_b.$field_1636_A / 32.0);
    $var6 = 0;
    a: while (true) {
        if ($var6 >= $var1) {
            $var9 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, $this.$boundingBox);
            $var7 = 0;
            while ($var7 < $var9.$size) {
                if (ju_ArrayList_get($var9, $var7) instanceof nms_EntityPainting)
                    return 0;
                $var7 = $var7 + 1 | 0;
            }
            return 1;
        }
        $var7_0 = 0;
        while ($var7_0 < $var2) {
            if (!($this.$field_691_a && $this.$field_691_a != 2 ? nms_World_getBlockMaterial($this.$worldObj0, $this.$field_9322_d, var$5 + $var7_0 | 0, $var5 + $var6 | 0) : nms_World_getBlockMaterial($this.$worldObj0, $var3 + $var6 | 0, var$5 + $var7_0 | 0, $this.$field_9320_f)).$func_878_a())
                break a;
            $var7_0 = $var7_0 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
    return 0;
}
function nms_EntityPainting_canBeCollidedWith($this) {
    return 1;
}
function nms_EntityPainting_canAttackEntity($this, $var1, $var2) {
    var var$3, var$4, var$5, var$6, var$7, var$8;
    nms_Entity_setEntityDead($this);
    nms_Entity_func_9281_M($this);
    var$3 = $this.$worldObj0;
    $var1 = new nms_EntityItem;
    var$4 = $this.$worldObj0;
    var$5 = $this.$posX;
    var$6 = $this.$posY;
    var$7 = $this.$posZ;
    var$8 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_2(var$8, nms_Item_painting);
    nms_EntityItem__init_0($var1, var$4, var$5, var$6, var$7, var$8);
    nms_World_entityJoinedWorld(var$3, $var1);
    return 1;
}
function nms_EntityPainting_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setByte($var1, $rt_s(638), $this.$field_691_a << 24 >> 24);
    nms_NBTTagCompound_setString($var1, $rt_s(639), $this.$field_690_b.$field_1624_y);
    nms_NBTTagCompound_setInteger($var1, $rt_s(640), $this.$field_9322_d);
    nms_NBTTagCompound_setInteger($var1, $rt_s(641), $this.$field_9321_e);
    nms_NBTTagCompound_setInteger($var1, $rt_s(642), $this.$field_9320_f);
}
function nms_EntityPainting_readEntityFromNBT($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6;
    $this.$field_691_a = nms_NBTTagCompound_getByte($var1, $rt_s(638));
    $this.$field_9322_d = nms_NBTTagCompound_getInteger($var1, $rt_s(640));
    $this.$field_9321_e = nms_NBTTagCompound_getInteger($var1, $rt_s(641));
    $this.$field_9320_f = nms_NBTTagCompound_getInteger($var1, $rt_s(642));
    $var2 = nms_NBTTagCompound_getString($var1, $rt_s(639));
    $var3 = nms_EnumArt_values().data;
    $var4 = $var3.length;
    $var5 = 0;
    while ($var5 < $var4) {
        $var6 = $var3[$var5];
        if (jl_String_equals($var6.$field_1624_y, $var2))
            $this.$field_690_b = $var6;
        $var5 = $var5 + 1 | 0;
    }
    if ($this.$field_690_b === null)
        $this.$field_690_b = nms_EnumArt_Kebab;
    nms_EntityPainting_func_412_b($this, $this.$field_691_a);
}
function nms_RenderPainting() {
    nms_Render.call(this);
    this.$rand3 = null;
}
function nms_RenderPainting__init_0() {
    var var_0 = new nms_RenderPainting();
    nms_RenderPainting__init_(var_0);
    return var_0;
}
function nms_RenderPainting__init_($this) {
    nms_Render__init_($this);
    $this.$rand3 = new ju_Random;
}
function nms_RenderPainting_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glRotatef($var8, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glEnable(32826);
        $var10 = $rt_s(643);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var10);
        if ($rt_suspending()) {
            break main;
        }
        $var10 = $var1.$field_690_b;
        olo_EaglerAdapterGL30_glScalef(0.0625, 0.0625, 0.0625);
        nms_RenderPainting_func_159_a($this, $var1, $var10.$field_1623_z, $var10.$field_1636_A, $var10.$field_1634_B, $var10.$field_1632_C);
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $ptr);
}
function nms_RenderPainting_func_159_a($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var10, var$9, var$10, var$11, var$12, $var11, $var12, var$15, $var13, $var11_0, $var14, $var15, $var17, $var18, var$22, var$23, var$24, $var16, $var19, $var32, var$28, var$29, var$30, var$31, var$32, var$33, var$34;
    $var6 =  -$var2 / 2.0;
    $var7 =  -$var3 / 2.0;
    $var10 = 0;
    var$9 = $var2 / 16 | 0;
    var$10 = $var3 / 16 | 0;
    var$11 = $var4 + $var2 | 0;
    var$12 = $var5 + $var3 | 0;
    while ($var10 < var$9) {
        $var11 = 0;
        while ($var11 < var$10) {
            $var2 = ($var10 + 1 | 0) * 16 | 0;
            $var12 = $var6 + $var2;
            var$15 = $var10 * 16 | 0;
            $var13 = $var6 + var$15;
            $var11_0 = $var11 + 1 | 0;
            $var5 = $var11_0 * 16 | 0;
            $var14 = $var7 + $var5;
            $var11 = $var11 * 16 | 0;
            $var15 = $var7 + $var11;
            $var17 = ($var12 + $var13) / 2.0;
            $var18 = ($var14 + $var15) / 2.0;
            var$22 = nms_MathHelper_floor_double($var1.$posX);
            var$23 = nms_MathHelper_floor_double($var1.$posY + $var18 / 16.0);
            var$24 = nms_MathHelper_floor_double($var1.$posZ);
            if (!$var1.$field_691_a)
                var$22 = nms_MathHelper_floor_double($var1.$posX + $var17 / 16.0);
            if ($var1.$field_691_a == 1)
                var$24 = nms_MathHelper_floor_double($var1.$posZ - $var17 / 16.0);
            if ($var1.$field_691_a == 2)
                var$22 = nms_MathHelper_floor_double($var1.$posX - $var17 / 16.0);
            if ($var1.$field_691_a == 3)
                var$24 = nms_MathHelper_floor_double($var1.$posZ + $var17 / 16.0);
            $var16 = nms_World_getLightBrightness($this.$renderManager.$worldObj4, var$22, var$23, var$24);
            olo_EaglerAdapterGL30_glColor3f($var16, $var16, $var16);
            $var16 = (var$11 - var$15 | 0) / 256.0;
            $var17 = (var$11 - $var2 | 0) / 256.0;
            $var18 = (var$12 - $var11 | 0) / 256.0;
            $var19 = (var$12 - $var5 | 0) / 256.0;
            nms_Tessellator_$callClinit();
            $var32 = nms_Tessellator_instance;
            nms_Tessellator_startDrawingQuads($var32);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, (-1.0));
            var$28 = $var12;
            var$29 = $var15;
            var$30 = $var17;
            var$31 = $var18;
            nms_Tessellator_addVertexWithUV($var32, var$28, var$29, (-0.5), var$30, var$31);
            var$32 = $var13;
            var$33 = $var16;
            nms_Tessellator_addVertexWithUV($var32, var$32, var$29, (-0.5), var$33, var$31);
            var$31 = $var14;
            var$34 = $var19;
            nms_Tessellator_addVertexWithUV($var32, var$32, var$31, (-0.5), var$33, var$34);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$31, (-0.5), var$30, var$34);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, 1.0);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$31, 0.5, 0.75, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$31, 0.5, 0.8125, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$29, 0.5, 0.8125, 0.0625);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$29, 0.5, 0.75, 0.0625);
            olo_EaglerAdapterGL30_glNormal3f(0.0, (-1.0), 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$31, (-0.5), 0.75, 0.001953125);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$31, (-0.5), 0.8125, 0.001953125);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$31, 0.5, 0.8125, 0.001953125);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$31, 0.5, 0.75, 0.001953125);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$29, 0.5, 0.75, 0.001953125);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$29, 0.5, 0.8125, 0.001953125);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$29, (-0.5), 0.8125, 0.001953125);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$29, (-0.5), 0.75, 0.001953125);
            olo_EaglerAdapterGL30_glNormal3f((-1.0), 0.0, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$31, 0.5, 0.751953125, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$29, 0.5, 0.751953125, 0.0625);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$29, (-0.5), 0.751953125, 0.0625);
            nms_Tessellator_addVertexWithUV($var32, var$28, var$31, (-0.5), 0.751953125, 0.0);
            olo_EaglerAdapterGL30_glNormal3f(1.0, 0.0, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$31, (-0.5), 0.751953125, 0.0);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$29, (-0.5), 0.751953125, 0.0625);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$29, 0.5, 0.751953125, 0.0625);
            nms_Tessellator_addVertexWithUV($var32, var$32, var$31, 0.5, 0.751953125, 0.0);
            nms_Tessellator_draw($var32);
            $var11 = $var11_0;
        }
        $var10 = $var10 + 1 | 0;
    }
}
function nms_RenderPainting_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderPainting_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityArrow() {
    var a = this; nms_Entity.call(a);
    a.$xTile = 0;
    a.$yTile = 0;
    a.$zTile = 0;
    a.$inTile = 0;
    a.$inGround = 0;
    a.$arrowShake = 0;
    a.$field_682_g = null;
    a.$field_681_h = 0;
    a.$field_680_i = 0;
}
function nms_EntityArrow__init_(var_0, var_1) {
    var var_2 = new nms_EntityArrow();
    nms_EntityArrow__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_EntityArrow__init_0($this, $var1, $var2) {
    nms_Entity__init_($this, $var1);
    $this.$xTile = (-1);
    $this.$yTile = (-1);
    $this.$zTile = (-1);
    $this.$inTile = 0;
    $this.$inGround = 0;
    $this.$arrowShake = 0;
    $this.$field_680_i = 0;
    $this.$field_682_g = $var2;
    nms_Entity_setSize($this, 0.5, 0.5);
    nms_Entity_setLocationAndAngles($this, $var2.$posX, $var2.$posY + $var2.$func_373_s(), $var2.$posZ, $var2.$rotationYaw, $var2.$rotationPitch);
    $this.$posX = $this.$posX - nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * 0.1599999964237213;
    $this.$posY = $this.$posY - 0.10000000149011612;
    $this.$posZ = $this.$posZ - nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * 0.1599999964237213;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$yOffset = 0.0;
    $this.$motionX =  -nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732);
    $this.$motionZ = nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732);
    $this.$motionY =  -nms_MathHelper_sin($this.$rotationPitch / 180.0 * 3.1415927410125732);
    nms_EntityArrow_func_408_a($this, $this.$motionX, $this.$motionY, $this.$motionZ, 1.5, 1.0);
}
function nms_EntityArrow_func_408_a($this, $var1, $var3, $var5, $var7, $var8) {
    var var$6, var$7, $var10;
    var$6 = nms_MathHelper_sqrt_double($var1 * $var1 + $var3 * $var3 + $var5 * $var5);
    $var1 = $var1 / var$6;
    $var3 = $var3 / var$6;
    $var5 = $var5 / var$6;
    var$6 = ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937;
    var$7 = $var8;
    $var1 = $var1 + var$6 * var$7;
    $var3 = $var3 + ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937 * var$7;
    $var5 = $var5 + ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937 * var$7;
    var$6 = $var7;
    $var1 = $var1 * var$6;
    $var3 = $var3 * var$6;
    $var5 = $var5 * var$6;
    $this.$motionX = $var1;
    $this.$motionY = $var3;
    $this.$motionZ = $var5;
    $var10 = nms_MathHelper_sqrt_double($var1 * $var1 + $var5 * $var5);
    $var7 = jl_Math_atan2($var1, $var5) * 180.0 / 3.1415927410125732;
    $this.$rotationYaw = $var7;
    $this.$prevRotationYaw = $var7;
    $var7 = jl_Math_atan2($var3, $var10) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch = $var7;
    $this.$prevRotationPitch = $var7;
    $this.$field_681_h = 0;
}
function nms_EntityArrow_onUpdate($this) {
    var $var1, $var17, $var16, $var2, $var3, $var4, $var5, $var6, $var8, $var9, $var12, $var13, var$13, $var18, $var19;
    nms_Entity_onUpdate($this);
    if ($this.$prevRotationPitch === 0.0 && $this.$prevRotationYaw === 0.0) {
        $var1 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
        $var17 = jl_Math_atan2($this.$motionX, $this.$motionZ) * 180.0 / 3.1415927410125732;
        $this.$rotationYaw = $var17;
        $this.$prevRotationYaw = $var17;
        $var17 = jl_Math_atan2($this.$motionY, $var1) * 180.0 / 3.1415927410125732;
        $this.$rotationPitch = $var17;
        $this.$prevRotationPitch = $var17;
    }
    if ($this.$arrowShake > 0)
        $this.$arrowShake = $this.$arrowShake - 1 | 0;
    if (!$this.$inGround)
        $this.$field_680_i = $this.$field_680_i + 1 | 0;
    else {
        if (nms_World_getBlockId($this.$worldObj0, $this.$xTile, $this.$yTile, $this.$zTile) == $this.$inTile) {
            $this.$field_681_h = $this.$field_681_h + 1 | 0;
            if ($this.$field_681_h == 1200)
                nms_Entity_setEntityDead($this);
            return;
        }
        $this.$inGround = 0;
        $this.$motionX = $this.$motionX * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$motionY = $this.$motionY * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$motionZ = $this.$motionZ * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$field_681_h = 0;
        $this.$field_680_i = 0;
    }
    $var16 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
    $var3 = nms_World_rayTraceBlocks($this.$worldObj0, $var16, $var2);
    $var16 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
    if ($var3 !== null)
        $var2 = nms_Vec3D_createVector($var3.$hitVec.$xCoord, $var3.$hitVec.$yCoord, $var3.$hitVec.$zCoord);
    $var4 = null;
    $var5 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands(nms_AxisAlignedBB_addCoord($this.$boundingBox, $this.$motionX, $this.$motionY, $this.$motionZ), 1.0, 1.0, 1.0));
    $var6 = 0.0;
    $var8 = 0;
    while ($var8 < ju_ArrayList_size($var5)) {
        $var9 = ju_ArrayList_get($var5, $var8);
        if ($var9.$canBeCollidedWith() && !($var9 === $this.$field_682_g && $this.$field_680_i < 5)) {
            $var12 = nms_AxisAlignedBB_func_1169_a(nms_AxisAlignedBB_expands($var9.$boundingBox, 0.30000001192092896, 0.30000001192092896, 0.30000001192092896), $var16, $var2);
            if ($var12 !== null) {
                $var13 = nms_Vec3D_distanceTo($var16, $var12.$hitVec);
                if (!($var13 >= $var6 && $var6 !== 0.0)) {
                    $var4 = $var9;
                    $var6 = $var13;
                }
            }
        }
        $var8 = $var8 + 1 | 0;
    }
    if ($var4 !== null)
        $var3 = nms_MovingObjectPosition__init_($var4);
    if ($var3 !== null) {
        if ($var3.$entityHit === null) {
            $this.$xTile = $var3.$blockX;
            $this.$yTile = $var3.$blockY;
            $this.$zTile = $var3.$blockZ;
            $this.$inTile = nms_World_getBlockId($this.$worldObj0, $this.$xTile, $this.$yTile, $this.$zTile);
            $this.$motionX = $var3.$hitVec.$xCoord - $this.$posX;
            $this.$motionY = $var3.$hitVec.$yCoord - $this.$posY;
            $this.$motionZ = $var3.$hitVec.$zCoord - $this.$posZ;
            $var17 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionY * $this.$motionY + $this.$motionZ * $this.$motionZ);
            $var6 = $this.$posX;
            $var13 = $this.$motionX;
            var$13 = $var17;
            $this.$posX = $var6 - $var13 / var$13 * 0.05000000074505806;
            $this.$posY = $this.$posY - $this.$motionY / var$13 * 0.05000000074505806;
            $this.$posZ = $this.$posZ - $this.$motionZ / var$13 * 0.05000000074505806;
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(644), 1.0, 1.2000000476837158 / (ju_Random_nextFloat($this.$rand2) * 0.20000000298023224 + 0.8999999761581421));
            $this.$inGround = 1;
            $this.$arrowShake = 7;
        } else if ($var3.$entityHit.$canAttackEntity($this.$field_682_g, 4)) {
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(644), 1.0, 1.2000000476837158 / (ju_Random_nextFloat($this.$rand2) * 0.20000000298023224 + 0.8999999761581421));
            nms_Entity_setEntityDead($this);
        } else {
            $this.$motionX = $this.$motionX * (-0.10000000149011612);
            $this.$motionY = $this.$motionY * (-0.10000000149011612);
            $this.$motionZ = $this.$motionZ * (-0.10000000149011612);
            $this.$rotationYaw = $this.$rotationYaw + 180.0;
            $this.$prevRotationYaw = $this.$prevRotationYaw + 180.0;
            $this.$field_680_i = 0;
        }
    }
    $this.$posX = $this.$posX + $this.$motionX;
    $this.$posY = $this.$posY + $this.$motionY;
    $this.$posZ = $this.$posZ + $this.$motionZ;
    $var17 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
    $this.$rotationYaw = jl_Math_atan2($this.$motionX, $this.$motionZ) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch = jl_Math_atan2($this.$motionY, $var17) * 180.0 / 3.1415927410125732;
    while ($this.$rotationPitch - $this.$prevRotationPitch < (-180.0)) {
        $this.$prevRotationPitch = $this.$prevRotationPitch - 360.0;
    }
    while ($this.$rotationPitch - $this.$prevRotationPitch >= 180.0) {
        $this.$prevRotationPitch = $this.$prevRotationPitch + 360.0;
    }
    while ($this.$rotationYaw - $this.$prevRotationYaw < (-180.0)) {
        $this.$prevRotationYaw = $this.$prevRotationYaw - 360.0;
    }
    while ($this.$rotationYaw - $this.$prevRotationYaw >= 180.0) {
        $this.$prevRotationYaw = $this.$prevRotationYaw + 360.0;
    }
    $this.$rotationPitch = $this.$prevRotationPitch + ($this.$rotationPitch - $this.$prevRotationPitch) * 0.20000000298023224;
    $this.$rotationYaw = $this.$prevRotationYaw + ($this.$rotationYaw - $this.$prevRotationYaw) * 0.20000000298023224;
    $var18 = 0.9900000095367432;
    if (nms_Entity_handleWaterMovement($this)) {
        $var19 = 0;
        while ($var19 < 4) {
            nms_World_spawnParticle($this.$worldObj0, $rt_s(485), $this.$posX - $this.$motionX * 0.25, $this.$posY - $this.$motionY * 0.25, $this.$posZ - $this.$motionZ * 0.25, $this.$motionX, $this.$motionY, $this.$motionZ);
            $var19 = $var19 + 1 | 0;
        }
        $var18 = 0.800000011920929;
    }
    $var6 = $this.$motionX;
    $var13 = $var18;
    $this.$motionX = $var6 * $var13;
    $this.$motionY = $this.$motionY * $var13;
    $this.$motionZ = $this.$motionZ * $var13;
    $this.$motionY = $this.$motionY - 0.029999999329447746;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
}
function nms_EntityArrow_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(645), $this.$xTile << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(646), $this.$yTile << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(647), $this.$zTile << 16 >> 16);
    nms_NBTTagCompound_setByte($var1, $rt_s(648), $this.$inTile << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(649), $this.$arrowShake << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(650), (!$this.$inGround ? 0 : 1) << 24 >> 24);
}
function nms_EntityArrow_readEntityFromNBT($this, $var1) {
    $this.$xTile = nms_NBTTagCompound_getShort($var1, $rt_s(645));
    $this.$yTile = nms_NBTTagCompound_getShort($var1, $rt_s(646));
    $this.$zTile = nms_NBTTagCompound_getShort($var1, $rt_s(647));
    $this.$inTile = nms_NBTTagCompound_getByte($var1, $rt_s(648)) & 255;
    $this.$arrowShake = nms_NBTTagCompound_getByte($var1, $rt_s(649)) & 255;
    $this.$inGround = nms_NBTTagCompound_getByte($var1, $rt_s(650)) != 1 ? 0 : 1;
}
function nms_EntityArrow_onCollideWithPlayer($this, $var1) {
    var var$2, var$3;
    if ($this.$inGround && $this.$field_682_g === $var1 && $this.$arrowShake <= 0) {
        var$2 = $var1.$inventory0;
        var$3 = new nms_ItemStack;
        nms_Item_$callClinit();
        nms_ItemStack__init_12(var$3, nms_Item_arrow.$shiftedIndex, 1);
        if (nms_InventoryPlayer_addItemStackToInventory(var$2, var$3)) {
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(651), 0.20000000298023224, ((ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.699999988079071 + 1.0) * 2.0);
            nms_EntityPlayerSP_func_443_a_($var1, $this, 1);
            nms_Entity_setEntityDead($this);
        }
    }
}
function nms_EntityArrow_func_392_h_($this) {
    return 0.0;
}
function nms_RenderArrow() {
    nms_Render.call(this);
}
function nms_RenderArrow__init_0() {
    var var_0 = new nms_RenderArrow();
    nms_RenderArrow__init_(var_0);
    return var_0;
}
function nms_RenderArrow__init_($this) {
    nms_Render__init_($this);
}
function nms_RenderArrow_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var21, $var23, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var23 = $thread.pop();$var21 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var10 = $rt_s(652);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var10);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glRotatef($var1.$prevRotationYaw + ($var1.$rotationYaw - $var1.$prevRotationYaw) * $var9 - 90.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef($var1.$prevRotationPitch + ($var1.$rotationPitch - $var1.$prevRotationPitch) * $var9, 0.0, 0.0, 1.0);
        nms_Tessellator_$callClinit();
        $var10 = nms_Tessellator_instance;
        olo_EaglerAdapterGL30_glEnable(32826);
        $var21 = $var1.$arrowShake - $var9;
        if ($var21 > 0.0)
            olo_EaglerAdapterGL30_glRotatef( -nms_MathHelper_sin($var21 * 3.0) * $var21, 0.0, 0.0, 1.0);
        olo_EaglerAdapterGL30_glRotatef(45.0, 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glScalef(0.05624999850988388, 0.05624999850988388, 0.05624999850988388);
        olo_EaglerAdapterGL30_glTranslatef((-4.0), 0.0, 0.0);
        olo_EaglerAdapterGL30_glNormal3f(0.05624999850988388, 0.0, 0.0);
        nms_Tessellator_startDrawingQuads($var10);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), (-2.0), (-2.0), 0.0, 0.15625);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), (-2.0), 2.0, 0.15625, 0.15625);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), 2.0, 2.0, 0.15625, 0.3125);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), 2.0, (-2.0), 0.0, 0.3125);
        nms_Tessellator_draw($var10);
        olo_EaglerAdapterGL30_glNormal3f((-0.05624999850988388), 0.0, 0.0);
        nms_Tessellator_startDrawingQuads($var10);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), 2.0, (-2.0), 0.0, 0.15625);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), 2.0, 2.0, 0.15625, 0.15625);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), (-2.0), 2.0, 0.15625, 0.3125);
        nms_Tessellator_addVertexWithUV($var10, (-7.0), (-2.0), (-2.0), 0.0, 0.3125);
        nms_Tessellator_draw($var10);
        $var23 = 0;
        while ($var23 < 4) {
            olo_EaglerAdapterGL30_glRotatef(90.0, 1.0, 0.0, 0.0);
            olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, 0.05624999850988388);
            nms_Tessellator_startDrawingQuads($var10);
            nms_Tessellator_addVertexWithUV($var10, (-8.0), (-2.0), 0.0, 0.0, 0.0);
            nms_Tessellator_addVertexWithUV($var10, 8.0, (-2.0), 0.0, 0.5, 0.0);
            nms_Tessellator_addVertexWithUV($var10, 8.0, 2.0, 0.0, 0.5, 0.15625);
            nms_Tessellator_addVertexWithUV($var10, (-8.0), 2.0, 0.0, 0.0, 0.15625);
            nms_Tessellator_draw($var10);
            $var23 = $var23 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var21, $var23, $ptr);
}
function nms_RenderArrow_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderArrow_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntitySnowball() {
    var a = this; nms_Entity.call(a);
    a.$field_816_b = 0;
    a.$field_815_c = 0;
    a.$field_814_d = 0;
    a.$field_813_e = 0;
    a.$field_812_f = 0;
    a.$field_817_a = 0;
    a.$field_811_g = null;
    a.$field_810_h = 0;
    a.$field_809_i = 0;
}
function nms_EntitySnowball__init_(var_0, var_1) {
    var var_2 = new nms_EntitySnowball();
    nms_EntitySnowball__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_EntitySnowball_func_384_a($this, $var1) {
    var $var3;
    $var3 = nms_AxisAlignedBB_getAverageEdgeLength($this.$boundingBox) * 4.0 * 64.0;
    return $var1 >= $var3 * $var3 ? 0 : 1;
}
function nms_EntitySnowball__init_0($this, $var1, $var2) {
    nms_Entity__init_($this, $var1);
    $this.$field_816_b = (-1);
    $this.$field_815_c = (-1);
    $this.$field_814_d = (-1);
    $this.$field_813_e = 0;
    $this.$field_812_f = 0;
    $this.$field_817_a = 0;
    $this.$field_809_i = 0;
    $this.$field_811_g = $var2;
    nms_Entity_setSize($this, 0.25, 0.25);
    nms_Entity_setLocationAndAngles($this, $var2.$posX, $var2.$posY + 0.11999999731779099, $var2.$posZ, $var2.$rotationYaw, $var2.$rotationPitch);
    $this.$posX = $this.$posX - nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * 0.1599999964237213;
    $this.$posY = $this.$posY - 0.10000000149011612;
    $this.$posZ = $this.$posZ - nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * 0.1599999964237213;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$yOffset = 0.0;
    $this.$motionX =  -nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.4000000059604645;
    $this.$motionZ = nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.4000000059604645;
    $this.$motionY =  -nms_MathHelper_sin($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.4000000059604645;
    nms_EntitySnowball_func_467_a($this, $this.$motionX, $this.$motionY, $this.$motionZ, 1.5, 1.0);
}
function nms_EntitySnowball_func_467_a($this, $var1, $var3, $var5, $var7, $var8) {
    var var$6, var$7, $var10;
    var$6 = nms_MathHelper_sqrt_double($var1 * $var1 + $var3 * $var3 + $var5 * $var5);
    $var1 = $var1 / var$6;
    $var3 = $var3 / var$6;
    $var5 = $var5 / var$6;
    var$6 = ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937;
    var$7 = $var8;
    $var1 = $var1 + var$6 * var$7;
    $var3 = $var3 + ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937 * var$7;
    $var5 = $var5 + ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937 * var$7;
    var$6 = $var7;
    $var1 = $var1 * var$6;
    $var3 = $var3 * var$6;
    $var5 = $var5 * var$6;
    $this.$motionX = $var1;
    $this.$motionY = $var3;
    $this.$motionZ = $var5;
    $var10 = nms_MathHelper_sqrt_double($var1 * $var1 + $var5 * $var5);
    $var7 = jl_Math_atan2($var1, $var5) * 180.0 / 3.1415927410125732;
    $this.$rotationYaw = $var7;
    $this.$prevRotationYaw = $var7;
    $var7 = jl_Math_atan2($var3, $var10) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch = $var7;
    $this.$prevRotationPitch = $var7;
    $this.$field_810_h = 0;
}
function nms_EntitySnowball_onUpdate($this) {
    var $var15, $var2, $var3, $var4, $var5, $var6, $var8, $var9, $var12, $var13, $var16, $var17, $var18, $var7;
    $this.$lastTickPosX = $this.$posX;
    $this.$lastTickPosY = $this.$posY;
    $this.$lastTickPosZ = $this.$posZ;
    nms_Entity_onUpdate($this);
    if ($this.$field_817_a > 0)
        $this.$field_817_a = $this.$field_817_a - 1 | 0;
    if (!$this.$field_812_f)
        $this.$field_809_i = $this.$field_809_i + 1 | 0;
    else {
        if (nms_World_getBlockId($this.$worldObj0, $this.$field_816_b, $this.$field_815_c, $this.$field_814_d) == $this.$field_813_e) {
            $this.$field_810_h = $this.$field_810_h + 1 | 0;
            if ($this.$field_810_h == 1200)
                nms_Entity_setEntityDead($this);
            return;
        }
        $this.$field_812_f = 0;
        $this.$motionX = $this.$motionX * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$motionY = $this.$motionY * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$motionZ = $this.$motionZ * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$field_810_h = 0;
        $this.$field_809_i = 0;
    }
    $var15 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
    $var3 = nms_World_rayTraceBlocks($this.$worldObj0, $var15, $var2);
    $var15 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
    if ($var3 !== null)
        $var2 = nms_Vec3D_createVector($var3.$hitVec.$xCoord, $var3.$hitVec.$yCoord, $var3.$hitVec.$zCoord);
    $var4 = null;
    $var5 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands(nms_AxisAlignedBB_addCoord($this.$boundingBox, $this.$motionX, $this.$motionY, $this.$motionZ), 1.0, 1.0, 1.0));
    $var6 = 0.0;
    $var8 = 0;
    while ($var8 < ju_ArrayList_size($var5)) {
        $var9 = ju_ArrayList_get($var5, $var8);
        if ($var9.$canBeCollidedWith() && !($var9 === $this.$field_811_g && $this.$field_809_i < 5)) {
            $var12 = nms_AxisAlignedBB_func_1169_a(nms_AxisAlignedBB_expands($var9.$boundingBox, 0.30000001192092896, 0.30000001192092896, 0.30000001192092896), $var15, $var2);
            if ($var12 !== null) {
                $var13 = nms_Vec3D_distanceTo($var15, $var12.$hitVec);
                if (!($var13 >= $var6 && $var6 !== 0.0)) {
                    $var4 = $var9;
                    $var6 = $var13;
                }
            }
        }
        $var8 = $var8 + 1 | 0;
    }
    if ($var4 !== null)
        $var3 = nms_MovingObjectPosition__init_($var4);
    if ($var3 !== null) {
        $var3.$entityHit.$canAttackEntity($this.$field_811_g, 0);
        $var16 = 0;
        while ($var16 < 8) {
            nms_World_spawnParticle($this.$worldObj0, $rt_s(488), $this.$posX, $this.$posY, $this.$posZ, 0.0, 0.0, 0.0);
            $var16 = $var16 + 1 | 0;
        }
        nms_Entity_setEntityDead($this);
    }
    $this.$posX = $this.$posX + $this.$motionX;
    $this.$posY = $this.$posY + $this.$motionY;
    $this.$posZ = $this.$posZ + $this.$motionZ;
    $var17 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
    $this.$rotationYaw = jl_Math_atan2($this.$motionX, $this.$motionZ) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch = jl_Math_atan2($this.$motionY, $var17) * 180.0 / 3.1415927410125732;
    while ($this.$rotationPitch - $this.$prevRotationPitch < (-180.0)) {
        $this.$prevRotationPitch = $this.$prevRotationPitch - 360.0;
    }
    while ($this.$rotationPitch - $this.$prevRotationPitch >= 180.0) {
        $this.$prevRotationPitch = $this.$prevRotationPitch + 360.0;
    }
    while ($this.$rotationYaw - $this.$prevRotationYaw < (-180.0)) {
        $this.$prevRotationYaw = $this.$prevRotationYaw - 360.0;
    }
    while ($this.$rotationYaw - $this.$prevRotationYaw >= 180.0) {
        $this.$prevRotationYaw = $this.$prevRotationYaw + 360.0;
    }
    $this.$rotationPitch = $this.$prevRotationPitch + ($this.$rotationPitch - $this.$prevRotationPitch) * 0.20000000298023224;
    $this.$rotationYaw = $this.$prevRotationYaw + ($this.$rotationYaw - $this.$prevRotationYaw) * 0.20000000298023224;
    $var18 = 0.9900000095367432;
    if (nms_Entity_handleWaterMovement($this)) {
        $var7 = 0;
        while ($var7 < 4) {
            nms_World_spawnParticle($this.$worldObj0, $rt_s(485), $this.$posX - $this.$motionX * 0.25, $this.$posY - $this.$motionY * 0.25, $this.$posZ - $this.$motionZ * 0.25, $this.$motionX, $this.$motionY, $this.$motionZ);
            $var7 = $var7 + 1 | 0;
        }
        $var18 = 0.800000011920929;
    }
    $var6 = $this.$motionX;
    $var13 = $var18;
    $this.$motionX = $var6 * $var13;
    $this.$motionY = $this.$motionY * $var13;
    $this.$motionZ = $this.$motionZ * $var13;
    $this.$motionY = $this.$motionY - 0.029999999329447746;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
}
function nms_EntitySnowball_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(645), $this.$field_816_b << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(646), $this.$field_815_c << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(647), $this.$field_814_d << 16 >> 16);
    nms_NBTTagCompound_setByte($var1, $rt_s(648), $this.$field_813_e << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(649), $this.$field_817_a << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(650), (!$this.$field_812_f ? 0 : 1) << 24 >> 24);
}
function nms_EntitySnowball_readEntityFromNBT($this, $var1) {
    $this.$field_816_b = nms_NBTTagCompound_getShort($var1, $rt_s(645));
    $this.$field_815_c = nms_NBTTagCompound_getShort($var1, $rt_s(646));
    $this.$field_814_d = nms_NBTTagCompound_getShort($var1, $rt_s(647));
    $this.$field_813_e = nms_NBTTagCompound_getByte($var1, $rt_s(648)) & 255;
    $this.$field_817_a = nms_NBTTagCompound_getByte($var1, $rt_s(649)) & 255;
    $this.$field_812_f = nms_NBTTagCompound_getByte($var1, $rt_s(650)) != 1 ? 0 : 1;
}
function nms_EntitySnowball_onCollideWithPlayer($this, $var1) {
    var var$2, var$3;
    if ($this.$field_812_f && $this.$field_811_g === $var1 && $this.$field_817_a <= 0) {
        var$2 = $var1.$inventory0;
        var$3 = new nms_ItemStack;
        nms_Item_$callClinit();
        nms_ItemStack__init_12(var$3, nms_Item_arrow.$shiftedIndex, 1);
        if (nms_InventoryPlayer_addItemStackToInventory(var$2, var$3)) {
            nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(651), 0.20000000298023224, ((ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.699999988079071 + 1.0) * 2.0);
            nms_EntityPlayerSP_func_443_a_($var1, $this, 1);
            nms_Entity_setEntityDead($this);
        }
    }
}
function nms_EntitySnowball_func_392_h_($this) {
    return 0.0;
}
function nms_RenderSnowball() {
    nms_Render.call(this);
}
function nms_RenderSnowball__init_0() {
    var var_0 = new nms_RenderSnowball();
    nms_RenderSnowball__init_(var_0);
    return var_0;
}
function nms_RenderSnowball__init_($this) {
    nms_Render__init_($this);
}
function nms_RenderSnowball_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var11, var$9, $var12, $var13, $var14, $var15, var$14, var$15, var$16, var$17, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$17 = $thread.pop();var$16 = $thread.pop();var$15 = $thread.pop();var$14 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();$var12 = $thread.pop();var$9 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glScalef(0.5, 0.5, 0.5);
        nms_Item_$callClinit();
        $var10 = nms_Item_snowball.$iconIndex;
        $var1 = $rt_s(176);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var11 = nms_Tessellator_instance;
        var$9 = ($var10 % 16 | 0) * 16 | 0;
        $var12 = (var$9 + 0 | 0) / 256.0;
        $var13 = (var$9 + 16 | 0) / 256.0;
        var$9 = ($var10 / 16 | 0) * 16 | 0;
        $var14 = (var$9 + 0 | 0) / 256.0;
        $var15 = (var$9 + 16 | 0) / 256.0;
        olo_EaglerAdapterGL30_glRotatef(180.0 - $this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef( -$this.$renderManager.$field_1224_j, 1.0, 0.0, 0.0);
        nms_Tessellator_startDrawingQuads($var11);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
        var$14 = $var12;
        var$15 = $var15;
        nms_Tessellator_addVertexWithUV($var11, (-0.5), (-0.25), 0.0, var$14, var$15);
        var$16 = $var13;
        nms_Tessellator_addVertexWithUV($var11, 0.5, (-0.25), 0.0, var$16, var$15);
        var$17 = $var14;
        nms_Tessellator_addVertexWithUV($var11, 0.5, 0.75, 0.0, var$16, var$17);
        nms_Tessellator_addVertexWithUV($var11, (-0.5), 0.75, 0.0, var$14, var$17);
        nms_Tessellator_draw($var11);
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, var$9, $var12, $var13, $var14, $var15, var$14, var$15, var$16, var$17, $ptr);
}
function nms_RenderSnowball_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderSnowball_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityFireball() {
    var a = this; nms_Entity.call(a);
    a.$field_9402_e = 0;
    a.$field_9401_f = 0;
    a.$field_9400_g = 0;
    a.$field_9399_h = 0;
    a.$field_9398_i = 0;
    a.$field_9406_a = 0;
    a.$field_9397_j = null;
    a.$field_9396_k = 0;
    a.$field_9395_l = 0;
    a.$field_9405_b = 0.0;
    a.$field_9404_c = 0.0;
    a.$field_9403_d = 0.0;
}
function nms_EntityFireball__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_EntityFireball();
    nms_EntityFireball__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_EntityFireball_func_384_a($this, $var1) {
    var $var3;
    $var3 = nms_AxisAlignedBB_getAverageEdgeLength($this.$boundingBox) * 4.0 * 64.0;
    return $var1 >= $var3 * $var3 ? 0 : 1;
}
function nms_EntityFireball__init_0($this, $var1, $var2, $var3, $var5, $var7) {
    var $var9;
    nms_Entity__init_($this, $var1);
    $this.$field_9402_e = (-1);
    $this.$field_9401_f = (-1);
    $this.$field_9400_g = (-1);
    $this.$field_9399_h = 0;
    $this.$field_9398_i = 0;
    $this.$field_9406_a = 0;
    $this.$field_9395_l = 0;
    $this.$field_9397_j = $var2;
    nms_Entity_setSize($this, 1.0, 1.0);
    nms_Entity_setLocationAndAngles($this, $var2.$posX, $var2.$posY, $var2.$posZ, $var2.$rotationYaw, $var2.$rotationPitch);
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$yOffset = 0.0;
    $this.$motionZ = 0.0;
    $this.$motionY = 0.0;
    $this.$motionX = 0.0;
    $var3 = $var3 + ju_Random_nextGaussian($this.$rand2) * 0.4;
    $var5 = $var5 + ju_Random_nextGaussian($this.$rand2) * 0.4;
    $var7 = $var7 + ju_Random_nextGaussian($this.$rand2) * 0.4;
    $var9 = nms_MathHelper_sqrt_double($var3 * $var3 + $var5 * $var5 + $var7 * $var7);
    $this.$field_9405_b = $var3 / $var9 * 0.1;
    $this.$field_9404_c = $var5 / $var9 * 0.1;
    $this.$field_9403_d = $var7 / $var9 * 0.1;
}
function nms_EntityFireball_onUpdate($this) {
    var $var15, $var2, $var3, $var4, $var5, $var6, $var8, $var9, $var12, $var13, $var16, $var17, $var18;
    nms_Entity_onUpdate($this);
    $this.$fire = 10;
    if ($this.$field_9406_a > 0)
        $this.$field_9406_a = $this.$field_9406_a - 1 | 0;
    if (!$this.$field_9398_i)
        $this.$field_9395_l = $this.$field_9395_l + 1 | 0;
    else {
        if (nms_World_getBlockId($this.$worldObj0, $this.$field_9402_e, $this.$field_9401_f, $this.$field_9400_g) == $this.$field_9399_h) {
            $this.$field_9396_k = $this.$field_9396_k + 1 | 0;
            if ($this.$field_9396_k == 1200)
                nms_Entity_setEntityDead($this);
            return;
        }
        $this.$field_9398_i = 0;
        $this.$motionX = $this.$motionX * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$motionY = $this.$motionY * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$motionZ = $this.$motionZ * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
        $this.$field_9396_k = 0;
        $this.$field_9395_l = 0;
    }
    $var15 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
    $var3 = nms_World_rayTraceBlocks($this.$worldObj0, $var15, $var2);
    $var15 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
    if ($var3 !== null)
        $var2 = nms_Vec3D_createVector($var3.$hitVec.$xCoord, $var3.$hitVec.$yCoord, $var3.$hitVec.$zCoord);
    $var4 = null;
    $var5 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands(nms_AxisAlignedBB_addCoord($this.$boundingBox, $this.$motionX, $this.$motionY, $this.$motionZ), 1.0, 1.0, 1.0));
    $var6 = 0.0;
    $var8 = 0;
    while ($var8 < ju_ArrayList_size($var5)) {
        $var9 = ju_ArrayList_get($var5, $var8);
        if ($var9.$canBeCollidedWith() && !($var9 === $this.$field_9397_j && $this.$field_9395_l < 25)) {
            $var12 = nms_AxisAlignedBB_func_1169_a(nms_AxisAlignedBB_expands($var9.$boundingBox, 0.30000001192092896, 0.30000001192092896, 0.30000001192092896), $var15, $var2);
            if ($var12 !== null) {
                $var13 = nms_Vec3D_distanceTo($var15, $var12.$hitVec);
                if (!($var13 >= $var6 && $var6 !== 0.0)) {
                    $var4 = $var9;
                    $var6 = $var13;
                }
            }
        }
        $var8 = $var8 + 1 | 0;
    }
    if ($var4 !== null)
        $var3 = nms_MovingObjectPosition__init_($var4);
    if ($var3 !== null) {
        $var3.$entityHit.$canAttackEntity($this.$field_9397_j, 0);
        nms_World_func_12244_a($this.$worldObj0, null, $this.$posX, $this.$posY, $this.$posZ, 1.0, 1);
        nms_Entity_setEntityDead($this);
    }
    $this.$posX = $this.$posX + $this.$motionX;
    $this.$posY = $this.$posY + $this.$motionY;
    $this.$posZ = $this.$posZ + $this.$motionZ;
    $var16 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
    $this.$rotationYaw = jl_Math_atan2($this.$motionX, $this.$motionZ) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch = jl_Math_atan2($this.$motionY, $var16) * 180.0 / 3.1415927410125732;
    while ($this.$rotationPitch - $this.$prevRotationPitch < (-180.0)) {
        $this.$prevRotationPitch = $this.$prevRotationPitch - 360.0;
    }
    while ($this.$rotationPitch - $this.$prevRotationPitch >= 180.0) {
        $this.$prevRotationPitch = $this.$prevRotationPitch + 360.0;
    }
    while ($this.$rotationYaw - $this.$prevRotationYaw < (-180.0)) {
        $this.$prevRotationYaw = $this.$prevRotationYaw - 360.0;
    }
    while ($this.$rotationYaw - $this.$prevRotationYaw >= 180.0) {
        $this.$prevRotationYaw = $this.$prevRotationYaw + 360.0;
    }
    $this.$rotationPitch = $this.$prevRotationPitch + ($this.$rotationPitch - $this.$prevRotationPitch) * 0.20000000298023224;
    $this.$rotationYaw = $this.$prevRotationYaw + ($this.$rotationYaw - $this.$prevRotationYaw) * 0.20000000298023224;
    $var17 = 0.949999988079071;
    if (nms_Entity_handleWaterMovement($this)) {
        $var18 = 0;
        while ($var18 < 4) {
            nms_World_spawnParticle($this.$worldObj0, $rt_s(485), $this.$posX - $this.$motionX * 0.25, $this.$posY - $this.$motionY * 0.25, $this.$posZ - $this.$motionZ * 0.25, $this.$motionX, $this.$motionY, $this.$motionZ);
            $var18 = $var18 + 1 | 0;
        }
        $var17 = 0.800000011920929;
    }
    $this.$motionX = $this.$motionX + $this.$field_9405_b;
    $this.$motionY = $this.$motionY + $this.$field_9404_c;
    $this.$motionZ = $this.$motionZ + $this.$field_9403_d;
    $var6 = $this.$motionX;
    $var13 = $var17;
    $this.$motionX = $var6 * $var13;
    $this.$motionY = $this.$motionY * $var13;
    $this.$motionZ = $this.$motionZ * $var13;
    nms_World_spawnParticle($this.$worldObj0, $rt_s(283), $this.$posX, $this.$posY + 0.5, $this.$posZ, 0.0, 0.0, 0.0);
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
}
function nms_EntityFireball_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(645), $this.$field_9402_e << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(646), $this.$field_9401_f << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(647), $this.$field_9400_g << 16 >> 16);
    nms_NBTTagCompound_setByte($var1, $rt_s(648), $this.$field_9399_h << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(649), $this.$field_9406_a << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(650), (!$this.$field_9398_i ? 0 : 1) << 24 >> 24);
}
function nms_EntityFireball_canBeCollidedWith($this) {
    return 1;
}
function nms_EntityFireball_func_4035_j_($this) {
    return 1.0;
}
function nms_EntityFireball_canAttackEntity($this, $var1, $var2) {
    var $var3;
    nms_Entity_func_9281_M($this);
    if ($var1 === null)
        return 0;
    $var3 = nms_EntityLiving_func_4037_H($var1);
    if ($var3 !== null) {
        $this.$motionX = $var3.$xCoord;
        $this.$motionY = $var3.$yCoord;
        $this.$motionZ = $var3.$zCoord;
        $this.$field_9405_b = $this.$motionX * 0.1;
        $this.$field_9404_c = $this.$motionY * 0.1;
        $this.$field_9403_d = $this.$motionZ * 0.1;
    }
    return 1;
}
function nms_EntityFireball_func_392_h_($this) {
    return 0.0;
}
function nms_RenderFireball() {
    nms_Render.call(this);
}
function nms_RenderFireball__init_0() {
    var var_0 = new nms_RenderFireball();
    nms_RenderFireball__init_(var_0);
    return var_0;
}
function nms_RenderFireball__init_($this) {
    nms_Render__init_($this);
}
function nms_RenderFireball_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var11, $var12, var$9, $var13, $var14, $var15, $var16, var$14, var$15, var$16, var$17, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$17 = $thread.pop();var$16 = $thread.pop();var$15 = $thread.pop();var$14 = $thread.pop();$var16 = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var13 = $thread.pop();var$9 = $thread.pop();$var12 = $thread.pop();$var11 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glScalef(2.0, 2.0, 2.0);
        nms_Item_$callClinit();
        $var11 = nms_Item_snowball.$iconIndex;
        $var1 = $rt_s(176);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var12 = nms_Tessellator_instance;
        var$9 = ($var11 % 16 | 0) * 16 | 0;
        $var13 = (var$9 + 0 | 0) / 256.0;
        $var14 = (var$9 + 16 | 0) / 256.0;
        var$9 = ($var11 / 16 | 0) * 16 | 0;
        $var15 = (var$9 + 0 | 0) / 256.0;
        $var16 = (var$9 + 16 | 0) / 256.0;
        olo_EaglerAdapterGL30_glRotatef(180.0 - $this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef( -$this.$renderManager.$field_1224_j, 1.0, 0.0, 0.0);
        nms_Tessellator_startDrawingQuads($var12);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
        var$14 = $var13;
        var$15 = $var16;
        nms_Tessellator_addVertexWithUV($var12, (-0.5), (-0.25), 0.0, var$14, var$15);
        var$16 = $var14;
        nms_Tessellator_addVertexWithUV($var12, 0.5, (-0.25), 0.0, var$16, var$15);
        var$17 = $var15;
        nms_Tessellator_addVertexWithUV($var12, 0.5, 0.75, 0.0, var$16, var$17);
        nms_Tessellator_addVertexWithUV($var12, (-0.5), 0.75, 0.0, var$14, var$17);
        nms_Tessellator_draw($var12);
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var11, $var12, var$9, $var13, $var14, $var15, $var16, var$14, var$15, var$16, var$17, $ptr);
}
function nms_RenderFireball_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderFireball_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityItem() {
    var a = this; nms_Entity.call(a);
    a.$item = null;
    a.$field_803_e = 0;
    a.$age = 0;
    a.$field_805_c = 0;
    a.$health0 = 0;
    a.$field_804_d = 0.0;
}
function nms_EntityItem__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_EntityItem();
    nms_EntityItem__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_EntityItem__init_0($this, $var1, $var2, $var4, $var6, $var8) {
    nms_Entity__init_($this, $var1);
    $this.$age = 0;
    $this.$health0 = 5;
    $this.$field_804_d = jl_Math_random() * 3.141592653589793 * 2.0;
    nms_Entity_setSize($this, 0.25, 0.25);
    $this.$yOffset = $this.$height / 2.0;
    nms_Entity_setPosition($this, $var2, $var4, $var6);
    $this.$item = $var8;
    $this.$rotationYaw = jl_Math_random() * 360.0;
    $this.$motionX = jl_Math_random() * 0.20000000298023224 - 0.10000000149011612;
    $this.$motionY = 0.20000000298023224;
    $this.$motionZ = jl_Math_random() * 0.20000000298023224 - 0.10000000149011612;
    $this.$entityWalks = 0;
}
function nms_EntityItem_onUpdate($this) {
    var $var1, $var2, var$3, var$4;
    $this.$func_391_y();
    if ($this.$field_805_c > 0)
        $this.$field_805_c = $this.$field_805_c - 1 | 0;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $this.$motionY = $this.$motionY - 0.03999999910593033;
    if (nms_World_getBlockMaterial($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY), nms_MathHelper_floor_double($this.$posZ)) === nms_Material_lava) {
        $this.$motionY = 0.20000000298023224;
        $this.$motionX = (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224;
        $this.$motionZ = (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224;
        nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(279), 0.4000000059604645, 2.0 + ju_Random_nextFloat($this.$rand2) * 0.4000000059604645);
    }
    nms_EntityItem_func_466_g($this, $this.$posX, $this.$posY, $this.$posZ);
    nms_EntityItem_handleWaterMovement($this);
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $var1 = 0.9800000190734863;
    if ($this.$onGround) {
        $var1 = 0.5880000591278076;
        $var2 = nms_World_getBlockId($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$boundingBox.$minY0) - 1 | 0, nms_MathHelper_floor_double($this.$posZ));
        if ($var2 > 0) {
            nms_Block_$callClinit();
            $var1 = nms_Block_blocksList.data[$var2].$slipperiness * 0.9800000190734863;
        }
    }
    var$3 = $this.$motionX;
    var$4 = $var1;
    $this.$motionX = var$3 * var$4;
    $this.$motionY = $this.$motionY * 0.9800000190734863;
    $this.$motionZ = $this.$motionZ * var$4;
    if ($this.$onGround)
        $this.$motionY = $this.$motionY * (-0.5);
    $this.$field_803_e = $this.$field_803_e + 1 | 0;
    $this.$age = $this.$age + 1 | 0;
    if ($this.$age >= 6000)
        nms_Entity_setEntityDead($this);
}
function nms_EntityItem_handleWaterMovement($this) {
    return nms_World_func_682_a($this.$worldObj0, $this.$boundingBox, nms_Material_water, $this);
}
function nms_EntityItem_func_466_g($this, $var1, $var3, $var5) {
    var $var7, $var8, $var9, $var10, $var12, $var14, $var16, $var17, $var18, $var19, $var20, $var21, $var22, $var23, $var25;
    $var7 = nms_MathHelper_floor_double($var1);
    $var8 = nms_MathHelper_floor_double($var3);
    $var9 = nms_MathHelper_floor_double($var5);
    $var10 = $var1 - $var7;
    $var12 = $var3 - $var8;
    $var14 = $var5 - $var9;
    nms_Block_$callClinit();
    if (nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7, $var8, $var9)]) {
        $var16 = nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7 - 1 | 0, $var8, $var9)] ? 0 : 1;
        $var17 = nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7 + 1 | 0, $var8, $var9)] ? 0 : 1;
        $var18 = nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7, $var8 - 1 | 0, $var9)] ? 0 : 1;
        $var19 = nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7, $var8 + 1 | 0, $var9)] ? 0 : 1;
        $var20 = nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7, $var8, $var9 - 1 | 0)] ? 0 : 1;
        $var21 = nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($this.$worldObj0, $var7, $var8, $var9 + 1 | 0)] ? 0 : 1;
        $var22 = (-1);
        $var23 = 9999.0;
        if ($var16 && $var10 < $var23) {
            $var22 = 0;
            $var23 = $var10;
        }
        if (!$var17)
            $var1 = $var23;
        else {
            $var1 = 1.0 - $var10;
            if ($var1 < $var23)
                $var22 = 1;
            else
                $var1 = $var23;
        }
        if ($var18 && $var12 < $var1) {
            $var22 = 2;
            $var1 = $var12;
        }
        if (!$var19)
            $var3 = $var1;
        else {
            $var3 = 1.0 - $var12;
            if ($var3 < $var1)
                $var22 = 3;
            else
                $var3 = $var1;
        }
        if ($var20 && $var14 < $var3) {
            $var22 = 4;
            $var3 = $var14;
        }
        if ($var21 && 1.0 - $var14 < $var3)
            $var22 = 5;
        $var25 = ju_Random_nextFloat($this.$rand2) * 0.20000000298023224 + 0.10000000149011612;
        if (!$var22)
            $this.$motionX =  -$var25;
        if ($var22 == 1)
            $this.$motionX = $var25;
        if ($var22 == 2)
            $this.$motionY =  -$var25;
        if ($var22 == 3)
            $this.$motionY = $var25;
        if ($var22 == 4)
            $this.$motionZ =  -$var25;
        if ($var22 == 5)
            $this.$motionZ = $var25;
    }
    return 0;
}
function nms_EntityItem_func_355_a($this, $var1) {
    nms_EntityItem_canAttackEntity($this, null, $var1);
}
function nms_EntityItem_canAttackEntity($this, $var1, $var2) {
    nms_Entity_func_9281_M($this);
    $this.$health0 = $this.$health0 - $var2 | 0;
    if ($this.$health0 <= 0)
        nms_Entity_setEntityDead($this);
    return 0;
}
function nms_EntityItem_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(534), $this.$health0 << 24 >> 24 << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(653), $this.$age << 16 >> 16);
    nms_NBTTagCompound_setCompoundTag($var1, $rt_s(654), nms_ItemStack_writeToNBT($this.$item, nms_NBTTagCompound__init_0()));
}
function nms_EntityItem_readEntityFromNBT($this, $var1) {
    $this.$health0 = nms_NBTTagCompound_getShort($var1, $rt_s(534)) & 255;
    $this.$age = nms_NBTTagCompound_getShort($var1, $rt_s(653));
    $this.$item = nms_ItemStack__init_5(nms_NBTTagCompound_getCompoundTag($var1, $rt_s(654)));
}
function nms_EntityItem_onCollideWithPlayer($this, $var1) {
    var $var2;
    $var2 = $this.$item.$stackSize;
    if (!$this.$field_805_c && nms_InventoryPlayer_addItemStackToInventory($var1.$inventory0, $this.$item)) {
        nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(651), 0.20000000298023224, ((ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.699999988079071 + 1.0) * 2.0);
        nms_EntityPlayerSP_func_443_a_($var1, $this, $var2);
        nms_Entity_setEntityDead($this);
    }
}
function nms_EntityTNTPrimed() {
    nms_Entity.call(this);
    this.$fuse = 0;
}
function nms_EntityTNTPrimed__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_EntityTNTPrimed();
    nms_EntityTNTPrimed__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_EntityTNTPrimed__init_0($this, $var1, $var2, $var4, $var6) {
    var $var8;
    nms_Entity__init_($this, $var1);
    $this.$fuse = 0;
    $this.$field_618_ad = 1;
    nms_Entity_setSize($this, 0.9800000190734863, 0.9800000190734863);
    $this.$yOffset = $this.$height / 2.0;
    nms_Entity_setPosition($this, $var2, $var4, $var6);
    $var8 = jl_Math_random() * 3.1415927410125732 * 2.0 * 3.1415927410125732 / 180.0;
    $this.$motionX =  -nms_MathHelper_sin($var8) * 0.019999999552965164;
    $this.$motionY = 0.20000000298023224;
    $this.$motionZ =  -nms_MathHelper_cos($var8) * 0.019999999552965164;
    $this.$entityWalks = 0;
    $this.$fuse = 80;
    $this.$prevPosX = $var2;
    $this.$prevPosY = $var4;
    $this.$prevPosZ = $var6;
}
function nms_EntityTNTPrimed_canBeCollidedWith($this) {
    return $this.$isDead ? 0 : 1;
}
function nms_EntityTNTPrimed_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $this.$motionY = $this.$motionY - 0.03999999910593033;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.9800000190734863;
    $this.$motionY = $this.$motionY * 0.9800000190734863;
    $this.$motionZ = $this.$motionZ * 0.9800000190734863;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
        $this.$motionY = $this.$motionY * (-0.5);
    }
    var$1 = $this.$fuse;
    $this.$fuse = var$1 - 1 | 0;
    if (var$1 > 0)
        nms_World_spawnParticle($this.$worldObj0, $rt_s(283), $this.$posX, $this.$posY + 0.5, $this.$posZ, 0.0, 0.0, 0.0);
    else {
        nms_Entity_setEntityDead($this);
        nms_World_func_12243_a($this.$worldObj0, null, $this.$posX, $this.$posY, $this.$posZ, 4.0);
    }
}
function nms_EntityTNTPrimed_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setByte($var1, $rt_s(655), $this.$fuse << 24 >> 24);
}
function nms_EntityTNTPrimed_readEntityFromNBT($this, $var1) {
    $this.$fuse = nms_NBTTagCompound_getByte($var1, $rt_s(655));
}
function nms_EntityTNTPrimed_func_392_h_($this) {
    return 0.0;
}
function nms_RenderTNTPrimed() {
    nms_Render.call(this);
    this.$field_196_d = null;
}
function nms_RenderTNTPrimed__init_0() {
    var var_0 = new nms_RenderTNTPrimed();
    nms_RenderTNTPrimed__init_(var_0);
    return var_0;
}
function nms_RenderTNTPrimed__init_($this) {
    nms_Render__init_($this);
    $this.$field_196_d = nms_RenderBlocks__init_0();
    $this.$field_9246_c = 0.5;
}
function nms_RenderTNTPrimed_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var11, var$9, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$9 = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        if ($var1.$fuse - $var9 + 1.0 < 10.0) {
            $var10 = 1.0 - ($var1.$fuse - $var9 + 1.0) / 10.0;
            if ($var10 < 0.0)
                $var10 = 0.0;
            if ($var10 > 1.0)
                $var10 = 1.0;
            $var8 = $var10 * $var10;
            $var11 = 1.0 + $var8 * $var8 * 0.30000001192092896;
            olo_EaglerAdapterGL30_glScalef($var11, $var11, $var11);
        }
        $var10 = (1.0 - ($var1.$fuse - $var9 + 1.0) / 100.0) * 0.800000011920929;
        var$9 = $rt_s(193);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, var$9);
        if ($rt_suspending()) {
            break main;
        }
        var$9 = $this.$field_196_d;
        nms_Block_$callClinit();
        nms_RenderBlocks_func_1227_a(var$9, nms_Block_tnt);
        if (!(($var1.$fuse / 5 | 0) % 2 | 0)) {
            olo_EaglerAdapterGL30_glDisable(3553);
            olo_EaglerAdapterGL30_glDisable(2896);
            olo_EaglerAdapterGL30_glEnable(3042);
            olo_EaglerAdapterGL30_glBlendFunc(770, 772);
            olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, $var10);
            nms_RenderBlocks_func_1227_a($this.$field_196_d, nms_Block_tnt);
            olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
            olo_EaglerAdapterGL30_glDisable(3042);
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(3553);
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, var$9, $ptr);
}
function nms_RenderTNTPrimed_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderTNTPrimed_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityFallingSand() {
    var a = this; nms_Entity.call(a);
    a.$field_799_a = 0;
    a.$field_798_b = 0;
}
function nms_EntityFallingSand_canBeCollidedWith($this) {
    return $this.$isDead ? 0 : 1;
}
function nms_EntityFallingSand_onUpdate($this) {
    var $var1, $var2, $var3;
    if (!$this.$field_799_a)
        nms_Entity_setEntityDead($this);
    else {
        $this.$prevPosX = $this.$posX;
        $this.$prevPosY = $this.$posY;
        $this.$prevPosZ = $this.$posZ;
        $this.$field_798_b = $this.$field_798_b + 1 | 0;
        $this.$motionY = $this.$motionY - 0.03999999910593033;
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $this.$motionX = $this.$motionX * 0.9800000190734863;
        $this.$motionY = $this.$motionY * 0.9800000190734863;
        $this.$motionZ = $this.$motionZ * 0.9800000190734863;
        $var1 = nms_MathHelper_floor_double($this.$posX);
        $var2 = nms_MathHelper_floor_double($this.$posY);
        $var3 = nms_MathHelper_floor_double($this.$posZ);
        if (nms_World_getBlockId($this.$worldObj0, $var1, $var2, $var3) == $this.$field_799_a)
            nms_World_setBlockWithNotify($this.$worldObj0, $var1, $var2, $var3, 0);
        if ($this.$onGround) {
            $this.$motionX = $this.$motionX * 0.699999988079071;
            $this.$motionZ = $this.$motionZ * 0.699999988079071;
            $this.$motionY = $this.$motionY * (-0.5);
            nms_Entity_setEntityDead($this);
            if (!(nms_World_canBlockBePlacedAt($this.$worldObj0, $this.$field_799_a, $var1, $var2, $var3, 1) && nms_World_setBlockWithNotify($this.$worldObj0, $var1, $var2, $var3, $this.$field_799_a)))
                nms_Entity_dropItem($this, $this.$field_799_a, 1);
        } else if ($this.$field_798_b > 100) {
            nms_Entity_dropItem($this, $this.$field_799_a, 1);
            nms_Entity_setEntityDead($this);
        }
    }
}
function nms_EntityFallingSand_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setByte($var1, $rt_s(656), $this.$field_799_a << 24 >> 24);
}
function nms_EntityFallingSand_readEntityFromNBT($this, $var1) {
    $this.$field_799_a = nms_NBTTagCompound_getByte($var1, $rt_s(656)) & 255;
}
function nms_EntityFallingSand_func_392_h_($this) {
    return 0.0;
}
function nms_EntityFallingSand_func_465_i($this) {
    return $this.$worldObj0;
}
function nms_RenderFallingSand() {
    nms_Render.call(this);
    this.$field_197_d = null;
}
function nms_RenderFallingSand__init_0() {
    var var_0 = new nms_RenderFallingSand();
    nms_RenderFallingSand__init_(var_0);
    return var_0;
}
function nms_RenderFallingSand__init_($this) {
    nms_Render__init_($this);
    $this.$field_197_d = nms_RenderBlocks__init_0();
    $this.$field_9246_c = 0.5;
}
function nms_RenderFallingSand_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        $var10 = $rt_s(193);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var10);
        if ($rt_suspending()) {
            break main;
        }
        nms_Block_$callClinit();
        $var10 = nms_Block_blocksList.data[$var1.$field_799_a];
        $var11 = $var1.$worldObj0;
        olo_EaglerAdapterGL30_glDisable(2896);
        nms_RenderBlocks_func_1243_a($this.$field_197_d, $var10, $var11, nms_MathHelper_floor_double($var1.$posX), nms_MathHelper_floor_double($var1.$posY), nms_MathHelper_floor_double($var1.$posZ));
        olo_EaglerAdapterGL30_glEnable(2896);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $ptr);
}
function nms_RenderFallingSand_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderFallingSand_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityMinecart() {
    var a = this; nms_Entity.call(a);
    a.$cargoItems = null;
    a.$a = 0;
    a.$b0 = 0;
    a.$c = 0;
    a.$field_856_i = 0;
    a.$d = 0;
    a.$fuel = 0;
    a.$pushX = 0.0;
    a.$pushZ = 0.0;
}
var nms_EntityMinecart_field_855_j = null;
function nms_EntityMinecart_func_383_b_($this, $var1) {
    return $var1.$boundingBox;
}
function nms_EntityMinecart_func_372_f_($this) {
    return null;
}
function nms_EntityMinecart_canBePushed($this) {
    return 1;
}
function nms_EntityMinecart_func_402_h($this) {
    return $this.$height * 0.0 - 0.30000001192092896;
}
function nms_EntityMinecart_canAttackEntity($this, $var1, $var2) {
    if ($this.$isDead)
        return 1;
    $this.$c =  -$this.$c;
    $this.$b0 = 10;
    nms_Entity_func_9281_M($this);
    $this.$a = $this.$a + ($var2 * 10 | 0) | 0;
    if ($this.$a > 40) {
        nms_Item_$callClinit();
        nms_Entity_dropItemWithOffset($this, nms_Item_minecartEmpty.$shiftedIndex, 1, 0.0);
        if ($this.$d == 1) {
            nms_Block_$callClinit();
            nms_Entity_dropItemWithOffset($this, nms_Block_crate.$blockID, 1, 0.0);
        } else if ($this.$d == 2) {
            nms_Block_$callClinit();
            nms_Entity_dropItemWithOffset($this, nms_Block_stoneOvenIdle.$blockID, 1, 0.0);
        }
        nms_EntityMinecart_setEntityDead($this);
    }
    return 1;
}
function nms_EntityMinecart_canBeCollidedWith($this) {
    return $this.$isDead ? 0 : 1;
}
function nms_EntityMinecart_setEntityDead($this) {
    var $var1, $var2, $var3, $var4, $var5, var$6, var$7, var$8, $var6, $var7;
    $var1 = 0;
    while ($var1 < 27) {
        a: {
            $var2 = nms_EntityMinecart_getStackInSlot($this, $var1);
            if ($var2 !== null) {
                $var3 = ju_Random_nextFloat($this.$rand2) * 0.800000011920929 + 0.10000000149011612;
                $var4 = ju_Random_nextFloat($this.$rand2) * 0.800000011920929 + 0.10000000149011612;
                $var5 = ju_Random_nextFloat($this.$rand2) * 0.800000011920929 + 0.10000000149011612;
                var$6 = $var3;
                var$7 = $var4;
                var$8 = $var5;
                while (true) {
                    if ($var2.$stackSize <= 0)
                        break a;
                    $var6 = ju_Random_nextInt($this.$rand2, 21) + 10 | 0;
                    if ($var6 > $var2.$stackSize)
                        $var6 = $var2.$stackSize;
                    $var2.$stackSize = $var2.$stackSize - $var6 | 0;
                    $var7 = nms_EntityItem__init_($this.$worldObj0, $this.$posX + var$6, $this.$posY + var$7, $this.$posZ + var$8, nms_ItemStack__init_1($var2.$itemID, $var6, $var2.$itemDamage));
                    $var7.$motionX = ju_Random_nextGaussian($this.$rand2) * 0.05000000074505806;
                    $var7.$motionY = ju_Random_nextGaussian($this.$rand2) * 0.05000000074505806 + 0.20000000298023224;
                    $var7.$motionZ = ju_Random_nextGaussian($this.$rand2) * 0.05000000074505806;
                    nms_World_entityJoinedWorld($this.$worldObj0, $var7);
                }
            }
        }
        $var1 = $var1 + 1 | 0;
    }
    nms_Entity_setEntityDead($this);
}
function nms_EntityMinecart_onUpdate($this) {
    var $var1, $var2, $var3, $var47, $var4, $var6, $var9, $var10, $var48, var$10, $var12, $var14, $var16, $var20, $var36, $var38, $var24, $var37, $var13, $var26, $var28, $var30, $var7, $var32, $var34, $var46, $var39, $var43, $var44, $var15, $var45, $var17;
    if ($this.$b0 > 0)
        $this.$b0 = $this.$b0 - 1 | 0;
    if ($this.$a > 0)
        $this.$a = $this.$a - 1 | 0;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $this.$motionY = $this.$motionY - 0.03999999910593033;
    $var1 = nms_MathHelper_floor_double($this.$posX);
    $var2 = nms_MathHelper_floor_double($this.$posY);
    $var3 = nms_MathHelper_floor_double($this.$posZ);
    $var47 = nms_World_getBlockId($this.$worldObj0, $var1, $var2 - 1 | 0, $var3);
    nms_Block_$callClinit();
    if ($var47 == nms_Block_minecartTrack.$blockID)
        $var2 = $var2 + (-1) | 0;
    $var4 = 0.4;
    $var6 = 0;
    if (nms_World_getBlockId($this.$worldObj0, $var1, $var2, $var3) == nms_Block_minecartTrack.$blockID) {
        $var9 = nms_EntityMinecart_func_514_g($this, $this.$posX, $this.$posY, $this.$posZ);
        $var10 = nms_World_getBlockMetadata($this.$worldObj0, $var1, $var2, $var3);
        $this.$posY = $var2;
        $var48 = $rt_compare($var10, 2);
        if ($var48 >= 0 && $var10 <= 5)
            $this.$posY = $var2 + 1 | 0;
        if (!$var48)
            $this.$motionX = $this.$motionX - 0.0078125;
        if ($var10 == 3)
            $this.$motionX = $this.$motionX + 0.0078125;
        if ($var10 == 4)
            $this.$motionZ = $this.$motionZ + 0.0078125;
        if ($var10 == 5)
            $this.$motionZ = $this.$motionZ - 0.0078125;
        var$10 = nms_EntityMinecart_field_855_j.data[$var10].data;
        $var12 = var$10[1].data[0] - var$10[0].data[0] | 0;
        $var14 = var$10[1].data[2] - var$10[0].data[2] | 0;
        $var16 = jl_Math_sqrt($var12 * $var12 + $var14 * $var14);
        if ($this.$motionX * $var12 + $this.$motionZ * $var14 < 0.0) {
            $var12 =  -$var12;
            $var14 =  -$var14;
        }
        $var20 = jl_Math_sqrt($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
        $this.$motionX = $var20 * $var12 / $var16;
        $this.$motionZ = $var20 * $var14 / $var16;
        $var36 = $var1;
        $var38 = $var36 + 0.5;
        $var24 = $var38 + var$10[0].data[0] * 0.5;
        $var37 = $var3;
        $var13 = $var37 + 0.5;
        $var26 = $var13 + var$10[0].data[2] * 0.5;
        $var28 = $var38 + var$10[1].data[0] * 0.5;
        $var30 = $var13 + var$10[1].data[2] * 0.5;
        $var7 = $var28 - $var24;
        $var12 = $var30 - $var26;
        if ($var7 === 0.0) {
            $this.$posX = $var38;
            $var36 = $this.$posZ - $var37;
        } else if ($var12 === 0.0) {
            $this.$posZ = $var13;
            $var36 = $this.$posX - $var36;
        } else
            $var36 = (($this.$posX - $var24) * $var7 + ($this.$posZ - $var26) * $var12) * 2.0;
        $this.$posX = $var24 + $var7 * $var36;
        $this.$posZ = $var26 + $var12 * $var36;
        nms_Entity_setPosition($this, $this.$posX, $this.$posY + $this.$yOffset, $this.$posZ);
        $var32 = $this.$motionX;
        $var34 = $this.$motionZ;
        if ($this.$riddenByEntity !== null) {
            $var32 = $var32 * 0.75;
            $var34 = $var34 * 0.75;
        }
        $var36 = (-0.4);
        if ($var32 < $var36)
            $var32 = $var36;
        if ($var32 > $var4)
            $var32 = $var4;
        if ($var34 >= $var36)
            $var36 = $var34;
        if ($var36 <= $var4)
            $var4 = $var36;
        nms_Entity_moveEntity($this, $var32, 0.0, $var4);
        if (var$10[0].data[1] && (nms_MathHelper_floor_double($this.$posX) - $var1 | 0) == var$10[0].data[0] && (nms_MathHelper_floor_double($this.$posZ) - $var3 | 0) == var$10[0].data[2])
            nms_Entity_setPosition($this, $this.$posX, $this.$posY + var$10[0].data[1], $this.$posZ);
        else if (var$10[1].data[1] && (nms_MathHelper_floor_double($this.$posX) - $var1 | 0) == var$10[1].data[0] && (nms_MathHelper_floor_double($this.$posZ) - $var3 | 0) == var$10[1].data[2])
            nms_Entity_setPosition($this, $this.$posX, $this.$posY + var$10[1].data[1], $this.$posZ);
        if ($this.$riddenByEntity !== null) {
            $this.$motionX = $this.$motionX * 0.996999979019165;
            $this.$motionY = $this.$motionY * 0.0;
            $this.$motionZ = $this.$motionZ * 0.996999979019165;
        } else {
            if ($this.$d == 2) {
                $var36 = nms_MathHelper_sqrt_double($this.$pushX * $this.$pushX + $this.$pushZ * $this.$pushZ);
                if ($var36 <= 0.01) {
                    $this.$motionX = $this.$motionX * 0.8999999761581421;
                    $this.$motionY = $this.$motionY * 0.0;
                    $this.$motionZ = $this.$motionZ * 0.8999999761581421;
                } else {
                    $var6 = 1;
                    $this.$pushX = $this.$pushX / $var36;
                    $this.$pushZ = $this.$pushZ / $var36;
                    $this.$motionX = $this.$motionX * 0.800000011920929;
                    $this.$motionY = $this.$motionY * 0.0;
                    $this.$motionZ = $this.$motionZ * 0.800000011920929;
                    $this.$motionX = $this.$motionX + $this.$pushX * 0.04;
                    $this.$motionZ = $this.$motionZ + $this.$pushZ * 0.04;
                }
            }
            $this.$motionX = $this.$motionX * 0.9599999785423279;
            $this.$motionY = $this.$motionY * 0.0;
            $this.$motionZ = $this.$motionZ * 0.9599999785423279;
        }
        $var46 = nms_EntityMinecart_func_514_g($this, $this.$posX, $this.$posY, $this.$posZ);
        if ($var46 !== null && $var9 !== null) {
            $var37 = ($var9.$yCoord - $var46.$yCoord) * 0.05;
            $var36 = jl_Math_sqrt($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
            if ($var36 > 0.0) {
                $var38 = $this.$motionX / $var36;
                $var37 = $var36 + $var37;
                $this.$motionX = $var38 * $var37;
                $this.$motionZ = $this.$motionZ / $var36 * $var37;
            }
            nms_Entity_setPosition($this, $this.$posX, $var46.$yCoord, $this.$posZ);
        }
        $var47 = nms_MathHelper_floor_double($this.$posX);
        $var48 = nms_MathHelper_floor_double($this.$posZ);
        if (!($var47 == $var1 && $var48 == $var3)) {
            $var36 = jl_Math_sqrt($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
            $this.$motionX = $var36 * ($var47 - $var1 | 0);
            $this.$motionZ = $var36 * ($var48 - $var3 | 0);
        }
        if ($this.$d == 2) {
            $var39 = nms_MathHelper_sqrt_double($this.$pushX * $this.$pushX + $this.$pushZ * $this.$pushZ);
            if ($var39 > 0.01 && $this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ > 0.001) {
                $this.$pushX = $this.$pushX / $var39;
                $this.$pushZ = $this.$pushZ / $var39;
                if ($this.$pushX * $this.$motionX + $this.$pushZ * $this.$motionZ >= 0.0) {
                    $this.$pushX = $this.$motionX;
                    $this.$pushZ = $this.$motionZ;
                } else {
                    $this.$pushX = 0.0;
                    $this.$pushZ = 0.0;
                }
            }
        }
    } else {
        if ($this.$motionX < (-0.4))
            $this.$motionX = (-0.4);
        if ($this.$motionX > $var4)
            $this.$motionX = $var4;
        if ($this.$motionZ < (-0.4))
            $this.$motionZ = (-0.4);
        if ($this.$motionZ > $var4)
            $this.$motionZ = $var4;
        if ($this.$onGround) {
            $this.$motionX = $this.$motionX * 0.5;
            $this.$motionY = $this.$motionY * 0.5;
            $this.$motionZ = $this.$motionZ * 0.5;
        }
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        if (!$this.$onGround) {
            $this.$motionX = $this.$motionX * 0.949999988079071;
            $this.$motionY = $this.$motionY * 0.949999988079071;
            $this.$motionZ = $this.$motionZ * 0.949999988079071;
        }
    }
    $this.$rotationPitch = 0.0;
    $var43 = $this.$prevPosX - $this.$posX;
    $var44 = $this.$prevPosZ - $this.$posZ;
    if ($var43 * $var43 + $var44 * $var44 > 0.001) {
        $this.$rotationYaw = jl_Math_atan2($var44, $var43) * 180.0 / 3.141592653589793;
        if ($this.$field_856_i)
            $this.$rotationYaw = $this.$rotationYaw + 180.0;
    }
    $var13 = $this.$rotationYaw - $this.$prevRotationYaw;
    while ($var13 >= 180.0) {
        $var13 = $var13 - 360.0;
    }
    while ($var13 < (-180.0)) {
        $var13 = $var13 + 360.0;
    }
    if (!($var13 >= (-170.0) && $var13 < 170.0)) {
        $this.$rotationYaw = $this.$rotationYaw + 180.0;
        $this.$field_856_i = $this.$field_856_i ? 0 : 1;
    }
    a: {
        nms_Entity_setRotation($this, $this.$rotationYaw, $this.$rotationPitch);
        $var15 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands($this.$boundingBox, 0.20000000298023224, 0.0, 0.20000000298023224));
        if ($var15 !== null && ju_ArrayList_size($var15) > 0) {
            $var45 = 0;
            while (true) {
                if ($var45 >= ju_ArrayList_size($var15))
                    break a;
                $var17 = ju_ArrayList_get($var15, $var45);
                if ($var17 !== $this.$riddenByEntity && $var17.$canBePushed() && $var17 instanceof nms_EntityMinecart)
                    $var17.$applyEntityCollision($this);
                $var45 = $var45 + 1 | 0;
            }
        }
    }
    if ($this.$riddenByEntity !== null && $this.$riddenByEntity.$isDead)
        $this.$riddenByEntity = null;
    if ($var6 && !ju_Random_nextInt($this.$rand2, 4)) {
        $this.$fuel = $this.$fuel - 1 | 0;
        if ($this.$fuel < 0) {
            $this.$pushZ = 0.0;
            $this.$pushX = 0.0;
        }
        nms_World_spawnParticle($this.$worldObj0, $rt_s(280), $this.$posX, $this.$posY + 0.8, $this.$posZ, 0.0, 0.0, 0.0);
    }
}
function nms_EntityMinecart_func_515_a($this, $var1, $var3, $var5, $var7) {
    var $var9, $var10, $var11, $var12, var$9, $var14, $var16, $var18;
    $var9 = nms_MathHelper_floor_double($var1);
    $var10 = nms_MathHelper_floor_double($var3);
    $var11 = nms_MathHelper_floor_double($var5);
    $var12 = nms_World_getBlockId($this.$worldObj0, $var9, $var10 - 1 | 0, $var11);
    nms_Block_$callClinit();
    if ($var12 == nms_Block_minecartTrack.$blockID)
        $var10 = $var10 + (-1) | 0;
    if (nms_World_getBlockId($this.$worldObj0, $var9, $var10, $var11) != nms_Block_minecartTrack.$blockID)
        return null;
    $var12 = nms_World_getBlockMetadata($this.$worldObj0, $var9, $var10, $var11);
    $var3 = $var10;
    if ($var12 >= 2 && $var12 <= 5)
        $var3 = $var10 + 1 | 0;
    var$9 = nms_EntityMinecart_field_855_j.data[$var12].data;
    $var14 = var$9[1].data[0] - var$9[0].data[0] | 0;
    $var16 = var$9[1].data[2] - var$9[0].data[2] | 0;
    $var18 = jl_Math_sqrt($var14 * $var14 + $var16 * $var16);
    $var14 = $var14 / $var18;
    $var16 = $var16 / $var18;
    $var14 = $var1 + $var14 * $var7;
    $var5 = $var5 + $var16 * $var7;
    if (var$9[0].data[1] && (nms_MathHelper_floor_double($var14) - $var9 | 0) == var$9[0].data[0] && (nms_MathHelper_floor_double($var5) - $var11 | 0) == var$9[0].data[2])
        $var3 = $var3 + var$9[0].data[1];
    else if (var$9[1].data[1] && (nms_MathHelper_floor_double($var14) - $var9 | 0) == var$9[1].data[0] && (nms_MathHelper_floor_double($var5) - $var11 | 0) == var$9[1].data[2])
        $var3 = $var3 + var$9[1].data[1];
    return nms_EntityMinecart_func_514_g($this, $var14, $var3, $var5);
}
function nms_EntityMinecart_func_514_g($this, $var1, $var3, $var5) {
    var $var7, $var8, $var9, var$7, $var10, $var11, $var36, $var20, $var14, $var24, $var16, $var32, $var26, $var18, $var22, $var28, $var30;
    $var7 = nms_MathHelper_floor_double($var1);
    $var8 = nms_MathHelper_floor_double($var3);
    $var9 = nms_MathHelper_floor_double($var5);
    var$7 = nms_World_getBlockId($this.$worldObj0, $var7, $var8 - 1 | 0, $var9);
    nms_Block_$callClinit();
    if (var$7 == nms_Block_minecartTrack.$blockID)
        $var8 = $var8 + (-1) | 0;
    if (nms_World_getBlockId($this.$worldObj0, $var7, $var8, $var9) != nms_Block_minecartTrack.$blockID)
        return null;
    $var10 = nms_World_getBlockMetadata($this.$worldObj0, $var7, $var8, $var9);
    $var3 = $var8;
    $var11 = nms_EntityMinecart_field_855_j.data[$var10].data;
    $var36 = $var7;
    $var20 = $var36 + 0.5;
    $var14 = $var20 + $var11[0].data[0] * 0.5;
    $var24 = $var3 + 0.5;
    $var16 = $var24 + $var11[0].data[1] * 0.5;
    $var32 = $var9;
    $var26 = $var32 + 0.5;
    $var18 = $var26 + $var11[0].data[2] * 0.5;
    $var20 = $var20 + $var11[1].data[0] * 0.5;
    $var22 = $var24 + $var11[1].data[1] * 0.5;
    $var24 = $var26 + $var11[1].data[2] * 0.5;
    $var26 = $var20 - $var14;
    $var28 = ($var22 - $var16) * 2.0;
    $var30 = $var24 - $var18;
    $var36 = $var26 === 0.0 ? $var5 - $var32 : $var30 === 0.0 ? $var1 - $var36 : (($var1 - $var14) * $var26 + ($var5 - $var18) * $var30) * 2.0;
    $var1 = $var14 + $var26 * $var36;
    $var3 = $var16 + $var28 * $var36;
    $var5 = $var18 + $var30 * $var36;
    var$7 = $rt_compare($var28, 0.0);
    if (var$7 < 0)
        $var3 = $var3 + 1.0;
    if (var$7 > 0)
        $var3 = $var3 + 0.5;
    return nms_Vec3D_createVector($var1, $var3, $var5);
}
function nms_EntityMinecart_writeEntityToNBT($this, $var1) {
    var $var2, $var3, $var4;
    nms_NBTTagCompound_setInteger($var1, $rt_s(657), $this.$d);
    if ($this.$d == 2) {
        nms_NBTTagCompound_setDouble($var1, $rt_s(658), $this.$pushX);
        nms_NBTTagCompound_setDouble($var1, $rt_s(659), $this.$pushZ);
        nms_NBTTagCompound_setShort($var1, $rt_s(660), $this.$fuel << 16 >> 16);
    } else if ($this.$d == 1) {
        $var2 = nms_NBTTagList__init_0();
        $var3 = 0;
        while ($var3 < $this.$cargoItems.data.length) {
            if ($this.$cargoItems.data[$var3] !== null) {
                $var4 = nms_NBTTagCompound__init_0();
                nms_NBTTagCompound_setByte($var4, $rt_s(541), $var3 << 24 >> 24);
                nms_ItemStack_writeToNBT($this.$cargoItems.data[$var3], $var4);
                nms_NBTTagList_setTag($var2, $var4);
            }
            $var3 = $var3 + 1 | 0;
        }
        nms_NBTTagCompound_setTag($var1, $rt_s(661), $var2);
    }
}
function nms_EntityMinecart_readEntityFromNBT($this, $var1) {
    var $var2, $var3, $var4, $var5;
    a: {
        $this.$d = nms_NBTTagCompound_getInteger($var1, $rt_s(657));
        if ($this.$d == 2) {
            $this.$pushX = nms_NBTTagCompound_getDouble($var1, $rt_s(658));
            $this.$pushZ = nms_NBTTagCompound_getDouble($var1, $rt_s(659));
            $this.$fuel = nms_NBTTagCompound_getShort($var1, $rt_s(660));
        } else if ($this.$d == 1) {
            $var2 = nms_NBTTagCompound_getTagList($var1, $rt_s(661));
            $this.$cargoItems = $rt_createArray(nms_ItemStack, 27);
            $var3 = 0;
            while (true) {
                if ($var3 >= nms_NBTTagList_tagCount($var2))
                    break a;
                $var4 = nms_NBTTagList_tagAt($var2, $var3);
                $var5 = nms_NBTTagCompound_getByte($var4, $rt_s(541)) & 255;
                if ($var5 >= 0 && $var5 < $this.$cargoItems.data.length)
                    $this.$cargoItems.data[$var5] = nms_ItemStack__init_5($var4);
                $var3 = $var3 + 1 | 0;
            }
        }
    }
}
function nms_EntityMinecart_func_392_h_($this) {
    return 0.0;
}
function nms_EntityMinecart_applyEntityCollision($this, $var1) {
    var $var2, $var4, $var6, $var8, $var10, $var12, var$8;
    if ($var1 !== $this.$riddenByEntity) {
        if ($var1 instanceof nms_EntityLiving && !($var1 instanceof nms_EntityPlayer) && !$this.$d && $this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ > 0.01 && $this.$riddenByEntity === null && $var1.$ridingEntity === null)
            nms_Entity_mountEntity($var1, $this);
        $var2 = $var1.$posX - $this.$posX;
        $var4 = $var1.$posZ - $this.$posZ;
        $var6 = $var2 * $var2 + $var4 * $var4;
        if ($var6 >= 9.999999747378752E-5) {
            $var6 = nms_MathHelper_sqrt_double($var6);
            $var2 = $var2 / $var6;
            $var4 = $var4 / $var6;
            $var8 = 1.0 / $var6;
            if ($var8 > 1.0)
                $var8 = 1.0;
            $var2 = $var2 * $var8;
            $var4 = $var4 * $var8;
            $var2 = $var2 * 0.10000000149011612;
            $var4 = $var4 * 0.10000000149011612;
            $var6 = $var2 * (1.0 - $this.$field_632_aO);
            $var2 = $var4 * (1.0 - $this.$field_632_aO);
            $var4 = $var6 * 0.5;
            $var2 = $var2 * 0.5;
            if (!($var1 instanceof nms_EntityMinecart)) {
                nms_Entity_addVelocity($this,  -$var4, 0.0,  -$var2);
                nms_Entity_addVelocity($var1, $var4 / 4.0, 0.0, $var2 / 4.0);
            } else {
                $var10 = $var1.$motionX + $this.$motionX;
                $var12 = $var1.$motionZ + $this.$motionZ;
                var$8 = $var1;
                if (var$8.$d == 2 && $this.$d != 2) {
                    $this.$motionX = $this.$motionX * 0.20000000298023224;
                    $this.$motionZ = $this.$motionZ * 0.20000000298023224;
                    nms_Entity_addVelocity($this, $var1.$motionX - $var4, 0.0, $var1.$motionZ - $var2);
                    $var1.$motionX = $var1.$motionX * 0.699999988079071;
                    $var1.$motionZ = $var1.$motionZ * 0.699999988079071;
                } else if (var$8.$d != 2 && $this.$d == 2) {
                    $var1.$motionX = $var1.$motionX * 0.20000000298023224;
                    $var1.$motionZ = $var1.$motionZ * 0.20000000298023224;
                    nms_Entity_addVelocity($var1, $this.$motionX + $var4, 0.0, $this.$motionZ + $var2);
                    $this.$motionX = $this.$motionX * 0.699999988079071;
                    $this.$motionZ = $this.$motionZ * 0.699999988079071;
                } else {
                    $var6 = $var10 / 2.0;
                    $var8 = $var12 / 2.0;
                    $this.$motionX = $this.$motionX * 0.20000000298023224;
                    $this.$motionZ = $this.$motionZ * 0.20000000298023224;
                    nms_Entity_addVelocity($this, $var6 - $var4, 0.0, $var8 - $var2);
                    $var1.$motionX = $var1.$motionX * 0.20000000298023224;
                    $var1.$motionZ = $var1.$motionZ * 0.20000000298023224;
                    nms_Entity_addVelocity($var1, $var6 + $var4, 0.0, $var8 + $var2);
                }
            }
        }
    }
}
function nms_EntityMinecart_getSizeInventory($this) {
    return 27;
}
function nms_EntityMinecart_getStackInSlot($this, $var1) {
    return $this.$cargoItems.data[$var1];
}
function nms_EntityMinecart_decrStackSize($this, $var1, $var2) {
    var $var3;
    if ($this.$cargoItems.data[$var1] === null)
        return null;
    if ($this.$cargoItems.data[$var1].$stackSize <= $var2) {
        $var3 = $this.$cargoItems.data[$var1];
        $this.$cargoItems.data[$var1] = null;
        return $var3;
    }
    $var3 = nms_ItemStack_splitStack($this.$cargoItems.data[$var1], $var2);
    if (!$this.$cargoItems.data[$var1].$stackSize)
        $this.$cargoItems.data[$var1] = null;
    return $var3;
}
function nms_EntityMinecart_setInventorySlotContents($this, $var1, $var2) {
    $this.$cargoItems.data[$var1] = $var2;
    if ($var2 !== null && $var2.$stackSize > 64)
        $var2.$stackSize = 64;
}
function nms_EntityMinecart_getInvName($this) {
    return $rt_s(662);
}
function nms_EntityMinecart_getInventoryStackLimit($this) {
    return 64;
}
function nms_EntityMinecart_onInventoryChanged($this) {
    return;
}
function nms_EntityMinecart_interact($this, $var1) {
    var $var2, var$3;
    if (!$this.$d) {
        if ($this.$riddenByEntity !== null && $this.$riddenByEntity instanceof nms_EntityPlayer && $this.$riddenByEntity !== $var1)
            return 1;
        nms_Entity_mountEntity($var1, $this);
    } else if ($this.$d == 1)
        nms_EntityPlayerSP_displayGUIChest($var1, $this);
    else if ($this.$d == 2) {
        $var2 = nms_InventoryPlayer_getCurrentItem($var1.$inventory0);
        if ($var2 !== null) {
            var$3 = $var2.$itemID;
            nms_Item_$callClinit();
            if (var$3 == nms_Item_coal.$shiftedIndex) {
                var$3 = $var2.$stackSize - 1 | 0;
                $var2.$stackSize = var$3;
                if (!var$3)
                    nms_InventoryPlayer_setInventorySlotContents($var1.$inventory0, $var1.$inventory0.$currentItem, null);
                $this.$fuel = $this.$fuel + 1200 | 0;
            }
        }
        $this.$pushX = $this.$posX - $var1.$posX;
        $this.$pushZ = $this.$posZ - $var1.$posZ;
    }
    return 1;
}
function nms_EntityMinecart__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $rt_createArray($rt_arraycls($rt_arraycls($rt_intcls())), 10);
    var$2 = var$1.data;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = (-1);
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = 1;
    var$4[1] = var$5;
    var$2[0] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = (-1);
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 1;
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[1] = var$5;
    var$2[1] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = (-1);
    var$6[1] = (-1);
    var$6[2] = 0;
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 1;
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[1] = var$5;
    var$2[2] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = (-1);
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 1;
    var$6[1] = (-1);
    var$6[2] = 0;
    var$4[1] = var$5;
    var$2[3] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = (-1);
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = (-1);
    var$6[2] = 1;
    var$4[1] = var$5;
    var$2[4] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = (-1);
    var$6[2] = (-1);
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = 1;
    var$4[1] = var$5;
    var$2[5] = var$3;
    var$6 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$6.data;
    var$3 = $rt_createIntArray(3);
    var$5 = var$3.data;
    var$5[0] = 0;
    var$5[1] = 0;
    var$5[2] = 1;
    var$4[0] = var$3;
    var$3 = $rt_createIntArray(3);
    var$5 = var$3.data;
    var$5[0] = 1;
    var$5[1] = 0;
    var$5[2] = 0;
    var$4[1] = var$3;
    var$2[6] = var$6;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = 1;
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = (-1);
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[1] = var$5;
    var$2[7] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = (-1);
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = (-1);
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[1] = var$5;
    var$2[8] = var$3;
    var$3 = $rt_createArray($rt_arraycls($rt_intcls()), 2);
    var$4 = var$3.data;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 0;
    var$6[1] = 0;
    var$6[2] = (-1);
    var$4[0] = var$5;
    var$5 = $rt_createIntArray(3);
    var$6 = var$5.data;
    var$6[0] = 1;
    var$6[1] = 0;
    var$6[2] = 0;
    var$4[1] = var$5;
    var$2[9] = var$3;
    nms_EntityMinecart_field_855_j = var$1;
}
function nms_RenderMinecart() {
    nms_Render.call(this);
    this.$a22 = null;
}
function nms_RenderMinecart__init_0() {
    var var_0 = new nms_RenderMinecart();
    nms_RenderMinecart__init_(var_0);
    return var_0;
}
function nms_RenderMinecart__init_($this) {
    nms_Render__init_($this);
    $this.$field_9246_c = 0.5;
    $this.$a22 = nms_ModelMinecart__init_0();
}
function nms_RenderMinecart_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var16, $var10, $var14, $var12, $var18, $var19, $var20, $var21, $var22, $var23, $var24, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var24 = $thread.pop();$var23 = $thread.pop();$var22 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();$var19 = $thread.pop();$var18 = $thread.pop();$var12 = $thread.pop();$var14 = $thread.pop();$var10 = $thread.pop();$var16 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        $var16 = $var1.$lastTickPosX;
        $var10 = $var1.$posX - $var1.$lastTickPosX;
        $var14 = $var9;
        $var10 = $var16 + $var10 * $var14;
        $var12 = $var1.$lastTickPosY + ($var1.$posY - $var1.$lastTickPosY) * $var14;
        $var14 = $var1.$lastTickPosZ + ($var1.$posZ - $var1.$lastTickPosZ) * $var14;
        $var18 = nms_EntityMinecart_func_514_g($var1, $var10, $var12, $var14);
        $var19 = $var1.$prevRotationPitch + ($var1.$rotationPitch - $var1.$prevRotationPitch) * $var9;
        if ($var18 !== null) {
            $var20 = nms_EntityMinecart_func_515_a($var1, $var10, $var12, $var14, 0.30000001192092896);
            $var21 = nms_EntityMinecart_func_515_a($var1, $var10, $var12, $var14, (-0.30000001192092896));
            if ($var20 === null)
                $var20 = $var18;
            if ($var21 === null)
                $var21 = $var18;
            $var2 = $var2 + $var18.$xCoord - $var10;
            $var4 = $var4 + ($var20.$yCoord + $var21.$yCoord) / 2.0 - $var12;
            $var6 = $var6 + $var18.$zCoord - $var14;
            $var22 = nms_Vec3D_addVector($var21,  -$var20.$xCoord,  -$var20.$yCoord,  -$var20.$zCoord);
            if (nms_Vec3D_lengthVector($var22) !== 0.0) {
                $var22 = nms_Vec3D_normalize($var22);
                $var8 = jl_Math_atan2($var22.$zCoord, $var22.$xCoord) * 180.0 / 3.141592653589793;
                $var19 = jl_Math_atan($var22.$yCoord) * 73.0;
            }
        }
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glRotatef(180.0 - $var8, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef( -$var19, 0.0, 0.0, 1.0);
        $var23 = $var1.$b0 - $var9;
        $var24 = $var1.$a - $var9;
        if ($var24 < 0.0)
            $var24 = 0.0;
        if ($var23 > 0.0)
            olo_EaglerAdapterGL30_glRotatef(nms_MathHelper_sin($var23) * $var23 * $var24 / 10.0 * $var1.$c, 1.0, 0.0, 0.0);
        if (!$var1.$d) {
            $var1 = $rt_s(663);
            $ptr = 1;
            continue main;
        }
        $var22 = $rt_s(193);
        $ptr = 2;
        continue main;
    case 1:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glScalef((-1.0), (-1.0), 1.0);
        nms_ModelMinecart_render($this.$a22, 0.0, 0.0, (-0.10000000149011612), 0.0, 0.0, 0.0625);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    case 2:
        nms_Render_loadTexture($this, $var22);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glScalef(0.75, 0.75, 0.75);
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.3125, 0.0);
        olo_EaglerAdapterGL30_glRotatef(90.0, 0.0, 1.0, 0.0);
        if ($var1.$d == 1) {
            $var1 = nms_RenderBlocks__init_0();
            nms_Block_$callClinit();
            nms_RenderBlocks_func_1227_a($var1, nms_Block_crate);
        } else if ($var1.$d == 2) {
            $var1 = nms_RenderBlocks__init_0();
            nms_Block_$callClinit();
            nms_RenderBlocks_func_1227_a($var1, nms_Block_stoneOvenIdle);
        }
        olo_EaglerAdapterGL30_glRotatef((-90.0), 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.3125), 0.0);
        olo_EaglerAdapterGL30_glScalef(1.3333333730697632, 1.3333333730697632, 1.3333333730697632);
        $var1 = $rt_s(663);
        $ptr = 1;
        continue main;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var16, $var10, $var14, $var12, $var18, $var19, $var20, $var21, $var22, $var23, $var24, $ptr);
}
function nms_RenderMinecart_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderMinecart_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityBoat() {
    var a = this; nms_Entity.call(a);
    a.$field_807_a = 0;
    a.$field_806_b = 0;
    a.$field_808_c = 0;
}
function nms_EntityBoat_func_383_b_($this, $var1) {
    return $var1.$boundingBox;
}
function nms_EntityBoat_func_372_f_($this) {
    return $this.$boundingBox;
}
function nms_EntityBoat_canBePushed($this) {
    return 1;
}
function nms_EntityBoat_func_402_h($this) {
    return $this.$height * 0.0 - 0.30000001192092896;
}
function nms_EntityBoat_canAttackEntity($this, $var1, $var2) {
    var $var3;
    if ($this.$isDead)
        return 1;
    $this.$field_808_c =  -$this.$field_808_c;
    $this.$field_806_b = 10;
    $this.$field_807_a = $this.$field_807_a + ($var2 * 10 | 0) | 0;
    nms_Entity_func_9281_M($this);
    if ($this.$field_807_a > 40) {
        $var3 = 0;
        while ($var3 < 3) {
            nms_Block_$callClinit();
            nms_Entity_dropItemWithOffset($this, nms_Block_planks.$blockID, 1, 0.0);
            $var3 = $var3 + 1 | 0;
        }
        $var2 = 0;
        while ($var2 < 2) {
            nms_Item_$callClinit();
            nms_Entity_dropItemWithOffset($this, nms_Item_stick.$shiftedIndex, 1, 0.0);
            $var2 = $var2 + 1 | 0;
        }
        nms_Entity_setEntityDead($this);
    }
    return 1;
}
function nms_EntityBoat_canBeCollidedWith($this) {
    return $this.$isDead ? 0 : 1;
}
function nms_EntityBoat_onUpdate($this) {
    var $var2, $var4, $var5, $var6, $var23, $var7, $var9, $var8, $var1, $var10, $var12, $var14, $var25, $var15, $var17, $var19, $var21, $var24, $var16, $var18, $var26, $var20;
    nms_Entity_onUpdate($this);
    if ($this.$field_806_b > 0)
        $this.$field_806_b = $this.$field_806_b - 1 | 0;
    if ($this.$field_807_a > 0)
        $this.$field_807_a = $this.$field_807_a - 1 | 0;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $var2 = 0.0;
    $var4 = 0;
    while ($var4 < 5) {
        $var5 = $this.$boundingBox.$minY0 + ($this.$boundingBox.$maxY0 - $this.$boundingBox.$minY0) * ($var4 + 0 | 0) / 5.0 - 0.125;
        $var6 = $this.$boundingBox.$minY0;
        $var23 = $this.$boundingBox.$maxY0 - $this.$boundingBox.$minY0;
        $var4 = $var4 + 1 | 0;
        $var7 = $var6 + $var23 * $var4 / 5.0 - 0.125;
        $var9 = nms_AxisAlignedBB_getBoundingBoxFromPool($this.$boundingBox.$minX, $var5, $this.$boundingBox.$minZ0, $this.$boundingBox.$maxX0, $var7, $this.$boundingBox.$maxZ0);
        if (nms_World_func_707_b($this.$worldObj0, $var9, nms_Material_water))
            $var2 = $var2 + 0.2;
    }
    $var23 = $var2 * 2.0 - 1.0;
    $this.$motionY = $this.$motionY + 0.03999999910593033 * $var23;
    if ($this.$riddenByEntity !== null) {
        $this.$motionX = $this.$motionX + $this.$riddenByEntity.$motionX * 0.2;
        $this.$motionZ = $this.$motionZ + $this.$riddenByEntity.$motionZ * 0.2;
    }
    if ($this.$motionX < (-0.4))
        $this.$motionX = (-0.4);
    if ($this.$motionX > 0.4)
        $this.$motionX = 0.4;
    if ($this.$motionZ < (-0.4))
        $this.$motionZ = (-0.4);
    if ($this.$motionZ > 0.4)
        $this.$motionZ = 0.4;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.5;
        $this.$motionY = $this.$motionY * 0.5;
        $this.$motionZ = $this.$motionZ * 0.5;
    }
    a: {
        nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
        $var8 = jl_Math_sqrt($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
        $var1 = $rt_compare($var8, 0.15);
        if ($var1 > 0) {
            $var10 = jl_Math_cos($this.$rotationYaw * 3.141592653589793 / 180.0);
            $var12 = jl_Math_sin($this.$rotationYaw * 3.141592653589793 / 180.0);
            $var14 = 0;
            $var25 = 1.0 + $var8 * 60.0;
            while (true) {
                if ($var14 >= $var25)
                    break a;
                $var15 = ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0;
                $var17 = ((ju_Random_nextInt($this.$rand2, 2) * 2 | 0) - 1 | 0) * 0.7;
                if (!ju_Random_nextBoolean($this.$rand2)) {
                    $var19 = $this.$posX + $var10 + $var12 * $var15 * 0.7;
                    $var21 = $this.$posZ + $var12 - $var10 * $var15 * 0.7;
                    nms_World_spawnParticle($this.$worldObj0, $rt_s(487), $var19, $this.$posY - 0.125, $var21, $this.$motionX, $this.$motionY, $this.$motionZ);
                } else {
                    $var19 = $this.$posX - $var10 * $var15 * 0.8 + $var12 * $var17;
                    $var21 = $this.$posZ - $var12 * $var15 * 0.8 - $var10 * $var17;
                    nms_World_spawnParticle($this.$worldObj0, $rt_s(487), $var19, $this.$posY - 0.125, $var21, $this.$motionX, $this.$motionY, $this.$motionZ);
                }
                $var14 = $var14 + 1 | 0;
            }
        }
    }
    if ($this.$field_9297_aI && $var1 > 0) {
        nms_Entity_setEntityDead($this);
        $var24 = 0;
        while ($var24 < 3) {
            nms_Block_$callClinit();
            nms_Entity_dropItemWithOffset($this, nms_Block_planks.$blockID, 1, 0.0);
            $var24 = $var24 + 1 | 0;
        }
        $var1 = 0;
        while ($var1 < 2) {
            nms_Item_$callClinit();
            nms_Entity_dropItemWithOffset($this, nms_Item_stick.$shiftedIndex, 1, 0.0);
            $var1 = $var1 + 1 | 0;
        }
    } else {
        $this.$motionX = $this.$motionX * 0.9900000095367432;
        $this.$motionY = $this.$motionY * 0.949999988079071;
        $this.$motionZ = $this.$motionZ * 0.9900000095367432;
    }
    $this.$rotationPitch = 0.0;
    $var10 = $this.$rotationYaw;
    $var12 = $this.$prevPosX - $this.$posX;
    $var25 = $this.$prevPosZ - $this.$posZ;
    if ($var12 * $var12 + $var25 * $var25 > 0.001)
        $var10 = jl_Math_atan2($var25, $var12) * 180.0 / 3.141592653589793;
    $var16 = $var10 - $this.$rotationYaw;
    while ($var16 >= 180.0) {
        $var16 = $var16 - 360.0;
    }
    while ($var16 < (-180.0)) {
        $var16 = $var16 + 360.0;
    }
    if ($var16 > 20.0)
        $var16 = 20.0;
    if ($var16 < (-20.0))
        $var16 = (-20.0);
    b: {
        $this.$rotationYaw = $this.$rotationYaw + $var16;
        nms_Entity_setRotation($this, $this.$rotationYaw, $this.$rotationPitch);
        $var18 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands($this.$boundingBox, 0.20000000298023224, 0.0, 0.20000000298023224));
        if ($var18 !== null && ju_ArrayList_size($var18) > 0) {
            $var26 = 0;
            while (true) {
                if ($var26 >= ju_ArrayList_size($var18))
                    break b;
                $var20 = ju_ArrayList_get($var18, $var26);
                if ($var20 !== $this.$riddenByEntity && $var20.$canBePushed() && $var20 instanceof nms_EntityBoat)
                    $var20.$applyEntityCollision($this);
                $var26 = $var26 + 1 | 0;
            }
        }
    }
    if ($this.$riddenByEntity !== null && $this.$riddenByEntity.$isDead)
        $this.$riddenByEntity = null;
}
function nms_EntityBoat_func_366_i_($this) {
    var $var1, $var3;
    if ($this.$riddenByEntity !== null) {
        $var1 = jl_Math_cos($this.$rotationYaw * 3.141592653589793 / 180.0) * 0.4;
        $var3 = jl_Math_sin($this.$rotationYaw * 3.141592653589793 / 180.0) * 0.4;
        nms_Entity_setPosition($this.$riddenByEntity, $this.$posX + $var1, $this.$posY + nms_EntityBoat_func_402_h($this) + $this.$riddenByEntity.$func_388_v(), $this.$posZ + $var3);
    }
}
function nms_EntityBoat_writeEntityToNBT($this, $var1) {
    return;
}
function nms_EntityBoat_readEntityFromNBT($this, $var1) {
    return;
}
function nms_EntityBoat_func_392_h_($this) {
    return 0.0;
}
function nms_EntityBoat_interact($this, $var1) {
    if ($this.$riddenByEntity !== null && $this.$riddenByEntity instanceof nms_EntityPlayer && $this.$riddenByEntity !== $var1)
        return 1;
    nms_Entity_mountEntity($var1, $this);
    return 1;
}
function nms_RenderBoat() {
    nms_Render.call(this);
    this.$field_198_d = null;
}
function nms_RenderBoat__init_0() {
    var var_0 = new nms_RenderBoat();
    nms_RenderBoat__init_(var_0);
    return var_0;
}
function nms_RenderBoat__init_($this) {
    nms_Render__init_($this);
    $this.$field_9246_c = 0.5;
    $this.$field_198_d = nms_ModelBoat__init_0();
}
function nms_RenderBoat_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $var10, $var11, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var11 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glRotatef(180.0 - $var8, 0.0, 1.0, 0.0);
        $var10 = $var1.$field_806_b - $var9;
        $var11 = $var1.$field_807_a - $var9;
        if ($var11 < 0.0)
            $var11 = 0.0;
        if ($var10 > 0.0)
            olo_EaglerAdapterGL30_glRotatef(nms_MathHelper_sin($var10) * $var10 * $var11 / 10.0 * $var1.$field_808_c, 1.0, 0.0, 0.0);
        $var1 = $rt_s(193);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glScalef(0.75, 0.75, 0.75);
        olo_EaglerAdapterGL30_glScalef(1.3333333730697632, 1.3333333730697632, 1.3333333730697632);
        $var1 = $rt_s(664);
        $ptr = 2;
    case 2:
        nms_Render_loadTexture($this, $var1);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glScalef((-1.0), (-1.0), 1.0);
        nms_ModelBoat_render($this.$field_198_d, 0.0, 0.0, (-0.10000000149011612), 0.0, 0.0, 0.0625);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $ptr);
}
function nms_RenderBoat_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderBoat_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_EntityFish() {
    var a = this; nms_Entity.call(a);
    a.$field_4095_d = 0;
    a.$field_4094_e = 0;
    a.$field_4093_f = 0;
    a.$field_4092_g = 0;
    a.$field_4091_h = 0;
    a.$field_4098_a = 0;
    a.$field_4097_b = null;
    a.$field_4090_i = 0;
    a.$field_4089_j = 0;
    a.$field_4088_k = 0;
    a.$field_4096_c = null;
    a.$field_6388_l = 0;
    a.$field_6387_m = 0.0;
    a.$field_6386_n = 0.0;
    a.$field_6385_o = 0.0;
    a.$field_6384_p = 0.0;
    a.$field_6383_q = 0.0;
}
function nms_EntityFish__init_(var_0, var_1) {
    var var_2 = new nms_EntityFish();
    nms_EntityFish__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_EntityFish_func_384_a($this, $var1) {
    var $var3;
    $var3 = nms_AxisAlignedBB_getAverageEdgeLength($this.$boundingBox) * 4.0 * 64.0;
    return $var1 >= $var3 * $var3 ? 0 : 1;
}
function nms_EntityFish__init_0($this, $var1, $var2) {
    nms_Entity__init_($this, $var1);
    $this.$field_4095_d = (-1);
    $this.$field_4094_e = (-1);
    $this.$field_4093_f = (-1);
    $this.$field_4092_g = 0;
    $this.$field_4091_h = 0;
    $this.$field_4098_a = 0;
    $this.$field_4089_j = 0;
    $this.$field_4088_k = 0;
    $this.$field_4096_c = null;
    $this.$field_4097_b = $var2;
    $this.$field_4097_b.$fishEntity = $this;
    nms_Entity_setSize($this, 0.25, 0.25);
    nms_Entity_setLocationAndAngles($this, $var2.$posX, $var2.$posY + 1.62 - $var2.$yOffset, $var2.$posZ, $var2.$rotationYaw, $var2.$rotationPitch);
    $this.$posX = $this.$posX - nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * 0.1599999964237213;
    $this.$posY = $this.$posY - 0.10000000149011612;
    $this.$posZ = $this.$posZ - nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * 0.1599999964237213;
    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
    $this.$yOffset = 0.0;
    $this.$motionX =  -nms_MathHelper_sin($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.4000000059604645;
    $this.$motionZ = nms_MathHelper_cos($this.$rotationYaw / 180.0 * 3.1415927410125732) * nms_MathHelper_cos($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.4000000059604645;
    $this.$motionY =  -nms_MathHelper_sin($this.$rotationPitch / 180.0 * 3.1415927410125732) * 0.4000000059604645;
    nms_EntityFish_func_4042_a($this, $this.$motionX, $this.$motionY, $this.$motionZ, 1.5, 1.0);
}
function nms_EntityFish_func_4042_a($this, $var1, $var3, $var5, $var7, $var8) {
    var var$6, var$7, $var10;
    var$6 = nms_MathHelper_sqrt_double($var1 * $var1 + $var3 * $var3 + $var5 * $var5);
    $var1 = $var1 / var$6;
    $var3 = $var3 / var$6;
    $var5 = $var5 / var$6;
    var$6 = ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937;
    var$7 = $var8;
    $var1 = $var1 + var$6 * var$7;
    $var3 = $var3 + ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937 * var$7;
    $var5 = $var5 + ju_Random_nextGaussian($this.$rand2) * 0.007499999832361937 * var$7;
    var$6 = $var7;
    $var1 = $var1 * var$6;
    $var3 = $var3 * var$6;
    $var5 = $var5 * var$6;
    $this.$motionX = $var1;
    $this.$motionY = $var3;
    $this.$motionZ = $var5;
    $var10 = nms_MathHelper_sqrt_double($var1 * $var1 + $var5 * $var5);
    $var7 = jl_Math_atan2($var1, $var5) * 180.0 / 3.1415927410125732;
    $this.$rotationYaw = $var7;
    $this.$prevRotationYaw = $var7;
    $var7 = jl_Math_atan2($var3, $var10) * 180.0 / 3.1415927410125732;
    $this.$rotationPitch = $var7;
    $this.$prevRotationPitch = $var7;
    $this.$field_4090_i = 0;
}
function nms_EntityFish_onUpdate($this) {
    var $var21, $var22, $var23, $var7, $var1, $var20, $var2, $var3, $var4, $var5, $var6, $var8, $var9, $var12, $var13, $var24, $var25, $var27, $var28, $var14, $var16, $var18, $var26, $var29, $var30, $var15, $var31, $var19;
    a: {
        nms_Entity_onUpdate($this);
        if ($this.$field_6388_l > 0) {
            $var21 = $this.$posX + ($this.$field_6387_m - $this.$posX) / $this.$field_6388_l;
            $var22 = $this.$posY + ($this.$field_6386_n - $this.$posY) / $this.$field_6388_l;
            $var23 = $this.$posZ + ($this.$field_6385_o - $this.$posZ) / $this.$field_6388_l;
            $var7 = $this.$field_6384_p - $this.$rotationYaw;
            while ($var7 < (-180.0)) {
                $var7 = $var7 + 360.0;
            }
            while ($var7 >= 180.0) {
                $var7 = $var7 - 360.0;
            }
            $this.$rotationYaw = $this.$rotationYaw + $var7 / $this.$field_6388_l;
            $this.$rotationPitch = $this.$rotationPitch + ($this.$field_6383_q - $this.$rotationPitch) / $this.$field_6388_l;
            $this.$field_6388_l = $this.$field_6388_l - 1 | 0;
            nms_Entity_setPosition($this, $var21, $var22, $var23);
            nms_Entity_setRotation($this, $this.$rotationYaw, $this.$rotationPitch);
        } else {
            $var1 = nms_EntityPlayer_getCurrentEquippedItem($this.$field_4097_b);
            if (!$this.$field_4097_b.$isDead && nms_EntityLiving_isEntityAlive($this.$field_4097_b) && $var1 !== null) {
                $var1 = nms_ItemStack_getItem($var1);
                nms_Item_$callClinit();
                if ($var1 === nms_Item_fishingRod && nms_Entity_getDistanceSqToEntity($this, $this.$field_4097_b) <= 1024.0) {
                    if ($this.$field_4096_c !== null) {
                        if (!$this.$field_4096_c.$isDead) {
                            $this.$posX = $this.$field_4096_c.$posX;
                            $this.$posY = $this.$field_4096_c.$boundingBox.$minY0 + $this.$field_4096_c.$height * 0.8;
                            $this.$posZ = $this.$field_4096_c.$posZ;
                            return;
                        }
                        $this.$field_4096_c = null;
                    }
                    if ($this.$field_4098_a > 0)
                        $this.$field_4098_a = $this.$field_4098_a - 1 | 0;
                    if (!$this.$field_4091_h)
                        $this.$field_4089_j = $this.$field_4089_j + 1 | 0;
                    else {
                        if (nms_World_getBlockId($this.$worldObj0, $this.$field_4095_d, $this.$field_4094_e, $this.$field_4093_f) == $this.$field_4092_g) {
                            $this.$field_4090_i = $this.$field_4090_i + 1 | 0;
                            if ($this.$field_4090_i == 1200)
                                nms_Entity_setEntityDead($this);
                            return;
                        }
                        $this.$field_4091_h = 0;
                        $this.$motionX = $this.$motionX * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
                        $this.$motionY = $this.$motionY * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
                        $this.$motionZ = $this.$motionZ * ju_Random_nextFloat($this.$rand2) * 0.20000000298023224;
                        $this.$field_4090_i = 0;
                        $this.$field_4089_j = 0;
                    }
                    $var20 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
                    $var2 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
                    $var3 = nms_World_rayTraceBlocks($this.$worldObj0, $var20, $var2);
                    $var1 = nms_Vec3D_createVector($this.$posX, $this.$posY, $this.$posZ);
                    $var20 = nms_Vec3D_createVector($this.$posX + $this.$motionX, $this.$posY + $this.$motionY, $this.$posZ + $this.$motionZ);
                    if ($var3 !== null)
                        $var20 = nms_Vec3D_createVector($var3.$hitVec.$xCoord, $var3.$hitVec.$yCoord, $var3.$hitVec.$zCoord);
                    $var4 = null;
                    $var5 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands(nms_AxisAlignedBB_addCoord($this.$boundingBox, $this.$motionX, $this.$motionY, $this.$motionZ), 1.0, 1.0, 1.0));
                    $var6 = 0.0;
                    $var8 = 0;
                    while ($var8 < ju_ArrayList_size($var5)) {
                        $var9 = ju_ArrayList_get($var5, $var8);
                        if ($var9.$canBeCollidedWith() && !($var9 === $this.$field_4097_b && $this.$field_4089_j < 5)) {
                            $var12 = nms_AxisAlignedBB_func_1169_a(nms_AxisAlignedBB_expands($var9.$boundingBox, 0.30000001192092896, 0.30000001192092896, 0.30000001192092896), $var1, $var20);
                            if ($var12 !== null) {
                                $var13 = nms_Vec3D_distanceTo($var1, $var12.$hitVec);
                                if (!($var13 >= $var6 && $var6 !== 0.0)) {
                                    $var4 = $var9;
                                    $var6 = $var13;
                                }
                            }
                        }
                        $var8 = $var8 + 1 | 0;
                    }
                    if ($var4 !== null)
                        $var3 = nms_MovingObjectPosition__init_($var4);
                    if ($var3 !== null) {
                        if ($var3.$entityHit === null)
                            $this.$field_4091_h = 1;
                        else if ($var3.$entityHit.$canAttackEntity($this.$field_4097_b, 0))
                            $this.$field_4096_c = $var3.$entityHit;
                    }
                    if ($this.$field_4091_h)
                        break a;
                    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
                    $var24 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionZ * $this.$motionZ);
                    $this.$rotationYaw = jl_Math_atan2($this.$motionX, $this.$motionZ) * 180.0 / 3.1415927410125732;
                    $this.$rotationPitch = jl_Math_atan2($this.$motionY, $var24) * 180.0 / 3.1415927410125732;
                    while ($this.$rotationPitch - $this.$prevRotationPitch < (-180.0)) {
                        $this.$prevRotationPitch = $this.$prevRotationPitch - 360.0;
                    }
                    while ($this.$rotationPitch - $this.$prevRotationPitch >= 180.0) {
                        $this.$prevRotationPitch = $this.$prevRotationPitch + 360.0;
                    }
                    while ($this.$rotationYaw - $this.$prevRotationYaw < (-180.0)) {
                        $this.$prevRotationYaw = $this.$prevRotationYaw - 360.0;
                    }
                    while ($this.$rotationYaw - $this.$prevRotationYaw >= 180.0) {
                        $this.$prevRotationYaw = $this.$prevRotationYaw + 360.0;
                    }
                    $this.$rotationPitch = $this.$prevRotationPitch + ($this.$rotationPitch - $this.$prevRotationPitch) * 0.20000000298023224;
                    $this.$rotationYaw = $this.$prevRotationYaw + ($this.$rotationYaw - $this.$prevRotationYaw) * 0.20000000298023224;
                    $var25 = 0.9200000166893005;
                    if (!(!$this.$onGround && !$this.$field_9297_aI))
                        $var25 = 0.5;
                    $var27 = 0.0;
                    $var28 = 0;
                    while ($var28 < 5) {
                        $var14 = $this.$boundingBox.$minY0 + ($this.$boundingBox.$maxY0 - $this.$boundingBox.$minY0) * ($var28 + 0 | 0) / 5.0 - 0.125 + 0.125;
                        $var6 = $this.$boundingBox.$minY0;
                        $var13 = $this.$boundingBox.$maxY0 - $this.$boundingBox.$minY0;
                        $var28 = $var28 + 1 | 0;
                        $var16 = $var6 + $var13 * $var28 / 5.0 - 0.125 + 0.125;
                        $var18 = nms_AxisAlignedBB_getBoundingBoxFromPool($this.$boundingBox.$minX, $var14, $this.$boundingBox.$minZ0, $this.$boundingBox.$maxX0, $var16, $this.$boundingBox.$maxZ0);
                        if (nms_World_func_707_b($this.$worldObj0, $var18, nms_Material_water))
                            $var27 = $var27 + 0.2;
                    }
                    b: {
                        $var26 = $rt_compare($var27, 0.0);
                        if ($var26 > 0) {
                            if ($this.$field_4088_k > 0)
                                $this.$field_4088_k = $this.$field_4088_k - 1 | 0;
                            else if (!ju_Random_nextInt($this.$rand2, 500)) {
                                $this.$field_4088_k = ju_Random_nextInt($this.$rand2, 30) + 10 | 0;
                                $this.$motionY = $this.$motionY - 0.20000000298023224;
                                nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(525), 0.25, 1.0 + (ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.4000000059604645);
                                $var29 = nms_MathHelper_floor_double($this.$boundingBox.$minY0);
                                $var30 = 0;
                                $var22 = $var29 + 1.0;
                                while ($var30 < 1.0 + $this.$width0 * 20.0) {
                                    $var15 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                                    $var31 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                                    nms_World_spawnParticle($this.$worldObj0, $rt_s(485), $this.$posX + $var15, $var22, $this.$posZ + $var31, $this.$motionX, $this.$motionY - ju_Random_nextFloat($this.$rand2) * 0.20000000298023224, $this.$motionZ);
                                    $var30 = $var30 + 1 | 0;
                                }
                                $var19 = 0;
                                while (true) {
                                    if ($var19 >= 1.0 + $this.$width0 * 20.0)
                                        break b;
                                    $var15 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                                    $var31 = (ju_Random_nextFloat($this.$rand2) * 2.0 - 1.0) * $this.$width0;
                                    nms_World_spawnParticle($this.$worldObj0, $rt_s(487), $this.$posX + $var15, $var22, $this.$posZ + $var31, $this.$motionX, $this.$motionY, $this.$motionZ);
                                    $var19 = $var19 + 1 | 0;
                                }
                            }
                        }
                    }
                    if ($this.$field_4088_k > 0)
                        $this.$motionY = $this.$motionY - ju_Random_nextFloat($this.$rand2) * ju_Random_nextFloat($this.$rand2) * ju_Random_nextFloat($this.$rand2) * 0.2;
                    $var13 = $var27 * 2.0 - 1.0;
                    $this.$motionY = $this.$motionY + 0.03999999910593033 * $var13;
                    if ($var26 > 0) {
                        $var25 = $var25 * 0.9;
                        $this.$motionY = $this.$motionY * 0.8;
                    }
                    $var6 = $this.$motionX;
                    $var27 = $var25;
                    $this.$motionX = $var6 * $var27;
                    $this.$motionY = $this.$motionY * $var27;
                    $this.$motionZ = $this.$motionZ * $var27;
                    nms_Entity_setPosition($this, $this.$posX, $this.$posY, $this.$posZ);
                    break a;
                }
            }
            nms_Entity_setEntityDead($this);
            $this.$field_4097_b.$fishEntity = null;
            return;
        }
    }
}
function nms_EntityFish_writeEntityToNBT($this, $var1) {
    nms_NBTTagCompound_setShort($var1, $rt_s(645), $this.$field_4095_d << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(646), $this.$field_4094_e << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(647), $this.$field_4093_f << 16 >> 16);
    nms_NBTTagCompound_setByte($var1, $rt_s(648), $this.$field_4092_g << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(649), $this.$field_4098_a << 24 >> 24);
    nms_NBTTagCompound_setByte($var1, $rt_s(650), (!$this.$field_4091_h ? 0 : 1) << 24 >> 24);
}
function nms_EntityFish_func_392_h_($this) {
    return 0.0;
}
function nms_EntityFish_func_4043_i($this) {
    var $var1, $var2, $var4, $var6, $var8, var$6, $var13, var$8, $var3, $var5, $var7, $var9;
    $var1 = 0;
    if ($this.$field_4096_c !== null) {
        $var2 = $this.$field_4097_b.$posX - $this.$posX;
        $var4 = $this.$field_4097_b.$posY - $this.$posY;
        $var6 = $this.$field_4097_b.$posZ - $this.$posZ;
        $var8 = nms_MathHelper_sqrt_double($var2 * $var2 + $var4 * $var4 + $var6 * $var6);
        var$6 = $this.$field_4096_c;
        var$6.$motionX = var$6.$motionX + $var2 * 0.1;
        var$6 = $this.$field_4096_c;
        var$6.$motionY = var$6.$motionY + $var4 * 0.1 + nms_MathHelper_sqrt_double($var8) * 0.08;
        var$6 = $this.$field_4096_c;
        var$6.$motionZ = var$6.$motionZ + $var6 * 0.1;
        $var1 = 3;
    } else if ($this.$field_4088_k > 0) {
        $var13 = new nms_EntityItem;
        var$8 = $this.$worldObj0;
        $var3 = $this.$posX;
        $var5 = $this.$posY;
        $var7 = $this.$posZ;
        var$6 = new nms_ItemStack;
        nms_Item_$callClinit();
        nms_ItemStack__init_(var$6, nms_Item_fishRaw.$shiftedIndex);
        nms_EntityItem__init_0($var13, var$8, $var3, $var5, $var7, var$6);
        $var3 = $this.$field_4097_b.$posX - $this.$posX;
        $var5 = $this.$field_4097_b.$posY - $this.$posY;
        $var7 = $this.$field_4097_b.$posZ - $this.$posZ;
        $var9 = nms_MathHelper_sqrt_double($var3 * $var3 + $var5 * $var5 + $var7 * $var7);
        $var13.$motionX = $var3 * 0.1;
        $var13.$motionY = $var5 * 0.1 + nms_MathHelper_sqrt_double($var9) * 0.08;
        $var13.$motionZ = $var7 * 0.1;
        nms_World_entityJoinedWorld($this.$worldObj0, $var13);
        $var1 = 1;
    }
    if ($this.$field_4091_h)
        $var1 = 2;
    nms_Entity_setEntityDead($this);
    $this.$field_4097_b.$fishEntity = null;
    return $var1;
}
function nms_RenderFish() {
    nms_Render.call(this);
}
function nms_RenderFish__init_0() {
    var var_0 = new nms_RenderFish();
    nms_RenderFish__init_(var_0);
    return var_0;
}
function nms_RenderFish__init_($this) {
    nms_Render__init_($this);
}
function nms_RenderFish_a($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var var$7, $var12, $var20, $var21, $var22, $var24, $var26, $var28, $var32, $var30, $var40, $var34, $var36, $var38, $var42, $var44, $var46, $var49, $var50, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var50 = $thread.pop();$var49 = $thread.pop();$var46 = $thread.pop();$var44 = $thread.pop();$var42 = $thread.pop();$var38 = $thread.pop();$var36 = $thread.pop();$var34 = $thread.pop();$var40 = $thread.pop();$var30 = $thread.pop();$var32 = $thread.pop();$var28 = $thread.pop();$var26 = $thread.pop();$var24 = $thread.pop();$var22 = $thread.pop();$var21 = $thread.pop();$var20 = $thread.pop();$var12 = $thread.pop();var$7 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6
        = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2, $var4, $var6);
        olo_EaglerAdapterGL30_glEnable(32826);
        olo_EaglerAdapterGL30_glScalef(0.5, 0.5, 0.5);
        var$7 = $rt_s(490);
        $ptr = 1;
    case 1:
        nms_Render_loadTexture($this, var$7);
        if ($rt_suspending()) {
            break main;
        }
        nms_Tessellator_$callClinit();
        $var12 = nms_Tessellator_instance;
        olo_EaglerAdapterGL30_glRotatef(180.0 - $this.$renderManager.$field_1225_i, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef( -$this.$renderManager.$field_1224_j, 1.0, 0.0, 0.0);
        nms_Tessellator_startDrawingQuads($var12);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 1.0, 0.0);
        nms_Tessellator_addVertexWithUV($var12, (-0.5), (-0.5), 0.0, 0.0625, 0.1875);
        nms_Tessellator_addVertexWithUV($var12, 0.5, (-0.5), 0.0, 0.125, 0.1875);
        nms_Tessellator_addVertexWithUV($var12, 0.5, 0.5, 0.0, 0.125, 0.125);
        nms_Tessellator_addVertexWithUV($var12, (-0.5), 0.5, 0.0, 0.0625, 0.125);
        nms_Tessellator_draw($var12);
        olo_EaglerAdapterGL30_glDisable(32826);
        olo_EaglerAdapterGL30_glPopMatrix();
        if ($var1.$field_4097_b !== null) {
            $var20 = ($var1.$field_4097_b.$prevRotationYaw + ($var1.$field_4097_b.$rotationYaw - $var1.$field_4097_b.$prevRotationYaw) * $var9) * 3.1415927410125732 / 180.0;
            $var21 = ($var1.$field_4097_b.$prevRotationPitch + ($var1.$field_4097_b.$rotationPitch - $var1.$field_4097_b.$prevRotationPitch) * $var9) * 3.1415927410125732 / 180.0;
            $var22 = nms_MathHelper_sin($var20);
            $var24 = nms_MathHelper_cos($var20);
            $var26 = nms_MathHelper_sin($var21);
            $var28 = nms_MathHelper_cos($var21);
            $var32 = $var1.$field_4097_b.$prevPosX;
            $var30 = $var1.$field_4097_b.$posX - $var1.$field_4097_b.$prevPosX;
            $var40 = $var9;
            $var30 = $var32 + $var30 * $var40 - $var24 * 0.7 - $var22 * 0.5 * $var28;
            $var32 = $var1.$field_4097_b.$prevPosY + ($var1.$field_4097_b.$posY - $var1.$field_4097_b.$prevPosY) * $var40 - $var26 * 0.5;
            $var34 = $var1.$field_4097_b.$prevPosZ + ($var1.$field_4097_b.$posZ - $var1.$field_4097_b.$prevPosZ) * $var40 - $var22 * 0.7 + $var24 * 0.5 * $var28;
            if ($this.$renderManager.$options0.$thirdPersonView) {
                $var8 = ($var1.$field_4097_b.$field_734_o + ($var1.$field_4097_b.$field_735_n - $var1.$field_4097_b.$field_734_o) * $var9) * 3.1415927410125732 / 180.0;
                $var22 = nms_MathHelper_sin($var8);
                $var24 = nms_MathHelper_cos($var8);
                $var30 = $var1.$field_4097_b.$prevPosX + ($var1.$field_4097_b.$posX - $var1.$field_4097_b.$prevPosX) * $var40 - $var24 * 0.35 - $var22 * 0.85;
                $var32 = $var1.$field_4097_b.$prevPosY + ($var1.$field_4097_b.$posY - $var1.$field_4097_b.$prevPosY) * $var40 - 0.45;
                $var34 = $var1.$field_4097_b.$prevPosZ + ($var1.$field_4097_b.$posZ - $var1.$field_4097_b.$prevPosZ) * $var40 - $var22 * 0.35 + $var24 * 0.85;
            }
            $var36 = $var1.$prevPosX + ($var1.$posX - $var1.$prevPosX) * $var40;
            $var38 = $var1.$prevPosY + ($var1.$posY - $var1.$prevPosY) * $var40 + 0.25;
            $var40 = $var1.$prevPosZ + ($var1.$posZ - $var1.$prevPosZ) * $var40;
            $var42 = $var30 - $var36;
            $var44 = $var32 - $var38;
            $var46 = $var34 - $var40;
            olo_EaglerAdapterGL30_glDisable(3553);
            olo_EaglerAdapterGL30_glDisable(2896);
            nms_Tessellator_startDrawing($var12, 3);
            nms_Tessellator_setColorOpaque_I($var12, 0);
            $var49 = 0;
            while ($var49 <= 16) {
                $var50 = $var49 / 16.0;
                $var22 = $var50;
                nms_Tessellator_addVertex($var12, $var2 + $var42 * $var22, $var4 + $var44 * ($var50 * $var50 + $var50) * 0.5 + 0.25, $var6 + $var46 * $var22);
                $var49 = $var49 + 1 | 0;
            }
            nms_Tessellator_draw($var12);
            olo_EaglerAdapterGL30_glEnable(2896);
            olo_EaglerAdapterGL30_glEnable(3553);
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, var$7, $var12, $var20, $var21, $var22, $var24, $var26, $var28, $var32, $var30, $var40, $var34, $var36, $var38, $var42, $var44, $var46, $var49, $var50, $ptr);
}
function nms_RenderFish_doRender($this, $var1, $var2, $var4, $var6, $var8, $var9) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_RenderFish_a($this, $var1, $var2, $var4, $var6, $var8, $var9);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nlea_EaglerAdapterImpl2$12() {
    var a = this; jl_Object.call(a);
    a.$val$toLoad = null;
    a.$val$ret = null;
}
function nlea_EaglerAdapterImpl2$12_handleEvent($this, $evt) {
    var $pxls, var$3, var$4, $pxlsDat, $totalPixels, $pixels, var$8, $i, var$10, var$11;
    if (nlea_EaglerAdapterImpl2_access$1700() === null)
        nlea_EaglerAdapterImpl2_imageLoadCanvas = nlea_EaglerAdapterImpl2_doc.createElement("canvas");
    if (nlea_EaglerAdapterImpl2_access$1700().width < $this.$val$toLoad.width) {
        $evt = nlea_EaglerAdapterImpl2_access$1700();
        $pxls = $this.$val$toLoad.width;
        $evt.width = $pxls;
    }
    if (nlea_EaglerAdapterImpl2_access$1700().height < $this.$val$toLoad.height) {
        $evt = nlea_EaglerAdapterImpl2_access$1700();
        $pxls = $this.$val$toLoad.height;
        $evt.height = $pxls;
    }
    if (nlea_EaglerAdapterImpl2_access$1800() === null)
        nlea_EaglerAdapterImpl2_imageLoadContext = nlea_EaglerAdapterImpl2_access$1700().getContext("2d");
    $evt = nlea_EaglerAdapterImpl2_access$1800();
    var$3 = $this.$val$toLoad.width;
    var$4 = $this.$val$toLoad.height;
    $evt.clearRect(0.0, 0.0, var$3, var$4);
    $evt = nlea_EaglerAdapterImpl2_access$1800();
    $pxls = $this.$val$toLoad;
    var$3 = $this.$val$toLoad.width;
    var$4 = $this.$val$toLoad.height;
    $evt.drawImage($pxls, 0.0, 0.0, var$3, var$4);
    $evt = nlea_EaglerAdapterImpl2_access$1800();
    var$3 = $this.$val$toLoad.width;
    var$4 = $this.$val$toLoad.height;
    $pxlsDat = $evt.getImageData(0.0, 0.0, var$3, var$4);
    $pxls = $pxlsDat.data;
    $totalPixels = $rt_imul($pxlsDat.width, $pxlsDat.height);
    nlea_EaglerAdapterImpl2_access$1900($rt_str($this.$val$toLoad.src));
    if ($pxls.byteLength < ($totalPixels * 4 | 0)) {
        otpp_AsyncCallbackWrapper_complete($this.$val$ret, null);
        return;
    }
    $pixels = $rt_createIntArray($totalPixels);
    var$8 = $pixels.data;
    $i = 0;
    $totalPixels = var$8.length;
    while ($i < $totalPixels) {
        var$10 = $i * 4 | 0;
        var$8[$i] = $pxls[var$10] << 16 | $pxls[var$10 + 1 | 0] << 8 | $pxls[var$10 + 2 | 0] | $pxls[var$10 + 3 | 0] << 24;
        $i = $i + 1 | 0;
    }
    $evt = $this.$val$ret;
    $pxls = new nle_EaglerImage;
    var$10 = $pxlsDat.width;
    var$11 = $pxlsDat.height;
    if ($totalPixels == $rt_imul(var$10, var$11)) {
        $pxls.$w1 = var$10;
        $pxls.$h1 = var$11;
        $pxls.$alpha = 1;
        $pxls.$data = $pixels;
        otpp_AsyncCallbackWrapper_complete($evt, $pxls);
        return;
    }
    $evt = new jl_IllegalArgumentException;
    jl_Throwable__init_($evt, $rt_s(665));
    $rt_throw($evt);
}
function nlea_EaglerAdapterImpl2$12_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$12_handleEvent(var$0, var$1);
}
function nlea_EaglerAdapterImpl2$13() {
    var a = this; jl_Object.call(a);
    a.$val$toLoad0 = null;
    a.$val$ret0 = null;
}
function nlea_EaglerAdapterImpl2$13_handleEvent($this, $evt) {
    nlea_EaglerAdapterImpl2_access$1900($rt_str($this.$val$toLoad0.src));
    otpp_AsyncCallbackWrapper_complete($this.$val$ret0, null);
}
function nlea_EaglerAdapterImpl2$13_handleEvent$exported$0(var$0, var$1) {
    nlea_EaglerAdapterImpl2$13_handleEvent(var$0, var$1);
}
function otp_PlatformQueue() {
    jl_Object.call(this);
}
function otp_PlatformQueue_isEmpty$static($this) {
    return $this.length ? 0 : 1;
}
function otp_PlatformQueue_remove$static($this) {
    return $this.shift();
}
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_00 = null;
}
function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
    var var$1, var$2, var$3;
    var$1 = var$0.$_00;
    if (!jl_Object_isEmptyMonitor(var$1) && var$1.$monitor.$owner === null) {
        var$2 = var$1.$monitor;
        if (var$2.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static(var$2.$enteringThreads)) {
            var$1 = var$2.$enteringThreads;
            var$3 = otp_PlatformQueue_remove$static(var$1);
            if (var$1 === null)
                var$2.$enteringThreads = null;
            jl_Object$monitorEnterWait$lambda$_6_0_run(var$3);
        }
    }
}
function jn_IntBufferImpl() {
    jn_IntBuffer.call(this);
}
function jn_IntBufferImpl__init_0(var_0, var_1, var_2) {
    var var_3 = new jn_IntBufferImpl();
    jn_IntBufferImpl__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function jn_IntBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position = $position;
    $this.$limit = $limit;
}
function jn_IntBufferImpl_get($this) {
    var var$1, var$2;
    if ($this.$position < $this.$limit) {
        var$1 = $this.$position;
        $this.$position = var$1 + 1 | 0;
        return $this.$getElement0(var$1);
    }
    var$2 = new jn_BufferUnderflowException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function jn_IntBufferImpl_put($this, $b) {
    var var$2, var$3;
    if ($this.$readOnly3()) {
        var$2 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$2);
        $rt_throw(var$2);
    }
    if ($this.$position < $this.$limit) {
        var$3 = $this.$position;
        $this.$position = var$3 + 1 | 0;
        $this.$putElement0(var$3, $b);
        return $this;
    }
    var$2 = new jn_BufferOverflowException;
    jl_Throwable__init_0(var$2);
    $rt_throw(var$2);
}
function jn_IntBufferImpl_get0($this, $index) {
    var var$2, var$3;
    if ($index >= 0 && $index < $this.$limit)
        return jn_IntBufferOverArray_getElement($this, $index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(338)), $index), $rt_s(267)), $this.$limit), $rt_s(34))));
    $rt_throw(var$2);
}
function jn_IntBufferImpl_put0($this, $index, $b) {
    var var$3, var$4;
    if ($this.$readOnly3()) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Throwable__init_0(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit) {
        jn_IntBufferOverArray_putElement($this, $index, $b);
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_Throwable__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(338)), $index), $rt_s(267)), $this.$limit), $rt_s(34))));
    $rt_throw(var$4);
}
function jn_IntBufferImpl_isReadOnly($this) {
    return $this.$readOnly3();
}
function jn_IntBufferOverArray() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$readOnly2 = 0;
    a.$start5 = 0;
    a.$array4 = null;
}
function jn_IntBufferOverArray_getElement($this, $index) {
    return $this.$array4.data[$index + $this.$start5 | 0];
}
function jn_IntBufferOverArray_putElement($this, $index, $value) {
    $this.$array4.data[$index + $this.$start5 | 0] = $value;
}
function jn_IntBufferOverArray_readOnly($this) {
    return $this.$readOnly2;
}
function nms_ModelSpider() {
    var a = this; nms_ModelBase.call(a);
    a.$field_1255_a = null;
    a.$field_1254_b = null;
    a.$field_1253_c = null;
    a.$field_1252_d = null;
    a.$field_1251_e = null;
    a.$field_1250_f = null;
    a.$field_1249_g = null;
    a.$field_1248_h = null;
    a.$field_1247_i = null;
    a.$field_1246_j = null;
    a.$field_1245_m = null;
}
function nms_ModelSpider__init_0() {
    var var_0 = new nms_ModelSpider();
    nms_ModelSpider__init_(var_0);
    return var_0;
}
function nms_ModelSpider__init_($this) {
    nms_ModelBase__init_0($this);
    $this.$field_1255_a = nms_ModelRenderer__init_(32, 4);
    nms_ModelRenderer_addBox($this.$field_1255_a, (-4.0), (-4.0), (-8.0), 8, 8, 8, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1255_a, 0.0, 15.0, (-3.0));
    $this.$field_1254_b = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$field_1254_b, (-3.0), (-3.0), (-3.0), 6, 6, 6, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1254_b, 0.0, 15.0, 0.0);
    $this.$field_1253_c = nms_ModelRenderer__init_(0, 12);
    nms_ModelRenderer_addBox($this.$field_1253_c, (-5.0), (-4.0), (-6.0), 10, 8, 12, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1253_c, 0.0, 15.0, 9.0);
    $this.$field_1252_d = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1252_d, (-15.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1252_d, (-4.0), 15.0, 2.0);
    $this.$field_1251_e = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1251_e, (-1.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1251_e, 4.0, 15.0, 2.0);
    $this.$field_1250_f = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1250_f, (-15.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1250_f, (-4.0), 15.0, 1.0);
    $this.$field_1249_g = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1249_g, (-1.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1249_g, 4.0, 15.0, 1.0);
    $this.$field_1248_h = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1248_h, (-15.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1248_h, (-4.0), 15.0, 0.0);
    $this.$field_1247_i = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1247_i, (-1.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1247_i, 4.0, 15.0, 0.0);
    $this.$field_1246_j = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1246_j, (-15.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1246_j, (-4.0), 15.0, (-1.0));
    $this.$field_1245_m = nms_ModelRenderer__init_(18, 0);
    nms_ModelRenderer_addBox($this.$field_1245_m, (-1.0), (-1.0), (-1.0), 16, 2, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1245_m, 4.0, 15.0, (-1.0));
}
function nms_ModelSpider_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelSpider_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$field_1255_a, $var6);
    nms_ModelRenderer_render($this.$field_1254_b, $var6);
    nms_ModelRenderer_render($this.$field_1253_c, $var6);
    nms_ModelRenderer_render($this.$field_1252_d, $var6);
    nms_ModelRenderer_render($this.$field_1251_e, $var6);
    nms_ModelRenderer_render($this.$field_1250_f, $var6);
    nms_ModelRenderer_render($this.$field_1249_g, $var6);
    nms_ModelRenderer_render($this.$field_1248_h, $var6);
    nms_ModelRenderer_render($this.$field_1247_i, $var6);
    nms_ModelRenderer_render($this.$field_1246_j, $var6);
    nms_ModelRenderer_render($this.$field_1245_m, $var6);
}
function nms_ModelSpider_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17, var$15;
    $this.$field_1255_a.$rotateAngleY = $var4 / 57.2957763671875;
    $this.$field_1255_a.$rotateAngleX = $var5 / 57.2957763671875;
    $this.$field_1252_d.$rotateAngleZ = (-0.7853981852531433);
    $this.$field_1251_e.$rotateAngleZ = 0.7853981852531433;
    $this.$field_1250_f.$rotateAngleZ = (-0.5811946392059326);
    $this.$field_1249_g.$rotateAngleZ = 0.5811946392059326;
    $this.$field_1248_h.$rotateAngleZ = (-0.5811946392059326);
    $this.$field_1247_i.$rotateAngleZ = 0.5811946392059326;
    $this.$field_1246_j.$rotateAngleZ = (-0.7853981852531433);
    $this.$field_1245_m.$rotateAngleZ = 0.7853981852531433;
    $this.$field_1252_d.$rotateAngleY = 0.7853981852531433;
    $this.$field_1251_e.$rotateAngleY = (-0.7853981852531433);
    $this.$field_1250_f.$rotateAngleY = 0.39269909262657166;
    $this.$field_1249_g.$rotateAngleY = (-0.39269909262657166);
    $this.$field_1248_h.$rotateAngleY = (-0.39269909262657166);
    $this.$field_1247_i.$rotateAngleY = 0.39269909262657166;
    $this.$field_1246_j.$rotateAngleY = (-0.7853981852531433);
    $this.$field_1245_m.$rotateAngleY = 0.7853981852531433;
    $var1 = $var1 * 0.6661999821662903;
    $var5 = $var1 * 2.0;
    $var10 =  -(nms_MathHelper_cos($var5 + 0.0) * 0.4000000059604645) * $var2;
    $var11 =  -(nms_MathHelper_cos($var5 + 3.1415927410125732) * 0.4000000059604645) * $var2;
    $var12 =  -(nms_MathHelper_cos($var5 + 1.5707963705062866) * 0.4000000059604645) * $var2;
    $var13 =  -(nms_MathHelper_cos($var5 + 4.71238899230957) * 0.4000000059604645) * $var2;
    $var14 = jl_Math_abs(nms_MathHelper_sin($var1 + 0.0) * 0.4000000059604645) * $var2;
    $var15 = jl_Math_abs(nms_MathHelper_sin($var1 + 3.1415927410125732) * 0.4000000059604645) * $var2;
    $var16 = jl_Math_abs(nms_MathHelper_sin($var1 + 1.5707963705062866) * 0.4000000059604645) * $var2;
    $var17 = jl_Math_abs(nms_MathHelper_sin($var1 + 4.71238899230957) * 0.4000000059604645) * $var2;
    var$15 = $this.$field_1252_d;
    var$15.$rotateAngleY = var$15.$rotateAngleY + $var10;
    var$15 = $this.$field_1251_e;
    var$15.$rotateAngleY = var$15.$rotateAngleY +  -$var10;
    var$15 = $this.$field_1250_f;
    var$15.$rotateAngleY = var$15.$rotateAngleY + $var11;
    var$15 = $this.$field_1249_g;
    var$15.$rotateAngleY = var$15.$rotateAngleY +  -$var11;
    var$15 = $this.$field_1248_h;
    var$15.$rotateAngleY = var$15.$rotateAngleY + $var12;
    var$15 = $this.$field_1247_i;
    var$15.$rotateAngleY = var$15.$rotateAngleY +  -$var12;
    var$15 = $this.$field_1246_j;
    var$15.$rotateAngleY = var$15.$rotateAngleY + $var13;
    var$15 = $this.$field_1245_m;
    var$15.$rotateAngleY = var$15.$rotateAngleY +  -$var13;
    var$15 = $this.$field_1252_d;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ + $var14;
    var$15 = $this.$field_1251_e;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ +  -$var14;
    var$15 = $this.$field_1250_f;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ + $var15;
    var$15 = $this.$field_1249_g;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ +  -$var15;
    var$15 = $this.$field_1248_h;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ + $var16;
    var$15 = $this.$field_1247_i;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ +  -$var16;
    var$15 = $this.$field_1246_j;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ + $var17;
    var$15 = $this.$field_1245_m;
    var$15.$rotateAngleZ = var$15.$rotateAngleZ +  -$var17;
}
function nms_ModelCreeper() {
    var a = this; nms_ModelBase.call(a);
    a.$head0 = null;
    a.$unusedModel = null;
    a.$body0 = null;
    a.$leg10 = null;
    a.$leg20 = null;
    a.$leg30 = null;
    a.$leg40 = null;
}
function nms_ModelCreeper__init_0() {
    var var_0 = new nms_ModelCreeper();
    nms_ModelCreeper__init_(var_0);
    return var_0;
}
function nms_ModelCreeper__init_($this) {
    nms_ModelBase__init_0($this);
    $this.$head0 = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$head0, (-4.0), (-8.0), (-4.0), 8, 8, 8, 0.0);
    nms_ModelRenderer_setPosition($this.$head0, 0.0, 4.0, 0.0);
    $this.$unusedModel = nms_ModelRenderer__init_(32, 0);
    nms_ModelRenderer_addBox($this.$unusedModel, (-4.0), (-8.0), (-4.0), 8, 8, 8, 0.5);
    nms_ModelRenderer_setPosition($this.$unusedModel, 0.0, 4.0, 0.0);
    $this.$body0 = nms_ModelRenderer__init_(16, 16);
    nms_ModelRenderer_addBox($this.$body0, (-4.0), 0.0, (-2.0), 8, 12, 4, 0.0);
    nms_ModelRenderer_setPosition($this.$body0, 0.0, 4.0, 0.0);
    $this.$leg10 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg10, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.0);
    nms_ModelRenderer_setPosition($this.$leg10, (-2.0), 16.0, 4.0);
    $this.$leg20 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg20, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.0);
    nms_ModelRenderer_setPosition($this.$leg20, 2.0, 16.0, 4.0);
    $this.$leg30 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg30, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.0);
    nms_ModelRenderer_setPosition($this.$leg30, (-2.0), 16.0, (-4.0));
    $this.$leg40 = nms_ModelRenderer__init_(0, 16);
    nms_ModelRenderer_addBox($this.$leg40, (-2.0), 0.0, (-2.0), 4, 6, 4, 0.0);
    nms_ModelRenderer_setPosition($this.$leg40, 2.0, 16.0, (-4.0));
}
function nms_ModelCreeper_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_ModelCreeper_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$head0, $var6);
    nms_ModelRenderer_render($this.$body0, $var6);
    nms_ModelRenderer_render($this.$leg10, $var6);
    nms_ModelRenderer_render($this.$leg20, $var6);
    nms_ModelRenderer_render($this.$leg30, $var6);
    nms_ModelRenderer_render($this.$leg40, $var6);
}
function nms_ModelCreeper_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7;
    $this.$head0.$rotateAngleY = $var4 / 57.2957763671875;
    $this.$head0.$rotateAngleX = $var5 / 57.2957763671875;
    var$7 = $this.$leg10;
    $var1 = $var1 * 0.6661999821662903;
    var$7.$rotateAngleX = nms_MathHelper_cos($var1) * 1.399999976158142 * $var2;
    var$7 = $this.$leg20;
    $var3 = $var1 + 3.1415927410125732;
    var$7.$rotateAngleX = nms_MathHelper_cos($var3) * 1.399999976158142 * $var2;
    $this.$leg30.$rotateAngleX = nms_MathHelper_cos($var3) * 1.399999976158142 * $var2;
    $this.$leg40.$rotateAngleX = nms_MathHelper_cos($var1) * 1.399999976158142 * $var2;
}
function nms_ModelGhast() {
    var a = this; nms_ModelBase.call(a);
    a.$body1 = null;
    a.$tentacles = null;
}
function nms_ModelGhast__init_0() {
    var var_0 = new nms_ModelGhast();
    nms_ModelGhast__init_(var_0);
    return var_0;
}
function nms_ModelGhast__init_($this) {
    var $var2, $var3, $var4, $var6, $var5;
    nms_ModelBase__init_0($this);
    $this.$tentacles = $rt_createArray(nms_ModelRenderer, 9);
    $this.$body1 = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_func_921_a($this.$body1, (-8.0), (-8.0), (-8.0), 16, 16, 16);
    $var2 = $this.$body1;
    $var2.$offsetY = $var2.$offsetY + 8.0;
    $var2 = new ju_Random;
    $var3 = 0;
    while ($var3 < $this.$tentacles.data.length) {
        $this.$tentacles.data[$var3] = nms_ModelRenderer__init_(0, 0);
        $var4 = $var3 % 3 | 0;
        $var6 = $var3 / 3 | 0;
        $var4 = (($var4 - ($var6 % 2 | 0) * 0.5 + 0.25) / 2.0 * 2.0 - 1.0) * 5.0;
        $var5 = ($var6 / 2.0 * 2.0 - 1.0) * 5.0;
        $var6 = ju_Random_nextInt($var2, 7) + 8 | 0;
        nms_ModelRenderer_func_921_a($this.$tentacles.data[$var3], (-1.0), 0.0, (-1.0), 2, $var6, 2);
        $this.$tentacles.data[$var3].$offsetX = $var4;
        $this.$tentacles.data[$var3].$offsetZ = $var5;
        $this.$tentacles.data[$var3].$offsetY = 15.0;
        $var3 = $var3 + 1 | 0;
    }
}
function nms_ModelGhast_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = 0;
    $var2 = $var3 * 0.30000001192092896;
    while ($var7 < $this.$tentacles.data.length) {
        $this.$tentacles.data[$var7].$rotateAngleX = 0.20000000298023224 * nms_MathHelper_sin($var2 + $var7) + 0.4000000059604645;
        $var7 = $var7 + 1 | 0;
    }
}
function nms_ModelGhast_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    nms_ModelGhast_setRotationAngles($this, $var1, $var2, $var3, $var4, $var5, $var6);
    nms_ModelRenderer_render($this.$body1, $var6);
    $var7 = 0;
    while ($var7 < $this.$tentacles.data.length) {
        nms_ModelRenderer_render($this.$tentacles.data[$var7], $var6);
        $var7 = $var7 + 1 | 0;
    }
}
function nms_ModelMinecart() {
    nms_ModelBase.call(this);
    this.$field_1256_a = null;
}
function nms_ModelMinecart__init_0() {
    var var_0 = new nms_ModelMinecart();
    nms_ModelMinecart__init_(var_0);
    return var_0;
}
function nms_ModelMinecart__init_($this) {
    nms_ModelBase__init_0($this);
    $this.$field_1256_a = $rt_createArray(nms_ModelRenderer, 7);
    $this.$field_1256_a.data[0] = nms_ModelRenderer__init_(0, 10);
    $this.$field_1256_a.data[1] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1256_a.data[2] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1256_a.data[3] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1256_a.data[4] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1256_a.data[5] = nms_ModelRenderer__init_(44, 10);
    nms_ModelRenderer_addBox($this.$field_1256_a.data[0], (-10.0), (-8.0), (-1.0), 20, 16, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1256_a.data[0], 0.0, 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1256_a.data[5], (-9.0), (-7.0), (-1.0), 18, 14, 1, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1256_a.data[5], 0.0, 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1256_a.data[1], (-8.0), (-9.0), (-1.0), 16, 8, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1256_a.data[1], (-9.0), 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1256_a.data[2], (-8.0), (-9.0), (-1.0), 16, 8, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1256_a.data[2], 9.0, 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1256_a.data[3], (-8.0), (-9.0), (-1.0), 16, 8, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1256_a.data[3], 0.0, 4.0, (-7.0));
    nms_ModelRenderer_addBox($this.$field_1256_a.data[4], (-8.0), (-9.0), (-1.0), 16, 8, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1256_a.data[4], 0.0, 4.0, 7.0);
    $this.$field_1256_a.data[0].$rotateAngleX = 1.5707963705062866;
    $this.$field_1256_a.data[1].$rotateAngleY = 4.71238899230957;
    $this.$field_1256_a.data[2].$rotateAngleY = 1.5707963705062866;
    $this.$field_1256_a.data[3].$rotateAngleY = 3.1415927410125732;
    $this.$field_1256_a.data[5].$rotateAngleX = (-1.5707963705062866);
}
function nms_ModelMinecart_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $this.$field_1256_a.data[5].$offsetY = 4.0 - $var3;
    $var7 = 0;
    while ($var7 < 6) {
        nms_ModelRenderer_render($this.$field_1256_a.data[$var7], $var6);
        $var7 = $var7 + 1 | 0;
    }
}
function nms_ModelBoat() {
    nms_ModelBase.call(this);
    this.$field_1287_a = null;
}
function nms_ModelBoat__init_0() {
    var var_0 = new nms_ModelBoat();
    nms_ModelBoat__init_(var_0);
    return var_0;
}
function nms_ModelBoat__init_($this) {
    nms_ModelBase__init_0($this);
    $this.$field_1287_a = $rt_createArray(nms_ModelRenderer, 5);
    $this.$field_1287_a.data[0] = nms_ModelRenderer__init_(0, 8);
    $this.$field_1287_a.data[1] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1287_a.data[2] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1287_a.data[3] = nms_ModelRenderer__init_(0, 0);
    $this.$field_1287_a.data[4] = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$field_1287_a.data[0], (-12.0), (-8.0), (-3.0), 24, 16, 4, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1287_a.data[0], 0.0, 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1287_a.data[1], (-10.0), (-7.0), (-1.0), 20, 6, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1287_a.data[1], (-11.0), 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1287_a.data[2], (-10.0), (-7.0), (-1.0), 20, 6, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1287_a.data[2], 11.0, 4.0, 0.0);
    nms_ModelRenderer_addBox($this.$field_1287_a.data[3], (-10.0), (-7.0), (-1.0), 20, 6, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1287_a.data[3], 0.0, 4.0, (-9.0));
    nms_ModelRenderer_addBox($this.$field_1287_a.data[4], (-10.0), (-7.0), (-1.0), 20, 6, 2, 0.0);
    nms_ModelRenderer_setPosition($this.$field_1287_a.data[4], 0.0, 4.0, 9.0);
    $this.$field_1287_a.data[0].$rotateAngleX = 1.5707963705062866;
    $this.$field_1287_a.data[1].$rotateAngleY = 4.71238899230957;
    $this.$field_1287_a.data[2].$rotateAngleY = 1.5707963705062866;
    $this.$field_1287_a.data[3].$rotateAngleY = 3.1415927410125732;
}
function nms_ModelBoat_render($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7;
    $var7 = 0;
    while ($var7 < 5) {
        nms_ModelRenderer_render($this.$field_1287_a.data[$var7], $var6);
        $var7 = $var7 + 1 | 0;
    }
}
function jnc_CharsetDecoder() {
    var a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement = null;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$state = 0;
}
function jnc_CharsetDecoder_onMalformedInput($this, $newAction) {
    var var$2;
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$2, $rt_s(666));
    $rt_throw(var$2);
}
function jnc_CharsetDecoder_implOnMalformedInput($this, $newAction) {
    return;
}
function jnc_CharsetDecoder_onUnmappableCharacter($this, $newAction) {
    var var$2;
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Throwable__init_(var$2, $rt_s(666));
    $rt_throw(var$2);
}
function jnc_CharsetDecoder_implOnUnmappableCharacter($this, $newAction) {
    return;
}
function jnc_CharsetDecoder_decode0($this, $in, $out, $endOfInput) {
    var $result, $e, $$je;
    if (!($this.$state == 2 && !$endOfInput) && $this.$state != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = jnci_BufferedDecoder_decodeLoop($this, $in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_($e));
                } else {
                    throw $$e;
                }
            }
            if (jnc_CoderResult_isOverflow($result))
                return $result;
            if (jnc_CoderResult_isUnderflow($result)) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= jl_String_length($this.$replacement))
                        return jnc_CoderResult_OVERFLOW;
                    jn_Buffer_position0($in, $in.$position + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put1($out, $this.$replacement);
                }
                return $result;
            }
            if (jnc_CoderResult_isMalformed($result)) {
                if ($this.$malformedAction === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < jl_String_length($this.$replacement))
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement);
                }
                jn_Buffer_position0($in, $in.$position + jnc_CoderResult_length($result) | 0);
            } else if (jnc_CoderResult_isUnmappable($result)) {
                if ($this.$unmappableAction === jnc_CodingErrorAction_REPORT)
                    break;
                if ($this.$unmappableAction === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < jl_String_length($this.$replacement))
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement);
                }
                jn_Buffer_position0($in, $in.$position + jnc_CoderResult_length($result) | 0);
            }
        }
        return $result;
    }
    $in = new jl_IllegalStateException;
    jl_Throwable__init_0($in);
    $rt_throw($in);
}
function jnc_CharsetDecoder_flush($this, $out) {
    if ($this.$state != 3 && $this.$state != 2) {
        $out = new jl_IllegalStateException;
        jl_Throwable__init_0($out);
        $rt_throw($out);
    }
    $this.$state = 3;
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetDecoder_reset($this) {
    $this.$state = 0;
    return $this;
}
function jnc_CharsetDecoder_decode($this, $in) {
    var $out, $result;
    if ($this.$state && $this.$state != 3) {
        $in = new jl_IllegalStateException;
        jl_Throwable__init_0($in);
        $rt_throw($in);
    }
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        jnc_CharsetDecoder_reset($this);
    $out = jn_CharBuffer_allocate(jl_Math_max(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode0($this, $in, $out, 0);
        if (jnc_CoderResult_isUnderflow($result))
            break;
        if (jnc_CoderResult_isOverflow($result))
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetDecoder_decode0($this, $in, $out, 1);
    if (jnc_CoderResult_isError($in))
        jnc_CoderResult_throwException($in);
    while (!jnc_CoderResult_isUnderflow(jnc_CharsetDecoder_flush($this, $out))) {
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_Buffer_flip($out);
    return $out;
}
function jnc_CharsetDecoder_expand($this, $buffer) {
    var var$2, $result;
    var$2 = $buffer.$array3;
    $result = jn_CharBuffer_wrap(ju_Arrays_copyOf0(var$2, jl_Math_max(8, var$2.data.length * 2 | 0)));
    jn_Buffer_position0($result, $buffer.$position);
    return $result;
}
function jnc_CharsetDecoder_implFlush($this, $out) {
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetDecoder_implReset($this) {
    return;
}
function jl_Object$monitorEnterWait$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = null;
    a.$_2 = 0;
    a.$_3 = null;
}
function jl_Object$monitorEnterWait$lambda$_6_0_run(var$0) {
    var var$1, var$2, var$3, var$4;
    var$1 = var$0.$_0;
    var$2 = var$0.$_1;
    var$3 = var$0.$_2;
    var$4 = var$0.$_3;
    jl_Thread_setCurrentThread(var$1);
    var$2.$monitor.$owner = var$1;
    var$1 = var$2.$monitor;
    var$1.$count = var$1.$count + var$3 | 0;
    otpp_AsyncCallbackWrapper_complete(var$4, null);
}
function nlea_EaglerAdapterImpl2$ShaderGL() {
    jl_Object.call(this);
    this.$obj0 = null;
}
function nlea_EaglerAdapterImpl2$ProgramGL() {
    var a = this; jl_Object.call(a);
    a.$obj = null;
    a.$hashcode = 0;
}
function nlea_EaglerAdapterImpl2$UniformGL() {
    jl_Object.call(this);
    this.$obj2 = null;
}
function jl_ArithmeticException() {
    jl_RuntimeException.call(this);
}
function jl_ArithmeticException__init_0() {
    var var_0 = new jl_ArithmeticException();
    jl_ArithmeticException__init_(var_0);
    return var_0;
}
function jl_ArithmeticException__init_($this) {
    jl_Throwable__init_0($this);
}
function jnc_CharacterCodingException() {
    ji_IOException.call(this);
}
function jnc_CharacterCodingException__init_0() {
    var var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_(var_0);
    return var_0;
}
function jnc_CharacterCodingException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_AssertionError() {
    jl_Error.call(this);
}
function jl_AssertionError__init_1() {
    var var_0 = new jl_AssertionError();
    jl_AssertionError__init_(var_0);
    return var_0;
}
function jl_AssertionError__init_0(var_0, var_1) {
    var var_2 = new jl_AssertionError();
    jl_AssertionError__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_AssertionError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_AssertionError__init_2($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
}
function nms_RenderHelper() {
    jl_Object.call(this);
}
var nms_RenderHelper_field_1695_a = null;
function nms_RenderHelper__init_0() {
    var var_0 = new nms_RenderHelper();
    nms_RenderHelper__init_(var_0);
    return var_0;
}
function nms_RenderHelper__init_($this) {
    return;
}
function nms_RenderHelper_disableStandardItemLighting() {
    olo_EaglerAdapterGL30_glDisable(2896);
    olo_EaglerAdapterGL30_glDisable(16384);
    olo_EaglerAdapterGL30_glDisable(16385);
    olo_EaglerAdapterGL30_glDisable(2903);
}
function nms_RenderHelper_enableStandardItemLighting() {
    var $var3;
    olo_EaglerAdapterGL30_glEnable(2896);
    olo_EaglerAdapterGL30_glEnable(16384);
    olo_EaglerAdapterGL30_glEnable(16385);
    olo_EaglerAdapterGL30_glEnable(2903);
    $var3 = nms_Vec3D_normalize(nms_Vec3D_createVector(0.20000000298023224, 1.0, (-0.699999988079071)));
    nms_RenderHelper_func_1157_a($var3.$xCoord, $var3.$yCoord, $var3.$zCoord, 0.0);
    nms_RenderHelper_func_1156_a(0.6000000238418579, 0.6000000238418579, 0.6000000238418579, 1.0);
    nms_RenderHelper_func_1156_a(0.0, 0.0, 0.0, 1.0);
    nms_RenderHelper_func_1156_a(0.0, 0.0, 0.0, 1.0);
    $var3 = nms_Vec3D_normalize(nms_Vec3D_createVector((-0.20000000298023224), 1.0, 0.699999988079071));
    nms_RenderHelper_func_1157_a($var3.$xCoord, $var3.$yCoord, $var3.$zCoord, 0.0);
    nms_RenderHelper_func_1156_a(0.6000000238418579, 0.6000000238418579, 0.6000000238418579, 1.0);
    nms_RenderHelper_func_1156_a(0.0, 0.0, 0.0, 1.0);
    nms_RenderHelper_func_1156_a(0.0, 0.0, 0.0, 1.0);
    nms_RenderHelper_func_1156_a(0.4000000059604645, 0.4000000059604645, 0.4000000059604645, 1.0);
}
function nms_RenderHelper_func_1157_a($var0, $var2, $var4, $var6) {
    return nms_RenderHelper_func_1156_a($var0, $var2, $var4, $var6);
}
function nms_RenderHelper_func_1156_a($var0, $var1, $var2, $var3) {
    jn_FloatBuffer_clear(nms_RenderHelper_field_1695_a);
    jn_FloatBufferImpl_put(jn_FloatBufferImpl_put(jn_FloatBufferImpl_put(jn_FloatBufferImpl_put(nms_RenderHelper_field_1695_a, $var0), $var1), $var2), $var3);
    jn_FloatBuffer_flip(nms_RenderHelper_field_1695_a);
    return nms_RenderHelper_field_1695_a;
}
function nms_RenderHelper__clinit_() {
    nms_RenderHelper_field_1695_a = nms_GLAllocation_createDirectFloatBuffer(16);
}
function nms_GuiChat() {
    var a = this; nms_GuiScreen.call(a);
    a.$message1 = null;
    a.$updateCounter3 = 0;
}
function nms_GuiChat__init_0() {
    var var_0 = new nms_GuiChat();
    nms_GuiChat__init_(var_0);
    return var_0;
}
function nms_GuiChat__init_($this) {
    nms_GuiScreen__init_($this);
    $this.$message1 = $rt_s(17);
    $this.$updateCounter3 = 0;
}
function nms_ChatLine() {
    var a = this; jl_Object.call(a);
    a.$message0 = null;
    a.$updateCounter1 = 0;
}
function ju_HashMap$AbstractMapIterator() {
    var a = this; jl_Object.call(a);
    a.$position1 = 0;
    a.$expectedModCount = 0;
    a.$futureEntry = null;
    a.$currentEntry = null;
    a.$prevEntry = null;
    a.$associatedMap = null;
}
function ju_HashMap$AbstractMapIterator__init_0(var_0) {
    var var_1 = new ju_HashMap$AbstractMapIterator();
    ju_HashMap$AbstractMapIterator__init_(var_1, var_0);
    return var_1;
}
function ju_HashMap$AbstractMapIterator__init_($this, $hm) {
    $this.$associatedMap = $hm;
    $this.$expectedModCount = $hm.$modCount1;
    $this.$futureEntry = null;
}
function ju_HashMap$AbstractMapIterator_hasNext($this) {
    if ($this.$futureEntry !== null)
        return 1;
    while ($this.$position1 < $this.$associatedMap.$elementData.data.length) {
        if ($this.$associatedMap.$elementData.data[$this.$position1] !== null)
            return 1;
        $this.$position1 = $this.$position1 + 1 | 0;
    }
    return 0;
}
function ju_HashMap$AbstractMapIterator_checkConcurrentMod($this) {
    var var$1;
    if ($this.$expectedModCount == $this.$associatedMap.$modCount1)
        return;
    var$1 = new ju_ConcurrentModificationException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function ju_HashMap$AbstractMapIterator_makeNext($this) {
    var var$1, var$2, var$3;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if (!ju_HashMap$AbstractMapIterator_hasNext($this)) {
        var$1 = new ju_NoSuchElementException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    if ($this.$futureEntry === null) {
        var$2 = $this.$associatedMap.$elementData.data;
        var$3 = $this.$position1;
        $this.$position1 = var$3 + 1 | 0;
        $this.$currentEntry = var$2[var$3];
        $this.$futureEntry = $this.$currentEntry.$next2;
        $this.$prevEntry = null;
    } else {
        if ($this.$currentEntry !== null)
            $this.$prevEntry = $this.$currentEntry;
        $this.$currentEntry = $this.$futureEntry;
        $this.$futureEntry = $this.$futureEntry.$next2;
    }
}
function ju_HashMap$AbstractMapIterator_remove($this) {
    var var$1, $index;
    ju_HashMap$AbstractMapIterator_checkConcurrentMod($this);
    if ($this.$currentEntry === null) {
        var$1 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    if ($this.$prevEntry !== null)
        $this.$prevEntry.$next2 = $this.$currentEntry.$next2;
    else {
        $index = $this.$currentEntry.$origKeyHash & ($this.$associatedMap.$elementData.data.length - 1 | 0);
        $this.$associatedMap.$elementData.data[$index] = $this.$associatedMap.$elementData.data[$index].$next2;
    }
    $this.$currentEntry = null;
    $this.$expectedModCount = $this.$expectedModCount + 1 | 0;
    var$1 = $this.$associatedMap;
    var$1.$modCount1 = var$1.$modCount1 + 1 | 0;
    var$1 = $this.$associatedMap;
    var$1.$elementCount = var$1.$elementCount - 1 | 0;
}
function ju_HashMap$ValueIterator() {
    ju_HashMap$AbstractMapIterator.call(this);
}
function ju_HashMap$ValueIterator_next($this) {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry.$value1;
}
function jl_UnsupportedOperationException() {
    jl_RuntimeException.call(this);
}
function jl_UnsupportedOperationException__init_0() {
    var var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_(var_0);
    return var_0;
}
function jl_UnsupportedOperationException__init_($this) {
    jl_Throwable__init_0($this);
}
function jn_ReadOnlyBufferException() {
    jl_UnsupportedOperationException.call(this);
}
function jn_ReadOnlyBufferException__init_0() {
    var var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_(var_0);
    return var_0;
}
function jn_ReadOnlyBufferException__init_($this) {
    jl_Throwable__init_0($this);
}
function jn_BufferOverflowException() {
    jl_RuntimeException.call(this);
}
function jn_BufferOverflowException__init_0() {
    var var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_(var_0);
    return var_0;
}
function jn_BufferOverflowException__init_($this) {
    jl_Throwable__init_0($this);
}
function jn_BufferUnderflowException() {
    jl_RuntimeException.call(this);
}
function jn_BufferUnderflowException__init_0() {
    var var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_(var_0);
    return var_0;
}
function jn_BufferUnderflowException__init_($this) {
    jl_Throwable__init_0($this);
}
function nms_GuiIngameMenu() {
    var a = this; nms_GuiScreen.call(a);
    a.$updateCounter20 = 0;
    a.$updateCounter4 = 0;
}
function nms_GuiIngameMenu__init_0() {
    var var_0 = new nms_GuiIngameMenu();
    nms_GuiIngameMenu__init_(var_0);
    return var_0;
}
function nms_GuiIngameMenu__init_($this) {
    nms_GuiScreen__init_($this);
    $this.$updateCounter20 = 0;
    $this.$updateCounter4 = 0;
}
function nms_GuiIngameMenu_initGui($this) {
    $this.$updateCounter20 = 0;
    ju_ArrayList_clear($this.$controlList);
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(1, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 48 | 0, $rt_s(667)));
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(4, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 24 | 0, $rt_s(668)));
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(0, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 96 | 0, $rt_s(521)));
}
function nms_GuiIngameMenu_actionPerformed($this, $var1) {
    var var$2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!$var1.$id2)
            nmc_Minecraft_displayGuiScreen($this.$mc5, nms_GuiOptions__init_($this, $this.$mc5.$gameSettings));
        if ($var1.$id2 != 1) {
            if ($var1.$id2 == 4) {
                nmc_Minecraft_displayGuiScreen($this.$mc5, null);
                nmc_Minecraft_func_6259_e($this.$mc5);
            }
            return;
        }
        var$2 = $this.$mc5;
        var$3 = null;
        $ptr = 1;
    case 1:
        nmc_Minecraft_func_6261_a(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        nmc_Minecraft_displayGuiScreen($this.$mc5, nms_GuiMainMenu__init_0());
        if ($var1.$id2 == 4) {
            nmc_Minecraft_displayGuiScreen($this.$mc5, null);
            nmc_Minecraft_func_6259_e($this.$mc5);
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $ptr);
}
function nms_GuiIngameMenu_updateScreen($this) {
    $this.$updateCounter4 = $this.$updateCounter4 + 1 | 0;
}
function nms_GuiIngameMenu_drawScreen($this, $var1, $var2, $var3) {
    var var$4, $var4, $var6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        var$4 = $this.$mc5.$theWorld;
        $var4 = $this.$updateCounter20;
        $this.$updateCounter20 = $var4 + 1 | 0;
        $ptr = 2;
    case 2:
        $tmp = nms_World_func_650_a(var$4, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $var4 = $tmp;
        $var4 = $var4 ? 0 : 1;
        if (!(!$var4 && $this.$updateCounter4 >= 20)) {
            $var6 = 255.0 * (nms_MathHelper_sin((($this.$updateCounter4 % 10 | 0) + $var3) / 10.0 * 3.1415927410125732 * 2.0) * 0.20000000298023224 + 0.800000011920929) | 0;
            nms_FontRenderer_drawStringWithShadow($this.$fontRenderer0, $rt_s(669), 8, $this.$height0 - 16 | 0, $var6 << 16 | $var6 << 8 | $var6);
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $rt_s(670), $this.$width / 2 | 0, 40, 16777215);
        $ptr = 3;
    case 3:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, $var4, $var6, $ptr);
}
function nms_ClippingHelper() {
    var a = this; jl_Object.call(a);
    a.$field_1688_a = null;
    a.$field_1687_b = null;
    a.$field_1690_c = null;
    a.$field_1689_d = null;
}
function nms_ClippingHelper__init_0() {
    var var_0 = new nms_ClippingHelper();
    nms_ClippingHelper__init_(var_0);
    return var_0;
}
function nms_ClippingHelper__init_($this) {
    $this.$field_1688_a = $rt_createFloatMultiArray([16, 16]);
    $this.$field_1687_b = $rt_createFloatArray(16);
    $this.$field_1690_c = $rt_createFloatArray(16);
    $this.$field_1689_d = $rt_createFloatArray(16);
}
function nms_ClippingHelper_func_1152_a($this, $var1, $var3, $var5, $var7, $var9, $var11) {
    var $var13;
    $var13 = 0;
    while ($var13 < 6) {
        if ($this.$field_1688_a.data[$var13].data[0] * $var1 + $this.$field_1688_a.data[$var13].data[1] * $var3 + $this.$field_1688_a.data[$var13].data[2] * $var5 + $this.$field_1688_a.data[$var13].data[3] <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var7 + $this.$field_1688_a.data[$var13].data[1] * $var3 + $this.$field_1688_a.data[$var13].data[2] * $var5 + $this.$field_1688_a.data[$var13].data[3] <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var1 + $this.$field_1688_a.data[$var13].data[1] *
        $var9 + $this.$field_1688_a.data[$var13].data[2] * $var5 + $this.$field_1688_a.data[$var13].data[3] <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var7 + $this.$field_1688_a.data[$var13].data[1] * $var9 + $this.$field_1688_a.data[$var13].data[2] * $var5 + $this.$field_1688_a.data[$var13].data[3] <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var1 + $this.$field_1688_a.data[$var13].data[1] * $var3 + $this.$field_1688_a.data[$var13].data[2] * $var11 + $this.$field_1688_a.data[$var13].data[3]
        <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var7 + $this.$field_1688_a.data[$var13].data[1] * $var3 + $this.$field_1688_a.data[$var13].data[2] * $var11 + $this.$field_1688_a.data[$var13].data[3] <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var1 + $this.$field_1688_a.data[$var13].data[1] * $var9 + $this.$field_1688_a.data[$var13].data[2] * $var11 + $this.$field_1688_a.data[$var13].data[3] <= 0.0 && $this.$field_1688_a.data[$var13].data[0] * $var7 + $this.$field_1688_a.data[$var13].data[1]
        * $var9 + $this.$field_1688_a.data[$var13].data[2] * $var11 + $this.$field_1688_a.data[$var13].data[3] <= 0.0)
            return 0;
        $var13 = $var13 + 1 | 0;
    }
    return 1;
}
function nms_ClippingHelperImplementation() {
    var a = this; nms_ClippingHelper.call(a);
    a.$field_1693_f = null;
    a.$field_1692_g = null;
    a.$field_1691_h = null;
}
var nms_ClippingHelperImplementation_field_1694_e = null;
function nms_ClippingHelperImplementation__init_0() {
    var var_0 = new nms_ClippingHelperImplementation();
    nms_ClippingHelperImplementation__init_(var_0);
    return var_0;
}
function nms_ClippingHelperImplementation__init_($this) {
    nms_ClippingHelper__init_($this);
    $this.$field_1693_f = nms_GLAllocation_createDirectFloatBuffer(16);
    $this.$field_1692_g = nms_GLAllocation_createDirectFloatBuffer(16);
    $this.$field_1691_h = nms_GLAllocation_createDirectFloatBuffer(16);
}
function nms_ClippingHelperImplementation_func_1155_a() {
    nms_ClippingHelperImplementation_func_1153_b(nms_ClippingHelperImplementation_field_1694_e);
    return nms_ClippingHelperImplementation_field_1694_e;
}
function nms_ClippingHelperImplementation_func_1154_a($this, $var1, $var2) {
    var $var3, var$4;
    $var1 = $var1.data;
    $var3 = nms_MathHelper_sqrt_float($var1[$var2].data[0] * $var1[$var2].data[0] + $var1[$var2].data[1] * $var1[$var2].data[1] + $var1[$var2].data[2] * $var1[$var2].data[2]);
    var$4 = $var1[$var2].data;
    var$4[0] = var$4[0] / $var3;
    var$4 = $var1[$var2].data;
    var$4[1] = var$4[1] / $var3;
    var$4 = $var1[$var2].data;
    var$4[2] = var$4[2] / $var3;
    $var1 = $var1[$var2].data;
    $var1[3] = $var1[3] / $var3;
}
function nms_ClippingHelperImplementation_func_1153_b($this) {
    jn_FloatBuffer_clear($this.$field_1693_f);
    jn_FloatBuffer_clear($this.$field_1692_g);
    jn_FloatBuffer_clear($this.$field_1691_h);
    olo_EaglerAdapterGL30_glGetFloat(2983, $this.$field_1693_f);
    olo_EaglerAdapterGL30_glGetFloat(2982, $this.$field_1692_g);
    jn_FloatBuffer_limit0(jn_FloatBuffer_flip($this.$field_1693_f), 16);
    jn_FloatBuffer_get0($this.$field_1693_f, $this.$field_1687_b);
    jn_FloatBuffer_limit0(jn_FloatBuffer_flip($this.$field_1692_g), 16);
    jn_FloatBuffer_get0($this.$field_1692_g, $this.$field_1690_c);
    $this.$field_1689_d.data[0] = $this.$field_1690_c.data[0] * $this.$field_1687_b.data[0] + $this.$field_1690_c.data[1] * $this.$field_1687_b.data[4] + $this.$field_1690_c.data[2] * $this.$field_1687_b.data[8] + $this.$field_1690_c.data[3] * $this.$field_1687_b.data[12];
    $this.$field_1689_d.data[1] = $this.$field_1690_c.data[0] * $this.$field_1687_b.data[1] + $this.$field_1690_c.data[1] * $this.$field_1687_b.data[5] + $this.$field_1690_c.data[2] * $this.$field_1687_b.data[9] + $this.$field_1690_c.data[3] * $this.$field_1687_b.data[13];
    $this.$field_1689_d.data[2] = $this.$field_1690_c.data[0] * $this.$field_1687_b.data[2] + $this.$field_1690_c.data[1] * $this.$field_1687_b.data[6] + $this.$field_1690_c.data[2] * $this.$field_1687_b.data[10] + $this.$field_1690_c.data[3] * $this.$field_1687_b.data[14];
    $this.$field_1689_d.data[3] = $this.$field_1690_c.data[0] * $this.$field_1687_b.data[3] + $this.$field_1690_c.data[1] * $this.$field_1687_b.data[7] + $this.$field_1690_c.data[2] * $this.$field_1687_b.data[11] + $this.$field_1690_c.data[3] * $this.$field_1687_b.data[15];
    $this.$field_1689_d.data[4] = $this.$field_1690_c.data[4] * $this.$field_1687_b.data[0] + $this.$field_1690_c.data[5] * $this.$field_1687_b.data[4] + $this.$field_1690_c.data[6] * $this.$field_1687_b.data[8] + $this.$field_1690_c.data[7] * $this.$field_1687_b.data[12];
    $this.$field_1689_d.data[5] = $this.$field_1690_c.data[4] * $this.$field_1687_b.data[1] + $this.$field_1690_c.data[5] * $this.$field_1687_b.data[5] + $this.$field_1690_c.data[6] * $this.$field_1687_b.data[9] + $this.$field_1690_c.data[7] * $this.$field_1687_b.data[13];
    $this.$field_1689_d.data[6] = $this.$field_1690_c.data[4] * $this.$field_1687_b.data[2] + $this.$field_1690_c.data[5] * $this.$field_1687_b.data[6] + $this.$field_1690_c.data[6] * $this.$field_1687_b.data[10] + $this.$field_1690_c.data[7] * $this.$field_1687_b.data[14];
    $this.$field_1689_d.data[7] = $this.$field_1690_c.data[4] * $this.$field_1687_b.data[3] + $this.$field_1690_c.data[5] * $this.$field_1687_b.data[7] + $this.$field_1690_c.data[6] * $this.$field_1687_b.data[11] + $this.$field_1690_c.data[7] * $this.$field_1687_b.data[15];
    $this.$field_1689_d.data[8] = $this.$field_1690_c.data[8] * $this.$field_1687_b.data[0] + $this.$field_1690_c.data[9] * $this.$field_1687_b.data[4] + $this.$field_1690_c.data[10] * $this.$field_1687_b.data[8] + $this.$field_1690_c.data[11] * $this.$field_1687_b.data[12];
    $this.$field_1689_d.data[9] = $this.$field_1690_c.data[8] * $this.$field_1687_b.data[1] + $this.$field_1690_c.data[9] * $this.$field_1687_b.data[5] + $this.$field_1690_c.data[10] * $this.$field_1687_b.data[9] + $this.$field_1690_c.data[11] * $this.$field_1687_b.data[13];
    $this.$field_1689_d.data[10] = $this.$field_1690_c.data[8] * $this.$field_1687_b.data[2] + $this.$field_1690_c.data[9] * $this.$field_1687_b.data[6] + $this.$field_1690_c.data[10] * $this.$field_1687_b.data[10] + $this.$field_1690_c.data[11] * $this.$field_1687_b.data[14];
    $this.$field_1689_d.data[11] = $this.$field_1690_c.data[8] * $this.$field_1687_b.data[3] + $this.$field_1690_c.data[9] * $this.$field_1687_b.data[7] + $this.$field_1690_c.data[10] * $this.$field_1687_b.data[11] + $this.$field_1690_c.data[11] * $this.$field_1687_b.data[15];
    $this.$field_1689_d.data[12] = $this.$field_1690_c.data[12] * $this.$field_1687_b.data[0] + $this.$field_1690_c.data[13] * $this.$field_1687_b.data[4] + $this.$field_1690_c.data[14] * $this.$field_1687_b.data[8] + $this.$field_1690_c.data[15] * $this.$field_1687_b.data[12];
    $this.$field_1689_d.data[13] = $this.$field_1690_c.data[12] * $this.$field_1687_b.data[1] + $this.$field_1690_c.data[13] * $this.$field_1687_b.data[5] + $this.$field_1690_c.data[14] * $this.$field_1687_b.data[9] + $this.$field_1690_c.data[15] * $this.$field_1687_b.data[13];
    $this.$field_1689_d.data[14] = $this.$field_1690_c.data[12] * $this.$field_1687_b.data[2] + $this.$field_1690_c.data[13] * $this.$field_1687_b.data[6] + $this.$field_1690_c.data[14] * $this.$field_1687_b.data[10] + $this.$field_1690_c.data[15] * $this.$field_1687_b.data[14];
    $this.$field_1689_d.data[15] = $this.$field_1690_c.data[12] * $this.$field_1687_b.data[3] + $this.$field_1690_c.data[13] * $this.$field_1687_b.data[7] + $this.$field_1690_c.data[14] * $this.$field_1687_b.data[11] + $this.$field_1690_c.data[15] * $this.$field_1687_b.data[15];
    $this.$field_1688_a.data[0].data[0] = $this.$field_1689_d.data[3] - $this.$field_1689_d.data[0];
    $this.$field_1688_a.data[0].data[1] = $this.$field_1689_d.data[7] - $this.$field_1689_d.data[4];
    $this.$field_1688_a.data[0].data[2] = $this.$field_1689_d.data[11] - $this.$field_1689_d.data[8];
    $this.$field_1688_a.data[0].data[3] = $this.$field_1689_d.data[15] - $this.$field_1689_d.data[12];
    nms_ClippingHelperImplementation_func_1154_a($this, $this.$field_1688_a, 0);
    $this.$field_1688_a.data[1].data[0] = $this.$field_1689_d.data[3] + $this.$field_1689_d.data[0];
    $this.$field_1688_a.data[1].data[1] = $this.$field_1689_d.data[7] + $this.$field_1689_d.data[4];
    $this.$field_1688_a.data[1].data[2] = $this.$field_1689_d.data[11] + $this.$field_1689_d.data[8];
    $this.$field_1688_a.data[1].data[3] = $this.$field_1689_d.data[15] + $this.$field_1689_d.data[12];
    nms_ClippingHelperImplementation_func_1154_a($this, $this.$field_1688_a, 1);
    $this.$field_1688_a.data[2].data[0] = $this.$field_1689_d.data[3] + $this.$field_1689_d.data[1];
    $this.$field_1688_a.data[2].data[1] = $this.$field_1689_d.data[7] + $this.$field_1689_d.data[5];
    $this.$field_1688_a.data[2].data[2] = $this.$field_1689_d.data[11] + $this.$field_1689_d.data[9];
    $this.$field_1688_a.data[2].data[3] = $this.$field_1689_d.data[15] + $this.$field_1689_d.data[13];
    nms_ClippingHelperImplementation_func_1154_a($this, $this.$field_1688_a, 2);
    $this.$field_1688_a.data[3].data[0] = $this.$field_1689_d.data[3] - $this.$field_1689_d.data[1];
    $this.$field_1688_a.data[3].data[1] = $this.$field_1689_d.data[7] - $this.$field_1689_d.data[5];
    $this.$field_1688_a.data[3].data[2] = $this.$field_1689_d.data[11] - $this.$field_1689_d.data[9];
    $this.$field_1688_a.data[3].data[3] = $this.$field_1689_d.data[15] - $this.$field_1689_d.data[13];
    nms_ClippingHelperImplementation_func_1154_a($this, $this.$field_1688_a, 3);
    $this.$field_1688_a.data[4].data[0] = $this.$field_1689_d.data[3] - $this.$field_1689_d.data[2];
    $this.$field_1688_a.data[4].data[1] = $this.$field_1689_d.data[7] - $this.$field_1689_d.data[6];
    $this.$field_1688_a.data[4].data[2] = $this.$field_1689_d.data[11] - $this.$field_1689_d.data[10];
    $this.$field_1688_a.data[4].data[3] = $this.$field_1689_d.data[15] - $this.$field_1689_d.data[14];
    nms_ClippingHelperImplementation_func_1154_a($this, $this.$field_1688_a, 4);
    $this.$field_1688_a.data[5].data[0] = $this.$field_1689_d.data[3] + $this.$field_1689_d.data[2];
    $this.$field_1688_a.data[5].data[1] = $this.$field_1689_d.data[7] + $this.$field_1689_d.data[6];
    $this.$field_1688_a.data[5].data[2] = $this.$field_1689_d.data[11] + $this.$field_1689_d.data[10];
    $this.$field_1688_a.data[5].data[3] = $this.$field_1689_d.data[15] + $this.$field_1689_d.data[14];
    nms_ClippingHelperImplementation_func_1154_a($this, $this.$field_1688_a, 5);
}
function nms_ClippingHelperImplementation__clinit_() {
    nms_ClippingHelperImplementation_field_1694_e = nms_ClippingHelperImplementation__init_0();
}
function nms_ICamera() {
}
function nms_Frustrum() {
    var a = this; jl_Object.call(a);
    a.$field_593_a = null;
    a.$field_592_b = 0.0;
    a.$field_595_c = 0.0;
    a.$field_594_d = 0.0;
}
function nms_Frustrum__init_0() {
    var var_0 = new nms_Frustrum();
    nms_Frustrum__init_(var_0);
    return var_0;
}
function nms_Frustrum__init_($this) {
    $this.$field_593_a = nms_ClippingHelperImplementation_func_1155_a();
}
function nms_Frustrum_func_343_a($this, $var1, $var3, $var5) {
    $this.$field_592_b = $var1;
    $this.$field_595_c = $var3;
    $this.$field_594_d = $var5;
}
function nms_Frustrum_func_344_a($this, $var1, $var3, $var5, $var7, $var9, $var11) {
    return nms_ClippingHelper_func_1152_a($this.$field_593_a, $var1 - $this.$field_592_b, $var3 - $this.$field_595_c, $var5 - $this.$field_594_d, $var7 - $this.$field_592_b, $var9 - $this.$field_595_c, $var11 - $this.$field_594_d);
}
function nms_Frustrum_func_342_a($this, $var1) {
    return nms_Frustrum_func_344_a($this, $var1.$minX, $var1.$minY0, $var1.$minZ0, $var1.$maxX0, $var1.$maxY0, $var1.$maxZ0);
}
function nms_EntityFX() {
    var a = this; nms_Entity.call(a);
    a.$field_670_b = 0;
    a.$field_669_c = 0.0;
    a.$field_668_d = 0.0;
    a.$e0 = 0;
    a.$field_666_f = 0;
    a.$field_665_g = 0.0;
    a.$field_664_h = 0.0;
    a.$field_663_i = 0.0;
    a.$field_662_j = 0.0;
    a.$field_661_k = 0.0;
}
var nms_EntityFX_field_660_l = 0.0;
var nms_EntityFX_field_659_m = 0.0;
var nms_EntityFX_field_658_n = 0.0;
function nms_EntityFX__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new nms_EntityFX();
    nms_EntityFX__init_(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12) {
    var $var14, $var15;
    nms_Entity__init_($this, $var1);
    $this.$e0 = 0;
    $this.$field_666_f = 0;
    nms_Entity_setSize($this, 0.20000000298023224, 0.20000000298023224);
    $this.$yOffset = $this.$height / 2.0;
    nms_Entity_setPosition($this, $var2, $var4, $var6);
    $this.$field_661_k = 1.0;
    $this.$field_662_j = 1.0;
    $this.$field_663_i = 1.0;
    $this.$motionX = $var8 + (jl_Math_random() * 2.0 - 1.0) * 0.4000000059604645;
    $this.$motionY = $var10 + (jl_Math_random() * 2.0 - 1.0) * 0.4000000059604645;
    $this.$motionZ = $var12 + (jl_Math_random() * 2.0 - 1.0) * 0.4000000059604645;
    $var14 = (jl_Math_random() + jl_Math_random() + 1.0) * 0.15000000596046448;
    $var15 = nms_MathHelper_sqrt_double($this.$motionX * $this.$motionX + $this.$motionY * $this.$motionY + $this.$motionZ * $this.$motionZ);
    $var2 = $this.$motionX;
    $var4 = $var15;
    $var2 = $var2 / $var4;
    $var6 = $var14;
    $this.$motionX = $var2 * $var6 * 0.4000000059604645;
    $this.$motionY = $this.$motionY / $var4 * $var6 * 0.4000000059604645 + 0.10000000149011612;
    $this.$motionZ = $this.$motionZ / $var4 * $var6 * 0.4000000059604645;
    $this.$field_669_c = ju_Random_nextFloat($this.$rand2) * 3.0;
    $this.$field_668_d = ju_Random_nextFloat($this.$rand2) * 3.0;
    $this.$field_665_g = (ju_Random_nextFloat($this.$rand2) * 0.5 + 0.5) * 2.0;
    $this.$field_666_f = 4.0 / (ju_Random_nextFloat($this.$rand2) * 0.8999999761581421 + 0.10000000149011612) | 0;
    $this.$e0 = 0;
    $this.$entityWalks = 0;
}
function nms_EntityFX_func_407_b($this, $var1) {
    var var$2, var$3;
    var$2 = $this.$motionX;
    var$3 = $var1;
    $this.$motionX = var$2 * var$3;
    $this.$motionY = ($this.$motionY - 0.10000000149011612) * var$3 + 0.10000000149011612;
    $this.$motionZ = $this.$motionZ * var$3;
    return $this;
}
function nms_EntityFX_func_405_d($this, $var1) {
    var var$2;
    var$2 = 0.20000000298023224 * $var1;
    nms_Entity_setSize($this, var$2, var$2);
    $this.$field_665_g = $this.$field_665_g * $var1;
    return $this;
}
function nms_EntityFX_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    var$1 = $this.$e0;
    $this.$e0 = var$1 + 1 | 0;
    if (var$1 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
    $this.$motionY = $this.$motionY - 0.04 * $this.$field_664_h;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.9800000190734863;
    $this.$motionY = $this.$motionY * 0.9800000190734863;
    $this.$motionZ = $this.$motionZ * 0.9800000190734863;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
}
function nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var10, $var11, $var12, var$13, var$14, var$15, $var13, $var14, $var15, $var16, var$20, var$21, var$22, var$23, var$24, var$25;
    $var8 = ($this.$field_670_b % 16 | 0) / 16.0;
    $var9 = $var8 + 0.062437500804662704;
    $var10 = ($this.$field_670_b / 16 | 0) / 16.0;
    $var11 = $var10 + 0.062437500804662704;
    $var12 = 0.10000000149011612 * $this.$field_665_g;
    var$13 = $this.$prevPosX;
    var$14 = $this.$posX - $this.$prevPosX;
    var$15 = $var2;
    $var13 = var$13 + var$14 * var$15 - nms_EntityFX_field_660_l;
    $var14 = $this.$prevPosY + ($this.$posY - $this.$prevPosY) * var$15 - nms_EntityFX_field_659_m;
    $var15 = $this.$prevPosZ + ($this.$posZ - $this.$prevPosZ) * var$15 - nms_EntityFX_field_658_n;
    $var16 = $this.$getEntityBrightness($var2);
    nms_Tessellator_setColorOpaque_F($var1, $this.$field_663_i * $var16, $this.$field_662_j * $var16, $this.$field_661_k * $var16);
    var$20 = $var3 * $var12;
    $var16 = $var13 - var$20;
    var$21 = $var6 * $var12;
    var$13 = $var16 - var$21;
    $var2 = $var4 * $var12;
    var$14 = $var14 - $var2;
    $var3 = $var5 * $var12;
    $var4 = $var15 - $var3;
    $var5 = $var7 * $var12;
    var$22 = $var4 - $var5;
    var$15 = $var8;
    var$23 = $var11;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$14, var$22, var$15, var$23);
    var$13 = $var16 + var$21;
    var$22 = $var14 + $var2;
    var$24 = $var4 + $var5;
    var$25 = $var10;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$22, var$24, var$15, var$25);
    $var2 = $var13 + var$20;
    var$13 = $var2 + var$21;
    $var3 = $var15 + $var3;
    var$15 = $var3 + $var5;
    var$24 = $var9;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$22, var$15, var$24, var$25);
    nms_Tessellator_addVertexWithUV($var1, $var2 - var$21, var$14, $var3 - $var5, var$24, var$23);
}
function nms_EntityFX_func_404_c($this) {
    return 0;
}
function nms_EntityFX_writeEntityToNBT($this, $var1) {
    return;
}
function nms_EntityDiggingFX() {
    nms_EntityFX.call(this);
    this.$field_4082_a = null;
}
function nms_EntityDiggingFX__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) {
    var var_8 = new nms_EntityDiggingFX();
    nms_EntityDiggingFX__init_0(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
}
function nms_EntityDiggingFX__init_0($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12, $var14) {
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12);
    $this.$field_4082_a = $var14;
    $this.$field_670_b = $var14.$blockIndexInTexture;
    $this.$field_664_h = $var14.$field_357_bm;
    $this.$field_661_k = 0.6000000238418579;
    $this.$field_662_j = 0.6000000238418579;
    $this.$field_663_i = 0.6000000238418579;
    $this.$field_665_g = $this.$field_665_g / 2.0;
}
function nms_EntityDiggingFX_func_4041_a($this, $var1, $var2, $var3) {
    var var$4, var$5, $var4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var4 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$4 = $this.$field_4082_a;
        nms_Block_$callClinit();
        if (var$4 === nms_Block_grass)
            return $this;
        var$5 = $this.$field_4082_a;
        var$4 = $this.$worldObj0;
        $ptr = 1;
    case 1:
        $tmp = var$5.$colorMultiplier(var$4, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $var4 = $tmp;
        $this.$field_663_i = $this.$field_663_i * ($var4 >> 16 & 255) / 255.0;
        $this.$field_662_j = $this.$field_662_j * ($var4 >> 8 & 255) / 255.0;
        $this.$field_661_k = $this.$field_661_k * ($var4 & 255) / 255.0;
        return $this;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, var$5, $var4, $ptr);
}
function nms_EntityDiggingFX_func_404_c($this) {
    return 1;
}
function nms_EntityDiggingFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var10, $var11, $var12, var$13, var$14, var$15, $var13, $var14, $var15, $var16, var$20, var$21, var$22, var$23, var$24, var$25;
    $var8 = (($this.$field_670_b % 16 | 0) + $this.$field_669_c / 4.0) / 16.0;
    $var9 = $var8 + 0.015609375201165676;
    $var10 = (($this.$field_670_b / 16 | 0) + $this.$field_668_d / 4.0) / 16.0;
    $var11 = $var10 + 0.015609375201165676;
    $var12 = 0.10000000149011612 * $this.$field_665_g;
    var$13 = $this.$prevPosX;
    var$14 = $this.$posX - $this.$prevPosX;
    var$15 = $var2;
    $var13 = var$13 + var$14 * var$15 - nms_EntityFX_field_660_l;
    $var14 = $this.$prevPosY + ($this.$posY - $this.$prevPosY) * var$15 - nms_EntityFX_field_659_m;
    $var15 = $this.$prevPosZ + ($this.$posZ - $this.$prevPosZ) * var$15 - nms_EntityFX_field_658_n;
    $var16 = nms_Entity_getEntityBrightness($this, $var2);
    nms_Tessellator_setColorOpaque_F($var1, $var16 * $this.$field_663_i, $var16 * $this.$field_662_j, $var16 * $this.$field_661_k);
    $var16 = $var3 * $var12;
    var$20 = $var13 - $var16;
    $var6 = $var6 * $var12;
    var$21 = var$20 - $var6;
    var$22 = $var4 * $var12;
    var$14 = $var14 - var$22;
    $var2 = $var5 * $var12;
    $var3 = $var15 - $var2;
    $var4 = $var7 * $var12;
    var$13 = $var3 - $var4;
    var$23 = $var8;
    var$15 = $var11;
    nms_Tessellator_addVertexWithUV($var1, var$21, var$14, var$13, var$23, var$15);
    var$13 = var$20 + $var6;
    var$21 = $var14 + var$22;
    var$24 = $var3 + $var4;
    var$25 = $var10;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$21, var$24, var$23, var$25);
    $var3 = $var13 + $var16;
    var$13 = $var3 + $var6;
    $var2 = $var15 + $var2;
    var$23 = $var2 + $var4;
    var$24 = $var9;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$21, var$23, var$24, var$25);
    nms_Tessellator_addVertexWithUV($var1, $var3 - $var6, var$14, $var2 - $var4, var$24, var$15);
}
function nms_CraftingManager() {
    jl_Object.call(this);
    this.$recipes = null;
}
var nms_CraftingManager_instance = null;
function nms_CraftingManager_$callClinit() {
    nms_CraftingManager_$callClinit = $rt_eraseClinit(nms_CraftingManager);
    nms_CraftingManager__clinit_();
}
function nms_CraftingManager__init_0() {
    var var_0 = new nms_CraftingManager();
    nms_CraftingManager__init_(var_0);
    return var_0;
}
function nms_CraftingManager_getInstance() {
    nms_CraftingManager_$callClinit();
    return nms_CraftingManager_instance;
}
function nms_CraftingManager__init_($this) {
    var var$1, var$2, var$3, var$4;
    nms_CraftingManager_$callClinit();
    jl_Object__init_0($this);
    $this.$recipes = ju_ArrayList__init_0();
    nms_RecipesTools_func_1122_a(nms_RecipesTools__init_0(), $this);
    nms_RecipesWeapons_func_766_a(nms_RecipesWeapons__init_0(), $this);
    nms_RecipesIngots_func_810_a(nms_RecipesIngots__init_0(), $this);
    nms_RecipesFood_func_976_a(nms_RecipesFood__init_0(), $this);
    nms_RecipesCrafting_func_1051_a(nms_RecipesCrafting__init_0(), $this);
    nms_RecipesArmor_func_1148_a(nms_RecipesArmor__init_0(), $this);
    var$1 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_4(var$1, nms_Item_paper, 3);
    var$2 = $rt_createArray(jl_Object, 3);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = jl_Character_valueOf(35);
    var$3[2] = nms_Item_reed;
    nms_CraftingManager_addRecipe($this, var$1, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_book, 1);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(672);
    var$3[1] = $rt_s(672);
    var$3[2] = $rt_s(672);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_paper;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = new nms_ItemStack;
    nms_Block_$callClinit();
    nms_ItemStack__init_9(var$4, nms_Block_fence, 2);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(671);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_stick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_jukebox, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(673);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_planks;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_diamond;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_bookShelf, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(674);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_planks;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_book;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_blockSnow, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(675);
    var$3[1] = $rt_s(675);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_snowball;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_blockClay, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(675);
    var$3[1] = $rt_s(675);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_clay;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_brick, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(675);
    var$3[1] = $rt_s(675);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_brick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_lightStone, 1);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(671);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_lightStoneDust;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_cloth, 1);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(671);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_silk;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_tnt, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(676);
    var$3[1] = $rt_s(673);
    var$3[2] = $rt_s(676);
    var$3[3] = jl_Character_valueOf(88);
    var$3[4] = nms_Item_gunpowder;
    var$3[5] = jl_Character_valueOf(35);
    var$3[6] = nms_Block_sand;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_stairSingle, 3);
    var$2 = $rt_createArray(jl_Object, 3);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = jl_Character_valueOf(35);
    var$3[2] = nms_Block_cobblestone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_ladder, 1);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(677);
    var$3[1] = $rt_s(671);
    var$3[2] = $rt_s(677);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_stick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_doorWood, 1);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(675);
    var$3[1] = $rt_s(675);
    var$3[2] = $rt_s(675);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_planks;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_doorSteel, 1);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(675);
    var$3[1] = $rt_s(675);
    var$3[2] = $rt_s(675);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_ingotIron;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_sign, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(671);
    var$3[2] = $rt_s(678);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_planks;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_stick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_planks, 4);
    var$2 = $rt_createArray(jl_Object, 3);
    var$3 = var$2.data;
    var$3[0] = $rt_s(672);
    var$3[1] = jl_Character_valueOf(35);
    var$3[2] = nms_Block_wood;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_stick, 4);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(672);
    var$3[1] = $rt_s(672);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Block_planks;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_torchWood, 4);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(84);
    var$3[1] = $rt_s(672);
    var$3[2] = jl_Character_valueOf(88);
    var$3[3] = nms_Item_coal;
    var$3[4] = jl_Character_valueOf(35);
    var$3[5] = nms_Item_stick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_bowlEmpty, 4);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(677);
    var$3[1] = $rt_s(679);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Block_planks;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_minecartTrack, 16);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(680);
    var$3[1] = $rt_s(676);
    var$3[2] = $rt_s(680);
    var$3[3] = jl_Character_valueOf(88);
    var$3[4] = nms_Item_ingotIron;
    var$3[5] = jl_Character_valueOf(35);
    var$3[6] = nms_Item_stick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_minecartEmpty, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(677);
    var$3[1] = $rt_s(671);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_ingotIron;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_pumpkinLantern, 1);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(69);
    var$3[1] = $rt_s(87);
    var$3[2] = jl_Character_valueOf(65);
    var$3[3] = nms_Block_pumpkin;
    var$3[4] = jl_Character_valueOf(66);
    var$3[5] = nms_Block_torchWood;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_minecartCrate, 1);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(69);
    var$3[1] = $rt_s(87);
    var$3[2] = jl_Character_valueOf(65);
    var$3[3] = nms_Block_crate;
    var$3[4] = jl_Character_valueOf(66);
    var$3[5] = nms_Item_minecartEmpty;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_minecartPowered, 1);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(69);
    var$3[1] = $rt_s(87);
    var$3[2] = jl_Character_valueOf(65);
    var$3[3] = nms_Block_stoneOvenIdle;
    var$3[4] = jl_Character_valueOf(66);
    var$3[5] = nms_Item_minecartEmpty;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_boat, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(677);
    var$3[1] = $rt_s(671);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Block_planks;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_bucketEmpty, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(677);
    var$3[1] = $rt_s(679);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_ingotIron;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_flintAndSteel, 1);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(681);
    var$3[1] = $rt_s(682);
    var$3[2] = jl_Character_valueOf(65);
    var$3[3] = nms_Item_ingotIron;
    var$3[4] = jl_Character_valueOf(66);
    var$3[5] = nms_Item_flint;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_bread, 1);
    var$2 = $rt_createArray(jl_Object, 3);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = jl_Character_valueOf(35);
    var$3[2] = nms_Item_wheat;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_stairCompactPlanks, 4);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(683);
    var$3[1] = $rt_s(684);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_planks;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_fishingRod, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(685);
    var$3[1] = $rt_s(686);
    var$3[2] = $rt_s(687);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_stick;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_silk;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_stairCompactCobblestone, 4);
    var$2 = $rt_createArray(jl_Object, 5);
    var$3 = var$2.data;
    var$3[0] = $rt_s(683);
    var$3[1] = $rt_s(684);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_cobblestone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_painting, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(673);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_stick;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Block_cloth;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_appleGold, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = $rt_s(673);
    var$3[2] = $rt_s(671);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Block_blockGold;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_appleRed;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_lever, 1);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(84);
    var$3[1] = $rt_s(672);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Block_cobblestone;
    var$3[4] = jl_Character_valueOf(88);
    var$3[5] = nms_Item_stick;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_torchRedstoneActive, 1);
    var$2 = $rt_createArray(jl_Object, 6);
    var$3 = var$2.data;
    var$3[0] = $rt_s(84);
    var$3[1] = $rt_s(672);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Item_stick;
    var$3[4] = jl_Character_valueOf(88);
    var$3[5] = nms_Item_redstone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_pocketSundial, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(679);
    var$3[1] = $rt_s(673);
    var$3[2] = $rt_s(679);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_ingotGold;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_redstone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_11(nms_Item_compass, 1);
    var$2 = $rt_createArray(jl_Object, 7);
    var$3 = var$2.data;
    var$3[0] = $rt_s(679);
    var$3[1] = $rt_s(673);
    var$3[2] = $rt_s(679);
    var$3[3] = jl_Character_valueOf(35);
    var$3[4] = nms_Item_ingotIron;
    var$3[5] = jl_Character_valueOf(88);
    var$3[6] = nms_Item_redstone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_button, 1);
    var$2 = $rt_createArray(jl_Object, 4);
    var$3 = var$2.data;
    var$3[0] = $rt_s(672);
    var$3[1] = $rt_s(672);
    var$3[2] = jl_Character_valueOf(35);
    var$3[3] = nms_Block_stone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_pressurePlateStone, 1);
    var$2 = $rt_createArray(jl_Object, 3);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = jl_Character_valueOf(35);
    var$3[2] = nms_Block_stone;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    var$4 = nms_ItemStack__init_8(nms_Block_pressurePlatePlanks, 1);
    var$2 = $rt_createArray(jl_Object, 3);
    var$3 = var$2.data;
    var$3[0] = $rt_s(671);
    var$3[1] = jl_Character_valueOf(35);
    var$3[2] = nms_Block_planks;
    nms_CraftingManager_addRecipe($this, var$4, var$2);
    ju_Collections_sort($this.$recipes, nms_RecipeSorter__init_($this));
    ji_PrintStream_println(jl_System_out(), jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder__init_0(), ju_ArrayList_size($this.$recipes)), $rt_s(688))));
}
function nms_CraftingManager_addRecipe($this, $var1, $var2) {
    var $var14, $var3, $var4, $var5, $var6, $var10, $var7, $var9, $var11, $var8, $var12, $var13, $var15;
    $var14 = $var2.data;
    $var3 = $rt_s(17);
    $var4 = 0;
    $var5 = 0;
    $var6 = 0;
    if (!$rt_isInstance($var14[$var4], $rt_arraycls(jl_String))) {
        while ($var14[$var4] instanceof jl_String) {
            $var10 = $var4 + 1 | 0;
            $var7 = $var14[$var4];
            $var6 = $var6 + 1 | 0;
            $var5 = jl_String_length($var7);
            $var9 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($var9);
            $var3 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($var9, $var3), $var7));
            $var4 = $var10;
        }
        $var10 = $var4;
    } else {
        $var10 = 1;
        $var11 = $var14[$var4];
        $var8 = 0;
        while (true) {
            $var2 = $var11.data;
            if ($var8 >= $var2.length)
                break;
            $var9 = $var2[$var8];
            $var6 = $var6 + 1 | 0;
            $var5 = jl_String_length($var9);
            $var7 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($var7);
            $var3 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($var7, $var3), $var9));
            $var8 = $var8 + 1 | 0;
        }
    }
    $var12 = ju_HashMap__init_0();
    while ($var10 < $var14.length) {
        $var13 = $var14[$var10];
        $var15 = 0;
        $var4 = $var10 + 1 | 0;
        if ($var14[$var4] instanceof nms_Item)
            $var15 = $var14[$var4].$shiftedIndex;
        else if ($var14[$var4] instanceof nms_Block)
            $var15 = $var14[$var4].$blockID;
        ju_HashMap_putImpl($var12, $var13, jl_Integer_valueOf($var15));
        $var10 = $var10 + 2 | 0;
    }
    $var8 = $rt_imul($var5, $var6);
    $var14 = $rt_createIntArray($var8);
    $var2 = $var14.data;
    $var15 = 0;
    while ($var15 < $var8) {
        $var10 = jl_String_charAt($var3, $var15);
        if (!ju_HashMap_containsKey($var12, jl_Character_valueOf($var10)))
            $var2[$var15] = (-1);
        else
            $var2[$var15] = ju_HashMap_get($var12, jl_Character_valueOf($var10)).$value;
        $var15 = $var15 + 1 | 0;
    }
    $var3 = $this.$recipes;
    $var7 = new nms_CraftingRecipe;
    $var7.$resultId = $var1.$itemID;
    $var7.$width1 = $var5;
    $var7.$height1 = $var6;
    $var7.$ingredientMap = $var14;
    $var7.$resultStack = $var1;
    ju_ArrayList_add($var3, $var7);
}
function nms_CraftingManager_craft($this, $var1) {
    var $var2, $var3;
    $var2 = 0;
    while ($var2 < $this.$recipes.$size) {
        $var3 = ju_ArrayList_get($this.$recipes, $var2);
        if (nms_CraftingRecipe_matchRecipe($var3, $var1))
            return nms_CraftingRecipe_createResult($var3, $var1);
        $var2 = $var2 + 1 | 0;
    }
    return null;
}
function nms_CraftingManager__clinit_() {
    nms_CraftingManager_instance = nms_CraftingManager__init_0();
}
function jnci_BufferedDecoder() {
    jnc_CharsetDecoder.call(this);
}
function jnci_BufferedDecoder_decodeLoop($this, $in, $out) {
    var $inArray, var$4, $inPos, $inSize, $outArray, var$8, $i, $outSize, var$11, $controller;
    $inArray = $rt_createByteArray(jl_Math_min(jn_Buffer_remaining($in), 512));
    var$4 = $inArray.data;
    $inPos = 0;
    $inSize = 0;
    $outArray = $rt_createCharArray(jl_Math_min(jn_Buffer_remaining($out), 512));
    var$8 = $outArray.data;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$4[$i - $inPos | 0] = var$4[$i];
                    $i = $i + 1 | 0;
                }
                $outSize = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + $outSize | 0, var$4.length);
                jn_ByteBuffer_get0($in, $inArray, $outSize, $inSize - $outSize | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                var$11 = !jn_Buffer_hasRemaining($in) && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = new jnci_BufferedDecoder$Controller;
            $controller.$in1 = $in;
            $controller.$out4 = $out;
            var$11 = jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if (var$11 === null && 0 == $controller.$outPosition0)
                var$11 = jnc_CoderResult_UNDERFLOW;
            jn_CharBuffer_put($out, $outArray, 0, $controller.$outPosition0);
            if (var$11 !== null)
                break;
        }
    }
    jn_Buffer_position0($in, $in.$position - ($inSize - $inPos | 0) | 0);
    return var$11;
}
function jnci_UTF8Decoder() {
    jnci_BufferedDecoder.call(this);
}
function jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, $b2, $b, $b2_0, $b4, $b3, $c, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    $b2 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if ($b2 >= $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $b4 = $b2 + 1 | 0;
                        $b2 = var$9[$b2];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = $b4 + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        $b2 = $b4;
                    } else if (($b & 240) == 224) {
                        if (($b2 + 2 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $b2 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2_0))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2_0 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = $b2 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = $b2 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if (($b2 + 3 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreOutput($controller, 2))
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $b4 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        $b2 = $b4 + 1 | 0;
                        $b4 = var$9[$b4];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2_0))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2_0 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        $inPos = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        $b2_0 = $inPos + 1 | 0;
                        var$9[$inPos] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = $b2;
                    $outPos = $b2_0;
                }
                break a;
            }
            $inPos = $b2 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = $b2 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$inPosition0 = $inPos;
    $controller.$outPosition0 = $outPos;
    return $result;
}
function jnci_UTF8Decoder_checkMidByte($this, $b) {
    return ($b & 192) != 128 ? 0 : 1;
}
function nms_LogoEffectRandomizer() {
    var a = this; jl_Object.call(a);
    a.$field_1312_a = 0.0;
    a.$field_1311_b = 0.0;
    a.$field_1314_c = 0.0;
    a.$mainMenu = null;
}
function nms_LogoEffectRandomizer_func_875_a($this) {
    $this.$field_1311_b = $this.$field_1312_a;
    if ($this.$field_1312_a > 0.0)
        $this.$field_1314_c = $this.$field_1314_c - 0.6;
    $this.$field_1312_a = $this.$field_1312_a + $this.$field_1314_c;
    $this.$field_1314_c = $this.$field_1314_c * 0.9;
    if ($this.$field_1312_a < 0.0) {
        $this.$field_1312_a = 0.0;
        $this.$field_1314_c = 0.0;
    }
}
function nms_WorldProvider() {
    var a = this; jl_Object.call(a);
    a.$worldObj6 = null;
    a.$worldChunkMgr = null;
    a.$field_4220_c = 0;
    a.$field_6479_d = 0;
    a.$field_6478_e = 0;
    a.$lightBrightnessTable = null;
    a.$field_4218_e = 0;
    a.$field_4217_f = null;
}
function nms_WorldProvider__init_0() {
    var var_0 = new nms_WorldProvider();
    nms_WorldProvider__init_(var_0);
    return var_0;
}
function nms_WorldProvider__init_($this) {
    $this.$field_4220_c = 0;
    $this.$field_6479_d = 0;
    $this.$field_6478_e = 0;
    $this.$lightBrightnessTable = $rt_createFloatArray(16);
    $this.$field_4218_e = 0;
    $this.$field_4217_f = $rt_createFloatArray(4);
}
function nms_WorldProvider_registerWorld($this, $var1) {
    $this.$worldObj6 = $var1;
    $this.$registerWorldChunkManager();
    $this.$generateLightBrightnessTable();
}
function nms_WorldProvider_generateLightBrightnessTable($this) {
    var $var2, $var3;
    $var2 = 0;
    while ($var2 <= 15) {
        $var3 = 1.0 - $var2 / 15.0;
        $this.$lightBrightnessTable.data[$var2] = (1.0 - $var3) / ($var3 * 3.0 + 1.0) * 0.949999988079071 + 0.05000000074505806;
        $var2 = $var2 + 1 | 0;
    }
}
function nms_WorldProvider_registerWorldChunkManager($this) {
    var var$1;
    var$1 = new nms_WorldChunkManager;
    var$1.$field_4194_e = nms_NoiseGeneratorOctaves2__init_(new ju_Random, 4);
    var$1.$field_4193_f = nms_NoiseGeneratorOctaves2__init_(new ju_Random, 4);
    var$1.$field_4192_g = nms_NoiseGeneratorOctaves2__init_(new ju_Random, 2);
    $this.$worldChunkMgr = var$1;
}
function nms_WorldProvider_getChunkProvider($this) {
    var var$1, var$2, var$3;
    var$1 = new nms_ChunkProviderGenerate;
    var$2 = $this.$worldObj6;
    var$1.$field_905_r = $rt_createDoubleArray(256);
    var$1.$field_904_s = $rt_createDoubleArray(256);
    var$1.$field_903_t = $rt_createDoubleArray(256);
    var$3 = new nms_MapGenCaves;
    nms_MapGenBase__init_(var$3);
    var$1.$field_902_u = var$3;
    var$1.$field_914_i = $rt_createIntMultiArray([32, 32]);
    var$1.$worldObj7 = var$2;
    var$1.$rand4 = new ju_Random;
    var$1.$field_912_k = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 16);
    var$1.$field_911_l = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 16);
    var$1.$field_910_m = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 8);
    var$1.$field_909_n = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 4);
    var$1.$field_908_o = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 4);
    var$1.$field_922_a = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 10);
    var$1.$field_921_b = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 16);
    var$1.$field_920_c = nms_NoiseGeneratorOctaves__init_(var$1.$rand4, 8);
    return var$1;
}
function nms_WorldProvider_getChunkLoader($this, $var1) {
    return nms_ChunkLoader__init_($var1, 1);
}
function nms_WorldProvider_canCoordinateBeSpawn($this, $var1, $var2) {
    var $var3;
    $var3 = nms_World_func_614_g($this.$worldObj6, $var1, $var2);
    nms_Block_$callClinit();
    return $var3 != nms_Block_sand.$blockID ? 0 : 1;
}
function nms_WorldProvider_calculateCelestialAngle($this, $var1, $var3) {
    var $var5;
    $var5 = (Long_rem($var1, Long_fromInt(24000)).lo + $var3) / 24000.0 - 0.25;
    if ($var5 < 0.0)
        $var5 = $var5 + 1.0;
    if ($var5 > 1.0)
        $var5 = $var5 - 1.0;
    return $var5 + (1.0 - (jl_Math_cos($var5 * 3.141592653589793) + 1.0) / 2.0 - $var5) / 3.0;
}
function nms_WorldProvider_func_4097_b($this, $var1, $var2) {
    var $var4, $var6, $var7, var$6;
    $var4 = nms_MathHelper_cos($var1 * 3.1415927410125732 * 2.0) - 0.0;
    if ($var4 >= (-0.4000000059604645) && $var4 <= 0.4000000059604645) {
        $var6 = ($var4 - -0.0) / 0.4000000059604645 * 0.5 + 0.5;
        $var7 = 1.0 - (1.0 - nms_MathHelper_sin($var6 * 3.1415927410125732)) * 0.9900000095367432;
        $var1 = $var7 * $var7;
        $this.$field_4217_f.data[0] = $var6 * 0.30000001192092896 + 0.699999988079071;
        var$6 = $this.$field_4217_f.data;
        $var2 = $var6 * $var6;
        var$6[1] = $var2 * 0.699999988079071 + 0.20000000298023224;
        $this.$field_4217_f.data[2] = $var2 * 0.0 + 0.20000000298023224;
        $this.$field_4217_f.data[3] = $var1;
        return $this.$field_4217_f;
    }
    return null;
}
function nms_WorldProvider_func_4096_a($this, $var1, $var2) {
    var $var3;
    $var3 = nms_MathHelper_cos($var1 * 3.1415927410125732 * 2.0) * 2.0 + 0.5;
    if ($var3 < 0.0)
        $var3 = 0.0;
    if ($var3 > 1.0)
        $var3 = 1.0;
    $var1 = $var3 * 0.9399999976158142 + 0.05999999865889549;
    return nms_Vec3D_createVector(0.7529411911964417 * $var1, 0.8470588326454163 * $var1, 1.0 * ($var3 * 0.9100000262260437 + 0.09000000357627869));
}
function nms_WorldProvider_func_6477_d($this) {
    return 1;
}
function nms_EntityRainFX() {
    nms_EntityFX.call(this);
}
function nms_EntityRainFX__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_EntityRainFX();
    nms_EntityRainFX__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_EntityRainFX__init_($this, $var1, $var2, $var4, $var6) {
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, 0.0, 0.0, 0.0);
    $this.$motionX = $this.$motionX * 0.30000001192092896;
    $this.$motionY = jl_Math_random() * 0.20000000298023224 + 0.10000000149011612;
    $this.$motionZ = $this.$motionZ * 0.30000001192092896;
    $this.$field_663_i = 1.0;
    $this.$field_662_j = 1.0;
    $this.$field_661_k = 1.0;
    $this.$field_670_b = 19 + ju_Random_nextInt($this.$rand2, 4) | 0;
    nms_Entity_setSize($this, 0.009999999776482582, 0.009999999776482582);
    $this.$field_664_h = 0.05999999865889549;
    $this.$field_666_f = 8.0 / (jl_Math_random() * 0.8 + 0.2) | 0;
}
function nms_EntityRainFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntityRainFX_onUpdate($this) {
    var var$1, $var1, $var2;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $this.$motionY = $this.$motionY - $this.$field_664_h;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.9800000190734863;
    $this.$motionY = $this.$motionY * 0.9800000190734863;
    $this.$motionZ = $this.$motionZ * 0.9800000190734863;
    var$1 = $this.$field_666_f;
    $this.$field_666_f = var$1 - 1 | 0;
    if (var$1 <= 0)
        nms_Entity_setEntityDead($this);
    if ($this.$onGround) {
        if (jl_Math_random() < 0.5)
            nms_Entity_setEntityDead($this);
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
    $var1 = nms_World_getBlockMaterial($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY), nms_MathHelper_floor_double($this.$posZ));
    if (!(!$var1.$getIsLiquid() && !$var1.$func_878_a())) {
        $var2 = (nms_MathHelper_floor_double($this.$posY) + 1 | 0) - nms_BlockFluids_func_288_b(nms_World_getBlockMetadata($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY), nms_MathHelper_floor_double($this.$posZ)));
        if ($this.$posY < $var2)
            nms_Entity_setEntityDead($this);
    }
}
function jl_ClassLoader() {
    jl_Object.call(this);
    this.$parent = null;
}
var jl_ClassLoader_systemClassLoader = null;
var jl_ClassLoader_resources = null;
function jl_ClassLoader_getResourceAsStream($this, $name) {
    var $dataString, $bytes, var$4, $i, var$6, var$7;
    if (jl_ClassLoader_resources === null)
        jl_ClassLoader_resources = {};
    $dataString = $rt_str(jl_ClassLoader_resourceToString$js_body$_6(jl_ClassLoader_resources[$rt_ustr($name)]));
    if ($dataString === null)
        return null;
    $bytes = $rt_createByteArray(jl_String_length($dataString));
    var$4 = $bytes.data;
    $i = 0;
    var$6 = var$4.length;
    while ($i < var$6) {
        var$4[$i] = jl_String_charAt($dataString, $i) << 24 >> 24;
        $i = $i + 1 | 0;
    }
    $name = new ji_ByteArrayInputStream;
    $i = (var$6 / 4 | 0) * 3 | 0;
    var$7 = var$6 % 4 | 0;
    if (!(var$7 != 2 && var$7 != 3))
        $i = $i + (var$7 - 1 | 0) | 0;
    var$6 = var$6 - 1 | 0;
    while (var$6 >= 0 && var$4[var$6] == 61) {
        $i = $i + (-1) | 0;
        var$6 = var$6 + (-1) | 0;
    }
    var$4 = $rt_createByteArray($i);
    otci_Base64Impl_decode($bytes, var$4);
    ji_ByteArrayInputStream__init_0($name, var$4);
    return $name;
}
function jl_ClassLoader__clinit_() {
    jl_ClassLoader_systemClassLoader = jl_SystemClassLoader__init_0();
}
function jl_ClassLoader_resourceToString$js_body$_6(var$1) {
    return var$1 !== null && var$1 !== void 0 ? var$1 : null;
}
function nms_GuiButton() {
    var a = this; nms_Gui.call(a);
    a.$width2 = 0;
    a.$height2 = 0;
    a.$xPosition = 0;
    a.$yPosition = 0;
    a.$displayString = null;
    a.$id2 = 0;
    a.$enabled = 0;
    a.$enabled2 = 0;
}
function nms_GuiButton__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_GuiButton();
    nms_GuiButton__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_GuiButton__init_1(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new nms_GuiButton();
    nms_GuiButton__init_2(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function nms_GuiButton__init_0($this, $var1, $var2, $var3, $var4) {
    nms_GuiButton__init_2($this, $var1, $var2, $var3, 200, 20, $var4);
}
function nms_GuiButton__init_2($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    nms_Gui__init_($this);
    $this.$width2 = 200;
    $this.$height2 = 20;
    $this.$enabled = 1;
    $this.$enabled2 = 1;
    $this.$id2 = $var1;
    $this.$xPosition = $var2;
    $this.$yPosition = $var3;
    $this.$width2 = $var4;
    $this.$height2 = $var5;
    $this.$displayString = $var6;
}
function nms_GuiButton_getHoverState($this, $var1) {
    var $var2;
    $var2 = 1;
    if (!$this.$enabled)
        $var2 = 0;
    else if ($var1)
        $var2 = 2;
    return $var2;
}
function nms_GuiButton_drawButton($this, $var1, $var2, $var3) {
    var $var4, var$5, var$6, var$7, var$8, $var5, $var6, var$11, var$12, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (!$this.$enabled2)
            return;
        $var4 = $var1.$fontRenderer;
        var$5 = 3553;
        var$6 = $var1.$renderEngine;
        var$7 = $rt_s(491);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$6, var$7);
        if ($rt_suspending()) {
            break main;
        }
        var$8 = $tmp;
        olo_EaglerAdapterGL30_glBindTexture(var$5, var$8);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        $var5 = $var2 >= $this.$xPosition && $var3 >= $this.$yPosition && $var2 < ($this.$xPosition + $this.$width2 | 0) && $var3 < ($this.$yPosition + $this.$height2 | 0) ? 1 : 0;
        $var6 = $this.$getHoverState($var5);
        var$8 = $this.$xPosition;
        var$11 = $this.$yPosition;
        var$12 = 46 + ($var6 * 20 | 0) | 0;
        nms_Gui_drawTexturedModalRect($this, var$8, var$11, 0, var$12, $this.$width2 / 2 | 0, $this.$height2);
        nms_Gui_drawTexturedModalRect($this, $this.$xPosition + ($this.$width2 / 2 | 0) | 0, $this.$yPosition, 200 - ($this.$width2 / 2 | 0) | 0, var$12, $this.$width2 / 2 | 0, $this.$height2);
        $this.$mouseDragged($var1, $var2, $var3);
        if (!$this.$enabled)
            nms_Gui_drawCenteredString($this, $var4, $this.$displayString, $this.$xPosition + ($this.$width2 / 2 | 0) | 0, $this.$yPosition + (($this.$height2 - 8 | 0) / 2 | 0) | 0, (-6250336));
        else if (!$var5)
            nms_Gui_drawCenteredString($this, $var4, $this.$displayString, $this.$xPosition + ($this.$width2 / 2 | 0) | 0, $this.$yPosition + (($this.$height2 - 8 | 0) / 2 | 0) | 0, 14737632);
        else
            nms_Gui_drawCenteredString($this, $var4, $this.$displayString, $this.$xPosition + ($this.$width2 / 2 | 0) | 0, $this.$yPosition + (($this.$height2 - 8 | 0) / 2 | 0) | 0, 16777120);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, var$5, var$6, var$7, var$8, $var5, $var6, var$11, var$12, $ptr);
}
function nms_GuiButton_mouseDragged($this, $var1, $var2, $var3) {
    return;
}
function nms_GuiButton_mouseReleased($this, $var1, $var2) {
    return;
}
function nms_GuiButton_mousePressed($this, $var1, $var2, $var3) {
    return $this.$enabled && $var2 >= $this.$xPosition && $var3 >= $this.$yPosition && $var2 < ($this.$xPosition + $this.$width2 | 0) && $var3 < ($this.$yPosition + $this.$height2 | 0) ? 1 : 0;
}
function ji_UnsupportedEncodingException() {
    ji_IOException.call(this);
}
function ji_UnsupportedEncodingException__init_0() {
    var var_0 = new ji_UnsupportedEncodingException();
    ji_UnsupportedEncodingException__init_(var_0);
    return var_0;
}
function ji_UnsupportedEncodingException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_NumberFormatException() {
    jl_IllegalArgumentException.call(this);
}
function jl_NumberFormatException__init_0() {
    var var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_(var_0);
    return var_0;
}
function jl_NumberFormatException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_SystemClassLoader() {
    jl_ClassLoader.call(this);
}
function jl_SystemClassLoader__init_0() {
    var var_0 = new jl_SystemClassLoader();
    jl_SystemClassLoader__init_(var_0);
    return var_0;
}
function jl_SystemClassLoader__init_($this) {
    $this.$parent = null;
}
function nms_RecipesTools() {
    var a = this; jl_Object.call(a);
    a.$field_1665_a = null;
    a.$field_1664_b = null;
}
function nms_RecipesTools__init_0() {
    var var_0 = new nms_RecipesTools();
    nms_RecipesTools__init_(var_0);
    return var_0;
}
function nms_RecipesTools__init_($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray($rt_arraycls(jl_String), 4);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(674);
    var$4[1] = $rt_s(679);
    var$4[2] = $rt_s(679);
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(84);
    var$4[1] = $rt_s(672);
    var$4[2] = $rt_s(672);
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(689);
    var$4[1] = $rt_s(690);
    var$4[2] = $rt_s(691);
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(689);
    var$4[1] = $rt_s(691);
    var$4[2] = $rt_s(691);
    var$2[3] = var$3;
    $this.$field_1665_a = var$1;
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 5);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    nms_Block_$callClinit();
    var$4[0] = nms_Block_planks;
    var$4[1] = nms_Block_cobblestone;
    nms_Item_$callClinit();
    var$4[2] = nms_Item_ingotIron;
    var$4[3] = nms_Item_diamond;
    var$4[4] = nms_Item_ingotGold;
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_pickaxeWood;
    var$4[1] = nms_Item_pickaxeStone;
    var$4[2] = nms_Item_pickaxeSteel;
    var$4[3] = nms_Item_pickaxeDiamond;
    var$4[4] = nms_Item_pickaxeGold;
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_shovelWood;
    var$4[1] = nms_Item_shovelStone;
    var$4[2] = nms_Item_shovelSteel;
    var$4[3] = nms_Item_shovelDiamond;
    var$4[4] = nms_Item_shovelGold;
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_axeWood;
    var$4[1] = nms_Item_axeStone;
    var$4[2] = nms_Item_axeSteel;
    var$4[3] = nms_Item_axeDiamond;
    var$4[4] = nms_Item_axeGold;
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_hoeWood;
    var$4[1] = nms_Item_hoeStone;
    var$4[2] = nms_Item_hoeSteel;
    var$4[3] = nms_Item_hoeDiamond;
    var$4[4] = nms_Item_hoeGold;
    var$2[4] = var$3;
    $this.$field_1664_b = var$1;
}
function nms_RecipesTools_func_1122_a($this, $var1) {
    var $var2, $var3, $var4, var$5, $var4_0, $var5, var$8, var$9;
    $var2 = 0;
    while ($var2 < $this.$field_1664_b.data[0].data.length) {
        $var3 = $this.$field_1664_b.data[0].data[$var2];
        $var4 = 0;
        while ($var4 < ($this.$field_1664_b.data.length - 1 | 0)) {
            var$5 = $this.$field_1664_b.data;
            $var4_0 = $var4 + 1 | 0;
            $var5 = var$5[$var4_0].data[$var2];
            var$8 = nms_ItemStack__init_10($var5);
            var$5 = $rt_createArray(jl_Object, 5);
            var$9 = var$5.data;
            var$9[0] = $this.$field_1665_a.data[$var4];
            var$9[1] = jl_Character_valueOf(35);
            nms_Item_$callClinit();
            var$9[2] = nms_Item_stick;
            var$9[3] = jl_Character_valueOf(88);
            var$9[4] = $var3;
            nms_CraftingManager_addRecipe($var1, var$8, var$5);
            $var4 = $var4_0;
        }
        $var2 = $var2 + 1 | 0;
    }
}
function nms_RecipesWeapons() {
    var a = this; jl_Object.call(a);
    a.$field_1100_a = null;
    a.$field_1099_b = null;
}
function nms_RecipesWeapons__init_0() {
    var var_0 = new nms_RecipesWeapons();
    nms_RecipesWeapons__init_(var_0);
    return var_0;
}
function nms_RecipesWeapons__init_($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray($rt_arraycls(jl_String), 1);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(84);
    var$4[1] = $rt_s(84);
    var$4[2] = $rt_s(672);
    var$2[0] = var$3;
    $this.$field_1100_a = var$1;
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 2);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    nms_Block_$callClinit();
    var$4[0] = nms_Block_planks;
    var$4[1] = nms_Block_cobblestone;
    nms_Item_$callClinit();
    var$4[2] = nms_Item_ingotIron;
    var$4[3] = nms_Item_diamond;
    var$4[4] = nms_Item_ingotGold;
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_swordWood;
    var$4[1] = nms_Item_swordStone;
    var$4[2] = nms_Item_swordSteel;
    var$4[3] = nms_Item_swordDiamond;
    var$4[4] = nms_Item_swordGold;
    var$2[1] = var$3;
    $this.$field_1099_b = var$1;
}
function nms_RecipesWeapons_func_766_a($this, $var1) {
    var $var2, $var3, $var4, var$5, $var4_0, $var5, var$8, var$9, var$10;
    $var2 = 0;
    while ($var2 < $this.$field_1099_b.data[0].data.length) {
        $var3 = $this.$field_1099_b.data[0].data[$var2];
        $var4 = 0;
        while ($var4 < ($this.$field_1099_b.data.length - 1 | 0)) {
            var$5 = $this.$field_1099_b.data;
            $var4_0 = $var4 + 1 | 0;
            $var5 = var$5[$var4_0].data[$var2];
            var$8 = nms_ItemStack__init_10($var5);
            var$9 = $rt_createArray(jl_Object, 5);
            var$10 = var$9.data;
            var$10[0] = $this.$field_1100_a.data[$var4];
            var$10[1] = jl_Character_valueOf(35);
            nms_Item_$callClinit();
            var$10[2] = nms_Item_stick;
            var$10[3] = jl_Character_valueOf(88);
            var$10[4] = $var3;
            nms_CraftingManager_addRecipe($var1, var$8, var$9);
            $var4 = $var4_0;
        }
        $var2 = $var2 + 1 | 0;
    }
    $var5 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_4($var5, nms_Item_bow, 1);
    var$5 = $rt_createArray(jl_Object, 7);
    var$10 = var$5.data;
    var$10[0] = $rt_s(686);
    var$10[1] = $rt_s(687);
    var$10[2] = $rt_s(686);
    var$10[3] = jl_Character_valueOf(88);
    var$10[4] = nms_Item_silk;
    var$10[5] = jl_Character_valueOf(35);
    var$10[6] = nms_Item_stick;
    nms_CraftingManager_addRecipe($var1, $var5, var$5);
    $var3 = nms_ItemStack__init_11(nms_Item_arrow, 4);
    var$5 = $rt_createArray(jl_Object, 9);
    var$10 = var$5.data;
    var$10[0] = $rt_s(84);
    var$10[1] = $rt_s(672);
    var$10[2] = $rt_s(60);
    var$10[3] = jl_Character_valueOf(89);
    var$10[4] = nms_Item_feather;
    var$10[5] = jl_Character_valueOf(88);
    var$10[6] = nms_Item_flint;
    var$10[7] = jl_Character_valueOf(35);
    var$10[8] = nms_Item_stick;
    nms_CraftingManager_addRecipe($var1, $var3, var$5);
}
function nms_RecipesIngots() {
    jl_Object.call(this);
    this.$field_1198_a = null;
}
function nms_RecipesIngots__init_0() {
    var var_0 = new nms_RecipesIngots();
    nms_RecipesIngots__init_(var_0);
    return var_0;
}
function nms_RecipesIngots__init_($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 3);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    nms_Block_$callClinit();
    var$4[0] = nms_Block_blockGold;
    nms_Item_$callClinit();
    var$4[1] = nms_Item_ingotGold;
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = nms_Block_blockSteel;
    var$4[1] = nms_Item_ingotIron;
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = nms_Block_blockDiamond;
    var$4[1] = nms_Item_diamond;
    var$2[2] = var$3;
    $this.$field_1198_a = var$1;
}
function nms_RecipesIngots_func_810_a($this, $var1) {
    var $var2, $var3, $var4, var$5, var$6, var$7;
    $var2 = 0;
    while ($var2 < $this.$field_1198_a.data.length) {
        $var3 = $this.$field_1198_a.data[$var2].data[0];
        $var4 = $this.$field_1198_a.data[$var2].data[1];
        var$5 = nms_ItemStack__init_6($var3);
        var$6 = $rt_createArray(jl_Object, 5);
        var$7 = var$6.data;
        var$7[0] = $rt_s(671);
        var$7[1] = $rt_s(671);
        var$7[2] = $rt_s(671);
        var$7[3] = jl_Character_valueOf(35);
        var$7[4] = $var4;
        nms_CraftingManager_addRecipe($var1, var$5, var$6);
        var$5 = nms_ItemStack__init_11($var4, 9);
        var$6 = $rt_createArray(jl_Object, 3);
        var$7 = var$6.data;
        var$7[0] = $rt_s(672);
        var$7[1] = jl_Character_valueOf(35);
        var$7[2] = $var3;
        nms_CraftingManager_addRecipe($var1, var$5, var$6);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_RecipesFood() {
    jl_Object.call(this);
}
function nms_RecipesFood__init_0() {
    var var_0 = new nms_RecipesFood();
    nms_RecipesFood__init_(var_0);
    return var_0;
}
function nms_RecipesFood__init_($this) {
    return;
}
function nms_RecipesFood_func_976_a($this, $var1) {
    var var$2, var$3, var$4;
    var$2 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_2(var$2, nms_Item_bowlSoup);
    var$3 = $rt_createArray(jl_Object, 9);
    var$4 = var$3.data;
    var$4[0] = $rt_s(60);
    var$4[1] = $rt_s(84);
    var$4[2] = $rt_s(672);
    var$4[3] = jl_Character_valueOf(88);
    nms_Block_$callClinit();
    var$4[4] = nms_Block_mushroomBrown;
    var$4[5] = jl_Character_valueOf(89);
    var$4[6] = nms_Block_mushroomRed;
    var$4[7] = jl_Character_valueOf(35);
    var$4[8] = nms_Item_bowlEmpty;
    nms_CraftingManager_addRecipe($var1, var$2, var$3);
    var$2 = nms_ItemStack__init_10(nms_Item_bowlSoup);
    var$3 = $rt_createArray(jl_Object, 9);
    var$4 = var$3.data;
    var$4[0] = $rt_s(60);
    var$4[1] = $rt_s(84);
    var$4[2] = $rt_s(672);
    var$4[3] = jl_Character_valueOf(88);
    var$4[4] = nms_Block_mushroomRed;
    var$4[5] = jl_Character_valueOf(89);
    var$4[6] = nms_Block_mushroomBrown;
    var$4[7] = jl_Character_valueOf(35);
    var$4[8] = nms_Item_bowlEmpty;
    nms_CraftingManager_addRecipe($var1, var$2, var$3);
}
function nms_RecipesCrafting() {
    jl_Object.call(this);
}
function nms_RecipesCrafting__init_0() {
    var var_0 = new nms_RecipesCrafting();
    nms_RecipesCrafting__init_(var_0);
    return var_0;
}
function nms_RecipesCrafting__init_($this) {
    return;
}
function nms_RecipesCrafting_func_1051_a($this, $var1) {
    var var$2, var$3, var$4;
    var$2 = new nms_ItemStack;
    nms_Block_$callClinit();
    nms_ItemStack__init_7(var$2, nms_Block_crate);
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = $rt_s(671);
    var$4[1] = $rt_s(677);
    var$4[2] = $rt_s(671);
    var$4[3] = jl_Character_valueOf(35);
    var$4[4] = nms_Block_planks;
    nms_CraftingManager_addRecipe($var1, var$2, var$3);
    var$2 = nms_ItemStack__init_6(nms_Block_stoneOvenIdle);
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = $rt_s(671);
    var$4[1] = $rt_s(677);
    var$4[2] = $rt_s(671);
    var$4[3] = jl_Character_valueOf(35);
    var$4[4] = nms_Block_cobblestone;
    nms_CraftingManager_addRecipe($var1, var$2, var$3);
    var$2 = nms_ItemStack__init_6(nms_Block_workbench);
    var$3 = $rt_createArray(jl_Object, 4);
    var$4 = var$3.data;
    var$4[0] = $rt_s(675);
    var$4[1] = $rt_s(675);
    var$4[2] = jl_Character_valueOf(35);
    var$4[3] = nms_Block_planks;
    nms_CraftingManager_addRecipe($var1, var$2, var$3);
}
function nms_RecipesArmor() {
    var a = this; jl_Object.call(a);
    a.$field_1681_a = null;
    a.$field_1680_b = null;
}
function nms_RecipesArmor__init_0() {
    var var_0 = new nms_RecipesArmor();
    nms_RecipesArmor__init_(var_0);
    return var_0;
}
function nms_RecipesArmor__init_($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray($rt_arraycls(jl_String), 4);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_String, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(674);
    var$4[1] = $rt_s(680);
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(680);
    var$4[1] = $rt_s(674);
    var$4[2] = $rt_s(674);
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_String, 3);
    var$4 = var$3.data;
    var$4[0] = $rt_s(674);
    var$4[1] = $rt_s(680);
    var$4[2] = $rt_s(680);
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_String, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(680);
    var$4[1] = $rt_s(680);
    var$2[3] = var$3;
    $this.$field_1681_a = var$1;
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 5);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    nms_Item_$callClinit();
    var$4[0] = nms_Item_leather;
    nms_Block_$callClinit();
    var$4[1] = nms_Block_fire;
    var$4[2] = nms_Item_ingotIron;
    var$4[3] = nms_Item_diamond;
    var$4[4] = nms_Item_ingotGold;
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_helmetLeather;
    var$4[1] = nms_Item_helmetChain;
    var$4[2] = nms_Item_helmetSteel;
    var$4[3] = nms_Item_helmetDiamond;
    var$4[4] = nms_Item_helmetGold;
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_plateLeather;
    var$4[1] = nms_Item_plateChain;
    var$4[2] = nms_Item_plateSteel;
    var$4[3] = nms_Item_plateDiamond;
    var$4[4] = nms_Item_plateGold;
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_legsLeather;
    var$4[1] = nms_Item_legsChain;
    var$4[2] = nms_Item_legsSteel;
    var$4[3] = nms_Item_legsDiamond;
    var$4[4] = nms_Item_legsGold;
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 5);
    var$4 = var$3.data;
    var$4[0] = nms_Item_bootsLeather;
    var$4[1] = nms_Item_bootsChain;
    var$4[2] = nms_Item_bootsSteel;
    var$4[3] = nms_Item_bootsDiamond;
    var$4[4] = nms_Item_bootsGold;
    var$2[4] = var$3;
    $this.$field_1680_b = var$1;
}
function nms_RecipesArmor_func_1148_a($this, $var1) {
    var $var2, $var3, $var4, var$5, $var4_0, $var5, var$8, var$9;
    $var2 = 0;
    while ($var2 < $this.$field_1680_b.data[0].data.length) {
        $var3 = $this.$field_1680_b.data[0].data[$var2];
        $var4 = 0;
        while ($var4 < ($this.$field_1680_b.data.length - 1 | 0)) {
            var$5 = $this.$field_1680_b.data;
            $var4_0 = $var4 + 1 | 0;
            $var5 = var$5[$var4_0].data[$var2];
            var$8 = nms_ItemStack__init_10($var5);
            var$5 = $rt_createArray(jl_Object, 3);
            var$9 = var$5.data;
            var$9[0] = $this.$field_1681_a.data[$var4];
            var$9[1] = jl_Character_valueOf(88);
            var$9[2] = $var3;
            nms_CraftingManager_addRecipe($var1, var$8, var$5);
            $var4 = $var4_0;
        }
        $var2 = $var2 + 1 | 0;
    }
}
function nms_RecipeSorter() {
    jl_Object.call(this);
    this.$field_1557_a = null;
}
function nms_RecipeSorter__init_(var_0) {
    var var_1 = new nms_RecipeSorter();
    nms_RecipeSorter__init_0(var_1, var_0);
    return var_1;
}
function nms_RecipeSorter__init_0($this, $var1) {
    $this.$field_1557_a = $var1;
}
function nms_RecipeSorter_a($this, $var1, $var2) {
    return nms_CraftingRecipe_getRecipeSize($var2) < nms_CraftingRecipe_getRecipeSize($var1) ? (-1) : nms_CraftingRecipe_getRecipeSize($var2) <= nms_CraftingRecipe_getRecipeSize($var1) ? 0 : 1;
}
function nms_RecipeSorter_compare($this, $var1, $var2) {
    return nms_RecipeSorter_a($this, $var1, $var2);
}
function ju_Collections() {
    jl_Object.call(this);
}
var ju_Collections_EMPTY_SET = null;
var ju_Collections_EMPTY_MAP = null;
var ju_Collections_EMPTY_LIST = null;
var ju_Collections_naturalOrder = null;
var ju_Collections_reverseOrder = null;
function ju_Collections__init_0() {
    var var_0 = new ju_Collections();
    ju_Collections__init_(var_0);
    return var_0;
}
function ju_Collections__init_($this) {
    return;
}
function ju_Collections_sort($list, $c) {
    var $array, $i, var$5;
    if ($c === null)
        $c = ju_Collections_naturalOrder;
    $array = $rt_createArray(jl_Object, $list.$size);
    ju_AbstractCollection_toArray0($list, $array);
    ju_Arrays_sort($array, $c);
    $i = 0;
    while (true) {
        var$5 = $array.data;
        if ($i >= var$5.length)
            break;
        ju_ArrayList_set($list, $i, var$5[$i]);
        $i = $i + 1 | 0;
    }
}
function ju_Collections__clinit_() {
    ju_Collections_EMPTY_SET = new ju_Collections$5;
    ju_Collections_EMPTY_MAP = new ju_Collections$6;
    ju_Collections_EMPTY_LIST = new ju_Collections$3;
    ju_Collections_naturalOrder = new ju_Collections$_clinit_$lambda$_61_0;
    ju_Collections_reverseOrder = new ju_Collections$_clinit_$lambda$_61_1;
}
function ju_Collections$_clinit_$lambda$_61_0() {
    jl_Object.call(this);
}
function ju_Collections$_clinit_$lambda$_61_0__init_0() {
    var var_0 = new ju_Collections$_clinit_$lambda$_61_0();
    ju_Collections$_clinit_$lambda$_61_0__init_(var_0);
    return var_0;
}
function ju_Collections$_clinit_$lambda$_61_0__init_(var$0) {
    return;
}
function ju_Collections$_clinit_$lambda$_61_0_compare(var$0, var$1, var$2) {
    return var$1 !== null ? var$1.$compareTo5(var$2) :  -var$2.$compareTo5(var$1);
}
function ju_Collections$_clinit_$lambda$_61_1() {
    jl_Object.call(this);
}
function ju_Collections$_clinit_$lambda$_61_1__init_0() {
    var var_0 = new ju_Collections$_clinit_$lambda$_61_1();
    ju_Collections$_clinit_$lambda$_61_1__init_(var_0);
    return var_0;
}
function ju_Collections$_clinit_$lambda$_61_1__init_(var$0) {
    return;
}
function ju_Collections$5() {
    ju_AbstractSet.call(this);
}
function ju_Collections$5__init_0() {
    var var_0 = new ju_Collections$5();
    ju_Collections$5__init_(var_0);
    return var_0;
}
function ju_Collections$5__init_($this) {
    return;
}
function ju_Collections$6() {
    ju_AbstractMap.call(this);
}
function ju_Collections$6__init_0() {
    var var_0 = new ju_Collections$6();
    ju_Collections$6__init_(var_0);
    return var_0;
}
function ju_Collections$6__init_($this) {
    return;
}
function ju_Collections$3() {
    ju_AbstractList.call(this);
}
function ju_Collections$3__init_0() {
    var var_0 = new ju_Collections$3();
    ju_Collections$3__init_(var_0);
    return var_0;
}
function ju_Collections$3__init_($this) {
    return;
}
function jn_IntBufferOverByteBuffer() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$byteByffer = null;
    a.$readOnly4 = 0;
    a.$start6 = 0;
}
function jn_IntBufferOverByteBuffer__init_0(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBuffer();
    jn_IntBufferOverByteBuffer__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start6 = $start;
    $this.$byteByffer = $byteBuffer;
    $this.$readOnly4 = $readOnly;
}
function jn_IntBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly4;
}
function jn_IntBufferOverByteBufferLittleEndian() {
    jn_IntBufferOverByteBuffer.call(this);
}
function jn_IntBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3;
    var$2 = $this.$byteByffer.$array0.data;
    var$3 = $this.$start6;
    $index = $index * 4 | 0;
    return var$2[var$3 + $index | 0] & 255 | ($this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 3 | 0] & 255) << 24;
}
function jn_IntBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4;
    var$3 = $this.$byteByffer.$array0.data;
    var$4 = $this.$start6;
    $index = $index * 4 | 0;
    var$3[var$4 + $index | 0] = $value << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
function jn_IntBufferOverByteBufferBigEndian() {
    jn_IntBufferOverByteBuffer.call(this);
}
function jn_IntBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3;
    var$2 = $this.$byteByffer.$array0.data;
    var$3 = $this.$start6;
    $index = $index * 4 | 0;
    return (var$2[var$3 + $index | 0] & 255) << 24 | ($this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 3 | 0] & 255;
}
function jn_IntBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4;
    var$3 = $this.$byteByffer.$array0.data;
    var$4 = $this.$start6;
    $index = $index * 4 | 0;
    var$3[var$4 + $index | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start6 + $index | 0) + 3 | 0] = $value << 24 >> 24;
}
function nms_FontAllowedCharacters() {
    jl_Object.call(this);
}
var nms_FontAllowedCharacters_allowedChars = null;
var nms_FontAllowedCharacters_field_22286_b = null;
function nms_FontAllowedCharacters__init_0() {
    var var_0 = new nms_FontAllowedCharacters();
    nms_FontAllowedCharacters__init_(var_0);
    return var_0;
}
function nms_FontAllowedCharacters__init_($this) {
    return;
}
function nms_FontAllowedCharacters_isAllowed($c) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= nms_FontAllowedCharacters_allowedChars.data.length)
            return (-1);
        if ($c == nms_FontAllowedCharacters_allowedChars.data[$i])
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function nms_FontAllowedCharacters__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(144);
    var$2 = var$1.data;
    var$2[0] = 32;
    var$2[1] = 33;
    var$2[2] = 34;
    var$2[3] = 35;
    var$2[4] = 36;
    var$2[5] = 37;
    var$2[6] = 38;
    var$2[7] = 39;
    var$2[8] = 40;
    var$2[9] = 41;
    var$2[10] = 42;
    var$2[11] = 43;
    var$2[12] = 44;
    var$2[13] = 45;
    var$2[14] = 46;
    var$2[15] = 47;
    var$2[16] = 48;
    var$2[17] = 49;
    var$2[18] = 50;
    var$2[19] = 51;
    var$2[20] = 52;
    var$2[21] = 53;
    var$2[22] = 54;
    var$2[23] = 55;
    var$2[24] = 56;
    var$2[25] = 57;
    var$2[26] = 58;
    var$2[27] = 59;
    var$2[28] = 60;
    var$2[29] = 61;
    var$2[30] = 62;
    var$2[31] = 63;
    var$2[32] = 64;
    var$2[33] = 65;
    var$2[34] = 66;
    var$2[35] = 67;
    var$2[36] = 68;
    var$2[37] = 69;
    var$2[38] = 70;
    var$2[39] = 71;
    var$2[40] = 72;
    var$2[41] = 73;
    var$2[42] = 74;
    var$2[43] = 75;
    var$2[44] = 76;
    var$2[45] = 77;
    var$2[46] = 78;
    var$2[47] = 79;
    var$2[48] = 80;
    var$2[49] = 81;
    var$2[50] = 82;
    var$2[51] = 83;
    var$2[52] = 84;
    var$2[53] = 85;
    var$2[54] = 86;
    var$2[55] = 87;
    var$2[56] = 88;
    var$2[57] = 89;
    var$2[58] = 90;
    var$2[59] = 91;
    var$2[60] = 92;
    var$2[61] = 93;
    var$2[62] = 94;
    var$2[63] = 95;
    var$2[64] = 39;
    var$2[65] = 97;
    var$2[66] = 98;
    var$2[67] = 99;
    var$2[68] = 100;
    var$2[69] = 101;
    var$2[70] = 102;
    var$2[71] = 103;
    var$2[72] = 104;
    var$2[73] = 105;
    var$2[74] = 106;
    var$2[75] = 107;
    var$2[76] = 108;
    var$2[77] = 109;
    var$2[78] = 110;
    var$2[79] = 111;
    var$2[80] = 112;
    var$2[81] = 113;
    var$2[82] = 114;
    var$2[83] = 115;
    var$2[84] = 116;
    var$2[85] = 117;
    var$2[86] = 118;
    var$2[87] = 119;
    var$2[88] = 120;
    var$2[89] = 121;
    var$2[90] = 122;
    var$2[91] = 123;
    var$2[92] = 124;
    var$2[93] = 125;
    var$2[94] = 126;
    var$2[95] = 8962;
    var$2[96] = 199;
    var$2[97] = 252;
    var$2[98] = 233;
    var$2[99] = 226;
    var$2[100] = 228;
    var$2[101] = 224;
    var$2[102] = 229;
    var$2[103] = 231;
    var$2[104] = 234;
    var$2[105] = 235;
    var$2[106] = 232;
    var$2[107] = 239;
    var$2[108] = 238;
    var$2[109] = 236;
    var$2[110] = 196;
    var$2[111] = 197;
    var$2[112] = 201;
    var$2[113] = 230;
    var$2[114] = 198;
    var$2[115] = 244;
    var$2[116] = 246;
    var$2[117] = 242;
    var$2[118] = 251;
    var$2[119] = 249;
    var$2[120] = 255;
    var$2[121] = 214;
    var$2[122] = 220;
    var$2[123] = 248;
    var$2[124] = 163;
    var$2[125] = 216;
    var$2[126] = 215;
    var$2[127] = 402;
    var$2[128] = 225;
    var$2[129] = 237;
    var$2[130] = 243;
    var$2[131] = 250;
    var$2[132] = 241;
    var$2[133] = 209;
    var$2[134] = 170;
    var$2[135] = 186;
    var$2[136] = 191;
    var$2[137] = 174;
    var$2[138] = 172;
    var$2[139] = 189;
    var$2[140] = 188;
    var$2[141] = 161;
    var$2[142] = 171;
    var$2[143] = 187;
    nms_FontAllowedCharacters_allowedChars = var$1;
    var$1 = $rt_createCharArray(15);
    var$2 = var$1.data;
    var$2[0] = 47;
    var$2[1] = 10;
    var$2[2] = 13;
    var$2[3] = 9;
    var$2[4] = 0;
    var$2[5] = 12;
    var$2[6] = 96;
    var$2[7] = 63;
    var$2[8] = 42;
    var$2[9] = 92;
    var$2[10] = 60;
    var$2[11] = 62;
    var$2[12] = 124;
    var$2[13] = 34;
    var$2[14] = 58;
    nms_FontAllowedCharacters_field_22286_b = var$1;
}
function ju_Date() {
    jl_Object.call(this);
    this.$value2 = Long_ZERO;
}
function ju_Date__init_0() {
    var var_0 = new ju_Date();
    ju_Date__init_(var_0);
    return var_0;
}
function ju_Date__init_($this) {
    $this.$value2 = jl_System_currentTimeMillis();
}
function ju_Date_getTime($this) {
    return $this.$value2;
}
function ju_Date__clinit_() {
    return;
}
function nms_RenderSorter() {
    jl_Object.call(this);
    this.$field_4274_a = null;
}
function nms_RenderSorter_a($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = $var1.$field_1749_o;
    $var4 = $var2.$field_1749_o;
    if ($var3 && !$var4)
        return 1;
    if ($var4 && !$var3)
        return (-1);
    $var3 = $rt_compare(nms_WorldRenderer_func_1202_a($var1, $this.$field_4274_a), nms_WorldRenderer_func_1202_a($var2, $this.$field_4274_a));
    return $var3 < 0 ? 1 : $var3 > 0 ? (-1) : $var1.$field_1735_w >= $var2.$field_1735_w ? (-1) : 1;
}
function nms_RenderSorter_compare($this, $var1, $var2) {
    return nms_RenderSorter_a($this, $var1, $var2);
}
function nms_EntitySorter() {
    jl_Object.call(this);
    this.$field_1594_a = null;
}
function nms_EntitySorter__init_(var_0) {
    var var_1 = new nms_EntitySorter();
    nms_EntitySorter__init_0(var_1, var_0);
    return var_1;
}
function nms_EntitySorter__init_0($this, $var1) {
    $this.$field_1594_a = $var1;
}
function nms_EntitySorter_a($this, $var1, $var2) {
    return nms_WorldRenderer_func_1202_a($var1, $this.$field_1594_a) >= nms_WorldRenderer_func_1202_a($var2, $this.$field_1594_a) ? 1 : (-1);
}
function nms_EntitySorter_compare($this, $var1, $var2) {
    return nms_EntitySorter_a($this, $var1, $var2);
}
function nms_TileEntityRenderer() {
    var a = this; jl_Object.call(a);
    a.$specialRendererMap = null;
    a.$fontRenderer1 = null;
    a.$renderEngine2 = null;
    a.$worldObj8 = null;
    a.$entityPlayer = null;
    a.$playerYaw = 0.0;
    a.$playerPitch = 0.0;
    a.$playerX = 0.0;
    a.$playerY = 0.0;
    a.$playerZ = 0.0;
}
var nms_TileEntityRenderer_instance = null;
var nms_TileEntityRenderer_staticPlayerX = 0.0;
var nms_TileEntityRenderer_staticPlayerY = 0.0;
var nms_TileEntityRenderer_staticPlayerZ = 0.0;
function nms_TileEntityRenderer__init_0() {
    var var_0 = new nms_TileEntityRenderer();
    nms_TileEntityRenderer__init_(var_0);
    return var_0;
}
function nms_TileEntityRenderer__init_($this) {
    var $var1;
    $this.$specialRendererMap = ju_HashMap__init_0();
    ju_HashMap_putImpl($this.$specialRendererMap, $rt_cls(nms_TileEntitySign), nms_TileEntitySignRenderer__init_0());
    ju_HashMap_putImpl($this.$specialRendererMap, $rt_cls(nms_TileEntityMobSpawner), nms_TileEntityMobSpawnerRenderer__init_0());
    $var1 = ju_HashMap$2_iterator(ju_HashMap_values($this.$specialRendererMap));
    while (ju_HashMap$AbstractMapIterator_hasNext($var1)) {
        ju_HashMap$ValueIterator_next($var1).$tileEntityRenderer = $this;
    }
}
function nms_TileEntityRenderer_getSpecialRendererForClass($this, $var1) {
    var $var2;
    $var2 = ju_HashMap_get($this.$specialRendererMap, $var1);
    if ($var2 === null && $var1 !== $rt_cls(nms_TileEntity)) {
        $var2 = nms_TileEntityRenderer_getSpecialRendererForClass($this, jl_Class_getSuperclass($var1));
        ju_HashMap_putImpl($this.$specialRendererMap, $var1, $var2);
    }
    return $var2;
}
function nms_TileEntityRenderer_hasSpecialRenderer($this, $var1) {
    return nms_TileEntityRenderer_getSpecialRendererForEntity($this, $var1) === null ? 0 : 1;
}
function nms_TileEntityRenderer_getSpecialRendererForEntity($this, $var1) {
    return $var1 === null ? null : nms_TileEntityRenderer_getSpecialRendererForClass($this, jl_Object_getClass($var1));
}
function nms_TileEntityRenderer_setRenderingContext($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, var$7, var$8;
    $this.$worldObj8 = $var1;
    $this.$renderEngine2 = $var2;
    $this.$entityPlayer = $var4;
    $this.$fontRenderer1 = $var3;
    $this.$playerYaw = $var4.$prevRotationYaw + ($var4.$rotationYaw - $var4.$prevRotationYaw) * $var5;
    $this.$playerPitch = $var4.$prevRotationPitch + ($var4.$rotationPitch - $var4.$prevRotationPitch) * $var5;
    var$6 = $var4.$lastTickPosX;
    var$7 = $var4.$posX - $var4.$lastTickPosX;
    var$8 = $var5;
    $this.$playerX = var$6 + var$7 * var$8;
    $this.$playerY = $var4.$lastTickPosY + ($var4.$posY - $var4.$lastTickPosY) * var$8;
    $this.$playerZ = $var4.$lastTickPosZ + ($var4.$posZ - $var4.$lastTickPosZ) * var$8;
}
function nms_TileEntityRenderer_renderTileEntity($this, $var1, $var2) {
    var $var3, var$4, var$5, var$6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if (nms_TileEntity_getDistanceFrom($var1, $this.$playerX, $this.$playerY, $this.$playerZ) >= 4096.0)
            return;
        $var3 = nms_World_getLightBrightness($this.$worldObj8, $var1.$xCoord0, $var1.$yCoord0, $var1.$zCoord0);
        olo_EaglerAdapterGL30_glColor3f($var3, $var3, $var3);
        var$4 = $var1.$xCoord0 - nms_TileEntityRenderer_staticPlayerX;
        var$5 = $var1.$yCoord0 - nms_TileEntityRenderer_staticPlayerY;
        var$6 = $var1.$zCoord0 - nms_TileEntityRenderer_staticPlayerZ;
        $ptr = 1;
    case 1:
        nms_TileEntityRenderer_renderTileEntityAt($this, $var1, var$4, var$5, var$6, $var2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, var$4, var$5, var$6, $ptr);
}
function nms_TileEntityRenderer_renderTileEntityAt($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var9 = nms_TileEntityRenderer_getSpecialRendererForEntity($this, $var1);
        if ($var9 === null)
            return;
        $ptr = 1;
    case 1:
        $var9.$renderTileEntityAt($var1, $var2, $var4, $var6, $var8);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $ptr);
}
function nms_TileEntityRenderer_getFontRenderer($this) {
    return $this.$fontRenderer1;
}
function nms_TileEntityRenderer__clinit_() {
    nms_TileEntityRenderer_instance = nms_TileEntityRenderer__init_0();
}
function nms_MovementInput() {
    var a = this; jl_Object.call(a);
    a.$field_1174_a = 0.0;
    a.$field_1173_b = 0.0;
    a.$field_1177_c = 0;
    a.$field_1176_d = 0;
    a.$field_1175_e = 0;
}
function nms_MovementInput__init_0() {
    var var_0 = new nms_MovementInput();
    nms_MovementInput__init_(var_0);
    return var_0;
}
function nms_MovementInput__init_($this) {
    $this.$field_1174_a = 0.0;
    $this.$field_1173_b = 0.0;
    $this.$field_1177_c = 0;
    $this.$field_1176_d = 0;
    $this.$field_1175_e = 0;
}
function nms_MovementInputFromOptions() {
    var a = this; nms_MovementInput.call(a);
    a.$field_1179_f = null;
    a.$field_1178_g = null;
}
function nms_MovementInputFromOptions__init_(var_0) {
    var var_1 = new nms_MovementInputFromOptions();
    nms_MovementInputFromOptions__init_0(var_1, var_0);
    return var_1;
}
function nms_MovementInputFromOptions__init_0($this, $var1) {
    nms_MovementInput__init_($this);
    $this.$field_1179_f = $rt_createBooleanArray(10);
    $this.$field_1178_g = $var1;
}
function nms_MovementInputFromOptions_func_796_a($this, $var1, $var2) {
    var $var3;
    $var3 = (-1);
    if ($var1 == $this.$field_1178_g.$keyBindForward.$keyCode)
        $var3 = 0;
    if ($var1 == $this.$field_1178_g.$keyBindBack.$keyCode)
        $var3 = 1;
    if ($var1 == $this.$field_1178_g.$keyBindLeft.$keyCode)
        $var3 = 2;
    if ($var1 == $this.$field_1178_g.$keyBindRight.$keyCode)
        $var3 = 3;
    if ($var1 == $this.$field_1178_g.$keyBindJump.$keyCode)
        $var3 = 4;
    if ($var1 == $this.$field_1178_g.$keyBindSneak.$keyCode)
        $var3 = 5;
    if ($var3 >= 0)
        $this.$field_1179_f.data[$var3] = $var2;
}
function nms_MovementInputFromOptions_func_798_a($this) {
    var $var1;
    $var1 = 0;
    while ($var1 < 10) {
        $this.$field_1179_f.data[$var1] = 0;
        $var1 = $var1 + 1 | 0;
    }
}
function nms_MovementInputFromOptions_func_797_a($this, $var1) {
    $this.$field_1174_a = 0.0;
    $this.$field_1173_b = 0.0;
    if ($this.$field_1179_f.data[0])
        $this.$field_1173_b = $this.$field_1173_b + 1.0;
    if ($this.$field_1179_f.data[1])
        $this.$field_1173_b = $this.$field_1173_b - 1.0;
    if ($this.$field_1179_f.data[2])
        $this.$field_1174_a = $this.$field_1174_a + 1.0;
    if ($this.$field_1179_f.data[3])
        $this.$field_1174_a = $this.$field_1174_a - 1.0;
    $this.$field_1176_d = $this.$field_1179_f.data[4];
    $this.$field_1175_e = $this.$field_1179_f.data[5];
    if ($this.$field_1175_e) {
        $this.$field_1174_a = $this.$field_1174_a * 0.3;
        $this.$field_1173_b = $this.$field_1173_b * 0.3;
    }
}
function cjj_Inflate$Return() {
    var a = this; jl_Exception.call(a);
    a.$r = 0;
    a.$this$03 = null;
}
function cjj_Inflate$Return__init_(var_0, var_1) {
    var var_2 = new cjj_Inflate$Return();
    cjj_Inflate$Return__init_0(var_2, var_0, var_1);
    return var_2;
}
function cjj_Inflate$Return__init_0($this, var$1, $r) {
    $this.$this$03 = var$1;
    jl_Throwable__init_0($this);
    $this.$r = $r;
}
function cjj_GZIPHeader() {
    var a = this; jl_Object.call(a);
    a.$text = 0;
    a.$fhcrc = 0;
    a.$time0 = Long_ZERO;
    a.$xflags = 0;
    a.$os = 0;
    a.$extra = null;
    a.$name4 = null;
    a.$comment = null;
    a.$hcrc = 0;
    a.$crc = Long_ZERO;
    a.$done = 0;
    a.$mtime = Long_ZERO;
}
function cjj_GZIPHeader__init_0() {
    var var_0 = new cjj_GZIPHeader();
    cjj_GZIPHeader__init_(var_0);
    return var_0;
}
function cjj_GZIPHeader__init_($this) {
    $this.$text = 0;
    $this.$fhcrc = 0;
    $this.$os = 255;
    $this.$done = 0;
    $this.$mtime = Long_ZERO;
}
function cjj_GZIPHeader_setCRC($this, $crc) {
    $this.$crc = $crc;
}
function cjj_GZIPHeader_put($this, $d) {
    var $flag, $xfl;
    $flag = 0;
    if ($this.$text)
        $flag = 1;
    if ($this.$fhcrc)
        $flag = $flag | 2;
    if ($this.$extra !== null)
        $flag = $flag | 4;
    if ($this.$name4 !== null)
        $flag = $flag | 8;
    if ($this.$comment !== null)
        $flag = $flag | 16;
    $xfl = 0;
    if ($d.$level == 1)
        $xfl = 4;
    else if ($d.$level == 9)
        $xfl = 2;
    cjj_Deflate_put_short($d, (-29921));
    cjj_Deflate_put_byte($d, 8);
    cjj_Deflate_put_byte($d, $flag << 24 >> 24);
    cjj_Deflate_put_byte($d, $this.$mtime.lo << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_shr($this.$mtime, 8).lo << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_shr($this.$mtime, 16).lo << 24 >> 24);
    cjj_Deflate_put_byte($d, Long_shr($this.$mtime, 24).lo << 24 >> 24);
    cjj_Deflate_put_byte($d, $xfl << 24 >> 24);
    cjj_Deflate_put_byte($d, $this.$os << 24 >> 24);
    if ($this.$extra !== null) {
        cjj_Deflate_put_byte($d, $this.$extra.data.length << 24 >> 24);
        cjj_Deflate_put_byte($d, $this.$extra.data.length >> 8 << 24 >> 24);
        cjj_Deflate_put_byte0($d, $this.$extra, 0, $this.$extra.data.length);
    }
    if ($this.$name4 !== null) {
        cjj_Deflate_put_byte0($d, $this.$name4, 0, $this.$name4.data.length);
        cjj_Deflate_put_byte($d, 0);
    }
    if ($this.$comment !== null) {
        cjj_Deflate_put_byte0($d, $this.$comment, 0, $this.$comment.data.length);
        cjj_Deflate_put_byte($d, 0);
    }
}
function cjj_CRC32() {
    jl_Object.call(this);
    this.$v0 = 0;
}
var cjj_CRC32_crc_table = null;
function cjj_CRC32__init_0() {
    var var_0 = new cjj_CRC32();
    cjj_CRC32__init_(var_0);
    return var_0;
}
function cjj_CRC32__init_($this) {
    $this.$v0 = 0;
}
function cjj_CRC32_update($this, $buf, $index, $len) {
    var $c, var$5, var$6, var$7;
    $c = $this.$v0 ^ (-1);
    while (true) {
        $len = $len + (-1) | 0;
        if ($len < 0)
            break;
        var$5 = $buf.data;
        var$6 = cjj_CRC32_crc_table.data;
        var$7 = $index + 1 | 0;
        $c = var$6[($c ^ var$5[$index]) & 255] ^ $c >>> 8;
        $index = var$7;
    }
    $this.$v0 = $c ^ (-1);
}
function cjj_CRC32_reset($this) {
    $this.$v0 = 0;
}
function cjj_CRC32_reset0($this, $vv) {
    $this.$v0 = Long_and($vv, new Long(4294967295, 0)).lo;
}
function cjj_CRC32_getValue($this) {
    return Long_and(Long_fromInt($this.$v0), new Long(4294967295, 0));
}
function cjj_CRC32__clinit_() {
    var $n, $k, var$3;
    cjj_CRC32_crc_table = null;
    cjj_CRC32_crc_table = $rt_createIntArray(256);
    $n = 0;
    while ($n < 256) {
        $k = 8;
        var$3 = $n;
        while (true) {
            $k = $k + (-1) | 0;
            if ($k < 0)
                break;
            if (!(var$3 & 1)) {
                var$3 = var$3 >>> 1;
                continue;
            }
            var$3 = (-306674912) ^ var$3 >>> 1;
        }
        cjj_CRC32_crc_table.data[$n] = var$3;
        $n = $n + 1 | 0;
    }
}
function jur_Pattern() {
    var a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags0 = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start = null;
}
function jur_Pattern__init_0() {
    var var_0 = new jur_Pattern();
    jur_Pattern__init_(var_0);
    return var_0;
}
function jur_Pattern_matcher($this, $input) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$2 = new jur_Matcher;
    var$2.$leftBound = (-1);
    var$2.$rightBound = (-1);
    var$2.$pat = $this;
    var$2.$start7 = $this.$start;
    var$2.$string = $input;
    var$2.$leftBound = 0;
    var$2.$rightBound = jl_String_length(var$2.$string);
    var$3 = new jur_MatchResultImpl;
    var$4 = var$2.$leftBound;
    var$5 = var$2.$rightBound;
    var$6 = $this.$globalGroupIndex;
    var$7 = jur_Pattern_compCount($this);
    var$8 = jur_Pattern_consCount($this);
    var$3.$previousMatch = (-1);
    var$9 = var$6 + 1 | 0;
    var$3.$groupCount = var$9;
    var$3.$groupBounds = $rt_createIntArray(var$9 * 2 | 0);
    var$3.$consumers = $rt_createIntArray(var$8);
    ju_Arrays_fill0(var$3.$consumers, (-1));
    if (var$7 > 0)
        var$3.$compQuantCounters = $rt_createIntArray(var$7);
    ju_Arrays_fill0(var$3.$groupBounds, (-1));
    jur_MatchResultImpl_reset(var$3, $input, var$4, var$5);
    var$2.$matchResult = var$3;
    return var$2;
}
function jur_Pattern_split0($this, $inputSeq, $limit) {
    var $res, $mat, $index, $curPos, var$7, var$8;
    $res = ju_ArrayList__init_0();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!jl_String_length($inputSeq)) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(17);
        return var$7;
    }
    while (jur_Matcher_find($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        ju_ArrayList_add($res, jl_String_substring0($inputSeq, $curPos, jur_Matcher_start($mat)));
        $curPos = jur_Matcher_end($mat);
        $index = var$8;
    }
    a: {
        ju_ArrayList_add($res, jl_String_substring0($inputSeq, $curPos, jl_String_length($inputSeq)));
        $index = $index + 1 | 0;
        if (!$limit)
            while (true) {
                $index = $index + (-1) | 0;
                if ($index < 0)
                    break;
                if (jl_String_length(ju_ArrayList_get($res, $index)))
                    break a;
                ju_ArrayList_remove($res, $index);
            }
    }
    if ($index < 0)
        $index = 0;
    return ju_AbstractCollection_toArray0($res, $rt_createArray(jl_String, $index));
}
function jur_Pattern_split($this, $input) {
    return jur_Pattern_split0($this, $input, 0);
}
function jur_Pattern_pattern($this) {
    return $this.$lexemes.$orig;
}
function jur_Pattern_processExpression($this, $ch, $newFlags, $last) {
    var $children, $saveFlags, $saveChangedFlags, $fSet, $child;
    $children = ju_ArrayList__init_0();
    $saveFlags = $this.$flags0;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags0)
        $this.$flags0 = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_0($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_0();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_0();
    }
    while (true) {
        if (jur_Lexer_isLetter($this.$lexemes) && $this.$lexemes.$lookAhead == (-536870788)) {
            $last = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
            while (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes) && !($this.$lexemes.$lookAhead && $this.$lexemes.$lookAhead != (-536870788) && $this.$lexemes.$lookAhead != (-536870871))) {
                jur_CharClass_add($last, jur_Lexer_next($this.$lexemes));
                if ($this.$lexemes.$ch != (-536870788))
                    continue;
                jur_Lexer_next($this.$lexemes);
            }
            $child = jur_Pattern_processRangeSet($this, $last);
            $child.$setNext($fSet);
        } else if ($this.$lexemes.$ch == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            jur_Lexer_next($this.$lexemes);
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$ch == (-536870788))
                jur_Lexer_next($this.$lexemes);
        }
        if ($child !== null)
            ju_ArrayList_add($children, $child);
        if (jur_Lexer_isEmpty($this.$lexemes))
            break;
        if ($this.$lexemes.$ch == (-536870871))
            break;
    }
    if ($this.$lexemes.$lookBack == (-536870788))
        ju_ArrayList_add($children, jur_EmptySet__init_($fSet));
    if ($this.$flags0 != $saveFlags && !$saveChangedFlags) {
        $this.$flags0 = $saveFlags;
        jur_Lexer_restoreFlags($this.$lexemes, $this.$flags0);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            $last = new jur_PositiveLookAhead;
            jur_JointSet__init_0($last, $children, $fSet);
            return $last;
        case -268435416:
            $last = new jur_NegativeLookAhead;
            jur_JointSet__init_0($last, $children, $fSet);
            return $last;
        case -134217688:
            $last = new jur_PositiveLookBehind;
            jur_JointSet__init_0($last, $children, $fSet);
            return $last;
        case -67108824:
            $last = new jur_NegativeLookBehind;
            jur_JointSet__init_0($last, $children, $fSet);
            return $last;
        case -33554392:
            $last = new jur_AtomicJointSet;
            jur_JointSet__init_0($last, $children, $fSet);
            return $last;
        default:
            switch ($children.$size) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_(ju_ArrayList_get($children, 0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    $last = new jur_NonCapJointSet;
    jur_JointSet__init_0($last, $children, $fSet);
    return $last;
}
function jur_Pattern_processDecomposedChar($this) {
    var $codePoints, $curSymb, $curSymbIndex, $codePointsHangul, $readCodePoints, var$6;
    $codePoints = $rt_createIntArray(4);
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $codePointsHangul = $codePoints.data;
        $curSymb = jur_Lexer_next($this.$lexemes);
        $codePointsHangul[0] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        $codePoints = $codePointsHangul.data;
        $codePoints[0] = $curSymb & 65535;
        $readCodePoints = $this.$lexemes.$ch;
        $curSymb = $readCodePoints - 4449 | 0;
        if ($curSymb >= 0 && $curSymb < 21) {
            $codePoints[1] = $readCodePoints & 65535;
            jur_Lexer_next($this.$lexemes);
            $readCodePoints = $this.$lexemes.$ch;
            $curSymbIndex = $readCodePoints - 4519 | 0;
            if ($curSymbIndex >= 0 && $curSymbIndex < 28) {
                $codePoints[2] = $readCodePoints & 65535;
                jur_Lexer_next($this.$lexemes);
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_($codePoints[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_($codePoints[0]);
        return jur_CICharSet__init_($codePoints[0]);
    }
    $codePointsHangul = $codePoints.data;
    $curSymb = 1;
    while ($curSymb < 4 && !jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $readCodePoints = $curSymb + 1 | 0;
        $codePointsHangul[$curSymb] = jur_Lexer_next($this.$lexemes);
        $curSymb = $readCodePoints;
    }
    if ($curSymb == 1) {
        $readCodePoints = $codePointsHangul[0];
        if (!(jur_Lexer_singleDecompTable.$get10($readCodePoints) == jur_Lexer_singleDecompTableSize ? 0 : 1))
            return jur_Pattern_processCharSet($this, $codePointsHangul[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_($codePoints, $curSymb);
    if (jur_Pattern_hasFlag($this, 64)) {
        var$6 = new jur_UCIDecomposedCharSet;
        jur_DecomposedCharSet__init_0(var$6, $codePoints, $curSymb);
        return var$6;
    }
    var$6 = new jur_CIDecomposedCharSet;
    jur_DecomposedCharSet__init_0(var$6, $codePoints, $curSymb);
    return var$6;
}
function jur_Pattern_processSubExpression($this, $last) {
    var $cur, $term, var$4, $next;
    if (jur_Lexer_isLetter($this.$lexemes) && !jur_Lexer_isNextSpecial($this.$lexemes) && jur_Lexer_isLetter0($this.$lexemes.$lookAhead)) {
        if (jur_Pattern_hasFlag($this, 128)) {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!jur_Lexer_isEmpty($this.$lexemes) && !($this.$lexemes.$ch == (-536870871) && !($last instanceof jur_FinalSet)) && $this.$lexemes.$ch != (-536870788) && !jur_Lexer_isLetter($this.$lexemes))
                $cur = jur_Pattern_processQuantifier($this, $last, $cur);
        } else if (!jur_Lexer_isHighSurrogate($this.$lexemes) && !jur_Lexer_isLowSurrogate($this.$lexemes)) {
            $term = new jl_StringBuffer;
            jl_AbstractStringBuilder__init_($term);
            while (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes) && !jur_Lexer_isHighSurrogate($this.$lexemes) && !jur_Lexer_isLowSurrogate($this.$lexemes) && !(!(!jur_Lexer_isNextSpecial($this.$lexemes) && !$this.$lexemes.$lookAhead) && !(!jur_Lexer_isNextSpecial($this.$lexemes) && jur_Lexer_isLetter0($this.$lexemes.$lookAhead)) && $this.$lexemes.$lookAhead != (-536870871) && ($this.$lexemes.$lookAhead & (-2147418113)) != (-2147483608) && $this.$lexemes.$lookAhead != (-536870788)
            && $this.$lexemes.$lookAhead != (-536870876))) {
                var$4 = jur_Lexer_next($this.$lexemes);
                if (!jl_Character_isSupplementaryCodePoint(var$4))
                    jl_AbstractStringBuilder_append($term, var$4 & 65535);
                else
                    jl_AbstractStringBuilder_append2($term, jl_Character_toChars(var$4));
            }
            if (!jur_Pattern_hasFlag($this, 2))
                $cur = jur_SequenceSet__init_($term);
            else if (jur_Pattern_hasFlag($this, 64))
                $cur = jur_UCISequenceSet__init_($term);
            else {
                $cur = new jur_CISequenceSet;
                jur_LeafSet__init_($cur);
                $cur.$string0 = jl_AbstractStringBuilder_toString($term);
                $cur.$charCount = jl_StringBuffer_length($term);
            }
        } else
            $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
    } else if ($this.$lexemes.$ch != (-536870871))
        $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
    else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$lexemes.$orig, $this.$lexemes.$curToc));
        $cur = jur_EmptySet__init_($last);
    }
    if (!jur_Lexer_isEmpty($this.$lexemes) && !($this.$lexemes.$ch == (-536870871) && !($last instanceof jur_FinalSet)) && $this.$lexemes.$ch != (-536870788)) {
        $next = jur_Pattern_processSubExpression($this, $last);
        if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
            $last = $cur;
            if (!$next.$first0($last.$innerSet)) {
                $cur = new jur_UnifiedQuantifierSet;
                jur_LeafQuantifierSet__init_($cur, $last.$innerSet, $last.$next6, $last.$type);
                $cur.$innerSet.$setNext($cur);
            }
        }
        if (($next.$getType1() & 65535) != 43)
            $cur.$setNext($next);
        else
            $cur.$setNext($next.$innerSet);
    } else {
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType1() & 65535) != 43)
        return $cur;
    return $cur.$innerSet;
}
function jur_Pattern_processQuantifier($this, $last, $term) {
    var $quant, $leaf, $q, var$6;
    $quant = $this.$lexemes.$ch;
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                jur_Lexer_next($this.$lexemes);
                $leaf = new jur_PossessiveGroupQuantifierSet;
                jur_QuantifierSet__init_($leaf, $term, $last, $quant);
                $term.$setNext(jur_FSet_posFSet);
                return $leaf;
            case -2147483605:
                jur_Lexer_next($this.$lexemes);
                $leaf = new jur_PosPlusGroupQuantifierSet;
                jur_QuantifierSet__init_($leaf, $term, $last, (-2147483606));
                $term.$setNext(jur_FSet_posFSet);
                return $leaf;
            case -2147483585:
                jur_Lexer_next($this.$lexemes);
                $leaf = new jur_PosAltGroupQuantifierSet;
                jur_QuantifierSet__init_($leaf, $term, $last, (-536870849));
                $term.$setNext(jur_FSet_posFSet);
                return $leaf;
            case -2147483525:
                $leaf = new jur_PosCompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($this.$lexemes);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_CompositeGroupQuantifierSet__init_($leaf, $q, $term, $last, (-536870849), $quant);
                $term.$setNext(jur_FSet_posFSet);
                return $leaf;
            case -1073741782:
            case -1073741781:
                jur_Lexer_next($this.$lexemes);
                $q = new jur_ReluctantGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                jur_Lexer_next($this.$lexemes);
                $q = new jur_RelAltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                $leaf = jur_Lexer_nextSpecial($this.$lexemes);
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_($q, $leaf, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                jur_Lexer_next($this.$lexemes);
                if ($term.$getType1() != (-2147483602)) {
                    $q = new jur_GroupQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                } else if (jur_Pattern_hasFlag($this, 32)) {
                    $q = new jur_DotAllQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                } else {
                    $q = new jur_DotQuantifierSet;
                    $leaf = jur_AbstractLineTerminator_getInstance($this.$flags0);
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                    $q.$lt = $leaf;
                }
                $term.$setNext($q);
                return $q;
            case -536870849:
                jur_Lexer_next($this.$lexemes);
                $q = new jur_AltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                $leaf = jur_Lexer_nextSpecial($this.$lexemes);
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_($q, $leaf, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            jur_Lexer_next($this.$lexemes);
            $q = new jur_PossessiveQuantifierSet;
            jur_LeafQuantifierSet__init_($q, $leaf, $last, $quant);
            $leaf.$next6 = $q;
            return $q;
        case -2147483585:
            jur_Lexer_next($this.$lexemes);
            $term = new jur_PossessiveAltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-2147483585));
            return $term;
        case -2147483525:
            $term = new jur_PossessiveCompositeQuantifierSet;
            jur_CompositeQuantifierSet__init_($term, jur_Lexer_nextSpecial($this.$lexemes), $leaf, $last, (-2147483525));
            return $term;
        case -1073741782:
        case -1073741781:
            jur_Lexer_next($this.$lexemes);
            $q = new jur_ReluctantQuantifierSet;
            jur_LeafQuantifierSet__init_($q, $leaf, $last, $quant);
            $leaf.$next6 = $q;
            return $q;
        case -1073741761:
            jur_Lexer_next($this.$lexemes);
            $term = new jur_ReluctantAltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-1073741761));
            return $term;
        case -1073741701:
            $term = new jur_ReluctantCompositeQuantifierSet;
            jur_CompositeQuantifierSet__init_($term, jur_Lexer_nextSpecial($this.$lexemes), $leaf, $last, (-1073741701));
            return $term;
        case -536870870:
        case -536870869:
            jur_Lexer_next($this.$lexemes);
            $q = jur_LeafQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$next6 = $q;
            return $q;
        case -536870849:
            jur_Lexer_next($this.$lexemes);
            $term = new jur_AltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-536870849));
            return $term;
        case -536870789:
            return jur_CompositeQuantifierSet__init_0(jur_Lexer_nextSpecial($this.$lexemes), $leaf, $last, (-536870789));
        default:
    }
    return $term;
}
function jur_Pattern_processTerminal($this, $last) {
    var $term, var$3, $ch, $newFlags, $number, $negative, $cc;
    $term = null;
    var$3 = $last instanceof jur_FinalSet;
    while (true) {
        a: {
            $ch = jur_Lexer_peek($this.$lexemes);
            if (($ch & (-2147418113)) == (-2147483608)) {
                jur_Lexer_next($this.$lexemes);
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags0 = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags0;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if (jur_Lexer_peek($this.$lexemes) != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                    jur_Lexer_next($this.$lexemes);
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                $number = ($ch & 2147483647) - 48 | 0;
                                if ($this.$globalGroupIndex < $number)
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                                jur_Lexer_next($this.$lexemes);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                                $this.$backRefs.data[$number].$isBackReferenced = 1;
                                $this.$needsBackRefReplacement = 1;
                                break a;
                            case -2147483583:
                                break;
                            case -2147483582:
                                jur_Lexer_next($this.$lexemes);
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                jur_Lexer_next($this.$lexemes);
                                $term = jur_PreviousMatch__init_0();
                                break a;
                            case -2147483558:
                                jur_Lexer_next($this.$lexemes);
                                $term = new jur_EOLSet;
                                $number = $this.$consCount + 1 | 0;
                                $this.$consCount = $number;
                                jur_EOLSet__init_($term, $number);
                                break a;
                            case -2147483550:
                                jur_Lexer_next($this.$lexemes);
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                jur_Lexer_next($this.$lexemes);
                                $term = jur_EOISet__init_0();
                                break a;
                            case -536870876:
                                break c;
                            case -536870866:
                                jur_Lexer_next($this.$lexemes);
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_0();
                                    break a;
                                }
                                $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags0));
                                break a;
                            case -536870821:
                                jur_Lexer_next($this.$lexemes);
                                $negative = 0;
                                if (jur_Lexer_peek($this.$lexemes) == (-536870818)) {
                                    $negative = 1;
                                    jur_Lexer_next($this.$lexemes);
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if (jur_Lexer_peek($this.$lexemes) != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                                jur_Lexer_setMode($this.$lexemes, 1);
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            case -536870818:
                                jur_Lexer_next($this.$lexemes);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_0();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags0));
                                break a;
                            case 0:
                                $cc = jur_Lexer_peekSpecial($this.$lexemes);
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if (jur_Lexer_isEmpty($this.$lexemes)) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            default:
                                break b;
                        }
                        jur_Lexer_next($this.$lexemes);
                        $term = jur_SOLSet__init_0();
                        break a;
                    }
                    jur_Lexer_next($this.$lexemes);
                    $this.$consCount = $this.$consCount + 1 | 0;
                    if (jur_Pattern_hasFlag($this, 8)) {
                        if (jur_Pattern_hasFlag($this, 1)) {
                            $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                            break a;
                        }
                        $term = jur_MultiLineEOLSet__init_($this.$consCount);
                        break a;
                    }
                    if (jur_Pattern_hasFlag($this, 1)) {
                        $term = jur_UEOLSet__init_($this.$consCount);
                        break a;
                    }
                    $term = jur_EOLSet__init_0($this.$consCount);
                    break a;
                }
                if ($ch >= 0 && !jur_Lexer_isSpecial($this.$lexemes)) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    jur_Lexer_next($this.$lexemes);
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_(!jur_Lexer_isSpecial($this.$lexemes) ? jl_Character_toString($ch & 65535) : jur_Lexer_peekSpecial($this.$lexemes).$toString(), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                    if (var$3)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
}
function jur_Pattern_processRange($this, $negative, $last) {
    var $rangeSet;
    $rangeSet = jur_Pattern_processRangeSet($this, jur_Pattern_processRangeExpression($this, $negative));
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processRangeExpression($this, $alt) {
    var $res, $buffer, $intersection, $notClosed, $firstInClass, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    jur_AbstractCharClass_setNegative($res, $alt);
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if (jur_Lexer_isEmpty($this.$lexemes))
                    break a;
                $notClosed = $this.$lexemes.$ch == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$ch) {
                        case -536870874:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = jur_Lexer_next($this.$lexemes);
                            if ($this.$lexemes.$ch != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead == (-536870821)) {
                                jur_Lexer_next($this.$lexemes);
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            jur_Lexer_next($this.$lexemes);
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$ch == (-536870819))
                                break d;
                            jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead != (-536870819) && $this.$lexemes.$lookAhead != (-536870821) && $buffer >= 0) {
                                jur_Lexer_next($this.$lexemes);
                                $cur = $this.$lexemes.$ch;
                                if (jur_Lexer_isSpecial($this.$lexemes))
                                    break c;
                                if ($cur < 0 && $this.$lexemes.$lookAhead != (-536870819) && $this.$lexemes.$lookAhead != (-536870821) && $buffer >= 0)
                                    break c;
                                e: {
                                    try {
                                        if (jur_Lexer_isLetter0($cur))
                                            break e;
                                        $cur = $cur & 65535;
                                        break e;
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                }
                                try {
                                    jur_CharClass_add0($res, $buffer, $cur);
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_Exception) {
                                        break b;
                                    } else {
                                        throw $$e;
                                    }
                                }
                                jur_Lexer_next($this.$lexemes);
                                $buffer = (-1);
                                break d;
                            }
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = 45;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                jur_CharClass_add($res, $buffer);
                                $buffer = (-1);
                            }
                            jur_Lexer_next($this.$lexemes);
                            $negative = 0;
                            if ($this.$lexemes.$ch == (-536870818)) {
                                jur_Lexer_next($this.$lexemes);
                                $negative = 1;
                            }
                            if (!$intersection)
                                jur_CharClass_union($res, jur_Pattern_processRangeExpression($this, $negative));
                            else
                                jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = 93;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = 94;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $cs = $this.$lexemes.$curST;
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                jur_CharClass_add1($res, $cs);
                                $buffer = (-1);
                            }
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        jur_CharClass_add($res, $buffer);
                    $buffer = jur_Lexer_next($this.$lexemes);
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Pattern_pattern($this), $this.$lexemes.$curToc));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Pattern_pattern($this), $this.$lexemes.$curToc));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            jur_CharClass_add($res, $buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Pattern_pattern($this), $this.$lexemes.$curToc - 1 | 0));
}
function jur_Pattern_processCharSet($this, $ch) {
    var $isSupplCodePoint, var$3, var$4;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint) {
                var$3 = new jur_UCISupplCharSet;
                jur_LeafSet__init_(var$3);
                var$3.$charCount = 2;
                var$3.$ch0 = jl_Character_toLowerCase0(jl_Character_toUpperCase($ch));
                return var$3;
            }
            if (jur_Lexer_isLowSurrogate0($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate0($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if (!$isSupplCodePoint) {
        if (jur_Lexer_isLowSurrogate0($ch))
            return jur_LowSurrogateCharSet__init_($ch & 65535);
        if (!jur_Lexer_isHighSurrogate0($ch))
            return jur_CharSet__init_($ch & 65535);
        return jur_HighSurrogateCharSet__init_($ch & 65535);
    }
    var$3 = new jur_SupplCharSet;
    jur_LeafSet__init_(var$3);
    var$3.$charCount = 2;
    var$3.$ch1 = $ch;
    var$4 = jl_Character_toChars($ch).data;
    var$3.$high = var$4[0];
    var$3.$low = var$4[1];
    return var$3;
}
function jur_Pattern_processRangeSet($this, $charClass) {
    var $surrogates, $lowHighSurrRangeSet, var$4;
    if (!jur_AbstractCharClass_hasLowHighSurrogates($charClass)) {
        if (!$charClass.$mayContainSupplCodepoints) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if (!$charClass.$hasUCI())
            return jur_SupplRangeSet__init_($charClass);
        $surrogates = new jur_UCISupplRangeSet;
        jur_SupplRangeSet__init_0($surrogates, $charClass);
        return $surrogates;
    }
    $surrogates = jur_AbstractCharClass_getSurrogates($charClass);
    $lowHighSurrRangeSet = new jur_LowHighSurrogateRangeSet;
    jur_AbstractSet__init_($lowHighSurrRangeSet);
    $lowHighSurrRangeSet.$surrChars = $surrogates;
    $lowHighSurrRangeSet.$alt = $surrogates.$alt0;
    if (!$charClass.$mayContainSupplCodepoints) {
        if ($charClass.$hasUCI())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
    }
    if (!$charClass.$hasUCI())
        return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
    $surrogates = new jur_CompositeRangeSet;
    var$4 = new jur_UCISupplRangeSet;
    jur_SupplRangeSet__init_0(var$4, jur_AbstractCharClass_getWithoutSurrogates($charClass));
    jur_CompositeRangeSet__init_0($surrogates, var$4, $lowHighSurrRangeSet);
    return $surrogates;
}
function jur_Pattern_groupCount($this) {
    return $this.$globalGroupIndex;
}
function jur_Pattern_compCount($this) {
    return $this.$compCount + 1 | 0;
}
function jur_Pattern_consCount($this) {
    return $this.$consCount + 1 | 0;
}
function jur_Pattern_getSupplement($ch) {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
}
function jur_Pattern_hasFlag($this, $flag) {
    return ($this.$flags0 & $flag) != $flag ? 0 : 1;
}
function jur_Pattern__init_($this) {
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount = (-1);
    $this.$consCount = (-1);
}
function ju_ListIterator() {
}
function ju_LinkedList$SequentialListIterator() {
    var a = this; jl_Object.call(a);
    a.$nextEntry = null;
    a.$prevEntry0 = null;
    a.$currentEntry0 = null;
    a.$index3 = 0;
    a.$version0 = 0;
    a.$this$04 = null;
}
function ju_LinkedList$SequentialListIterator__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new ju_LinkedList$SequentialListIterator();
    ju_LinkedList$SequentialListIterator__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function ju_LinkedList$SequentialListIterator__init_0($this, var$1, $nextEntry, $prevEntry, $index) {
    $this.$this$04 = var$1;
    $this.$version0 = $this.$this$04.$modCount;
    $this.$nextEntry = $nextEntry;
    $this.$prevEntry0 = $prevEntry;
    $this.$index3 = $index;
}
function ju_LinkedList$SequentialListIterator_hasNext($this) {
    return $this.$nextEntry === null ? 0 : 1;
}
function ju_LinkedList$SequentialListIterator_next($this) {
    var $result;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    if ($this.$nextEntry === null) {
        $result = new ju_NoSuchElementException;
        jl_Throwable__init_0($result);
        $rt_throw($result);
    }
    $result = $this.$nextEntry.$item0;
    $this.$currentEntry0 = $this.$nextEntry;
    $this.$prevEntry0 = $this.$nextEntry;
    $this.$nextEntry = $this.$nextEntry.$next1;
    $this.$index3 = $this.$index3 + 1 | 0;
    return $result;
}
function ju_LinkedList$SequentialListIterator_remove($this) {
    var var$1, var$2;
    if ($this.$currentEntry0 === null) {
        var$1 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    var$1 = $this.$this$04;
    var$2 = $this.$currentEntry0;
    if (var$2.$previous === null)
        var$1.$firstEntry = var$2.$next1;
    else
        var$2.$previous.$next1 = var$2.$next1;
    if (var$2.$next1 === null)
        var$1.$lastEntry = var$2.$previous;
    else
        var$2.$next1.$previous = var$2.$previous;
    var$1.$size1 = var$1.$size1 - 1 | 0;
    var$1.$modCount = var$1.$modCount + 1 | 0;
    if ($this.$currentEntry0 === $this.$prevEntry0) {
        $this.$prevEntry0 = !ju_LinkedList$SequentialListIterator_hasNext($this) ? null : $this.$nextEntry.$previous;
        $this.$index3 = $this.$index3 - 1 | 0;
    } else if ($this.$currentEntry0 === $this.$nextEntry)
        $this.$nextEntry = !ju_LinkedList$SequentialListIterator_hasPrevious($this) ? null : $this.$prevEntry0.$next1;
    $this.$version0 = $this.$this$04.$modCount;
    $this.$currentEntry0 = null;
}
function ju_LinkedList$SequentialListIterator_hasPrevious($this) {
    return $this.$prevEntry0 === null ? 0 : 1;
}
function ju_LinkedList$SequentialListIterator_add($this, $e) {
    var $newEntry;
    ju_LinkedList$SequentialListIterator_checkConcurrentModification($this);
    $newEntry = new ju_LinkedList$Entry;
    $newEntry.$item0 = $e;
    $newEntry.$previous = $this.$prevEntry0;
    $newEntry.$next1 = $this.$nextEntry;
    if ($this.$prevEntry0 !== null)
        $this.$prevEntry0.$next1 = $newEntry;
    else
        $this.$this$04.$firstEntry = $newEntry;
    if ($this.$nextEntry !== null)
        $this.$nextEntry.$previous = $newEntry;
    else
        $this.$this$04.$lastEntry = $newEntry;
    $this.$prevEntry0 = $newEntry;
    $e = $this.$this$04;
    $e.$size1 = $e.$size1 + 1 | 0;
    $e = $this.$this$04;
    $e.$modCount = $e.$modCount + 1 | 0;
    $this.$version0 = $this.$this$04.$modCount;
    $this.$currentEntry0 = null;
}
function ju_LinkedList$SequentialListIterator_checkConcurrentModification($this) {
    var var$1;
    if ($this.$version0 >= $this.$this$04.$modCount)
        return;
    var$1 = new ju_ConcurrentModificationException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function ju_LinkedList$Entry() {
    var a = this; jl_Object.call(a);
    a.$item0 = null;
    a.$next1 = null;
    a.$previous = null;
}
function ju_LinkedList$Entry__init_0() {
    var var_0 = new ju_LinkedList$Entry();
    ju_LinkedList$Entry__init_(var_0);
    return var_0;
}
function ju_LinkedList$Entry__init_($this) {
    return;
}
function nms_CraftingRecipe() {
    var a = this; jl_Object.call(a);
    a.$width1 = 0;
    a.$height1 = 0;
    a.$ingredientMap = null;
    a.$resultStack = null;
    a.$resultId = 0;
}
function nms_CraftingRecipe_matchRecipe($this, $var1) {
    var $var2, $var3;
    $var2 = 0;
    while ($var2 <= (3 - $this.$width1 | 0)) {
        $var3 = 0;
        while ($var3 <= (3 - $this.$height1 | 0)) {
            if (nms_CraftingRecipe_matches($this, $var1, $var2, $var3, 1))
                return 1;
            if (nms_CraftingRecipe_matches($this, $var1, $var2, $var3, 0))
                return 1;
            $var3 = $var3 + 1 | 0;
        }
        $var2 = $var2 + 1 | 0;
    }
    return 0;
}
function nms_CraftingRecipe_matches($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9;
    $var5 = 0;
    while ($var5 < 3) {
        $var6 = 0;
        while ($var6 < 3) {
            $var7 = $var5 - $var2 | 0;
            $var8 = $var6 - $var3 | 0;
            $var9 = (-1);
            if ($var7 >= 0 && $var8 >= 0 && $var7 < $this.$width1 && $var8 < $this.$height1)
                $var9 = !$var4 ? $this.$ingredientMap.data[$var7 + $rt_imul($var8, $this.$width1) | 0] : $this.$ingredientMap.data[(($this.$width1 - $var7 | 0) - 1 | 0) + $rt_imul($var8, $this.$width1) | 0];
            if ($var1.data[$var5 + ($var6 * 3 | 0) | 0] != $var9)
                return 0;
            $var6 = $var6 + 1 | 0;
        }
        $var5 = $var5 + 1 | 0;
    }
    return 1;
}
function nms_CraftingRecipe_createResult($this, $var1) {
    return nms_ItemStack__init_3($this.$resultStack.$itemID, $this.$resultStack.$stackSize);
}
function nms_CraftingRecipe_getRecipeSize($this) {
    return $rt_imul($this.$width1, $this.$height1);
}
function ji_OutputStreamWriter() {
    var a = this; ji_Writer.call(a);
    a.$out1 = null;
    a.$encoder = null;
    a.$bufferData = null;
    a.$buffer0 = null;
    a.$closed0 = 0;
}
function ji_OutputStreamWriter_nullCheck($stream) {
    if ($stream !== null)
        return $stream;
    $stream = new jl_NullPointerException;
    jl_Throwable__init_0($stream);
    $rt_throw($stream);
}
function ji_OutputStreamWriter_close($this) {
    if (!$this.$closed0) {
        ji_OutputStreamWriter_flush($this);
        $this.$closed0 = 1;
    }
}
function ji_OutputStreamWriter_flush($this) {
    ji_OutputStreamWriter_checkStatus($this);
    if ($this.$buffer0.$position > 0) {
        ji_ByteArrayOutputStream_write0($this.$out1, $this.$bufferData, 0, $this.$buffer0.$position);
        jn_Buffer_clear($this.$buffer0);
    }
}
function ji_OutputStreamWriter_checkStatus($this) {
    var var$1;
    if (!$this.$closed0)
        return;
    var$1 = new ji_IOException;
    jl_Throwable__init_(var$1, $rt_s(692));
    $rt_throw(var$1);
}
function ji_OutputStreamWriter_write($this, $buf, $offset, $count) {
    var var$4, $input, var$6, $$je;
    var$4 = $this.$lock;
    jl_Object_monitorEnterSync(var$4);
    a: {
        try {
            ji_OutputStreamWriter_checkStatus($this);
            if ($buf === null)
                $rt_throw(jl_NullPointerException__init_());
            if (!($offset >= 0 && $offset <= ($buf.data.length - $count | 0) && $count >= 0))
                $rt_throw(jl_IndexOutOfBoundsException__init_0());
            $input = jn_CharBuffer_wrap0($buf, $offset, $count);
            while (jn_Buffer_hasRemaining($input)) {
                if (!jnc_CoderResult_isOverflow(jnc_CharsetEncoder_encode($this.$encoder, $input, $this.$buffer0, 0)))
                    continue;
                ji_ByteArrayOutputStream_write0($this.$out1, $this.$bufferData, 0, jn_Buffer_position($this.$buffer0));
                jn_ByteBuffer_clear($this.$buffer0);
            }
            jl_Object_monitorExitSync(var$4);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$4);
    $rt_throw(var$6);
}
function otjb_TimerHandler() {
}
function nlea_EaglerAdapterImpl2$14() {
    jl_Object.call(this);
}
function nlea_EaglerAdapterImpl2$14__init_0() {
    var var_0 = new nlea_EaglerAdapterImpl2$14();
    nlea_EaglerAdapterImpl2$14__init_(var_0);
    return var_0;
}
function nlea_EaglerAdapterImpl2$14__init_($this) {
    return;
}
function nlea_EaglerAdapterImpl2$14_onTimer($this) {
    var $t, var$2, var$3;
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_canvas.requestPointerLock();
    $t = jl_System_currentTimeMillis();
    if (nlea_EaglerAdapterImpl2_access$2000())
        clearTimeout(nlea_EaglerAdapterImpl2_access$2000());
    nlea_EaglerAdapterImpl2_access$2002(0);
    if (Long_lt(Long_sub($t, nlea_EaglerAdapterImpl2_access$2100()), Long_fromInt(3000))) {
        var$2 = new nlea_EaglerAdapterImpl2$14$1;
        var$2.$this$05 = $this;
        var$3 = 3000 - Long_sub($t, nlea_EaglerAdapterImpl2_access$2100()).lo | 0;
        nlea_EaglerAdapterImpl2_access$2002(setTimeout(otji_JS_function(var$2, "onTimer"), var$3));
    }
}
function nlea_EaglerAdapterImpl2$14_onTimer$exported$0(var$0) {
    nlea_EaglerAdapterImpl2$14_onTimer(var$0);
}
function jl_VirtualMachineError() {
    jl_Error.call(this);
}
function jl_VirtualMachineError__init_0() {
    var var_0 = new jl_VirtualMachineError();
    jl_VirtualMachineError__init_(var_0);
    return var_0;
}
function jl_VirtualMachineError__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_OutOfMemoryError() {
    jl_VirtualMachineError.call(this);
}
function jl_OutOfMemoryError__init_0() {
    var var_0 = new jl_OutOfMemoryError();
    jl_OutOfMemoryError__init_(var_0);
    return var_0;
}
function jl_OutOfMemoryError__init_($this) {
    jl_Throwable__init_0($this);
}
function jur_AbstractSet() {
    var a = this; jl_Object.call(a);
    a.$next6 = null;
    a.$isSecondPassVisited = 0;
    a.$index4 = null;
    a.$type = 0;
}
var jur_AbstractSet_counter = 0;
function jur_AbstractSet__init_0() {
    var var_0 = new jur_AbstractSet();
    jur_AbstractSet__init_(var_0);
    return var_0;
}
function jur_AbstractSet__init_1(var_0) {
    var var_1 = new jur_AbstractSet();
    jur_AbstractSet__init_2(var_1, var_0);
    return var_1;
}
function jur_AbstractSet__init_($this) {
    var var$1, var$2;
    var$1 = new jl_Integer;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    jl_Integer__init_0(var$1, var$2);
    $this.$index4 = jl_Integer_toString0(var$1);
}
function jur_AbstractSet__init_2($this, $n) {
    var var$2, var$3;
    var$2 = new jl_Integer;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    jl_Integer__init_0(var$2, var$3);
    $this.$index4 = jl_Integer_toString0(var$2);
    $this.$next6 = $n;
}
function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
    var $length;
    $length = $matchResult.$rightBound0;
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches0($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches0($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_AbstractSet_setType($this, $type) {
    $this.$type = $type;
}
function jur_AbstractSet_getType($this) {
    return $this.$type;
}
function jur_AbstractSet_getNext($this) {
    return $this.$next6;
}
function jur_AbstractSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_AbstractSet_first($this, $set) {
    return 1;
}
function jur_AbstractSet_processBackRefReplacement($this) {
    return null;
}
function jur_AbstractSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next6 !== null) {
        if (!$this.$next6.$isSecondPassVisited) {
            $set = $this.$next6.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next6.$isSecondPassVisited = 1;
                $this.$next6 = $set;
            }
            $this.$next6.$processSecondPass();
        } else if ($this.$next6 instanceof jur_SingleSet && $this.$next6.$fSet.$isBackReferenced)
            $this.$next6 = $this.$next6.$next6;
    }
}
function jur_AbstractSet__clinit_() {
    jur_AbstractSet_counter = 1;
}
function nms_TileEntitySpecialRenderer() {
    jl_Object.call(this);
    this.$tileEntityRenderer = null;
}
function nms_TileEntitySpecialRenderer_bindTextureByName($this, $var1) {
    var $var2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var2 = $this.$tileEntityRenderer.$renderEngine2;
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture($var2, $var1);
        if ($rt_suspending()) {
            break main;
        }
        var$3 = $tmp;
        nms_RenderEngine_bindTexture($var2, var$3);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, var$3, $ptr);
}
function nms_TileEntitySpecialRenderer_setTileEntityRenderer($this, $var1) {
    $this.$tileEntityRenderer = $var1;
}
function nms_TileEntitySpecialRenderer_getFontRenderer($this) {
    return $this.$tileEntityRenderer.$fontRenderer1;
}
function nms_TileEntitySignRenderer() {
    nms_TileEntitySpecialRenderer.call(this);
    this.$signModel = null;
}
function nms_TileEntitySignRenderer__init_0() {
    var var_0 = new nms_TileEntitySignRenderer();
    nms_TileEntitySignRenderer__init_(var_0);
    return var_0;
}
function nms_TileEntitySignRenderer__init_($this) {
    $this.$signModel = nms_SignModel__init_0();
}
function nms_TileEntitySignRenderer_a($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var16, $var12, $var17, $var14, $var15, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var15 = $thread.pop();$var14 = $thread.pop();$var17 = $thread.pop();$var12 = $thread.pop();$var16 = $thread.pop();$var10 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var9 = nms_TileEntity_getBlockType($var1);
        olo_EaglerAdapterGL30_glPushMatrix();
        $var10 = 0.6666666865348816;
        nms_Block_$callClinit();
        if ($var9 === nms_Block_signPost) {
            olo_EaglerAdapterGL30_glTranslatef($var2 + 0.5, $var4 + 0.5, $var6 + 0.5);
            olo_EaglerAdapterGL30_glRotatef( -((nms_TileEntity_getBlockMetadata($var1) * 360 | 0) / 16.0), 0.0, 1.0, 0.0);
            $this.$signModel.$field_1345_b.$field_1403_h = 1;
        } else {
            $var16 = nms_TileEntity_getBlockMetadata($var1);
            $var12 = 0.0;
            if ($var16 == 2)
                $var12 = 180.0;
            if ($var16 == 4)
                $var12 = 90.0;
            if ($var16 == 5)
                $var12 = (-90.0);
            olo_EaglerAdapterGL30_glTranslatef($var2 + 0.5, $var4 + 0.5, $var6 + 0.5);
            olo_EaglerAdapterGL30_glRotatef( -$var12, 0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.3125), (-0.4375));
            $this.$signModel.$field_1345_b.$field_1403_h = 0;
        }
        $var17 = $rt_s(693);
        $ptr = 1;
    case 1:
        nms_TileEntitySpecialRenderer_bindTextureByName($this, $var17);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glScalef($var10, (-0.6666666865348816), (-0.6666666865348816));
        nms_SignModel_func_887_a($this.$signModel);
        olo_EaglerAdapterGL30_glPopMatrix();
        $var17 = nms_TileEntitySpecialRenderer_getFontRenderer($this);
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.3333333432674408, 0.046666666865348816);
        olo_EaglerAdapterGL30_glScalef(0.01111111231148243, (-0.01111111231148243), 0.01111111231148243);
        olo_EaglerAdapterGL30_glNormal3f(0.0, 0.0, (-0.01111111231148243));
        olo_EaglerAdapterGL30_glDepthMask(0);
        $var14 = 0;
        while ($var14 < $var1.$signText.data.length) {
            $var15 = $var1.$signText.data[$var14];
            if ($var14 != $var1.$lineBeingEdited)
                nms_FontRenderer_drawString($var17, $var15,  -nms_FontRenderer_getStringWidth($var17, $var15) / 2 | 0, ($var14 * 10 | 0) - ($var1.$signText.data.length * 5 | 0) | 0, 0);
            else {
                $var9 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($var9);
                $var9 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var9, $rt_s(694)), $var15), $rt_s(695)));
                nms_FontRenderer_drawString($var17, $var9,  -nms_FontRenderer_getStringWidth($var17, $var9) / 2 | 0, ($var14 * 10 | 0) - ($var1.$signText.data.length * 5 | 0) | 0, 0);
            }
            $var14 = $var14 + 1 | 0;
        }
        olo_EaglerAdapterGL30_glDepthMask(1);
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var16, $var12, $var17, $var14, $var15, $ptr);
}
function nms_TileEntitySignRenderer_renderTileEntityAt($this, $var1, $var2, $var4, $var6, $var8) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_TileEntitySignRenderer_a($this, $var1, $var2, $var4, $var6, $var8);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $ptr);
}
function nms_TileEntityMobSpawner() {
    var a = this; nms_TileEntity.call(a);
    a.$delay = 0;
    a.$entityID = null;
    a.$field_831_c = 0.0;
    a.$field_830_d = 0.0;
}
function nms_TileEntityMobSpawner__init_0() {
    var var_0 = new nms_TileEntityMobSpawner();
    nms_TileEntityMobSpawner__init_(var_0);
    return var_0;
}
function nms_TileEntityMobSpawner__init_($this) {
    $this.$delay = (-1);
    $this.$entityID = $rt_s(696);
    $this.$field_830_d = 0.0;
    $this.$delay = 20;
}
function nms_TileEntityMobSpawner_anyPlayerInRange($this) {
    return nms_World_getClosestPlayer($this.$worldObj1, $this.$xCoord0 + 0.5, $this.$yCoord0 + 0.5, $this.$zCoord0 + 0.5, 16.0) === null ? 0 : 1;
}
function nms_TileEntityMobSpawner_updateEntity($this) {
    var $var1, $var3, $var5, $var8, $var9, $var17, $var11;
    a: {
        $this.$field_830_d = $this.$field_831_c;
        if (nms_TileEntityMobSpawner_anyPlayerInRange($this)) {
            $var1 = $this.$xCoord0 + ju_Random_nextFloat($this.$worldObj1.$rand1);
            $var3 = $this.$yCoord0 + ju_Random_nextFloat($this.$worldObj1.$rand1);
            $var5 = $this.$zCoord0 + ju_Random_nextFloat($this.$worldObj1.$rand1);
            nms_World_spawnParticle($this.$worldObj1, $rt_s(283), $var1, $var3, $var5, 0.0, 0.0, 0.0);
            nms_World_spawnParticle($this.$worldObj1, $rt_s(284), $var1, $var3, $var5, 0.0, 0.0, 0.0);
            $this.$field_831_c = $this.$field_831_c + 1000.0 / ($this.$delay + 200.0);
            while ($this.$field_831_c > 360.0) {
                $this.$field_831_c = $this.$field_831_c - 360.0;
                $this.$field_830_d = $this.$field_830_d - 360.0;
            }
            if ($this.$delay == (-1))
                nms_TileEntityMobSpawner_updateDelay($this);
            if ($this.$delay > 0)
                $this.$delay = $this.$delay - 1 | 0;
            else {
                $var8 = 0;
                while (true) {
                    if ($var8 >= 4)
                        break a;
                    $var9 = nms_EntityList_createEntityInWorld($this.$entityID, $this.$worldObj1);
                    if ($var9 === null)
                        break;
                    if (nms_World_getEntitiesWithinAABB($this.$worldObj1, jl_Object_getClass($var9), nms_AxisAlignedBB_expands(nms_AxisAlignedBB_getBoundingBoxFromPool($this.$xCoord0, $this.$yCoord0, $this.$zCoord0, $this.$xCoord0 + 1 | 0, $this.$yCoord0 + 1 | 0, $this.$zCoord0 + 1 | 0), 8.0, 4.0, 8.0)).$size >= 6) {
                        nms_TileEntityMobSpawner_updateDelay($this);
                        return;
                    }
                    nms_Entity_setLocationAndAngles($var9, $this.$xCoord0 + (ju_Random_nextDouble($this.$worldObj1.$rand1) - ju_Random_nextDouble($this.$worldObj1.$rand1)) * 4.0, ($this.$yCoord0 + ju_Random_nextInt($this.$worldObj1.$rand1, 3) | 0) - 1 | 0, $this.$zCoord0 + (ju_Random_nextDouble($this.$worldObj1.$rand1) - ju_Random_nextDouble($this.$worldObj1.$rand1)) * 4.0, ju_Random_nextFloat($this.$worldObj1.$rand1) * 360.0, 0.0);
                    if ($var9.$getCanSpawnHere()) {
                        nms_World_entityJoinedWorld($this.$worldObj1, $var9);
                        $var17 = 0;
                        while ($var17 < 20) {
                            $var3 = $this.$xCoord0 + 0.5 + (ju_Random_nextFloat($this.$worldObj1.$rand1) - 0.5) * 2.0;
                            $var5 = $this.$yCoord0 + 0.5 + (ju_Random_nextFloat($this.$worldObj1.$rand1) - 0.5) * 2.0;
                            $var11 = $this.$zCoord0 + 0.5 + (ju_Random_nextFloat($this.$worldObj1.$rand1) - 0.5) * 2.0;
                            nms_World_spawnParticle($this.$worldObj1, $rt_s(283), $var3, $var5, $var11, 0.0, 0.0, 0.0);
                            nms_World_spawnParticle($this.$worldObj1, $rt_s(284), $var3, $var5, $var11, 0.0, 0.0, 0.0);
                            $var17 = $var17 + 1 | 0;
                        }
                        nms_EntityLiving_spawnExplosionParticle($var9);
                        nms_TileEntityMobSpawner_updateDelay($this);
                    }
                    $var8 = $var8 + 1 | 0;
                }
                return;
            }
        }
    }
}
function nms_TileEntityMobSpawner_updateDelay($this) {
    $this.$delay = 200 + ju_Random_nextInt($this.$worldObj1.$rand1, 600) | 0;
}
function nms_TileEntityMobSpawner_readFromNBT($this, $var1) {
    nms_TileEntity_readFromNBT($this, $var1);
    $this.$entityID = nms_NBTTagCompound_getString($var1, $rt_s(697));
    $this.$delay = nms_NBTTagCompound_getShort($var1, $rt_s(698));
}
function nms_TileEntityMobSpawner_writeToNBT($this, $var1) {
    nms_TileEntity_writeToNBT($this, $var1);
    nms_NBTTagCompound_setString($var1, $rt_s(697), $this.$entityID);
    nms_NBTTagCompound_setShort($var1, $rt_s(698), $this.$delay << 16 >> 16);
}
function nms_TileEntityMobSpawnerRenderer() {
    nms_TileEntitySpecialRenderer.call(this);
    this.$field_1412_b = null;
}
function nms_TileEntityMobSpawnerRenderer__init_0() {
    var var_0 = new nms_TileEntityMobSpawnerRenderer();
    nms_TileEntityMobSpawnerRenderer__init_(var_0);
    return var_0;
}
function nms_TileEntityMobSpawnerRenderer__init_($this) {
    $this.$field_1412_b = ju_HashMap__init_0();
}
function nms_TileEntityMobSpawnerRenderer_a($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, var$7, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$7 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($var2 + 0.5, $var4, $var6 + 0.5);
        $var9 = ju_HashMap_get($this.$field_1412_b, $var1.$entityID);
        if ($var9 === null) {
            $var9 = nms_EntityList_createEntityInWorld($var1.$entityID, null);
            ju_HashMap_putImpl($this.$field_1412_b, $var1.$entityID, $var9);
        }
        if ($var9 === null) {
            olo_EaglerAdapterGL30_glPopMatrix();
            return;
        }
        $var9.$worldObj0 = $var1.$worldObj1;
        olo_EaglerAdapterGL30_glTranslatef(0.0, 0.4000000059604645, 0.0);
        olo_EaglerAdapterGL30_glRotatef(($var1.$field_830_d + ($var1.$field_831_c - $var1.$field_830_d) * $var8) * 10.0, 0.0, 1.0, 0.0);
        olo_EaglerAdapterGL30_glRotatef((-30.0), 1.0, 0.0, 0.0);
        olo_EaglerAdapterGL30_glTranslatef(0.0, (-0.4000000059604645), 0.0);
        olo_EaglerAdapterGL30_glScalef(0.4375, 0.4375, 0.4375);
        nms_Entity_setLocationAndAngles($var9, $var2, $var4, $var6, 0.0, 0.0);
        nms_RenderManager_$callClinit();
        $var1 = nms_RenderManager_instance;
        $var4 = 0.0;
        $var6 = 0.0;
        $var2 = 0.0;
        var$7 = 0.0;
        $ptr = 1;
    case 1:
        nms_RenderManager_func_853_a($var1, $var9, $var4, $var6, $var2, var$7, $var8);
        if ($rt_suspending()) {
            break main;
        }
        olo_EaglerAdapterGL30_glPopMatrix();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $var9, var$7, $ptr);
}
function nms_TileEntityMobSpawnerRenderer_renderTileEntityAt($this, $var1, $var2, $var4, $var6, $var8) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var4 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var1 = $var1;
        $ptr = 1;
    case 1:
        nms_TileEntityMobSpawnerRenderer_a($this, $var1, $var2, $var4, $var6, $var8);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var4, $var6, $var8, $ptr);
}
function jur_FSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex = 0;
}
var jur_FSet_posFSet = null;
function jur_FSet__init_0(var_0) {
    var var_1 = new jur_FSet();
    jur_FSet__init_(var_1, var_0);
    return var_1;
}
function jur_FSet__init_($this, $groupIndex) {
    jur_AbstractSet__init_($this);
    $this.$groupIndex = $groupIndex;
}
function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $end, $shift;
    $end = jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setEnd($matchResult, $this.$groupIndex, $stringIndex);
    $shift = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        jur_MatchResultImpl_setEnd($matchResult, $this.$groupIndex, $end);
    return $shift;
}
function jur_FSet_getGroupIndex($this) {
    return $this.$groupIndex;
}
function jur_FSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FSet__clinit_() {
    var var$1;
    var$1 = new jur_FSet$PossessiveFSet;
    jur_AbstractSet__init_(var$1);
    jur_FSet_posFSet = var$1;
}
function jur_Lexer() {
    var a = this; jl_Object.call(a);
    a.$pattern = null;
    a.$flags = 0;
    a.$mode = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index5 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
var jur_Lexer_decompTable = null;
var jur_Lexer_singleDecompTable = null;
var jur_Lexer_singleDecompTableSize = 0;
function jur_Lexer_peek($this) {
    return $this.$ch;
}
function jur_Lexer_setMode($this, $mode) {
    if ($mode > 0 && $mode < 3)
        $this.$mode = $mode;
    if ($mode == 1) {
        $this.$lookAhead = $this.$ch;
        $this.$lookAheadST = $this.$curST;
        $this.$index5 = $this.$lookAheadToc;
        $this.$lookAheadToc = $this.$curToc;
        jur_Lexer_movePointer($this);
    }
}
function jur_Lexer_restoreFlags($this, $flags) {
    $this.$flags = $flags;
    $this.$lookAhead = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index5 = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peekSpecial($this) {
    return $this.$curST;
}
function jur_Lexer_isSpecial($this) {
    return $this.$curST === null ? 0 : 1;
}
function jur_Lexer_isNextSpecial($this) {
    return $this.$lookAheadST === null ? 0 : 1;
}
function jur_Lexer_next($this) {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
}
function jur_Lexer_nextSpecial($this) {
    var $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
}
function jur_Lexer_lookAhead($this) {
    return $this.$lookAhead;
}
function jur_Lexer_back($this) {
    return $this.$lookBack;
}
function jur_Lexer_movePointer($this) {
    var $reread, $nonCap, $behind, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index5;
    while (true) {
        $reread = 0;
        $this.$lookAhead = $this.$index5 >= $this.$pattern.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode == 4) {
            if ($this.$lookAhead != 92)
                return;
            $this.$lookAhead = $this.$index5 >= $this.$pattern.data.length ? 0 : $this.$pattern.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index5 = $this.$prevNW;
                    return;
            }
            $this.$mode = $this.$savedMode;
            $this.$lookAhead = $this.$index5 > ($this.$pattern.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead != 92) {
                if ($this.$mode == 1)
                    switch ($this.$lookAhead) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern.data[$this.$index5] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern.data[$this.$index5];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this), $this.$index5));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern.data[$this.$index5];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead < 256) {
                                                    $this.$flags = $this.$lookAhead;
                                                    $this.$lookAhead = $this.$lookAhead << 16;
                                                    $this.$lookAhead = (-1073741784) | $this.$lookAhead;
                                                    break b;
                                                }
                                                $this.$lookAhead = $this.$lookAhead & 255;
                                                $this.$flags = $this.$lookAhead;
                                                $this.$lookAhead = $this.$lookAhead << 16;
                                                $this.$lookAhead = (-16777176) | $this.$lookAhead;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            switch ($this.$index5 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index5]) {
                                case 43:
                                    $this.$lookAhead = $this.$lookAhead | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $this.$lookAhead | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $this.$lookAhead | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            jur_Lexer_setMode($this, 2);
                            break a;
                        case 93:
                            if ($this.$mode != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode == 2)
                    switch ($this.$lookAhead) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                $nonCap = $this.$index5 >= ($this.$pattern.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = $nonCap;
                    switch ($this.$lookAhead) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this), $this.$index5));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $this.$lookAhead;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this), $this.$index5));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_3($this.$pattern, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode;
                            $this.$mode = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index5 >= ($this.$pattern.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this), $this.$index5));
                            $this.$lookAhead = $this.$pattern.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), jur_Lexer_toString($this), $this.$index5));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
}
function jur_Lexer_parseCharClassName($this) {
    var $sb, $ch, $res;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_2($sb, 10);
    if ($this.$index5 < ($this.$pattern.data.length - 2 | 0)) {
        if ($this.$pattern.data[$this.$index5] != 123) {
            $sb = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($sb);
            return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($sb, $rt_s(699)), jl_String__init_3($this.$pattern, jur_Lexer_nextIndex($this), 1)));
        }
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index5 < ($this.$pattern.data.length - 2 | 0)) {
                $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                jl_AbstractStringBuilder_append($sb, $ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
    }
    if (!jl_StringBuilder_length($sb))
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
    $res = jl_AbstractStringBuilder_toString($sb);
    if (jl_String_length($res) == 1) {
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($sb, $rt_s(699)), $res));
    }
    b: {
        c: {
            if (jl_String_length($res) > 3) {
                if (jl_String_startsWith($res, $rt_s(699)))
                    break c;
                if (jl_String_startsWith($res, $rt_s(700)))
                    break c;
            }
            break b;
        }
        $res = jl_String_substring($res, 2);
    }
    return $res;
}
function jur_Lexer_processQuantifier($this, $ch) {
    var $sb, $min, $max, $mod, $$je;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_2($sb, 4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index5 >= $this.$pattern.data.length)
                break a;
            $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                    jl_StringBuilder_delete($sb, 0, jl_StringBuilder_length($sb));
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            jl_AbstractStringBuilder_append($sb, $ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
    if (jl_StringBuilder_length($sb) > 0)
        b: {
            try {
                $max = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
    $mod = $this.$index5 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index5];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    $sb = new jur_Quantifier;
    $sb.$min1 = $min;
    $sb.$max1 = $max;
    return $sb;
}
function jur_Lexer_toString($this) {
    return $this.$orig;
}
function jur_Lexer_isEmpty($this) {
    return !$this.$ch && !$this.$lookAhead && $this.$index5 == $this.$patternFullLength && !jur_Lexer_isSpecial($this) ? 1 : 0;
}
function jur_Lexer_isLetter0($ch) {
    return $ch < 0 ? 0 : 1;
}
function jur_Lexer_isLetter($this) {
    return !jur_Lexer_isEmpty($this) && !jur_Lexer_isSpecial($this) && jur_Lexer_isLetter0($this.$ch) ? 1 : 0;
}
function jur_Lexer_isHighSurrogate($this) {
    return $this.$ch <= 56319 && $this.$ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate($this) {
    return $this.$ch <= 57343 && $this.$ch >= 56320 ? 1 : 0;
}
function jur_Lexer_isHighSurrogate0($ch) {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate0($ch) {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
}
function jur_Lexer_readHex($this, $max) {
    var $st, $length, $i, var$5, $$je;
    $st = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_2($st, $max);
    $length = $this.$pattern.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index5 >= $length)
            break;
        jl_AbstractStringBuilder_append($st, $this.$pattern.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                $max = jl_Integer_parseInt(jl_StringBuilder_toString($st), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $max;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
}
function jur_Lexer_readOctals($this) {
    var $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern.data[$this.$index5], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index5 >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern.data[$this.$index5], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
}
function jur_Lexer_readFlags($this) {
    var $pos, $res;
    $pos = 1;
    $res = $this.$flags;
    a: while (true) {
        if ($this.$index5 >= $this.$pattern.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
        b: {
            c: {
                switch ($this.$pattern.data[$this.$index5]) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(17), $this.$orig, $this.$index5));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
}
function jur_Lexer_nextIndex($this) {
    var var$1, var$2;
    $this.$prevNW = $this.$index5;
    if (!($this.$flags & 4))
        $this.$index5 = $this.$index5 + 1 | 0;
    else {
        var$1 = $this.$pattern.data.length - 2 | 0;
        $this.$index5 = $this.$index5 + 1 | 0;
        a: while (true) {
            if ($this.$index5 < var$1 && jl_Character_isWhitespace($this.$pattern.data[$this.$index5])) {
                $this.$index5 = $this.$index5 + 1 | 0;
                continue;
            }
            if ($this.$index5 >= var$1)
                break;
            if ($this.$pattern.data[$this.$index5] != 35)
                break;
            $this.$index5 = $this.$index5 + 1 | 0;
            while (true) {
                if ($this.$index5 >= var$1)
                    continue a;
                var$2 = $this.$pattern.data[$this.$index5];
                if (var$2 != 10 && var$2 != 13 && var$2 != 133 && (var$2 | 1) != 8233 ? 0 : 1)
                    continue a;
                $this.$index5 = $this.$index5 + 1 | 0;
            }
        }
    }
    return $this.$prevNW;
}
function jur_Lexer_getDecomposition($ch) {
    return jur_Lexer_decompTable.$get13($ch);
}
function jur_Lexer_nextCodePoint($this) {
    var $high, $lowExpectedIndex, $low;
    $high = $this.$pattern.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern.data.length) {
            $low = $this.$pattern.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
}
function jur_Lexer_getIndex($this) {
    return $this.$curToc;
}
function jur_PatternSyntaxException() {
    var a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern3 = null;
    a.$index6 = 0;
}
function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PatternSyntaxException__init_0($this, $description, $pattern, $index) {
    jl_Throwable__init_0($this);
    $this.$index6 = (-1);
    $this.$desc = $description;
    $this.$pattern3 = $pattern;
    $this.$index6 = $index;
}
function jur_PatternSyntaxException_getMessage($this) {
    var $filler, $temp, var$3, var$4, var$5, var$6, var$7, var$8;
    $filler = $rt_s(17);
    if ($this.$index6 >= 1) {
        $temp = $rt_createCharArray($this.$index6);
        var$3 = $temp.data;
        var$4 = 0;
        var$5 = var$3.length;
        if (var$4 > var$5) {
            $filler = new jl_IllegalArgumentException;
            jl_Throwable__init_0($filler);
            $rt_throw($filler);
        }
        while (var$4 < var$5) {
            var$6 = var$4 + 1 | 0;
            var$3[var$4] = 32;
            var$4 = var$6;
        }
        $filler = jl_String__init_($temp);
    }
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    var$7 = jl_StringBuilder_append(var$7, $this.$desc);
    if ($this.$pattern3 !== null && jl_String_length($this.$pattern3)) {
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$8);
        $filler = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$8, $this.$index6), $rt_s(311)), $this.$pattern3), $rt_s(311)), $filler));
    } else
        $filler = $rt_s(17);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(var$7, $filler));
}
function nms_SignModel() {
    var a = this; jl_Object.call(a);
    a.$field_1346_a = null;
    a.$field_1345_b = null;
}
function nms_SignModel__init_0() {
    var var_0 = new nms_SignModel();
    nms_SignModel__init_(var_0);
    return var_0;
}
function nms_SignModel__init_($this) {
    $this.$field_1346_a = nms_ModelRenderer__init_(0, 0);
    nms_ModelRenderer_addBox($this.$field_1346_a, (-12.0), (-14.0), (-1.0), 24, 12, 2, 0.0);
    $this.$field_1345_b = nms_ModelRenderer__init_(0, 14);
    nms_ModelRenderer_addBox($this.$field_1345_b, (-1.0), (-2.0), (-1.0), 2, 14, 2, 0.0);
}
function nms_SignModel_func_887_a($this) {
    nms_ModelRenderer_render($this.$field_1346_a, 0.0625);
    nms_ModelRenderer_render($this.$field_1345_b, 0.0625);
}
function jur_NonCapFSet() {
    jur_FSet.call(this);
}
function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$groupIndex;
    jur_MatchResultImpl_setConsumed($matchResult, $gr, $stringIndex - jur_MatchResultImpl_getConsumed($matchResult, $gr) | 0);
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_NonCapFSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_AheadFSet() {
    jur_FSet.call(this);
}
function jur_AheadFSet__init_0() {
    var var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_(var_0);
    return var_0;
}
function jur_AheadFSet__init_($this) {
    jur_FSet__init_($this, (-1));
}
function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_BehindFSet() {
    jur_FSet.call(this);
}
function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
    if (jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex) != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
}
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index7 = 0;
}
function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$groupIndex;
    jur_MatchResultImpl_setConsumed($matchResult, $gr, $stringIndex - jur_MatchResultImpl_getConsumed($matchResult, $gr) | 0);
    $this.$index7 = $stringIndex;
    return $stringIndex;
}
function jur_AtomicFSet_getIndex($this) {
    return $this.$index7;
}
function jur_AtomicFSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FinalSet() {
    jur_FSet.call(this);
}
function jur_FinalSet__init_0() {
    var var_0 = new jur_FinalSet();
    jur_FinalSet__init_(var_0);
    return var_0;
}
function jur_FinalSet__init_($this) {
    jur_FSet__init_($this, 0);
}
function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($matchResult.$mode3 != 1 && $stringIndex != $matchResult.$rightBound0)
        return (-1);
    jur_MatchResultImpl_setValid($matchResult);
    jur_MatchResultImpl_setEnd($matchResult, 0, $stringIndex);
    return $stringIndex;
}
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount = 0;
}
function jur_LeafSet__init_0() {
    var var_0 = new jur_LeafSet();
    jur_LeafSet__init_(var_0);
    return var_0;
}
function jur_LeafSet__init_($this) {
    jur_AbstractSet__init_($this);
    $this.$charCount = 1;
}
function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    if (($stringIndex + $this.$charCount0() | 0) > $matchResult.$rightBound0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next6.$matches0($stringIndex + $shift | 0, $testString, $matchResult);
}
function jur_LeafSet_charCount($this) {
    return $this.$charCount;
}
function jur_LeafSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_EmptySet() {
    jur_LeafSet.call(this);
}
function jur_EmptySet__init_(var_0) {
    var var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
}
function jur_EmptySet__init_0($this, $next) {
    jur_AbstractSet__init_2($this, $next);
    $this.$charCount = 1;
    $this.$type = 1;
    $this.$charCount = 0;
}
function jur_EmptySet_accepts($this, $stringIndex, $testString) {
    return 0;
}
function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startStr, $high;
    $strLength = $matchResult.$rightBound0;
    $startStr = $matchResult.$leftBound0;
    while (true) {
        $high = $rt_compare($stringIndex, $strLength);
        if ($high > 0)
            return (-1);
        if ($high < 0 && jl_Character_isLowSurrogate(jl_String_charAt($testString, $stringIndex)) && $stringIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testString, $stringIndex - 1 | 0))) {
            $stringIndex = $stringIndex + 1 | 0;
            continue;
        }
        if ($this.$next6.$matches0($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $strLength, $startStr;
    $strLength = $matchResult.$rightBound0;
    $startStr = $matchResult.$leftBound0;
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testString, $startSearch)) && $startSearch > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testString, $startSearch - 1 | 0))) {
            $startSearch = $startSearch + (-1) | 0;
            continue;
        }
        if ($this.$next6.$matches0($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_EmptySet_hasConsumed($this, $mr) {
    return 0;
}
function jur_JointSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex0 = 0;
}
function jur_JointSet__init_2() {
    var var_0 = new jur_JointSet();
    jur_JointSet__init_(var_0);
    return var_0;
}
function jur_JointSet__init_1(var_0, var_1) {
    var var_2 = new jur_JointSet();
    jur_JointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_JointSet__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_JointSet__init_0($this, $children, $fSet) {
    jur_AbstractSet__init_($this);
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $shift;
    if ($this.$children === null)
        return (-1);
    $start = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex0);
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $stringIndex);
    $size = $this.$children.$size;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $start);
            return (-1);
        }
        $shift = ju_ArrayList_get($this.$children, $i).$matches0($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_JointSet_setNext($this, $next) {
    $this.$fSet.$next6 = $next;
}
function jur_JointSet_first($this, $set) {
    var $i;
    a: {
        if ($this.$children !== null) {
            $i = ju_AbstractList_iterator($this.$children);
            while (true) {
                if (!ju_AbstractList$1_hasNext($i))
                    break a;
                if (!ju_AbstractList$1_next($i).$first0($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
}
function jur_JointSet_hasConsumed($this, $matchResult) {
    return jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex0) >= 0 && jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex0) == jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex0) ? 0 : 1;
}
function jur_JointSet_processSecondPass($this) {
    var $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($this.$fSet);
    a: {
        if ($this.$children !== null) {
            $childrenSize = $this.$children.$size;
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = ju_ArrayList_get($this.$children, $i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    ju_ArrayList_remove($this.$children, $i);
                    ju_ArrayList_add0($this.$children, $i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next6 !== null)
        jur_AbstractSet_processSecondPass($this);
}
function jur_NonCapJointSet() {
    jur_JointSet.call(this);
}
function jur_NonCapJointSet__init_0() {
    var var_0 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_(var_0);
    return var_0;
}
function jur_NonCapJointSet__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $shift;
    $start = jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex0);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, $stringIndex);
    $size = $this.$children.$size;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, $start);
            return (-1);
        }
        $shift = ju_ArrayList_get($this.$children, $i).$matches0($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
    return !jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex0) ? 0 : 1;
}
function jur_AtomicJointSet() {
    jur_NonCapJointSet.call(this);
}
function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i;
    $start = jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex0);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, $stringIndex);
    $size = $this.$children.$size;
    $i = 0;
    while ($i < $size) {
        if (ju_ArrayList_get($this.$children, $i).$matches0($stringIndex, $testString, $matchResult) >= 0)
            return $this.$next6.$matches0($this.$fSet.$index7, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, $start);
    return (-1);
}
function jur_AtomicJointSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_PositiveLookAhead() {
    jur_AtomicJointSet.call(this);
}
function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i;
    $size = $this.$children.$size;
    $i = 0;
    while ($i < $size) {
        if (ju_ArrayList_get($this.$children, $i).$matches0($stringIndex, $testString, $matchResult) >= 0)
            return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookAhead() {
    jur_AtomicJointSet.call(this);
}
function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i;
    $size = $this.$children.$size;
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        if (ju_ArrayList_get($this.$children, $i).$matches0($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookBehind() {
    jur_AtomicJointSet.call(this);
}
function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $leftBound, $shift, $i;
    $size = $this.$children.$size;
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound0;
    a: {
        $shift = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                if (ju_ArrayList_get($this.$children, $i).$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
}
function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookBehind() {
    jur_AtomicJointSet.call(this);
}
function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i;
    $size = $this.$children.$size;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex0, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        if (ju_ArrayList_get($this.$children, $i).$findBack(0, $stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
function jur_SingleSet__init_(var_0, var_1) {
    var var_2 = new jur_SingleSet();
    jur_SingleSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_SingleSet__init_0($this, $child, $fSet) {
    jur_AbstractSet__init_($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $shift;
    $start = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex0);
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $stringIndex);
    $shift = $this.$kid.$matches0($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $start);
    return (-1);
}
function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_first($this, $set) {
    return $this.$kid.$first0($set);
}
function jur_SingleSet_processBackRefReplacement($this) {
    var $set;
    $set = new jur_BackReferencedSingleSet;
    jur_SingleSet__init_0($set, $this.$kid, $this.$fSet);
    $this.$next6 = $set;
    return $set;
}
function jur_SingleSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($this.$fSet);
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
}
function jur_SpecialToken() {
    jl_Object.call(this);
}
function jur_AbstractCharClass() {
    var a = this; jur_SpecialToken.call(a);
    a.$alt0 = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
var jur_AbstractCharClass_charClasses = null;
function jur_AbstractCharClass__init_() {
    var var_0 = new jur_AbstractCharClass();
    jur_AbstractCharClass__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass__init_0($this) {
    var var$1;
    var$1 = new ju_BitSet;
    var$1.$data2 = $rt_createIntArray(64);
    $this.$lowHighSurrogates = var$1;
}
function jur_AbstractCharClass_getBits($this) {
    return null;
}
function jur_AbstractCharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_AbstractCharClass_hasLowHighSurrogates($this) {
    return !$this.$altSurrogates ? (ju_BitSet_nextSetBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1) : ju_BitSet_nextClearBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1;
}
function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
    return $this.$mayContainSupplCodepoints;
}
function jur_AbstractCharClass_getInstance($this) {
    return $this;
}
function jur_AbstractCharClass_getSurrogates($this) {
    var $lHS, var$2;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$1;
        var$2.$this$06 = $this;
        var$2.$val$lHS = $lHS;
        jur_AbstractCharClass__init_0(var$2);
        $this.$charClassWithSurrogates = var$2;
        jur_AbstractCharClass_setNegative($this.$charClassWithSurrogates, $this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
}
function jur_AbstractCharClass_getWithoutSurrogates($this) {
    var $lHS, var$2;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$2;
        var$2.$this$07 = $this;
        var$2.$val$lHS0 = $lHS;
        var$2.$val$thisClass = $this;
        jur_AbstractCharClass__init_0(var$2);
        $this.$charClassWithoutSurrogates = var$2;
        jur_AbstractCharClass_setNegative($this.$charClassWithoutSurrogates, $this.$alt0);
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
}
function jur_AbstractCharClass_hasUCI($this) {
    return 0;
}
function jur_AbstractCharClass_setNegative($this, $value) {
    if ($this.$alt0 ^ $value) {
        $this.$alt0 = $this.$alt0 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_AbstractCharClass_isNegative($this) {
    return $this.$alt0;
}
function jur_AbstractCharClass_intersects($cc1, $cc2) {
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return ju_BitSet_intersects($cc1.$getBits(), $cc2.$getBits());
    return 1;
}
function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
    return jur_AbstractCharClass$LazyCharClass_getValue(jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name), $negative);
}
function jur_AbstractCharClass__clinit_() {
    jur_AbstractCharClass_charClasses = new jur_AbstractCharClass$PredefinedCharacterClasses;
}
function jur_CharClass() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
function jur_CharClass__init_1() {
    var var_0 = new jur_CharClass();
    jur_CharClass__init_(var_0);
    return var_0;
}
function jur_CharClass__init_0(var_0, var_1) {
    var var_2 = new jur_CharClass();
    jur_CharClass__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass__init_($this) {
    jur_AbstractCharClass__init_0($this);
    $this.$bits = ju_BitSet__init_0();
}
function jur_CharClass__init_2($this, $ci, $uci) {
    jur_AbstractCharClass__init_0($this);
    $this.$bits = ju_BitSet__init_0();
    $this.$ci = $ci;
    $this.$uci = $uci;
}
function jur_CharClass_add($this, $ch) {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    ju_BitSet_clear($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                ju_BitSet_set($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate0($ch) && !jur_Lexer_isLowSurrogate0($ch))) {
        if ($this.$invertedSurrogates)
            ju_BitSet_clear($this.$lowHighSurrogates, $ch - 55296 | 0);
        else
            ju_BitSet_set($this.$lowHighSurrogates, $ch - 55296 | 0);
    }
    if ($this.$inverted)
        ju_BitSet_clear($this.$bits, $ch);
    else
        ju_BitSet_set($this.$bits, $ch);
    if (!$this.$mayContainSupplCodepoints && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_CharClass_add1($this, $cc) {
    var $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            ju_BitSet_andNot($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        else
            ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        ju_BitSet_or($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$alt0)
                ju_BitSet_andNot($this.$bits, $cc.$getBits());
            else
                ju_BitSet_and($this.$bits, $cc.$getBits());
        } else if (!$cc.$alt0)
            ju_BitSet_or($this.$bits, $cc.$getBits());
        else {
            ju_BitSet_xor($this.$bits, $cc.$getBits());
            ju_BitSet_and($this.$bits, $cc.$getBits());
            $this.$alt0 = $this.$alt0 ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt) {
                var$4 = new jur_CharClass$5;
                var$4.$this$08 = $this;
                var$4.$val$curAlt = $curAlt;
                var$4.$val$nb = $nb;
                var$4.$val$cc = $cc;
                jur_AbstractCharClass__init_0(var$4);
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$4;
                var$4.$this$09 = $this;
                var$4.$val$curAlt0 = $curAlt;
                var$4.$val$nb0 = $nb;
                var$4.$val$cc0 = $cc;
                jur_AbstractCharClass__init_0(var$4);
                $this.$nonBitSet = var$4;
            }
        } else {
            if ($curAlt && !$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                $nb = new jur_CharClass$1;
                $nb.$this$010 = $this;
                $nb.$val$cc1 = $cc;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            } else if (!$curAlt) {
                $nb = new jur_CharClass$3;
                $nb.$this$011 = $this;
                $nb.$val$curAlt1 = $curAlt;
                $nb.$val$cc2 = $cc;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$2;
                $nb.$this$012 = $this;
                $nb.$val$curAlt2 = $curAlt;
                $nb.$val$cc3 = $cc;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
    return $this;
}
function jur_CharClass_add0($this, $i, $end) {
    var var$3;
    if ($i > $end) {
        var$3 = new jl_IllegalArgumentException;
        jl_Throwable__init_0(var$3);
        $rt_throw(var$3);
    }
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            $end = $end + 1 | 0;
            while (true) {
                if ($i >= $end)
                    break a;
                jur_CharClass_add($this, $i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            ju_BitSet_clear0($this.$bits, $i, $end + 1 | 0);
        else
            ju_BitSet_set0($this.$bits, $i, $end + 1 | 0);
    }
    return $this;
}
function jur_CharClass_union($this, $clazz) {
    var $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0)
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            ju_BitSet_or($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        else
            ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    } else if ($this.$altSurrogates)
        ju_BitSet_andNot($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && jur_CharClass_getBits($clazz) !== null) {
        if (!($this.$alt0 ^ $clazz.$alt0)) {
            if (!$this.$alt0)
                ju_BitSet_or($this.$bits, jur_CharClass_getBits($clazz));
            else
                ju_BitSet_and($this.$bits, jur_CharClass_getBits($clazz));
        } else if ($this.$alt0)
            ju_BitSet_andNot($this.$bits, jur_CharClass_getBits($clazz));
        else {
            ju_BitSet_xor($this.$bits, jur_CharClass_getBits($clazz));
            ju_BitSet_and($this.$bits, jur_CharClass_getBits($clazz));
            $this.$alt0 = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt) {
                var$4 = new jur_CharClass$11;
                var$4.$this$013 = $this;
                var$4.$val$curAlt3 = $curAlt;
                var$4.$val$nb1 = $nb;
                var$4.$val$clazz = $clazz;
                jur_AbstractCharClass__init_0(var$4);
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$10;
                var$4.$this$014 = $this;
                var$4.$val$curAlt4 = $curAlt;
                var$4.$val$nb2 = $nb;
                var$4.$val$clazz0 = $clazz;
                jur_AbstractCharClass__init_0(var$4);
                $this.$nonBitSet = var$4;
            }
        } else {
            if (!$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$7;
                    $nb.$this$015 = $this;
                    $nb.$val$clazz1 = $clazz;
                    jur_AbstractCharClass__init_0($nb);
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$6;
                    $nb.$this$016 = $this;
                    $nb.$val$clazz2 = $clazz;
                    jur_AbstractCharClass__init_0($nb);
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$9;
                $nb.$this$017 = $this;
                $nb.$val$clazz3 = $clazz;
                $nb.$val$curAlt5 = $curAlt;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$8;
                $nb.$this$018 = $this;
                $nb.$val$clazz4 = $clazz;
                $nb.$val$curAlt6 = $curAlt;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_intersection($this, $clazz) {
    var $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0)
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        else
            ju_BitSet_or($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    } else if (!$this.$altSurrogates)
        ju_BitSet_andNot($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && jur_CharClass_getBits($clazz) !== null) {
        if (!($this.$alt0 ^ $clazz.$alt0)) {
            if (!$this.$alt0)
                ju_BitSet_and($this.$bits, jur_CharClass_getBits($clazz));
            else
                ju_BitSet_or($this.$bits, jur_CharClass_getBits($clazz));
        } else if (!$this.$alt0)
            ju_BitSet_andNot($this.$bits, jur_CharClass_getBits($clazz));
        else {
            ju_BitSet_xor($this.$bits, jur_CharClass_getBits($clazz));
            ju_BitSet_and($this.$bits, jur_CharClass_getBits($clazz));
            $this.$alt0 = 0;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt) {
                var$4 = new jur_CharClass$17;
                var$4.$this$019 = $this;
                var$4.$val$curAlt7 = $curAlt;
                var$4.$val$nb3 = $nb;
                var$4.$val$clazz5 = $clazz;
                jur_AbstractCharClass__init_0(var$4);
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$16;
                var$4.$this$020 = $this;
                var$4.$val$curAlt8 = $curAlt;
                var$4.$val$nb4 = $nb;
                var$4.$val$clazz6 = $clazz;
                jur_AbstractCharClass__init_0(var$4);
                $this.$nonBitSet = var$4;
            }
        } else {
            if (!$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$13;
                    $nb.$this$021 = $this;
                    $nb.$val$clazz7 = $clazz;
                    jur_AbstractCharClass__init_0($nb);
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$12;
                    $nb.$this$022 = $this;
                    $nb.$val$clazz8 = $clazz;
                    jur_AbstractCharClass__init_0($nb);
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$15;
                $nb.$this$023 = $this;
                $nb.$val$clazz9 = $clazz;
                $nb.$val$curAlt9 = $curAlt;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$14;
                $nb.$this$024 = $this;
                $nb.$val$clazz10 = $clazz;
                $nb.$val$curAlt10 = $curAlt;
                jur_AbstractCharClass__init_0($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_contains($this, $ch) {
    if ($this.$nonBitSet !== null)
        return $this.$alt0 ^ $this.$nonBitSet.$contains0($ch);
    return $this.$alt0 ^ ju_BitSet_get($this.$bits, $ch);
}
function jur_CharClass_getBits($this) {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
}
function jur_CharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_CharClass_getInstance($this) {
    var $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = jur_CharClass_getBits($this);
    $res = new jur_CharClass$18;
    $res.$this$025 = $this;
    $res.$val$bs = $bs;
    jur_AbstractCharClass__init_0($res);
    return jur_AbstractCharClass_setNegative($res, $this.$alt0);
}
function jur_CharClass_toString($this) {
    var $temp, $i;
    $temp = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($temp);
    $i = ju_BitSet_nextSetBit($this.$bits, 0);
    while ($i >= 0) {
        jl_AbstractStringBuilder_append2($temp, jl_Character_toChars($i));
        jl_AbstractStringBuilder_append($temp, 124);
        $i = ju_BitSet_nextSetBit($this.$bits, $i + 1 | 0);
    }
    if ($temp.$length0 > 0)
        jl_StringBuilder_deleteCharAt($temp, $temp.$length0 - 1 | 0);
    return jl_AbstractStringBuilder_toString($temp);
}
function jur_CharClass_hasUCI($this) {
    return $this.$hasUCI0;
}
function ju_MissingResourceException() {
    var a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key1 = null;
}
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
function jur_QuantifierSet__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_QuantifierSet();
    jur_QuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_QuantifierSet__init_($this, $innerSet, $next, $type) {
    jur_AbstractSet__init_2($this, $next);
    $this.$innerSet = $innerSet;
    $this.$type = $type;
}
function jur_QuantifierSet_getInnerSet($this) {
    return $this.$innerSet;
}
function jur_QuantifierSet_first($this, $set) {
    return !$this.$innerSet.$first0($set) && !$this.$next6.$first0($set) ? 0 : 1;
}
function jur_QuantifierSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_QuantifierSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next6 !== null && !$this.$next6.$isSecondPassVisited) {
        $set = $this.$next6.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next6.$isSecondPassVisited = 1;
            $this.$next6 = $set;
        }
        $this.$next6.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next6;
    }
}
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
function jur_LeafQuantifierSet__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
}
function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
}
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier = null;
}
function jur_CompositeQuantifierSet__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CompositeQuantifierSet__init_($this, $quant, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
}
function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min1;
    $max = $this.$quantifier.$max1;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_GroupQuantifierSet() {
    jur_QuantifierSet.call(this);
}
function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_AltQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    return $shift;
}
function jur_AltQuantifierSet_setNext($this, $next) {
    $this.$next6 = $next;
    $this.$innerSet.$setNext($next);
}
function jur_UnifiedQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0 && $this.$leaf.$accepts($stringIndex, $testString) > 0) {
        $stringIndex = $stringIndex + $this.$leaf.$charCount0() | 0;
    }
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next6.$find0($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount0() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount0() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
}
function jur_Quantifier() {
    var a = this; jur_SpecialToken.call(a);
    a.$min1 = 0;
    a.$max1 = 0;
}
function jur_Quantifier_min($this) {
    return $this.$min1;
}
function jur_Quantifier_max($this) {
    return $this.$max1;
}
function jur_Quantifier_toString($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(701)), $this.$min1), $rt_s(702)), $this.$max1 == 2147483647 ? $rt_s(17) : jl_Integer_toString0(jl_Integer__init_($this.$max1))), $rt_s(703)));
}
function jur_FSet$PossessiveFSet() {
    jur_AbstractSet.call(this);
}
function jur_FSet$PossessiveFSet__init_0() {
    var var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_(var_0);
    return var_0;
}
function jur_FSet$PossessiveFSet__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
    return 0;
}
function ju_BitSet() {
    var a = this; jl_Object.call(a);
    a.$data2 = null;
    a.$length5 = 0;
}
function ju_BitSet__init_0() {
    var var_0 = new ju_BitSet();
    ju_BitSet__init_(var_0);
    return var_0;
}
function ju_BitSet__init_($this) {
    $this.$data2 = $rt_createIntArray(0);
}
function ju_BitSet_set($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length5) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length5 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data2.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
}
function ju_BitSet_set0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex > $toIndex) {
        var$3 = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_0(var$3);
        $rt_throw(var$3);
    }
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($toIndex > $this.$length5) {
        ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
        $this.$length5 = $toIndex;
    }
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data2.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
    } else {
        var$6 = $this.$data2.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data2.data[$i] = (-1);
            $i = $i + 1 | 0;
        }
        var$6 = $this.$data2.data;
        var$6[$toDataIndex] = var$6[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
    }
}
function ju_BitSet_trailingZeroBits($this, $num) {
    return (-1) << ($num % 32 | 0);
}
function ju_BitSet_trailingOneBits($this, $num) {
    $num = $num % 32 | 0;
    return !$num ? 0 : (-1) >>> (32 - $num | 0);
}
function ju_BitSet_clear($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data2.data.length) {
        var$3 = $this.$data2.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length5 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
}
function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex > $toIndex) {
        var$3 = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_0(var$3);
        $rt_throw(var$3);
    }
    if ($fromIndex >= $this.$length5)
        return;
    $toIndex = jl_Math_min($this.$length5, $toIndex);
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data2.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, $toIndex));
    } else {
        var$6 = $this.$data2.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data2.data[$i] = 0;
            $i = $i + 1 | 0;
        }
        var$6 = $this.$data2.data;
        var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, $toIndex);
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_get($this, $bitIndex) {
    var $index;
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data2.data.length && $this.$data2.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
}
function ju_BitSet_nextSetBit($this, $fromIndex) {
    var $index, $top, $i;
    if ($fromIndex >= $this.$length5)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $top = $this.$data2.data[$index] >>> ($fromIndex % 32 | 0);
    if ($top)
        return jl_Integer_numberOfTrailingZeros($top) + $fromIndex | 0;
    $top = ($this.$length5 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data2.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data2.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function ju_BitSet_nextClearBit($this, $fromIndex) {
    var $index, $top, $i;
    if ($fromIndex >= $this.$length5)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $top = ($this.$data2.data[$index] ^ (-1)) >>> ($fromIndex % 32 | 0);
    if ($top)
        return jl_Integer_numberOfTrailingZeros($top) + $fromIndex | 0;
    $top = ($this.$length5 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data2.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data2.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length5;
}
function ju_BitSet_ensureCapacity($this, $capacity) {
    var $newArrayLength, var$3, var$4, var$5;
    if ($this.$data2.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($this.$data2.data.length * 2 | 0) + 1 | 0);
    var$3 = $this.$data2.data;
    var$4 = $rt_createIntArray($newArrayLength);
    var$5 = var$4.data;
    $capacity = jl_Math_min($newArrayLength, var$3.length);
    $newArrayLength = 0;
    while ($newArrayLength < $capacity) {
        var$5[$newArrayLength] = var$3[$newArrayLength];
        $newArrayLength = $newArrayLength + 1 | 0;
    }
    $this.$data2 = var$4;
}
function ju_BitSet_recalculateLength($this) {
    var $top, $i, $sz;
    $top = ($this.$length5 + 31 | 0) / 32 | 0;
    $this.$length5 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data2.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length5 = $this.$length5 - 32 | 0;
        }
        $this.$length5 = $this.$length5 - $sz | 0;
    }
}
function ju_BitSet_intersects($this, $set) {
    var $sz, $i;
    $sz = jl_Math_min($this.$data2.data.length, $set.$data2.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data2.data[$i] & $set.$data2.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function ju_BitSet_and($this, $set) {
    var $i, $i_0, var$4;
    $i = jl_Math_min($this.$data2.data.length, $set.$data2.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data2.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data2.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data2.data.length) {
        $this.$data2.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length5 = jl_Math_min($this.$length5, $set.$length5);
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_andNot($this, $set) {
    var $sz, $i, var$4;
    $sz = jl_Math_min($this.$data2.data.length, $set.$data2.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data2.data;
        var$4[$i] = var$4[$i] & ($set.$data2.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_or($this, $set) {
    var $sz, $i, var$4;
    $this.$length5 = jl_Math_max($this.$length5, $set.$length5);
    ju_BitSet_ensureCapacity($this, ($this.$length5 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data2.data.length, $set.$length5);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data2.data;
        var$4[$i] = var$4[$i] | $set.$data2.data[$i];
        $i = $i + 1 | 0;
    }
}
function ju_BitSet_xor($this, $set) {
    var $sz, $i, var$4;
    $this.$length5 = jl_Math_max($this.$length5, $set.$length5);
    ju_BitSet_ensureCapacity($this, ($this.$length5 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data2.data.length, $set.$length5);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data2.data;
        var$4[$i] = var$4[$i] ^ $set.$data2.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_isEmpty($this) {
    return $this.$length5 ? 0 : 1;
}
function jur_LowHighSurrogateRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt = 0;
}
function jur_LowHighSurrogateRangeSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $startStr, $strLength, var$6, $low, $ch;
    $startStr = $matchResult.$leftBound0;
    $strLength = $matchResult.$rightBound0;
    var$6 = $stringIndex + 1 | 0;
    $low = $rt_compare(var$6, $strLength);
    if ($low > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = jl_String_charAt($testString, $stringIndex);
    if (!$this.$surrChars.$contains0($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if ($low < 0 && jl_Character_isLowSurrogate(jl_String_charAt($testString, var$6)))
            return (-1);
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testString, $stringIndex - 1 | 0)))
        return (-1);
    return $this.$next6.$matches0(var$6, $testString, $matchResult);
}
function jur_CompositeRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
function jur_CompositeRangeSet__init_(var_0, var_1) {
    var var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CompositeRangeSet__init_0($this, $withoutSurrogates, $withSurrogates) {
    jur_AbstractSet__init_($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
}
function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$withoutSurrogates.$matches0($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = jur_LowHighSurrogateRangeSet_matches($this.$withSurrogates, $stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
}
function jur_CompositeRangeSet_setNext($this, $next) {
    $this.$next6 = $next;
    $this.$withSurrogates.$next6 = $next;
    $this.$withoutSurrogates.$setNext($next);
}
function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CompositeRangeSet_first($this, $set) {
    return 1;
}
function jur_SupplRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$chars = null;
    a.$alt1 = 0;
}
function jur_SupplRangeSet__init_(var_0) {
    var var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplRangeSet__init_0($this, $cc) {
    jur_AbstractSet__init_($this);
    $this.$chars = $cc.$getInstance2();
    $this.$alt1 = $cc.$alt0;
}
function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $low, $high;
    $strLength = $matchResult.$rightBound0;
    if ($stringIndex < $strLength) {
        $low = $stringIndex + 1 | 0;
        $high = jl_String_charAt($testString, $stringIndex);
        if ($this.$contains0($high)) {
            $stringIndex = $this.$next6.$matches0($low, $testString, $matchResult);
            if ($stringIndex > 0)
                return $stringIndex;
        }
        if ($low < $strLength) {
            $stringIndex = $low + 1 | 0;
            $low = jl_String_charAt($testString, $low);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains0(jl_Character_toCodePoint($high, $low)))
                return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        }
    }
    return (-1);
}
function jur_SupplRangeSet_contains($this, $ch) {
    return $this.$chars.$contains0($ch);
}
function jur_SupplRangeSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $this.$chars.$contains0($set.$ch1);
    if ($set instanceof jur_CharSet)
        return $this.$chars.$contains0($set.$ch2);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$chars);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects($this.$chars, $set.$chars0);
}
function jur_SupplRangeSet_getChars($this) {
    return $this.$chars;
}
function jur_SupplRangeSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_SupplRangeSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_UCISupplRangeSet() {
    jur_SupplRangeSet.call(this);
}
function jur_UCISupplRangeSet_contains($this, $ch) {
    return $this.$chars.$contains0(jl_Character_toLowerCase0(jl_Character_toUpperCase($ch)));
}
function jur_UCIRangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt2 = 0;
}
function jur_UCIRangeSet__init_(var_0) {
    var var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCIRangeSet__init_0($this, $cc) {
    jur_LeafSet__init_($this);
    $this.$chars1 = $cc.$getInstance2();
    $this.$alt2 = $cc.$alt0;
}
function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
    return !$this.$chars1.$contains0(jl_Character_toLowerCase(jl_Character_toUpperCase0(jl_String_charAt($testString, $strIndex)))) ? (-1) : 1;
}
function jur_RangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars0 = null;
    a.$alt3 = 0;
}
function jur_RangeSet__init_(var_0) {
    var var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_RangeSet__init_0($this, $cc) {
    jur_LeafSet__init_($this);
    $this.$chars0 = $cc.$getInstance2();
    $this.$alt3 = $cc.$alt0;
}
function jur_RangeSet_accepts($this, $strIndex, $testString) {
    return !$this.$chars0.$contains0(jl_String_charAt($testString, $strIndex)) ? (-1) : 1;
}
function jur_RangeSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return $this.$chars0.$contains0($set.$ch2);
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$chars0);
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return jur_AbstractCharClass_intersects($this.$chars0, $set.$chars);
}
function jur_RangeSet_getChars($this) {
    return $this.$chars0;
}
function jur_HangulDecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF16 = null;
    a.$decomposedCharLength = 0;
}
function jur_HangulDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_HangulDecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_AbstractSet__init_($this);
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
}
function jur_HangulDecomposedCharSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_HangulDecomposedCharSet_getDecomposedChar($this) {
    if ($this.$decomposedCharUTF16 === null)
        $this.$decomposedCharUTF16 = jl_String__init_($this.$decomposedChar);
    return $this.$decomposedCharUTF16;
}
function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $decompSyllable, $vIndex, $tIndex, var$8, $curSymb, $lIndex, $i, $decompCurSymb, var$13, var$14;
    $rightBound = $matchResult.$rightBound0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$8 = $strIndex + 1 | 0;
    $curSymb = jl_String_charAt($testString, $strIndex);
    $lIndex = $curSymb - 44032 | 0;
    if ($lIndex >= 0 && $lIndex < 11172) {
        $strIndex = 4352 + ($lIndex / 588 | 0) | 0;
        $i = 4449 + (($lIndex % 588 | 0) / 28 | 0) | 0;
        $lIndex = $lIndex % 28 | 0;
        if (!$lIndex) {
            $decompCurSymb = $rt_createIntArray(2);
            var$13 = $decompCurSymb.data;
            var$13[0] = $strIndex;
            var$13[1] = $i;
        } else {
            var$14 = 4519 + $lIndex | 0;
            $decompCurSymb = $rt_createIntArray(3);
            var$13 = $decompCurSymb.data;
            var$13[0] = $strIndex;
            var$13[1] = $i;
            var$13[2] = var$14;
        }
    } else
        $decompCurSymb = null;
    if ($decompCurSymb !== null) {
        $decompCurSymb = $decompCurSymb.data;
        $i = 0;
        if ($decompCurSymb.length != $this.$decomposedCharLength)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength)
                return $this.$next6.$matches0(var$8, $testString, $matchResult);
            if ($decompCurSymb[$i] != $this.$decomposedChar.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $decompSyllable = $decompSyllable.data;
    $decompSyllable[0] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$8 < $rightBound) {
            $curSymb = jl_String_charAt($testString, var$8);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            $lIndex = var$8 + 1 | 0;
            $decompSyllable[1] = $curSymb;
            if ($lIndex < $rightBound) {
                $curSymb = jl_String_charAt($testString, $lIndex);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                $strIndex = $lIndex + 1 | 0;
                $decompSyllable[2] = $curSymb;
                return $this.$decomposedCharLength == 3 && $decompSyllable[0] == $this.$decomposedChar.data[0] && $decompSyllable[1] == $this.$decomposedChar.data[1] && $decompSyllable[2] == $this.$decomposedChar.data[2] ? $this.$next6.$matches0($strIndex, $testString, $matchResult) : (-1);
            }
            return $this.$decomposedCharLength == 2 && $decompSyllable[0] == $this.$decomposedChar.data[0] && $decompSyllable[1] == $this.$decomposedChar.data[1] ? $this.$next6.$matches0($lIndex, $testString, $matchResult) : (-1);
        }
        return (-1);
    }
    return (-1);
}
function jur_HangulDecomposedCharSet_first($this, $set) {
    return $set instanceof jur_HangulDecomposedCharSet && !jl_String_equals(jur_HangulDecomposedCharSet_getDecomposedChar($set), jur_HangulDecomposedCharSet_getDecomposedChar($this)) ? 0 : 1;
}
function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
function jur_CharSet__init_(var_0) {
    var var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CharSet__init_0($this, $ch) {
    jur_LeafSet__init_($this);
    $this.$ch2 = $ch;
}
function jur_CharSet_charCount($this) {
    return 1;
}
function jur_CharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch2 != jl_String_charAt($testString, $strIndex) ? (-1) : 1;
}
function jur_CharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound0;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = jl_String_indexOf($testStr, $this.$ch2, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next6;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches0($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = jl_String_lastIndexOf0($testStr, $this.$ch2, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next6.$matches0(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
}
function jur_CharSet_getChar($this) {
    return $this.$ch2;
}
function jur_CharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return $set.$ch2 != $this.$ch2 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains0($this.$ch2);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return jur_RangeSet_accepts($set, 0, jl_Character_toString($this.$ch2)) <= 0 ? 0 : 1;
}
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch3 = 0;
}
function jur_UCICharSet__init_(var_0) {
    var var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCICharSet__init_0($this, $ch) {
    jur_LeafSet__init_($this);
    $this.$ch3 = jl_Character_toLowerCase(jl_Character_toUpperCase0($ch));
}
function jur_UCICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch3 != jl_Character_toLowerCase(jl_Character_toUpperCase0(jl_String_charAt($testString, $strIndex))) ? (-1) : 1;
}
function jur_CICharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$ch4 = 0;
    a.$supplement = 0;
}
function jur_CICharSet__init_(var_0) {
    var var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CICharSet__init_0($this, $ch) {
    jur_LeafSet__init_($this);
    $this.$ch4 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
}
function jur_CICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch4 != jl_String_charAt($testString, $strIndex) && $this.$supplement != jl_String_charAt($testString, $strIndex) ? (-1) : 1;
}
function jur_DecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF160 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength0 = 0;
}
function jur_DecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_AbstractSet__init_($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
function jur_DecomposedCharSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $decCodePoint, $rightBound, $curChar, var$7, $decCurCodePoint, var$9, var$10, $readCodePoints;
    $decCodePoint = $rt_createIntArray(4);
    $rightBound = $matchResult.$rightBound0;
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound);
    var$7 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        $decCurCodePoint = $decCodePoint.data;
        $strIndex = 1;
        $decCurCodePoint[0] = $curChar;
    } else {
        $strIndex = $decCurCodePoint.data.length;
        jl_System_arraycopy($decCurCodePoint, 0, $decCodePoint, 0, $strIndex);
        $strIndex = 0 + $strIndex | 0;
    }
    a: {
        if (var$7 < $rightBound) {
            var$9 = $decCodePoint.data;
            $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
            while ($strIndex < 4) {
                if (!(($curChar != 832 ? 0 : 1) | ($curChar != 833 ? 0 : 1) | ($curChar != 835 ? 0 : 1) | ($curChar != 836 ? 0 : 1))) {
                    var$10 = $strIndex + 1 | 0;
                    var$9[$strIndex] = $curChar;
                } else {
                    $decCurCodePoint = jur_Lexer_getDecomposition($curChar).data;
                    if ($decCurCodePoint.length != 2) {
                        var$10 = $strIndex + 1 | 0;
                        var$9[$strIndex] = $decCurCodePoint[0];
                    } else {
                        $readCodePoints = $strIndex + 1 | 0;
                        var$9[$strIndex] = $decCurCodePoint[0];
                        var$10 = $readCodePoints + 1 | 0;
                        var$9[$readCodePoints] = $decCurCodePoint[1];
                    }
                }
                var$7 = var$7 + $this.$readCharsForCodePoint | 0;
                if (var$7 >= $rightBound) {
                    $strIndex = var$10;
                    break a;
                }
                $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                $strIndex = var$10;
            }
        }
    }
    if ($strIndex != $this.$decomposedCharLength0)
        return (-1);
    $decCurCodePoint = $decCodePoint.data;
    $curChar = 0;
    while (true) {
        if ($curChar >= $strIndex)
            return $this.$next6.$matches0(var$7, $testString, $matchResult);
        if ($decCurCodePoint[$curChar] != $this.$decomposedChar0.data[$curChar])
            break;
        $curChar = $curChar + 1 | 0;
    }
    return (-1);
}
function jur_DecomposedCharSet_getDecomposedChar($this) {
    var $strBuff, $i;
    if ($this.$decomposedCharUTF160 === null) {
        $strBuff = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($strBuff);
        $i = 0;
        while ($i < $this.$decomposedCharLength0) {
            jl_AbstractStringBuilder_append2($strBuff, jl_Character_toChars($this.$decomposedChar0.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF160 = jl_AbstractStringBuilder_toString($strBuff);
    }
    return $this.$decomposedCharUTF160;
}
function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
    var $curChar, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = jl_String_charAt($testString, $strIndex);
    else {
        $rightBound = $strIndex + 1 | 0;
        $curChar = jl_String_charAt($testString, $strIndex);
        $low = jl_String_charAt($testString, $rightBound);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArray(2).data;
            $curCodePointUTF16[0] = $curChar;
            $curCodePointUTF16[1] = $low;
            $curChar = 0 < ($curCodePointUTF16.length - 1 | 0) && jl_Character_isHighSurrogate($curCodePointUTF16[0]) && jl_Character_isLowSurrogate($curCodePointUTF16[1]) ? jl_Character_toCodePoint($curCodePointUTF16[0], $curCodePointUTF16[1]) : $curCodePointUTF16[0];
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
}
function jur_DecomposedCharSet_first($this, $set) {
    return $set instanceof jur_DecomposedCharSet && !jl_String_equals(jur_DecomposedCharSet_getDecomposedChar($set), jur_DecomposedCharSet_getDecomposedChar($this)) ? 0 : 1;
}
function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_UCIDecomposedCharSet() {
    jur_DecomposedCharSet.call(this);
}
function jur_CIDecomposedCharSet() {
    jur_DecomposedCharSet.call(this);
}
function jur_PossessiveGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_PosPlusGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            $stringIndex = $this.$innerSet.$matches0($nextIndex, $testString, $matchResult);
            if ($stringIndex <= $nextIndex)
                break;
            $nextIndex = $stringIndex;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet_setNext($this, $next) {
    $this.$next6 = $next;
    $this.$innerSet.$setNext($next);
}
function jur_PosAltGroupQuantifierSet() {
    jur_AltGroupQuantifierSet.call(this);
}
function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next6.$matches0($nextIndex, $testString, $matchResult);
}
function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_CompositeGroupQuantifierSet() {
    var a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier0 = null;
    a.$setCounter = 0;
}
function jur_CompositeGroupQuantifierSet__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
    $this.$setCounter = $setCounter;
}
function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, $nextIndex;
    $enterCounter = jur_MatchResultImpl_getEnterCounter($matchResult, $this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max1)
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + 1 | 0;
    jur_MatchResultImpl_setEnterCounter($matchResult, $nextIndex, $enterCounter);
    $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
        return $nextIndex;
    }
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + (-1) | 0;
    jur_MatchResultImpl_setEnterCounter($matchResult, $nextIndex, $enterCounter);
    if ($enterCounter >= $this.$quantifier0.$min1)
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
    return (-1);
}
function jur_PosCompositeGroupQuantifierSet() {
    jur_CompositeGroupQuantifierSet.call(this);
}
function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier0.$max1;
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier0.$min1)
        return (-1);
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_ReluctantGroupQuantifierSet() {
    jur_GroupQuantifierSet.call(this);
}
function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    $res = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
}
function jur_RelAltGroupQuantifierSet() {
    jur_AltGroupQuantifierSet.call(this);
}
function jur_RelAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    return $nextIndex;
}
function jur_RelCompositeGroupQuantifierSet() {
    jur_CompositeGroupQuantifierSet.call(this);
}
function jur_RelCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, $nextIndex;
    $enterCounter = jur_MatchResultImpl_getEnterCounter($matchResult, $this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max1) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
        return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier0.$min1) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
            return $nextIndex;
        }
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
}
function jur_DotAllQuantifierSet() {
    jur_QuantifierSet.call(this);
}
function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$rightBound0;
    if ($strLength > $stringIndex)
        return $this.$next6.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$rightBound0;
    if ($this.$next6.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
}
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
function jur_DotQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startSearch;
    $strLength = $matchResult.$rightBound0;
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next6.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_DotQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $res, $nextSearch, $leftBound;
    $strLength = $matchResult.$rightBound0;
    $res = $this.$next6.$find0($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    $nextSearch = $this.$next6.$findBack($res, $strLength, $testString, $matchResult);
    if ($res < $nextSearch)
        $res = $nextSearch;
    if ($res <= 0)
        $leftBound = $res ? (-1) : 0;
    else {
        $leftBound = $res - 1 | 0;
        a: {
            while (true) {
                if ($leftBound < $stringIndex) {
                    $leftBound = (-1);
                    break a;
                }
                if ($this.$lt.$isLineTerminator(jl_String_charAt($testString, $leftBound)))
                    break;
                $leftBound = $leftBound + (-1) | 0;
            }
        }
    }
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= $res ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
}
function jur_DotQuantifierSet_findLineTerminator($this, $i, $to, $testString) {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt.$isLineTerminator(jl_String_charAt($testString, $i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jur_AbstractLineTerminator() {
    jl_Object.call(this);
}
var jur_AbstractLineTerminator_unixLT = null;
var jur_AbstractLineTerminator_unicodeLT = null;
function jur_AbstractLineTerminator_getInstance($flag) {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = new jur_AbstractLineTerminator$2;
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = new jur_AbstractLineTerminator$1;
    return jur_AbstractLineTerminator_unixLT;
}
function jur_PossessiveQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_PossessiveAltQuantifierSet() {
    jur_AltQuantifierSet.call(this);
}
function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_PossessiveCompositeQuantifierSet() {
    jur_CompositeQuantifierSet.call(this);
}
function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift, $shift_0;
    $min = $this.$quantifier.$min1;
    $max = $this.$quantifier.$max1;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift_0 = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift_0 < 1)
            break;
        $stringIndex = $stringIndex + $shift_0 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_ReluctantQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
}
function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (true) {
        var$4 = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
}
function jur_ReluctantAltQuantifierSet() {
    jur_AltQuantifierSet.call(this);
}
function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches0($stringIndex, $testString, $matchResult);
}
function jur_ReluctantCompositeQuantifierSet() {
    jur_CompositeQuantifierSet.call(this);
}
function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier.$min1;
    $max = $this.$quantifier.$max1;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next6.$matches0($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_SOLSet() {
    jur_AbstractSet.call(this);
}
function jur_SOLSet__init_0() {
    var var_0 = new jur_SOLSet();
    jur_SOLSet__init_(var_0);
    return var_0;
}
function jur_SOLSet__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ($strIndex && !($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound0))
        return (-1);
    return $this.$next6.$matches0($strIndex, $testString, $matchResult);
}
function jur_SOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
function jur_WordBoundary__init_(var_0) {
    var var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
}
function jur_WordBoundary__init_0($this, $positive) {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
}
function jur_WordBoundary_matches($this, $stringIndex, $testString, $matchResult) {
    var $ch1, $ch2, $leftBound;
    $ch1 = $stringIndex < $matchResult.$rightBound0 ? jl_String_charAt($testString, $stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : jl_String_charAt($testString, $stringIndex - 1 | 0);
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound0;
    return ($ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1) ^ ($ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1) ^ $this.$positive ? (-1) : $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_WordBoundary_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_WordBoundary_isSpace($this, $ch, $index, $leftBound, $testString) {
    var var$5;
    if (!jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = jl_String_charAt($testString, $index);
                    if (jl_Character_isLetterOrDigit(var$5))
                        return 0;
                    if (jl_Character_getType(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
}
function jur_PreviousMatch() {
    jur_AbstractSet.call(this);
}
function jur_PreviousMatch__init_0() {
    var var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_(var_0);
    return var_0;
}
function jur_PreviousMatch__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex != $matchResult.$previousMatch)
        return (-1);
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_PreviousMatch_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
function jur_EOLSet__init_0(var_0) {
    var var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
}
function jur_EOLSet__init_($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter = $counter;
}
function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, var$5, $ch;
    $rightBound = !$matchResult.$anchoringBounds ? jl_String_length($testString) : $matchResult.$rightBound0;
    if ($strIndex >= $rightBound) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
        return $this.$next6.$matches0($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && jl_String_charAt($testString, $strIndex) == 13 && jl_String_charAt($testString, $strIndex + 1 | 0) == 10) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
        return $this.$next6.$matches0($strIndex, $testString, $matchResult);
    }
    a: {
        if (var$5 == 1) {
            $ch = jl_String_charAt($testString, $strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
    return $this.$next6.$matches0($strIndex, $testString, $matchResult);
}
function jur_EOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, (-1));
    return $res;
}
function jur_EOISet() {
    jur_AbstractSet.call(this);
}
function jur_EOISet__init_0() {
    var var_0 = new jur_EOISet();
    jur_EOISet__init_(var_0);
    return var_0;
}
function jur_EOISet__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex < ($matchResult.$transparentBounds ? jl_String_length($testString) : $matchResult.$rightBound0))
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next6.$matches0($stringIndex, $testString, $matchResult);
}
function jur_EOISet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt0 = null;
}
function jur_MultiLineSOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineSOLSet__init_0($this, $lt) {
    jur_AbstractSet__init_($this);
    $this.$lt0 = $lt;
}
function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
    a: {
        if ($strIndex != $matchResult.$rightBound0) {
            if (!$strIndex)
                break a;
            if ($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound0)
                break a;
            if ($this.$lt0.$isAfterLineTerminator(jl_String_charAt($testString, $strIndex - 1 | 0), jl_String_charAt($testString, $strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next6.$matches0($strIndex, $testString, $matchResult);
}
function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_DotAllSet() {
    jur_JointSet.call(this);
}
function jur_DotAllSet__init_0() {
    var var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_(var_0);
    return var_0;
}
function jur_DotAllSet__init_($this) {
    jur_AbstractSet__init_($this);
}
function jur_DotAllSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7;
    $strLength = $matchResult.$rightBound0;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = jl_String_charAt($testString, $stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength && jl_Character_isSurrogatePair($high, jl_String_charAt($testString, var$5)))
            return $this.$next6.$matches0(var$7, $testString, $matchResult);
    }
    return $this.$next6.$matches0(var$5, $testString, $matchResult);
}
function jur_DotAllSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_DotAllSet_getType($this) {
    return (-2147483602);
}
function jur_DotAllSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt1 = null;
}
function jur_DotSet__init_(var_0) {
    var var_1 = new jur_DotSet();
    jur_DotSet__init_0(var_1, var_0);
    return var_1;
}
function jur_DotSet__init_0($this, $lt) {
    jur_AbstractSet__init_($this);
    $this.$lt1 = $lt;
}
function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, $low;
    $strLength = $matchResult.$rightBound0;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = jl_String_charAt($testString, $stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        $stringIndex = $stringIndex + 2 | 0;
        if ($stringIndex <= $strLength) {
            $low = jl_String_charAt($testString, var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt1.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next6.$matches0($stringIndex, $testString, $matchResult);
        }
    }
    return $this.$lt1.$isLineTerminator($high) ? (-1) : $this.$next6.$matches0(var$5, $testString, $matchResult);
}
function jur_DotSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_DotSet_getType($this) {
    return (-2147483602);
}
function jur_DotSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
function jur_UEOLSet__init_(var_0) {
    var var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter0 = $counter;
}
function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$anchoringBounds ? jl_String_length($testString) : $matchResult.$rightBound0;
    if ($strIndex >= $rightBound) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
        return $this.$next6.$matches0($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && jl_String_charAt($testString, $strIndex) == 10) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 1);
        return $this.$next6.$matches0($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_UEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter0) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, (-1));
    return $res;
}
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
function jur_UMultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UMultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter1 = $counter;
}
function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ((!$matchResult.$anchoringBounds ? jl_String_length($testString) - $strIndex | 0 : $matchResult.$rightBound0 - $strIndex | 0) <= 0) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, 0);
        return $this.$next6.$matches0($strIndex, $testString, $matchResult);
    }
    if (jl_String_charAt($testString, $strIndex) != 10)
        return (-1);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, 1);
    return $this.$next6.$matches0($strIndex + 1 | 0, $testString, $matchResult);
}
function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter1) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, (-1));
    return $res;
}
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
function jur_MultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
}
function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$anchoringBounds ? jl_String_length($testString) - $strIndex | 0 : $matchResult.$leftBound0 - $strIndex | 0;
    if (!$strDif) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 0);
        return $this.$next6.$matches0($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = jl_String_charAt($testString, $strIndex);
        $ch2 = 97;
    } else {
        $ch1 = jl_String_charAt($testString, $strIndex);
        $ch2 = jl_String_charAt($testString, $strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 0);
            return $this.$next6.$matches0($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 0);
                return $this.$next6.$matches0($strIndex, $testString, $matchResult);
            }
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 0);
            return $this.$next6.$matches0($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
}
function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter2) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, (-1));
    return $res;
}
function jur_CIBackReferenceSet() {
    var a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter3 = 0;
}
function jur_CIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_AbstractSet__init_($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter3 = $consCounter;
}
function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + jl_String_length($group) | 0) <= $matchResult.$rightBound0) {
        $i = 0;
        while (true) {
            if ($i >= jl_String_length($group)) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, jl_String_length($group));
                return $this.$next6.$matches0($stringIndex + jl_String_length($group) | 0, $testString, $matchResult);
            }
            var$6 = jl_String_charAt($group, $i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != jl_String_charAt($testString, var$7) && jur_Pattern_getSupplement(jl_String_charAt($group, $i)) != jl_String_charAt($testString, var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_CIBackReferenceSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_CIBackReferenceSet_getString($this, $matchResult) {
    return jur_MatchResultImpl_getGroupNoCheck($matchResult, $this.$referencedGroup);
}
function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter3) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, (-1));
    return $res;
}
function jur_BackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
}
function jur_BackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $shift;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + jl_String_length($group) | 0) <= $matchResult.$rightBound0) {
        $shift = !jl_String_startsWith0($testString, $group, $stringIndex) ? (-1) : jl_String_length($group);
        if ($shift < 0)
            return (-1);
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, $shift);
        return $this.$next6.$matches0($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $group, $strLength, $testStr;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    $strLength = $matchResult.$leftBound0;
    if ($group !== null && ($strIndex + jl_String_length($group) | 0) <= $strLength) {
        $testStr = $testString;
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            $strIndex = jl_String_indexOf1($testStr, $group, $strIndex);
            if ($strIndex < 0)
                return (-1);
            if ($this.$next6.$matches0($strIndex + jl_String_length($group) | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = $strIndex + 1 | 0;
        }
        return $strIndex;
    }
    return (-1);
}
function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $group, $testStr, var$7;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = jl_String_lastIndexOf1($testStr, $group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next6.$matches0(var$7 + jl_String_length($group) | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_first($this, $set) {
    return 1;
}
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
}
function jur_UCIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + jl_String_length($group) | 0) <= $matchResult.$rightBound0) {
        $i = 0;
        while (true) {
            if ($i >= jl_String_length($group)) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, jl_String_length($group));
                return $this.$next6.$matches0($stringIndex + jl_String_length($group) | 0, $testString, $matchResult);
            }
            if (jl_Character_toLowerCase(jl_Character_toUpperCase0(jl_String_charAt($group, $i))) != jl_Character_toLowerCase(jl_Character_toUpperCase0(jl_String_charAt($testString, $stringIndex + $i | 0))))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_SequenceSet() {
    var a = this; jur_LeafSet.call(a);
    a.$string1 = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
function jur_SequenceSet__init_(var_0) {
    var var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet__init_0($this, $substring) {
    var $j;
    jur_LeafSet__init_($this);
    $this.$string1 = jl_AbstractStringBuilder_toString($substring);
    $this.$charCount = jl_StringBuffer_length($substring);
    $this.$leftToRight = jur_SequenceSet$IntHash__init_($this.$charCount);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount);
    $j = 0;
    while ($j < ($this.$charCount - 1 | 0)) {
        jur_SequenceSet$IntHash_put($this.$leftToRight, jl_String_charAt($this.$string1, $j), ($this.$charCount - $j | 0) - 1 | 0);
        jur_SequenceSet$IntHash_put($this.$rightToLeft, jl_String_charAt($this.$string1, ($this.$charCount - $j | 0) - 1 | 0), ($this.$charCount - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
}
function jur_SequenceSet_accepts($this, $strIndex, $testString) {
    return !jur_SequenceSet_startsWith($this, $testString, $strIndex) ? (-1) : $this.$charCount;
}
function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $strLength, var$5;
    $strLength = $matchResult.$rightBound0;
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = jur_SequenceSet_indexOf($this, $testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next6.$matches0(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
}
function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        $lastIndex = jur_SequenceSet_lastIndexOf($this, $testString, $strIndex, $lastIndex);
        if ($lastIndex < 0)
            return (-1);
        if ($this.$next6.$matches0($lastIndex + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = $lastIndex + (-1) | 0;
    }
    return $lastIndex;
}
function jur_SequenceSet_first($this, $set) {
    var var$2;
    if ($set instanceof jur_CharSet)
        return $set.$ch2 != jl_String_charAt($this.$string1, 0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return jur_RangeSet_accepts($set, 0, jl_String_substring0($this.$string1, 0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return jl_String_length($this.$string1) > 1 && $set.$ch1 == jl_Character_toCodePoint(jl_String_charAt($this.$string1, 0), jl_String_charAt($this.$string1, 1)) ? 1 : 0;
    }
    a: {
        b: {
            $set = $set;
            if (!$set.$contains0(jl_String_charAt($this.$string1, 0))) {
                if (jl_String_length($this.$string1) <= 1)
                    break b;
                if (!$set.$contains0(jl_Character_toCodePoint(jl_String_charAt($this.$string1, 0), jl_String_charAt($this.$string1, 1))))
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function jur_SequenceSet_indexOf($this, $str, $i, $to) {
    var $last, $ch;
    $last = jl_String_charAt($this.$string1, $this.$charCount - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount | 0))
            return (-1);
        $ch = jl_String_charAt($str, ($i + $this.$charCount | 0) - 1 | 0);
        if ($ch == $last && jur_SequenceSet_startsWith($this, $str, $i))
            break;
        $i = $i + jur_SequenceSet$IntHash_get($this.$leftToRight, $ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
    var $first, $delta, $ch;
    $first = jl_String_charAt($this.$string1, 0);
    $delta = (jl_String_length($str) - $i | 0) - $this.$charCount | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = jl_String_charAt($str, $i);
        if ($ch == $first && jur_SequenceSet_startsWith($this, $str, $i))
            break;
        $i = $i - jur_SequenceSet$IntHash_get($this.$rightToLeft, $ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_startsWith($this, $str, $from) {
    var $i;
    $i = 0;
    while ($i < $this.$charCount) {
        if (jl_String_charAt($str, $i + $from | 0) != jl_String_charAt($this.$string1, $i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string2 = null;
}
function jur_UCISequenceSet__init_(var_0) {
    var var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISequenceSet__init_0($this, $substring) {
    var $res, $i;
    jur_LeafSet__init_($this);
    $res = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($res);
    $i = 0;
    while ($i < jl_StringBuffer_length($substring)) {
        jl_AbstractStringBuilder_append($res, jl_Character_toLowerCase(jl_Character_toUpperCase0(jl_StringBuffer_charAt($substring, $i))));
        $i = $i + 1 | 0;
    }
    $this.$string2 = jl_AbstractStringBuilder_toString($res);
    $this.$charCount = jl_StringBuilder_length($res);
}
function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= jl_String_length($this.$string2))
            return jl_String_length($this.$string2);
        if (jl_String_charAt($this.$string2, $i) != jl_Character_toLowerCase(jl_Character_toUpperCase0(jl_String_charAt($testString, $strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string0 = null;
}
function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5;
    $i = 0;
    while (true) {
        if ($i >= jl_String_length($this.$string0))
            return jl_String_length($this.$string0);
        var$4 = jl_String_charAt($this.$string0, $i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != jl_String_charAt($testString, var$5) && jur_Pattern_getSupplement(jl_String_charAt($this.$string0, $i)) != jl_String_charAt($testString, var$5))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_AbstractCharClass$PredefinedCharacterClasses() {
    jl_Object.call(this);
}
var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
function jur_AbstractCharClass$PredefinedCharacterClasses__init_0() {
    var var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_($this) {
    return;
}
function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
    var $i, var$3, $row;
    $i = 0;
    while (true) {
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length) {
            var$3 = new ju_MissingResourceException;
            jl_Throwable__init_(var$3, $rt_s(17));
            var$3.$className = $rt_s(17);
            var$3.$key1 = $name;
            $rt_throw(var$3);
        }
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i].data;
        if (jl_String_equals($name, $row[0]))
            break;
        $i = $i + 1 | 0;
    }
    return $row[1];
}
function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
    var var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_0();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_0();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(704);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_0();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(705);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_0();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(706);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_0();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(707);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_0();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(708);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(709);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_0();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(710);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_0();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(711);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_0();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(712);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_0();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(713);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_0();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(714);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_0();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(715);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_0();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(716);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_0();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(717);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_0();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(718);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_0();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(719);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_0();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(720);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_0();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(721);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_0();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(722);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(723);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_0();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(724);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(725);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(726);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_0();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(727);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(728);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_0();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(729);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_0();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(730);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(731);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(732);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(733);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_0();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(56);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_0();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(734);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(70);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_0();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(735);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(71);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_0();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(736);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(737);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(738);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(739);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(740);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(741);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(742);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(743);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(744);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(745);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(746);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(747);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(748);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(749);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(750);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(751);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(752);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(753);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(754);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(755);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(756);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(757);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(758);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(759);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(760);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(761);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(762);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(763);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(764);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(765);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(766);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(767);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(768);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(769);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(770);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(771);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(772);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(773);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(774);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(775);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(776);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(777);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(778);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(779);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(780);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(781);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(782);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(783);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(784);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(785);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(786);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(787);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(788);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(789);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(790);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(791);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(792);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(793);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(794);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(795);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(796);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(797);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(798);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(799);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(800);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(801);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(802);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(803);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(804);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(805);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(806);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(807);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(808);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(809);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(810);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(811);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(812);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(813);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(814);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(815);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(816);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(817);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(818);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(819);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(820);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(821);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(822);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(823);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(824);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(825);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(826);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(827);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(828);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(829);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(830);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(831);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(832);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(833);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(834);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(835);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(836);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(837);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(838);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(839);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(840);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(841);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(842);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(843);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(844);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(845);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(846);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(847);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(848);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(849);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(850);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(851);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(852);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(853);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(854);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(855);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(856);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(857);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_0();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(858);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(859);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(860);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(861);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(862);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(863);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(864);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(865);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(866);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(867);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(868);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(88);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(869);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(870);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(871);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(872);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(873);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(874);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(875);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(876);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_0(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(877);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(878);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(879);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(880);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_0(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(881);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(882);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(883);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(884);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(885);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(886);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(887);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(888);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(889);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(890);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(891);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(892);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(893);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
}
function jur_AbstractCharClass$LazyCharClass() {
    var a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = jur_AbstractCharClass_setNegative($this.$computeValue(), 1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
}
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
    var $low, $high;
    $low = $strIndex + 1 | 0;
    $high = jl_String_charAt($testString, $strIndex);
    $low = jl_String_charAt($testString, $low);
    return $this.$ch0 != jl_Character_toLowerCase0(jl_Character_toUpperCase(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
}
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low0 = 0;
}
function jur_LowSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowSurrogateCharSet__init_0($this, $low) {
    jur_AbstractSet__init_($this);
    $this.$low0 = $low;
}
function jur_LowSurrogateCharSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $low;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$rightBound0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = jl_String_charAt($testString, $stringIndex);
    if ($stringIndex > $matchResult.$leftBound0 && jl_Character_isHighSurrogate(jl_String_charAt($testString, $stringIndex - 1 | 0)))
        return (-1);
    if ($this.$low0 != $low)
        return (-1);
    return $this.$next6.$matches0(var$4, $testString, $matchResult);
}
function jur_LowSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$leftBound0;
    $strLength = $matchResult.$rightBound0;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = jl_String_indexOf($testStr, $this.$low0, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testStr, var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next6;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches0($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
}
function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $startStr, $testStr;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$leftBound0;
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf0($testStr, $this.$low0, $lastIndex);
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            if ($lastIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testStr, $lastIndex - 1 | 0))) {
                $lastIndex = $lastIndex + (-2) | 0;
                continue;
            }
            if ($this.$next6.$matches0($lastIndex + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
}
function jur_LowSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low0 != $this.$low0 ? 0 : 1;
}
function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high0 = 0;
}
function jur_HighSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_HighSurrogateCharSet__init_0($this, $high) {
    jur_AbstractSet__init_($this);
    $this.$high0 = $high;
}
function jur_HighSurrogateCharSet_setNext($this, $next) {
    $this.$next6 = $next;
}
function jur_HighSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $low, $high;
    $strLength = $matchResult.$rightBound0;
    var$5 = $stringIndex + 1 | 0;
    $low = $rt_compare(var$5, $strLength);
    if ($low > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = jl_String_charAt($testString, $stringIndex);
    if ($low < 0 && jl_Character_isLowSurrogate(jl_String_charAt($testString, var$5)))
        return (-1);
    if ($this.$high0 != $high)
        return (-1);
    return $this.$next6.$matches0(var$5, $testString, $matchResult);
}
function jur_HighSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound0;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = jl_String_indexOf($testStr, $this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testStr, $strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next6.$matches0($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_HighSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound0;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf0($testStr, $this.$high0, $lastIndex);
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            var$7 = $lastIndex + 1 | 0;
            if (var$7 < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testStr, var$7))) {
                $lastIndex = $lastIndex + (-1) | 0;
                continue;
            }
            if ($this.$next6.$matches0(var$7, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
}
function jur_HighSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high0 != $this.$high0 ? 0 : 1;
}
function jur_HighSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_SupplCharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$high = 0;
    a.$low = 0;
    a.$ch1 = 0;
}
function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
    var $low, $high;
    $low = $strIndex + 1 | 0;
    $high = jl_String_charAt($testString, $strIndex);
    $low = jl_String_charAt($testString, $low);
    return $this.$high == $high && $this.$low == $low ? 2 : (-1);
}
function jur_SupplCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound0;
    while ($strIndex < $strLength) {
        $strIndex = jl_String_indexOf($testStr, $this.$high, $strIndex);
        if ($strIndex < 0)
            return (-1);
        $strIndex = $strIndex + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = jl_String_charAt($testStr, $strIndex);
        if ($this.$low == $ch && $this.$next6.$matches0($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
}
function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf0($testStr, $this.$low, $lastIndex) + (-1) | 0;
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            if ($this.$high == jl_String_charAt($testStr, $lastIndex) && $this.$next6.$matches0($lastIndex + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
}
function jur_SupplCharSet_getCodePoint($this) {
    return $this.$ch1;
}
function jur_SupplCharSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $set.$ch1 != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains0($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
}
function jur_AbstractLineTerminator$1() {
    jur_AbstractLineTerminator.call(this);
}
function jur_AbstractLineTerminator$1__init_0() {
    var var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$1__init_($this) {
    return;
}
function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$2() {
    jur_AbstractLineTerminator.call(this);
}
function jur_AbstractLineTerminator$2__init_0() {
    var var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$2__init_($this) {
    return;
}
function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
}
function jur_SequenceSet$IntHash() {
    var a = this; jl_Object.call(a);
    a.$table0 = null;
    a.$values2 = null;
    a.$mask = 0;
    a.$size6 = 0;
}
function jur_SequenceSet$IntHash__init_(var_0) {
    var var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet$IntHash__init_0($this, $size) {
    while ($size >= $this.$mask) {
        $this.$mask = $this.$mask << 1 | 1;
    }
    $this.$mask = $this.$mask << 1 | 1;
    $this.$table0 = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$values2 = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$size6 = $size;
}
function jur_SequenceSet$IntHash_put($this, $key, $value) {
    var $i, $hashCode;
    $i = 0;
    $hashCode = $key & $this.$mask;
    while ($this.$table0.data[$hashCode] && $this.$table0.data[$hashCode] != $key) {
        $i = ($i + 1 | 0) & $this.$mask;
        $hashCode = ($hashCode + $i | 0) & $this.$mask;
    }
    $this.$table0.data[$hashCode] = $key;
    $this.$values2.data[$hashCode] = $value;
}
function jur_SequenceSet$IntHash_get($this, $key) {
    var $hashCode, $i, $storedKey;
    $hashCode = $key & $this.$mask;
    $i = 0;
    while (true) {
        $storedKey = $this.$table0.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values2.data[$hashCode];
        $i = ($i + 1 | 0) & $this.$mask;
        $hashCode = ($hashCode + $i | 0) & $this.$mask;
    }
    return $this.$size6;
}
function jur_IntHash() {
    jl_Object.call(this);
}
function jur_AbstractCharClass$LazySpace() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazySpace__init_0() {
    var var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpace__init_($this) {
    return;
}
function jur_AbstractCharClass$LazySpace_computeValue($this) {
    return jur_CharClass_add(jur_CharClass_add0(jur_CharClass__init_1(), 9, 13), 32);
}
function jur_AbstractCharClass$LazyDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyDigit__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyDigit__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyDigit_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass__init_1(), 48, 57);
}
function jur_AbstractCharClass$LazyLower() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyLower__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyLower__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyLower_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass__init_1(), 97, 122);
}
function jur_AbstractCharClass$LazyUpper() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyUpper__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyUpper__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyUpper_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass__init_1(), 65, 90);
}
function jur_AbstractCharClass$LazyASCII() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyASCII__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyASCII__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyASCII_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass__init_1(), 0, 127);
}
function jur_AbstractCharClass$LazyAlpha() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyAlpha__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlpha__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_1(), 97, 122), 65, 90);
}
function jur_AbstractCharClass$LazyAlnum() {
    jur_AbstractCharClass$LazyAlpha.call(this);
}
function jur_AbstractCharClass$LazyAlnum__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlnum__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
    return jur_CharClass_add0(jur_AbstractCharClass$LazyAlpha_computeValue($this), 48, 57);
}
function jur_AbstractCharClass$LazyPunct() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyPunct__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPunct__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyPunct_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_1(), 33, 64), 91, 96), 123, 126);
}
function jur_AbstractCharClass$LazyGraph() {
    jur_AbstractCharClass$LazyAlnum.call(this);
}
function jur_AbstractCharClass$LazyGraph__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyGraph__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyGraph_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_AbstractCharClass$LazyAlnum_computeValue($this), 33, 64), 91, 96), 123, 126);
}
function jur_AbstractCharClass$LazyPrint() {
    jur_AbstractCharClass$LazyGraph.call(this);
}
function jur_AbstractCharClass$LazyPrint__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPrint__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyPrint_computeValue($this) {
    return jur_CharClass_add(jur_AbstractCharClass$LazyGraph_computeValue($this), 32);
}
function jur_AbstractCharClass$LazyBlank() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyBlank__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyBlank__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyBlank_computeValue($this) {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_1(), 32), 9);
}
function jur_AbstractCharClass$LazyCntrl() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyCntrl__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCntrl__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
    return jur_CharClass_add(jur_CharClass_add0(jur_CharClass__init_1(), 0, 31), 127);
}
function jur_AbstractCharClass$LazyXDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyXDigit__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyXDigit__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyXDigit_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_1(), 48, 57), 97, 102), 65, 70);
}
function jur_AbstractCharClass$LazyJavaLowerCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaLowerCase_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLowerCase$1;
    $chCl.$this$026 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaUpperCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaUpperCase_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUpperCase$1;
    $chCl.$this$027 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaWhitespace() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaWhitespace_computeValue($this) {
    var var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaWhitespace$1;
    var$1.$this$028 = $this;
    jur_AbstractCharClass__init_0(var$1);
    return var$1;
}
function jur_AbstractCharClass$LazyJavaMirrored() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaMirrored__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaMirrored__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaMirrored_computeValue($this) {
    var var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaMirrored$1;
    var$1.$this$029 = $this;
    jur_AbstractCharClass__init_0(var$1);
    return var$1;
}
function jur_AbstractCharClass$LazyJavaDefined() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaDefined__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDefined__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaDefined$1;
    $chCl.$this$030 = $this;
    jur_AbstractCharClass__init_0($chCl);
    ju_BitSet_set0($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaDigit__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDigit__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaDigit$1;
    $chCl.$this$031 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
    $chCl.$this$032 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaISOControl() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaISOControl__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaISOControl__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaISOControl_computeValue($this) {
    var var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaISOControl$1;
    var$1.$this$033 = $this;
    jur_AbstractCharClass__init_0(var$1);
    return var$1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
    $chCl.$this$034 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
    $chCl.$this$035 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaLetter() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLetter__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetter__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLetter$1;
    $chCl.$this$036 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
    $chCl.$this$037 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaSpaceChar() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
    var var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1;
    var$1.$this$038 = $this;
    jur_AbstractCharClass__init_0(var$1);
    return var$1;
}
function jur_AbstractCharClass$LazyJavaTitleCase() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
    var var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaTitleCase$1;
    var$1.$this$039 = $this;
    jur_AbstractCharClass__init_0(var$1);
    return var$1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
    $chCl.$this$040 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
    $chCl.$this$041 = $this;
    jur_AbstractCharClass__init_0($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyWord() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazyWord__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyWord__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyWord_computeValue($this) {
    return jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_1(), 97, 122), 65, 90), 48, 57), 95);
}
function jur_AbstractCharClass$LazyNonWord() {
    jur_AbstractCharClass$LazyWord.call(this);
}
function jur_AbstractCharClass$LazyNonWord__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonWord__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazyWord_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyNonSpace() {
    jur_AbstractCharClass$LazySpace.call(this);
}
function jur_AbstractCharClass$LazyNonSpace__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonSpace__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazySpace_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyNonDigit() {
    jur_AbstractCharClass$LazyDigit.call(this);
}
function jur_AbstractCharClass$LazyNonDigit__init_0() {
    var var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonDigit__init_($this) {
    return;
}
function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazyDigit_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyRange() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start9 = 0;
    a.$end2 = 0;
}
function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
    $this.$start9 = $start;
    $this.$end2 = $end;
}
function jur_AbstractCharClass$LazyRange_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass__init_1(), $this.$start9, $this.$end2);
}
function jur_AbstractCharClass$LazySpecialsBlock() {
    jur_AbstractCharClass$LazyCharClass.call(this);
}
function jur_AbstractCharClass$LazySpecialsBlock__init_0() {
    var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpecialsBlock__init_($this) {
    return;
}
function jur_AbstractCharClass$LazySpecialsBlock_computeValue($this) {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_1(), 65279, 65279), 65520, 65533);
}
function jur_AbstractCharClass$LazyCategory() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates = 0;
}
function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategory__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategory__init_1($this, $cat, $mayContainSupplCodepoints) {
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategory__init_($this.$category);
    if ($this.$containsAllSurrogates)
        ju_BitSet_set0($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
}
function jur_AbstractCharClass$LazyCategoryScope() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
    var $chCl;
    $chCl = new jur_UnicodeCategoryScope;
    jur_UnicodeCategory__init_0($chCl, $this.$category0);
    if ($this.$containsAllSurrogates0)
        ju_BitSet_set0($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
}
function otciu_UnicodeHelper$Range() {
    var a = this; jl_Object.call(a);
    a.$start1 = 0;
    a.$end = 0;
    a.$data0 = null;
}
function otciu_UnicodeHelper$Range__init_(var_0, var_1, var_2) {
    var var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function otciu_UnicodeHelper$Range__init_0($this, $start, $end, $data) {
    $this.$start1 = $start;
    $this.$end = $end;
    $this.$data0 = $data;
}
function jnc_CoderMalfunctionError() {
    jl_Error.call(this);
}
function jnc_CoderMalfunctionError__init_(var_0) {
    var var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_0(var_1, var_0);
    return var_1;
}
function jnc_CoderMalfunctionError__init_0($this, $cause) {
    jl_Throwable__init_4($this, $cause);
}
function otci_Base64Impl() {
    jl_Object.call(this);
}
var otci_Base64Impl_alphabet = null;
var otci_Base64Impl_reverse = null;
function otci_Base64Impl__init_0() {
    var var_0 = new otci_Base64Impl();
    otci_Base64Impl__init_(var_0);
    return var_0;
}
function otci_Base64Impl__init_($this) {
    return;
}
function otci_Base64Impl_decode($text, $output) {
    var $inputSize, $i, $triples, $c, $j, var$8, $d, $a, $b, $c_0, $out, $rem;
    $text = $text.data;
    $inputSize = $text.length;
    $i = $inputSize - 1 | 0;
    while ($i >= 0 && $text[$i] == 61) {
        $inputSize = $inputSize + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    $triples = ($inputSize / 4 | 0) * 4 | 0;
    $c = 0;
    $j = 0;
    while ($c < $triples) {
        var$8 = $output.data;
        $d = $c + 1 | 0;
        $a = otci_Base64Impl_decode0($text[$c]);
        $i = $d + 1 | 0;
        $b = otci_Base64Impl_decode0($text[$d]);
        $d = $i + 1 | 0;
        $c_0 = otci_Base64Impl_decode0($text[$i]);
        $c = $d + 1 | 0;
        $d = otci_Base64Impl_decode0($text[$d]);
        $out = $a << 18 | $b << 12 | $c_0 << 6 | $d;
        $i = $j + 1 | 0;
        var$8[$j] = $out >>> 16 << 24 >> 24;
        $d = $i + 1 | 0;
        var$8[$i] = $out >>> 8 << 24 >> 24;
        $j = $d + 1 | 0;
        var$8[$d] = $out << 24 >> 24;
    }
    $rem = $inputSize - $c | 0;
    if ($rem == 2)
        $output.data[$j] = (otci_Base64Impl_decode0($text[$c]) << 2 | otci_Base64Impl_decode0($text[$c + 1 | 0]) >>> 4) << 24 >> 24;
    else if ($rem == 3) {
        $output = $output.data;
        $a = otci_Base64Impl_decode0($text[$c]);
        $b = otci_Base64Impl_decode0($text[$c + 1 | 0]);
        $c = otci_Base64Impl_decode0($text[$c + 2 | 0]);
        $output[$j] = ($a << 2 | $b >>> 4) << 24 >> 24;
        $output[$j + 1 | 0] = ($b << 4 | $c >>> 2) << 24 >> 24;
    }
}
function otci_Base64Impl_decode0($c) {
    return otci_Base64Impl_reverse.data[$c];
}
function otci_Base64Impl__clinit_() {
    var $i, $c, var$3, $c_0;
    otci_Base64Impl_alphabet = $rt_createByteArray(64);
    otci_Base64Impl_reverse = $rt_createIntArray(256);
    $i = 0;
    $c = 65;
    while ($c <= 90) {
        var$3 = otci_Base64Impl_alphabet.data;
        $c_0 = $i + 1 | 0;
        var$3[$i] = $c << 24 >> 24;
        $c = ($c + 1 | 0) & 65535;
        $i = $c_0;
    }
    $c_0 = 97;
    while ($c_0 <= 122) {
        var$3 = otci_Base64Impl_alphabet.data;
        $c = $i + 1 | 0;
        var$3[$i] = $c_0 << 24 >> 24;
        $c_0 = ($c_0 + 1 | 0) & 65535;
        $i = $c;
    }
    $c_0 = 48;
    while ($c_0 <= 57) {
        var$3 = otci_Base64Impl_alphabet.data;
        $c = $i + 1 | 0;
        var$3[$i] = $c_0 << 24 >> 24;
        $c_0 = ($c_0 + 1 | 0) & 65535;
        $i = $c;
    }
    var$3 = otci_Base64Impl_alphabet.data;
    $c_0 = $i + 1 | 0;
    var$3[$i] = 43;
    otci_Base64Impl_alphabet.data[$c_0] = 47;
    ju_Arrays_fill0(otci_Base64Impl_reverse, (-1));
    $c_0 = 0;
    while ($c_0 < otci_Base64Impl_alphabet.data.length) {
        otci_Base64Impl_reverse.data[otci_Base64Impl_alphabet.data[$c_0]] = $c_0;
        $c_0 = $c_0 + 1 | 0;
    }
}
function otcit_DateTimeZoneBuilder() {
    jl_Object.call(this);
    this.$iRuleSets = null;
}
var otcit_DateTimeZoneBuilder_gmtCache = null;
function otcit_DateTimeZoneBuilder__init_0() {
    var var_0 = new otcit_DateTimeZoneBuilder();
    otcit_DateTimeZoneBuilder__init_(var_0);
    return var_0;
}
function otcit_DateTimeZoneBuilder__init_($this) {
    $this.$iRuleSets = ju_ArrayList__init_1(10);
}
function otcit_DateTimeZoneBuilder_access$000() {
    if (otcit_DateTimeZoneBuilder_gmtCache === null)
        otcit_DateTimeZoneBuilder_gmtCache = ju_TimeZone_getTimeZone($rt_s(894));
    return otcit_DateTimeZoneBuilder_gmtCache;
}
function nms_GuiOptions() {
    var a = this; nms_GuiScreen.call(a);
    a.$parentScreen = null;
    a.$screenTitle0 = null;
    a.$options1 = null;
}
function nms_GuiOptions__init_(var_0, var_1) {
    var var_2 = new nms_GuiOptions();
    nms_GuiOptions__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_GuiOptions__init_0($this, $var1, $var2) {
    nms_GuiScreen__init_($this);
    $this.$screenTitle0 = $rt_s(895);
    $this.$parentScreen = $var1;
    $this.$options1 = $var2;
}
function nms_GuiOptions_initGui($this) {
    var $var1, var$2, var$3, var$4, $var2, var$6, var$7;
    $var1 = 0;
    while ($var1 < $this.$options1.$numberOfOptions) {
        if (!nms_GameSettings_getOptionControlType($this.$options1, $var1))
            ju_ArrayList_add($this.$controlList, nms_GuiSmallButton__init_($var1, (($this.$width / 2 | 0) - 155 | 0) + (($var1 % 2 | 0) * 160 | 0) | 0, ($this.$height0 / 6 | 0) + (24 * ($var1 >> 1) | 0) | 0, nms_GameSettings_getOptionDisplayString($this.$options1, $var1)));
        else {
            var$2 = $this.$controlList;
            var$3 = new nms_GuiSlider;
            var$4 = (($this.$width / 2 | 0) - 155 | 0) + (($var1 % 2 | 0) * 160 | 0) | 0;
            $var2 = ($this.$height0 / 6 | 0) + (24 * ($var1 >> 1) | 0) | 0;
            var$6 = nms_GameSettings_getOptionDisplayString($this.$options1, $var1);
            var$7 = nms_GameSettings_getOptionFloatValue($this.$options1, $var1);
            nms_GuiButton__init_2(var$3, $var1, var$4, $var2, 150, 20, var$6);
            var$3.$sliderValue = 1.0;
            var$3.$dragging = 0;
            var$3.$idFloat = 0;
            var$3.$idFloat = $var1;
            var$3.$sliderValue = var$7;
            ju_ArrayList_add(var$2, var$3);
        }
        $var1 = $var1 + 1 | 0;
    }
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(100, ($this.$width / 2 | 0) - 100 | 0, (($this.$height0 / 6 | 0) + 120 | 0) + 12 | 0, $rt_s(896)));
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(200, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 6 | 0) + 168 | 0, $rt_s(897)));
}
function nms_GuiOptions_actionPerformed($this, $var1) {
    var var$2, var$3, var$4;
    if ($var1.$enabled) {
        if ($var1.$id2 < 100) {
            nms_GameSettings_setOptionValue($this.$options1, $var1.$id2, 1);
            $var1.$displayString = nms_GameSettings_getOptionDisplayString($this.$options1, $var1.$id2);
        }
        if ($var1.$id2 == 100) {
            nms_GameSettings_saveOptions($this.$mc5.$gameSettings);
            var$2 = $this.$mc5;
            var$3 = new nms_GuiControls;
            var$4 = $this.$options1;
            nms_GuiScreen__init_(var$3);
            var$3.$screenTitle1 = $rt_s(898);
            var$3.$buttonId = (-1);
            var$3.$parentScreen0 = $this;
            var$3.$options2 = var$4;
            nmc_Minecraft_displayGuiScreen(var$2, var$3);
        }
        if ($var1.$id2 == 200) {
            nms_GameSettings_saveOptions($this.$mc5.$gameSettings);
            nmc_Minecraft_displayGuiScreen($this.$mc5, $this.$parentScreen);
        }
    }
}
function nms_GuiOptions_drawScreen($this, $var1, $var2, $var3) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$screenTitle0, $this.$width / 2 | 0, 20, 16777215);
        $ptr = 2;
    case 2:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function nms_GuiSelectWorld() {
    var a = this; nms_GuiScreen.call(a);
    a.$parentScreen1 = null;
    a.$screenTitle2 = null;
    a.$selected = 0;
}
function nms_GuiSelectWorld__init_(var_0) {
    var var_1 = new nms_GuiSelectWorld();
    nms_GuiSelectWorld__init_0(var_1, var_0);
    return var_1;
}
function nms_GuiSelectWorld__init_0($this, $var1) {
    nms_GuiScreen__init_($this);
    $this.$screenTitle2 = $rt_s(899);
    $this.$selected = 0;
    $this.$parentScreen1 = $var1;
}
function nms_GuiSelectWorld_initGui($this) {
    var $var2, $var3, $var2_0, $var4, $var5, var$6;
    $var2 = 0;
    while ($var2 < 5) {
        $var3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($var3);
        $var3 = jl_StringBuilder_append($var3, $rt_s(900));
        $var2_0 = $var2 + 1 | 0;
        $var3 = nms_World_func_629_a(jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($var3, $var2_0)));
        if ($var3 === null)
            ju_ArrayList_add($this.$controlList, nms_GuiButton__init_($var2, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 6 | 0) + (24 * $var2 | 0) | 0, $rt_s(901)));
        else {
            $var4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($var4);
            $var4 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append($var4, $rt_s(902)), $var2_0));
            $var5 = nms_NBTTagCompound_getLong($var3, $rt_s(447));
            $var3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($var3);
            var$6 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append($var3, $var4), $rt_s(903)), Long_toNumber(Long_div(Long_mul(Long_div($var5, Long_fromInt(1024)), Long_fromInt(100)), Long_fromInt(1024))) / 100.0), $rt_s(904)));
            ju_ArrayList_add($this.$controlList, nms_GuiButton__init_($var2, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 6 | 0) + (24 * $var2 | 0) | 0, var$6));
        }
        $var2 = $var2_0;
    }
    $this.$initGui2();
}
function nms_GuiSelectWorld_getWorldName($this, $var1) {
    var var$2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    if (nms_World_func_629_a(jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(900)), $var1))) === null)
        var$2 = null;
    else {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        var$2 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(900)), $var1));
    }
    return var$2;
}
function nms_GuiSelectWorld_initGui2($this) {
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(5, ($this.$width / 2 | 0) - 100 | 0, (($this.$height0 / 6 | 0) + 120 | 0) + 12 | 0, $rt_s(905)));
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(6, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 6 | 0) + 168 | 0, $rt_s(906)));
}
function nms_GuiSelectWorld_actionPerformed($this, $var1) {
    var var$2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($var1.$enabled) {
            if ($var1.$id2 < 5) {
                var$2 = $var1.$id2 + 1 | 0;
                $ptr = 1;
                continue main;
            }
            if ($var1.$id2 == 5) {
                $var1 = $this.$mc5;
                var$3 = new nms_GuiDeleteWorld;
                nms_GuiSelectWorld__init_0(var$3, $this);
                var$3.$screenTitle2 = $rt_s(907);
                nmc_Minecraft_displayGuiScreen($var1, var$3);
            } else if ($var1.$id2 == 6)
                nmc_Minecraft_displayGuiScreen($this.$mc5, $this.$parentScreen1);
        }
        return;
    case 1:
        $this.$selectWorld(var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $ptr);
}
function nms_GuiSelectWorld_selectWorld($this, $var1) {
    var var$2, var$3, var$4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        nmc_Minecraft_displayGuiScreen($this.$mc5, null);
        if ($this.$selected)
            return;
        $this.$selected = 1;
        var$2 = $this.$mc5;
        var$3 = new nms_PlayerControllerSP;
        var$4 = $this.$mc5;
        var$3.$field_1064_b = 0;
        var$3.$mc6 = var$4;
        var$3.$field_1074_c = (-1);
        var$3.$field_1073_d = (-1);
        var$3.$field_1072_e = (-1);
        var$3.$field_1071_f = 0.0;
        var$3.$field_1070_g = 0.0;
        var$3.$field_1069_h = 0.0;
        var$3.$field_1068_i = 0;
        var$2.$field_6327_b = var$3;
        var$2 = $this.$mc5;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        var$3 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(900)), $var1));
        $ptr = 1;
    case 1:
        nmc_Minecraft_func_6247_b(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        nmc_Minecraft_displayGuiScreen($this.$mc5, null);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, var$4, $ptr);
}
function nms_GuiSelectWorld_drawScreen($this, $var1, $var2, $var3) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$screenTitle2, $this.$width / 2 | 0, 20, 16777215);
        $ptr = 2;
    case 2:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function nms_Chunk() {
    var a = this; jl_Object.call(a);
    a.$blocks0 = null;
    a.$isChunkLoaded = 0;
    a.$worldObj9 = null;
    a.$data3 = null;
    a.$skylightMap = null;
    a.$blocklightMap = null;
    a.$heightMap = null;
    a.$field_1532_i = 0;
    a.$xPosition0 = 0;
    a.$zPosition = 0;
    a.$chunkTileEntityMap = null;
    a.$entities = null;
    a.$isTerrainPopulated = 0;
    a.$isModified = 0;
    a.$neverSave = 0;
    a.$field_1524_q = 0;
    a.$hasEntities = 0;
    a.$lastSaveTime = Long_ZERO;
}
var nms_Chunk_field_1540_a = 0;
function nms_Chunk__init_0(var_0, var_1, var_2) {
    var var_3 = new nms_Chunk();
    nms_Chunk__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_Chunk__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_Chunk();
    nms_Chunk__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_Chunk__init_1($this, $var1, $var2, $var3) {
    var $var4;
    $this.$chunkTileEntityMap = ju_HashMap__init_0();
    $this.$entities = $rt_createArray(ju_List, 8);
    $this.$isTerrainPopulated = 0;
    $this.$isModified = 0;
    $this.$field_1524_q = 0;
    $this.$hasEntities = 0;
    $this.$lastSaveTime = Long_ZERO;
    $this.$worldObj9 = $var1;
    $this.$xPosition0 = $var2;
    $this.$zPosition = $var3;
    $this.$heightMap = $rt_createByteArray(256);
    $var4 = 0;
    while ($var4 < $this.$entities.data.length) {
        $this.$entities.data[$var4] = ju_ArrayList__init_0();
        $var4 = $var4 + 1 | 0;
    }
}
function nms_Chunk__init_2($this, $var1, $var2, $var3, $var4) {
    var var$5;
    var$5 = $var2.data;
    nms_Chunk__init_1($this, $var1, $var3, $var4);
    $this.$blocks0 = $var2;
    $var1 = new nms_NibbleArray;
    $var3 = var$5.length;
    nms_NibbleArray__init_($var1, $var3);
    $this.$data3 = $var1;
    $this.$skylightMap = nms_NibbleArray__init_0($var3);
    $this.$blocklightMap = nms_NibbleArray__init_0($var3);
}
function nms_Chunk_isAtLocation($this, $var1, $var2) {
    return $var1 == $this.$xPosition0 && $var2 == $this.$zPosition ? 1 : 0;
}
function nms_Chunk_getHeightValue($this, $var1, $var2) {
    return $this.$heightMap.data[$var2 << 4 | $var1] & 255;
}
function nms_Chunk_func_1014_a($this) {
    return;
}
function nms_Chunk_func_1024_c($this) {
    var $var1, $var2, $var3, var$4, $var3_0;
    $var1 = 127;
    $var2 = 0;
    while ($var2 < 16) {
        $var3 = 0;
        while ($var3 < 16) {
            var$4 = $this.$heightMap.data;
            $var3_0 = $var3 << 4 | $var2;
            var$4[$var3_0] = (-128);
            nms_Chunk_func_1003_g($this, $var2, 127, $var3);
            if (($this.$heightMap.data[$var3_0] & 255) < $var1)
                $var1 = $this.$heightMap.data[$var3_0] & 255;
            $var3 = $var3 + 1 | 0;
        }
        $var2 = $var2 + 1 | 0;
    }
    $this.$field_1532_i = $var1;
    $var1 = 0;
    while ($var1 < 16) {
        $var3_0 = 0;
        while ($var3_0 < 16) {
            nms_Chunk_func_996_c($this, $var1, $var3_0);
            $var3_0 = $var3_0 + 1 | 0;
        }
        $var1 = $var1 + 1 | 0;
    }
    $this.$isModified = 1;
}
function nms_Chunk_func_4143_d($this) {
    var $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9;
    $var2 = 0;
    while ($var2 < 16) {
        $var3 = 0;
        while ($var3 < 16) {
            $var4 = $var2 << 11 | $var3 << 7;
            $var5 = 0;
            while ($var5 < 128) {
                nms_Block_$callClinit();
                $var6 = nms_Block_lightValue.data[$this.$blocks0.data[$var4 + $var5 | 0]];
                if ($var6 > 0)
                    nms_NibbleArray_setNibble($this.$blocklightMap, $var2, $var5, $var3, $var6);
                $var5 = $var5 + 1 | 0;
            }
            $var5 = 15;
            $var6 = 30;
            while ($var6 < 128 && $var5 > 0) {
                $var6 = $var6 + 1 | 0;
                $var7 = $this.$blocks0.data[$var4 + $var6 | 0];
                nms_Block_$callClinit();
                $var8 = nms_Block_lightOpacity.data[$var7];
                $var9 = nms_Block_lightValue.data[$var7];
                if (!$var8)
                    $var8 = 1;
                $var5 = $var5 - $var8 | 0;
                if ($var9 <= $var5)
                    $var9 = $var5;
                $var5 = $var9 < 0 ? 0 : $var9;
                nms_NibbleArray_setNibble($this.$blocklightMap, $var2, $var6, $var3, $var5);
            }
            $var3 = $var3 + 1 | 0;
        }
        $var2 = $var2 + 1 | 0;
    }
    nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Block, $this.$xPosition0 * 16 | 0, 31, $this.$zPosition * 16 | 0, ($this.$xPosition0 * 16 | 0) + 16 | 0, 33, ($this.$zPosition * 16 | 0) + 16 | 0);
    $this.$isModified = 1;
}
function nms_Chunk_func_996_c($this, $var1, $var2) {
    var $var3, $var4, $var5;
    $var3 = nms_Chunk_getHeightValue($this, $var1, $var2);
    $var4 = ($this.$xPosition0 * 16 | 0) + $var1 | 0;
    $var5 = ($this.$zPosition * 16 | 0) + $var2 | 0;
    nms_Chunk_func_1020_f($this, $var4 - 1 | 0, $var5, $var3);
    nms_Chunk_func_1020_f($this, $var4 + 1 | 0, $var5, $var3);
    nms_Chunk_func_1020_f($this, $var4, $var5 - 1 | 0, $var3);
    nms_Chunk_func_1020_f($this, $var4, $var5 + 1 | 0, $var3);
}
function nms_Chunk_func_1020_f($this, $var1, $var2, $var3) {
    var $var4, var$5;
    $var4 = nms_World_getHeightValue($this.$worldObj9, $var1, $var2);
    var$5 = $rt_compare($var4, $var3);
    if (var$5 > 0)
        nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Sky, $var1, $var3, $var2, $var1, $var4, $var2);
    else if (var$5 < 0)
        nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Sky, $var1, $var4, $var2, $var1, $var3, $var2);
    $this.$isModified = 1;
}
function nms_Chunk_func_1003_g($this, $var1, $var2, $var3) {
    var var$4, $var8, $var9, $var6, $var7, $var9_0, $var11;
    var$4 = $this.$heightMap.data;
    $var8 = $var3 << 4 | $var1;
    $var9 = var$4[$var8] & 255;
    if ($var2 <= $var9)
        $var2 = $var9;
    $var6 = $var1 << 11 | $var3 << 7;
    while ($var2 > 0) {
        nms_Block_$callClinit();
        if (nms_Block_lightOpacity.data[$this.$blocks0.data[($var6 + $var2 | 0) - 1 | 0]])
            break;
        $var2 = $var2 + (-1) | 0;
    }
    $var6 = $rt_compare($var2, $var9);
    if ($var6) {
        nms_World_func_680_f($this.$worldObj9, $var1, $var3, $var2, $var9);
        $this.$heightMap.data[$var8] = $var2 << 24 >> 24;
        if ($var2 < $this.$field_1532_i)
            $this.$field_1532_i = $var2;
        else {
            $var7 = 127;
            $var8 = 0;
            while ($var8 < 16) {
                $var9_0 = 0;
                while ($var9_0 < 16) {
                    var$4 = $this.$heightMap.data;
                    $var11 = $var9_0 << 4 | $var8;
                    if ((var$4[$var11] & 255) < $var7)
                        $var7 = $this.$heightMap.data[$var11] & 255;
                    $var9_0 = $var9_0 + 1 | 0;
                }
                $var8 = $var8 + 1 | 0;
            }
            $this.$field_1532_i = $var7;
        }
        a: {
            $var7 = ($this.$xPosition0 * 16 | 0) + $var1 | 0;
            $var8 = ($this.$zPosition * 16 | 0) + $var3 | 0;
            if ($var6 < 0) {
                $var9_0 = $var2;
                while (true) {
                    if ($var9_0 >= $var9)
                        break a;
                    nms_NibbleArray_setNibble($this.$skylightMap, $var1, $var9_0, $var3, 15);
                    $var9_0 = $var9_0 + 1 | 0;
                }
            }
            nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Sky, $var7, $var9, $var8, $var7, $var2, $var8);
            while (true) {
                if ($var9 >= $var2)
                    break a;
                nms_NibbleArray_setNibble($this.$skylightMap, $var1, $var9, $var3, 0);
                $var9 = $var9 + 1 | 0;
            }
        }
        $var6 = 15;
        $var9_0 = $var2;
        b: {
            while ($var9_0 > 0) {
                if ($var6 <= 0)
                    break b;
                $var9_0 = $var9_0 + (-1) | 0;
                nms_Block_$callClinit();
                $var11 = nms_Block_lightOpacity.data[nms_Chunk_getBlockID($this, $var1, $var9_0, $var3)];
                if (!$var11)
                    $var11 = 1;
                $var6 = $var6 - $var11 | 0;
                if ($var6 < 0)
                    $var6 = 0;
                nms_NibbleArray_setNibble($this.$skylightMap, $var1, $var9_0, $var3, $var6);
            }
        }
        while ($var9_0 > 0) {
            nms_Block_$callClinit();
            if (nms_Block_lightOpacity.data[nms_Chunk_getBlockID($this, $var1, $var9_0 - 1 | 0, $var3)])
                break;
            $var9_0 = $var9_0 + (-1) | 0;
        }
        if ($var9_0 != $var2)
            nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Sky, $var7 - 1 | 0, $var9_0, $var8 - 1 | 0, $var7 + 1 | 0, $var2, $var8 + 1 | 0);
        $this.$isModified = 1;
    }
}
function nms_Chunk_getBlockID($this, $var1, $var2, $var3) {
    return $this.$blocks0.data[$var1 << 11 | $var3 << 7 | $var2];
}
function nms_Chunk_setBlockIDWithMetadata($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, var$8, var$9, $var8, $var9, $var10;
    $var6 = $var4 << 24 >> 24;
    $var7 = $this.$heightMap.data[$var3 << 4 | $var1] & 255;
    var$8 = $this.$blocks0.data;
    var$9 = $var1 << 11 | $var3 << 7 | $var2;
    $var8 = var$8[var$9] & 255;
    if ($var8 == $var4 && nms_NibbleArray_getNibble($this.$data3, $var1, $var2, $var3) == $var5)
        return 0;
    $var9 = ($this.$xPosition0 * 16 | 0) + $var1 | 0;
    $var10 = ($this.$zPosition * 16 | 0) + $var3 | 0;
    $this.$blocks0.data[var$9] = $var6;
    if ($var8) {
        nms_Block_$callClinit();
        nms_Block_blocksList.data[$var8].$onBlockRemoval($this.$worldObj9, $var9, $var2, $var10);
    }
    nms_NibbleArray_setNibble($this.$data3, $var1, $var2, $var3, $var5);
    if (!$this.$worldObj9.$worldProvider.$field_6478_e) {
        nms_Block_$callClinit();
        if (!nms_Block_lightOpacity.data[$var6]) {
            if ($var2 == ($var7 - 1 | 0))
                nms_Chunk_func_1003_g($this, $var1, $var2, $var3);
        } else if ($var2 >= $var7)
            nms_Chunk_func_1003_g($this, $var1, $var2 + 1 | 0, $var3);
        nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Sky, $var9, $var2, $var10, $var9, $var2, $var10);
    }
    nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Block, $var9, $var2, $var10, $var9, $var2, $var10);
    nms_Chunk_func_996_c($this, $var1, $var3);
    if ($var4) {
        nms_Block_$callClinit();
        nms_Block_blocksList.data[$var4].$onBlockAdded($this.$worldObj9, $var9, $var2, $var10);
    }
    nms_NibbleArray_setNibble($this.$data3, $var1, $var2, $var3, $var5);
    $this.$isModified = 1;
    return 1;
}
function nms_Chunk_setBlockID($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, var$7, var$8, $var7, $var8, $var9;
    $var5 = $var4 << 24 >> 24;
    $var6 = $this.$heightMap.data[$var3 << 4 | $var1] & 255;
    var$7 = $this.$blocks0.data;
    var$8 = $var1 << 11 | $var3 << 7 | $var2;
    $var7 = var$7[var$8] & 255;
    if ($var7 == $var4)
        return 0;
    $var8 = ($this.$xPosition0 * 16 | 0) + $var1 | 0;
    $var9 = ($this.$zPosition * 16 | 0) + $var3 | 0;
    $this.$blocks0.data[var$8] = $var5;
    if ($var7) {
        nms_Block_$callClinit();
        nms_Block_blocksList.data[$var7].$onBlockRemoval($this.$worldObj9, $var8, $var2, $var9);
    }
    nms_NibbleArray_setNibble($this.$data3, $var1, $var2, $var3, 0);
    nms_Block_$callClinit();
    if (!nms_Block_lightOpacity.data[$var5]) {
        if ($var2 == ($var6 - 1 | 0))
            nms_Chunk_func_1003_g($this, $var1, $var2, $var3);
    } else if ($var2 >= $var6)
        nms_Chunk_func_1003_g($this, $var1, $var2 + 1 | 0, $var3);
    nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Sky, $var8, $var2, $var9, $var8, $var2, $var9);
    nms_World_func_616_a($this.$worldObj9, nms_EnumSkyBlock_Block, $var8, $var2, $var9, $var8, $var2, $var9);
    nms_Chunk_func_996_c($this, $var1, $var3);
    if ($var4)
        nms_Block_blocksList.data[$var4].$onBlockAdded($this.$worldObj9, $var8, $var2, $var9);
    $this.$isModified = 1;
    return 1;
}
function nms_Chunk_getBlockMetadata($this, $var1, $var2, $var3) {
    return nms_NibbleArray_getNibble($this.$data3, $var1, $var2, $var3);
}
function nms_Chunk_setBlockMetadata($this, $var1, $var2, $var3, $var4) {
    $this.$isModified = 1;
    nms_NibbleArray_setNibble($this.$data3, $var1, $var2, $var3, $var4);
}
function nms_Chunk_getSavedLightValue($this, $var1, $var2, $var3, $var4) {
    return $var1 === nms_EnumSkyBlock_Sky ? nms_NibbleArray_getNibble($this.$skylightMap, $var2, $var3, $var4) : $var1 !== nms_EnumSkyBlock_Block ? 0 : nms_NibbleArray_getNibble($this.$blocklightMap, $var2, $var3, $var4);
}
function nms_Chunk_setLightValue($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$isModified = 1;
    if ($var1 === nms_EnumSkyBlock_Sky)
        nms_NibbleArray_setNibble($this.$skylightMap, $var2, $var3, $var4, $var5);
    else {
        if ($var1 !== nms_EnumSkyBlock_Block)
            return;
        nms_NibbleArray_setNibble($this.$blocklightMap, $var2, $var3, $var4, $var5);
    }
}
function nms_Chunk_getBlockLightValue($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    $var5 = nms_NibbleArray_getNibble($this.$skylightMap, $var1, $var2, $var3);
    if ($var5 > 0)
        nms_Chunk_field_1540_a = 1;
    $var4 = $var5 - $var4 | 0;
    $var6 = nms_NibbleArray_getNibble($this.$blocklightMap, $var1, $var2, $var3);
    if ($var6 <= $var4)
        $var6 = $var4;
    return $var6;
}
function nms_Chunk_addEntity($this, $var1) {
    var $var2, $var3, var$4, var$5, $var4;
    if (!$this.$field_1524_q) {
        $this.$hasEntities = 1;
        $var2 = nms_MathHelper_floor_double($var1.$posX / 16.0);
        $var3 = nms_MathHelper_floor_double($var1.$posZ / 16.0);
        if (!($var2 == $this.$xPosition0 && $var3 == $this.$zPosition)) {
            var$4 = jl_System_err();
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            ji_PrintStream_println(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(908)), $var1)));
        }
        $var4 = nms_MathHelper_floor_double($var1.$posY / 16.0);
        if ($var4 < 0)
            $var4 = 0;
        if ($var4 >= $this.$entities.data.length)
            $var4 = $this.$entities.data.length - 1 | 0;
        $var1.$field_621_aZ = 1;
        $var1.$field_657_ba = $this.$xPosition0;
        $var1.$field_656_bb = $var4;
        $var1.$field_654_bc = $this.$zPosition;
        ju_ArrayList_add($this.$entities.data[$var4], $var1);
    }
}
function nms_Chunk_func_1015_b($this, $var1) {
    nms_Chunk_func_1016_a($this, $var1, $var1.$field_656_bb);
}
function nms_Chunk_func_1016_a($this, $var1, $var2) {
    if ($var2 < 0)
        $var2 = 0;
    if ($var2 >= $this.$entities.data.length)
        $var2 = $this.$entities.data.length - 1 | 0;
    ju_ArrayList_remove0($this.$entities.data[$var2], $var1);
}
function nms_Chunk_canBlockSeeTheSky($this, $var1, $var2, $var3) {
    return $var2 < ($this.$heightMap.data[$var3 << 4 | $var1] & 255) ? 0 : 1;
}
function nms_Chunk_getChunkBlockTileEntity($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6;
    $var4 = nms_ChunkPosition__init_($var1, $var2, $var3);
    $var5 = ju_HashMap_get($this.$chunkTileEntityMap, $var4);
    if ($var5 === null) {
        $var6 = nms_Chunk_getBlockID($this, $var1, $var2, $var3);
        nms_Block_$callClinit();
        if (!nms_Block_isBlockContainer.data[$var6])
            return null;
        nms_Block_blocksList.data[$var6].$onBlockAdded($this.$worldObj9, ($this.$xPosition0 * 16 | 0) + $var1 | 0, $var2, ($this.$zPosition * 16 | 0) + $var3 | 0);
        $var5 = ju_HashMap_get($this.$chunkTileEntityMap, $var4);
    }
    return $var5;
}
function nms_Chunk_func_1001_a($this, $var1) {
    nms_Chunk_setChunkBlockTileEntity($this, $var1.$xCoord0 - ($this.$xPosition0 * 16 | 0) | 0, $var1.$yCoord0, $var1.$zCoord0 - ($this.$zPosition * 16 | 0) | 0, $var1);
}
function nms_Chunk_setChunkBlockTileEntity($this, $var1, $var2, $var3, $var4) {
    var $var5;
    a: {
        $var5 = nms_ChunkPosition__init_($var1, $var2, $var3);
        $var4.$worldObj1 = $this.$worldObj9;
        $var4.$xCoord0 = ($this.$xPosition0 * 16 | 0) + $var1 | 0;
        $var4.$yCoord0 = $var2;
        $var4.$zCoord0 = ($this.$zPosition * 16 | 0) + $var3 | 0;
        if (nms_Chunk_getBlockID($this, $var1, $var2, $var3)) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[nms_Chunk_getBlockID($this, $var1, $var2, $var3)] instanceof nms_BlockContainer) {
                if ($this.$isChunkLoaded) {
                    if (ju_HashMap_get($this.$chunkTileEntityMap, $var5) !== null)
                        ju_ArrayList_remove0($this.$worldObj9.$loadedTileEntityList, ju_HashMap_get($this.$chunkTileEntityMap, $var5));
                    ju_ArrayList_add($this.$worldObj9.$loadedTileEntityList, $var4);
                }
                ju_HashMap_putImpl($this.$chunkTileEntityMap, $var5, $var4);
                break a;
            }
        }
        ji_PrintStream_println(jl_System_out(), $rt_s(909));
    }
}
function nms_Chunk_removeChunkBlockTileEntity($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = nms_ChunkPosition__init_($var1, $var2, $var3);
    if ($this.$isChunkLoaded)
        ju_ArrayList_remove0($this.$worldObj9.$loadedTileEntityList, ju_HashMap_remove($this.$chunkTileEntityMap, $var4));
}
function nms_Chunk_onChunkLoad($this) {
    var $var1;
    $this.$isChunkLoaded = 1;
    ju_AbstractCollection_addAll($this.$worldObj9.$loadedTileEntityList, ju_HashMap_values($this.$chunkTileEntityMap));
    $var1 = 0;
    while ($var1 < $this.$entities.data.length) {
        nms_World_func_636_a($this.$worldObj9, $this.$entities.data[$var1]);
        $var1 = $var1 + 1 | 0;
    }
}
function nms_Chunk_onChunkUnload($this) {
    var $var1;
    $this.$isChunkLoaded = 0;
    ju_AbstractCollection_removeAll($this.$worldObj9.$loadedTileEntityList, ju_HashMap_values($this.$chunkTileEntityMap));
    $var1 = 0;
    while ($var1 < $this.$entities.data.length) {
        nms_World_func_632_b($this.$worldObj9, $this.$entities.data[$var1]);
        $var1 = $var1 + 1 | 0;
    }
}
function nms_Chunk_setChunkModified($this) {
    $this.$isModified = 1;
}
function nms_Chunk_getEntitiesWithinAABBForEntity($this, $var1, $var2, $var3) {
    var $var6, $var5, $var7, $var8, $var9;
    $var6 = nms_MathHelper_floor_double(($var2.$minY0 - 2.0) / 16.0);
    $var5 = nms_MathHelper_floor_double(($var2.$maxY0 + 2.0) / 16.0);
    if ($var6 < 0)
        $var6 = 0;
    if ($var5 >= $this.$entities.data.length)
        $var5 = $this.$entities.data.length - 1 | 0;
    while ($var6 <= $var5) {
        $var7 = $this.$entities.data[$var6];
        $var8 = 0;
        while ($var8 < $var7.$size) {
            $var9 = ju_ArrayList_get($var7, $var8);
            if ($var9 !== $var1 && nms_AxisAlignedBB_intersectsWith($var9.$boundingBox, $var2))
                ju_ArrayList_add($var3, $var9);
            $var8 = $var8 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_Chunk_getEntitiesOfTypeWithinAAAB($this, $var1, $var2, $var3) {
    var $var6, $var5, $var7, $var8, $var9;
    $var6 = nms_MathHelper_floor_double(($var2.$minY0 - 2.0) / 16.0);
    $var5 = nms_MathHelper_floor_double(($var2.$maxY0 + 2.0) / 16.0);
    if ($var6 < 0)
        $var6 = 0;
    if ($var5 >= $this.$entities.data.length)
        $var5 = $this.$entities.data.length - 1 | 0;
    while ($var6 <= $var5) {
        $var7 = $this.$entities.data[$var6];
        $var8 = 0;
        while ($var8 < $var7.$size) {
            $var9 = ju_ArrayList_get($var7, $var8);
            if (jl_Class_isAssignableFrom($var1, jl_Object_getClass($var9)) && nms_AxisAlignedBB_intersectsWith($var9.$boundingBox, $var2))
                ju_ArrayList_add($var3, $var9);
            $var8 = $var8 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
}
function nms_Chunk_needsSaving($this, $var1) {
    return $this.$neverSave ? 0 : $this.$hasEntities && Long_ne($this.$worldObj9.$worldTime, $this.$lastSaveTime) ? 1 : $this.$isModified;
}
function nms_Chunk_func_997_a($this, $var1) {
    return new ju_Random;
}
function nms_ChunkCache() {
    var a = this; jl_Object.call(a);
    a.$field_1060_a = 0;
    a.$field_1059_b = 0;
    a.$field_1062_c = null;
    a.$worldObj10 = null;
}
function nms_ChunkCache__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new nms_ChunkCache();
    nms_ChunkCache__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function nms_ChunkCache__init_0($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var10, $var11;
    $this.$worldObj10 = $var1;
    $this.$field_1060_a = $var2 >> 4;
    $this.$field_1059_b = $var4 >> 4;
    $var8 = $var5 >> 4;
    $var9 = $var7 >> 4;
    $this.$field_1062_c = $rt_createMultiArray($rt_arraycls($rt_arraycls(nms_Chunk)), [($var9 - $this.$field_1059_b | 0) + 1 | 0, ($var8 - $this.$field_1060_a | 0) + 1 | 0]);
    $var10 = $this.$field_1060_a;
    while ($var10 <= $var8) {
        $var11 = $this.$field_1059_b;
        while ($var11 <= $var9) {
            $this.$field_1062_c.data[$var10 - $this.$field_1060_a | 0].data[$var11 - $this.$field_1059_b | 0] = nms_World_getChunkFromChunkCoords($var1, $var10, $var11);
            $var11 = $var11 + 1 | 0;
        }
        $var10 = $var10 + 1 | 0;
    }
}
function nms_ChunkCache_getBlockId($this, $var1, $var2, $var3) {
    var $var4, $var5;
    if ($var2 < 0)
        return 0;
    if ($var2 >= 128)
        return 0;
    $var4 = ($var1 >> 4) - $this.$field_1060_a | 0;
    $var5 = ($var3 >> 4) - $this.$field_1059_b | 0;
    return nms_Chunk_getBlockID($this.$field_1062_c.data[$var4].data[$var5], $var1 & 15, $var2, $var3 & 15);
}
function nms_ChunkCache_getBlockTileEntity($this, $var1, $var2, $var3) {
    var $var4, $var5;
    $var4 = ($var1 >> 4) - $this.$field_1060_a | 0;
    $var5 = ($var3 >> 4) - $this.$field_1059_b | 0;
    return nms_Chunk_getChunkBlockTileEntity($this.$field_1062_c.data[$var4].data[$var5], $var1 & 15, $var2, $var3 & 15);
}
function nms_ChunkCache_getLightBrightness($this, $var1, $var2, $var3) {
    return $this.$worldObj10.$worldProvider.$lightBrightnessTable.data[nms_ChunkCache_func_4086_d($this, $var1, $var2, $var3)];
}
function nms_ChunkCache_func_4086_d($this, $var1, $var2, $var3) {
    return nms_ChunkCache_func_716_a($this, $var1, $var2, $var3, 1);
}
function nms_ChunkCache_func_716_a($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var7, $var8, $var9, $var10;
    if ($var1 >= (-32000000) && $var3 >= (-32000000) && $var1 < 32000000 && $var3 <= 32000000) {
        a: {
            if ($var4) {
                $var5 = nms_ChunkCache_getBlockId($this, $var1, $var2, $var3);
                nms_Block_$callClinit();
                if ($var5 == nms_Block_stairSingle.$blockID)
                    break a;
                if ($var5 == nms_Block_tilledField.$blockID)
                    break a;
            }
            if ($var2 < 0)
                return 0;
            if ($var2 >= 128) {
                $var5 = 15 - $this.$worldObj10.$skylightSubtracted | 0;
                if ($var5 < 0)
                    $var5 = 0;
                return $var5;
            }
            $var5 = ($var1 >> 4) - $this.$field_1060_a | 0;
            $var6 = ($var3 >> 4) - $this.$field_1059_b | 0;
            return nms_Chunk_getBlockLightValue($this.$field_1062_c.data[$var5].data[$var6], $var1 & 15, $var2, $var3 & 15, $this.$worldObj10.$skylightSubtracted);
        }
        $var6 = nms_ChunkCache_func_716_a($this, $var1, $var2 + 1 | 0, $var3, 0);
        $var7 = nms_ChunkCache_func_716_a($this, $var1 + 1 | 0, $var2, $var3, 0);
        $var8 = nms_ChunkCache_func_716_a($this, $var1 - 1 | 0, $var2, $var3, 0);
        $var9 = nms_ChunkCache_func_716_a($this, $var1, $var2, $var3 + 1 | 0, 0);
        $var10 = nms_ChunkCache_func_716_a($this, $var1, $var2, $var3 - 1 | 0, 0);
        if ($var7 <= $var6)
            $var7 = $var6;
        if ($var8 <= $var7)
            $var8 = $var7;
        if ($var9 <= $var8)
            $var9 = $var8;
        if ($var10 <= $var9)
            $var10 = $var9;
        return $var10;
    }
    return 15;
}
function nms_ChunkCache_getBlockMetadata($this, $var1, $var2, $var3) {
    var $var4, $var5;
    if ($var2 < 0)
        return 0;
    if ($var2 >= 128)
        return 0;
    $var4 = ($var1 >> 4) - $this.$field_1060_a | 0;
    $var5 = ($var3 >> 4) - $this.$field_1059_b | 0;
    return nms_Chunk_getBlockMetadata($this.$field_1062_c.data[$var4].data[$var5], $var1 & 15, $var2, $var3 & 15);
}
function nms_ChunkCache_getBlockMaterial($this, $var1, $var2, $var3) {
    var $var4, var$5;
    $var4 = nms_ChunkCache_getBlockId($this, $var1, $var2, $var3);
    if (!$var4)
        var$5 = nms_Material_air;
    else {
        nms_Block_$callClinit();
        var$5 = nms_Block_blocksList.data[$var4].$blockMaterial;
    }
    return var$5;
}
function nms_ChunkCache_isBlockOpaqueCube($this, $var1, $var2, $var3) {
    var $var4;
    nms_Block_$callClinit();
    $var4 = nms_Block_blocksList.data[nms_ChunkCache_getBlockId($this, $var1, $var2, $var3)];
    return $var4 !== null ? $var4.$isOpaqueCube() : 0;
}
function nms_ChunkCache_func_4075_a($this) {
    return nms_World_func_4075_a($this.$worldObj10);
}
function nms_WorldChunkManager() {
    var a = this; jl_Object.call(a);
    a.$field_4194_e = null;
    a.$field_4193_f = null;
    a.$field_4192_g = null;
    a.$temperature = null;
    a.$humidity = null;
    a.$field_4196_c = null;
    a.$field_4195_d = null;
}
function nms_WorldChunkManager__init_0() {
    var var_0 = new nms_WorldChunkManager();
    nms_WorldChunkManager__init_(var_0);
    return var_0;
}
function nms_WorldChunkManager__init_($this) {
    return;
}
function nms_WorldChunkManager_func_4074_a($this, $var1) {
    return $this.$func_4073_a($var1.$chunkXPos, $var1.$chunkZPos);
}
function nms_WorldChunkManager_func_4073_a($this, $var1, $var2) {
    return $this.$func_4069_a($var1, $var2, 1, 1).data[0];
}
function nms_WorldChunkManager_func_4072_b($this, $var1, $var2) {
    $this.$temperature = nms_NoiseGeneratorOctaves2_func_4112_a($this.$field_4194_e, $this.$temperature, $var1, $var2, 1, 1, 0.02500000037252903, 0.02500000037252903, 0.5);
    return $this.$temperature.data[0];
}
function nms_WorldChunkManager_func_4069_a($this, $var1, $var2, $var3, $var4) {
    $this.$field_4195_d = $this.$loadBlockGeneratorData($this.$field_4195_d, $var1, $var2, $var3, $var4);
    return $this.$field_4195_d;
}
function nms_WorldChunkManager_getTemperatures($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, var$7, $var9, var$9, $var6, $var7, $var8, $var13, $var11;
    if (!($var1 !== null && $var1.data.length >= $rt_imul($var4, $var5)))
        $var1 = $rt_createDoubleArray($rt_imul($var4, $var5));
    var$6 = $this.$field_4194_e;
    var$7 = $var2;
    $var9 = $var3;
    var$9 = nms_NoiseGeneratorOctaves2_func_4112_a(var$6, $var1, var$7, $var9, $var4, $var4, 0.02500000037252903, 0.02500000037252903, 0.25);
    $this.$field_4196_c = nms_NoiseGeneratorOctaves2_func_4112_a($this.$field_4192_g, $this.$field_4196_c, var$7, $var9, $var4, $var4, 0.25, 0.25, 0.5882352941176471);
    $var6 = 0;
    $var7 = 0;
    while ($var7 < $var4) {
        $var8 = 0;
        while ($var8 < $var5) {
            $var1 = var$9.data;
            $var9 = $this.$field_4196_c.data[$var6] * 1.1 + 0.5;
            $var13 = 1.0 - (($var1[$var6] * 0.15 + 0.7) * 0.99 + $var9 * 0.01);
            $var11 = 1.0 - $var13 * $var13;
            if ($var11 < 0.0)
                $var11 = 0.0;
            if ($var11 > 1.0)
                $var11 = 1.0;
            $var1[$var6] = $var11;
            $var6 = $var6 + 1 | 0;
            $var8 = $var8 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
    return var$9;
}
function nms_WorldChunkManager_loadBlockGeneratorData($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, var$7, $var17, $var13, $var6, $var7, $var8, $var9, $var15, $var11, var$16, var$17;
    if (!($var1 !== null && $var1.data.length >= $rt_imul($var4, $var5)))
        $var1 = $rt_createArray(nms_MobSpawnerBase, $rt_imul($var4, $var5));
    var$6 = $this.$field_4194_e;
    var$7 = $this.$temperature;
    $var17 = $var2;
    $var13 = $var3;
    $this.$temperature = nms_NoiseGeneratorOctaves2_func_4112_a(var$6, var$7, $var17, $var13, $var4, $var4, 0.02500000037252903, 0.02500000037252903, 0.25);
    $this.$humidity = nms_NoiseGeneratorOctaves2_func_4112_a($this.$field_4193_f, $this.$humidity, $var17, $var13, $var4, $var4, 0.05000000074505806, 0.05000000074505806, 0.3333333333333333);
    $this.$field_4196_c = nms_NoiseGeneratorOctaves2_func_4112_a($this.$field_4192_g, $this.$field_4196_c, $var17, $var13, $var4, $var4, 0.25, 0.25, 0.5882352941176471);
    $var6 = 0;
    $var7 = 0;
    while ($var7 < $var4) {
        $var8 = 0;
        while ($var8 < $var5) {
            $var9 = $this.$field_4196_c.data[$var6] * 1.1 + 0.5;
            $var15 = ($this.$temperature.data[$var6] * 0.15 + 0.7) * 0.99 + $var9 * 0.01;
            $var17 = ($this.$humidity.data[$var6] * 0.15 + 0.5) * 0.998 + $var9 * 0.002;
            $var11 = 1.0 - $var15;
            $var9 = 1.0 - $var11 * $var11;
            if ($var9 < 0.0)
                $var9 = 0.0;
            if ($var17 < 0.0)
                $var17 = 0.0;
            if ($var9 > 1.0)
                $var9 = 1.0;
            if ($var17 > 1.0)
                $var17 = 1.0;
            var$16 = $var1.data;
            $this.$temperature.data[$var6] = $var9;
            $this.$humidity.data[$var6] = $var17;
            $var3 = $var6 + 1 | 0;
            var$17 = $var9 * 63.0 | 0;
            $var2 = $var17 * 63.0 | 0;
            var$16[$var6] = nms_MobSpawnerBase_biomeLookupTable.data[var$17 + ($var2 * 64 | 0) | 0];
            $var8 = $var8 + 1 | 0;
            $var6 = $var3;
        }
        $var7 = $var7 + 1 | 0;
    }
    return $var1;
}
function nms_ColorizerGrass() {
    jl_Object.call(this);
}
var nms_ColorizerGrass_field_6540_a = null;
function nms_ColorizerGrass__init_0() {
    var var_0 = new nms_ColorizerGrass();
    nms_ColorizerGrass__init_(var_0);
    return var_0;
}
function nms_ColorizerGrass__init_($this) {
    return;
}
function nms_ColorizerGrass__clinit_() {
    nms_ColorizerGrass_field_6540_a = null;
}
function nms_ColorizerFoliage() {
    jl_Object.call(this);
}
var nms_ColorizerFoliage_field_6529_a = null;
function nms_ColorizerFoliage__init_0() {
    var var_0 = new nms_ColorizerFoliage();
    nms_ColorizerFoliage__init_(var_0);
    return var_0;
}
function nms_ColorizerFoliage__init_($this) {
    return;
}
function nms_ColorizerFoliage__clinit_() {
    nms_ColorizerFoliage_field_6529_a = null;
}
function nlea_EaglerAdapterImpl2$14$1() {
    jl_Object.call(this);
    this.$this$05 = null;
}
function nlea_EaglerAdapterImpl2$14$1_onTimer($this) {
    nlea_EaglerAdapterImpl2_$callClinit();
    nlea_EaglerAdapterImpl2_canvas.requestPointerLock();
    nlea_EaglerAdapterImpl2_access$2002(0);
}
function nlea_EaglerAdapterImpl2$14$1_onTimer$exported$0(var$0) {
    nlea_EaglerAdapterImpl2$14$1_onTimer(var$0);
}
function jur_AbstractCharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$06 = null;
}
function jur_AbstractCharClass$1_contains($this, $ch) {
    var $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS, $index) : 0;
}
function jur_AbstractCharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$07 = null;
}
function jur_AbstractCharClass$2_contains($this, $ch) {
    var $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS0, $index) : 0;
    return $this.$val$thisClass.$contains0($ch) && !$containslHS ? 1 : 0;
}
function jur_CharClass$18() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$025 = null;
}
function jur_CharClass$18_contains($this, $ch) {
    return $this.$alt0 ^ ju_BitSet_get($this.$val$bs, $ch);
}
function jur_CharClass$18_toString($this) {
    var $temp, $i;
    $temp = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($temp);
    $i = ju_BitSet_nextSetBit($this.$val$bs, 0);
    while ($i >= 0) {
        jl_AbstractStringBuilder_append2($temp, jl_Character_toChars($i));
        jl_AbstractStringBuilder_append($temp, 124);
        $i = ju_BitSet_nextSetBit($this.$val$bs, $i + 1 | 0);
    }
    if ($temp.$length0 > 0)
        jl_StringBuilder_deleteCharAt($temp, $temp.$length0 - 1 | 0);
    return jl_AbstractStringBuilder_toString($temp);
}
function jur_CharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$010 = null;
}
function jur_CharClass$1_contains($this, $ch) {
    return $this.$val$cc1.$contains0($ch);
}
function jur_CharClass$3() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$cc2 = null;
    a.$this$011 = null;
}
function jur_CharClass$3_contains($this, $ch) {
    return !($this.$val$curAlt1 ^ ju_BitSet_get($this.$this$011.$bits, $ch)) && !($this.$val$curAlt1 ^ $this.$this$011.$inverted ^ $this.$val$cc2.$contains0($ch)) ? 0 : 1;
}
function jur_CharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt2 = 0;
    a.$val$cc3 = null;
    a.$this$012 = null;
}
function jur_CharClass$2_contains($this, $ch) {
    return !($this.$val$curAlt2 ^ ju_BitSet_get($this.$this$012.$bits, $ch)) && !($this.$val$curAlt2 ^ $this.$this$012.$inverted ^ $this.$val$cc3.$contains0($ch)) ? 1 : 0;
}
function jur_CharClass$5() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$nb = null;
    a.$val$cc = null;
    a.$this$08 = null;
}
function jur_CharClass$5_contains($this, $ch) {
    return $this.$val$curAlt ^ (!$this.$val$nb.$contains0($ch) && !$this.$val$cc.$contains0($ch) ? 0 : 1);
}
function jur_CharClass$4() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$nb0 = null;
    a.$val$cc0 = null;
    a.$this$09 = null;
}
function jur_CharClass$4_contains($this, $ch) {
    return $this.$val$curAlt0 ^ (!$this.$val$nb0.$contains0($ch) && !$this.$val$cc0.$contains0($ch) ? 0 : 1) ? 0 : 1;
}
function jur_CharClass$7() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$015 = null;
}
function jur_CharClass$7_contains($this, $ch) {
    return jur_CharClass_contains($this.$val$clazz1, $ch);
}
function jur_CharClass$6() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$this$016 = null;
}
function jur_CharClass$6_contains($this, $ch) {
    return jur_CharClass_contains($this.$val$clazz2, $ch) ? 0 : 1;
}
function jur_CharClass$9() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$val$curAlt5 = 0;
    a.$this$017 = null;
}
function jur_CharClass$9_contains($this, $ch) {
    return !jur_CharClass_contains($this.$val$clazz3, $ch) && !($this.$val$curAlt5 ^ ju_BitSet_get($this.$this$017.$bits, $ch)) ? 0 : 1;
}
function jur_CharClass$8() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt6 = 0;
    a.$this$018 = null;
}
function jur_CharClass$8_contains($this, $ch) {
    return !jur_CharClass_contains($this.$val$clazz4, $ch) && !($this.$val$curAlt6 ^ ju_BitSet_get($this.$this$018.$bits, $ch)) ? 1 : 0;
}
function jur_CharClass$11() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb1 = null;
    a.$val$clazz = null;
    a.$this$013 = null;
}
function jur_CharClass$11_contains($this, $ch) {
    return !($this.$val$curAlt3 ^ $this.$val$nb1.$contains0($ch)) && !jur_CharClass_contains($this.$val$clazz, $ch) ? 0 : 1;
}
function jur_CharClass$10() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt4 = 0;
    a.$val$nb2 = null;
    a.$val$clazz0 = null;
    a.$this$014 = null;
}
function jur_CharClass$10_contains($this, $ch) {
    return !($this.$val$curAlt4 ^ $this.$val$nb2.$contains0($ch)) && !jur_CharClass_contains($this.$val$clazz0, $ch) ? 1 : 0;
}
function jur_CharClass$13() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz7 = null;
    a.$this$021 = null;
}
function jur_CharClass$13_contains($this, $ch) {
    return jur_CharClass_contains($this.$val$clazz7, $ch);
}
function jur_CharClass$12() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz8 = null;
    a.$this$022 = null;
}
function jur_CharClass$12_contains($this, $ch) {
    return jur_CharClass_contains($this.$val$clazz8, $ch) ? 0 : 1;
}
function jur_CharClass$15() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$val$curAlt9 = 0;
    a.$this$023 = null;
}
function jur_CharClass$15_contains($this, $ch) {
    return jur_CharClass_contains($this.$val$clazz9, $ch) && $this.$val$curAlt9 ^ ju_BitSet_get($this.$this$023.$bits, $ch) ? 1 : 0;
}
function jur_CharClass$14() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt10 = 0;
    a.$this$024 = null;
}
function jur_CharClass$14_contains($this, $ch) {
    return jur_CharClass_contains($this.$val$clazz10, $ch) && $this.$val$curAlt10 ^ ju_BitSet_get($this.$this$024.$bits, $ch) ? 0 : 1;
}
function jur_CharClass$17() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz5 = null;
    a.$this$019 = null;
}
function jur_CharClass$17_contains($this, $ch) {
    return $this.$val$curAlt7 ^ $this.$val$nb3.$contains0($ch) && jur_CharClass_contains($this.$val$clazz5, $ch) ? 1 : 0;
}
function jur_CharClass$16() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb4 = null;
    a.$val$clazz6 = null;
    a.$this$020 = null;
}
function jur_CharClass$16_contains($this, $ch) {
    return $this.$val$curAlt8 ^ $this.$val$nb4.$contains0($ch) && jur_CharClass_contains($this.$val$clazz6, $ch) ? 0 : 1;
}
function nms_TileEntityFurnace() {
    var a = this; nms_TileEntity.call(a);
    a.$furnaceItemStacks = null;
    a.$furnaceBurnTime = 0;
    a.$currentItemBurnTime = 0;
    a.$furnaceCookTime = 0;
}
function nms_TileEntityFurnace__init_0() {
    var var_0 = new nms_TileEntityFurnace();
    nms_TileEntityFurnace__init_(var_0);
    return var_0;
}
function nms_TileEntityFurnace__init_($this) {
    $this.$furnaceItemStacks = $rt_createArray(nms_ItemStack, 3);
    $this.$furnaceBurnTime = 0;
    $this.$currentItemBurnTime = 0;
    $this.$furnaceCookTime = 0;
}
function nms_TileEntityFurnace_getSizeInventory($this) {
    return $this.$furnaceItemStacks.data.length;
}
function nms_TileEntityFurnace_getStackInSlot($this, $var1) {
    return $this.$furnaceItemStacks.data[$var1];
}
function nms_TileEntityFurnace_decrStackSize($this, $var1, $var2) {
    var $var3;
    if ($this.$furnaceItemStacks.data[$var1] === null)
        return null;
    if ($this.$furnaceItemStacks.data[$var1].$stackSize <= $var2) {
        $var3 = $this.$furnaceItemStacks.data[$var1];
        $this.$furnaceItemStacks.data[$var1] = null;
        return $var3;
    }
    $var3 = nms_ItemStack_splitStack($this.$furnaceItemStacks.data[$var1], $var2);
    if (!$this.$furnaceItemStacks.data[$var1].$stackSize)
        $this.$furnaceItemStacks.data[$var1] = null;
    return $var3;
}
function nms_TileEntityFurnace_setInventorySlotContents($this, $var1, $var2) {
    $this.$furnaceItemStacks.data[$var1] = $var2;
    if ($var2 !== null && $var2.$stackSize > 64)
        $var2.$stackSize = 64;
}
function nms_TileEntityFurnace_readFromNBT($this, $var1) {
    var $var2, $var3, $var4, $var5;
    nms_TileEntity_readFromNBT($this, $var1);
    $var2 = nms_NBTTagCompound_getTagList($var1, $rt_s(661));
    $this.$furnaceItemStacks = $rt_createArray(nms_ItemStack, nms_TileEntityFurnace_getSizeInventory($this));
    $var3 = 0;
    while ($var3 < nms_NBTTagList_tagCount($var2)) {
        $var4 = nms_NBTTagList_tagAt($var2, $var3);
        $var5 = nms_NBTTagCompound_getByte($var4, $rt_s(541));
        if ($var5 >= 0 && $var5 < $this.$furnaceItemStacks.data.length)
            $this.$furnaceItemStacks.data[$var5] = nms_ItemStack__init_5($var4);
        $var3 = $var3 + 1 | 0;
    }
    $this.$furnaceBurnTime = nms_NBTTagCompound_getShort($var1, $rt_s(910));
    $this.$furnaceCookTime = nms_NBTTagCompound_getShort($var1, $rt_s(911));
    $this.$currentItemBurnTime = nms_TileEntityFurnace_getItemBurnTime($this, $this.$furnaceItemStacks.data[1]);
}
function nms_TileEntityFurnace_writeToNBT($this, $var1) {
    var $var2, $var3, $var4;
    nms_TileEntity_writeToNBT($this, $var1);
    nms_NBTTagCompound_setShort($var1, $rt_s(910), $this.$furnaceBurnTime << 16 >> 16);
    nms_NBTTagCompound_setShort($var1, $rt_s(911), $this.$furnaceCookTime << 16 >> 16);
    $var2 = nms_NBTTagList__init_0();
    $var3 = 0;
    while ($var3 < $this.$furnaceItemStacks.data.length) {
        if ($this.$furnaceItemStacks.data[$var3] !== null) {
            $var4 = nms_NBTTagCompound__init_0();
            nms_NBTTagCompound_setByte($var4, $rt_s(541), $var3 << 24 >> 24);
            nms_ItemStack_writeToNBT($this.$furnaceItemStacks.data[$var3], $var4);
            nms_NBTTagList_setTag($var2, $var4);
        }
        $var3 = $var3 + 1 | 0;
    }
    nms_NBTTagCompound_setTag($var1, $rt_s(661), $var2);
}
function nms_TileEntityFurnace_getInventoryStackLimit($this) {
    return 64;
}
function nms_TileEntityFurnace_getCookProgressScaled($this, $var1) {
    return $rt_imul($this.$furnaceCookTime, $var1) / 200 | 0;
}
function nms_TileEntityFurnace_getBurnTimeRemainingScaled($this, $var1) {
    if (!$this.$currentItemBurnTime)
        $this.$currentItemBurnTime = 200;
    return $rt_imul($this.$furnaceBurnTime, $var1) / $this.$currentItemBurnTime | 0;
}
function nms_TileEntityFurnace_isBurning($this) {
    return $this.$furnaceBurnTime <= 0 ? 0 : 1;
}
function nms_TileEntityFurnace_updateEntity($this) {
    var $var1, $var2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $var1 = $this.$furnaceBurnTime <= 0 ? 0 : 1;
    $var2 = 0;
    if ($this.$furnaceBurnTime > 0)
        $this.$furnaceBurnTime = $this.$furnaceBurnTime - 1 | 0;
    if (!$this.$furnaceBurnTime && nms_TileEntityFurnace_canSmelt($this)) {
        var$3 = nms_TileEntityFurnace_getItemBurnTime($this, $this.$furnaceItemStacks.data[1]);
        $this.$furnaceBurnTime = var$3;
        $this.$currentItemBurnTime = var$3;
        if ($this.$furnaceBurnTime > 0) {
            $var2 = 1;
            if ($this.$furnaceItemStacks.data[1] !== null) {
                var$4 = $this.$furnaceItemStacks.data[1];
                var$4.$stackSize = var$4.$stackSize - 1 | 0;
                if (!$this.$furnaceItemStacks.data[1].$stackSize)
                    $this.$furnaceItemStacks.data[1] = null;
            }
        }
    }
    if (nms_TileEntityFurnace_isBurning($this) && nms_TileEntityFurnace_canSmelt($this)) {
        $this.$furnaceCookTime = $this.$furnaceCookTime + 1 | 0;
        if ($this.$furnaceCookTime == 200) {
            $this.$furnaceCookTime = 0;
            nms_TileEntityFurnace_smeltItem($this);
            $var2 = 1;
        }
    } else
        $this.$furnaceCookTime = 0;
    if ($var1 != ($this.$furnaceBurnTime <= 0 ? 0 : 1)) {
        $var2 = 1;
        $var1 = $this.$furnaceBurnTime <= 0 ? 0 : 1;
        var$5 = $this.$worldObj1;
        var$6 = $this.$xCoord0;
        var$7 = $this.$yCoord0;
        var$8 = $this.$zCoord0;
        var$3 = nms_World_getBlockMetadata(var$5, var$6, var$7, var$8);
        var$9 = nms_World_getBlockTileEntity(var$5, var$6, var$7, var$8);
        if (!$var1) {
            nms_Block_$callClinit();
            nms_World_setBlockWithNotify(var$5, var$6, var$7, var$8, nms_Block_stoneOvenIdle.$blockID);
        } else {
            nms_Block_$callClinit();
            nms_World_setBlockWithNotify(var$5, var$6, var$7, var$8, nms_Block_stoneOvenActive.$blockID);
        }
        nms_World_setBlockMetadataWithNotify(var$5, var$6, var$7, var$8, var$3);
        nms_World_setBlockTileEntity(var$5, var$6, var$7, var$8, var$9);
    }
    if ($var2)
        nms_TileEntity_onInventoryChanged($this);
}
function nms_TileEntityFurnace_canSmelt($this) {
    var $var1, var$2;
    if ($this.$furnaceItemStacks.data[0] === null)
        return 0;
    $var1 = nms_TileEntityFurnace_getSmeltingResultItem($this, nms_ItemStack_getItem($this.$furnaceItemStacks.data[0]).$shiftedIndex);
    if ($var1 < 0)
        $var1 = 0;
    else if ($this.$furnaceItemStacks.data[2] === null)
        $var1 = 1;
    else if ($this.$furnaceItemStacks.data[2].$itemID != $var1)
        $var1 = 0;
    else if ($this.$furnaceItemStacks.data[2].$stackSize < 64 && $this.$furnaceItemStacks.data[2].$stackSize < nms_ItemStack_getMaxStackSize($this.$furnaceItemStacks.data[2]))
        $var1 = 1;
    else {
        var$2 = $this.$furnaceItemStacks.data[2].$stackSize;
        nms_Item_$callClinit();
        $var1 = var$2 >= nms_Item_itemsList.data[$var1].$maxStackSize ? 0 : 1;
    }
    return $var1;
}
function nms_TileEntityFurnace_smeltItem($this) {
    var $var1, var$2;
    if (nms_TileEntityFurnace_canSmelt($this)) {
        $var1 = nms_TileEntityFurnace_getSmeltingResultItem($this, nms_ItemStack_getItem($this.$furnaceItemStacks.data[0]).$shiftedIndex);
        if ($this.$furnaceItemStacks.data[2] === null)
            $this.$furnaceItemStacks.data[2] = nms_ItemStack__init_3($var1, 1);
        else if ($this.$furnaceItemStacks.data[2].$itemID == $var1) {
            var$2 = $this.$furnaceItemStacks.data[2];
            var$2.$stackSize = var$2.$stackSize + 1 | 0;
        }
        var$2 = $this.$furnaceItemStacks.data[0];
        var$2.$stackSize = var$2.$stackSize - 1 | 0;
        if ($this.$furnaceItemStacks.data[0].$stackSize <= 0)
            $this.$furnaceItemStacks.data[0] = null;
    }
}
function nms_TileEntityFurnace_getSmeltingResultItem($this, $var1) {
    a: {
        nms_Block_$callClinit();
        if ($var1 == nms_Block_oreIron.$blockID) {
            nms_Item_$callClinit();
            $var1 = nms_Item_ingotIron.$shiftedIndex;
            break a;
        }
        if ($var1 == nms_Block_oreGold.$blockID) {
            nms_Item_$callClinit();
            $var1 = nms_Item_ingotGold.$shiftedIndex;
            break a;
        }
        if ($var1 == nms_Block_oreDiamond.$blockID) {
            nms_Item_$callClinit();
            $var1 = nms_Item_diamond.$shiftedIndex;
            break a;
        }
        if ($var1 == nms_Block_sand.$blockID) {
            $var1 = nms_Block_glass.$blockID;
            break a;
        }
        nms_Item_$callClinit();
        if ($var1 == nms_Item_porkRaw.$shiftedIndex) {
            $var1 = nms_Item_porkCooked.$shiftedIndex;
            break a;
        }
        if ($var1 == nms_Item_fishRaw.$shiftedIndex) {
            $var1 = nms_Item_fishCooked.$shiftedIndex;
            break a;
        }
        if ($var1 == nms_Block_cobblestone.$blockID) {
            $var1 = nms_Block_stone.$blockID;
            break a;
        }
        if ($var1 != nms_Item_clay.$shiftedIndex) {
            $var1 = (-1);
            break a;
        }
        $var1 = nms_Item_brick.$shiftedIndex;
    }
    return $var1;
}
function nms_TileEntityFurnace_getItemBurnTime($this, $var1) {
    var $var2, var$3;
    if ($var1 === null)
        return 0;
    a: {
        $var2 = nms_ItemStack_getItem($var1).$shiftedIndex;
        if ($var2 < 256) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[$var2].$blockMaterial === nms_Material_wood) {
                var$3 = 300;
                break a;
            }
        }
        nms_Item_$callClinit();
        if ($var2 == nms_Item_stick.$shiftedIndex)
            var$3 = 100;
        else if ($var2 == nms_Item_coal.$shiftedIndex)
            var$3 = 1600;
        else if ($var2 != nms_Item_bucketLava.$shiftedIndex)
            var$3 = 0;
        else
            var$3 = 20000;
    }
    return var$3;
}
function nms_TileEntityChest() {
    nms_TileEntity.call(this);
    this.$field_827_a = null;
}
function nms_TileEntityChest__init_0() {
    var var_0 = new nms_TileEntityChest();
    nms_TileEntityChest__init_(var_0);
    return var_0;
}
function nms_TileEntityChest__init_($this) {
    $this.$field_827_a = $rt_createArray(nms_ItemStack, 36);
}
function nms_TileEntityChest_getSizeInventory($this) {
    return 27;
}
function nms_TileEntityChest_getStackInSlot($this, $var1) {
    return $this.$field_827_a.data[$var1];
}
function nms_TileEntityChest_decrStackSize($this, $var1, $var2) {
    var $var3, $var3_0;
    if ($this.$field_827_a.data[$var1] === null)
        return null;
    if ($this.$field_827_a.data[$var1].$stackSize <= $var2) {
        $var3 = $this.$field_827_a.data[$var1];
        $this.$field_827_a.data[$var1] = null;
        nms_TileEntity_onInventoryChanged($this);
        return $var3;
    }
    $var3_0 = nms_ItemStack_splitStack($this.$field_827_a.data[$var1], $var2);
    if (!$this.$field_827_a.data[$var1].$stackSize)
        $this.$field_827_a.data[$var1] = null;
    nms_TileEntity_onInventoryChanged($this);
    return $var3_0;
}
function nms_TileEntityChest_setInventorySlotContents($this, $var1, $var2) {
    $this.$field_827_a.data[$var1] = $var2;
    if ($var2 !== null && $var2.$stackSize > 64)
        $var2.$stackSize = 64;
    nms_TileEntity_onInventoryChanged($this);
}
function nms_TileEntityChest_getInvName($this) {
    return $rt_s(295);
}
function nms_TileEntityChest_readFromNBT($this, $var1) {
    var $var2, $var3, $var4, $var5;
    nms_TileEntity_readFromNBT($this, $var1);
    $var2 = nms_NBTTagCompound_getTagList($var1, $rt_s(661));
    $this.$field_827_a = $rt_createArray(nms_ItemStack, 27);
    $var3 = 0;
    while ($var3 < nms_NBTTagList_tagCount($var2)) {
        $var4 = nms_NBTTagList_tagAt($var2, $var3);
        $var5 = nms_NBTTagCompound_getByte($var4, $rt_s(541)) & 255;
        if ($var5 >= 0 && $var5 < $this.$field_827_a.data.length)
            $this.$field_827_a.data[$var5] = nms_ItemStack__init_5($var4);
        $var3 = $var3 + 1 | 0;
    }
}
function nms_TileEntityChest_writeToNBT($this, $var1) {
    var $var2, $var3, $var4;
    nms_TileEntity_writeToNBT($this, $var1);
    $var2 = nms_NBTTagList__init_0();
    $var3 = 0;
    while ($var3 < $this.$field_827_a.data.length) {
        if ($this.$field_827_a.data[$var3] !== null) {
            $var4 = nms_NBTTagCompound__init_0();
            nms_NBTTagCompound_setByte($var4, $rt_s(541), $var3 << 24 >> 24);
            nms_ItemStack_writeToNBT($this.$field_827_a.data[$var3], $var4);
            nms_NBTTagList_setTag($var2, $var4);
        }
        $var3 = $var3 + 1 | 0;
    }
    nms_NBTTagCompound_setTag($var1, $rt_s(661), $var2);
}
function nms_TileEntityChest_getInventoryStackLimit($this) {
    return 64;
}
function jur_BackReferencedSingleSet() {
    jur_SingleSet.call(this);
}
function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
    var $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$rightBound0;
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex0);
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches0($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex0);
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches0($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
    return null;
}
function jnci_BufferedEncoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out3 = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
function jnci_BufferedEncoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in0);
}
function jnci_BufferedEncoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out3) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition = $inPosition;
}
function jnci_BufferedEncoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition = $outPosition;
}
function jnc_BufferUnderflowException() {
    jl_RuntimeException.call(this);
}
function jnc_BufferUnderflowException__init_0() {
    var var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_(var_0);
    return var_0;
}
function jnc_BufferUnderflowException__init_($this) {
    jl_Throwable__init_0($this);
}
function jnc_BufferOverflowException() {
    jl_RuntimeException.call(this);
}
function jnc_BufferOverflowException__init_0() {
    var var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_(var_0);
    return var_0;
}
function jnc_BufferOverflowException__init_($this) {
    jl_Throwable__init_0($this);
}
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length2 = 0;
}
function jnc_MalformedInputException_getMessage($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(912)), $this.$length2));
}
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length3 = 0;
}
function jnc_UnmappableCharacterException_getMessage($this) {
    var var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$1, $rt_s(913)), $this.$length3));
}
function nms_GuiSlider() {
    var a = this; nms_GuiButton.call(a);
    a.$sliderValue = 0.0;
    a.$dragging = 0;
    a.$idFloat = 0;
}
function nms_GuiSlider_getHoverState($this, $var1) {
    return 0;
}
function nms_GuiSlider_mouseDragged($this, $var1, $var2, $var3) {
    if ($this.$enabled2) {
        if ($this.$dragging) {
            $this.$sliderValue = ($var2 - ($this.$xPosition + 4 | 0) | 0) / ($this.$width2 - 8 | 0);
            if ($this.$sliderValue < 0.0)
                $this.$sliderValue = 0.0;
            if ($this.$sliderValue > 1.0)
                $this.$sliderValue = 1.0;
            nms_GameSettings_setOptionFloatValue($var1.$gameSettings, $this.$idFloat, $this.$sliderValue);
            $this.$displayString = nms_GameSettings_getOptionDisplayString($var1.$gameSettings, $this.$idFloat);
        }
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_Gui_drawTexturedModalRect($this, $this.$xPosition + ($this.$sliderValue * ($this.$width2 - 8 | 0) | 0) | 0, $this.$yPosition, 0, 66, 4, 20);
        nms_Gui_drawTexturedModalRect($this, ($this.$xPosition + ($this.$sliderValue * ($this.$width2 - 8 | 0) | 0) | 0) + 4 | 0, $this.$yPosition, 196, 66, 4, 20);
    }
}
function nms_GuiSlider_mousePressed($this, $var1, $var2, $var3) {
    if (!nms_GuiButton_mousePressed($this, $var1, $var2, $var3))
        return 0;
    $this.$sliderValue = ($var2 - ($this.$xPosition + 4 | 0) | 0) / ($this.$width2 - 8 | 0);
    if ($this.$sliderValue < 0.0)
        $this.$sliderValue = 0.0;
    if ($this.$sliderValue > 1.0)
        $this.$sliderValue = 1.0;
    nms_GameSettings_setOptionFloatValue($var1.$gameSettings, $this.$idFloat, $this.$sliderValue);
    $this.$displayString = nms_GameSettings_getOptionDisplayString($var1.$gameSettings, $this.$idFloat);
    $this.$dragging = 1;
    return 1;
}
function nms_GuiSlider_mouseReleased($this, $var1, $var2) {
    $this.$dragging = 0;
}
function nms_GuiSmallButton() {
    nms_GuiButton.call(this);
}
function nms_GuiSmallButton__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_GuiSmallButton();
    nms_GuiSmallButton__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_GuiSmallButton__init_0($this, $var1, $var2, $var3, $var4) {
    nms_GuiButton__init_2($this, $var1, $var2, $var3, 150, 20, $var4);
}
function nms_GuiControls() {
    var a = this; nms_GuiScreen.call(a);
    a.$parentScreen0 = null;
    a.$screenTitle1 = null;
    a.$options2 = null;
    a.$buttonId = 0;
}
function nms_GuiControls_initGui($this) {
    var $var1;
    $var1 = 0;
    while ($var1 < $this.$options2.$keyBindings.data.length) {
        ju_ArrayList_add($this.$controlList, nms_GuiSmallButton__init_($var1, (($this.$width / 2 | 0) - 155 | 0) + (($var1 % 2 | 0) * 160 | 0) | 0, ($this.$height0 / 6 | 0) + (24 * ($var1 >> 1) | 0) | 0, nms_GameSettings_getKeyBinding($this.$options2, $var1)));
        $var1 = $var1 + 1 | 0;
    }
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(200, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 6 | 0) + 168 | 0, $rt_s(897)));
}
function nms_GuiControls_actionPerformed($this, $var1) {
    var $var2, var$3;
    $var2 = 0;
    while ($var2 < $this.$options2.$keyBindings.data.length) {
        ju_ArrayList_get($this.$controlList, $var2).$displayString = nms_GameSettings_getKeyBinding($this.$options2, $var2);
        $var2 = $var2 + 1 | 0;
    }
    if ($var1.$id2 == 200)
        nmc_Minecraft_displayGuiScreen($this.$mc5, $this.$parentScreen0);
    else {
        $this.$buttonId = $var1.$id2;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        $var1.$displayString = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(694)), nms_GameSettings_getKeyBinding($this.$options2, $var1.$id2)), $rt_s(695)));
    }
}
function nms_GuiControls_keyTyped($this, $var1, $var2) {
    if ($this.$buttonId < 0)
        nms_GuiScreen_keyTyped($this, $var1, $var2);
    else {
        nms_GameSettings_setKeyBinding($this.$options2, $this.$buttonId, $var2);
        ju_ArrayList_get($this.$controlList, $this.$buttonId).$displayString = nms_GameSettings_getKeyBinding($this.$options2, $this.$buttonId);
        $this.$buttonId = (-1);
    }
}
function nms_GuiControls_drawScreen($this, $var1, $var2, $var3) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$screenTitle1, $this.$width / 2 | 0, 20, 16777215);
        $ptr = 2;
    case 2:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function nms_GuiDeleteWorld() {
    nms_GuiSelectWorld.call(this);
}
function nms_GuiDeleteWorld_initGui2($this) {
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(6, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 6 | 0) + 168 | 0, $rt_s(906)));
}
function nms_GuiDeleteWorld_selectWorld($this, $var1) {
    var $var2, var$3, var$4, var$5;
    $var2 = nms_GuiSelectWorld_getWorldName($this, $var1);
    if ($var2 !== null) {
        var$3 = $this.$mc5;
        var$4 = new nms_GuiYesNo;
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        var$5 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(914)), $var2), $rt_s(915)));
        nms_GuiScreen__init_(var$4);
        var$4.$parentScreen2 = $this;
        var$4.$message10 = $rt_s(916);
        var$4.$message2 = var$5;
        var$4.$worldNumber = $var1;
        nmc_Minecraft_displayGuiScreen(var$3, var$4);
    }
}
function nms_GuiDeleteWorld_deleteWorld($this, $var1, $var2) {
    var var$3, var$4;
    if ($var1) {
        var$3 = nms_GuiSelectWorld_getWorldName($this, $var2);
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(437)), var$3), $rt_s(14)));
        nlea_EaglerAdapterImpl2_$callClinit();
        var$4 = null.$iterator();
        while (var$4.$hasNext()) {
            nlea_EaglerAdapterImpl2_readFile(var$4.$next0().$path);
        }
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        if (nlea_EaglerAdapterImpl2_readFile(jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(437)), var$3), $rt_s(14)))) !== null) {
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(437)), var$3), $rt_s(14)));
        }
    }
    nmc_Minecraft_displayGuiScreen($this.$mc5, $this.$parentScreen1);
}
function ju_Objects() {
    jl_Object.call(this);
}
function ju_Objects__init_0() {
    var var_0 = new ju_Objects();
    ju_Objects__init_(var_0);
    return var_0;
}
function ju_Objects__init_($this) {
    return;
}
function ju_Objects_equals($a, $b) {
    if ($a === $b)
        return 1;
    return $a !== null ? $a.$equals($b) : $b !== null ? 0 : 1;
}
function jl_Boolean() {
    jl_Object.call(this);
    this.$value5 = 0;
}
var jl_Boolean_TRUE = null;
var jl_Boolean_FALSE = null;
var jl_Boolean_TYPE = null;
function jl_Boolean__init_(var_0) {
    var var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
}
function jl_Boolean__init_0($this, $value) {
    $this.$value5 = $value;
}
function jl_Boolean_valueOf($value) {
    return !$value ? jl_Boolean_FALSE : jl_Boolean_TRUE;
}
function jl_Boolean_hashCode($this) {
    return !$this.$value5 ? 1237 : 1231;
}
function jl_Boolean__clinit_() {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
}
function jur_MatchResult() {
}
function jur_Matcher() {
    var a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start7 = null;
    a.$string = null;
    a.$matchResult = null;
    a.$leftBound = 0;
    a.$rightBound = 0;
}
function jur_Matcher_find0($this, $start) {
    var $stringLength, var$3;
    $stringLength = jl_String_length($this.$string);
    if ($start >= 0 && $start <= $stringLength) {
        jur_MatchResultImpl_reset0($this.$matchResult);
        $this.$matchResult.$mode3 = 1;
        jur_MatchResultImpl_setStartIndex($this.$matchResult, $start);
        $start = $this.$start7.$find0($start, $this.$string, $this.$matchResult);
        if ($start == (-1))
            $this.$matchResult.$hitEnd = 1;
        if ($start >= 0 && $this.$matchResult.$valid) {
            jur_MatchResultImpl_finalizeMatch($this.$matchResult);
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3, jl_String_valueOf0($start));
    $rt_throw(var$3);
}
function jur_Matcher_find($this) {
    var $length, var$2;
    $length = jl_String_length($this.$string);
    if (!jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode3 == 1) {
        $this.$matchResult.$startIndex = jur_MatchResultImpl_end($this.$matchResult);
        if (jur_MatchResultImpl_end($this.$matchResult) == jur_MatchResultImpl_start($this.$matchResult)) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && jur_Matcher_find0($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound);
}
function jur_Matcher_start0($this, $group) {
    return jur_MatchResultImpl_start0($this.$matchResult, $group);
}
function jur_Matcher_end0($this, $group) {
    return jur_MatchResultImpl_end0($this.$matchResult, $group);
}
function jur_Matcher_start($this) {
    return jur_Matcher_start0($this, 0);
}
function jur_Matcher_end($this) {
    return jur_Matcher_end0($this, 0);
}
function jur_Matcher_hasTransparentBounds($this) {
    return $this.$matchResult.$transparentBounds;
}
function nms_CompressedStreamTools() {
    jl_Object.call(this);
}
function nms_CompressedStreamTools__init_0() {
    var var_0 = new nms_CompressedStreamTools();
    nms_CompressedStreamTools__init_(var_0);
    return var_0;
}
function nms_CompressedStreamTools__init_($this) {
    return;
}
function nms_CompressedStreamTools_func_1138_a($var0) {
    var $var1, $var2, $$je;
    $var1 = ji_DataInputStream__init_(juz_GZIPInputStream__init_($var0, 512));
    a: {
        try {
            $var2 = nms_CompressedStreamTools_func_1141_a($var1);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $var0 = $$je;

        }
        ji_FilterInputStream_close($var1);
        $rt_throw($var0);
    }
    ji_FilterInputStream_close($var1);
    return $var2;
}
function nms_CompressedStreamTools_writeGzippedCompoundToOutputStream($var0, $var1) {
    var $var2, var$4, var$5, $$je;
    $var2 = new ji_DataOutputStream;
    var$4 = new juz_GZIPOutputStream;
    var$5 = juz_Deflater__init_0((-1), 1);
    ji_FilterOutputStream__init_0(var$4, $var1);
    if ($var1 === null) {
        $var0 = new jl_NullPointerException;
        jl_Throwable__init_0($var0);
        $rt_throw($var0);
    }
    var$4.$def = var$5;
    var$4.$buf3 = $rt_createByteArray(512);
    var$4.$crc0 = juz_CRC32__init_0();
    var$4.$out2.$write3(31);
    var$4.$out2.$write3(139);
    var$4.$out2.$write3(8);
    var$4.$out2.$write3(0);
    juz_GZIPOutputStream_writeLong(var$4, Long_ZERO);
    var$4.$out2.$write3(0);
    var$4.$out2.$write3(0);
    ji_DataOutputStream__init_0($var2, var$4);
    a: {
        try {
            nms_CompressedStreamTools_func_1139_a($var0, $var2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $var0 = $$je;
            break a;

        }
        ji_FilterOutputStream_close($var2);
        return;
    }
    ji_FilterOutputStream_close($var2);
    $rt_throw($var0);
}
function nms_CompressedStreamTools_func_1141_a($var0) {
    var $var1;
    $var1 = nms_NBTBase_readTag($var0);
    if ($var1 instanceof nms_NBTTagCompound)
        return $var1;
    $var1 = new ji_IOException;
    jl_Throwable__init_($var1, $rt_s(917));
    $rt_throw($var1);
}
function nms_CompressedStreamTools_func_1139_a($var0, $var1) {
    nms_NBTBase_writeTag($var0, $var1);
}
function nms_NBTBase() {
    jl_Object.call(this);
    this.$key2 = null;
}
function nms_NBTBase__init_() {
    var var_0 = new nms_NBTBase();
    nms_NBTBase__init_0(var_0);
    return var_0;
}
function nms_NBTBase__init_0($this) {
    $this.$key2 = null;
}
function nms_NBTBase_getKey($this) {
    return $this.$key2 !== null ? $this.$key2 : $rt_s(17);
}
function nms_NBTBase_setKey($this, $var1) {
    $this.$key2 = $var1;
    return $this;
}
function nms_NBTBase_readTag($var0) {
    var $var1, $var2;
    $var1 = ji_DataInputStream_readByte($var0);
    if (!$var1) {
        $var0 = new nms_NBTTagEnd;
        nms_NBTBase__init_0($var0);
        return $var0;
    }
    $var2 = nms_NBTBase_createTagOfType($var1);
    $var2.$key2 = ji_DataInputStream_readUTF($var0);
    $var2.$readTagContents($var0);
    return $var2;
}
function nms_NBTBase_writeTag($var0, $var1) {
    ji_DataOutputStream_writeByte($var1, $var0.$getType0());
    if ($var0.$getType0()) {
        ji_DataOutputStream_writeUTF($var1, nms_NBTBase_getKey($var0));
        $var0.$writeTagContents($var1);
    }
}
function nms_NBTBase_createTagOfType($var0) {
    var var$2;
    switch ($var0) {
        case 0:
            var$2 = new nms_NBTTagEnd;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 1:
            var$2 = new nms_NBTTagByte;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 2:
            var$2 = new nms_NBTTagShort;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 3:
            var$2 = new nms_NBTTagInt;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 4:
            var$2 = new nms_NBTTagLong;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 5:
            var$2 = new nms_NBTTagFloat;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 6:
            var$2 = new nms_NBTTagDouble;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 7:
            var$2 = new nms_NBTTagByteArray;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 8:
            var$2 = new nms_NBTTagString;
            nms_NBTBase__init_0(var$2);
            return var$2;
        case 9:
            return nms_NBTTagList__init_0();
        case 10:
            return nms_NBTTagCompound__init_0();
        default:
    }
    return null;
}
function nms_NBTTagCompound() {
    nms_NBTBase.call(this);
    this.$tagMap0 = null;
}
function nms_NBTTagCompound__init_0() {
    var var_0 = new nms_NBTTagCompound();
    nms_NBTTagCompound__init_(var_0);
    return var_0;
}
function nms_NBTTagCompound__init_($this) {
    nms_NBTBase__init_0($this);
    $this.$tagMap0 = ju_HashMap__init_0();
}
function nms_NBTTagCompound_writeTagContents($this, $var1) {
    var $var2;
    $var2 = ju_HashMap$2_iterator(ju_HashMap_values($this.$tagMap0));
    while (ju_HashMap$AbstractMapIterator_hasNext($var2)) {
        nms_NBTBase_writeTag(ju_HashMap$ValueIterator_next($var2), $var1);
    }
    ji_DataOutputStream_writeByte($var1, 0);
}
function nms_NBTTagCompound_readTagContents($this, $var1) {
    var $var2;
    ju_HashMap_clear($this.$tagMap0);
    while (true) {
        $var2 = nms_NBTBase_readTag($var1);
        if (!$var2.$getType0())
            break;
        ju_HashMap_putImpl($this.$tagMap0, nms_NBTBase_getKey($var2), $var2);
    }
}
function nms_NBTTagCompound_getType($this) {
    return 10;
}
function nms_NBTTagCompound_setTag($this, $var1, $var2) {
    var var$3;
    var$3 = $this.$tagMap0;
    $var2.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, $var2);
}
function nms_NBTTagCompound_setByte($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = new nms_NBTTagByte;
    nms_NBTBase__init_0(var$4);
    var$4.$byteValue0 = $var2;
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setShort($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = new nms_NBTTagShort;
    nms_NBTBase__init_0(var$4);
    var$4.$shortValue0 = $var2;
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setInteger($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = new nms_NBTTagInt;
    nms_NBTBase__init_0(var$4);
    var$4.$intValue0 = $var2;
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setLong($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = new nms_NBTTagLong;
    nms_NBTBase__init_0(var$4);
    var$4.$longValue0 = $var2;
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setFloat($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = nms_NBTTagFloat__init_0($var2);
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setDouble($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = nms_NBTTagDouble__init_0($var2);
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setString($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = new nms_NBTTagString;
    nms_NBTBase__init_0(var$4);
    var$4.$stringValue0 = $var2;
    if ($var2 !== null) {
        var$4.$key2 = $var1;
        ju_HashMap_putImpl(var$3, $var1, var$4);
        return;
    }
    $var2 = new jl_IllegalArgumentException;
    jl_Throwable__init_($var2, $rt_s(918));
    $rt_throw($var2);
}
function nms_NBTTagCompound_setByteArray($this, $var1, $var2) {
    var var$3, var$4;
    var$3 = $this.$tagMap0;
    var$4 = new nms_NBTTagByteArray;
    nms_NBTBase__init_0(var$4);
    var$4.$byteArray0 = $var2;
    var$4.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, var$4);
}
function nms_NBTTagCompound_setCompoundTag($this, $var1, $var2) {
    var var$3;
    var$3 = $this.$tagMap0;
    $var2.$key2 = $var1;
    ju_HashMap_putImpl(var$3, $var1, $var2);
}
function nms_NBTTagCompound_setBoolean($this, $var1, $var2) {
    nms_NBTTagCompound_setByte($this, $var1, (!$var2 ? 0 : 1) << 24 >> 24);
}
function nms_NBTTagCompound_hasKey($this, $var1) {
    return ju_HashMap_containsKey($this.$tagMap0, $var1);
}
function nms_NBTTagCompound_getByte($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? 0 : ju_HashMap_get($this.$tagMap0, $var1).$byteValue0;
}
function nms_NBTTagCompound_getShort($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? 0 : ju_HashMap_get($this.$tagMap0, $var1).$shortValue0;
}
function nms_NBTTagCompound_getInteger($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? 0 : ju_HashMap_get($this.$tagMap0, $var1).$intValue0;
}
function nms_NBTTagCompound_getLong($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? Long_ZERO : ju_HashMap_get($this.$tagMap0, $var1).$longValue0;
}
function nms_NBTTagCompound_getFloat($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? 0.0 : ju_HashMap_get($this.$tagMap0, $var1).$floatValue0;
}
function nms_NBTTagCompound_getDouble($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? 0.0 : ju_HashMap_get($this.$tagMap0, $var1).$doubleValue0;
}
function nms_NBTTagCompound_getString($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? $rt_s(17) : ju_HashMap_get($this.$tagMap0, $var1).$stringValue0;
}
function nms_NBTTagCompound_getByteArray($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? $rt_createByteArray(0) : ju_HashMap_get($this.$tagMap0, $var1).$byteArray0;
}
function nms_NBTTagCompound_getCompoundTag($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? nms_NBTTagCompound__init_0() : ju_HashMap_get($this.$tagMap0, $var1);
}
function nms_NBTTagCompound_getTagList($this, $var1) {
    return !ju_HashMap_containsKey($this.$tagMap0, $var1) ? nms_NBTTagList__init_0() : ju_HashMap_get($this.$tagMap0, $var1);
}
function nms_NBTTagCompound_getBoolean($this, $var1) {
    return !nms_NBTTagCompound_getByte($this, $var1) ? 0 : 1;
}
function jl_AbstractStringBuilder$Constants() {
    jl_Object.call(this);
}
var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
function jl_AbstractStringBuilder$Constants__init_0() {
    var var_0 = new jl_AbstractStringBuilder$Constants();
    jl_AbstractStringBuilder$Constants__init_(var_0);
    return var_0;
}
function jl_AbstractStringBuilder$Constants__init_($this) {
    return;
}
function jl_AbstractStringBuilder$Constants__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(10);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 10;
    var$2[2] = 100;
    var$2[3] = 1000;
    var$2[4] = 10000;
    var$2[5] = 100000;
    var$2[6] = 1000000;
    var$2[7] = 10000000;
    var$2[8] = 100000000;
    var$2[9] = 1000000000;
    jl_AbstractStringBuilder$Constants_intPowersOfTen = var$1;
    var$1 = $rt_createLongArray(19);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(1000);
    var$2[4] = Long_fromInt(10000);
    var$2[5] = Long_fromInt(100000);
    var$2[6] = Long_fromInt(1000000);
    var$2[7] = Long_fromInt(10000000);
    var$2[8] = Long_fromInt(100000000);
    var$2[9] = Long_fromInt(1000000000);
    var$2[10] = new Long(1410065408, 2);
    var$2[11] = new Long(1215752192, 23);
    var$2[12] = new Long(3567587328, 232);
    var$2[13] = new Long(1316134912, 2328);
    var$2[14] = new Long(276447232, 23283);
    var$2[15] = new Long(2764472320, 232830);
    var$2[16] = new Long(1874919424, 2328306);
    var$2[17] = new Long(1569325056, 23283064);
    var$2[18] = new Long(2808348672, 232830643);
    jl_AbstractStringBuilder$Constants_longPowersOfTen = var$1;
    var$1 = $rt_createLongArray(6);
    var$2 = var$1.data;
    var$2[0] = Long_fromInt(1);
    var$2[1] = Long_fromInt(10);
    var$2[2] = Long_fromInt(100);
    var$2[3] = Long_fromInt(10000);
    var$2[4] = Long_fromInt(100000000);
    var$2[5] = new Long(1874919424, 2328306);
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = var$1;
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = new otcit_DoubleAnalyzer$Result;
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = new otcit_FloatAnalyzer$Result;
}
function otcit_DoubleAnalyzer() {
    jl_Object.call(this);
}
var otcit_DoubleAnalyzer_mantissa10Table = null;
var otcit_DoubleAnalyzer_exp10Table = null;
function otcit_DoubleAnalyzer__init_0() {
    var var_0 = new otcit_DoubleAnalyzer();
    otcit_DoubleAnalyzer__init_(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer__init_($this) {
    return;
}
function otcit_DoubleAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, $decExponent, $mantissaShift, $decMantissa, $error, $upError, $downError, $lowerPos, $upperPos;
    $bits = $rt_doubleToLongBits($d);
    $result.$sign0 = Long_eq(Long_and($bits, new Long(0, 2147483648)), Long_ZERO) ? 0 : 1;
    $mantissa = Long_and($bits, new Long(4294967295, 1048575));
    $exponent = Long_shr($bits, 52).lo & 2047;
    if (Long_eq($mantissa, Long_ZERO) && !$exponent) {
        $result.$mantissa0 = Long_ZERO;
        $result.$exponent0 = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        $mantissa = Long_or($mantissa, new Long(0, 1048576));
    else {
        $mantissa = Long_shl($mantissa, 1);
        while (Long_eq(Long_and($mantissa, new Long(0, 1048576)), Long_ZERO)) {
            $mantissa = Long_shl($mantissa, 1);
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_DoubleAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent - 2 | 0;
    $mantissaShift = 12 + ($exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0) | 0;
    $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight($mantissa, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    if (Long_ge($decMantissa, new Long(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        $mantissaShift = 12 + ($exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0) | 0;
        $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight($mantissa, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    }
    $error = Long_shru(otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], (63 - $mantissaShift | 0) - $errorShift | 0);
    $upError = Long_shr(Long_add($error, Long_fromInt(1)), 1);
    $downError = Long_shr($error, 1);
    if (Long_eq($mantissa, new Long(0, 1048576)))
        $downError = Long_shr($downError, 2);
    $lowerPos = Long_fromInt(10);
    while (Long_le($lowerPos, $downError)) {
        $lowerPos = Long_mul($lowerPos, Long_fromInt(10));
    }
    if (Long_ge(Long_rem($decMantissa, $lowerPos), Long_div($downError, Long_fromInt(2))))
        $lowerPos = Long_div($lowerPos, Long_fromInt(10));
    $upperPos = Long_fromInt(1);
    while (Long_le($upperPos, $upError)) {
        $upperPos = Long_mul($upperPos, Long_fromInt(10));
    }
    if (Long_gt(Long_sub($upperPos, Long_rem($decMantissa, $upperPos)), Long_div($upError, Long_fromInt(2))))
        $upperPos = Long_div($upperPos, Long_fromInt(10));
    $exponent = Long_compare($lowerPos, $upperPos);
    $mantissa = $exponent > 0 ? Long_mul(Long_div($decMantissa, $lowerPos), $lowerPos) : $exponent < 0 ? Long_add(Long_mul(Long_div($decMantissa, $upperPos), $upperPos), $upperPos) : Long_mul(Long_div(Long_add($decMantissa, Long_div($upperPos, Long_fromInt(2))), $upperPos), $upperPos);
    if (Long_ge($mantissa, new Long(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        $mantissa = Long_div($mantissa, Long_fromInt(10));
    } else if (Long_lt($mantissa, new Long(1569325056, 23283064))) {
        $decExponent = $decExponent + (-1) | 0;
        $mantissa = Long_mul($mantissa, Long_fromInt(10));
    }
    $result.$mantissa0 = $mantissa;
    $result.$exponent0 = $decExponent - 330 | 0;
}
function otcit_DoubleAnalyzer_mulAndShiftRight($a, $b, $shift) {
    var $a1, $a2, $a3, $a4, $b1, $b2, $b3, $b4, $cm, $c0, $c;
    $a1 = Long_and($a, Long_fromInt(65535));
    $a2 = Long_and(Long_shru($a, 16), Long_fromInt(65535));
    $a3 = Long_and(Long_shru($a, 32), Long_fromInt(65535));
    $a4 = Long_and(Long_shru($a, 48), Long_fromInt(65535));
    $b1 = Long_and($b, Long_fromInt(65535));
    $b2 = Long_and(Long_shru($b, 16), Long_fromInt(65535));
    $b3 = Long_and(Long_shru($b, 32), Long_fromInt(65535));
    $b4 = Long_and(Long_shru($b, 48), Long_fromInt(65535));
    $cm = Long_add(Long_add(Long_mul($b3, $a1), Long_mul($b2, $a2)), Long_mul($b1, $a3));
    $c0 = Long_add(Long_add(Long_add(Long_mul($b4, $a1), Long_mul($b3, $a2)), Long_mul($b2, $a3)), Long_mul($b1, $a4));
    $c = Long_add(Long_add(Long_shl(Long_mul($b4, $a4), 32 + $shift | 0), Long_shl(Long_add(Long_mul($b4, $a3), Long_mul($b3, $a4)), 16 + $shift | 0)), Long_shl(Long_add(Long_add(Long_mul($b4, $a2), Long_mul($b3, $a3)), Long_mul($b2, $a4)), $shift));
    return Long_add($shift > 16 ? Long_add($c, Long_shl($c0, $shift - 16 | 0)) : Long_add($c, Long_shru($c0, 16 - $shift | 0)), Long_shru($cm, 32 - $shift | 0));
}
function otcit_DoubleAnalyzer__clinit_() {
    var $decimalMantissaOne, $exponent, $i, $shiftedOffPart, var$5, var$6, $maxMantissa, $i_0, $shift, var$10;
    otcit_DoubleAnalyzer_mantissa10Table = $rt_createLongArray(660);
    otcit_DoubleAnalyzer_exp10Table = $rt_createIntArray(660);
    $decimalMantissaOne = new Long(991952896, 1862645149);
    $exponent = 1023;
    $i = 0;
    $shiftedOffPart = $decimalMantissaOne;
    while ($i < 330) {
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = $i + 330 | 0;
        var$5[var$6] = jl_Long_divideUnsigned($shiftedOffPart, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = $exponent;
        $shiftedOffPart = jl_Long_divideUnsigned($shiftedOffPart, Long_fromInt(10));
        $maxMantissa = jl_Long_remainderUnsigned($shiftedOffPart, Long_fromInt(10));
        while (Long_le($shiftedOffPart, $decimalMantissaOne) && Long_eq(Long_and($shiftedOffPart, new Long(0, 2147483648)), Long_ZERO)) {
            $shiftedOffPart = Long_shl($shiftedOffPart, 1);
            $exponent = $exponent + 1 | 0;
            $maxMantissa = Long_shl($maxMantissa, 1);
        }
        $shiftedOffPart = Long_add($shiftedOffPart, Long_div($maxMantissa, Long_fromInt(10)));
        $i = $i + 1 | 0;
    }
    $i = 1023;
    $i_0 = 0;
    while ($i_0 < 330) {
        $shift = 0;
        $shiftedOffPart = $decimalMantissaOne;
        while (Long_gt($shiftedOffPart, new Long(3435973836, 214748364))) {
            $shiftedOffPart = Long_shr($shiftedOffPart, 1);
            $shift = $shift + 1 | 0;
            $i = $i + (-1) | 0;
        }
        var$10 = Long_mul($shiftedOffPart, Long_fromInt(10));
        $decimalMantissaOne = $shift <= 0 ? var$10 : Long_add(var$10, Long_shr(Long_mul(Long_and($decimalMantissaOne, Long_fromInt((1 << $shift) - 1 | 0)), Long_fromInt(10)), $shift));
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = (330 - $i_0 | 0) - 1 | 0;
        var$5[var$6] = jl_Long_divideUnsigned($decimalMantissaOne, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = $i;
        $i_0 = $i_0 + 1 | 0;
    }
}
function otcit_DoubleAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa0 = Long_ZERO;
    a.$exponent0 = 0;
    a.$sign0 = 0;
}
function otcit_DoubleAnalyzer$Result__init_0() {
    var var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer$Result__init_($this) {
    return;
}
function otcit_FloatAnalyzer() {
    jl_Object.call(this);
}
var otcit_FloatAnalyzer_mantissa10Table = null;
var otcit_FloatAnalyzer_exp10Table = null;
function otcit_FloatAnalyzer__init_0() {
    var var_0 = new otcit_FloatAnalyzer();
    otcit_FloatAnalyzer__init_(var_0);
    return var_0;
}
function otcit_FloatAnalyzer__init_($this) {
    return;
}
function otcit_FloatAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, $decExponent, $mantissaShift, var$9, $decMantissa, $error, $upError, $downError, $lowerPos, $upperPos;
    $bits = $rt_floatToIntBits($d);
    $result.$sign = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        $mantissa = $mantissa | 8388608;
    else {
        $mantissa = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt($mantissa), Long_fromInt(8388608)), Long_ZERO)) {
            $mantissa = $mantissa << 1;
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent - 2 | 0;
    $mantissaShift = 9 + ($exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0) | 0;
    var$9 = Long_fromInt($mantissa);
    $decMantissa = Long_shru(Long_mul(var$9, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0).lo;
    if ($decMantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        $mantissaShift = 9 + ($exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0) | 0;
        $decMantissa = Long_shru(Long_mul(var$9, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0).lo;
    }
    $errorShift = (31 - $mantissaShift | 0) - $errorShift | 0;
    $error = $errorShift >= 0 ? otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] >>> $errorShift : otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] <<  -$errorShift;
    $upError = ($error + 1 | 0) >> 1;
    $downError = $error >> 1;
    if ($mantissa == 4194304)
        $downError = $downError >> 2;
    $lowerPos = 10;
    while ($lowerPos <= $downError) {
        $lowerPos = $lowerPos * 10 | 0;
    }
    if (($decMantissa % $lowerPos | 0) >= ($downError / 2 | 0))
        $lowerPos = $lowerPos / 10 | 0;
    $upperPos = 10;
    while ($upperPos <= $upError) {
        $upperPos = $upperPos * 10 | 0;
    }
    if (($upperPos - ($decMantissa % $upperPos | 0) | 0) > ($upError / 2 | 0))
        $upperPos = $upperPos / 10 | 0;
    $mantissa = $rt_compare($lowerPos, $upperPos);
    $mantissa = $mantissa > 0 ? $rt_imul($decMantissa / $lowerPos | 0, $lowerPos) : $mantissa < 0 ? $rt_imul($decMantissa / $upperPos | 0, $upperPos) + $upperPos | 0 : $rt_imul(($decMantissa + ($upperPos / 2 | 0) | 0) / $upperPos | 0, $upperPos);
    if ($mantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        $mantissa = $mantissa / 10 | 0;
    } else if ($mantissa < 100000000) {
        $decExponent = $decExponent + (-1) | 0;
        $mantissa = $mantissa * 10 | 0;
    }
    $result.$mantissa = $mantissa;
    $result.$exponent = $decExponent - 50 | 0;
}
function otcit_FloatAnalyzer__clinit_() {
    var $decMantissaOne, $exponent, $i, $maxMantissa, var$5, var$6, $remainder, $shift;
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArray(100);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArray(100);
    $decMantissaOne = 2000000000;
    $exponent = 127;
    $i = 0;
    $maxMantissa = $decMantissaOne;
    while ($i < 50) {
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$6 = $i + 50 | 0;
        var$5[var$6] = $rt_udiv($maxMantissa, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$6] = $exponent;
        var$6 = $rt_udiv($maxMantissa, 10);
        $remainder = $rt_umod(var$6, 10);
        while (var$6 <= $decMantissaOne && !(var$6 & (-2147483648))) {
            var$6 = var$6 << 1;
            $exponent = $exponent + 1 | 0;
            $remainder = $remainder << 1;
        }
        $maxMantissa = var$6 + ($remainder / 10 | 0) | 0;
        $i = $i + 1 | 0;
    }
    $exponent = 127;
    $i = 0;
    while ($i < 50) {
        $shift = 0;
        $remainder = $decMantissaOne;
        while ($remainder > 214748364) {
            $remainder = $remainder >> 1;
            $shift = $shift + 1 | 0;
            $exponent = $exponent + (-1) | 0;
        }
        $remainder = $remainder * 10 | 0;
        $decMantissaOne = $shift <= 0 ? $remainder : Long_add(Long_fromInt($remainder), Long_shr(Long_mul(Long_fromInt($decMantissaOne & ((1 << $shift) - 1 | 0)), Long_fromInt(10)), $shift)).lo;
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        $shift = (50 - $i | 0) - 1 | 0;
        var$5[$shift] = $rt_udiv($decMantissaOne, 20);
        otcit_FloatAnalyzer_exp10Table.data[$shift] = $exponent;
        $i = $i + 1 | 0;
    }
}
function otcit_FloatAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign = 0;
}
function otcit_FloatAnalyzer$Result__init_0() {
    var var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_(var_0);
    return var_0;
}
function otcit_FloatAnalyzer$Result__init_($this) {
    return;
}
function juz_InflaterInputStream() {
    var a = this; ji_FilterInputStream.call(a);
    a.$inf = null;
    a.$buf4 = null;
    a.$len0 = 0;
    a.$closed1 = 0;
    a.$eof3 = 0;
}
function juz_InflaterInputStream_read($this) {
    var $b;
    $b = $rt_createByteArray(1);
    if (juz_GZIPInputStream_read($this, $b, 0, 1) == (-1))
        return (-1);
    return $b.data[0] & 255;
}
function juz_InflaterInputStream_read0($this, $buffer, $off, $nbytes) {
    var $e, var$5, var$6, $result, var$8, $$je;
    if ($this.$closed1) {
        $e = new ji_IOException;
        jl_Throwable__init_($e, $rt_s(919));
        $rt_throw($e);
    }
    if (null === $buffer) {
        $e = new jl_NullPointerException;
        jl_Throwable__init_0($e);
        $rt_throw($e);
    }
    if ($off >= 0 && $nbytes >= 0) {
        var$5 = $buffer.data;
        var$6 = $off + $nbytes | 0;
        $result = var$5.length;
        if (var$6 <= $result) {
            if (!$nbytes)
                return 0;
            if ($this.$eof3)
                return (-1);
            if ($off <= $result && $nbytes >= 0 && $off >= 0 && ($result - $off | 0) >= $nbytes) {
                a: {
                    b: {
                        c: {
                            d: {
                                while (true) {
                                    if (juz_Inflater_needsInput($this.$inf))
                                        juz_InflaterInputStream_fill($this);
                                    try {
                                        $result = juz_Inflater_inflate($this.$inf, $buffer, $off, $nbytes);
                                        $this.$eof3 = juz_Inflater_finished($this.$inf);
                                        if ($result > 0)
                                            break;
                                        if ($this.$eof3)
                                            break d;
                                        if (juz_Inflater_needsDictionary($this.$inf))
                                            break b;
                                        if ($this.$len0 == (-1))
                                            break c;
                                        continue;
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof juz_DataFormatException) {
                                            $e = $$je;
                                            break a;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                }
                                return $result;
                            }
                            try {
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof juz_DataFormatException) {
                                    $e = $$je;
                                    break a;
                                } else {
                                    throw $$e;
                                }
                            }
                            return (-1);
                        }
                        try {
                            $this.$eof3 = 1;
                            $rt_throw(ji_EOFException__init_0());
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof juz_DataFormatException) {
                                $e = $$je;
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        $this.$eof3 = 1;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof juz_DataFormatException) {
                            $e = $$je;
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                    return (-1);
                }
                $this.$eof3 = 1;
                if ($this.$len0 != (-1)) {
                    var$8 = new ji_IOException;
                    jl_Throwable__init_4(var$8, $e);
                    $rt_throw(var$8);
                }
                $e = new ji_EOFException;
                jl_Throwable__init_0($e);
                $rt_throw($e);
            }
            $e = new jl_ArrayIndexOutOfBoundsException;
            jl_Throwable__init_0($e);
            $rt_throw($e);
        }
    }
    $e = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_0($e);
    $rt_throw($e);
}
function juz_InflaterInputStream_fill($this) {
    var var$1;
    if ($this.$closed1) {
        var$1 = new ji_IOException;
        jl_Throwable__init_0(var$1);
        $rt_throw(var$1);
    }
    $this.$len0 = $this.$in.$read($this.$buf4);
    if ($this.$len0 > 0)
        juz_Inflater_setInput($this.$inf, $this.$buf4, 0, $this.$len0);
}
function juz_InflaterInputStream_available($this) {
    var var$1;
    if (!$this.$closed1) {
        if (!$this.$eof3)
            return 1;
        return 0;
    }
    var$1 = new ji_IOException;
    jl_Throwable__init_(var$1, $rt_s(919));
    $rt_throw(var$1);
}
function juz_GZIPInputStream() {
    var a = this; juz_InflaterInputStream.call(a);
    a.$crc1 = null;
    a.$eos = 0;
}
function juz_GZIPInputStream__init_(var_0, var_1) {
    var var_2 = new juz_GZIPInputStream();
    juz_GZIPInputStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function juz_GZIPInputStream__init_0($this, $is, $size) {
    var var$3, $header, var$5, $result, $flags, $hcrc, $length, $max, $crc16;
    var$3 = juz_Inflater__init_0(1);
    ji_FilterInputStream__init_($this, $is);
    if ($is === null) {
        $is = new jl_NullPointerException;
        jl_Throwable__init_0($is);
        $rt_throw($is);
    }
    if ($size <= 0) {
        $is = new jl_IllegalArgumentException;
        jl_Throwable__init_0($is);
        $rt_throw($is);
    }
    $this.$inf = var$3;
    $this.$buf4 = $rt_createByteArray($size);
    $this.$crc1 = juz_CRC32__init_0();
    $header = $rt_createByteArray(10);
    var$5 = $header.data;
    $result = var$5.length;
    juz_GZIPInputStream_readFully($this, $header, 0, $result);
    if (juz_GZIPInputStream_getShort($this, $header, 0) != 35615) {
        $is = new ji_IOException;
        jl_Throwable__init_0($is);
        $rt_throw($is);
    }
    $flags = var$5[3];
    $hcrc = !($flags & 2) ? 0 : 1;
    if ($hcrc)
        juz_CRC32_update($this.$crc1, $header, 0, $result);
    a: {
        if ($flags & 4) {
            juz_GZIPInputStream_readFully($this, $header, 0, 2);
            if ($hcrc)
                juz_CRC32_update($this.$crc1, $header, 0, 2);
            $length = juz_GZIPInputStream_getShort($this, $header, 0);
            while (true) {
                if ($length <= 0)
                    break a;
                $max = $length <= $this.$buf4.data.length ? $length : $this.$buf4.data.length;
                $result = $this.$in.$read0($this.$buf4, 0, $max);
                if ($result == (-1))
                    break;
                if ($hcrc)
                    juz_CRC32_update($this.$crc1, $this.$buf4, 0, $result);
                $length = $length - $result | 0;
            }
            $is = new ji_EOFException;
            jl_Throwable__init_0($is);
            $rt_throw($is);
        }
    }
    if ($flags & 8)
        juz_GZIPInputStream_readZeroTerminated($this, $hcrc);
    if ($flags & 16)
        juz_GZIPInputStream_readZeroTerminated($this, $hcrc);
    if ($hcrc) {
        juz_GZIPInputStream_readFully($this, $header, 0, 2);
        $crc16 = juz_GZIPInputStream_getShort($this, $header, 0);
        if (Long_ne(Long_and(juz_CRC32_getValue($this.$crc1), Long_fromInt(65535)), Long_fromInt($crc16))) {
            $is = new ji_IOException;
            jl_Throwable__init_0($is);
            $rt_throw($is);
        }
        juz_CRC32_reset($this.$crc1);
    }
}
function juz_GZIPInputStream_close($this) {
    $this.$eos = 1;
    if (!$this.$closed1) {
        juz_Inflater_end($this.$inf);
        $this.$closed1 = 1;
        $this.$eof3 = 1;
        ji_FilterInputStream_close($this);
    }
}
function juz_GZIPInputStream_getLong($this, $buffer, $off) {
    $buffer = $buffer.data;
    return Long_or(Long_or(Long_or(Long_or(Long_ZERO, Long_fromInt($buffer[$off] & 255)), Long_fromInt(($buffer[$off + 1 | 0] & 255) << 8)), Long_fromInt(($buffer[$off + 2 | 0] & 255) << 16)), Long_shl(Long_fromInt($buffer[$off + 3 | 0] & 255), 24));
}
function juz_GZIPInputStream_getShort($this, $buffer, $off) {
    $buffer = $buffer.data;
    return $buffer[$off] & 255 | ($buffer[$off + 1 | 0] & 255) << 8;
}
function juz_GZIPInputStream_read($this, $buffer, $off, $nbytes) {
    var var$4, $bytesRead, var$6, $$je;
    if ($this.$closed1) {
        var$4 = new ji_IOException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($this.$eos)
        return (-1);
    $bytesRead = $buffer.data.length;
    if ($off <= $bytesRead && $nbytes >= 0 && $off >= 0 && ($bytesRead - $off | 0) >= $nbytes) {
        a: {
            try {
                $bytesRead = juz_InflaterInputStream_read0($this, $buffer, $off, $nbytes);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$4 = $$je;

            }
            $this.$eos = $this.$eof3;
            $rt_throw(var$4);
        }
        $this.$eos = $this.$eof3;
        if ($bytesRead != (-1))
            juz_CRC32_update($this.$crc1, $buffer, $off, $bytesRead);
        if ($this.$eos) {
            $nbytes = juz_Inflater_getRemaining($this.$inf);
            $buffer = $rt_createByteArray(8);
            var$6 = $nbytes <= 8 ? $nbytes : 8;
            jl_System_arraycopy($this.$buf4, $this.$len0 - $nbytes | 0, $buffer, 0, var$6);
            juz_GZIPInputStream_readFully($this, $buffer, var$6, 8 - var$6 | 0);
            if (Long_ne(juz_GZIPInputStream_getLong($this, $buffer, 0), juz_CRC32_getValue($this.$crc1))) {
                var$4 = new ji_IOException;
                jl_Throwable__init_0(var$4);
                $rt_throw(var$4);
            }
            if (juz_GZIPInputStream_getLong($this, $buffer, 4).lo != juz_Inflater_getTotalOut($this.$inf)) {
                var$4 = new ji_IOException;
                jl_Throwable__init_0(var$4);
                $rt_throw(var$4);
            }
        }
        return $bytesRead;
    }
    var$4 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function juz_GZIPInputStream_readFully($this, $buffer, $offset, $length) {
    var $result, var$5;
    while ($length > 0) {
        $result = $this.$in.$read0($buffer, $offset, $length);
        if ($result == (-1)) {
            var$5 = new ji_EOFException;
            jl_Throwable__init_0(var$5);
            $rt_throw(var$5);
        }
        $offset = $offset + $result | 0;
        $length = $length - $result | 0;
    }
}
function juz_GZIPInputStream_readZeroTerminated($this, $hcrc) {
    var var$2, var$3;
    while (true) {
        var$2 = $this.$in.$read1();
        if (var$2 <= 0)
            break;
        if (!$hcrc)
            continue;
        juz_CRC32_update0($this.$crc1, var$2);
    }
    if (var$2 != (-1)) {
        if ($hcrc)
            juz_CRC32_update0($this.$crc1, var$2);
        return;
    }
    var$3 = new ji_EOFException;
    jl_Throwable__init_0(var$3);
    $rt_throw(var$3);
}
function juz_Inflater() {
    var a = this; jl_Object.call(a);
    a.$finished1 = 0;
    a.$nowrap = 0;
    a.$inLength = 0;
    a.$inRead = 0;
    a.$needsDictionary0 = 0;
    a.$impl = null;
}
function juz_Inflater__init_1() {
    var var_0 = new juz_Inflater();
    juz_Inflater__init_(var_0);
    return var_0;
}
function juz_Inflater__init_0(var_0) {
    var var_1 = new juz_Inflater();
    juz_Inflater__init_2(var_1, var_0);
    return var_1;
}
function juz_Inflater__init_($this) {
    juz_Inflater__init_2($this, 0);
}
function juz_Inflater__init_2($this, $noHeader) {
    var $$je;
    $this.$nowrap = $noHeader;
    a: {
        try {
            $this.$impl = cjj_Inflater__init_0($noHeader);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cjj_GZIPException) {
            } else {
                throw $$e;
            }
        }
    }
}
function juz_Inflater_end($this) {
    $this.$inRead = 0;
    $this.$inLength = 0;
    $this.$impl = null;
}
function juz_Inflater_finished($this) {
    return $this.$finished1;
}
function juz_Inflater_getBytesWritten($this) {
    var var$1;
    if ($this.$impl !== null)
        return $this.$impl.$total_out;
    var$1 = new jl_IllegalStateException;
    jl_Throwable__init_0(var$1);
    $rt_throw(var$1);
}
function juz_Inflater_getRemaining($this) {
    return $this.$inLength - $this.$inRead | 0;
}
function juz_Inflater_getTotalOut($this) {
    return juz_Inflater_getBytesWritten($this).lo;
}
function juz_Inflater_inflate($this, $buf, $off, $nbytes) {
    var $neededDict, var$5, $lastInSize, $lastOutSize, $errCode, var$9;
    $neededDict = $buf.data.length;
    if ($off <= $neededDict && $nbytes >= 0 && $off >= 0 && ($neededDict - $off | 0) >= $nbytes) {
        if ($this.$impl === null) {
            var$5 = new jl_IllegalStateException;
            jl_Throwable__init_0(var$5);
            $rt_throw(var$5);
        }
        if (juz_Inflater_needsInput($this))
            return 0;
        a: {
            $lastInSize = $this.$impl.$total_in;
            $lastOutSize = $this.$impl.$total_out;
            $neededDict = $this.$needsDictionary0;
            $this.$needsDictionary0 = 0;
            cjj_ZStream_setOutput($this.$impl, $buf, $off, $nbytes);
            $errCode = cjj_Inflater_inflate($this.$impl, 0);
            switch ($errCode) {
                case 0:
                    break a;
                case 1:
                    $this.$finished1 = 1;
                    break a;
                case 2:
                    $this.$needsDictionary0 = 1;
                    break a;
                default:
            }
            var$5 = new juz_DataFormatException;
            var$9 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$9);
            jl_Throwable__init_(var$5, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$9, $rt_s(920)), $errCode)));
            $rt_throw(var$5);
        }
        if ($this.$needsDictionary0 && $neededDict) {
            var$5 = new juz_DataFormatException;
            jl_Throwable__init_0(var$5);
            $rt_throw(var$5);
        }
        $this.$inRead = Long_add(Long_fromInt($this.$inRead), Long_sub($this.$impl.$total_in, $lastInSize)).lo;
        return Long_sub($this.$impl.$total_out, $lastOutSize).lo;
    }
    var$5 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$5);
    $rt_throw(var$5);
}
function juz_Inflater_needsDictionary($this) {
    return $this.$needsDictionary0;
}
function juz_Inflater_needsInput($this) {
    return $this.$inRead != $this.$inLength ? 0 : 1;
}
function juz_Inflater_setInput($this, $buf, $off, $nbytes) {
    var var$4, var$5;
    if ($this.$impl === null) {
        var$4 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    var$5 = $buf.data.length;
    if ($off <= var$5 && $nbytes >= 0 && $off >= 0 && (var$5 - $off | 0) >= $nbytes) {
        $this.$inRead = 0;
        $this.$inLength = $nbytes;
        cjj_ZStream_setInput($this.$impl, $buf, $off, $nbytes, 0);
        return;
    }
    var$4 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function juz_Checksum() {
}
function juz_CRC32() {
    var a = this; jl_Object.call(a);
    a.$impl0 = null;
    a.$tbytes = Long_ZERO;
}
function juz_CRC32__init_0() {
    var var_0 = new juz_CRC32();
    juz_CRC32__init_(var_0);
    return var_0;
}
function juz_CRC32__init_($this) {
    $this.$impl0 = cjj_CRC32__init_0();
}
function juz_CRC32_getValue($this) {
    return cjj_CRC32_getValue($this.$impl0);
}
function juz_CRC32_reset($this) {
    cjj_CRC32_reset($this.$impl0);
    $this.$tbytes = Long_ZERO;
}
function juz_CRC32_update0($this, $val) {
    var var$2, var$3;
    var$2 = $this.$impl0;
    var$3 = $rt_createByteArray(1);
    var$3.data[0] = $val << 24 >> 24;
    cjj_CRC32_update(var$2, var$3, 0, 1);
}
function juz_CRC32_update($this, $buf, $off, $nbytes) {
    var var$4, var$5;
    var$4 = $buf.data.length;
    if ($off <= var$4 && $nbytes >= 0 && $off >= 0 && (var$4 - $off | 0) >= $nbytes) {
        cjj_CRC32_update($this.$impl0, $buf, $off, $nbytes);
        $this.$tbytes = Long_add($this.$tbytes, Long_fromInt($nbytes));
        return;
    }
    var$5 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$5);
    $rt_throw(var$5);
}
function nms_NBTTagEnd() {
    nms_NBTBase.call(this);
}
function nms_NBTTagEnd__init_0() {
    var var_0 = new nms_NBTTagEnd();
    nms_NBTTagEnd__init_(var_0);
    return var_0;
}
function nms_NBTTagEnd__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagEnd_readTagContents($this, $var1) {
    return;
}
function nms_NBTTagEnd_writeTagContents($this, $var1) {
    return;
}
function nms_NBTTagEnd_getType($this) {
    return 0;
}
function nms_NBTTagByte() {
    nms_NBTBase.call(this);
    this.$byteValue0 = 0;
}
function nms_NBTTagByte__init_0() {
    var var_0 = new nms_NBTTagByte();
    nms_NBTTagByte__init_(var_0);
    return var_0;
}
function nms_NBTTagByte__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagByte_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeByte($var1, $this.$byteValue0);
}
function nms_NBTTagByte_readTagContents($this, $var1) {
    $this.$byteValue0 = ji_DataInputStream_readByte($var1);
}
function nms_NBTTagByte_getType($this) {
    return 1;
}
function nms_NBTTagShort() {
    nms_NBTBase.call(this);
    this.$shortValue0 = 0;
}
function nms_NBTTagShort__init_0() {
    var var_0 = new nms_NBTTagShort();
    nms_NBTTagShort__init_(var_0);
    return var_0;
}
function nms_NBTTagShort__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagShort_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeShort($var1, $this.$shortValue0);
}
function nms_NBTTagShort_readTagContents($this, $var1) {
    $this.$shortValue0 = ji_DataInputStream_readShort($var1);
}
function nms_NBTTagShort_getType($this) {
    return 2;
}
function nms_NBTTagInt() {
    nms_NBTBase.call(this);
    this.$intValue0 = 0;
}
function nms_NBTTagInt__init_0() {
    var var_0 = new nms_NBTTagInt();
    nms_NBTTagInt__init_(var_0);
    return var_0;
}
function nms_NBTTagInt__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagInt_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeInt($var1, $this.$intValue0);
}
function nms_NBTTagInt_readTagContents($this, $var1) {
    $this.$intValue0 = ji_DataInputStream_readInt($var1);
}
function nms_NBTTagInt_getType($this) {
    return 3;
}
function nms_NBTTagLong() {
    nms_NBTBase.call(this);
    this.$longValue0 = Long_ZERO;
}
function nms_NBTTagLong__init_0() {
    var var_0 = new nms_NBTTagLong();
    nms_NBTTagLong__init_(var_0);
    return var_0;
}
function nms_NBTTagLong__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagLong_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeLong($var1, $this.$longValue0);
}
function nms_NBTTagLong_readTagContents($this, $var1) {
    $this.$longValue0 = ji_DataInputStream_readLong($var1);
}
function nms_NBTTagLong_getType($this) {
    return 4;
}
function nms_NBTTagFloat() {
    nms_NBTBase.call(this);
    this.$floatValue0 = 0.0;
}
function nms_NBTTagFloat__init_1() {
    var var_0 = new nms_NBTTagFloat();
    nms_NBTTagFloat__init_(var_0);
    return var_0;
}
function nms_NBTTagFloat__init_0(var_0) {
    var var_1 = new nms_NBTTagFloat();
    nms_NBTTagFloat__init_2(var_1, var_0);
    return var_1;
}
function nms_NBTTagFloat__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagFloat__init_2($this, $var1) {
    nms_NBTBase__init_0($this);
    $this.$floatValue0 = $var1;
}
function nms_NBTTagFloat_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeFloat($var1, $this.$floatValue0);
}
function nms_NBTTagFloat_readTagContents($this, $var1) {
    $this.$floatValue0 = ji_DataInputStream_readFloat($var1);
}
function nms_NBTTagFloat_getType($this) {
    return 5;
}
function nms_NBTTagDouble() {
    nms_NBTBase.call(this);
    this.$doubleValue0 = 0.0;
}
function nms_NBTTagDouble__init_1() {
    var var_0 = new nms_NBTTagDouble();
    nms_NBTTagDouble__init_(var_0);
    return var_0;
}
function nms_NBTTagDouble__init_0(var_0) {
    var var_1 = new nms_NBTTagDouble();
    nms_NBTTagDouble__init_2(var_1, var_0);
    return var_1;
}
function nms_NBTTagDouble__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagDouble__init_2($this, $var1) {
    nms_NBTBase__init_0($this);
    $this.$doubleValue0 = $var1;
}
function nms_NBTTagDouble_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeDouble($var1, $this.$doubleValue0);
}
function nms_NBTTagDouble_readTagContents($this, $var1) {
    $this.$doubleValue0 = ji_DataInputStream_readDouble($var1);
}
function nms_NBTTagDouble_getType($this) {
    return 6;
}
function nms_NBTTagByteArray() {
    nms_NBTBase.call(this);
    this.$byteArray0 = null;
}
function nms_NBTTagByteArray__init_0() {
    var var_0 = new nms_NBTTagByteArray();
    nms_NBTTagByteArray__init_(var_0);
    return var_0;
}
function nms_NBTTagByteArray__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagByteArray_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeInt($var1, $this.$byteArray0.data.length);
    ji_OutputStream_write($var1, $this.$byteArray0);
}
function nms_NBTTagByteArray_readTagContents($this, $var1) {
    $this.$byteArray0 = $rt_createByteArray(ji_DataInputStream_readInt($var1));
    ji_DataInputStream_readFully($var1, $this.$byteArray0);
}
function nms_NBTTagByteArray_getType($this) {
    return 7;
}
function nms_NBTTagString() {
    nms_NBTBase.call(this);
    this.$stringValue0 = null;
}
function nms_NBTTagString__init_0() {
    var var_0 = new nms_NBTTagString();
    nms_NBTTagString__init_(var_0);
    return var_0;
}
function nms_NBTTagString__init_($this) {
    nms_NBTBase__init_0($this);
}
function nms_NBTTagString_writeTagContents($this, $var1) {
    ji_DataOutputStream_writeUTF($var1, $this.$stringValue0);
}
function nms_NBTTagString_readTagContents($this, $var1) {
    $this.$stringValue0 = ji_DataInputStream_readUTF($var1);
}
function nms_NBTTagString_getType($this) {
    return 8;
}
function nms_NBTTagList() {
    var a = this; nms_NBTBase.call(a);
    a.$tagList0 = null;
    a.$tagType0 = 0;
}
function nms_NBTTagList__init_0() {
    var var_0 = new nms_NBTTagList();
    nms_NBTTagList__init_(var_0);
    return var_0;
}
function nms_NBTTagList__init_($this) {
    nms_NBTBase__init_0($this);
    $this.$tagList0 = ju_ArrayList__init_0();
}
function nms_NBTTagList_writeTagContents($this, $var1) {
    var $var2;
    if ($this.$tagList0.$size <= 0)
        $this.$tagType0 = 1;
    else
        $this.$tagType0 = ju_ArrayList_get($this.$tagList0, 0).$getType0();
    ji_DataOutputStream_writeByte($var1, $this.$tagType0);
    ji_DataOutputStream_writeInt($var1, $this.$tagList0.$size);
    $var2 = 0;
    while ($var2 < $this.$tagList0.$size) {
        ju_ArrayList_get($this.$tagList0, $var2).$writeTagContents($var1);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_NBTTagList_readTagContents($this, $var1) {
    var $var2, $var3, $var4;
    $this.$tagType0 = ji_DataInputStream_readByte($var1);
    $var2 = ji_DataInputStream_readInt($var1);
    $this.$tagList0 = ju_ArrayList__init_0();
    $var3 = 0;
    while ($var3 < $var2) {
        $var4 = nms_NBTBase_createTagOfType($this.$tagType0);
        $var4.$readTagContents($var1);
        ju_ArrayList_add($this.$tagList0, $var4);
        $var3 = $var3 + 1 | 0;
    }
}
function nms_NBTTagList_getType($this) {
    return 9;
}
function nms_NBTTagList_setTag($this, $var1) {
    $this.$tagType0 = $var1.$getType0();
    ju_ArrayList_add($this.$tagList0, $var1);
}
function nms_NBTTagList_tagAt($this, $var1) {
    return ju_ArrayList_get($this.$tagList0, $var1);
}
function nms_NBTTagList_tagCount($this) {
    return $this.$tagList0.$size;
}
function jl_ArrayIndexOutOfBoundsException() {
    jl_IndexOutOfBoundsException.call(this);
}
function jl_ArrayIndexOutOfBoundsException__init_0() {
    var var_0 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_(var_0);
    return var_0;
}
function jl_ArrayIndexOutOfBoundsException__init_($this) {
    jl_Throwable__init_0($this);
}
function jnci_BufferedDecoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in1 = null;
    a.$out4 = null;
    a.$inPosition0 = 0;
    a.$outPosition0 = 0;
}
function jnci_BufferedDecoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in1);
}
function jnci_BufferedDecoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out4) < $sz ? 0 : 1;
}
function jnci_BufferedDecoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition0 = $inPosition;
}
function jnci_BufferedDecoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition0 = $outPosition;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$026 = null;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 2 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$027 = null;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 1 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$028 = null;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1_contains($this, $ch) {
    return jl_Character_isWhitespace($ch);
}
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$029 = null;
}
function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
    return 0;
}
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$030 = null;
}
function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
    return !jl_Character_getType($ch) ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$031 = null;
}
function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 9 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$032 = null;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains($this, $ch) {
    return jl_Character_isIdentifierIgnorable($ch);
}
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$033 = null;
}
function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
    a: {
        b: {
            if (!($ch >= 0 && $ch <= 31)) {
                if ($ch < 127)
                    break b;
                if ($ch > 159)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$034 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                case 26:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$035 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                case 23:
                case 26:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$036 = null;
}
function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
    a: {
        switch (jl_Character_getType($ch)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$037 = null;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
    return jl_Character_isLetterOrDigit($ch);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$038 = null;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
    return jl_Character_isSpaceChar($ch);
}
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$039 = null;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 3 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$040 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$041 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category1 = 0;
}
function jur_UnicodeCategory__init_(var_0) {
    var var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategory__init_0($this, $category) {
    jur_AbstractCharClass__init_0($this);
    $this.$category1 = $category;
}
function jur_UnicodeCategory_contains($this, $ch) {
    return $this.$alt0 ^ ($this.$category1 != jl_Character_getType($ch & 65535) ? 0 : 1);
}
function jur_UnicodeCategoryScope() {
    jur_UnicodeCategory.call(this);
}
function jur_UnicodeCategoryScope_contains($this, $ch) {
    return $this.$alt0 ^ (!($this.$category1 >> jl_Character_getType($ch & 65535) & 1) ? 0 : 1);
}
function nms_PlayerControllerSP() {
    var a = this; nms_PlayerController.call(a);
    a.$field_1074_c = 0;
    a.$field_1073_d = 0;
    a.$field_1072_e = 0;
    a.$field_1071_f = 0.0;
    a.$field_1070_g = 0.0;
    a.$field_1069_h = 0.0;
    a.$field_1068_i = 0;
}
function nms_PlayerControllerSP_flipPlayer($this, $var1) {
    $var1.$rotationYaw = (-180.0);
}
function nms_PlayerControllerSP_sendBlockRemoved($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $var8, var$8, $var7, $var9, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var9 = $thread.pop();$var7 = $thread.pop();var$8 = $thread.pop();$var8 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = nms_World_getBlockId($this.$mc6.$theWorld, $var1, $var2, $var3);
        $var6 = nms_World_getBlockMetadata($this.$mc6.$theWorld, $var1, $var2, $var3);
        $var8 = $this.$mc6.$field_6321_h;
        $ptr = 1;
    case 1:
        nms_EffectRenderer_func_1186_a($var8, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        $var8 = $this.$mc6.$theWorld;
        nms_Block_$callClinit();
        var$8 = nms_Block_blocksList.data[nms_World_getBlockId($var8, $var1, $var2, $var3)];
        $var4 = nms_World_getBlockMetadata($var8, $var1, $var2, $var3);
        $var7 = nms_World_setBlockWithNotify($var8, $var1, $var2, $var3, 0);
        if (var$8 !== null && $var7)
            var$8.$onBlockDestroyedByPlayer($var8, $var1, $var2, $var3, $var4);
        $var8 = nms_EntityPlayer_getCurrentEquippedItem($this.$mc6.$thePlayer);
        $var9 = nms_EntityPlayer_canHarvestBlock($this.$mc6.$thePlayer, nms_Block_blocksList.data[$var5]);
        if ($var8 !== null) {
            nms_ItemStack_hitBlock($var8, $var5, $var1, $var2, $var3);
            if (!$var8.$stackSize)
                nms_EntityPlayer_destroyCurrentEquippedItem($this.$mc6.$thePlayer);
        }
        if ($var7 && $var9)
            nms_Block_blocksList.data[$var5].$harvestBlock($this.$mc6.$theWorld, $var1, $var2, $var3, $var6);
        return $var7;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var8, var$8, $var7, $var9, $ptr);
}
function nms_PlayerControllerSP_clickBlock($this, $var1, $var2, $var3, $var4) {
    var $var5, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var5 = nms_World_getBlockId($this.$mc6.$theWorld, $var1, $var2, $var3);
        if ($var5 > 0 && $this.$field_1071_f === 0.0) {
            nms_Block_$callClinit();
            nms_Block_blocksList.data[$var5].$onBlockClicked($this.$mc6.$theWorld, $var1, $var2, $var3, $this.$mc6.$thePlayer);
        }
        if ($var5 > 0) {
            nms_Block_$callClinit();
            if (nms_Block_func_225_a(nms_Block_blocksList.data[$var5], $this.$mc6.$thePlayer) >= 1.0) {
                $ptr = 1;
                continue main;
            }
        }
        return;
    case 1:
        nms_PlayerControllerSP_sendBlockRemoved($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $ptr);
}
function nms_PlayerControllerSP_func_6468_a($this) {
    $this.$field_1071_f = 0.0;
    $this.$field_1068_i = 0;
}
function nms_PlayerControllerSP_sendBlockRemoving($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$field_1068_i > 0)
            $this.$field_1068_i = $this.$field_1068_i - 1 | 0;
        else if ($var1 == $this.$field_1074_c && $var2 == $this.$field_1073_d && $var3 == $this.$field_1072_e) {
            $var5 = nms_World_getBlockId($this.$mc6.$theWorld, $var1, $var2, $var3);
            if (!$var5)
                return;
            nms_Block_$callClinit();
            $var6 = nms_Block_blocksList.data[$var5];
            $this.$field_1071_f = $this.$field_1071_f + nms_Block_func_225_a($var6, $this.$mc6.$thePlayer);
            $this.$field_1069_h = $this.$field_1069_h + 1.0;
            if ($this.$field_1071_f >= 1.0) {
                $ptr = 1;
                continue main;
            }
        } else {
            $this.$field_1071_f = 0.0;
            $this.$field_1070_g = 0.0;
            $this.$field_1069_h = 0.0;
            $this.$field_1074_c = $var1;
            $this.$field_1073_d = $var2;
            $this.$field_1072_e = $var3;
        }
        return;
    case 1:
        nms_PlayerControllerSP_sendBlockRemoved($this, $var1, $var2, $var3, $var4);
        if ($rt_suspending()) {
            break main;
        }
        $this.$field_1071_f = 0.0;
        $this.$field_1070_g = 0.0;
        $this.$field_1069_h = 0.0;
        $this.$field_1068_i = 5;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $ptr);
}
function nms_PlayerControllerSP_func_6467_a($this, $var1) {
    var $var2;
    if ($this.$field_1071_f <= 0.0) {
        $this.$mc6.$ingameGUI.$field_6446_b = 0.0;
        $this.$mc6.$field_6323_f.$field_1450_i = 0.0;
    } else {
        $var2 = $this.$field_1070_g + ($this.$field_1071_f - $this.$field_1070_g) * $var1;
        $this.$mc6.$ingameGUI.$field_6446_b = $var2;
        $this.$mc6.$field_6323_f.$field_1450_i = $var2;
    }
}
function nms_PlayerControllerSP_getBlockReachDistance($this) {
    return 4.0;
}
function nms_PlayerControllerSP_func_717_a($this, $var1) {
    return;
}
function nms_PlayerControllerSP_func_6474_c($this) {
    $this.$field_1070_g = $this.$field_1071_f;
}
function nms_GuiYesNo() {
    var a = this; nms_GuiScreen.call(a);
    a.$parentScreen2 = null;
    a.$message10 = null;
    a.$message2 = null;
    a.$worldNumber = 0;
}
function nms_GuiYesNo_initGui($this) {
    ju_ArrayList_add($this.$controlList, nms_GuiSmallButton__init_(0, (($this.$width / 2 | 0) - 155 | 0) + 0 | 0, ($this.$height0 / 6 | 0) + 96 | 0, $rt_s(921)));
    ju_ArrayList_add($this.$controlList, nms_GuiSmallButton__init_(1, (($this.$width / 2 | 0) - 155 | 0) + 160 | 0, ($this.$height0 / 6 | 0) + 96 | 0, $rt_s(871)));
}
function nms_GuiYesNo_actionPerformed($this, $var1) {
    nms_GuiDeleteWorld_deleteWorld($this.$parentScreen2, $var1.$id2 ? 0 : 1, $this.$worldNumber);
}
function nms_GuiYesNo_drawScreen($this, $var1, $var2, $var3) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$message10, $this.$width / 2 | 0, 70, 16777215);
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$message2, $this.$width / 2 | 0, 90, 16777215);
        $ptr = 2;
    case 2:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $ptr);
}
function ju_HashMap$1() {
    ju_AbstractSet.call(this);
    this.$this$00 = null;
}
function ju_HashMap$1_iterator($this) {
    var var$1;
    var$1 = new ju_HashMap$KeyIterator;
    ju_HashMap$AbstractMapIterator__init_(var$1, $this.$this$00);
    return var$1;
}
function juz_DataFormatException() {
    jl_Exception.call(this);
}
function juz_DataFormatException__init_0() {
    var var_0 = new juz_DataFormatException();
    juz_DataFormatException__init_(var_0);
    return var_0;
}
function juz_DataFormatException__init_($this) {
    jl_Throwable__init_0($this);
}
function jur_MatchResultImpl() {
    var a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string3 = null;
    a.$groupCount = 0;
    a.$valid = 0;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode3 = 0;
}
function jur_MatchResultImpl_setConsumed($this, $counter, $value) {
    $this.$consumers.data[$counter] = $value;
}
function jur_MatchResultImpl_getConsumed($this, $counter) {
    return $this.$consumers.data[$counter];
}
function jur_MatchResultImpl_end($this) {
    return jur_MatchResultImpl_end0($this, 0);
}
function jur_MatchResultImpl_end0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_setStart($this, $group, $offset) {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
}
function jur_MatchResultImpl_setEnd($this, $group, $offset) {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
}
function jur_MatchResultImpl_getStart($this, $group) {
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_getEnd($this, $group) {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_getGroupNoCheck($this, $group) {
    var $st, $end;
    $st = jur_MatchResultImpl_getStart($this, $group);
    $end = jur_MatchResultImpl_getEnd($this, $group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= jl_String_length($this.$string3))
        return jl_String_substring0($this.$string3, $st, $end);
    return null;
}
function jur_MatchResultImpl_start($this) {
    return jur_MatchResultImpl_start0($this, 0);
}
function jur_MatchResultImpl_start0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_finalizeMatch($this) {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = jur_MatchResultImpl_end($this);
}
function jur_MatchResultImpl_getEnterCounter($this, $setCounter) {
    return $this.$compQuantCounters.data[$setCounter];
}
function jur_MatchResultImpl_setEnterCounter($this, $setCounter, $value) {
    $this.$compQuantCounters.data[$setCounter] = $value;
}
function jur_MatchResultImpl_checkGroup($this, $group) {
    var var$2;
    if (!$this.$valid) {
        var$2 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$2);
        $rt_throw(var$2);
    }
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2, jl_String_valueOf0($group));
    $rt_throw(var$2);
}
function jur_MatchResultImpl_setValid($this) {
    $this.$valid = 1;
}
function jur_MatchResultImpl_isValid($this) {
    return $this.$valid;
}
function jur_MatchResultImpl_reset($this, $newSequence, $leftBound, $rightBound) {
    $this.$valid = 0;
    $this.$mode3 = 2;
    ju_Arrays_fill0($this.$groupBounds, (-1));
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string3 = $newSequence;
    if ($leftBound >= 0) {
        $this.$leftBound0 = $leftBound;
        $this.$rightBound0 = $rightBound;
    }
    $this.$startIndex = $this.$leftBound0;
}
function jur_MatchResultImpl_reset0($this) {
    jur_MatchResultImpl_reset($this, null, (-1), (-1));
}
function jur_MatchResultImpl_setStartIndex($this, $startIndex) {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
}
function jur_MatchResultImpl_getLeftBound($this) {
    return $this.$leftBound0;
}
function jur_MatchResultImpl_getRightBound($this) {
    return $this.$rightBound0;
}
function jur_MatchResultImpl_setMode($this, $mode) {
    $this.$mode3 = $mode;
}
function jur_MatchResultImpl_mode($this) {
    return $this.$mode3;
}
function jur_MatchResultImpl_hasAnchoringBounds($this) {
    return $this.$anchoringBounds;
}
function jur_MatchResultImpl_hasTransparentBounds($this) {
    return $this.$transparentBounds;
}
function jur_MatchResultImpl_getPreviousMatchEnd($this) {
    return $this.$previousMatch;
}
function ju_HashMap$KeyIterator() {
    ju_HashMap$AbstractMapIterator.call(this);
}
function ju_HashMap$KeyIterator_next($this) {
    ju_HashMap$AbstractMapIterator_makeNext($this);
    return $this.$currentEntry.$key0;
}
function nms_EnumArt() {
    var a = this; jl_Enum.call(a);
    a.$field_1624_y = null;
    a.$field_1623_z = 0;
    a.$field_1636_A = 0;
    a.$field_1634_B = 0;
    a.$field_1632_C = 0;
}
var nms_EnumArt_Kebab = null;
var nms_EnumArt_Aztec = null;
var nms_EnumArt_Alban = null;
var nms_EnumArt_Aztec2 = null;
var nms_EnumArt_Bomb = null;
var nms_EnumArt_Plant = null;
var nms_EnumArt_Wasteland = null;
var nms_EnumArt_Pool = null;
var nms_EnumArt_Courbet = null;
var nms_EnumArt_Sea = null;
var nms_EnumArt_Sunset = null;
var nms_EnumArt_Creebet = null;
var nms_EnumArt_Wanderer = null;
var nms_EnumArt_Graham = null;
var nms_EnumArt_Match = null;
var nms_EnumArt_Bust = null;
var nms_EnumArt_Stage = null;
var nms_EnumArt_Void = null;
var nms_EnumArt_SkullAndRoses = null;
var nms_EnumArt_Fighters = null;
var nms_EnumArt_Pointer = null;
var nms_EnumArt_Pigscene = null;
var nms_EnumArt_Skeleton = null;
var nms_EnumArt_DonkeyKong = null;
var nms_EnumArt_$VALUES = null;
function nms_EnumArt__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new nms_EnumArt();
    nms_EnumArt__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function nms_EnumArt_values() {
    return nms_EnumArt_$VALUES.$clone();
}
function nms_EnumArt__init_0($this, var$1, var$2, $var3, $var4, $var5, $var6, $var7) {
    jl_Enum__init_0($this, var$1, var$2);
    $this.$field_1624_y = $var3;
    $this.$field_1623_z = $var4;
    $this.$field_1636_A = $var5;
    $this.$field_1634_B = $var6;
    $this.$field_1632_C = $var7;
}
function nms_EnumArt__clinit_() {
    var var$1, var$2;
    nms_EnumArt_Kebab = nms_EnumArt__init_($rt_s(922), 0, $rt_s(922), 16, 16, 0, 0);
    nms_EnumArt_Aztec = nms_EnumArt__init_($rt_s(923), 1, $rt_s(923), 16, 16, 16, 0);
    nms_EnumArt_Alban = nms_EnumArt__init_($rt_s(924), 2, $rt_s(924), 16, 16, 32, 0);
    nms_EnumArt_Aztec2 = nms_EnumArt__init_($rt_s(925), 3, $rt_s(925), 16, 16, 48, 0);
    nms_EnumArt_Bomb = nms_EnumArt__init_($rt_s(926), 4, $rt_s(926), 16, 16, 64, 0);
    nms_EnumArt_Plant = nms_EnumArt__init_($rt_s(927), 5, $rt_s(927), 16, 16, 80, 0);
    nms_EnumArt_Wasteland = nms_EnumArt__init_($rt_s(928), 6, $rt_s(928), 16, 16, 96, 0);
    nms_EnumArt_Pool = nms_EnumArt__init_($rt_s(929), 7, $rt_s(929), 32, 16, 0, 32);
    nms_EnumArt_Courbet = nms_EnumArt__init_($rt_s(930), 8, $rt_s(930), 32, 16, 32, 32);
    nms_EnumArt_Sea = nms_EnumArt__init_($rt_s(931), 9, $rt_s(931), 32, 16, 64, 32);
    nms_EnumArt_Sunset = nms_EnumArt__init_($rt_s(932), 10, $rt_s(932), 32, 16, 96, 32);
    nms_EnumArt_Creebet = nms_EnumArt__init_($rt_s(933), 11, $rt_s(933), 32, 16, 128, 32);
    nms_EnumArt_Wanderer = nms_EnumArt__init_($rt_s(934), 12, $rt_s(934), 16, 32, 0, 64);
    nms_EnumArt_Graham = nms_EnumArt__init_($rt_s(935), 13, $rt_s(935), 16, 32, 16, 64);
    nms_EnumArt_Match = nms_EnumArt__init_($rt_s(936), 14, $rt_s(936), 32, 32, 0, 128);
    nms_EnumArt_Bust = nms_EnumArt__init_($rt_s(937), 15, $rt_s(937), 32, 32, 32, 128);
    nms_EnumArt_Stage = nms_EnumArt__init_($rt_s(938), 16, $rt_s(938), 32, 32, 64, 128);
    nms_EnumArt_Void = nms_EnumArt__init_($rt_s(939), 17, $rt_s(939), 32, 32, 96, 128);
    nms_EnumArt_SkullAndRoses = nms_EnumArt__init_($rt_s(940), 18, $rt_s(940), 32, 32, 128, 128);
    nms_EnumArt_Fighters = nms_EnumArt__init_($rt_s(941), 19, $rt_s(941), 64, 32, 0, 96);
    nms_EnumArt_Pointer = nms_EnumArt__init_($rt_s(942), 20, $rt_s(942), 64, 64, 0, 192);
    nms_EnumArt_Pigscene = nms_EnumArt__init_($rt_s(943), 21, $rt_s(943), 64, 64, 64, 192);
    nms_EnumArt_Skeleton = nms_EnumArt__init_($rt_s(944), 22, $rt_s(944), 64, 48, 192, 64);
    nms_EnumArt_DonkeyKong = nms_EnumArt__init_($rt_s(945), 23, $rt_s(945), 64, 48, 192, 112);
    var$1 = $rt_createArray(nms_EnumArt, 24);
    var$2 = var$1.data;
    var$2[0] = nms_EnumArt_Kebab;
    var$2[1] = nms_EnumArt_Aztec;
    var$2[2] = nms_EnumArt_Alban;
    var$2[3] = nms_EnumArt_Aztec2;
    var$2[4] = nms_EnumArt_Bomb;
    var$2[5] = nms_EnumArt_Plant;
    var$2[6] = nms_EnumArt_Wasteland;
    var$2[7] = nms_EnumArt_Pool;
    var$2[8] = nms_EnumArt_Courbet;
    var$2[9] = nms_EnumArt_Sea;
    var$2[10] = nms_EnumArt_Sunset;
    var$2[11] = nms_EnumArt_Creebet;
    var$2[12] = nms_EnumArt_Wanderer;
    var$2[13] = nms_EnumArt_Graham;
    var$2[14] = nms_EnumArt_Match;
    var$2[15] = nms_EnumArt_Bust;
    var$2[16] = nms_EnumArt_Stage;
    var$2[17] = nms_EnumArt_Void;
    var$2[18] = nms_EnumArt_SkullAndRoses;
    var$2[19] = nms_EnumArt_Fighters;
    var$2[20] = nms_EnumArt_Pointer;
    var$2[21] = nms_EnumArt_Pigscene;
    var$2[22] = nms_EnumArt_Skeleton;
    var$2[23] = nms_EnumArt_DonkeyKong;
    nms_EnumArt_$VALUES = var$1;
}
function ju_SortedSet() {
}
function ju_NavigableSet() {
}
function ju_TreeSet() {
    ju_AbstractSet.call(this);
    this.$map = null;
}
var ju_TreeSet_VALUE = null;
function ju_TreeSet__init_0() {
    var var_0 = new ju_TreeSet();
    ju_TreeSet__init_(var_0);
    return var_0;
}
function ju_TreeSet__init_($this) {
    $this.$map = ju_TreeMap__init_0();
}
function ju_TreeSet_size($this) {
    return ju_TreeMap_size($this.$map);
}
function ju_TreeSet_add($this, $e) {
    return ju_TreeMap_put($this.$map, $e, $e) === ju_TreeSet_VALUE ? 0 : 1;
}
function ju_TreeSet_remove($this, $o) {
    return ju_TreeMap_remove($this.$map, $o) !== ju_TreeSet_VALUE ? 0 : 1;
}
function ju_TreeSet_first($this) {
    return ju_TreeMap_firstKey($this.$map);
}
function ju_TreeSet__clinit_() {
    ju_TreeSet_VALUE = new jl_Object;
}
function nms_WorldProviderHell() {
    nms_WorldProvider.call(this);
}
function nms_WorldProviderHell__init_0() {
    var var_0 = new nms_WorldProviderHell();
    nms_WorldProviderHell__init_(var_0);
    return var_0;
}
function nms_WorldProviderHell__init_($this) {
    nms_WorldProvider__init_($this);
}
function nms_WorldProviderHell_registerWorldChunkManager($this) {
    var var$1;
    var$1 = new nms_WorldChunkManagerHell;
    var$1.$field_4201_e = nms_MobSpawnerBase_hell;
    var$1.$field_4200_f = 1.0;
    var$1.$field_4199_g = 0.0;
    $this.$worldChunkMgr = var$1;
    $this.$field_4220_c = 1;
    $this.$field_6479_d = 1;
    $this.$field_6478_e = 1;
    $this.$field_4218_e = (-1);
}
function nms_WorldProviderHell_func_4096_a($this, $var1, $var2) {
    return nms_Vec3D_createVector(0.20000000298023224, 0.029999999329447746, 0.029999999329447746);
}
function nms_WorldProviderHell_generateLightBrightnessTable($this) {
    var $var2, $var3;
    $var2 = 0;
    while ($var2 <= 15) {
        $var3 = 1.0 - $var2 / 15.0;
        $this.$lightBrightnessTable.data[$var2] = (1.0 - $var3) / ($var3 * 3.0 + 1.0) * 0.8999999761581421 + 0.10000000149011612;
        $var2 = $var2 + 1 | 0;
    }
}
function nms_WorldProviderHell_getChunkProvider($this) {
    var var$1, var$2, var$3;
    var$1 = new nms_ChunkProviderHell;
    var$2 = $this.$worldObj6;
    var$1.$field_4162_p = $rt_createDoubleArray(256);
    var$1.$field_4161_q = $rt_createDoubleArray(256);
    var$1.$field_4160_r = $rt_createDoubleArray(256);
    var$3 = new nms_MapGenCavesHell;
    nms_MapGenBase__init_(var$3);
    var$1.$field_4159_s = var$3;
    var$1.$field_4164_n = var$2;
    var$1.$field_4170_h = new ju_Random;
    var$1.$field_4169_i = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 16);
    var$1.$field_4168_j = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 16);
    var$1.$field_4167_k = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 8);
    var$1.$field_4166_l = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 4);
    var$1.$field_4165_m = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 4);
    var$1.$field_4177_a = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 10);
    var$1.$field_4176_b = nms_NoiseGeneratorOctaves__init_(var$1.$field_4170_h, 16);
    return var$1;
}
function nms_WorldProviderHell_getChunkLoader($this, $var1) {
    var $var2;
    $var2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var2);
    return nms_ChunkLoader__init_(jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($var2, $var1), $rt_s(946))), 1);
}
function nms_WorldProviderHell_canCoordinateBeSpawn($this, $var1, $var2) {
    var $var3;
    $var3 = nms_World_func_614_g($this.$worldObj6, $var1, $var2);
    nms_Block_$callClinit();
    return $var3 == nms_Block_bedrock.$blockID ? 0 : !$var3 ? 0 : nms_Block_opaqueCubeLookup.data[$var3];
}
function nms_WorldProviderHell_calculateCelestialAngle($this, $var1, $var3) {
    return 0.5;
}
function nms_WorldProviderHell_func_6477_d($this) {
    return 0;
}
function ju_SortedMap() {
}
function ju_NavigableMap() {
}
function ju_TreeMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$root = null;
    a.$comparator0 = null;
    a.$originalComparator0 = null;
    a.$modCount2 = 0;
}
function ju_TreeMap__init_0() {
    var var_0 = new ju_TreeMap();
    ju_TreeMap__init_(var_0);
    return var_0;
}
function ju_TreeMap__init_($this) {
    var var$1;
    var$1 = null;
    $this.$originalComparator0 = var$1;
    if (var$1 === null) {
        var$1 = new ju_TreeMap$1;
        var$1.$this$042 = $this;
    }
    $this.$comparator0 = var$1;
}
function ju_TreeMap_put($this, $key, $value) {
    var $node, $old;
    $this.$root = ju_TreeMap_getOrCreateNode($this, $this.$root, $key);
    $node = ju_TreeMap_findExact($this, $key);
    $old = ju_AbstractMap$SimpleEntry_setValue($node, $value);
    ju_AbstractMap$SimpleEntry_setValue($node, $value);
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return $old;
}
function ju_TreeMap_remove($this, $key) {
    var $node;
    $node = ju_TreeMap_findExact($this, $key);
    if ($node === null)
        return null;
    $this.$root = ju_TreeMap_deleteNode($this, $this.$root, $key);
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    return $node.$value6;
}
function ju_TreeMap_findExact($this, $key) {
    var $node, $cmp;
    $node = $this.$root;
    while (true) {
        if ($node === null)
            return null;
        $cmp = ju_TreeMap$1_compare($this.$comparator0, $key, $node.$key3);
        if (!$cmp)
            break;
        $node = $cmp >= 0 ? $node.$right : $node.$left0;
    }
    return $node;
}
function ju_TreeMap_getOrCreateNode($this, $root, $key) {
    var var$3, $cmp;
    if ($root === null) {
        $root = new ju_TreeMap$TreeNode;
        var$3 = null;
        $root.$key3 = $key;
        $root.$value6 = var$3;
        $root.$height3 = 1;
        $root.$size7 = 1;
        return $root;
    }
    $cmp = ju_TreeMap$1_compare($this.$comparator0, $key, $root.$key3);
    if (!$cmp)
        return $root;
    if ($cmp >= 0)
        $root.$right = ju_TreeMap_getOrCreateNode($this, $root.$right, $key);
    else
        $root.$left0 = ju_TreeMap_getOrCreateNode($this, $root.$left0, $key);
    ju_TreeMap$TreeNode_fix($root);
    return ju_TreeMap$TreeNode_balance($root);
}
function ju_TreeMap_deleteNode($this, $right, $key) {
    var $cmp, $left, $pathToMin, $minDepth, var$7, $minDepth_0, $node;
    if ($right === null)
        return null;
    $cmp = ju_TreeMap$1_compare($this.$comparator0, $key, $right.$key3);
    if ($cmp < 0)
        $right.$left0 = ju_TreeMap_deleteNode($this, $right.$left0, $key);
    else if ($cmp > 0)
        $right.$right = ju_TreeMap_deleteNode($this, $right.$right, $key);
    else {
        if ($right.$right === null)
            return $right.$left0;
        $left = $right.$left0;
        $right = $right.$right;
        $pathToMin = $rt_createArray(ju_TreeMap$TreeNode, $right.$height3);
        $minDepth = 0;
        while ($right.$left0 !== null) {
            var$7 = $pathToMin.data;
            $minDepth_0 = $minDepth + 1 | 0;
            var$7[$minDepth] = $right;
            $right = $right.$left0;
            $minDepth = $minDepth_0;
        }
        $key = $right.$right;
        while ($minDepth > 0) {
            var$7 = $pathToMin.data;
            $minDepth = $minDepth + (-1) | 0;
            $node = var$7[$minDepth];
            $node.$left0 = $key;
            ju_TreeMap$TreeNode_fix($node);
            $key = ju_TreeMap$TreeNode_balance($node);
        }
        $right.$right = $key;
        $right.$left0 = $left;
        ju_TreeMap$TreeNode_fix($right);
    }
    ju_TreeMap$TreeNode_fix($right);
    return ju_TreeMap$TreeNode_balance($right);
}
function ju_TreeMap_firstKey($this) {
    var $node, $node_0, var$3;
    $node = $this.$root;
    $node_0 = null;
    while ($node !== null) {
        var$3 = ju_TreeMap$TreeNode_forward($node, 0);
        $node_0 = $node;
        $node = var$3;
    }
    if ($node_0 !== null)
        return $node_0.$key3;
    $node = new ju_NoSuchElementException;
    jl_Throwable__init_0($node);
    $rt_throw($node);
}
function ju_TreeMap_size($this) {
    return $this.$root === null ? 0 : $this.$root.$size7;
}
function ju_TreeMap$1() {
    jl_Object.call(this);
    this.$this$042 = null;
}
function ju_TreeMap$1_compare($this, $o1, $o2) {
    return $o1 === null ? nms_NextTickListEntry_compareTo($o2, $o1) : nms_NextTickListEntry_compareTo($o1, $o2);
}
function nms_InventoryLargeChest() {
    var a = this; jl_Object.call(a);
    a.$name6 = null;
    a.$upperChest = null;
    a.$lowerChest = null;
}
function nms_InventoryLargeChest__init_(var_0, var_1, var_2) {
    var var_3 = new nms_InventoryLargeChest();
    nms_InventoryLargeChest__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_InventoryLargeChest__init_0($this, $var1, $var2, $var3) {
    $this.$name6 = $var1;
    $this.$upperChest = $var2;
    $this.$lowerChest = $var3;
}
function nms_InventoryLargeChest_getSizeInventory($this) {
    return $this.$upperChest.$getSizeInventory() + $this.$lowerChest.$getSizeInventory() | 0;
}
function nms_InventoryLargeChest_getInvName($this) {
    return $this.$name6;
}
function nms_InventoryLargeChest_getStackInSlot($this, $var1) {
    return $var1 < $this.$upperChest.$getSizeInventory() ? $this.$upperChest.$getStackInSlot($var1) : $this.$lowerChest.$getStackInSlot($var1 - $this.$upperChest.$getSizeInventory() | 0);
}
function nms_InventoryLargeChest_decrStackSize($this, $var1, $var2) {
    return $var1 < $this.$upperChest.$getSizeInventory() ? $this.$upperChest.$decrStackSize($var1, $var2) : $this.$lowerChest.$decrStackSize($var1 - $this.$upperChest.$getSizeInventory() | 0, $var2);
}
function nms_InventoryLargeChest_setInventorySlotContents($this, $var1, $var2) {
    if ($var1 < $this.$upperChest.$getSizeInventory())
        $this.$upperChest.$setInventorySlotContents($var1, $var2);
    else
        $this.$lowerChest.$setInventorySlotContents($var1 - $this.$upperChest.$getSizeInventory() | 0, $var2);
}
function nms_InventoryLargeChest_getInventoryStackLimit($this) {
    return $this.$upperChest.$getInventoryStackLimit();
}
function nms_InventoryLargeChest_onInventoryChanged($this) {
    $this.$upperChest.$onInventoryChanged();
    $this.$lowerChest.$onInventoryChanged();
}
function nms_NextTickListEntry() {
    var a = this; jl_Object.call(a);
    a.$xCoord1 = 0;
    a.$yCoord1 = 0;
    a.$zCoord1 = 0;
    a.$blockID1 = 0;
    a.$scheduledTime = Long_ZERO;
    a.$tickEntryID = Long_ZERO;
}
var nms_NextTickListEntry_nextTickEntryID = Long_ZERO;
function nms_NextTickListEntry_equals($this, $var1) {
    var $var2;
    if (!($var1 instanceof nms_NextTickListEntry))
        return 0;
    $var2 = $var1;
    return $this.$xCoord1 == $var2.$xCoord1 && $this.$yCoord1 == $var2.$yCoord1 && $this.$zCoord1 == $var2.$zCoord1 && $this.$blockID1 == $var2.$blockID1 ? 1 : 0;
}
function nms_NextTickListEntry_hashCode($this) {
    return ((((($this.$xCoord1 * 128 | 0) * 1024 | 0) + ($this.$zCoord1 * 128 | 0) | 0) + $this.$yCoord1 | 0) * 256 | 0) + $this.$blockID1 | 0;
}
function nms_NextTickListEntry_setScheduledTime($this, $var1) {
    $this.$scheduledTime = $var1;
    return $this;
}
function nms_NextTickListEntry_a($this, $var1) {
    return Long_lt($this.$scheduledTime, $var1.$scheduledTime) ? (-1) : Long_gt($this.$scheduledTime, $var1.$scheduledTime) ? 1 : Long_lt($this.$tickEntryID, $var1.$tickEntryID) ? (-1) : Long_le($this.$tickEntryID, $var1.$tickEntryID) ? 0 : 1;
}
function nms_NextTickListEntry_compareTo($this, $var1) {
    return nms_NextTickListEntry_a($this, $var1);
}
function nms_NextTickListEntry__clinit_() {
    nms_NextTickListEntry_nextTickEntryID = Long_ZERO;
}
function nms_SpawnerAnimals() {
    jl_Object.call(this);
}
var nms_SpawnerAnimals_eligibleChunksForSpawning = null;
function nms_SpawnerAnimals__init_0() {
    var var_0 = new nms_SpawnerAnimals();
    nms_SpawnerAnimals__init_(var_0);
    return var_0;
}
function nms_SpawnerAnimals__init_($this) {
    return;
}
function nms_SpawnerAnimals_performSpawning($var0) {
    var $var1, $var2, $var3, $var4, $var6, $var7, $var28, $var29, $var30, $var31, $var33, var$13, $var8, $var14, $var19, $var9, $var10, $var11, $var12, $var13, $var5, $var20, $var21, $var22, var$26, var$27, var$28, $var23, $var24, $var25, $var34, $var27, $var35, $$je;
    ju_HashSet_clear(nms_SpawnerAnimals_eligibleChunksForSpawning);
    $var1 = 0;
    while ($var1 < $var0.$playerEntities.$size) {
        $var2 = ju_ArrayList_get($var0.$playerEntities, $var1);
        $var3 = nms_MathHelper_floor_double($var2.$posX / 16.0);
        $var4 = nms_MathHelper_floor_double($var2.$posZ / 16.0);
        $var6 = (-8);
        while ($var6 <= 8) {
            $var7 = (-8);
            while ($var7 <= 8) {
                ju_HashSet_add(nms_SpawnerAnimals_eligibleChunksForSpawning, nms_ChunkCoordIntPair__init_($var6 + $var3 | 0, $var7 + $var4 | 0));
                $var7 = $var7 + 1 | 0;
            }
            $var6 = $var6 + 1 | 0;
        }
        $var1 = $var1 + 1 | 0;
    }
    $var3 = 0;
    $var28 = 0;
    while ($var28 < nms_EnumCreatureType_values().data.length) {
        $var29 = nms_EnumCreatureType_values().data[$var28];
        if (nms_World_countEntities($var0, $var29.$field_4278_c) <= ($rt_imul($var29.$maxNumberOfEntityType, ju_HashSet_size(nms_SpawnerAnimals_eligibleChunksForSpawning)) / 256 | 0)) {
            $var30 = ju_HashSet_iterator(nms_SpawnerAnimals_eligibleChunksForSpawning);
            a: while (ju_HashMap$AbstractMapIterator_hasNext($var30)) {
                $var31 = ju_HashMap$KeyIterator_next($var30);
                if (ju_Random_nextInt($var0.$rand1, 50))
                    continue;
                $var33 = nms_MobSpawnerBase_getEntitiesForType(nms_World_func_4075_a($var0).$func_4074_a($var31), $var29);
                if ($var33 === null)
                    continue;
                var$13 = $var33.data;
                $var1 = var$13.length;
                if (!$var1)
                    continue;
                $var8 = ju_Random_nextInt($var0.$rand1, $var1);
                $var14 = $var31.$chunkXPos * 16 | 0;
                $var19 = $var31.$chunkZPos * 16 | 0;
                $var9 = nms_ChunkPosition__init_($var14 + ju_Random_nextInt($var0.$rand1, 16) | 0, ju_Random_nextInt($var0.$rand1, 128), $var19 + ju_Random_nextInt($var0.$rand1, 16) | 0);
                $var10 = $var9.$x3;
                $var11 = $var9.$y2;
                $var12 = $var9.$z5;
                if (nms_World_isBlockOpaqueCube($var0, $var10, $var11, $var12))
                    continue;
                if (nms_World_getBlockMaterial($var0, $var10, $var11, $var12) !== nms_Material_air)
                    continue;
                $var13 = 0;
                $var14 = 0;
                while ($var14 < 3) {
                    $var19 = 0;
                    $var4 = $var10;
                    $var5 = $var11;
                    $var7 = $var12;
                    while ($var19 < 4) {
                        $var4 = $var4 + (ju_Random_nextInt($var0.$rand1, 6) - ju_Random_nextInt($var0.$rand1, 6) | 0) | 0;
                        $var5 = $var5 + (ju_Random_nextInt($var0.$rand1, 1) - ju_Random_nextInt($var0.$rand1, 1) | 0) | 0;
                        $var7 = $var7 + (ju_Random_nextInt($var0.$rand1, 6) - ju_Random_nextInt($var0.$rand1, 6) | 0) | 0;
                        if (nms_World_isBlockOpaqueCube($var0, $var4, $var5 - 1 | 0, $var7) && !nms_World_isBlockOpaqueCube($var0, $var4, $var5, $var7) && !nms_World_getBlockMaterial($var0, $var4, $var5, $var7).$getIsLiquid() && !nms_World_isBlockOpaqueCube($var0, $var4, $var5 + 1 | 0, $var7)) {
                            $var20 = $var4 + 0.5;
                            $var21 = $var5;
                            $var22 = $var7 + 0.5;
                            var$26 = $var20;
                            var$27 = $var21;
                            var$28 = $var22;
                            if (nms_World_getClosestPlayer($var0, var$26, var$27, var$28, 24.0) === null) {
                                $var23 = $var20 - $var0.$spawnX;
                                $var24 = $var21 - $var0.$spawnY;
                                $var25 = $var22 - $var0.$spawnZ;
                                if ($var23 * $var23 + $var24 * $var24 + $var25 * $var25 >= 576.0) {
                                    try {
                                        $var31 = var$13[$var8];
                                        $var33 = $rt_createArray(jl_Class, 1);
                                        $var33.data[0] = $rt_cls(nms_World);
                                        $var34 = jl_Class_getConstructor($var31, $var33);
                                        $var33 = $rt_createArray(jl_Object, 1);
                                        $var33.data[0] = $var0;
                                        $var34 = jlr_Constructor_newInstance($var34, $var33);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            $var27 = $$je;
                                            jl_Throwable_printStackTrace0($var27);
                                            return $var3;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    nms_Entity_setLocationAndAngles($var34, var$26, var$27, var$28, ju_Random_nextFloat($var0.$rand1) * 360.0, 0.0);
                                    if ($var34.$getCanSpawnHere()) {
                                        $var13 = $var13 + 1 | 0;
                                        nms_World_entityJoinedWorld($var0, $var34);
                                        if ($var34 instanceof nms_EntitySpider && !ju_Random_nextInt($var0.$rand1, 100)) {
                                            $var35 = new nms_EntitySkeleton;
                                            nms_EntitySkeleton_$callClinit();
                                            nms_EntityLiving__init_($var35, $var0);
                                            $var35.$hasAttacked = 0;
                                            $var35.$field_762_e = 2;
                                            $var35.$health = 20;
                                            $var35.$texture = $rt_s(947);
                                            nms_Entity_setLocationAndAngles($var35, var$26, var$27, var$28, $var34.$rotationYaw, 0.0);
                                            nms_World_entityJoinedWorld($var0, $var35);
                                            nms_Entity_mountEntity($var35, $var34);
                                        }
                                        if ($var13 >= $var34.$func_6391_i())
                                            continue a;
                                    }
                                    $var3 = $var3 + $var13 | 0;
                                }
                            }
                        }
                        $var19 = $var19 + 1 | 0;
                    }
                    $var14 = $var14 + 1 | 0;
                }
            }
        }
        $var28 = $var28 + 1 | 0;
    }
    return $var3;
}
function nms_SpawnerAnimals__clinit_() {
    nms_SpawnerAnimals_eligibleChunksForSpawning = ju_HashSet__init_0();
}
function nms_IChunkProvider() {
}
function nms_ChunkProviderLoadOrGenerate() {
    var a = this; jl_Object.call(a);
    a.$blankChunk = null;
    a.$chunkProvider0 = null;
    a.$chunkLoader = null;
    a.$chunks = null;
    a.$worldObj3 = null;
    a.$lastQueriedChunkXPos = 0;
    a.$lastQueriedChunkZPos = 0;
    a.$lastQueriedChunk = null;
}
function nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var2) {
    var $var5;
    if ($var1 == $this.$lastQueriedChunkXPos && $var2 == $this.$lastQueriedChunkZPos && $this.$lastQueriedChunk !== null)
        return 1;
    a: {
        b: {
            $var5 = ($var1 & 31) + (($var2 & 31) * 32 | 0) | 0;
            if ($this.$chunks.data[$var5] !== null) {
                if ($this.$chunks.data[$var5] === $this.$blankChunk)
                    break b;
                if (nms_Chunk_isAtLocation($this.$chunks.data[$var5], $var1, $var2))
                    break b;
            }
            $var1 = 0;
            break a;
        }
        $var1 = 1;
    }
    return $var1;
}
function nms_ChunkProviderLoadOrGenerate_provideChunk($this, $var1, $var2) {
    var $var5, $var6, var$5, var$6, $var3, $var4, $$je;
    if ($var1 == $this.$lastQueriedChunkXPos && $var2 == $this.$lastQueriedChunkZPos && $this.$lastQueriedChunk !== null)
        return $this.$lastQueriedChunk;
    $var5 = ($var1 & 31) + (($var2 & 31) * 32 | 0) | 0;
    if (!nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var2)) {
        if ($this.$chunks.data[$var5] !== null) {
            nms_Chunk_onChunkUnload($this.$chunks.data[$var5]);
            nms_ChunkProviderLoadOrGenerate_saveChunk($this, $this.$chunks.data[$var5]);
            nms_ChunkProviderLoadOrGenerate_saveExtraChunkData($this, $this.$chunks.data[$var5]);
        }
        a: {
            if ($this.$chunkLoader === null)
                $var6 = null;
            else {
                try {
                    $var6 = nms_ChunkLoader_loadChunk($this.$chunkLoader, $this.$worldObj3, $var1, $var2);
                    if ($var6 !== null)
                        $var6.$lastSaveTime = $this.$worldObj3.$worldTime;
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$5 = $$je;
                    } else {
                        throw $$e;
                    }
                }
                jl_Throwable_printStackTrace0(var$5);
                $var6 = null;
            }
        }
        if ($var6 === null)
            $var6 = $this.$chunkProvider0 === null ? $this.$blankChunk : $this.$chunkProvider0.$provideChunk($var1, $var2);
        $this.$chunks.data[$var5] = $var6;
        nms_Chunk_func_4143_d($var6);
        if ($this.$chunks.data[$var5] !== null)
            nms_Chunk_onChunkLoad($this.$chunks.data[$var5]);
        if (!$this.$chunks.data[$var5].$isTerrainPopulated) {
            var$6 = $var1 + 1 | 0;
            $var3 = $var2 + 1 | 0;
            if (nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var2))
                nms_ChunkProviderLoadOrGenerate_populate($this, $this, $var1, $var2);
        }
        var$6 = $var1 - 1 | 0;
        if (nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var2) && !nms_ChunkProviderLoadOrGenerate_provideChunk($this, var$6, $var2).$isTerrainPopulated) {
            $var3 = $var2 + 1 | 0;
            if (nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var2))
                nms_ChunkProviderLoadOrGenerate_populate($this, $this, var$6, $var2);
        }
        $var3 = $var2 - 1 | 0;
        if (nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var3) && !nms_ChunkProviderLoadOrGenerate_provideChunk($this, $var1, $var3).$isTerrainPopulated) {
            $var4 = $var1 + 1 | 0;
            if (nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var4, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var4, $var2))
                nms_ChunkProviderLoadOrGenerate_populate($this, $this, $var1, $var3);
        }
        if (nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var3) && !nms_ChunkProviderLoadOrGenerate_provideChunk($this, var$6, $var3).$isTerrainPopulated && nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, $var1, $var3) && nms_ChunkProviderLoadOrGenerate_chunkExists($this, var$6, $var2))
            nms_ChunkProviderLoadOrGenerate_populate($this, $this, var$6, $var3);
    }
    $this.$lastQueriedChunkXPos = $var1;
    $this.$lastQueriedChunkZPos = $var2;
    $this.$lastQueriedChunk = $this.$chunks.data[$var5];
    return $this.$chunks.data[$var5];
}
function nms_ChunkProviderLoadOrGenerate_saveExtraChunkData($this, $var1) {
    var $var3, $$je;
    a: {
        if ($this.$chunkLoader !== null) {
            try {
                nms_ChunkLoader_saveExtraChunkData($this.$chunkLoader, $this.$worldObj3, $var1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $var3 = $$je;
                } else {
                    throw $$e;
                }
            }
            $var3.$printStackTrace1();
        }
    }
}
function nms_ChunkProviderLoadOrGenerate_saveChunk($this, $var1) {
    var $var3, $$je;
    a: {
        if ($this.$chunkLoader !== null) {
            try {
                $var1.$lastSaveTime = $this.$worldObj3.$worldTime;
                nms_ChunkLoader_saveChunk($this.$chunkLoader, $this.$worldObj3, $var1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $var3 = $$je;
                } else {
                    throw $$e;
                }
            }
            jl_Throwable_printStackTrace0($var3);
        }
    }
}
function nms_ChunkProviderLoadOrGenerate_populate($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = nms_ChunkProviderLoadOrGenerate_provideChunk($this, $var2, $var3);
    if (!$var4.$isTerrainPopulated) {
        $var4.$isTerrainPopulated = 1;
        if ($this.$chunkProvider0 !== null) {
            $this.$chunkProvider0.$populate($var1, $var2, $var3);
            nms_Chunk_setChunkModified($var4);
        }
    }
}
function nms_ChunkProviderLoadOrGenerate_saveChunks($this, $var1, $var2) {
    var $var3, $var4, $var5, $var5_0, $var6, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var6 = $thread.pop();$var5_0 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var3 = 0;
        $var4 = 0;
        if ($var2 !== null) {
            $var5 = 0;
            while ($var5 < $this.$chunks.data.length) {
                if ($this.$chunks.data[$var5] !== null && nms_Chunk_needsSaving($this.$chunks.data[$var5], $var1))
                    $var4 = $var4 + 1 | 0;
                $var5 = $var5 + 1 | 0;
            }
        }
        $var5_0 = 0;
        $var6 = 0;
        while (true) {
            if ($var6 >= $this.$chunks.data.length) {
                if ($var1 && $this.$chunkLoader === null)
                    return 1;
                return 1;
            }
            if ($this.$chunks.data[$var6] !== null) {
                if ($var1 && !$this.$chunks.data[$var6].$neverSave)
                    nms_ChunkProviderLoadOrGenerate_saveExtraChunkData($this, $this.$chunks.data[$var6]);
                if (nms_Chunk_needsSaving($this.$chunks.data[$var6], $var1)) {
                    nms_ChunkProviderLoadOrGenerate_saveChunk($this, $this.$chunks.data[$var6]);
                    $this.$chunks.data[$var6].$isModified = 0;
                    $var3 = $var3 + 1 | 0;
                    if ($var3 == 2 && !$var1)
                        break;
                    if ($var2 !== null) {
                        $var5_0 = $var5_0 + 1 | 0;
                        if (!($var5_0 % 10 | 0)) {
                            $var5 = ($var5_0 * 100 | 0) / $var4 | 0;
                            $ptr = 1;
                            continue main;
                        }
                    }
                }
            }
            $var6 = $var6 + 1 | 0;
        }
        return 0;
    case 1:
        nms_LoadingScreenRenderer_setLoadingProgress($var2, $var5);
        if ($rt_suspending()) {
            break main;
        }
        while (true) {
            $var6 = $var6 + 1 | 0;
            if ($var6 >= $this.$chunks.data.length) {
                if ($var1 && $this.$chunkLoader === null)
                    return 1;
                return 1;
            }
            if ($this.$chunks.data[$var6] === null)
                continue;
            if ($var1 && !$this.$chunks.data[$var6].$neverSave)
                nms_ChunkProviderLoadOrGenerate_saveExtraChunkData($this, $this.$chunks.data[$var6]);
            if (!nms_Chunk_needsSaving($this.$chunks.data[$var6], $var1))
                continue;
            nms_ChunkProviderLoadOrGenerate_saveChunk($this, $this.$chunks.data[$var6]);
            $this.$chunks.data[$var6].$isModified = 0;
            $var3 = $var3 + 1 | 0;
            if ($var3 == 2 && !$var1)
                break;
            if ($var2 === null)
                continue;
            $var5_0 = $var5_0 + 1 | 0;
            if (!($var5_0 % 10 | 0)) {
                $var5 = ($var5_0 * 100 | 0) / $var4 | 0;
                continue main;
            }
        }
        return 0;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var5_0, $var6, $ptr);
}
function nms_ChunkProviderLoadOrGenerate_func_532_a($this) {
    return $this.$chunkProvider0.$func_532_a();
}
function nms_ChunkProviderLoadOrGenerate_func_536_b($this) {
    return 1;
}
function nms_MobSpawnerBase() {
    var a = this; jl_Object.call(a);
    a.$biomeName = null;
    a.$field_6503_n = 0;
    a.$topBlock = 0;
    a.$fillerBlock = 0;
    a.$field_6502_q = 0;
    a.$biomeMonsters = null;
    a.$biomeCreatures = null;
}
var nms_MobSpawnerBase_rainforest = null;
var nms_MobSpawnerBase_swampland = null;
var nms_MobSpawnerBase_seasonalForest = null;
var nms_MobSpawnerBase_forest = null;
var nms_MobSpawnerBase_savanna = null;
var nms_MobSpawnerBase_shrubland = null;
var nms_MobSpawnerBase_taiga = null;
var nms_MobSpawnerBase_desert = null;
var nms_MobSpawnerBase_plains = null;
var nms_MobSpawnerBase_iceDesert = null;
var nms_MobSpawnerBase_tundra = null;
var nms_MobSpawnerBase_hell = null;
var nms_MobSpawnerBase_biomeLookupTable = null;
function nms_MobSpawnerBase__init_0() {
    var var_0 = new nms_MobSpawnerBase();
    nms_MobSpawnerBase__init_(var_0);
    return var_0;
}
function nms_MobSpawnerBase__init_($this) {
    var var$1, var$2;
    nms_Block_$callClinit();
    $this.$topBlock = nms_Block_grass.$blockID << 24 >> 24;
    $this.$fillerBlock = nms_Block_dirt.$blockID << 24 >> 24;
    $this.$field_6502_q = 5169201;
    var$1 = $rt_createArray(jl_Class, 4);
    var$2 = var$1.data;
    var$2[0] = $rt_cls(nms_EntitySpider);
    var$2[1] = $rt_cls(nms_EntityZombie);
    var$2[2] = $rt_cls(nms_EntitySkeleton);
    var$2[3] = $rt_cls(nms_EntityCreeper);
    $this.$biomeMonsters = var$1;
    var$1 = $rt_createArray(jl_Class, 4);
    var$2 = var$1.data;
    var$2[0] = $rt_cls(nms_EntitySheep);
    var$2[1] = $rt_cls(nms_EntityPig);
    var$2[2] = $rt_cls(nms_EntityChicken);
    var$2[3] = $rt_cls(nms_EntityCow);
    $this.$biomeCreatures = var$1;
}
function nms_MobSpawnerBase_func_4122_b($this) {
    return $this;
}
function nms_MobSpawnerBase_setBiomeName($this, $var1) {
    $this.$biomeName = $var1;
    return $this;
}
function nms_MobSpawnerBase_func_4124_a($this, $var1) {
    $this.$field_6502_q = $var1;
    return $this;
}
function nms_MobSpawnerBase_func_4123_b($this, $var1) {
    $this.$field_6503_n = $var1;
    return $this;
}
function nms_MobSpawnerBase_getSkyColorByTemp($this, $var1) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $var1 / 3.0;
    if (var$2 < (-1.0))
        var$2 = (-1.0);
    if (var$2 > 1.0)
        var$2 = 1.0;
    a: {
        var$3 = 0.6222222447395325 - var$2 * 0.05000000074505806;
        $var1 = 0.5 + var$2 * 0.10000000149011612;
        var$2 = 1.0;
        if ($var1 === 0.0) {
            var$4 = var$2;
            $var1 = var$2;
        } else {
            var$3 = (var$3 - jl_Math_floor(var$3)) * 6.0;
            var$5 = var$3 - jl_Math_floor(var$3);
            var$4 = var$2 * (1.0 - $var1);
            var$6 = var$2 * (1.0 - $var1 * var$5);
            $var1 = var$2 * (1.0 - $var1 * (1.0 - var$5));
            switch (var$3 | 0) {
                case 0:
                    break;
                case 1:
                    $var1 = var$2;
                    var$2 = var$6;
                    break a;
                case 2:
                    var$3 = var$4;
                    var$4 = $var1;
                    $var1 = var$2;
                    var$2 = var$3;
                    break a;
                case 3:
                    var$3 = var$4;
                    var$4 = var$2;
                    $var1 = var$6;
                    var$2 = var$3;
                    break a;
                case 4:
                    var$3 = var$4;
                    var$5 = $var1;
                    var$4 = var$2;
                    $var1 = var$3;
                    var$2 = var$5;
                    break a;
                case 5:
                    $var1 = var$4;
                    var$4 = var$6;
                    break a;
                default:
                    var$4 = var$2;
                    $var1 = var$2;
                    break a;
            }
        }
    }
    return (-16777216) | jl_Math_round(var$2 * 255.0) << 16 | jl_Math_round($var1 * 255.0) << 8 | jl_Math_round(var$4 * 255.0);
}
function nms_MobSpawnerBase_getEntitiesForType($this, $var1) {
    return $var1 === nms_EnumCreatureType_monster ? $this.$biomeMonsters : $var1 !== nms_EnumCreatureType_creature ? null : $this.$biomeCreatures;
}
function nms_MobSpawnerBase__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = nms_MobSpawnerBase__init_0();
    var$1.$field_6503_n = 588342;
    var$1.$biomeName = $rt_s(948);
    var$1.$field_6502_q = 2094168;
    nms_MobSpawnerBase_rainforest = var$1;
    var$1 = new nms_MobSpawnerSwamp;
    nms_MobSpawnerBase__init_(var$1);
    var$1.$field_6503_n = 522674;
    var$1.$biomeName = $rt_s(949);
    var$1.$field_6502_q = 9154376;
    nms_MobSpawnerBase_swampland = var$1;
    var$1 = nms_MobSpawnerBase__init_0();
    var$1.$field_6503_n = 10215459;
    var$1.$biomeName = $rt_s(950);
    nms_MobSpawnerBase_seasonalForest = var$1;
    var$1 = nms_MobSpawnerBase__init_0();
    var$1.$field_6503_n = 353825;
    var$1.$biomeName = $rt_s(951);
    var$1.$field_6502_q = 5159473;
    nms_MobSpawnerBase_forest = var$1;
    var$1 = new nms_MobSpawnerDesert;
    nms_MobSpawnerBase__init_(var$1);
    var$1.$field_6503_n = 14278691;
    var$1.$biomeName = $rt_s(952);
    nms_MobSpawnerBase_savanna = var$1;
    var$1 = nms_MobSpawnerBase__init_0();
    var$1.$field_6503_n = 10595616;
    var$1.$biomeName = $rt_s(953);
    nms_MobSpawnerBase_shrubland = var$1;
    var$1 = nms_MobSpawnerBase__init_0();
    var$1.$field_6503_n = 3060051;
    var$1.$biomeName = $rt_s(954);
    var$1.$field_6502_q = 8107825;
    nms_MobSpawnerBase_taiga = var$1;
    var$1 = new nms_MobSpawnerDesert;
    nms_MobSpawnerBase__init_(var$1);
    var$1.$field_6503_n = 16421912;
    var$1.$biomeName = $rt_s(955);
    nms_MobSpawnerBase_desert = var$1;
    var$1 = new nms_MobSpawnerDesert;
    nms_MobSpawnerBase__init_(var$1);
    var$1.$field_6503_n = 16767248;
    var$1.$biomeName = $rt_s(956);
    nms_MobSpawnerBase_plains = var$1;
    var$1 = new nms_MobSpawnerDesert;
    nms_MobSpawnerBase__init_(var$1);
    var$1.$field_6503_n = 16772499;
    var$1.$biomeName = $rt_s(957);
    var$1.$field_6502_q = 12899129;
    nms_MobSpawnerBase_iceDesert = var$1;
    var$1 = nms_MobSpawnerBase__init_0();
    var$1.$field_6503_n = 5762041;
    var$1.$biomeName = $rt_s(958);
    var$1.$field_6502_q = 12899129;
    nms_MobSpawnerBase_tundra = var$1;
    var$1 = nms_MobSpawnerHell__init_0();
    var$1.$field_6503_n = 16711680;
    var$1.$biomeName = $rt_s(959);
    nms_MobSpawnerBase_hell = var$1;
    nms_MobSpawnerBase_biomeLookupTable = $rt_createArray(nms_MobSpawnerBase, 4096);
    var$2 = 0;
    while (var$2 < 64) {
        var$3 = 0;
        while (var$3 < 64) {
            var$4 = nms_MobSpawnerBase_biomeLookupTable;
            var$5 = var$2 + (var$3 * 64 | 0) | 0;
            var$6 = var$2 / 63.0;
            var$7 = var$3 / 63.0 * var$6;
            var$1 = var$6 < 0.10000000149011612 ? nms_MobSpawnerBase_tundra : var$7 < 0.20000000298023224 ? (var$6 < 0.5 ? nms_MobSpawnerBase_tundra : var$6 >= 0.949999988079071 ? nms_MobSpawnerBase_desert : nms_MobSpawnerBase_savanna) : var$7 > 0.5 && var$6 < 0.699999988079071 ? nms_MobSpawnerBase_swampland : var$6 < 0.5 ? nms_MobSpawnerBase_taiga : var$6 < 0.9700000286102295 ? (var$7 >= 0.3499999940395355 ? nms_MobSpawnerBase_forest : nms_MobSpawnerBase_shrubland) : var$7 < 0.44999998807907104 ? nms_MobSpawnerBase_plains
            : var$7 >= 0.8999999761581421 ? nms_MobSpawnerBase_rainforest : nms_MobSpawnerBase_seasonalForest;
            var$4.data[var$5] = var$1;
            var$3 = var$3 + 1 | 0;
        }
        var$2 = var$2 + 1 | 0;
    }
    var$8 = nms_MobSpawnerBase_desert;
    var$9 = nms_MobSpawnerBase_desert;
    nms_Block_$callClinit();
    var$2 = nms_Block_sand.$blockID << 24 >> 24;
    var$9.$fillerBlock = var$2;
    var$8.$topBlock = var$2;
    var$1 = nms_MobSpawnerBase_iceDesert;
    var$8 = nms_MobSpawnerBase_iceDesert;
    var$2 = nms_Block_sand.$blockID << 24 >> 24;
    var$8.$fillerBlock = var$2;
    var$1.$topBlock = var$2;
}
function nms_MetadataChunkBlock() {
    var a = this; jl_Object.call(a);
    a.$field_1299_a = null;
    a.$field_1298_b = 0;
    a.$field_1304_c = 0;
    a.$field_1303_d = 0;
    a.$field_1302_e = 0;
    a.$field_1301_f = 0;
    a.$field_1300_g = 0;
}
function nms_MetadataChunkBlock_func_4127_a($this, $var1) {
    var $var6, $var7, $var8, $var9, $var11, $var12, $var20, $var14, $var15, $var16, $var17, $var18, $var19, $var14_0;
    a: {
        if ($rt_imul($rt_imul(($this.$field_1302_e - $this.$field_1298_b | 0) + 1 | 0, ($this.$field_1301_f - $this.$field_1304_c | 0) + 1 | 0), ($this.$field_1300_g - $this.$field_1303_d | 0) + 1 | 0) <= 32768) {
            $var6 = $this.$field_1298_b;
            while (true) {
                if ($var6 > $this.$field_1302_e)
                    break a;
                $var7 = $this.$field_1303_d;
                while ($var7 <= $this.$field_1300_g) {
                    b: {
                        if (nms_World_blockExists($var1, $var6, 0, $var7)) {
                            $var8 = $this.$field_1304_c;
                            while (true) {
                                if ($var8 > $this.$field_1301_f)
                                    break b;
                                if ($var8 >= 0 && $var8 < 128) {
                                    $var9 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6, $var8, $var7);
                                    $var11 = nms_World_getBlockId($var1, $var6, $var8, $var7);
                                    nms_Block_$callClinit();
                                    $var12 = nms_Block_lightOpacity.data[$var11];
                                    if (!$var12)
                                        $var12 = 1;
                                    $var20 = 0;
                                    if ($this.$field_1299_a === nms_EnumSkyBlock_Sky) {
                                        if (nms_World_canExistingBlockSeeTheSky($var1, $var6, $var8, $var7))
                                            $var20 = 15;
                                    } else if ($this.$field_1299_a === nms_EnumSkyBlock_Block)
                                        $var20 = nms_Block_lightValue.data[$var11];
                                    if ($var12 >= 15 && !$var20)
                                        $var20 = 0;
                                    else {
                                        $var14 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6 - 1 | 0, $var8, $var7);
                                        $var15 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6 + 1 | 0, $var8, $var7);
                                        $var16 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6, $var8 - 1 | 0, $var7);
                                        $var17 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6, $var8 + 1 | 0, $var7);
                                        $var18 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6, $var8, $var7 - 1 | 0);
                                        $var19 = nms_World_getSavedLightValue($var1, $this.$field_1299_a, $var6, $var8, $var7 + 1 | 0);
                                        if ($var15 <= $var14)
                                            $var15 = $var14;
                                        if ($var16 <= $var15)
                                            $var16 = $var15;
                                        if ($var17 <= $var16)
                                            $var17 = $var16;
                                        if ($var18 <= $var17)
                                            $var18 = $var17;
                                        if ($var19 <= $var18)
                                            $var19 = $var18;
                                        $var14_0 = $var19 - $var12 | 0;
                                        if ($var14_0 < 0)
                                            $var14_0 = 0;
                                        if ($var20 <= $var14_0)
                                            $var20 = $var14_0;
                                    }
                                    if ($var9 != $var20) {
                                        nms_World_setLightValue($var1, $this.$field_1299_a, $var6, $var8, $var7, $var20);
                                        $var14_0 = $var20 - 1 | 0;
                                        if ($var14_0 < 0)
                                            $var14_0 = 0;
                                        nms_World_neighborLightPropagationChanged($var1, $this.$field_1299_a, $var6 - 1 | 0, $var8, $var7, $var14_0);
                                        nms_World_neighborLightPropagationChanged($var1, $this.$field_1299_a, $var6, $var8 - 1 | 0, $var7, $var14_0);
                                        nms_World_neighborLightPropagationChanged($var1, $this.$field_1299_a, $var6, $var8, $var7 - 1 | 0, $var14_0);
                                        $var12 = $var6 + 1 | 0;
                                        if ($var12 >= $this.$field_1302_e)
                                            nms_World_neighborLightPropagationChanged($var1, $this.$field_1299_a, $var12, $var8, $var7, $var14_0);
                                        $var12 = $var8 + 1 | 0;
                                        if ($var12 >= $this.$field_1301_f)
                                            nms_World_neighborLightPropagationChanged($var1, $this.$field_1299_a, $var6, $var12, $var7, $var14_0);
                                        $var12 = $var7 + 1 | 0;
                                        if ($var12 >= $this.$field_1300_g)
                                            nms_World_neighborLightPropagationChanged($var1, $this.$field_1299_a, $var6, $var8, $var12, $var14_0);
                                    }
                                }
                                $var8 = $var8 + 1 | 0;
                            }
                        }
                    }
                    $var7 = $var7 + 1 | 0;
                }
                $var6 = $var6 + 1 | 0;
            }
        }
    }
}
function nms_MetadataChunkBlock_func_866_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var8, $var9, $var10;
    if ($var1 >= $this.$field_1298_b && $var2 >= $this.$field_1304_c && $var3 >= $this.$field_1303_d && $var4 <= $this.$field_1302_e && $var5 <= $this.$field_1301_f && $var6 <= $this.$field_1300_g)
        return 1;
    if ($var1 >= ($this.$field_1298_b - 1 | 0) && $var2 >= ($this.$field_1304_c - 1 | 0) && $var3 >= ($this.$field_1303_d - 1 | 0) && $var4 <= ($this.$field_1302_e + 1 | 0) && $var5 <= ($this.$field_1301_f + 1 | 0) && $var6 <= ($this.$field_1300_g + 1 | 0)) {
        $var8 = $this.$field_1302_e - $this.$field_1298_b | 0;
        $var9 = $this.$field_1301_f - $this.$field_1304_c | 0;
        $var10 = $this.$field_1300_g - $this.$field_1303_d | 0;
        if ($var1 > $this.$field_1298_b)
            $var1 = $this.$field_1298_b;
        if ($var2 > $this.$field_1304_c)
            $var2 = $this.$field_1304_c;
        if ($var3 > $this.$field_1303_d)
            $var3 = $this.$field_1303_d;
        if ($var4 < $this.$field_1302_e)
            $var4 = $this.$field_1302_e;
        if ($var5 < $this.$field_1301_f)
            $var5 = $this.$field_1301_f;
        if ($var6 < $this.$field_1300_g)
            $var6 = $this.$field_1300_g;
        if (($rt_imul($rt_imul($var4 - $var1 | 0, $var5 - $var2 | 0), $var6 - $var3 | 0) - $rt_imul($rt_imul($var8, $var9), $var10) | 0) <= 2) {
            $this.$field_1298_b = $var1;
            $this.$field_1304_c = $var2;
            $this.$field_1303_d = $var3;
            $this.$field_1302_e = $var4;
            $this.$field_1301_f = $var5;
            $this.$field_1300_g = $var6;
            return 1;
        }
    }
    return 0;
}
function nms_ChunkCoordIntPair() {
    var a = this; jl_Object.call(a);
    a.$chunkXPos = 0;
    a.$chunkZPos = 0;
}
function nms_ChunkCoordIntPair__init_(var_0, var_1) {
    var var_2 = new nms_ChunkCoordIntPair();
    nms_ChunkCoordIntPair__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ChunkCoordIntPair__init_0($this, $var1, $var2) {
    $this.$chunkXPos = $var1;
    $this.$chunkZPos = $var2;
}
function nms_ChunkCoordIntPair_hashCode($this) {
    return $this.$chunkXPos << 8 | $this.$chunkZPos;
}
function nms_ChunkCoordIntPair_equals($this, $var1) {
    var $var2;
    $var2 = $var1;
    return $var2.$chunkXPos == $this.$chunkXPos && $var2.$chunkZPos == $this.$chunkZPos ? 1 : 0;
}
function nms_EnumCreatureType() {
    var a = this; jl_Enum.call(a);
    a.$field_4278_c = null;
    a.$maxNumberOfEntityType = 0;
}
var nms_EnumCreatureType_monster = null;
var nms_EnumCreatureType_creature = null;
var nms_EnumCreatureType_$VALUES = null;
function nms_EnumCreatureType__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_EnumCreatureType();
    nms_EnumCreatureType__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_EnumCreatureType_values() {
    return nms_EnumCreatureType_$VALUES.$clone();
}
function nms_EnumCreatureType__init_0($this, var$1, var$2, $var3, $var4) {
    jl_Enum__init_0($this, var$1, var$2);
    $this.$field_4278_c = $var3;
    $this.$maxNumberOfEntityType = $var4;
}
function nms_EnumCreatureType__clinit_() {
    var var$1, var$2;
    nms_EnumCreatureType_monster = nms_EnumCreatureType__init_($rt_s(960), 0, $rt_cls(nms_IMobs), 100);
    nms_EnumCreatureType_creature = nms_EnumCreatureType__init_($rt_s(961), 1, $rt_cls(nms_EntityAnimals), 20);
    var$1 = $rt_createArray(nms_EnumCreatureType, 2);
    var$2 = var$1.data;
    var$2[0] = nms_EnumCreatureType_monster;
    var$2[1] = nms_EnumCreatureType_creature;
    nms_EnumCreatureType_$VALUES = var$1;
}
function nms_ChunkPosition() {
    var a = this; jl_Object.call(a);
    a.$x3 = 0;
    a.$y2 = 0;
    a.$z5 = 0;
}
function nms_ChunkPosition__init_(var_0, var_1, var_2) {
    var var_3 = new nms_ChunkPosition();
    nms_ChunkPosition__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_ChunkPosition__init_0($this, $var1, $var2, $var3) {
    $this.$x3 = $var1;
    $this.$y2 = $var2;
    $this.$z5 = $var3;
}
function nms_ChunkPosition_equals($this, $var1) {
    var $var2;
    if (!($var1 instanceof nms_ChunkPosition))
        return 0;
    $var2 = $var1;
    return $var2.$x3 == $this.$x3 && $var2.$y2 == $this.$y2 && $var2.$z5 == $this.$z5 ? 1 : 0;
}
function nms_ChunkPosition_hashCode($this) {
    return ($rt_imul($this.$x3, 8976890) + $rt_imul($this.$y2, 981131) | 0) + $this.$z5 | 0;
}
function nlea_EaglerAdapterImpl2$FileEntry() {
    jl_Object.call(this);
    this.$path = null;
}
function jlr_AccessibleObject() {
    jl_Object.call(this);
}
function jlr_AccessibleObject__init_0() {
    var var_0 = new jlr_AccessibleObject();
    jlr_AccessibleObject__init_(var_0);
    return var_0;
}
function jlr_AccessibleObject__init_($this) {
    return;
}
function jlr_Member() {
}
function jlr_Constructor() {
    var a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name0 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$callable = null;
}
function jlr_Constructor_getModifiers($this) {
    var var$1, var$2, var$3;
    a: {
        var$1 = $this.$modifiers;
        var$2 = $this.$accessLevel;
        var$3 = 0;
        switch (var$2) {
            case 1:
                var$3 = 2;
                break a;
            case 2:
                var$3 = 4;
                break a;
            case 3:
                var$3 = 1;
                break a;
            default:
        }
    }
    var$2 = var$1 >>> 6;
    return var$3 | var$2 & 8 | var$1 << 2 & 16 | var$2 & 32 | var$1 >>> 8 & 64 | var$1 >>> 5 & 128 | var$1 & 256 | var$1 << 8 & 512 | var$1 << 10 & 1024 | var$1 << 1 & 2048;
}
function jlr_Constructor_getParameterTypes($this) {
    return $this.$parameterTypes.$clone();
}
function jlr_Constructor_newInstance($this, $initargs) {
    var $jsArgs, var$3, var$4, $i, $instance;
    if ($this.$modifiers & 1) {
        $jsArgs = new jl_InstantiationException;
        jl_Throwable__init_0($jsArgs);
        $rt_throw($jsArgs);
    }
    if ($this.$callable === null) {
        $jsArgs = new jl_IllegalAccessException;
        jl_Throwable__init_0($jsArgs);
        $rt_throw($jsArgs);
    }
    var$3 = $initargs.data;
    var$4 = var$3.length;
    if (var$4 != $this.$parameterTypes.data.length) {
        $jsArgs = new jl_IllegalArgumentException;
        jl_Throwable__init_0($jsArgs);
        $rt_throw($jsArgs);
    }
    $i = 0;
    while (true) {
        if ($i >= var$4) {
            $jsArgs = $initargs.data;
            $instance = new $this.$declaringClass.$platformClass();
            $this.$callable.call($instance, $jsArgs);
            return $instance;
        }
        if (!jl_Class_isPrimitive($this.$parameterTypes.data[$i]) && var$3[$i] !== null && !jl_Class_isInstance($this.$parameterTypes.data[$i], var$3[$i])) {
            $jsArgs = new jl_IllegalArgumentException;
            jl_Throwable__init_0($jsArgs);
            $rt_throw($jsArgs);
        }
        if (jl_Class_isPrimitive($this.$parameterTypes.data[$i]) && var$3[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $jsArgs = new jl_IllegalArgumentException;
    jl_Throwable__init_0($jsArgs);
    $rt_throw($jsArgs);
}
function juz_DeflaterOutputStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$buf3 = null;
    a.$def = null;
    a.$done0 = 0;
}
function juz_DeflaterOutputStream_deflate($this) {
    var $x;
    while (true) {
        $x = juz_Deflater_deflate($this.$def, $this.$buf3);
        $this.$out2.$write2($this.$buf3, 0, $x);
        if (!juz_Deflater_needsInput($this.$def))
            continue;
        else
            break;
    }
}
function juz_DeflaterOutputStream_close($this) {
    if (!$this.$def.$finished2)
        juz_GZIPOutputStream_finish($this);
    juz_Deflater_end($this.$def);
    $this.$out2.$close();
}
function juz_DeflaterOutputStream_write($this, $i) {
    var $b;
    $b = $rt_createByteArray(1);
    $b.data[0] = $i << 24 >> 24;
    juz_GZIPOutputStream_write($this, $b, 0, 1);
}
function juz_GZIPOutputStream() {
    juz_DeflaterOutputStream.call(this);
    this.$crc0 = null;
}
function juz_GZIPOutputStream_flush($this) {
    var $count;
    $count = juz_Deflater_deflate0($this.$def, $this.$buf3, 0, $this.$buf3.data.length, 2);
    $this.$out2.$write2($this.$buf3, 0, $count);
    $this.$out2.$flush();
}
function juz_GZIPOutputStream_finish($this) {
    var var$1;
    if (!$this.$done0) {
        juz_Deflater_finish($this.$def);
        while (!$this.$def.$finished2) {
            if (juz_Deflater_needsInput($this.$def))
                juz_Deflater_setInput($this.$def, $this.$buf3, 0, 0);
            var$1 = juz_Deflater_deflate($this.$def, $this.$buf3);
            $this.$out2.$write2($this.$buf3, 0, var$1);
        }
        $this.$done0 = 1;
    }
    juz_GZIPOutputStream_writeLong($this, juz_CRC32_getValue($this.$crc0));
    juz_GZIPOutputStream_writeLong($this, $this.$crc0.$tbytes);
}
function juz_GZIPOutputStream_write($this, $buffer, $off, $nbytes) {
    var var$4, var$5;
    if ($this.$done0) {
        var$4 = new ji_IOException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    var$5 = $buffer.data.length;
    if ($off <= var$5 && $nbytes >= 0 && $off >= 0 && (var$5 - $off | 0) >= $nbytes) {
        if (!juz_Deflater_needsInput($this.$def)) {
            var$4 = new ji_IOException;
            jl_Throwable__init_0(var$4);
            $rt_throw(var$4);
        }
        juz_Deflater_setInput($this.$def, $buffer, $off, $nbytes);
        juz_DeflaterOutputStream_deflate($this);
        juz_CRC32_update($this.$crc0, $buffer, $off, $nbytes);
        return;
    }
    var$4 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function juz_GZIPOutputStream_writeLong($this, $i) {
    var $unsigned;
    $unsigned = $i.lo;
    $this.$out2.$write3($unsigned & 255);
    $this.$out2.$write3($unsigned >> 8 & 255);
    $this.$out2.$write3($unsigned >> 16 & 255);
    $this.$out2.$write3($unsigned >> 24 & 255);
    return $i;
}
function nms_NibbleArray() {
    jl_Object.call(this);
    this.$data4 = null;
}
function nms_NibbleArray__init_0(var_0) {
    var var_1 = new nms_NibbleArray();
    nms_NibbleArray__init_(var_1, var_0);
    return var_1;
}
function nms_NibbleArray__init_1(var_0) {
    var var_1 = new nms_NibbleArray();
    nms_NibbleArray__init_2(var_1, var_0);
    return var_1;
}
function nms_NibbleArray__init_($this, $var1) {
    $this.$data4 = $rt_createByteArray($var1 >> 1);
}
function nms_NibbleArray__init_2($this, $var1) {
    $this.$data4 = $var1;
}
function nms_NibbleArray_getNibble($this, $var1, $var2, $var3) {
    var $var4, $var5;
    $var4 = $var1 << 11 | $var3 << 7 | $var2;
    $var5 = $var4 >> 1;
    return !($var4 & 1) ? $this.$data4.data[$var5] & 15 : $this.$data4.data[$var5] >> 4 & 15;
}
function nms_NibbleArray_setNibble($this, $var1, $var2, $var3, $var4) {
    var $var5, $var6;
    $var5 = $var1 << 11 | $var3 << 7 | $var2;
    $var6 = $var5 >> 1;
    if (!($var5 & 1))
        $this.$data4.data[$var6] = ($this.$data4.data[$var6] & 240 | $var4 & 15) << 24 >> 24;
    else
        $this.$data4.data[$var6] = ($this.$data4.data[$var6] & 15 | ($var4 & 15) << 4) << 24 >> 24;
}
function nms_NibbleArray_isValid($this) {
    return $this.$data4 === null ? 0 : 1;
}
function nms_MobSpawnerSwamp() {
    nms_MobSpawnerBase.call(this);
}
function nms_MobSpawnerSwamp__init_0() {
    var var_0 = new nms_MobSpawnerSwamp();
    nms_MobSpawnerSwamp__init_(var_0);
    return var_0;
}
function nms_MobSpawnerSwamp__init_($this) {
    nms_MobSpawnerBase__init_($this);
}
function nms_MobSpawnerDesert() {
    nms_MobSpawnerBase.call(this);
}
function nms_MobSpawnerDesert__init_0() {
    var var_0 = new nms_MobSpawnerDesert();
    nms_MobSpawnerDesert__init_(var_0);
    return var_0;
}
function nms_MobSpawnerDesert__init_($this) {
    nms_MobSpawnerBase__init_($this);
}
function nms_MobSpawnerHell() {
    nms_MobSpawnerBase.call(this);
}
function nms_MobSpawnerHell__init_0() {
    var var_0 = new nms_MobSpawnerHell();
    nms_MobSpawnerHell__init_(var_0);
    return var_0;
}
function nms_MobSpawnerHell__init_($this) {
    var var$1, var$2;
    nms_MobSpawnerBase__init_($this);
    var$1 = $rt_createArray(jl_Class, 2);
    var$2 = var$1.data;
    var$2[0] = $rt_cls(nms_EntityGhast);
    var$2[1] = $rt_cls(nms_EntityPigZombie);
    $this.$biomeMonsters = var$1;
    $this.$biomeCreatures = $rt_createArray(jl_Class, 0);
}
function nms_EntityPigZombie() {
    var a = this; nms_EntityZombie.call(a);
    a.$angerLevel = 0;
    a.$randomSoundDelay = 0;
}
var nms_EntityPigZombie_defaultHeldItem = null;
function nms_EntityPigZombie_$callClinit() {
    nms_EntityPigZombie_$callClinit = $rt_eraseClinit(nms_EntityPigZombie);
    nms_EntityPigZombie__clinit_();
}
function nms_EntityPigZombie_onUpdate($this) {
    var var$1, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $this.$field_9333_am = $this.$playerToAttack === null ? 0.5 : 0.949999988079071;
        if ($this.$randomSoundDelay > 0) {
            var$1 = $this.$randomSoundDelay - 1 | 0;
            $this.$randomSoundDelay = var$1;
            if (!var$1)
                nms_World_playSoundAtEntity($this.$worldObj0, $this, $rt_s(962), 2.0, ((ju_Random_nextFloat($this.$rand2) - ju_Random_nextFloat($this.$rand2)) * 0.20000000298023224 + 1.0) * 1.7999999523162842);
        }
        $ptr = 1;
    case 1:
        nms_EntityMobs_onUpdate($this);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, var$1, $ptr);
}
function nms_EntityPigZombie_getCanSpawnHere($this) {
    return $this.$worldObj0.$difficultySetting > 0 && nms_World_checkIfAABBIsClear($this.$worldObj0, $this.$boundingBox) && !nms_World_getCollidingBoundingBoxes($this.$worldObj0, $this, $this.$boundingBox).$size && !nms_World_getIsAnyLiquid($this.$worldObj0, $this.$boundingBox) ? 1 : 0;
}
function nms_EntityPigZombie_writeEntityToNBT($this, $var1) {
    nms_EntityLiving_writeEntityToNBT($this, $var1);
    nms_NBTTagCompound_setShort($var1, $rt_s(963), $this.$angerLevel << 16 >> 16);
}
function nms_EntityPigZombie_readEntityFromNBT($this, $var1) {
    nms_EntityLiving_readEntityFromNBT($this, $var1);
    $this.$angerLevel = nms_NBTTagCompound_getShort($var1, $rt_s(963));
}
function nms_EntityPigZombie_findPlayerToAttack($this) {
    return $this.$angerLevel ? nms_EntityMobs_findPlayerToAttack($this) : null;
}
function nms_EntityPigZombie_onLivingUpdate($this) {
    nms_EntityZombie_onLivingUpdate($this);
}
function nms_EntityPigZombie_canAttackEntity($this, $var1, $var2) {
    var $var3, $var4, $var5;
    if ($var1 instanceof nms_EntityPlayer) {
        $var3 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$worldObj0, $this, nms_AxisAlignedBB_expands($this.$boundingBox, 32.0, 32.0, 32.0));
        $var4 = 0;
        while ($var4 < $var3.$size) {
            $var5 = ju_ArrayList_get($var3, $var4);
            if ($var5 instanceof nms_EntityPigZombie)
                nms_EntityPigZombie_becomeAngryAt($var5, $var1);
            $var4 = $var4 + 1 | 0;
        }
        nms_EntityPigZombie_becomeAngryAt($this, $var1);
    }
    return nms_EntityMobs_canAttackEntity($this, $var1, $var2);
}
function nms_EntityPigZombie_becomeAngryAt($this, $var1) {
    $this.$playerToAttack = $var1;
    $this.$angerLevel = 400 + ju_Random_nextInt($this.$rand2, 400) | 0;
    $this.$randomSoundDelay = ju_Random_nextInt($this.$rand2, 40);
}
function nms_EntityPigZombie_getLivingSound($this) {
    return $rt_s(964);
}
function nms_EntityPigZombie_getHurtSound($this) {
    return $rt_s(965);
}
function nms_EntityPigZombie_getDeathSound($this) {
    return $rt_s(966);
}
function nms_EntityPigZombie_getDropItemId($this) {
    nms_Item_$callClinit();
    return nms_Item_porkCooked.$shiftedIndex;
}
function nms_EntityPigZombie_getHeldItem($this) {
    return nms_EntityPigZombie_defaultHeldItem;
}
function nms_EntityPigZombie__clinit_() {
    var var$1;
    var$1 = new nms_ItemStack;
    nms_Item_$callClinit();
    nms_ItemStack__init_4(var$1, nms_Item_swordGold, 1);
    nms_EntityPigZombie_defaultHeldItem = var$1;
}
function juz_Deflater() {
    var a = this; jl_Object.call(a);
    a.$flushParm = 0;
    a.$finished2 = 0;
    a.$compressLevel = 0;
    a.$strategy = 0;
    a.$impl1 = null;
    a.$inRead0 = 0;
    a.$inLength0 = 0;
    a.$nowrap0 = 0;
}
function juz_Deflater__init_1() {
    var var_0 = new juz_Deflater();
    juz_Deflater__init_(var_0);
    return var_0;
}
function juz_Deflater__init_0(var_0, var_1) {
    var var_2 = new juz_Deflater();
    juz_Deflater__init_2(var_2, var_0, var_1);
    return var_2;
}
function juz_Deflater__init_($this) {
    juz_Deflater__init_2($this, (-1), 0);
}
function juz_Deflater__init_2($this, $level, $noHeader) {
    var var$3, $$je;
    $this.$flushParm = 0;
    $this.$compressLevel = (-1);
    $this.$strategy = 0;
    if ($level >= (-1) && $level <= 9) {
        $this.$compressLevel = $level;
        a: {
            try {
                $this.$impl1 = cjj_Deflater__init_0($this.$compressLevel, $noHeader);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cjj_GZIPException) {
                } else {
                    throw $$e;
                }
            }
        }
        $this.$nowrap0 = $noHeader;
        return;
    }
    var$3 = new jl_IllegalArgumentException;
    jl_Throwable__init_0(var$3);
    $rt_throw(var$3);
}
function juz_Deflater_deflate($this, $buf) {
    return juz_Deflater_deflate1($this, $buf, 0, $buf.data.length);
}
function juz_Deflater_deflate1($this, $buf, $off, $nbytes) {
    return juz_Deflater_deflate0($this, $buf, $off, $nbytes, $this.$flushParm);
}
function juz_Deflater_deflate0($this, $buf, $off, $nbytes, $flushParam) {
    var var$5, $err, $sin, $sout, var$9;
    if ($this.$impl1 === null) {
        var$5 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$5);
        $rt_throw(var$5);
    }
    $err = $buf.data.length;
    if ($off <= $err && $nbytes >= 0 && $off >= 0 && ($err - $off | 0) >= $nbytes) {
        a: {
            $sin = $this.$impl1.$total_in;
            $sout = $this.$impl1.$total_out;
            cjj_ZStream_setOutput($this.$impl1, $buf, $off, $nbytes);
            $err = cjj_Deflater_deflate($this.$impl1, $flushParam);
            switch ($err) {
                case 0:
                    break a;
                case 1:
                    $this.$finished2 = 1;
                    break a;
                default:
            }
            var$5 = new jl_RuntimeException;
            var$9 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$9);
            jl_Throwable__init_(var$5, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append(var$9, $rt_s(967)), $err)));
            $rt_throw(var$5);
        }
        $this.$inRead0 = Long_add(Long_fromInt($this.$inRead0), Long_sub($this.$impl1.$total_in, $sin)).lo;
        return Long_sub($this.$impl1.$total_out, $sout).lo;
    }
    var$5 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$5);
    $rt_throw(var$5);
}
function juz_Deflater_end($this) {
    $this.$impl1 = null;
}
function juz_Deflater_finish($this) {
    $this.$flushParm = 4;
}
function juz_Deflater_finished($this) {
    return $this.$finished2;
}
function juz_Deflater_needsInput($this) {
    return $this.$inRead0 != $this.$inLength0 ? 0 : 1;
}
function juz_Deflater_setInput($this, $buf, $off, $nbytes) {
    var var$4, var$5;
    if ($this.$impl1 === null) {
        var$4 = new jl_IllegalStateException;
        jl_Throwable__init_0(var$4);
        $rt_throw(var$4);
    }
    var$5 = $buf.data.length;
    if ($off <= var$5 && $nbytes >= 0 && $off >= 0 && (var$5 - $off | 0) >= $nbytes) {
        $this.$inLength0 = $nbytes;
        $this.$inRead0 = 0;
        if ($this.$impl1.$next_in === null)
            cjj_Deflater_init($this.$impl1, $this.$compressLevel, $this.$strategy, $this.$nowrap0);
        cjj_ZStream_setInput($this.$impl1, $buf, $off, $nbytes, 0);
        return;
    }
    var$4 = new jl_ArrayIndexOutOfBoundsException;
    jl_Throwable__init_0(var$4);
    $rt_throw(var$4);
}
function cjj_Deflater() {
    cjj_ZStream.call(this);
    this.$finished3 = 0;
}
function cjj_Deflater__init_1() {
    var var_0 = new cjj_Deflater();
    cjj_Deflater__init_(var_0);
    return var_0;
}
function cjj_Deflater__init_0(var_0, var_1) {
    var var_2 = new cjj_Deflater();
    cjj_Deflater__init_2(var_2, var_0, var_1);
    return var_2;
}
function cjj_Deflater__init_($this) {
    cjj_ZStream__init_($this);
    $this.$finished3 = 0;
}
function cjj_Deflater__init_2($this, $level, $nowrap) {
    var var$3, var$4;
    cjj_ZStream__init_($this);
    $this.$finished3 = 0;
    $level = cjj_Deflater_init($this, $level, 15, $nowrap);
    if (!$level)
        return;
    var$3 = new cjj_GZIPException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_Throwable__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$4, $level), $rt_s(18)), $this.$msg)));
    $rt_throw(var$3);
}
function cjj_Deflater_init($this, $level, $bits, $nowrap) {
    var var$4, var$5;
    $this.$finished3 = 0;
    var$4 = new cjj_Deflate;
    var$4.$wrap5 = 1;
    var$4.$l_desc = new cjj_Tree;
    var$4.$d_desc = new cjj_Tree;
    var$4.$bl_desc = new cjj_Tree;
    var$4.$bl_count = $rt_createShortArray(16);
    var$4.$next_code = $rt_createShortArray(16);
    var$4.$heap = $rt_createIntArray(573);
    var$4.$depth = $rt_createByteArray(573);
    var$4.$gheader0 = null;
    var$4.$strm = $this;
    var$4.$dyn_ltree = $rt_createShortArray(1146);
    var$4.$dyn_dtree = $rt_createShortArray(122);
    var$4.$bl_tree = $rt_createShortArray(78);
    $this.$dstate = var$4;
    var$5 = $this.$dstate;
    if ($nowrap)
        $bits =  -$bits;
    return cjj_Deflate_deflateInit(var$5, $level, $bits);
}
function cjj_Deflater_deflate($this, $flush) {
    var $ret;
    if ($this.$dstate === null)
        return (-2);
    $ret = cjj_Deflate_deflate($this.$dstate, $flush);
    if ($ret == 1)
        $this.$finished3 = 1;
    return $ret;
}
function nms_WorldChunkManagerHell() {
    var a = this; nms_WorldChunkManager.call(a);
    a.$field_4201_e = null;
    a.$field_4200_f = 0.0;
    a.$field_4199_g = 0.0;
}
function nms_WorldChunkManagerHell_func_4074_a($this, $var1) {
    return $this.$field_4201_e;
}
function nms_WorldChunkManagerHell_func_4073_a($this, $var1, $var2) {
    return $this.$field_4201_e;
}
function nms_WorldChunkManagerHell_func_4072_b($this, $var1, $var2) {
    return $this.$field_4200_f;
}
function nms_WorldChunkManagerHell_func_4069_a($this, $var1, $var2, $var3, $var4) {
    $this.$field_4195_d = nms_WorldChunkManagerHell_loadBlockGeneratorData($this, $this.$field_4195_d, $var1, $var2, $var3, $var4);
    return $this.$field_4195_d;
}
function nms_WorldChunkManagerHell_getTemperatures($this, $var1, $var2, $var3, $var4, $var5) {
    if (!($var1 !== null && $var1.data.length >= $rt_imul($var4, $var5)))
        $var1 = $rt_createDoubleArray($rt_imul($var4, $var5));
    ju_Arrays_fill1($var1, 0, $rt_imul($var4, $var5), $this.$field_4200_f);
    return $var1;
}
function nms_WorldChunkManagerHell_loadBlockGeneratorData($this, $var1, $var2, $var3, $var4, $var5) {
    if (!($var1 !== null && $var1.data.length >= $rt_imul($var4, $var5))) {
        $var2 = $rt_imul($var4, $var5);
        $var1 = $rt_createArray(nms_MobSpawnerBase, $var2);
        $this.$temperature = $rt_createDoubleArray($var2);
        $this.$humidity = $rt_createDoubleArray($var2);
    }
    $var3 = $rt_imul($var4, $var5);
    ju_Arrays_fill($var1, 0, $var3, $this.$field_4201_e);
    ju_Arrays_fill1($this.$humidity, 0, $var3, $this.$field_4199_g);
    ju_Arrays_fill1($this.$temperature, 0, $var3, $this.$field_4200_f);
    return $var1;
}
function nms_GuiChest() {
    var a = this; nms_GuiContainer.call(a);
    a.$field_982_j = null;
    a.$field_981_l = null;
    a.$field_980_m = 0;
}
function nms_GuiChest__init_(var_0, var_1) {
    var var_2 = new nms_GuiChest();
    nms_GuiChest__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_GuiChest__init_0($this, $var1, $var2) {
    var $var5, $var6, $var7, $var7_0;
    nms_GuiContainer__init_($this);
    $this.$field_980_m = 0;
    $this.$field_982_j = $var1;
    $this.$field_981_l = $var2;
    $this.$field_948_f = 0;
    $this.$field_980_m = $var2.$getSizeInventory() / 9 | 0;
    $this.$ySize = 114 + ($this.$field_980_m * 18 | 0) | 0;
    $var5 = ($this.$field_980_m - 4 | 0) * 18 | 0;
    $var6 = 0;
    while ($var6 < $this.$field_980_m) {
        $var7 = 0;
        while ($var7 < 9) {
            ju_ArrayList_add($this.$inventorySlots, nms_SlotInventory__init_($this, $var2, $var7 + ($var6 * 9 | 0) | 0, 8 + ($var7 * 18 | 0) | 0, 18 + ($var6 * 18 | 0) | 0));
            $var7 = $var7 + 1 | 0;
        }
        $var6 = $var6 + 1 | 0;
    }
    $var7 = 0;
    while ($var7 < 3) {
        $var7_0 = 0;
        while ($var7_0 < 9) {
            ju_ArrayList_add($this.$inventorySlots, nms_SlotInventory__init_($this, $var1, $var7_0 + (($var7 + 1 | 0) * 9 | 0) | 0, 8 + ($var7_0 * 18 | 0) | 0, (103 + ($var7 * 18 | 0) | 0) + $var5 | 0));
            $var7_0 = $var7_0 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
    $var6 = 0;
    $var7 = 161 + $var5 | 0;
    while ($var6 < 9) {
        ju_ArrayList_add($this.$inventorySlots, nms_SlotInventory__init_($this, $var1, $var6, 8 + ($var6 * 18 | 0) | 0, $var7));
        $var6 = $var6 + 1 | 0;
    }
}
function nms_GuiChest_drawGuiContainerForegroundLayer($this) {
    nms_FontRenderer_drawString($this.$fontRenderer0, $this.$field_981_l.$getInvName(), 8, 6, 4210752);
    nms_FontRenderer_drawString($this.$fontRenderer0, $rt_s(364), 8, ($this.$ySize - 96 | 0) + 2 | 0, 4210752);
}
function nms_GuiChest_drawGuiContainerBackgroundLayer($this, $var1) {
    var var$2, var$3, $var2, $var3, $var4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = $this.$mc5.$renderEngine;
        var$3 = $rt_s(968);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_RenderEngine_bindTexture($this.$mc5.$renderEngine, $var2);
        $var3 = ($this.$width - $this.$xSize | 0) / 2 | 0;
        $var4 = ($this.$height0 - $this.$ySize | 0) / 2 | 0;
        nms_Gui_drawTexturedModalRect($this, $var3, $var4, 0, 0, $this.$xSize, ($this.$field_980_m * 18 | 0) + 17 | 0);
        nms_Gui_drawTexturedModalRect($this, $var3, ($var4 + ($this.$field_980_m * 18 | 0) | 0) + 17 | 0, 0, 126, $this.$xSize, 96);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $var2, $var3, $var4, $ptr);
}
function nms_GuiCrafting() {
    nms_GuiContainer.call(this);
    this.$field_979_j = null;
}
function nms_GuiCrafting_onGuiClosed($this) {
    nms_GuiContainer_onGuiClosed($this);
    nms_CraftingInventoryWorkbenchCB_onCraftGuiClosed($this.$field_979_j, $this.$mc5.$thePlayer);
}
function nms_GuiCrafting_drawGuiContainerForegroundLayer($this) {
    nms_FontRenderer_drawString($this.$fontRenderer0, $rt_s(542), 28, 6, 4210752);
    nms_FontRenderer_drawString($this.$fontRenderer0, $rt_s(364), 8, ($this.$ySize - 96 | 0) + 2 | 0, 4210752);
}
function nms_GuiCrafting_drawGuiContainerBackgroundLayer($this, $var1) {
    var var$2, var$3, $var2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var2 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = $this.$mc5.$renderEngine;
        var$3 = $rt_s(969);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_RenderEngine_bindTexture($this.$mc5.$renderEngine, $var2);
        nms_Gui_drawTexturedModalRect($this, ($this.$width - $this.$xSize | 0) / 2 | 0, ($this.$height0 - $this.$ySize | 0) / 2 | 0, 0, 0, $this.$xSize, $this.$ySize);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $var2, $ptr);
}
function nms_GuiFurnace() {
    nms_GuiContainer.call(this);
    this.$field_978_j = null;
}
function nms_GuiFurnace_drawGuiContainerForegroundLayer($this) {
    nms_FontRenderer_drawString($this.$fontRenderer0, $rt_s(294), 60, 6, 4210752);
    nms_FontRenderer_drawString($this.$fontRenderer0, $rt_s(364), 8, ($this.$ySize - 96 | 0) + 2 | 0, 4210752);
}
function nms_GuiFurnace_drawGuiContainerBackgroundLayer($this, $var1) {
    var var$2, var$3, $var2, $var3, $var4, $var5, $var5_0, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$var5_0 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = $this.$mc5.$renderEngine;
        var$3 = $rt_s(970);
        $ptr = 1;
    case 1:
        $tmp = nms_RenderEngine_getTexture(var$2, var$3);
        if ($rt_suspending()) {
            break main;
        }
        $var2 = $tmp;
        olo_EaglerAdapterGL30_glColor4f(1.0, 1.0, 1.0, 1.0);
        nms_RenderEngine_bindTexture($this.$mc5.$renderEngine, $var2);
        $var3 = ($this.$width - $this.$xSize | 0) / 2 | 0;
        $var4 = ($this.$height0 - $this.$ySize | 0) / 2 | 0;
        nms_Gui_drawTexturedModalRect($this, $var3, $var4, 0, 0, $this.$xSize, $this.$ySize);
        if (nms_TileEntityFurnace_isBurning($this.$field_978_j)) {
            $var5 = nms_TileEntityFurnace_getBurnTimeRemainingScaled($this.$field_978_j, 12);
            nms_Gui_drawTexturedModalRect($this, $var3 + 56 | 0, (($var4 + 36 | 0) + 12 | 0) - $var5 | 0, 176, 12 - $var5 | 0, 14, $var5 + 2 | 0);
        }
        $var5_0 = nms_TileEntityFurnace_getCookProgressScaled($this.$field_978_j, 24);
        nms_Gui_drawTexturedModalRect($this, $var3 + 79 | 0, $var4 + 34 | 0, 176, 14, $var5_0 + 1 | 0, 16);
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, var$2, var$3, $var2, $var3, $var4, $var5, $var5_0, $ptr);
}
function nms_EntityList() {
    jl_Object.call(this);
}
var nms_EntityList_stringToClassMapping = null;
var nms_EntityList_classToStringMapping = null;
var nms_EntityList_IDtoClassMapping = null;
var nms_EntityList_classToIDMapping = null;
function nms_EntityList__init_0() {
    var var_0 = new nms_EntityList();
    nms_EntityList__init_(var_0);
    return var_0;
}
function nms_EntityList__init_($this) {
    return;
}
function nms_EntityList_addMapping($var0, $var1, $var2) {
    ju_HashMap_putImpl(nms_EntityList_stringToClassMapping, $var1, $var0);
    ju_HashMap_putImpl(nms_EntityList_classToStringMapping, $var0, $var1);
    ju_HashMap_putImpl(nms_EntityList_IDtoClassMapping, jl_Integer_valueOf($var2), $var0);
    ju_HashMap_putImpl(nms_EntityList_classToIDMapping, $var0, jl_Integer_valueOf($var2));
}
function nms_EntityList_createEntityInWorld($var0, $var1) {
    var $var2, var$4, $var3, var$6, $var4, $$je;
    $var2 = null;
    a: {
        try {
            var$4 = $var2;
            $var3 = ju_HashMap_get(nms_EntityList_stringToClassMapping, $var0);
            if ($var3 !== null) {
                var$4 = $var2;
                var$6 = $rt_createArray(jl_Class, 1);
                var$6.data[0] = $rt_cls(nms_World);
                $var0 = jl_Class_getConstructor($var3, var$6);
                var$6 = $rt_createArray(jl_Object, 1);
                var$6.data[0] = $var1;
                $var2 = jlr_Constructor_newInstance($var0, var$6);
                var$4 = $var2;
            }
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var4 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var4);
        $var2 = var$4;
    }
    return $var2;
}
function nms_EntityList__clinit_() {
    nms_EntityList_stringToClassMapping = ju_HashMap__init_0();
    nms_EntityList_classToStringMapping = ju_HashMap__init_0();
    nms_EntityList_IDtoClassMapping = ju_HashMap__init_0();
    nms_EntityList_classToIDMapping = ju_HashMap__init_0();
    nms_EntityList_addMapping($rt_cls(nms_EntityArrow), $rt_s(971), 10);
    nms_EntityList_addMapping($rt_cls(nms_EntitySnowball), $rt_s(972), 11);
    nms_EntityList_addMapping($rt_cls(nms_EntityItem), $rt_s(654), 1);
    nms_EntityList_addMapping($rt_cls(nms_EntityPainting), $rt_s(973), 9);
    nms_EntityList_addMapping($rt_cls(nms_EntityLiving), $rt_s(974), 48);
    nms_EntityList_addMapping($rt_cls(nms_EntityMobs), $rt_s(975), 49);
    nms_EntityList_addMapping($rt_cls(nms_EntityCreeper), $rt_s(976), 50);
    nms_EntityList_addMapping($rt_cls(nms_EntitySkeleton), $rt_s(944), 51);
    nms_EntityList_addMapping($rt_cls(nms_EntitySpider), $rt_s(977), 52);
    nms_EntityList_addMapping($rt_cls(nms_EntityZombieSimple), $rt_s(978), 53);
    nms_EntityList_addMapping($rt_cls(nms_EntityZombie), $rt_s(979), 54);
    nms_EntityList_addMapping($rt_cls(nms_EntitySlime), $rt_s(980), 55);
    nms_EntityList_addMapping($rt_cls(nms_EntityGhast), $rt_s(981), 56);
    nms_EntityList_addMapping($rt_cls(nms_EntityPigZombie), $rt_s(982), 57);
    nms_EntityList_addMapping($rt_cls(nms_EntityPig), $rt_s(696), 90);
    nms_EntityList_addMapping($rt_cls(nms_EntitySheep), $rt_s(983), 91);
    nms_EntityList_addMapping($rt_cls(nms_EntityCow), $rt_s(984), 92);
    nms_EntityList_addMapping($rt_cls(nms_EntityChicken), $rt_s(985), 93);
    nms_EntityList_addMapping($rt_cls(nms_EntityTNTPrimed), $rt_s(986), 20);
    nms_EntityList_addMapping($rt_cls(nms_EntityFallingSand), $rt_s(987), 21);
    nms_EntityList_addMapping($rt_cls(nms_EntityMinecart), $rt_s(662), 40);
    nms_EntityList_addMapping($rt_cls(nms_EntityBoat), $rt_s(988), 41);
}
function nms_WorldGenerator() {
    jl_Object.call(this);
}
function nms_WorldGenerator_func_517_a($this, $var1, $var3, $var5) {
    return;
}
function nms_WorldGenTrees() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenTrees__init_0() {
    var var_0 = new nms_WorldGenTrees();
    nms_WorldGenTrees__init_(var_0);
    return var_0;
}
function nms_WorldGenTrees__init_($this) {
    return;
}
function nms_WorldGenTrees_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, var$8, $var13, $var16, $var8, $var9, $var10, $var11, $var12, $var10_0, $var11_0, $var14, $var15;
    $var6 = ju_Random_nextInt($var2, 3) + 4 | 0;
    $var7 = 1;
    if ($var4 >= 1) {
        var$8 = $var4 + $var6 | 0;
        if ((var$8 + 1 | 0) <= 128) {
            $var13 = ($var4 + 1 | 0) + $var6 | 0;
            $var16 = $var13 - 2 | 0;
            $var8 = $var4;
            while ($var8 <= $var13) {
                $var9 = 1;
                if ($var8 == $var4)
                    $var9 = 0;
                if ($var8 >= $var16)
                    $var9 = 2;
                $var10 = $var3 - $var9 | 0;
                while ($var10 <= ($var3 + $var9 | 0) && $var7) {
                    $var11 = $var5 - $var9 | 0;
                    while ($var11 <= ($var5 + $var9 | 0) && $var7) {
                        if ($var8 >= 0 && $var8 < 128) {
                            $var12 = nms_World_getBlockId($var1, $var10, $var8, $var11);
                            if ($var12) {
                                nms_Block_$callClinit();
                                if ($var12 != nms_Block_leaves.$blockID)
                                    $var7 = 0;
                            }
                        } else
                            $var7 = 0;
                        $var11 = $var11 + 1 | 0;
                    }
                    $var10 = $var10 + 1 | 0;
                }
                $var8 = $var8 + 1 | 0;
            }
            if (!$var7)
                return 0;
            $var10_0 = $var4 - 1 | 0;
            $var16 = nms_World_getBlockId($var1, $var3, $var10_0, $var5);
            nms_Block_$callClinit();
            if (!($var16 != nms_Block_grass.$blockID && $var16 != nms_Block_dirt.$blockID) && $var4 < ((128 - $var6 | 0) - 1 | 0)) {
                nms_World_setBlock($var1, $var3, $var10_0, $var5, nms_Block_dirt.$blockID);
                $var16 = ($var4 - 3 | 0) + $var6 | 0;
                while ($var16 <= var$8) {
                    $var10 = $var16 - var$8 | 0;
                    $var11_0 = 1 - ($var10 / 2 | 0) | 0;
                    $var12 = $var3 - $var11_0 | 0;
                    $var8 = $var3 + $var11_0 | 0;
                    $var10_0 = $var5 - $var11_0 | 0;
                    $var7 = $var5 + $var11_0 | 0;
                    while ($var12 <= $var8) {
                        $var13 = $var12 - $var3 | 0;
                        $var14 = $var10_0;
                        while ($var14 <= $var7) {
                            a: {
                                $var15 = $var14 - $var5 | 0;
                                if (jl_Math_abs0($var13) == $var11_0 && jl_Math_abs0($var15) == $var11_0) {
                                    if (!ju_Random_nextInt($var2, 2))
                                        break a;
                                    if (!$var10)
                                        break a;
                                }
                                if (!nms_Block_opaqueCubeLookup.data[nms_World_getBlockId($var1, $var12, $var16, $var14)])
                                    nms_World_setBlock($var1, $var12, $var16, $var14, nms_Block_leaves.$blockID);
                            }
                            $var14 = $var14 + 1 | 0;
                        }
                        $var12 = $var12 + 1 | 0;
                    }
                    $var16 = $var16 + 1 | 0;
                }
                $var16 = 0;
                while ($var16 < $var6) {
                    $var10 = $var4 + $var16 | 0;
                    $var10_0 = nms_World_getBlockId($var1, $var3, $var10, $var5);
                    if (!($var10_0 && $var10_0 != nms_Block_leaves.$blockID))
                        nms_World_setBlock($var1, $var3, $var10, $var5, nms_Block_wood.$blockID);
                    $var16 = $var16 + 1 | 0;
                }
                return 1;
            }
            return 0;
        }
    }
    return 0;
}
function nms_WorldGenBigTree() {
    var a = this; nms_WorldGenerator.call(a);
    a.$field_881_b = null;
    a.$worldObj11 = null;
    a.$field_879_d = null;
    a.$field_878_e = 0;
    a.$field_877_f = 0;
    a.$field_876_g = 0.0;
    a.$field_875_h = 0.0;
    a.$field_874_i = 0.0;
    a.$field_873_j = 0.0;
    a.$field_872_k = 0.0;
    a.$field_871_l = 0;
    a.$field_870_m = 0;
    a.$field_869_n = 0;
    a.$field_868_o = null;
}
var nms_WorldGenBigTree_field_882_a = null;
function nms_WorldGenBigTree__init_0() {
    var var_0 = new nms_WorldGenBigTree();
    nms_WorldGenBigTree__init_(var_0);
    return var_0;
}
function nms_WorldGenBigTree__init_($this) {
    var var$1, var$2;
    $this.$field_881_b = new ju_Random;
    var$1 = $rt_createIntArray(3);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    $this.$field_879_d = var$1;
    $this.$field_878_e = 0;
    $this.$field_876_g = 0.618;
    $this.$field_875_h = 1.0;
    $this.$field_874_i = 0.381;
    $this.$field_873_j = 1.0;
    $this.$field_872_k = 1.0;
    $this.$field_871_l = 1;
    $this.$field_870_m = 12;
    $this.$field_869_n = 4;
}
function nms_WorldGenBigTree_func_521_a($this) {
    var $var1, $var2, var$3, $var3, $var4, $var5, $var6, var$8, var$9, $var7, $var8, var$12, $var11, $var13, $var15, $var16, $var17, var$18, $var18, $var19, $var22;
    $this.$field_877_f = $this.$field_878_e * $this.$field_876_g | 0;
    if ($this.$field_877_f >= $this.$field_878_e)
        $this.$field_877_f = $this.$field_878_e - 1 | 0;
    $var1 = 1.382 + jl_Math_pow($this.$field_872_k * $this.$field_878_e / 13.0, 2.0) | 0;
    if ($var1 < 1)
        $var1 = 1;
    $var2 = $rt_createIntMultiArray([4, $rt_imul($var1, $this.$field_878_e)]);
    var$3 = $var2.data;
    $var3 = ($this.$field_879_d.data[1] + $this.$field_878_e | 0) - $this.$field_869_n | 0;
    $var4 = 1;
    $var5 = $this.$field_879_d.data[1] + $this.$field_877_f | 0;
    $var6 = $var3 - $this.$field_879_d.data[1] | 0;
    var$3[0].data[0] = $this.$field_879_d.data[0];
    var$3[0].data[1] = $var3;
    var$3[0].data[2] = $this.$field_879_d.data[2];
    var$3[0].data[3] = $var5;
    var$8 = $var3 + (-1) | 0;
    var$9 = $var5;
    while ($var6 >= 0) {
        $var7 = 0;
        $var8 = nms_WorldGenBigTree_func_528_a($this, $var6);
        if ($var8 < 0.0) {
            var$8 = var$8 + (-1) | 0;
            $var6 = $var6 + (-1) | 0;
        } else {
            var$12 = $var8;
            while ($var7 < $var1) {
                $var11 = $this.$field_873_j * var$12 * (ju_Random_nextFloat($this.$field_881_b) + 0.328);
                $var13 = ju_Random_nextFloat($this.$field_881_b) * 2.0 * 3.14159;
                $var15 = $var11 * jl_Math_sin($var13) + $this.$field_879_d.data[0] + 0.5 | 0;
                $var16 = $var11 * jl_Math_cos($var13) + $this.$field_879_d.data[2] + 0.5 | 0;
                $var17 = $rt_createIntArray(3);
                var$18 = $var17.data;
                var$18[0] = $var15;
                var$18[1] = var$8;
                var$18[2] = $var16;
                $var18 = $rt_createIntArray(3);
                $var19 = $var18.data;
                $var19[0] = $var15;
                $var19[1] = var$8 + $this.$field_869_n | 0;
                $var19[2] = $var16;
                if (nms_WorldGenBigTree_func_524_a($this, $var17, $var18) == (-1)) {
                    $var19 = $rt_createIntArray(3);
                    $var18 = $var19.data;
                    $var18[0] = $this.$field_879_d.data[0];
                    $var18[1] = $this.$field_879_d.data[1];
                    $var18[2] = $this.$field_879_d.data[2];
                    $var22 = jl_Math_sqrt(jl_Math_pow(jl_Math_abs0($this.$field_879_d.data[0] - var$18[0] | 0), 2.0) + jl_Math_pow(jl_Math_abs0($this.$field_879_d.data[2] - var$18[2] | 0), 2.0)) * $this.$field_874_i;
                    if (var$18[1] - $var22 > var$9)
                        $var18[1] = $var5;
                    else
                        $var18[1] = var$18[1] - $var22 | 0;
                    if (nms_WorldGenBigTree_func_524_a($this, $var19, $var17) == (-1)) {
                        var$3[$var4].data[0] = $var15;
                        var$3[$var4].data[1] = var$8;
                        var$3[$var4].data[2] = $var16;
                        var$3[$var4].data[3] = $var18[1];
                        $var4 = $var4 + 1 | 0;
                    }
                }
                $var7 = $var7 + 1 | 0;
            }
            var$8 = var$8 + (-1) | 0;
            $var6 = $var6 + (-1) | 0;
        }
    }
    $this.$field_868_o = $rt_createIntMultiArray([4, $var4]);
    jl_System_arraycopy($var2, 0, $this.$field_868_o, 0, $var4);
}
function nms_WorldGenBigTree_func_523_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var var$7, $var7, $var8, $var9, $var10, $var11, $var12, var$14, $var14;
    var$7 = $var4;
    $var7 = var$7 + 0.618 | 0;
    $var8 = nms_WorldGenBigTree_field_882_a.data[$var5];
    $var9 = nms_WorldGenBigTree_field_882_a.data[$var5 + 3 | 0];
    $var10 = $rt_createIntArray(3).data;
    $var10[0] = $var1;
    $var10[1] = $var2;
    $var10[2] = $var3;
    $var11 = $rt_createIntArray(3).data;
    $var11[0] = 0;
    $var11[1] = 0;
    $var11[2] = 0;
    $var12 =  -$var7;
    $var11[$var5] = $var10[$var5];
    $var5 = $var12;
    while ($var5 <= $var7) {
        $var11[$var8] = $var10[$var8] + $var5 | 0;
        var$14 = $var12;
        while (var$14 <= $var7) {
            if (jl_Math_sqrt(jl_Math_pow(jl_Math_abs0($var5) + 0.5, 2.0) + jl_Math_pow(jl_Math_abs0(var$14) + 0.5, 2.0)) > var$7)
                var$14 = var$14 + 1 | 0;
            else {
                $var11[$var9] = $var10[$var9] + var$14 | 0;
                $var14 = nms_World_getBlockId($this.$worldObj11, $var11[0], $var11[1], $var11[2]);
                if ($var14 && $var14 != 18)
                    var$14 = var$14 + 1 | 0;
                else {
                    nms_World_setBlock($this.$worldObj11, $var11[0], $var11[1], $var11[2], $var6);
                    var$14 = var$14 + 1 | 0;
                }
            }
        }
        $var5 = $var5 + 1 | 0;
    }
}
function nms_WorldGenBigTree_func_528_a($this, $var1) {
    var $var4, $var3;
    if ($var1 < $this.$field_878_e * 0.3)
        return (-1.6180000305175781);
    $var4 = $this.$field_878_e / 2.0;
    $var3 = $this.$field_878_e / 2.0 - $var1;
    if ($var3 !== 0.0)
        $var4 = jl_Math_abs($var3) >= $var4 ? 0.0 : jl_Math_sqrt(jl_Math_pow(jl_Math_abs($var4), 2.0) - jl_Math_pow(jl_Math_abs($var3), 2.0));
    return $var4 * 0.5;
}
function nms_WorldGenBigTree_func_526_b($this, $var1) {
    return $var1 >= 0 && $var1 < $this.$field_869_n ? ($var1 && $var1 != ($this.$field_869_n - 1 | 0) ? 3.0 : 2.0) : (-1.0);
}
function nms_WorldGenBigTree_func_520_a($this, $var1, $var2, $var3) {
    var $var5, var$5;
    $var5 = $var2 + $this.$field_869_n | 0;
    var$5 = $var2;
    while (var$5 < $var5) {
        nms_WorldGenBigTree_func_523_a($this, $var1, var$5, $var3, nms_WorldGenBigTree_func_526_b($this, var$5 - $var2 | 0), 1, 18);
        var$5 = var$5 + 1 | 0;
    }
}
function nms_WorldGenBigTree_func_522_a($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, var$7, $var7, $var8, $var9, $var10, $var12, $var15, $var16, var$15, var$16;
    $var4 = $rt_createIntArray(3).data;
    $var4[0] = 0;
    $var4[1] = 0;
    $var4[2] = 0;
    $var5 = 0;
    $var6 = 0;
    while ($var5 < 3) {
        var$7 = $var1.data;
        $var4[$var5] = $var2.data[$var5] - var$7[$var5] | 0;
        if (jl_Math_abs0($var4[$var5]) > jl_Math_abs0($var4[$var6]))
            $var6 = $var5;
        $var5 = ($var5 + 1 | 0) << 24 >> 24;
    }
    a: {
        if ($var4[$var6]) {
            $var7 = nms_WorldGenBigTree_field_882_a.data[$var6];
            $var8 = nms_WorldGenBigTree_field_882_a.data[$var6 + 3 | 0];
            $var9 = $var4[$var6] <= 0 ? (-1) : 1;
            $var10 = $var4[$var7] / $var4[$var6];
            $var12 = $var4[$var8] / $var4[$var6];
            $var2 = $rt_createIntArray(3).data;
            $var2[0] = 0;
            $var2[1] = 0;
            $var2[2] = 0;
            $var15 = 0;
            $var16 = $var4[$var6] + $var9 | 0;
            while (true) {
                if ($var15 == $var16)
                    break a;
                $var4 = $var1.data;
                $var2[$var6] = nms_MathHelper_floor_double(($var4[$var6] + $var15 | 0) + 0.5);
                var$15 = $var4[$var7];
                var$16 = $var15;
                $var2[$var7] = nms_MathHelper_floor_double(var$15 + var$16 * $var10 + 0.5);
                $var2[$var8] = nms_MathHelper_floor_double($var4[$var8] + var$16 * $var12 + 0.5);
                nms_World_setBlock($this.$worldObj11, $var2[0], $var2[1], $var2[2], $var3);
                $var15 = $var15 + $var9 | 0;
            }
        }
    }
}
function nms_WorldGenBigTree_func_518_b($this) {
    var $var1, $var2;
    $var1 = 0;
    $var2 = $this.$field_868_o.data.length;
    while ($var1 < $var2) {
        nms_WorldGenBigTree_func_520_a($this, $this.$field_868_o.data[$var1].data[0], $this.$field_868_o.data[$var1].data[1], $this.$field_868_o.data[$var1].data[2]);
        $var1 = $var1 + 1 | 0;
    }
}
function nms_WorldGenBigTree_func_527_c($this, $var1) {
    return $var1 < $this.$field_878_e * 0.2 ? 0 : 1;
}
function nms_WorldGenBigTree_func_529_c($this) {
    var $var1, $var2, $var3, $var4, $var5, var$6, $var6, var$8;
    $var1 = $this.$field_879_d.data[0];
    $var2 = $this.$field_879_d.data[1];
    $var3 = $this.$field_879_d.data[1] + $this.$field_877_f | 0;
    $var4 = $this.$field_879_d.data[2];
    $var5 = $rt_createIntArray(3);
    var$6 = $var5.data;
    var$6[0] = $var1;
    var$6[1] = $var2;
    var$6[2] = $var4;
    $var6 = $rt_createIntArray(3);
    var$8 = $var6.data;
    var$8[0] = $var1;
    var$8[1] = $var3;
    var$8[2] = $var4;
    nms_WorldGenBigTree_func_522_a($this, $var5, $var6, 17);
    if ($this.$field_871_l == 2) {
        var$6[0] = var$6[0] + 1 | 0;
        var$8[0] = var$8[0] + 1 | 0;
        nms_WorldGenBigTree_func_522_a($this, $var5, $var6, 17);
        var$6[2] = var$6[2] + 1 | 0;
        var$8[2] = var$8[2] + 1 | 0;
        nms_WorldGenBigTree_func_522_a($this, $var5, $var6, 17);
        var$6[0] = var$6[0] + (-1) | 0;
        var$8[0] = var$8[0] + (-1) | 0;
        nms_WorldGenBigTree_func_522_a($this, $var5, $var6, 17);
    }
}
function nms_WorldGenBigTree_func_525_d($this) {
    var $var1, $var2, $var3, var$4, $var4, $var5, var$7;
    $var1 = 0;
    $var2 = $this.$field_868_o.data.length;
    $var3 = $rt_createIntArray(3);
    var$4 = $var3.data;
    var$4[0] = $this.$field_879_d.data[0];
    var$4[1] = $this.$field_879_d.data[1];
    var$4[2] = $this.$field_879_d.data[2];
    while ($var1 < $var2) {
        $var4 = $this.$field_868_o.data[$var1].data;
        $var5 = $rt_createIntArray(3);
        var$7 = $var5.data;
        var$7[0] = $var4[0];
        var$7[1] = $var4[1];
        var$7[2] = $var4[2];
        var$4[1] = $var4[3];
        if (nms_WorldGenBigTree_func_527_c($this, var$4[1] - $this.$field_879_d.data[1] | 0))
            nms_WorldGenBigTree_func_522_a($this, $var3, $var5, 17);
        $var1 = $var1 + 1 | 0;
    }
}
function nms_WorldGenBigTree_func_524_a($this, $var1, $var2) {
    var var$3, $var4, $var5, $var3, $var6, $var7, $var8, $var9, $var11, $var14, $var15, var$14, $var13, var$16, var$17, $var16;
    var$3 = $rt_createIntArray(3).data;
    var$3[0] = 0;
    var$3[1] = 0;
    var$3[2] = 0;
    $var4 = 0;
    $var5 = 0;
    while ($var4 < 3) {
        $var3 = $var1.data;
        var$3[$var4] = $var2.data[$var4] - $var3[$var4] | 0;
        if (jl_Math_abs0(var$3[$var4]) > jl_Math_abs0(var$3[$var5]))
            $var5 = $var4;
        $var4 = ($var4 + 1 | 0) << 24 >> 24;
    }
    if (!var$3[$var5])
        return (-1);
    $var6 = nms_WorldGenBigTree_field_882_a.data[$var5];
    $var7 = nms_WorldGenBigTree_field_882_a.data[$var5 + 3 | 0];
    $var8 = var$3[$var5] <= 0 ? (-1) : 1;
    $var9 = var$3[$var6] / var$3[$var5];
    $var11 = var$3[$var7] / var$3[$var5];
    $var2 = $rt_createIntArray(3).data;
    $var2[0] = 0;
    $var2[1] = 0;
    $var2[2] = 0;
    $var14 = 0;
    $var15 = var$3[$var5] + $var8 | 0;
    a: {
        while (true) {
            var$14 = $rt_compare($var14, $var15);
            if (!var$14)
                break a;
            $var13 = $var1.data;
            $var2[$var5] = $var13[$var5] + $var14 | 0;
            var$16 = $var13[$var6];
            var$17 = $var14;
            $var2[$var6] = var$16 + var$17 * $var9 | 0;
            $var2[$var7] = $var13[$var7] + var$17 * $var11 | 0;
            $var16 = nms_World_getBlockId($this.$worldObj11, $var2[0], $var2[1], $var2[2]);
            if ($var16 && $var16 != 18)
                break;
            $var14 = $var14 + $var8 | 0;
        }
    }
    return var$14 ? jl_Math_abs0($var14) : (-1);
}
function nms_WorldGenBigTree_func_519_e($this) {
    var $var1, var$2, $var2, var$4, $var3, $var4;
    $var1 = $rt_createIntArray(3);
    var$2 = $var1.data;
    var$2[0] = $this.$field_879_d.data[0];
    var$2[1] = $this.$field_879_d.data[1];
    var$2[2] = $this.$field_879_d.data[2];
    $var2 = $rt_createIntArray(3);
    var$4 = $var2.data;
    var$4[0] = $this.$field_879_d.data[0];
    var$4[1] = ($this.$field_879_d.data[1] + $this.$field_878_e | 0) - 1 | 0;
    var$4[2] = $this.$field_879_d.data[2];
    $var3 = nms_World_getBlockId($this.$worldObj11, $this.$field_879_d.data[0], $this.$field_879_d.data[1] - 1 | 0, $this.$field_879_d.data[2]);
    if ($var3 != 2 && $var3 != 3)
        return 0;
    $var4 = nms_WorldGenBigTree_func_524_a($this, $var1, $var2);
    if ($var4 == (-1))
        return 1;
    if ($var4 < 6)
        return 0;
    $this.$field_878_e = $var4;
    return 1;
}
function nms_WorldGenBigTree_func_517_a($this, $var1, $var3, $var5) {
    $this.$field_870_m = $var1 * 12.0 | 0;
    if ($var1 > 0.5)
        $this.$field_869_n = 5;
    $this.$field_873_j = $var3;
    $this.$field_872_k = $var5;
}
function nms_WorldGenBigTree_generate($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$worldObj11 = $var1;
    ju_Random_nextLong($var2);
    $this.$field_879_d.data[0] = $var3;
    $this.$field_879_d.data[1] = $var4;
    $this.$field_879_d.data[2] = $var5;
    if (!$this.$field_878_e)
        $this.$field_878_e = 5 + ju_Random_nextInt($this.$field_881_b, $this.$field_870_m) | 0;
    if (!nms_WorldGenBigTree_func_519_e($this))
        return 0;
    nms_WorldGenBigTree_func_521_a($this);
    nms_WorldGenBigTree_func_518_b($this);
    nms_WorldGenBigTree_func_529_c($this);
    nms_WorldGenBigTree_func_525_d($this);
    return 1;
}
function nms_WorldGenBigTree__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createByteArray(6);
    var$2 = var$1.data;
    var$2[0] = 2;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 1;
    var$2[4] = 2;
    var$2[5] = 1;
    nms_WorldGenBigTree_field_882_a = var$1;
}
function nms_RedstoneUpdateInfo() {
    var a = this; jl_Object.call(a);
    a.$x = 0;
    a.$y = 0;
    a.$z0 = 0;
    a.$updateTime = Long_ZERO;
}
function nms_EnumSkyBlock() {
    jl_Enum.call(this);
    this.$field_1722_c = 0;
}
var nms_EnumSkyBlock_Sky = null;
var nms_EnumSkyBlock_Block = null;
var nms_EnumSkyBlock_$VALUES = null;
function nms_EnumSkyBlock__init_(var_0, var_1, var_2) {
    var var_3 = new nms_EnumSkyBlock();
    nms_EnumSkyBlock__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_EnumSkyBlock__init_0($this, var$1, var$2, $var3) {
    jl_Enum__init_0($this, var$1, var$2);
    $this.$field_1722_c = $var3;
}
function nms_EnumSkyBlock__clinit_() {
    var var$1, var$2;
    nms_EnumSkyBlock_Sky = nms_EnumSkyBlock__init_($rt_s(989), 0, 15);
    nms_EnumSkyBlock_Block = nms_EnumSkyBlock__init_($rt_s(990), 1, 0);
    var$1 = $rt_createArray(nms_EnumSkyBlock, 2);
    var$2 = var$1.data;
    var$2[0] = nms_EnumSkyBlock_Sky;
    var$2[1] = nms_EnumSkyBlock_Block;
    nms_EnumSkyBlock_$VALUES = var$1;
}
function nms_IChunkLoader() {
}
function nms_ChunkLoader() {
    var a = this; jl_Object.call(a);
    a.$saveDir = null;
    a.$createIfNecessary = 0;
}
function nms_ChunkLoader__init_(var_0, var_1) {
    var var_2 = new nms_ChunkLoader();
    nms_ChunkLoader__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_ChunkLoader__init_0($this, $var1, $var2) {
    $this.$saveDir = $var1;
    $this.$createIfNecessary = $var2;
}
function nms_ChunkLoader_chunkFileForXZ($this, $var1, $var2) {
    var $var4, $var3, $var6;
    $var4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var4);
    $var3 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var4, $rt_s(991)), jl_Integer_toString($var1, 36)), $rt_s(992)), jl_Integer_toString($var2, 36)), $rt_s(993)));
    $var4 = jl_Integer_toString($var1 & 63, 36);
    jl_Integer_toString($var2 & 63, 36);
    $var6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($var6);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($var6, $this.$saveDir), $rt_s(14)), $var4), $rt_s(14)), $var3));
}
function nms_ChunkLoader_loadChunk($this, $var1, $var2, $var3) {
    var $var4, $var6, $var8, $var7, $$je;
    $var4 = nms_ChunkLoader_chunkFileForXZ($this, $var2, $var3);
    if (nlea_EaglerAdapterImpl2_readFile($var4) !== null) {
        a: {
            b: {
                try {
                    $var6 = nms_CompressedStreamTools_func_1138_a(ji_ByteArrayInputStream__init_(nlea_EaglerAdapterImpl2_readFile($var4)));
                    if (nms_NBTTagCompound_hasKey($var6, $rt_s(994)))
                        break b;
                    ji_PrintStream_println(jl_System_out(), jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(995)), $var2), $rt_s(702)), $var3), $rt_s(996))));
                    $var1 = null;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $var8 = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return $var1;
            }
            c: {
                try {
                    if (nms_NBTTagCompound_hasKey(nms_NBTTagCompound_getCompoundTag($var6, $rt_s(994)), $rt_s(997)))
                        break c;
                    ji_PrintStream_println(jl_System_out(), jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(995)), $var2), $rt_s(702)), $var3), $rt_s(998))));
                    $var1 = null;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $var8 = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return $var1;
            }
            d: {
                try {
                    $var7 = nms_ChunkLoader_loadChunkIntoWorldFromCompound($var1, nms_NBTTagCompound_getCompoundTag($var6, $rt_s(994)));
                    if (nms_Chunk_isAtLocation($var7, $var2, $var3))
                        break d;
                    ji_PrintStream_println(jl_System_out(), jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder__init_0(), $rt_s(995)), $var2), $rt_s(702)), $var3), $rt_s(999)), $var2), $rt_s(311)), $var3),
                    $rt_s(1000)), $var7.$xPosition0), $rt_s(311)), $var7.$zPosition), $rt_s(34))));
                    nms_NBTTagCompound_setInteger($var6, $rt_s(1001), $var2);
                    nms_NBTTagCompound_setInteger($var6, $rt_s(1002), $var3);
                    $var7 = nms_ChunkLoader_loadChunkIntoWorldFromCompound($var1, nms_NBTTagCompound_getCompoundTag($var6, $rt_s(994)));
                    break d;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $var8 = $$je;
                        break a;
                    } else {
                        throw $$e;
                    }
                }
            }
            return $var7;
        }
        jl_Throwable_printStackTrace0($var8);
    }
    return null;
}
function nms_ChunkLoader_saveChunk($this, $var1, $var2) {
    var $var3, $var4, $var5, $var6, $var7, $var8, $$je;
    nms_World_func_663_l($var1);
    $var3 = nms_ChunkLoader_chunkFileForXZ($this, $var2.$xPosition0, $var2.$zPosition);
    if (nlea_EaglerAdapterImpl2_readFile($var3) !== null)
        $var1.$sizeOnDisk = Long_sub($var1.$sizeOnDisk, Long_fromInt(nlea_EaglerAdapterImpl2_getFileSize($var3)));
    a: {
        try {
            $var4 = jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_0(), $this.$saveDir), $rt_s(1003)));
            $var5 = ji_ByteArrayOutputStream__init_0();
            $var6 = nms_NBTTagCompound__init_0();
            $var7 = nms_NBTTagCompound__init_0();
            nms_NBTTagCompound_setTag($var6, $rt_s(994), $var7);
            nms_ChunkLoader_storeChunkInCompound($this, $var2, $var1, $var7);
            nms_CompressedStreamTools_writeGzippedCompoundToOutputStream($var6, $var5);
            ji_OutputStream_flush($var5);
            nlea_EaglerAdapterImpl2_writeFile($var4, ji_ByteArrayOutputStream_toByteArray($var5));
            ji_OutputStream_close($var5);
            if (nlea_EaglerAdapterImpl2_readFile($var3) !== null)
                nlea_EaglerAdapterImpl2_deleteFile($var3);
            nlea_EaglerAdapterImpl2_renameFile($var4, $var3);
            $var1.$sizeOnDisk = Long_add($var1.$sizeOnDisk, Long_fromInt(nlea_EaglerAdapterImpl2_getFileSize($var3)));
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $var8 = $$je;
            } else {
                throw $$e;
            }
        }
        jl_Throwable_printStackTrace0($var8);
    }
}
function nms_ChunkLoader_storeChunkInCompound($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, $var8, $var9, $var10;
    nms_World_func_663_l($var2);
    nms_NBTTagCompound_setInteger($var3, $rt_s(1001), $var1.$xPosition0);
    nms_NBTTagCompound_setInteger($var3, $rt_s(1002), $var1.$zPosition);
    nms_NBTTagCompound_setLong($var3, $rt_s(1004), $var2.$worldTime);
    nms_NBTTagCompound_setByteArray($var3, $rt_s(997), $var1.$blocks0);
    nms_NBTTagCompound_setByteArray($var3, $rt_s(439), $var1.$data3.$data4);
    nms_NBTTagCompound_setByteArray($var3, $rt_s(1005), $var1.$skylightMap.$data4);
    nms_NBTTagCompound_setByteArray($var3, $rt_s(1006), $var1.$blocklightMap.$data4);
    nms_NBTTagCompound_setByteArray($var3, $rt_s(1007), $var1.$heightMap);
    nms_NBTTagCompound_setBoolean($var3, $rt_s(1008), $var1.$isTerrainPopulated);
    $var1.$hasEntities = 0;
    $var4 = nms_NBTTagList__init_0();
    $var5 = 0;
    while ($var5 < $var1.$entities.data.length) {
        $var6 = ju_AbstractList_iterator($var1.$entities.data[$var5]);
        while (ju_AbstractList$1_hasNext($var6)) {
            $var7 = ju_AbstractList$1_next($var6);
            $var1.$hasEntities = 1;
            $var8 = nms_NBTTagCompound__init_0();
            if (nms_Entity_func_358_c($var7, $var8))
                nms_NBTTagList_setTag($var4, $var8);
        }
        $var5 = $var5 + 1 | 0;
    }
    nms_NBTTagCompound_setTag($var3, $rt_s(1009), $var4);
    $var9 = nms_NBTTagList__init_0();
    $var6 = ju_HashMap$2_iterator(ju_HashMap_values($var1.$chunkTileEntityMap));
    while (ju_HashMap$AbstractMapIterator_hasNext($var6)) {
        $var10 = ju_HashMap$ValueIterator_next($var6);
        $var8 = nms_NBTTagCompound__init_0();
        $var10.$writeToNBT($var8);
        nms_NBTTagList_setTag($var9, $var8);
    }
    nms_NBTTagCompound_setTag($var3, $rt_s(1010), $var9);
}
function nms_ChunkLoader_loadChunkIntoWorldFromCompound($var0, $var1) {
    var $var4, $var5, $var6, $var7, $var8, $var8_0, $var10, var$10, $var9, $var11, $var12, $var9_0, $$je;
    $var4 = nms_Chunk__init_0($var0, nms_NBTTagCompound_getInteger($var1, $rt_s(1001)), nms_NBTTagCompound_getInteger($var1, $rt_s(1002)));
    $var4.$blocks0 = nms_NBTTagCompound_getByteArray($var1, $rt_s(997));
    $var4.$data3 = nms_NibbleArray__init_1(nms_NBTTagCompound_getByteArray($var1, $rt_s(439)));
    $var4.$skylightMap = nms_NibbleArray__init_1(nms_NBTTagCompound_getByteArray($var1, $rt_s(1005)));
    $var4.$blocklightMap = nms_NibbleArray__init_1(nms_NBTTagCompound_getByteArray($var1, $rt_s(1006)));
    $var4.$heightMap = nms_NBTTagCompound_getByteArray($var1, $rt_s(1007));
    $var4.$isTerrainPopulated = nms_NBTTagCompound_getBoolean($var1, $rt_s(1008));
    if (!nms_NibbleArray_isValid($var4.$data3))
        $var4.$data3 = nms_NibbleArray__init_0($var4.$blocks0.data.length);
    if (!($var4.$heightMap !== null && nms_NibbleArray_isValid($var4.$skylightMap))) {
        $var4.$heightMap = $rt_createByteArray(256);
        $var4.$skylightMap = nms_NibbleArray__init_0($var4.$blocks0.data.length);
        nms_Chunk_func_1024_c($var4);
    }
    if (!nms_NibbleArray_isValid($var4.$blocklightMap))
        $var4.$blocklightMap = nms_NibbleArray__init_0($var4.$blocks0.data.length);
    a: {
        $var5 = nms_NBTTagCompound_getTagList($var1, $rt_s(1009));
        if ($var5 !== null) {
            $var6 = 0;
            while (true) {
                if ($var6 >= nms_NBTTagList_tagCount($var5))
                    break a;
                $var7 = nms_NBTTagList_tagAt($var5, $var6);
                $var8 = null;
                b: {
                    try {
                        $var8_0 = $var8;
                        $var10 = ju_HashMap_get(nms_EntityList_stringToClassMapping, nms_NBTTagCompound_getString($var7, $rt_s(292)));
                        if ($var10 !== null) {
                            $var8_0 = $var8;
                            var$10 = $rt_createArray(jl_Class, 1);
                            var$10.data[0] = $rt_cls(nms_World);
                            $var9 = jl_Class_getConstructor($var10, var$10);
                            var$10 = $rt_createArray(jl_Object, 1);
                            var$10.data[0] = $var0;
                            $var8 = jlr_Constructor_newInstance($var9, var$10);
                            $var8_0 = $var8;
                        }
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $var9 = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    jl_Throwable_printStackTrace0($var9);
                    $var8 = $var8_0;
                }
                if ($var8 !== null)
                    nms_Entity_readFromNBT($var8, $var7);
                else {
                    $var9 = jl_System_out();
                    $var10 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_($var10);
                    ji_PrintStream_println($var9, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($var10, $rt_s(1011)), nms_NBTTagCompound_getString($var7, $rt_s(292)))));
                }
                $var4.$hasEntities = 1;
                if ($var8 !== null)
                    nms_Chunk_addEntity($var4, $var8);
                $var6 = $var6 + 1 | 0;
            }
        }
    }
    c: {
        $var10 = nms_NBTTagCompound_getTagList($var1, $rt_s(1010));
        if ($var10 !== null) {
            $var11 = 0;
            while (true) {
                if ($var11 >= nms_NBTTagList_tagCount($var10))
                    break c;
                $var12 = nms_NBTTagList_tagAt($var10, $var11);
                $var9_0 = null;
                d: {
                    try {
                        $var9 = $var9_0;
                        $var0 = ju_HashMap_get(nms_TileEntity_nameToClassMap, nms_NBTTagCompound_getString($var12, $rt_s(292)));
                        if ($var0 !== null) {
                            $var9 = $var9_0;
                            $var9_0 = jl_Class_newInstance($var0);
                            $var9 = $var9_0;
                        }
                        break d;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            $var0 = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    jl_Throwable_printStackTrace0($var0);
                    $var9_0 = $var9;
                }
                if ($var9_0 !== null)
                    $var9_0.$readFromNBT($var12);
                else {
                    $var0 = jl_System_out();
                    $var1 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_($var1);
                    ji_PrintStream_println($var0, jl_AbstractStringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append($var1, $rt_s(1012)), nms_NBTTagCompound_getString($var12, $rt_s(292)))));
                }
                if ($var9_0 !== null)
                    nms_Chunk_func_1001_a($var4, $var9_0);
                $var11 = $var11 + 1 | 0;
            }
        }
    }
    return $var4;
}
function nms_ChunkLoader_func_814_a($this) {
    return;
}
function nms_ChunkLoader_saveExtraData($this) {
    return;
}
function nms_ChunkLoader_saveExtraChunkData($this, $var1, $var2) {
    return;
}
function nms_ChunkProviderGenerate() {
    var a = this; jl_Object.call(a);
    a.$rand4 = null;
    a.$field_912_k = null;
    a.$field_911_l = null;
    a.$field_910_m = null;
    a.$field_909_n = null;
    a.$field_908_o = null;
    a.$field_922_a = null;
    a.$field_921_b = null;
    a.$field_920_c = null;
    a.$worldObj7 = null;
    a.$field_4180_q = null;
    a.$field_905_r = null;
    a.$field_904_s = null;
    a.$field_903_t = null;
    a.$field_902_u = null;
    a.$biomesForGeneration = null;
    a.$field_4185_d = null;
    a.$field_4184_e = null;
    a.$field_4183_f = null;
    a.$field_4182_g = null;
    a.$field_4181_h = null;
    a.$field_914_i = null;
    a.$field_4178_w = null;
}
function nms_ChunkProviderGenerate_generateTerrain($this, $var1, $var2, $var3, $var4, $var5) {
    var $var11, $var12, $var13, $var7, $var16, $var44, $var18, $var45, $var20, $var22, $var24, $var26, $var28, $var30, $var32, $var39, $var41, $var43, $var33, var$25, var$26, $var55, $var50, $var52, $var46, $var53;
    $this.$field_4180_q = nms_ChunkProviderGenerate_func_4061_a($this, $this.$field_4180_q, $var1 * 4 | 0, 0, $var2 * 4 | 0, 5, 17, 5);
    $var11 = 0;
    while ($var11 < 4) {
        $var12 = 0;
        while ($var12 < 4) {
            $var13 = 0;
            while ($var13 < 16) {
                $var4 = $this.$field_4180_q.data;
                $var1 = (($var11 + 0 | 0) * 5 | 0) + $var12 | 0;
                $var7 = (($var1 + 0 | 0) * 17 | 0) + $var13 | 0;
                $var16 = $var4[$var7 + 0 | 0];
                $var4 = $this.$field_4180_q.data;
                $var44 = (($var1 + 1 | 0) * 17 | 0) + $var13 | 0;
                $var18 = $var4[$var44 + 0 | 0];
                $var4 = $this.$field_4180_q.data;
                $var45 = (($var11 + 1 | 0) * 5 | 0) + $var12 | 0;
                $var1 = (($var45 + 0 | 0) * 17 | 0) + $var13 | 0;
                $var20 = $var4[$var1 + 0 | 0];
                $var4 = $this.$field_4180_q.data;
                $var45 = (($var45 + 1 | 0) * 17 | 0) + $var13 | 0;
                $var22 = $var4[$var45 + 0 | 0];
                $var24 = ($this.$field_4180_q.data[$var7 + 1 | 0] - $var16) * 0.125;
                $var26 = ($this.$field_4180_q.data[$var44 + 1 | 0] - $var18) * 0.125;
                $var28 = ($this.$field_4180_q.data[$var1 + 1 | 0] - $var20) * 0.125;
                $var30 = ($this.$field_4180_q.data[$var45 + 1 | 0] - $var22) * 0.125;
                $var32 = 0;
                while ($var32 < 8) {
                    $var39 = ($var20 - $var16) * 0.25;
                    $var41 = ($var22 - $var18) * 0.25;
                    $var43 = 0;
                    $var33 = $var16;
                    var$25 = $var18;
                    while ($var43 < 4) {
                        $var2 = $var43 + ($var11 * 4 | 0) | 0;
                        $var1 = $var2 << 11;
                        var$26 = $var12 * 4 | 0;
                        $var1 = $var1 | (0 + var$26 | 0) << 7;
                        $var55 = ($var13 * 8 | 0) + $var32 | 0;
                        $var44 = $var1 | $var55;
                        $var50 = (var$25 - $var33) * 0.25;
                        $var52 = 0;
                        var$26 = ($var2 * 16 | 0) + var$26 | 0;
                        $var7 = $rt_compare($var55, 64);
                        $var2 = $rt_compare($var55, 63);
                        $var46 = $var33;
                        while ($var52 < 4) {
                            $var53 = $var5.data[var$26 + $var52 | 0];
                            $var55 = 0;
                            if ($var7 < 0) {
                                if ($var53 < 0.5 && $var2 >= 0) {
                                    nms_Block_$callClinit();
                                    $var55 = nms_Block_blockIce.$blockID;
                                } else {
                                    nms_Block_$callClinit();
                                    $var55 = nms_Block_waterMoving.$blockID;
                                }
                            }
                            if ($var46 > 0.0) {
                                nms_Block_$callClinit();
                                $var55 = nms_Block_stone.$blockID;
                            }
                            $var3.data[$var44] = $var55 << 24 >> 24;
                            $var44 = $var44 + 128 | 0;
                            $var46 = $var46 + $var50;
                            $var52 = $var52 + 1 | 0;
                        }
                        $var33 = $var33 + $var39;
                        var$25 = var$25 + $var41;
                        $var43 = $var43 + 1 | 0;
                    }
                    $var16 = $var16 + $var24;
                    $var18 = $var18 + $var26;
                    $var20 = $var20 + $var28;
                    $var22 = $var22 + $var30;
                    $var32 = $var32 + 1 | 0;
                }
                $var13 = $var13 + 1 | 0;
            }
            $var12 = $var12 + 1 | 0;
        }
        $var11 = $var11 + 1 | 0;
    }
}
function nms_ChunkProviderGenerate_replaceBlocksForBiome($this, $var1, $var2, $var3, $var4) {
    var var$5, var$6, var$7, var$8, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17, $var18, $var19;
    var$5 = $this.$field_909_n;
    var$6 = $this.$field_905_r;
    var$7 = $var1 * 16 | 0;
    var$8 = $var2 * 16 | 0;
    $this.$field_905_r = nms_NoiseGeneratorOctaves_func_807_a(var$5, var$6, var$7, var$8, 0.0, 16, 16, 1, 0.03125, 0.03125, 1.0);
    $this.$field_904_s = nms_NoiseGeneratorOctaves_func_807_a($this.$field_909_n, $this.$field_904_s, var$8, 109.0134, var$7, 16, 1, 16, 0.03125, 1.0, 0.03125);
    $this.$field_903_t = nms_NoiseGeneratorOctaves_func_807_a($this.$field_908_o, $this.$field_903_t, var$7, var$8, 0.0, 16, 16, 1, 0.0625, 0.0625, 0.0625);
    $var8 = 0;
    while ($var8 < 16) {
        $var9 = 0;
        while ($var9 < 16) {
            var$6 = $var4.data;
            $var2 = ($var8 * 16 | 0) + $var9 | 0;
            $var10 = var$6[$var2];
            var$6 = $this.$field_905_r.data;
            $var1 = $var8 + ($var9 * 16 | 0) | 0;
            $var11 = var$6[$var1] + ju_Random_nextDouble($this.$rand4) * 0.2 <= 0.0 ? 0 : 1;
            $var12 = $this.$field_904_s.data[$var1] + ju_Random_nextDouble($this.$rand4) * 0.2 <= 3.0 ? 0 : 1;
            $var13 = $this.$field_903_t.data[$var1] / 3.0 + 3.0 + ju_Random_nextDouble($this.$rand4) * 0.25 | 0;
            $var14 = (-1);
            $var15 = $var10.$topBlock;
            $var16 = $var10.$fillerBlock;
            $var17 = 127;
            $var2 = $var2 * 128 | 0;
            while ($var17 >= 0) {
                $var18 = $var2 + $var17 | 0;
                if ($var17 <= (0 + ju_Random_nextInt($this.$rand4, 5) | 0)) {
                    var$6 = $var3.data;
                    nms_Block_$callClinit();
                    var$6[$var18] = nms_Block_bedrock.$blockID << 24 >> 24;
                } else {
                    var$6 = $var3.data;
                    $var19 = var$6[$var18];
                    if (!$var19)
                        $var14 = (-1);
                    else {
                        nms_Block_$callClinit();
                        if ($var19 == nms_Block_stone.$blockID) {
                            if ($var14 == (-1)) {
                                if ($var13 <= 0) {
                                    $var15 = 0;
                                    $var16 = nms_Block_stone.$blockID << 24 >> 24;
                                } else if ($var17 >= 60 && $var17 <= 65) {
                                    $var15 = $var10.$topBlock;
                                    $var16 = $var10.$fillerBlock;
                                    if ($var12)
                                        $var15 = 0;
                                    if ($var12)
                                        $var16 = nms_Block_gravel.$blockID << 24 >> 24;
                                    if ($var11)
                                        $var15 = nms_Block_sand.$blockID << 24 >> 24;
                                    if ($var11)
                                        $var16 = nms_Block_sand.$blockID << 24 >> 24;
                                }
                                if ($var17 < 64 && !$var15)
                                    $var15 = nms_Block_waterMoving.$blockID << 24 >> 24;
                                if ($var17 < 63) {
                                    var$6[$var18] = $var16;
                                    $var14 = $var13;
                                } else {
                                    var$6[$var18] = $var15;
                                    $var14 = $var13;
                                }
                            } else if ($var14 > 0) {
                                $var14 = $var14 + (-1) | 0;
                                var$6[$var18] = $var16;
                            }
                        }
                    }
                }
                $var17 = $var17 + (-1) | 0;
            }
            $var9 = $var9 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
}
function nms_ChunkProviderGenerate_provideChunk($this, $var1, $var2) {
    var $var3, $var4, $var5;
    $var3 = $rt_createByteArray(32768);
    $var4 = nms_Chunk__init_($this.$worldObj7, $var3, $var1, $var2);
    $this.$biomesForGeneration = nms_World_func_4075_a($this.$worldObj7).$loadBlockGeneratorData($this.$biomesForGeneration, $var1 * 16 | 0, $var2 * 16 | 0, 16, 16);
    $var5 = nms_World_func_4075_a($this.$worldObj7).$temperature;
    nms_ChunkProviderGenerate_generateTerrain($this, $var1, $var2, $var3, $this.$biomesForGeneration, $var5);
    nms_ChunkProviderGenerate_replaceBlocksForBiome($this, $var1, $var2, $var3, $this.$biomesForGeneration);
    nms_MapGenBase_func_867_a($this.$field_902_u, $this, $this.$worldObj7, $var1, $var2, $var3);
    nms_Chunk_func_1024_c($var4);
    return $var4;
}
function nms_ChunkProviderGenerate_func_4061_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var12, $var13, var$10, var$11, $var29, $var31, $var36, $var14, $var15, $var16, $var17, $var10, var$20, $var18, $var19, var$23, $var21, $var25, $var33, $var38, $var40, $var42, $var44;
    if ($var1 === null)
        $var1 = $rt_createDoubleArray($rt_imul($rt_imul($var5, $var6), $var7));
    $var12 = nms_World_func_4075_a($this.$worldObj7).$temperature;
    $var13 = nms_World_func_4075_a($this.$worldObj7).$humidity;
    $this.$field_4182_g = nms_NoiseGeneratorOctaves_func_4109_a($this.$field_922_a, $this.$field_4182_g, $var2, $var4, $var5, $var7, 1.121, 1.121, 0.5);
    $this.$field_4181_h = nms_NoiseGeneratorOctaves_func_4109_a($this.$field_921_b, $this.$field_4181_h, $var2, $var4, $var5, $var7, 200.0, 200.0, 0.5);
    var$10 = $this.$field_910_m;
    var$11 = $this.$field_4185_d;
    $var29 = $var2;
    $var31 = $var3;
    $var36 = $var4;
    $this.$field_4185_d = nms_NoiseGeneratorOctaves_func_807_a(var$10, var$11, $var29, $var31, $var36, $var5, $var6, $var7, 8.555150000000001, 4.277575000000001, 8.555150000000001);
    $this.$field_4184_e = nms_NoiseGeneratorOctaves_func_807_a($this.$field_912_k, $this.$field_4184_e, $var29, $var31, $var36, $var5, $var6, $var7, 684.412, 684.412, 684.412);
    $this.$field_4183_f = nms_NoiseGeneratorOctaves_func_807_a($this.$field_911_l, $this.$field_4183_f, $var29, $var31, $var36, $var5, $var6, $var7, 684.412, 684.412, 684.412);
    $var14 = 0;
    $var15 = 0;
    $var16 = 16 / $var5 | 0;
    $var17 = 0;
    $var10 = $var6;
    $var4 = $var6 - 4 | 0;
    var$20 = $var10 / 2.0;
    while ($var17 < $var5) {
        $var2 = $rt_imul($var17, $var16);
        $var3 = $var16 / 2 | 0;
        $var18 = $var2 + $var3 | 0;
        $var19 = 0;
        $var18 = $var18 * 16 | 0;
        while ($var19 < $var7) {
            var$23 = $var13.data;
            var$11 = $var12.data;
            $var2 = $var18 + ($rt_imul($var19, $var16) + $var3 | 0) | 0;
            $var21 = var$11[$var2];
            $var25 = 1.0 - var$23[$var2] * $var21;
            $var29 = $var25 * $var25;
            $var29 = 1.0 - $var29 * $var29;
            $var31 = ($this.$field_4182_g.data[$var15] + 256.0) / 512.0 * $var29;
            if ($var31 > 1.0)
                $var31 = 1.0;
            $var29 = $this.$field_4181_h.data[$var15] / 8000.0;
            if ($var29 < 0.0)
                $var29 =  -$var29 * 0.3;
            $var29 = $var29 * 3.0 - 2.0;
            if ($var29 >= 0.0) {
                if ($var29 > 1.0)
                    $var29 = 1.0;
                $var29 = $var29 / 8.0;
            } else {
                $var29 = $var29 / 2.0;
                if ($var29 < (-1.0))
                    $var29 = (-1.0);
                $var29 = $var29 / 1.4 / 2.0;
                $var31 = 0.0;
            }
            if ($var31 < 0.0)
                $var31 = 0.0;
            $var21 = $var31 + 0.5;
            $var31 = var$20 + $var29 * $var10 / 16.0 * 4.0;
            $var15 = $var15 + 1 | 0;
            $var33 = 0;
            while ($var33 < $var6) {
                $var36 = ($var33 - $var31) * 12.0 / $var21;
                if ($var36 < 0.0)
                    $var36 = $var36 * 4.0;
                $var38 = $this.$field_4184_e.data[$var14] / 512.0;
                $var40 = $this.$field_4183_f.data[$var14] / 512.0;
                $var42 = ($this.$field_4185_d.data[$var14] / 10.0 + 1.0) / 2.0;
                if ($var42 >= 0.0)
                    $var38 = $var42 > 1.0 ? $var40 : $var38 + ($var40 - $var38) * $var42;
                $var29 = $var38 - $var36;
                if ($var33 > $var4) {
                    $var44 = ($var33 - $var4 | 0) / 3.0;
                    $var29 = $var29 * (1.0 - $var44) + (-10.0) * $var44;
                }
                $var1.data[$var14] = $var29;
                $var14 = $var14 + 1 | 0;
                $var33 = $var33 + 1 | 0;
            }
            $var19 = $var19 + 1 | 0;
        }
        $var17 = $var17 + 1 | 0;
    }
    return $var1;
}
function nms_ChunkProviderGenerate_populate($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, $var9, $var13, $var14, $var15, $var16, $var24, $var17, $var18, $var19, $var20, var$18, $var21;
    nms_BlockSand_fallInstantly = 1;
    $var4 = $var2 * 16 | 0;
    $var5 = $var3 * 16 | 0;
    $var6 = nms_World_func_4075_a($this.$worldObj7).$func_4073_a($var4 + 16 | 0, $var5 + 16 | 0);
    ju_Random_setSeed($this.$rand4, $this.$worldObj7.$randomSeed);
    $var7 = Long_add(Long_mul(Long_div(ju_Random_nextLong($this.$rand4), Long_fromInt(2)), Long_fromInt(2)), Long_fromInt(1));
    $var9 = Long_add(Long_mul(Long_div(ju_Random_nextLong($this.$rand4), Long_fromInt(2)), Long_fromInt(2)), Long_fromInt(1));
    ju_Random_setSeed($this.$rand4, Long_xor(Long_add(Long_mul(Long_fromInt($var2), $var7), Long_mul(Long_fromInt($var3), $var9)), $this.$worldObj7.$randomSeed));
    if (!ju_Random_nextInt($this.$rand4, 4)) {
        $var13 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var14 = ju_Random_nextInt($this.$rand4, 128);
        $var15 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenLakes;
        nms_Block_$callClinit();
        nms_WorldGenLakes__init_($var1, nms_Block_waterMoving.$blockID);
        nms_WorldGenLakes_generate($var1, $this.$worldObj7, $this.$rand4, $var13, $var14, $var15);
    }
    if (!ju_Random_nextInt($this.$rand4, 8)) {
        $var13 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var14 = ju_Random_nextInt($this.$rand4, ju_Random_nextInt($this.$rand4, 120) + 8 | 0);
        $var15 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        if (!($var14 >= 64 && ju_Random_nextInt($this.$rand4, 10))) {
            $var1 = new nms_WorldGenLakes;
            nms_Block_$callClinit();
            nms_WorldGenLakes__init_($var1, nms_Block_lavaMoving.$blockID);
            nms_WorldGenLakes_generate($var1, $this.$worldObj7, $this.$rand4, $var13, $var14, $var15);
        }
    }
    $var13 = 0;
    while ($var13 < 8) {
        $var14 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 128);
        $var16 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        nms_WorldGenDungeons_generate(nms_WorldGenDungeons__init_0(), $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var13 = $var13 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 10) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 128);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        nms_WorldGenClay_generate(nms_WorldGenClay__init_(32), $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 20) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 128);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var1 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var1, nms_Block_dirt.$blockID, 32);
        nms_WorldGenMinable_generate($var1, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 10) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 128);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var1 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var1, nms_Block_gravel.$blockID, 32);
        nms_WorldGenMinable_generate($var1, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 20) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 128);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var1 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var1, nms_Block_oreCoal.$blockID, 16);
        nms_WorldGenMinable_generate($var1, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 20) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 64);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var24 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var24, nms_Block_oreIron.$blockID, 8);
        nms_WorldGenMinable_generate($var24, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 2) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 32);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var1 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var1, nms_Block_oreGold.$blockID, 8);
        nms_WorldGenMinable_generate($var1, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 8) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 16);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var1 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var1, nms_Block_oreRedstone.$blockID, 7);
        nms_WorldGenMinable_generate($var1, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 1) {
        $var14 = $var4 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var15 = ju_Random_nextInt($this.$rand4, 16);
        $var16 = $var5 + ju_Random_nextInt($this.$rand4, 16) | 0;
        $var1 = new nms_WorldGenMinable;
        nms_Block_$callClinit();
        nms_WorldGenMinable__init_($var1, nms_Block_oreDiamond.$blockID, 7);
        nms_WorldGenMinable_generate($var1, $this.$worldObj7, $this.$rand4, $var14, $var15, $var16);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = (nms_NoiseGeneratorOctaves_func_806_a($this.$field_920_c, $var4 * 0.5, $var5 * 0.5) / 8.0 + ju_Random_nextDouble($this.$rand4) * 4.0 + 4.0) / 3.0 | 0;
    $var14 = 0;
    if (!ju_Random_nextInt($this.$rand4, 10))
        $var14 = 1;
    if ($var6 === nms_MobSpawnerBase_forest)
        $var14 = $var14 + ($var2 + 5 | 0) | 0;
    if ($var6 === nms_MobSpawnerBase_rainforest)
        $var14 = $var14 + ($var2 + 5 | 0) | 0;
    if ($var6 === nms_MobSpawnerBase_seasonalForest)
        $var14 = $var14 + ($var2 + 2 | 0) | 0;
    if ($var6 === nms_MobSpawnerBase_taiga)
        $var14 = $var14 + ($var2 + 5 | 0) | 0;
    if ($var6 === nms_MobSpawnerBase_desert)
        $var14 = $var14 + (-20) | 0;
    if ($var6 === nms_MobSpawnerBase_tundra)
        $var14 = $var14 + (-20) | 0;
    if ($var6 === nms_MobSpawnerBase_plains)
        $var14 = $var14 + (-20) | 0;
    $var24 = nms_WorldGenTrees__init_0();
    if (!ju_Random_nextInt($this.$rand4, 10))
        $var24 = nms_WorldGenBigTree__init_0();
    if ($var6 === nms_MobSpawnerBase_rainforest && !ju_Random_nextInt($this.$rand4, 3))
        $var24 = nms_WorldGenBigTree__init_0();
    $var16 = 0;
    while ($var16 < $var14) {
        $var17 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var18 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = $var24;
        $var1.$func_517_a(1.0, 1.0, 1.0);
        $var1.$generate($this.$worldObj7, $this.$rand4, $var17, nms_World_getHeightValue($this.$worldObj7, $var17, $var18), $var18);
        $var16 = $var16 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 2) {
        $var17 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var18 = ju_Random_nextInt($this.$rand4, 128);
        $var19 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenFlowers;
        nms_Block_$callClinit();
        nms_WorldGenFlowers__init_($var1, nms_Block_plantYellow.$blockID);
        nms_WorldGenFlowers_generate($var1, $this.$worldObj7, $this.$rand4, $var17, $var18, $var19);
        $var2 = $var2 + 1 | 0;
    }
    if (!ju_Random_nextInt($this.$rand4, 2)) {
        $var2 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var17 = ju_Random_nextInt($this.$rand4, 128);
        $var18 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenFlowers;
        nms_Block_$callClinit();
        nms_WorldGenFlowers__init_($var1, nms_Block_plantRed.$blockID);
        nms_WorldGenFlowers_generate($var1, $this.$worldObj7, $this.$rand4, $var2, $var17, $var18);
    }
    if (!ju_Random_nextInt($this.$rand4, 4)) {
        $var2 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var17 = ju_Random_nextInt($this.$rand4, 128);
        $var18 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenFlowers;
        nms_Block_$callClinit();
        nms_WorldGenFlowers__init_($var1, nms_Block_mushroomBrown.$blockID);
        nms_WorldGenFlowers_generate($var1, $this.$worldObj7, $this.$rand4, $var2, $var17, $var18);
    }
    if (!ju_Random_nextInt($this.$rand4, 8)) {
        $var2 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var17 = ju_Random_nextInt($this.$rand4, 128);
        $var18 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenFlowers;
        nms_Block_$callClinit();
        nms_WorldGenFlowers__init_($var1, nms_Block_mushroomRed.$blockID);
        nms_WorldGenFlowers_generate($var1, $this.$worldObj7, $this.$rand4, $var2, $var17, $var18);
    }
    $var2 = 0;
    while ($var2 < 10) {
        $var17 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var18 = ju_Random_nextInt($this.$rand4, 128);
        $var19 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        nms_WorldGenReed_generate(nms_WorldGenReed__init_0(), $this.$worldObj7, $this.$rand4, $var17, $var18, $var19);
        $var2 = $var2 + 1 | 0;
    }
    if (!ju_Random_nextInt($this.$rand4, 32)) {
        $var2 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var17 = ju_Random_nextInt($this.$rand4, 128);
        $var18 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        nms_WorldGenPumpkin_generate(nms_WorldGenPumpkin__init_0(), $this.$worldObj7, $this.$rand4, $var2, $var17, $var18);
    }
    $var2 = 0;
    if ($var6 === nms_MobSpawnerBase_desert)
        $var2 = 10;
    $var17 = 0;
    while ($var17 < $var2) {
        $var18 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var19 = ju_Random_nextInt($this.$rand4, 128);
        $var20 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        nms_WorldGenCactus_generate(nms_WorldGenCactus__init_0(), $this.$worldObj7, $this.$rand4, $var18, $var19, $var20);
        $var17 = $var17 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 50) {
        $var18 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var19 = ju_Random_nextInt($this.$rand4, ju_Random_nextInt($this.$rand4, 120) + 8 | 0);
        $var20 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenLiquids;
        nms_Block_$callClinit();
        nms_WorldGenLiquids__init_($var1, nms_Block_waterStill.$blockID);
        nms_WorldGenLiquids_generate($var1, $this.$worldObj7, $this.$rand4, $var18, $var19, $var20);
        $var2 = $var2 + 1 | 0;
    }
    $var2 = 0;
    while ($var2 < 20) {
        $var18 = ($var4 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var19 = ju_Random_nextInt($this.$rand4, ju_Random_nextInt($this.$rand4, ju_Random_nextInt($this.$rand4, 112) + 8 | 0) + 8 | 0);
        $var20 = ($var5 + ju_Random_nextInt($this.$rand4, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenLiquids;
        nms_Block_$callClinit();
        nms_WorldGenLiquids__init_($var1, nms_Block_lavaStill.$blockID);
        nms_WorldGenLiquids_generate($var1, $this.$worldObj7, $this.$rand4, $var18, $var19, $var20);
        $var2 = $var2 + 1 | 0;
    }
    $var1 = nms_World_func_4075_a($this.$worldObj7);
    var$18 = $this.$field_4178_w;
    $var3 = $var4 + 8 | 0;
    $var14 = $var5 + 8 | 0;
    $this.$field_4178_w = $var1.$getTemperatures(var$18, $var3, $var14, 16, 16);
    $var4 = $var3 + 16 | 0;
    $var5 = $var14 + 16 | 0;
    $var2 = $var3;
    while ($var2 < $var4) {
        $var18 = $var14;
        while ($var18 < $var5) {
            $var19 = $var2 - $var3 | 0;
            $var20 = $var18 - $var14 | 0;
            $var21 = nms_World_func_4083_e($this.$worldObj7, $var2, $var18);
            if ($this.$field_4178_w.data[($var19 * 16 | 0) + $var20 | 0] - ($var21 - 64 | 0) / 64.0 * 0.3 < 0.5 && $var21 > 0 && $var21 < 128 && !nms_World_getBlockId($this.$worldObj7, $var2, $var21, $var18)) {
                $var1 = $this.$worldObj7;
                $var15 = $var21 - 1 | 0;
                if (nms_World_getBlockMaterial($var1, $var2, $var15, $var18).$func_880_c() && nms_World_getBlockMaterial($this.$worldObj7, $var2, $var15, $var18) !== nms_Material_ice) {
                    $var1 = $this.$worldObj7;
                    nms_Block_$callClinit();
                    nms_World_setBlockWithNotify($var1, $var2, $var21, $var18, nms_Block_snow.$blockID);
                }
            }
            $var18 = $var18 + 1 | 0;
        }
        $var2 = $var2 + 1 | 0;
    }
    nms_BlockSand_fallInstantly = 0;
}
function nms_ChunkProviderGenerate_func_532_a($this) {
    return 0;
}
function nms_ChunkProviderHell() {
    var a = this; jl_Object.call(a);
    a.$field_4170_h = null;
    a.$field_4169_i = null;
    a.$field_4168_j = null;
    a.$field_4167_k = null;
    a.$field_4166_l = null;
    a.$field_4165_m = null;
    a.$field_4177_a = null;
    a.$field_4176_b = null;
    a.$field_4164_n = null;
    a.$field_4163_o = null;
    a.$field_4162_p = null;
    a.$field_4161_q = null;
    a.$field_4160_r = null;
    a.$field_4159_s = null;
    a.$field_4175_c = null;
    a.$field_4174_d = null;
    a.$field_4173_e = null;
    a.$field_4172_f = null;
    a.$field_4171_g = null;
}
function nms_ChunkProviderHell_func_4059_a($this, $var1, $var2, $var3) {
    var $var9, $var10, $var11, var$7, $var51, $var14, $var16, $var5, $var42, $var18, $var20, $var22, $var24, $var26, $var28, $var30, $var37, $var39, $var41, $var31, var$24, $var48, $var50, $var12;
    $this.$field_4163_o = nms_ChunkProviderHell_func_4057_a($this, $this.$field_4163_o, $var1 * 4 | 0, 0, $var2 * 4 | 0, 5, 17, 5);
    $var9 = 0;
    while ($var9 < 4) {
        $var10 = 0;
        while ($var10 < 4) {
            $var11 = 0;
            while ($var11 < 16) {
                var$7 = $this.$field_4163_o.data;
                $var2 = (($var9 + 0 | 0) * 5 | 0) + $var10 | 0;
                $var51 = (($var2 + 0 | 0) * 17 | 0) + $var11 | 0;
                $var14 = var$7[$var51 + 0 | 0];
                var$7 = $this.$field_4163_o.data;
                $var1 = (($var2 + 1 | 0) * 17 | 0) + $var11 | 0;
                $var16 = var$7[$var1 + 0 | 0];
                var$7 = $this.$field_4163_o.data;
                $var5 = (($var9 + 1 | 0) * 5 | 0) + $var10 | 0;
                $var42 = (($var5 + 0 | 0) * 17 | 0) + $var11 | 0;
                $var18 = var$7[$var42 + 0 | 0];
                var$7 = $this.$field_4163_o.data;
                $var2 = (($var5 + 1 | 0) * 17 | 0) + $var11 | 0;
                $var20 = var$7[$var2 + 0 | 0];
                $var22 = ($this.$field_4163_o.data[$var51 + 1 | 0] - $var14) * 0.125;
                $var24 = ($this.$field_4163_o.data[$var1 + 1 | 0] - $var16) * 0.125;
                $var26 = ($this.$field_4163_o.data[$var42 + 1 | 0] - $var18) * 0.125;
                $var28 = ($this.$field_4163_o.data[$var2 + 1 | 0] - $var20) * 0.125;
                $var30 = 0;
                while ($var30 < 8) {
                    $var37 = ($var18 - $var14) * 0.25;
                    $var39 = ($var20 - $var16) * 0.25;
                    $var41 = 0;
                    $var31 = $var14;
                    var$24 = $var16;
                    while ($var41 < 4) {
                        $var1 = ($var41 + ($var9 * 4 | 0) | 0) << 11 | (0 + ($var10 * 4 | 0) | 0) << 7;
                        $var2 = ($var11 * 8 | 0) + $var30 | 0;
                        $var42 = $var1 | $var2;
                        $var48 = (var$24 - $var31) * 0.25;
                        $var50 = 0;
                        $var2 = $rt_compare($var2, 32);
                        $var12 = $var31;
                        while ($var50 < 4) {
                            $var51 = 0;
                            if ($var2 < 0) {
                                nms_Block_$callClinit();
                                $var51 = nms_Block_lavaMoving.$blockID;
                            }
                            if ($var12 > 0.0) {
                                nms_Block_$callClinit();
                                $var51 = nms_Block_bloodStone.$blockID;
                            }
                            $var3.data[$var42] = $var51 << 24 >> 24;
                            $var42 = $var42 + 128 | 0;
                            $var12 = $var12 + $var48;
                            $var50 = $var50 + 1 | 0;
                        }
                        $var31 = $var31 + $var37;
                        var$24 = var$24 + $var39;
                        $var41 = $var41 + 1 | 0;
                    }
                    $var14 = $var14 + $var22;
                    $var16 = $var16 + $var24;
                    $var18 = $var18 + $var26;
                    $var20 = $var20 + $var28;
                    $var30 = $var30 + 1 | 0;
                }
                $var11 = $var11 + 1 | 0;
            }
            $var10 = $var10 + 1 | 0;
        }
        $var9 = $var9 + 1 | 0;
    }
}
function nms_ChunkProviderHell_func_4058_b($this, $var1, $var2, $var3) {
    var var$4, var$5, var$6, var$7, $var7, $var8, $var9, $var10, $var11, $var12, $var13, $var14, $var15, $var16, $var17;
    var$4 = $this.$field_4166_l;
    var$5 = $this.$field_4162_p;
    var$6 = $var1 * 16 | 0;
    var$7 = $var2 * 16 | 0;
    $this.$field_4162_p = nms_NoiseGeneratorOctaves_func_807_a(var$4, var$5, var$6, var$7, 0.0, 16, 16, 1, 0.03125, 0.03125, 1.0);
    $this.$field_4161_q = nms_NoiseGeneratorOctaves_func_807_a($this.$field_4166_l, $this.$field_4161_q, var$7, 109.0134, var$6, 16, 1, 16, 0.03125, 1.0, 0.03125);
    $this.$field_4160_r = nms_NoiseGeneratorOctaves_func_807_a($this.$field_4165_m, $this.$field_4160_r, var$6, var$7, 0.0, 16, 16, 1, 0.0625, 0.0625, 0.0625);
    $var7 = 0;
    while ($var7 < 16) {
        $var8 = 0;
        while ($var8 < 16) {
            var$5 = $this.$field_4162_p.data;
            $var2 = $var7 + ($var8 * 16 | 0) | 0;
            $var9 = var$5[$var2] + ju_Random_nextDouble($this.$field_4170_h) * 0.2 <= 0.0 ? 0 : 1;
            $var10 = $this.$field_4161_q.data[$var2] + ju_Random_nextDouble($this.$field_4170_h) * 0.2 <= 0.0 ? 0 : 1;
            $var11 = $this.$field_4160_r.data[$var2] / 3.0 + 3.0 + ju_Random_nextDouble($this.$field_4170_h) * 0.25 | 0;
            $var12 = (-1);
            nms_Block_$callClinit();
            $var13 = nms_Block_bloodStone.$blockID << 24 >> 24;
            $var14 = nms_Block_bloodStone.$blockID << 24 >> 24;
            $var15 = 127;
            while ($var15 >= 0) {
                $var16 = ((($var7 * 16 | 0) + $var8 | 0) * 128 | 0) + $var15 | 0;
                if ($var15 >= (127 - ju_Random_nextInt($this.$field_4170_h, 5) | 0))
                    $var3.data[$var16] = nms_Block_bedrock.$blockID << 24 >> 24;
                else if ($var15 <= (0 + ju_Random_nextInt($this.$field_4170_h, 5) | 0))
                    $var3.data[$var16] = nms_Block_bedrock.$blockID << 24 >> 24;
                else {
                    var$5 = $var3.data;
                    $var17 = var$5[$var16];
                    if (!$var17)
                        $var12 = (-1);
                    else if ($var17 == nms_Block_bloodStone.$blockID) {
                        if ($var12 == (-1)) {
                            if ($var11 <= 0) {
                                $var13 = 0;
                                $var14 = nms_Block_bloodStone.$blockID << 24 >> 24;
                            } else if ($var15 >= 60 && $var15 <= 65) {
                                $var13 = nms_Block_bloodStone.$blockID << 24 >> 24;
                                $var14 = nms_Block_bloodStone.$blockID << 24 >> 24;
                                if ($var10)
                                    $var13 = nms_Block_gravel.$blockID << 24 >> 24;
                                if ($var10)
                                    $var14 = nms_Block_bloodStone.$blockID << 24 >> 24;
                                if ($var9)
                                    $var13 = nms_Block_slowSand.$blockID << 24 >> 24;
                                if ($var9)
                                    $var14 = nms_Block_slowSand.$blockID << 24 >> 24;
                            }
                            if ($var15 < 64 && !$var13)
                                $var13 = nms_Block_lavaMoving.$blockID << 24 >> 24;
                            if ($var15 < 63) {
                                var$5[$var16] = $var14;
                                $var12 = $var11;
                            } else {
                                var$5[$var16] = $var13;
                                $var12 = $var11;
                            }
                        } else if ($var12 > 0) {
                            $var12 = $var12 + (-1) | 0;
                            var$5[$var16] = $var14;
                        }
                    }
                }
                $var15 = $var15 + (-1) | 0;
            }
            $var8 = $var8 + 1 | 0;
        }
        $var7 = $var7 + 1 | 0;
    }
}
function nms_ChunkProviderHell_provideChunk($this, $var1, $var2) {
    var $var3, $var4;
    $var3 = $rt_createByteArray(32768);
    nms_ChunkProviderHell_func_4059_a($this, $var1, $var2, $var3);
    nms_ChunkProviderHell_func_4058_b($this, $var1, $var2, $var3);
    nms_MapGenBase_func_867_a($this.$field_4159_s, $this, $this.$field_4164_n, $var1, $var2, $var3);
    $var4 = nms_Chunk__init_($this.$field_4164_n, $var3, $var1, $var2);
    nms_Chunk_func_1024_c($var4);
    nms_Chunk_func_4143_d($var4);
    return $var4;
}
function nms_ChunkProviderHell_func_4057_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var var$8, $var14, $var19, $var21, $var26, $var12, $var13, $var15, $var34, $var30, $var36, $var23, $var28, $var32;
    if ($var1 === null)
        $var1 = $rt_createDoubleArray($rt_imul($rt_imul($var5, $var6), $var7));
    var$8 = $this.$field_4177_a;
    $var14 = $this.$field_4172_f;
    $var19 = $var2;
    $var21 = $var3;
    $var26 = $var4;
    $this.$field_4172_f = nms_NoiseGeneratorOctaves_func_807_a(var$8, $var14, $var19, $var21, $var26, $var5, 1, $var7, 1.0, 0.0, 1.0);
    $this.$field_4171_g = nms_NoiseGeneratorOctaves_func_807_a($this.$field_4176_b, $this.$field_4171_g, $var19, $var21, $var26, $var5, 1, $var7, 100.0, 0.0, 100.0);
    $this.$field_4175_c = nms_NoiseGeneratorOctaves_func_807_a($this.$field_4167_k, $this.$field_4175_c, $var19, $var21, $var26, $var5, $var6, $var7, 8.555150000000001, 34.2206, 8.555150000000001);
    $this.$field_4174_d = nms_NoiseGeneratorOctaves_func_807_a($this.$field_4169_i, $this.$field_4174_d, $var19, $var21, $var26, $var5, $var6, $var7, 684.412, 2053.236, 684.412);
    $this.$field_4173_e = nms_NoiseGeneratorOctaves_func_807_a($this.$field_4168_j, $this.$field_4173_e, $var19, $var21, $var26, $var5, $var6, $var7, 684.412, 2053.236, 684.412);
    $var12 = 0;
    $var13 = 0;
    $var14 = $rt_createDoubleArray($var6).data;
    $var15 = 0;
    $var34 = $var6;
    $var3 = $var6 - 1 | 0;
    while ($var15 < $var6) {
        $var19 = $var15;
        $var14[$var15] = jl_Math_cos($var19 * 3.141592653589793 * 6.0 / $var34) * 2.0;
        if ($var15 > ($var6 / 2 | 0))
            $var19 = $var3 - $var15 | 0;
        if ($var19 < 4.0) {
            $var30 = 4.0 - $var19;
            $var14[$var15] = $var14[$var15] - $var30 * $var30 * $var30 * 10.0;
        }
        $var15 = $var15 + 1 | 0;
    }
    $var3 = 0;
    $var4 = $var6 - 4 | 0;
    while ($var3 < $var5) {
        $var36 = 0;
        while ($var36 < $var7) {
            $var21 = $this.$field_4171_g.data[$var13] / 8000.0;
            if ($var21 < 0.0)
                $var21 =  -$var21;
            $var30 = $var21 * 3.0 - 3.0;
            $var13 = $var13 + 1 | 0;
            $var23 = 0;
            while ($var23 < $var6) {
                $var26 = $var14[$var23];
                $var28 = $this.$field_4174_d.data[$var12] / 512.0;
                $var30 = $this.$field_4173_e.data[$var12] / 512.0;
                $var32 = ($this.$field_4175_c.data[$var12] / 10.0 + 1.0) / 2.0;
                if ($var32 >= 0.0)
                    $var28 = $var32 > 1.0 ? $var30 : $var28 + ($var30 - $var28) * $var32;
                $var30 = $var28 - $var26;
                if ($var23 > $var4) {
                    $var34 = ($var23 - $var4 | 0) / 3.0;
                    $var30 = $var30 * (1.0 - $var34) + (-10.0) * $var34;
                }
                $var32 = $var23;
                if ($var32 < 0.0) {
                    $var34 = (0.0 - $var32) / 4.0;
                    if ($var34 < 0.0)
                        $var34 = 0.0;
                    if ($var34 > 1.0)
                        $var34 = 1.0;
                    $var30 = $var30 * (1.0 - $var34) + (-10.0) * $var34;
                }
                $var1.data[$var12] = $var30;
                $var12 = $var12 + 1 | 0;
                $var23 = $var23 + 1 | 0;
            }
            $var36 = $var36 + 1 | 0;
        }
        $var3 = $var3 + 1 | 0;
    }
    return $var1;
}
function nms_ChunkProviderHell_populate($this, $var1, $var2, $var3) {
    var $var4, $var5, $var6, $var7, $var8, $var9, $var10;
    nms_BlockSand_fallInstantly = 1;
    $var4 = $var2 * 16 | 0;
    $var5 = $var3 * 16 | 0;
    $var6 = 0;
    while ($var6 < 8) {
        $var7 = ($var4 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var8 = ju_Random_nextInt($this.$field_4170_h, 120) + 4 | 0;
        $var9 = ($var5 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenHellLava;
        nms_Block_$callClinit();
        $var1.$field_4158_a = nms_Block_lavaStill.$blockID;
        nms_WorldGenHellLava_generate($var1, $this.$field_4164_n, $this.$field_4170_h, $var7, $var8, $var9);
        $var6 = $var6 + 1 | 0;
    }
    $var6 = ju_Random_nextInt($this.$field_4170_h, ju_Random_nextInt($this.$field_4170_h, 10) + 1 | 0) + 1 | 0;
    $var7 = 0;
    while ($var7 < $var6) {
        $var8 = ($var4 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var9 = ju_Random_nextInt($this.$field_4170_h, 120) + 4 | 0;
        $var10 = ($var5 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        nms_WorldGenFire_generate(new nms_WorldGenFire, $this.$field_4164_n, $this.$field_4170_h, $var8, $var9, $var10);
        $var7 = $var7 + 1 | 0;
    }
    $var7 = ju_Random_nextInt($this.$field_4170_h, ju_Random_nextInt($this.$field_4170_h, 10) + 1 | 0);
    $var6 = 0;
    while ($var6 < $var7) {
        $var8 = ($var4 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var9 = ju_Random_nextInt($this.$field_4170_h, 120) + 4 | 0;
        $var10 = ($var5 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        nms_WorldGenLightStone1_generate(new nms_WorldGenLightStone1, $this.$field_4164_n, $this.$field_4170_h, $var8, $var9, $var10);
        $var6 = $var6 + 1 | 0;
    }
    $var7 = 0;
    while ($var7 < 10) {
        $var8 = ($var4 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var9 = ju_Random_nextInt($this.$field_4170_h, 128);
        $var10 = ($var5 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        nms_WorldGenLightStone2_generate(new nms_WorldGenLightStone2, $this.$field_4164_n, $this.$field_4170_h, $var8, $var9, $var10);
        $var7 = $var7 + 1 | 0;
    }
    if (!ju_Random_nextInt($this.$field_4170_h, 1)) {
        $var2 = ($var4 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var8 = ju_Random_nextInt($this.$field_4170_h, 128);
        $var9 = ($var5 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenFlowers;
        nms_Block_$callClinit();
        nms_WorldGenFlowers__init_($var1, nms_Block_mushroomBrown.$blockID);
        nms_WorldGenFlowers_generate($var1, $this.$field_4164_n, $this.$field_4170_h, $var2, $var8, $var9);
    }
    if (!ju_Random_nextInt($this.$field_4170_h, 1)) {
        $var2 = ($var4 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var8 = ju_Random_nextInt($this.$field_4170_h, 128);
        $var9 = ($var5 + ju_Random_nextInt($this.$field_4170_h, 16) | 0) + 8 | 0;
        $var1 = new nms_WorldGenFlowers;
        nms_Block_$callClinit();
        nms_WorldGenFlowers__init_($var1, nms_Block_mushroomRed.$blockID);
        nms_WorldGenFlowers_generate($var1, $this.$field_4164_n, $this.$field_4170_h, $var2, $var8, $var9);
    }
    nms_BlockSand_fallInstantly = 0;
}
function nms_ChunkProviderHell_func_532_a($this) {
    return 0;
}
function nms_MinecartTrackLogic() {
    var a = this; jl_Object.call(a);
    a.$worldObj12 = null;
    a.$field_1165_c = 0;
    a.$field_1164_d = 0;
    a.$field_1163_e = 0;
    a.$field_1162_f = 0;
    a.$field_1161_g = null;
    a.$field_1160_a = null;
}
function nms_MinecartTrackLogic__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_MinecartTrackLogic();
    nms_MinecartTrackLogic__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_MinecartTrackLogic__init_0($this, $var1, $var2, $var3, $var4, $var5) {
    $this.$field_1160_a = $var1;
    $this.$field_1161_g = ju_ArrayList__init_0();
    $this.$worldObj12 = $var2;
    $this.$field_1165_c = $var3;
    $this.$field_1164_d = $var4;
    $this.$field_1163_e = $var5;
    $this.$field_1162_f = nms_World_getBlockMetadata($var2, $var3, $var4, $var5);
    nms_MinecartTrackLogic_func_789_a($this);
}
function nms_MinecartTrackLogic_func_789_a($this) {
    a: {
        ju_ArrayList_clear($this.$field_1161_g);
        if (!$this.$field_1162_f) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e - 1 | 0));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e + 1 | 0));
            break a;
        }
        if ($this.$field_1162_f == 1) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c - 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c + 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            break a;
        }
        if ($this.$field_1162_f == 2) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c - 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c + 1 | 0, $this.$field_1164_d + 1 | 0, $this.$field_1163_e));
            break a;
        }
        if ($this.$field_1162_f == 3) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c - 1 | 0, $this.$field_1164_d + 1 | 0, $this.$field_1163_e));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c + 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            break a;
        }
        if ($this.$field_1162_f == 4) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d + 1 | 0, $this.$field_1163_e - 1 | 0));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e + 1 | 0));
            break a;
        }
        if ($this.$field_1162_f == 5) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e - 1 | 0));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d + 1 | 0, $this.$field_1163_e + 1 | 0));
            break a;
        }
        if ($this.$field_1162_f == 6) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c + 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e + 1 | 0));
            break a;
        }
        if ($this.$field_1162_f == 7) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c - 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e + 1 | 0));
            break a;
        }
        if ($this.$field_1162_f == 8) {
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c - 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
            ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e - 1 | 0));
            break a;
        }
        if ($this.$field_1162_f != 9)
            break a;
        ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c + 1 | 0, $this.$field_1164_d, $this.$field_1163_e));
        ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e - 1 | 0));
    }
}
function nms_MinecartTrackLogic_func_785_b($this) {
    var $var1, $var2, var$3;
    $var1 = 0;
    while ($var1 < $this.$field_1161_g.$size) {
        $var2 = nms_MinecartTrackLogic_func_795_a($this, ju_ArrayList_get($this.$field_1161_g, $var1));
        if ($var2 !== null && nms_MinecartTrackLogic_func_793_b($var2, $this)) {
            ju_ArrayList_set($this.$field_1161_g, $var1, nms_ChunkPosition__init_($var2.$field_1165_c, $var2.$field_1164_d, $var2.$field_1163_e));
            var$3 = $var1;
        } else {
            $var2 = $this.$field_1161_g;
            var$3 = $var1 + (-1) | 0;
            ju_ArrayList_remove($var2, $var1);
        }
        $var1 = var$3 + 1 | 0;
    }
}
function nms_MinecartTrackLogic_func_784_a($this, $var1, $var2, $var3) {
    return nms_World_getBlockId($this.$worldObj12, $var1, $var2, $var3) == $this.$field_1160_a.$blockID ? 1 : nms_World_getBlockId($this.$worldObj12, $var1, $var2 + 1 | 0, $var3) == $this.$field_1160_a.$blockID ? 1 : nms_World_getBlockId($this.$worldObj12, $var1, $var2 - 1 | 0, $var3) != $this.$field_1160_a.$blockID ? 0 : 1;
}
function nms_MinecartTrackLogic_func_795_a($this, $var1) {
    return nms_World_getBlockId($this.$worldObj12, $var1.$x3, $var1.$y2, $var1.$z5) == $this.$field_1160_a.$blockID ? nms_MinecartTrackLogic__init_($this.$field_1160_a, $this.$worldObj12, $var1.$x3, $var1.$y2, $var1.$z5) : nms_World_getBlockId($this.$worldObj12, $var1.$x3, $var1.$y2 + 1 | 0, $var1.$z5) == $this.$field_1160_a.$blockID ? nms_MinecartTrackLogic__init_($this.$field_1160_a, $this.$worldObj12, $var1.$x3, $var1.$y2 + 1 | 0, $var1.$z5) : nms_World_getBlockId($this.$worldObj12, $var1.$x3, $var1.$y2 -
    1 | 0, $var1.$z5) != $this.$field_1160_a.$blockID ? null : nms_MinecartTrackLogic__init_($this.$field_1160_a, $this.$worldObj12, $var1.$x3, $var1.$y2 - 1 | 0, $var1.$z5);
}
function nms_MinecartTrackLogic_func_793_b($this, $var1) {
    var $var2, $var3;
    $var2 = 0;
    while ($var2 < $this.$field_1161_g.$size) {
        $var3 = ju_ArrayList_get($this.$field_1161_g, $var2);
        if ($var3.$x3 == $var1.$field_1165_c && $var3.$z5 == $var1.$field_1163_e)
            return 1;
        $var2 = $var2 + 1 | 0;
    }
    return 0;
}
function nms_MinecartTrackLogic_func_794_b($this, $var1, $var2, $var3) {
    var $var4, $var5;
    $var4 = 0;
    while ($var4 < $this.$field_1161_g.$size) {
        $var5 = ju_ArrayList_get($this.$field_1161_g, $var4);
        if ($var5.$x3 == $var1 && $var5.$z5 == $var3)
            return 1;
        $var4 = $var4 + 1 | 0;
    }
    return 0;
}
function nms_MinecartTrackLogic_func_787_c($this, $var1) {
    var $var2;
    if (nms_MinecartTrackLogic_func_793_b($this, $var1))
        return 1;
    if ($this.$field_1161_g.$size == 2)
        return 0;
    if (!$this.$field_1161_g.$size)
        return 1;
    $var2 = ju_ArrayList_get($this.$field_1161_g, 0);
    return $var1.$field_1164_d == $this.$field_1164_d && $var2.$y2 == $this.$field_1164_d ? 1 : 1;
}
function nms_MinecartTrackLogic_func_788_d($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6;
    ju_ArrayList_add($this.$field_1161_g, nms_ChunkPosition__init_($var1.$field_1165_c, $var1.$field_1164_d, $var1.$field_1163_e));
    $var2 = nms_MinecartTrackLogic_func_794_b($this, $this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e - 1 | 0);
    $var3 = nms_MinecartTrackLogic_func_794_b($this, $this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e + 1 | 0);
    $var4 = nms_MinecartTrackLogic_func_794_b($this, $this.$field_1165_c - 1 | 0, $this.$field_1164_d, $this.$field_1163_e);
    $var5 = nms_MinecartTrackLogic_func_794_b($this, $this.$field_1165_c + 1 | 0, $this.$field_1164_d, $this.$field_1163_e);
    $var6 = (-1);
    if (!(!$var2 && !$var3))
        $var6 = 0;
    if (!(!$var4 && !$var5))
        $var6 = 1;
    if ($var3 && $var5 && !$var2 && !$var4)
        $var6 = 6;
    if ($var3 && $var4 && !$var2 && !$var5)
        $var6 = 7;
    if ($var2 && $var4 && !$var3 && !$var5)
        $var6 = 8;
    if ($var2 && $var5 && !$var3 && !$var4)
        $var6 = 9;
    if (!$var6) {
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c, $this.$field_1164_d + 1 | 0, $this.$field_1163_e - 1 | 0) == $this.$field_1160_a.$blockID)
            $var6 = 4;
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c, $this.$field_1164_d + 1 | 0, $this.$field_1163_e + 1 | 0) == $this.$field_1160_a.$blockID)
            $var6 = 5;
    }
    if ($var6 == 1) {
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c + 1 | 0, $this.$field_1164_d + 1 | 0, $this.$field_1163_e) == $this.$field_1160_a.$blockID)
            $var6 = 2;
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c - 1 | 0, $this.$field_1164_d + 1 | 0, $this.$field_1163_e) == $this.$field_1160_a.$blockID)
            $var6 = 3;
    }
    if ($var6 < 0)
        $var6 = 0;
    nms_World_setBlockMetadataWithNotify($this.$worldObj12, $this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e, $var6);
}
function nms_MinecartTrackLogic_func_786_c($this, $var1, $var2, $var3) {
    var $var4;
    $var4 = nms_MinecartTrackLogic_func_795_a($this, nms_ChunkPosition__init_($var1, $var2, $var3));
    if ($var4 === null)
        return 0;
    nms_MinecartTrackLogic_func_785_b($var4);
    return nms_MinecartTrackLogic_func_787_c($var4, $this);
}
function nms_MinecartTrackLogic_func_792_a($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6, $var7, $var8;
    $var2 = nms_MinecartTrackLogic_func_786_c($this, $this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e - 1 | 0);
    $var3 = nms_MinecartTrackLogic_func_786_c($this, $this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e + 1 | 0);
    $var4 = nms_MinecartTrackLogic_func_786_c($this, $this.$field_1165_c - 1 | 0, $this.$field_1164_d, $this.$field_1163_e);
    $var5 = nms_MinecartTrackLogic_func_786_c($this, $this.$field_1165_c + 1 | 0, $this.$field_1164_d, $this.$field_1163_e);
    $var6 = (-1);
    if (!(!$var2 && !$var3) && !$var4 && !$var5)
        $var6 = 0;
    if (!(!$var4 && !$var5) && !$var2 && !$var3)
        $var6 = 1;
    if ($var3 && $var5 && !$var2 && !$var4)
        $var6 = 6;
    if ($var3 && $var4 && !$var2 && !$var5)
        $var6 = 7;
    if ($var2 && $var4 && !$var3 && !$var5)
        $var6 = 8;
    if ($var2 && $var5 && !$var3 && !$var4)
        $var6 = 9;
    if ($var6 == (-1)) {
        if (!(!$var2 && !$var3))
            $var6 = 0;
        if (!(!$var4 && !$var5))
            $var6 = 1;
        if (!$var1) {
            if ($var2 && $var4)
                $var6 = 8;
            if ($var5 && $var2)
                $var6 = 9;
            if ($var4 && $var3)
                $var6 = 7;
            if ($var3 && $var5)
                $var6 = 6;
        } else {
            if ($var3 && $var5)
                $var6 = 6;
            if ($var4 && $var3)
                $var6 = 7;
            if ($var5 && $var2)
                $var6 = 9;
            if ($var2 && $var4)
                $var6 = 8;
        }
    }
    if (!$var6) {
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c, $this.$field_1164_d + 1 | 0, $this.$field_1163_e - 1 | 0) == $this.$field_1160_a.$blockID)
            $var6 = 4;
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c, $this.$field_1164_d + 1 | 0, $this.$field_1163_e + 1 | 0) == $this.$field_1160_a.$blockID)
            $var6 = 5;
    }
    if ($var6 == 1) {
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c + 1 | 0, $this.$field_1164_d + 1 | 0, $this.$field_1163_e) == $this.$field_1160_a.$blockID)
            $var6 = 2;
        if (nms_World_getBlockId($this.$worldObj12, $this.$field_1165_c - 1 | 0, $this.$field_1164_d + 1 | 0, $this.$field_1163_e) == $this.$field_1160_a.$blockID)
            $var6 = 3;
    }
    if ($var6 < 0)
        $var6 = 0;
    $this.$field_1162_f = $var6;
    nms_MinecartTrackLogic_func_789_a($this);
    nms_World_setBlockMetadataWithNotify($this.$worldObj12, $this.$field_1165_c, $this.$field_1164_d, $this.$field_1163_e, $var6);
    $var7 = 0;
    while ($var7 < $this.$field_1161_g.$size) {
        $var8 = nms_MinecartTrackLogic_func_795_a($this, ju_ArrayList_get($this.$field_1161_g, $var7));
        if ($var8 !== null) {
            nms_MinecartTrackLogic_func_785_b($var8);
            if (nms_MinecartTrackLogic_func_787_c($var8, $this))
                nms_MinecartTrackLogic_func_788_d($var8, $this);
        }
        $var7 = $var7 + 1 | 0;
    }
}
function cjj_Deflate() {
    var a = this; jl_Object.call(a);
    a.$strm = null;
    a.$status0 = 0;
    a.$pending_buf = null;
    a.$pending_buf_size = 0;
    a.$pending_out = 0;
    a.$pending = 0;
    a.$wrap5 = 0;
    a.$data_type0 = 0;
    a.$method0 = 0;
    a.$last_flush = 0;
    a.$w_size = 0;
    a.$w_bits = 0;
    a.$w_mask = 0;
    a.$window0 = null;
    a.$window_size = 0;
    a.$prev = null;
    a.$head1 = null;
    a.$ins_h = 0;
    a.$hash_size = 0;
    a.$hash_bits = 0;
    a.$hash_mask = 0;
    a.$hash_shift = 0;
    a.$block_start = 0;
    a.$match_length = 0;
    a.$prev_match = 0;
    a.$match_available = 0;
    a.$strstart = 0;
    a.$match_start = 0;
    a.$lookahead = 0;
    a.$prev_length = 0;
    a.$max_chain_length = 0;
    a.$max_lazy_match = 0;
    a.$level = 0;
    a.$strategy0 = 0;
    a.$good_match = 0;
    a.$nice_match = 0;
    a.$dyn_ltree = null;
    a.$dyn_dtree = null;
    a.$bl_tree = null;
    a.$l_desc = null;
    a.$d_desc = null;
    a.$bl_desc = null;
    a.$bl_count = null;
    a.$next_code = null;
    a.$heap = null;
    a.$heap_len = 0;
    a.$heap_max = 0;
    a.$depth = null;
    a.$l_buf = null;
    a.$lit_bufsize = 0;
    a.$last_lit = 0;
    a.$d_buf = 0;
    a.$opt_len = 0;
    a.$static_len = 0;
    a.$matches1 = 0;
    a.$last_eob_len = 0;
    a.$bi_buf = 0;
    a.$bi_valid = 0;
    a.$gheader0 = null;
}
var cjj_Deflate_config_table = null;
var cjj_Deflate_z_errmsg = null;
function cjj_Deflate_lm_init($this) {
    var $i;
    $this.$window_size = 2 * $this.$w_size | 0;
    $this.$head1.data[$this.$hash_size - 1 | 0] = 0;
    $i = 0;
    while ($i < ($this.$hash_size - 1 | 0)) {
        $this.$head1.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$max_lazy_match = cjj_Deflate_config_table.data[$this.$level].$max_lazy;
    $this.$good_match = cjj_Deflate_config_table.data[$this.$level].$good_length;
    $this.$nice_match = cjj_Deflate_config_table.data[$this.$level].$nice_length;
    $this.$max_chain_length = cjj_Deflate_config_table.data[$this.$level].$max_chain;
    $this.$strstart = 0;
    $this.$block_start = 0;
    $this.$lookahead = 0;
    $this.$prev_length = 2;
    $this.$match_length = 2;
    $this.$match_available = 0;
    $this.$ins_h = 0;
}
function cjj_Deflate_tr_init($this) {
    var var$1;
    $this.$l_desc.$dyn_tree = $this.$dyn_ltree;
    var$1 = $this.$l_desc;
    cjj_StaticTree_$callClinit();
    var$1.$stat_desc = cjj_StaticTree_static_l_desc;
    $this.$d_desc.$dyn_tree = $this.$dyn_dtree;
    $this.$d_desc.$stat_desc = cjj_StaticTree_static_d_desc;
    $this.$bl_desc.$dyn_tree = $this.$bl_tree;
    $this.$bl_desc.$stat_desc = cjj_StaticTree_static_bl_desc;
    $this.$bi_buf = 0;
    $this.$bi_valid = 0;
    $this.$last_eob_len = 8;
    cjj_Deflate_init_block($this);
}
function cjj_Deflate_init_block($this) {
    var $i;
    $i = 0;
    while ($i < 286) {
        $this.$dyn_ltree.data[$i * 2 | 0] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 30) {
        $this.$dyn_dtree.data[$i * 2 | 0] = 0;
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < 19) {
        $this.$bl_tree.data[$i * 2 | 0] = 0;
        $i = $i + 1 | 0;
    }
    $this.$dyn_ltree.data[512] = 1;
    $this.$static_len = 0;
    $this.$opt_len = 0;
    $this.$matches1 = 0;
    $this.$last_lit = 0;
}
function cjj_Deflate_pqdownheap($this, $tree, $k) {
    var $v, $j, var$5, var$6;
    $v = $this.$heap.data[$k];
    $j = $k << 1;
    a: {
        while (true) {
            if ($j > $this.$heap_len)
                break a;
            if ($j >= $this.$heap_len)
                var$5 = $j;
            else {
                var$6 = $this.$heap.data;
                var$5 = $j + 1 | 0;
                if (!cjj_Deflate_smaller($tree, var$6[var$5], $this.$heap.data[$j], $this.$depth))
                    var$5 = $j;
            }
            if (cjj_Deflate_smaller($tree, $v, $this.$heap.data[var$5], $this.$depth))
                break;
            $this.$heap.data[$k] = $this.$heap.data[var$5];
            $j = var$5 << 1;
            $k = var$5;
        }
    }
    $this.$heap.data[$k] = $v;
}
function cjj_Deflate_smaller($tree, $n, $m, $depth) {
    var $tn2;
    a: {
        b: {
            $tree = $tree.data;
            $tn2 = $rt_compare($tree[$n * 2 | 0], $tree[$m * 2 | 0]);
            if ($tn2 >= 0) {
                if ($tn2)
                    break b;
                $tree = $depth.data;
                if ($tree[$n] > $tree[$m])
                    break b;
            }
            $n = 1;
            break a;
        }
        $n = 0;
    }
    return $n;
}
function cjj_Deflate_scan_tree($this, $tree, $max_code) {
    var $prevlen, $nextlen, $count, $max_count, $min_count, $n, var$9, var$10;
    $tree = $tree.data;
    $prevlen = (-1);
    $nextlen = $tree[1];
    $count = 0;
    $max_count = 7;
    $min_count = 4;
    if (!$nextlen) {
        $max_count = 138;
        $min_count = 3;
    }
    $tree[(($max_code + 1 | 0) * 2 | 0) + 1 | 0] = (-1);
    $n = 0;
    while ($n <= $max_code) {
        $n = $n + 1 | 0;
        var$9 = $tree[($n * 2 | 0) + 1 | 0];
        $count = $count + 1 | 0;
        if (!($count < $max_count && $nextlen == var$9)) {
            if ($count < $min_count) {
                var$10 = $this.$bl_tree.data;
                $prevlen = $nextlen * 2 | 0;
                var$10[$prevlen] = (var$10[$prevlen] + $count | 0) << 16 >> 16;
            } else if (!$nextlen) {
                if ($count > 10) {
                    var$10 = $this.$bl_tree.data;
                    var$10[36] = (var$10[36] + 1 | 0) << 16 >> 16;
                } else {
                    var$10 = $this.$bl_tree.data;
                    var$10[34] = (var$10[34] + 1 | 0) << 16 >> 16;
                }
            } else {
                if ($nextlen != $prevlen) {
                    var$10 = $this.$bl_tree.data;
                    $max_count = $nextlen * 2 | 0;
                    var$10[$max_count] = (var$10[$max_count] + 1 | 0) << 16 >> 16;
                }
                var$10 = $this.$bl_tree.data;
                var$10[32] = (var$10[32] + 1 | 0) << 16 >> 16;
            }
            $count = 0;
            if (!var$9) {
                $max_count = 138;
                $min_count = 3;
                $prevlen = $nextlen;
            } else if ($nextlen != var$9) {
                $max_count = 7;
                $min_count = 4;
                $prevlen = $nextlen;
            } else {
                $max_count = 6;
                $min_count = 3;
                $prevlen = $nextlen;
            }
        }
        $nextlen = var$9;
    }
}
function cjj_Deflate_build_bl_tree($this) {
    var $max_blindex;
    cjj_Deflate_scan_tree($this, $this.$dyn_ltree, $this.$l_desc.$max_code);
    cjj_Deflate_scan_tree($this, $this.$dyn_dtree, $this.$d_desc.$max_code);
    cjj_Tree_build_tree($this.$bl_desc, $this);
    $max_blindex = 18;
    a: {
        while (true) {
            if ($max_blindex < 3)
                break a;
            if ($this.$bl_tree.data[(cjj_Tree_bl_order.data[$max_blindex] * 2 | 0) + 1 | 0])
                break;
            $max_blindex = $max_blindex + (-1) | 0;
        }
    }
    $this.$opt_len = $this.$opt_len + ((((3 * ($max_blindex + 1 | 0) | 0) + 5 | 0) + 5 | 0) + 4 | 0) | 0;
    return $max_blindex;
}
function cjj_Deflate_send_all_trees($this, $lcodes, $dcodes, $blcodes) {
    var $rank;
    cjj_Deflate_send_bits($this, $lcodes - 257 | 0, 5);
    $dcodes = $dcodes - 1 | 0;
    cjj_Deflate_send_bits($this, $dcodes, 5);
    cjj_Deflate_send_bits($this, $blcodes - 4 | 0, 4);
    $rank = 0;
    while ($rank < $blcodes) {
        cjj_Deflate_send_bits($this, $this.$bl_tree.data[(cjj_Tree_bl_order.data[$rank] * 2 | 0) + 1 | 0], 3);
        $rank = $rank + 1 | 0;
    }
    cjj_Deflate_send_tree($this, $this.$dyn_ltree, $lcodes - 1 | 0);
    cjj_Deflate_send_tree($this, $this.$dyn_dtree, $dcodes);
}
function cjj_Deflate_send_tree($this, $tree, $max_code) {
    var var$3, $prevlen, $nextlen, $count, $max_count, $min_count, $n, var$10;
    var$3 = $tree.data;
    $prevlen = (-1);
    $nextlen = var$3[1];
    $count = 0;
    $max_count = 7;
    $min_count = 4;
    if (!$nextlen) {
        $max_count = 138;
        $min_count = 3;
    }
    $n = 0;
    while ($n <= $max_code) {
        $n = $n + 1 | 0;
        var$10 = var$3[($n * 2 | 0) + 1 | 0];
        $count = $count + 1 | 0;
        if (!($count < $max_count && $nextlen == var$10)) {
            if ($count < $min_count)
                while (true) {
                    cjj_Deflate_send_code($this, $nextlen, $this.$bl_tree);
                    $count = $count + (-1) | 0;
                    if (!$count)
                        break;
                }
            else if (!$nextlen) {
                if ($count > 10) {
                    cjj_Deflate_send_code($this, 18, $this.$bl_tree);
                    cjj_Deflate_send_bits($this, $count - 11 | 0, 7);
                } else {
                    cjj_Deflate_send_code($this, 17, $this.$bl_tree);
                    cjj_Deflate_send_bits($this, $count - 3 | 0, 3);
                }
            } else {
                if ($nextlen != $prevlen) {
                    cjj_Deflate_send_code($this, $nextlen, $this.$bl_tree);
                    $count = $count + (-1) | 0;
                }
                cjj_Deflate_send_code($this, 16, $this.$bl_tree);
                cjj_Deflate_send_bits($this, $count - 3 | 0, 2);
            }
            $count = 0;
            if (!var$10) {
                $max_count = 138;
                $min_count = 3;
                $prevlen = $nextlen;
            } else if ($nextlen != var$10) {
                $max_count = 7;
                $min_count = 4;
                $prevlen = $nextlen;
            } else {
                $max_count = 6;
                $min_count = 3;
                $prevlen = $nextlen;
            }
        }
        $nextlen = var$10;
    }
}
function cjj_Deflate_put_byte0($this, $p, $start, $len) {
    jl_System_arraycopy($p, $start, $this.$pending_buf, $this.$pending, $len);
    $this.$pending = $this.$pending + $len | 0;
}
function cjj_Deflate_put_byte($this, $c) {
    var var$2, var$3;
    var$2 = $this.$pending_buf.data;
    var$3 = $this.$pending;
    $this.$pending = var$3 + 1 | 0;
    var$2[var$3] = $c;
}
function cjj_Deflate_put_short($this, $w) {
    cjj_Deflate_put_byte($this, $w << 24 >> 24);
    cjj_Deflate_put_byte($this, $w >>> 8 << 24 >> 24);
}
function cjj_Deflate_putShortMSB($this, $b) {
    cjj_Deflate_put_byte($this, $b >> 8 << 24 >> 24);
    cjj_Deflate_put_byte($this, $b << 24 >> 24);
}
function cjj_Deflate_send_code($this, $c, $tree) {
    var $c2;
    $tree = $tree.data;
    $c2 = $c * 2 | 0;
    cjj_Deflate_send_bits($this, $tree[$c2] & 65535, $tree[$c2 + 1 | 0] & 65535);
}
function cjj_Deflate_send_bits($this, $value, $length) {
    if ($this.$bi_valid <= (16 - $length | 0)) {
        $this.$bi_buf = ($this.$bi_buf | $value << $this.$bi_valid & 65535) << 16 >> 16;
        $this.$bi_valid = $this.$bi_valid + $length | 0;
    } else {
        $this.$bi_buf = ($this.$bi_buf | $value << $this.$bi_valid & 65535) << 16 >> 16;
        cjj_Deflate_put_short($this, $this.$bi_buf);
        $this.$bi_buf = $value >>> (16 - $this.$bi_valid | 0) << 16 >> 16;
        $this.$bi_valid = $this.$bi_valid + ($length - 16 | 0) | 0;
    }
}
function cjj_Deflate__tr_align($this) {
    cjj_Deflate_send_bits($this, 2, 3);
    cjj_StaticTree_$callClinit();
    cjj_Deflate_send_code($this, 256, cjj_StaticTree_static_ltree);
    cjj_Deflate_bi_flush($this);
    if ((((1 + $this.$last_eob_len | 0) + 10 | 0) - $this.$bi_valid | 0) < 9) {
        cjj_Deflate_send_bits($this, 2, 3);
        cjj_Deflate_send_code($this, 256, cjj_StaticTree_static_ltree);
        cjj_Deflate_bi_flush($this);
    }
    $this.$last_eob_len = 7;
}
function cjj_Deflate__tr_tally($this, $dist, $lc) {
    var var$3, var$4, $out_length, $in_length, $dcode;
    $this.$pending_buf.data[$this.$d_buf + ($this.$last_lit * 2 | 0) | 0] = $dist >>> 8 << 24 >> 24;
    $this.$pending_buf.data[($this.$d_buf + ($this.$last_lit * 2 | 0) | 0) + 1 | 0] = $dist << 24 >> 24;
    $this.$l_buf.data[$this.$last_lit] = $lc << 24 >> 24;
    $this.$last_lit = $this.$last_lit + 1 | 0;
    if (!$dist) {
        var$3 = $this.$dyn_ltree.data;
        $dist = $lc * 2 | 0;
        var$3[$dist] = (var$3[$dist] + 1 | 0) << 16 >> 16;
    } else {
        $this.$matches1 = $this.$matches1 + 1 | 0;
        $dist = $dist + (-1) | 0;
        var$4 = $this.$dyn_ltree.data;
        $lc = ((cjj_Tree__length_code.data[$lc] + 256 | 0) + 1 | 0) * 2 | 0;
        var$4[$lc] = (var$4[$lc] + 1 | 0) << 16 >> 16;
        var$3 = $this.$dyn_dtree.data;
        $dist = cjj_Tree_d_code($dist) * 2 | 0;
        var$3[$dist] = (var$3[$dist] + 1 | 0) << 16 >> 16;
    }
    if (!($this.$last_lit & 8191) && $this.$level > 2) {
        $out_length = $this.$last_lit * 8 | 0;
        $in_length = $this.$strstart - $this.$block_start | 0;
        $dcode = 0;
        while ($dcode < 30) {
            $out_length = Long_add(Long_fromInt($out_length), Long_mul(Long_fromInt($this.$dyn_dtree.data[$dcode * 2 | 0]), Long_add(Long_fromInt(5), Long_fromInt(cjj_Tree_extra_dbits.data[$dcode])))).lo;
            $dcode = $dcode + 1 | 0;
        }
        $dist = $out_length >>> 3;
        if ($this.$matches1 < ($this.$last_lit / 2 | 0) && $dist < ($in_length / 2 | 0))
            return 1;
    }
    return $this.$last_lit != ($this.$lit_bufsize - 1 | 0) ? 0 : 1;
}
function cjj_Deflate_compress_block($this, $ltree, $dtree) {
    var $lx, var$4, $lc, $code, $dist, $extra;
    a: {
        $lx = 0;
        if ($this.$last_lit)
            while (true) {
                var$4 = $this.$pending_buf.data;
                $lc = $this.$d_buf;
                $code = $lx * 2 | 0;
                $dist = var$4[$lc + $code | 0] << 8 & 65280 | $this.$pending_buf.data[($this.$d_buf + $code | 0) + 1 | 0] & 255;
                $lc = $this.$l_buf.data[$lx] & 255;
                $lx = $lx + 1 | 0;
                if (!$dist)
                    cjj_Deflate_send_code($this, $lc, $ltree);
                else {
                    $code = cjj_Tree__length_code.data[$lc];
                    cjj_Deflate_send_code($this, ($code + 256 | 0) + 1 | 0, $ltree);
                    $extra = cjj_Tree_extra_lbits.data[$code];
                    if ($extra)
                        cjj_Deflate_send_bits($this, $lc - cjj_Tree_base_length.data[$code] | 0, $extra);
                    $dist = $dist + (-1) | 0;
                    $code = cjj_Tree_d_code($dist);
                    cjj_Deflate_send_code($this, $code, $dtree);
                    $lc = cjj_Tree_extra_dbits.data[$code];
                    if ($lc)
                        cjj_Deflate_send_bits($this, $dist - cjj_Tree_base_dist.data[$code] | 0, $lc);
                }
                if ($lx >= $this.$last_lit)
                    break a;
            }
    }
    $dtree = $ltree.data;
    cjj_Deflate_send_code($this, 256, $ltree);
    $this.$last_eob_len = $dtree[513];
}
function cjj_Deflate_set_data_type($this) {
    var $n, $ascii_freq, $bin_freq;
    $n = 0;
    $ascii_freq = 0;
    $bin_freq = 0;
    while ($n < 7) {
        $bin_freq = $bin_freq + $this.$dyn_ltree.data[$n * 2 | 0] | 0;
        $n = $n + 1 | 0;
    }
    while ($n < 128) {
        $ascii_freq = $ascii_freq + $this.$dyn_ltree.data[$n * 2 | 0] | 0;
        $n = $n + 1 | 0;
    }
    while ($n < 256) {
        $bin_freq = $bin_freq + $this.$dyn_ltree.data[$n * 2 | 0] | 0;
        $n = $n + 1 | 0;
    }
    $this.$data_type0 = ($bin_freq <= $ascii_freq >>> 2 ? 1 : 0) << 24 >> 24;
}
function cjj_Deflate_bi_flush($this) {
    if ($this.$bi_valid == 16) {
        cjj_Deflate_put_short($this, $this.$bi_buf);
        $this.$bi_buf = 0;
        $this.$bi_valid = 0;
    } else if ($this.$bi_valid >= 8) {
        cjj_Deflate_put_byte($this, $this.$bi_buf << 24 >> 24);
        $this.$bi_buf = $this.$bi_buf >>> 8 << 16 >> 16;
        $this.$bi_valid = $this.$bi_valid - 8 | 0;
    }
}
function cjj_Deflate_bi_windup($this) {
    if ($this.$bi_valid > 8)
        cjj_Deflate_put_short($this, $this.$bi_buf);
    else if ($this.$bi_valid > 0)
        cjj_Deflate_put_byte($this, $this.$bi_buf << 24 >> 24);
    $this.$bi_buf = 0;
    $this.$bi_valid = 0;
}
function cjj_Deflate_copy_block($this, $buf, $len, $header) {
    cjj_Deflate_bi_windup($this);
    $this.$last_eob_len = 8;
    if ($header) {
        cjj_Deflate_put_short($this, $len << 16 >> 16);
        cjj_Deflate_put_short($this, ($len ^ (-1)) << 16 >> 16);
    }
    cjj_Deflate_put_byte0($this, $this.$window0, $buf, $len);
}
function cjj_Deflate_flush_block_only($this, $eof) {
    cjj_Deflate__tr_flush_block($this, $this.$block_start < 0 ? (-1) : $this.$block_start, $this.$strstart - $this.$block_start | 0, $eof);
    $this.$block_start = $this.$strstart;
    cjj_ZStream_flush_pending($this.$strm);
}
function cjj_Deflate_deflate_stored($this, $flush) {
    var $max_block_size, $max_start;
    $max_block_size = 65535;
    if ($max_block_size > ($this.$pending_buf_size - 5 | 0))
        $max_block_size = $this.$pending_buf_size - 5 | 0;
    while (true) {
        if ($this.$lookahead <= 1) {
            cjj_Deflate_fill_window($this);
            if (!$this.$lookahead && !$flush)
                return 0;
            if (!$this.$lookahead) {
                $flush = $rt_compare($flush, 4);
                cjj_Deflate_flush_block_only($this, $flush ? 0 : 1);
                if ($this.$strm.$avail_out)
                    return $flush ? 1 : 3;
                return $flush ? 0 : 2;
            }
        }
        $this.$strstart = $this.$strstart + $this.$lookahead | 0;
        $this.$lookahead = 0;
        $max_start = $this.$block_start + $max_block_size | 0;
        if (!($this.$strstart && $this.$strstart < $max_start)) {
            $this.$lookahead = $this.$strstart - $max_start | 0;
            $this.$strstart = $max_start;
            cjj_Deflate_flush_block_only($this, 0);
            if (!$this.$strm.$avail_out)
                return 0;
        }
        if (($this.$strstart - $this.$block_start | 0) < ($this.$w_size - 262 | 0))
            continue;
        cjj_Deflate_flush_block_only($this, 0);
        if (!$this.$strm.$avail_out)
            break;
    }
    return 0;
}
function cjj_Deflate__tr_stored_block($this, $buf, $stored_len, $eof) {
    cjj_Deflate_send_bits($this, 0 + (!$eof ? 0 : 1) | 0, 3);
    cjj_Deflate_copy_block($this, $buf, $stored_len, 1);
}
function cjj_Deflate__tr_flush_block($this, $buf, $stored_len, $eof) {
    var $max_blindex, $static_lenb, $opt_lenb;
    $max_blindex = 0;
    if ($this.$level <= 0) {
        $static_lenb = $stored_len + 5 | 0;
        $opt_lenb = $static_lenb;
    } else {
        if ($this.$data_type0 == 2)
            cjj_Deflate_set_data_type($this);
        cjj_Tree_build_tree($this.$l_desc, $this);
        cjj_Tree_build_tree($this.$d_desc, $this);
        $max_blindex = cjj_Deflate_build_bl_tree($this);
        $opt_lenb = (($this.$opt_len + 3 | 0) + 7 | 0) >>> 3;
        $static_lenb = (($this.$static_len + 3 | 0) + 7 | 0) >>> 3;
        if ($static_lenb <= $opt_lenb)
            $opt_lenb = $static_lenb;
    }
    if (($stored_len + 4 | 0) <= $opt_lenb && $buf != (-1))
        cjj_Deflate__tr_stored_block($this, $buf, $stored_len, $eof);
    else if ($static_lenb == $opt_lenb) {
        cjj_Deflate_send_bits($this, 2 + (!$eof ? 0 : 1) | 0, 3);
        cjj_StaticTree_$callClinit();
        cjj_Deflate_compress_block($this, cjj_StaticTree_static_ltree, cjj_StaticTree_static_dtree);
    } else {
        cjj_Deflate_send_bits($this, 4 + (!$eof ? 0 : 1) | 0, 3);
        cjj_Deflate_send_all_trees($this, $this.$l_desc.$max_code + 1 | 0, $this.$d_desc.$max_code + 1 | 0, $max_blindex + 1 | 0);
        cjj_Deflate_compress_block($this, $this.$dyn_ltree, $this.$dyn_dtree);
    }
    cjj_Deflate_init_block($this);
    if ($eof)
        cjj_Deflate_bi_windup($this);
}
function cjj_Deflate_fill_window($this) {
    var $more, $n, $p, var$4, $m;
    while (true) {
        $more = ($this.$window_size - $this.$lookahead | 0) - $this.$strstart | 0;
        if (!$more && !$this.$strstart && !$this.$lookahead)
            $more = $this.$w_size;
        else if ($more == (-1))
            $more = $more + (-1) | 0;
        else if ($this.$strstart >= (($this.$w_size + $this.$w_size | 0) - 262 | 0)) {
            jl_System_arraycopy($this.$window0, $this.$w_size, $this.$window0, 0, $this.$w_size);
            $this.$match_start = $this.$match_start - $this.$w_size | 0;
            $this.$strstart = $this.$strstart - $this.$w_size | 0;
            $this.$block_start = $this.$block_start - $this.$w_size | 0;
            $n = $this.$hash_size;
            $p = $n;
            while (true) {
                var$4 = $this.$head1.data;
                $p = $p + (-1) | 0;
                $m = var$4[$p] & 65535;
                var$4 = $this.$head1;
                var$4.data[$p] = $m < $this.$w_size ? 0 : ($m - $this.$w_size | 0) << 16 >> 16;
                $n = $n + (-1) | 0;
                if (!$n)
                    break;
            }
            $n = $this.$w_size;
            $p = $n;
            while (true) {
                var$4 = $this.$prev.data;
                $p = $p + (-1) | 0;
                $m = var$4[$p] & 65535;
                var$4 = $this.$prev;
                var$4.data[$p] = $m < $this.$w_size ? 0 : ($m - $this.$w_size | 0) << 16 >> 16;
                $n = $n + (-1) | 0;
                if (!$n)
                    break;
            }
            $more = $more + $this.$w_size | 0;
        }
        if (!$this.$strm.$avail_in)
            return;
        $n = cjj_ZStream_read_buf($this.$strm, $this.$window0, $this.$strstart + $this.$lookahead | 0, $more);
        $this.$lookahead = $this.$lookahead + $n | 0;
        if ($this.$lookahead >= 3) {
            $this.$ins_h = $this.$window0.data[$this.$strstart] & 255;
            $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window0.data[$this.$strstart + 1 | 0] & 255) & $this.$hash_mask;
        }
        if ($this.$lookahead >= 262)
            break;
        if ($this.$strm.$avail_in)
            continue;
        else
            break;
    }
}
function cjj_Deflate_deflate_fast($this, $flush) {
    var $hash_head, $bflush, var$4;
    $hash_head = 0;
    while (true) {
        if ($this.$lookahead < 262) {
            cjj_Deflate_fill_window($this);
            if ($this.$lookahead < 262 && !$flush)
                return 0;
            if (!$this.$lookahead) {
                $flush = $rt_compare($flush, 4);
                cjj_Deflate_flush_block_only($this, $flush ? 0 : 1);
                if (!$this.$strm.$avail_out) {
                    if ($flush)
                        return 0;
                    return 2;
                }
                return $flush ? 1 : 3;
            }
        }
        if ($this.$lookahead >= 3) {
            $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window0.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
            $hash_head = $this.$head1.data[$this.$ins_h] & 65535;
            $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head1.data[$this.$ins_h];
            $this.$head1.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
        }
        if (Long_ne(Long_fromInt($hash_head), Long_ZERO) && (($this.$strstart - $hash_head | 0) & 65535) <= ($this.$w_size - 262 | 0) && $this.$strategy0 != 2)
            $this.$match_length = cjj_Deflate_longest_match($this, $hash_head);
        if ($this.$match_length < 3) {
            $bflush = cjj_Deflate__tr_tally($this, 0, $this.$window0.data[$this.$strstart] & 255);
            $this.$lookahead = $this.$lookahead - 1 | 0;
            $this.$strstart = $this.$strstart + 1 | 0;
        } else {
            $bflush = cjj_Deflate__tr_tally($this, $this.$strstart - $this.$match_start | 0, $this.$match_length - 3 | 0);
            $this.$lookahead = $this.$lookahead - $this.$match_length | 0;
            if ($this.$match_length <= $this.$max_lazy_match && $this.$lookahead >= 3) {
                $this.$match_length = $this.$match_length - 1 | 0;
                while (true) {
                    $this.$strstart = $this.$strstart + 1 | 0;
                    $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window0.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
                    $hash_head = $this.$head1.data[$this.$ins_h] & 65535;
                    $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head1.data[$this.$ins_h];
                    $this.$head1.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
                    var$4 = $this.$match_length - 1 | 0;
                    $this.$match_length = var$4;
                    if (var$4)
                        continue;
                    else
                        break;
                }
                $this.$strstart = $this.$strstart + 1 | 0;
            } else {
                $this.$strstart = $this.$strstart + $this.$match_length | 0;
                $this.$match_length = 0;
                $this.$ins_h = $this.$window0.data[$this.$strstart] & 255;
                $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window0.data[$this.$strstart + 1 | 0] & 255) & $this.$hash_mask;
            }
        }
        if (!$bflush)
            continue;
        cjj_Deflate_flush_block_only($this, 0);
        if (!$this.$strm.$avail_out)
            break;
    }
    return 0;
}
function cjj_Deflate_deflate_slow($this, $flush) {
    var $hash_head, $max_insert, $bflush, var$5;
    $hash_head = 0;
    while (true) {
        if ($this.$lookahead < 262) {
            cjj_Deflate_fill_window($this);
            if ($this.$lookahead < 262 && !$flush)
                return 0;
            if (!$this.$lookahead) {
                if ($this.$match_available) {
                    cjj_Deflate__tr_tally($this, 0, $this.$window0.data[$this.$strstart - 1 | 0] & 255);
                    $this.$match_available = 0;
                }
                $flush = $rt_compare($flush, 4);
                cjj_Deflate_flush_block_only($this, $flush ? 0 : 1);
                if (!$this.$strm.$avail_out) {
                    if ($flush)
                        return 0;
                    return 2;
                }
                return $flush ? 1 : 3;
            }
        }
        if ($this.$lookahead >= 3) {
            $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window0.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
            $hash_head = $this.$head1.data[$this.$ins_h] & 65535;
            $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head1.data[$this.$ins_h];
            $this.$head1.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
        }
        a: {
            $this.$prev_length = $this.$match_length;
            $this.$prev_match = $this.$match_start;
            $this.$match_length = 2;
            if ($hash_head && $this.$prev_length < $this.$max_lazy_match && (($this.$strstart - $hash_head | 0) & 65535) <= ($this.$w_size - 262 | 0)) {
                if ($this.$strategy0 != 2)
                    $this.$match_length = cjj_Deflate_longest_match($this, $hash_head);
                if ($this.$match_length <= 5) {
                    if ($this.$strategy0 != 1) {
                        if ($this.$match_length != 3)
                            break a;
                        if (($this.$strstart - $this.$match_start | 0) <= 4096)
                            break a;
                    }
                    $this.$match_length = 2;
                }
            }
        }
        if (!($this.$prev_length >= 3 && $this.$match_length <= $this.$prev_length)) {
            if (!$this.$match_available) {
                $this.$match_available = 1;
                $this.$strstart = $this.$strstart + 1 | 0;
                $this.$lookahead = $this.$lookahead - 1 | 0;
                continue;
            }
            if (cjj_Deflate__tr_tally($this, 0, $this.$window0.data[$this.$strstart - 1 | 0] & 255))
                cjj_Deflate_flush_block_only($this, 0);
            $this.$strstart = $this.$strstart + 1 | 0;
            $this.$lookahead = $this.$lookahead - 1 | 0;
            if (!$this.$strm.$avail_out)
                break;
            continue;
        }
        $max_insert = ($this.$strstart + $this.$lookahead | 0) - 3 | 0;
        $bflush = cjj_Deflate__tr_tally($this, ($this.$strstart - 1 | 0) - $this.$prev_match | 0, $this.$prev_length - 3 | 0);
        $this.$lookahead = $this.$lookahead - ($this.$prev_length - 1 | 0) | 0;
        $this.$prev_length = $this.$prev_length - 2 | 0;
        while (true) {
            var$5 = $this.$strstart + 1 | 0;
            $this.$strstart = var$5;
            if (var$5 <= $max_insert) {
                $this.$ins_h = ($this.$ins_h << $this.$hash_shift ^ $this.$window0.data[$this.$strstart + 2 | 0] & 255) & $this.$hash_mask;
                $hash_head = $this.$head1.data[$this.$ins_h] & 65535;
                $this.$prev.data[$this.$strstart & $this.$w_mask] = $this.$head1.data[$this.$ins_h];
                $this.$head1.data[$this.$ins_h] = $this.$strstart << 16 >> 16;
            }
            var$5 = $this.$prev_length - 1 | 0;
            $this.$prev_length = var$5;
            if (!var$5)
                break;
        }
        $this.$match_available = 0;
        $this.$match_length = 2;
        $this.$strstart = $this.$strstart + 1 | 0;
        if ($bflush) {
            cjj_Deflate_flush_block_only($this, 0);
            if (!$this.$strm.$avail_out)
                return 0;
        }
    }
    return 0;
}
function cjj_Deflate_longest_match($this, $cur_match) {
    var $chain_length, $scan, $best_len, $limit, $nice_match, $wmask, $strend, var$9, $len, $scan_end1, $scan_end, var$13, var$14, var$15, var$16;
    $chain_length = $this.$max_chain_length;
    $scan = $this.$strstart;
    $best_len = $this.$prev_length;
    $limit = $this.$strstart <= ($this.$w_size - 262 | 0) ? 0 : $this.$strstart - ($this.$w_size - 262 | 0) | 0;
    $nice_match = $this.$nice_match;
    $wmask = $this.$w_mask;
    $strend = $this.$strstart + 258 | 0;
    var$9 = $this.$window0.data;
    $len = $scan + $best_len | 0;
    $scan_end1 = var$9[$len - 1 | 0];
    $scan_end = $this.$window0.data[$len];
    if ($this.$prev_length >= $this.$good_match)
        $chain_length = $chain_length >> 2;
    if ($nice_match > $this.$lookahead)
        $nice_match = $this.$lookahead;
    var$13 = $strend - 258 | 0;
    a: {
        while (true) {
            var$9 = $this.$window0.data;
            $len = $cur_match + $best_len | 0;
            if (var$9[$len] == $scan_end && $this.$window0.data[$len - 1 | 0] == $scan_end1 && $this.$window0.data[$cur_match] == $this.$window0.data[$scan]) {
                var$9 = $this.$window0.data;
                var$14 = $cur_match + 1 | 0;
                if (var$9[var$14] == $this.$window0.data[$scan + 1 | 0]) {
                    $scan = $scan + 2 | 0;
                    var$15 = var$14 + 1 | 0;
                    b: {
                        while (true) {
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$14 = var$15 + 1 | 0;
                            if ($len != var$9[var$14])
                                break;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$14 = var$14 + 1 | 0;
                            if ($len != var$9[var$14])
                                break b;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$14 = var$14 + 1 | 0;
                            if ($len != var$9[var$14])
                                break b;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$14 = var$14 + 1 | 0;
                            if ($len != var$9[var$14])
                                break b;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$14 = var$14 + 1 | 0;
                            if ($len != var$9[var$14])
                                break b;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            var$15 = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$16 = var$14 + 1 | 0;
                            if (var$15 != var$9[var$16])
                                break b;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$14 = var$16 + 1 | 0;
                            if ($len != var$9[var$14])
                                break b;
                            var$9 = $this.$window0.data;
                            $scan = $scan + 1 | 0;
                            $len = var$9[$scan];
                            var$9 = $this.$window0.data;
                            var$15 = var$14 + 1 | 0;
                            if ($len != var$9[var$15])
                                break b;
                            if ($scan >= $strend)
                                break b;
                        }
                    }
                    $len = 258 - ($strend - $scan | 0) | 0;
                    if ($len <= $best_len)
                        $scan = var$13;
                    else {
                        $this.$match_start = $cur_match;
                        if ($len >= $nice_match)
                            break;
                        var$9 = $this.$window0.data;
                        var$14 = var$13 + $len | 0;
                        $scan_end1 = var$9[var$14 - 1 | 0];
                        $scan_end = $this.$window0.data[var$14];
                        $scan = var$13;
                        $best_len = $len;
                    }
                }
            }
            $cur_match = $this.$prev.data[$cur_match & $wmask] & 65535;
            if ($cur_match <= $limit) {
                $len = $best_len;
                break a;
            }
            $chain_length = $chain_length + (-1) | 0;
            if (!$chain_length) {
                $len = $best_len;
                break a;
            }
        }
    }
    if ($len <= $this.$lookahead)
        return $len;
    return $this.$lookahead;
}
function cjj_Deflate_deflateInit($this, $level, $bits) {
    return cjj_Deflate_deflateInit0($this, $level, 8, $bits, 8, 0);
}
function cjj_Deflate_deflateInit0($this, $level, $method, $windowBits, $memLevel, $strategy) {
    var $wrap;
    $wrap = 1;
    $this.$strm.$msg = null;
    if ($level == (-1))
        $level = 6;
    if ($windowBits < 0) {
        $wrap = 0;
        $windowBits =  -$windowBits;
    } else if ($windowBits > 15) {
        $wrap = 2;
        $windowBits = $windowBits + (-16) | 0;
        $this.$strm.$adler = cjj_CRC32__init_0();
    }
    a: {
        if ($memLevel < 1)
            break a;
        if ($memLevel > 9)
            break a;
        if ($method != 8)
            break a;
        if ($windowBits < 9)
            break a;
        if ($windowBits > 15)
            break a;
        if ($level < 0)
            break a;
        if ($level > 9)
            break a;
        if ($strategy < 0)
            break a;
        if ($strategy <= 2) {
            $this.$strm.$dstate = $this;
            $this.$wrap5 = $wrap;
            $this.$w_bits = $windowBits;
            $this.$w_size = 1 << $this.$w_bits;
            $this.$w_mask = $this.$w_size - 1 | 0;
            $this.$hash_bits = $memLevel + 7 | 0;
            $this.$hash_size = 1 << $this.$hash_bits;
            $this.$hash_mask = $this.$hash_size - 1 | 0;
            $this.$hash_shift = (($this.$hash_bits + 3 | 0) - 1 | 0) / 3 | 0;
            $this.$window0 = $rt_createByteArray($this.$w_size * 2 | 0);
            $this.$prev = $rt_createShortArray($this.$w_size);
            $this.$head1 = $rt_createShortArray($this.$hash_size);
            $this.$lit_bufsize = 1 << ($memLevel + 6 | 0);
            $this.$pending_buf = $rt_createByteArray($this.$lit_bufsize * 3 | 0);
            $this.$pending_buf_size = $this.$lit_bufsize * 3 | 0;
            $this.$d_buf = $this.$lit_bufsize;
            $this.$l_buf = $rt_createByteArray($this.$lit_bufsize);
            $this.$level = $level;
            $this.$strategy0 = $strategy;
            $this.$method0 = $method << 24 >> 24;
            return cjj_Deflate_deflateReset($this);
        }
    }
    return (-2);
}
function cjj_Deflate_deflateReset($this) {
    var var$1;
    var$1 = $this.$strm;
    $this.$strm.$total_out = Long_ZERO;
    var$1.$total_in = Long_ZERO;
    $this.$strm.$msg = null;
    $this.$strm.$data_type = 2;
    $this.$pending = 0;
    $this.$pending_out = 0;
    if ($this.$wrap5 < 0)
        $this.$wrap5 =  -$this.$wrap5;
    $this.$status0 = $this.$wrap5 ? 42 : 113;
    $this.$strm.$adler.$reset();
    $this.$last_flush = 0;
    cjj_Deflate_tr_init($this);
    cjj_Deflate_lm_init($this);
    return 0;
}
function cjj_Deflate_deflate($this, $flush) {
    var var$2, $old_flush, $header, $level_flags, $bstate, $adler, $i;
    var$2 = $rt_compare($flush, 4);
    if (var$2 <= 0 && $flush >= 0) {
        a: {
            if ($this.$strm.$next_out !== null && !($this.$strm.$next_in === null && $this.$strm.$avail_in)) {
                if ($this.$status0 != 666)
                    break a;
                if (!var$2)
                    break a;
            }
            $this.$strm.$msg = cjj_Deflate_z_errmsg.data[4];
            return (-2);
        }
        if (!$this.$strm.$avail_out) {
            $this.$strm.$msg = cjj_Deflate_z_errmsg.data[7];
            return (-5);
        }
        $old_flush = $this.$last_flush;
        $this.$last_flush = $flush;
        if ($this.$status0 == 42) {
            if ($this.$wrap5 == 2) {
                cjj_GZIPHeader_put(cjj_Deflate_getGZIPHeader($this), $this);
                $this.$status0 = 113;
                $this.$strm.$adler.$reset();
            } else {
                $header = (8 + (($this.$w_bits - 8 | 0) << 4) | 0) << 8;
                $level_flags = (($this.$level - 1 | 0) & 255) >> 1;
                if ($level_flags > 3)
                    $level_flags = 3;
                $bstate = $header | $level_flags << 6;
                if ($this.$strstart)
                    $bstate = $bstate | 32;
                $bstate = $bstate + (31 - ($bstate % 31 | 0) | 0) | 0;
                $this.$status0 = 113;
                cjj_Deflate_putShortMSB($this, $bstate);
                if ($this.$strstart) {
                    $adler = $this.$strm.$adler.$getValue();
                    cjj_Deflate_putShortMSB($this, Long_shru($adler, 16).lo);
                    cjj_Deflate_putShortMSB($this, Long_and($adler, Long_fromInt(65535)).lo);
                }
                $this.$strm.$adler.$reset();
            }
        }
        b: {
            if ($this.$pending) {
                cjj_ZStream_flush_pending($this.$strm);
                if ($this.$strm.$avail_out)
                    break b;
                $this.$last_flush = (-1);
                return 0;
            }
            if (!$this.$strm.$avail_in && $flush <= $old_flush && var$2) {
                $this.$strm.$msg = cjj_Deflate_z_errmsg.data[7];
                return (-5);
            }
        }
        if ($this.$status0 == 666 && $this.$strm.$avail_in) {
            $this.$strm.$msg = cjj_Deflate_z_errmsg.data[7];
            return (-5);
        }
        c: {
            if (!$this.$strm.$avail_in && !$this.$lookahead) {
                if (!$flush)
                    break c;
                if ($this.$status0 == 666)
                    break c;
            }
            d: {
                $bstate = (-1);
                switch (cjj_Deflate_config_table.data[$this.$level].$func) {
                    case 0:
                        $bstate = cjj_Deflate_deflate_stored($this, $flush);
                        break d;
                    case 1:
                        $bstate = cjj_Deflate_deflate_fast($this, $flush);
                        break d;
                    case 2:
                        $bstate = cjj_Deflate_deflate_slow($this, $flush);
                        break d;
                    default:
                }
            }
            $old_flush = $rt_compare($bstate, 2);
            if (!($old_flush && $bstate != 3))
                $this.$status0 = 666;
            if ($bstate && $old_flush) {
                if ($bstate != 1)
                    break c;
                e: {
                    if ($flush == 1)
                        cjj_Deflate__tr_align($this);
                    else {
                        cjj_Deflate__tr_stored_block($this, 0, 0, 0);
                        if ($flush == 3) {
                            $i = 0;
                            while (true) {
                                if ($i >= $this.$hash_size)
                                    break e;
                                $this.$head1.data[$i] = 0;
                                $i = $i + 1 | 0;
                            }
                        }
                    }
                }
                cjj_ZStream_flush_pending($this.$strm);
                if ($this.$strm.$avail_out)
                    break c;
                $this.$last_flush = (-1);
                return 0;
            }
            if (!$this.$strm.$avail_out)
                $this.$last_flush = (-1);
            return 0;
        }
        if (var$2)
            return 0;
        if ($this.$wrap5 <= 0)
            return 1;
        if ($this.$wrap5 != 2) {
            $adler = $this.$strm.$adler.$getValue();
            cjj_Deflate_putShortMSB($this, Long_shru($adler, 16).lo);
            cjj_Deflate_putShortMSB($this, Long_and($adler, Long_fromInt(65535)).lo);
        } else {
            $adler = $this.$strm.$adler.$getValue();
            cjj_Deflate_put_byte($this, Long_and($adler, Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and(Long_shr($adler, 8), Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and(Long_shr($adler, 16), Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and(Long_shr($adler, 24), Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and($this.$strm.$total_in, Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and(Long_shr($this.$strm.$total_in, 8), Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and(Long_shr($this.$strm.$total_in, 16), Long_fromInt(255)).lo << 24 >> 24);
            cjj_Deflate_put_byte($this, Long_and(Long_shr($this.$strm.$total_in, 24), Long_fromInt(255)).lo << 24 >> 24);
            cjj_GZIPHeader_setCRC(cjj_Deflate_getGZIPHeader($this), $adler);
        }
        cjj_ZStream_flush_pending($this.$strm);
        if ($this.$wrap5 > 0)
            $this.$wrap5 =  -$this.$wrap5;
        return !$this.$pending ? 1 : 0;
    }
    return (-2);
}
function cjj_Deflate_getGZIPHeader($this) {
    jl_Object_monitorEnterSync($this);
    try {
        if ($this.$gheader0 === null)
            $this.$gheader0 = cjj_GZIPHeader__init_0();
        return $this.$gheader0;
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function cjj_Deflate__clinit_() {
    var var$1, var$2;
    cjj_Deflate_config_table = $rt_createArray(cjj_Deflate$Config, 10);
    cjj_Deflate_config_table.data[0] = cjj_Deflate$Config__init_(0, 0, 0, 0, 0);
    cjj_Deflate_config_table.data[1] = cjj_Deflate$Config__init_(4, 4, 8, 4, 1);
    cjj_Deflate_config_table.data[2] = cjj_Deflate$Config__init_(4, 5, 16, 8, 1);
    cjj_Deflate_config_table.data[3] = cjj_Deflate$Config__init_(4, 6, 32, 32, 1);
    cjj_Deflate_config_table.data[4] = cjj_Deflate$Config__init_(4, 4, 16, 16, 2);
    cjj_Deflate_config_table.data[5] = cjj_Deflate$Config__init_(8, 16, 32, 32, 2);
    cjj_Deflate_config_table.data[6] = cjj_Deflate$Config__init_(8, 16, 128, 128, 2);
    cjj_Deflate_config_table.data[7] = cjj_Deflate$Config__init_(8, 32, 128, 256, 2);
    cjj_Deflate_config_table.data[8] = cjj_Deflate$Config__init_(32, 128, 258, 1024, 2);
    cjj_Deflate_config_table.data[9] = cjj_Deflate$Config__init_(32, 258, 258, 4096, 2);
    var$1 = $rt_createArray(jl_String, 10);
    var$2 = var$1.data;
    var$2[0] = $rt_s(428);
    var$2[1] = $rt_s(1013);
    var$2[2] = $rt_s(17);
    var$2[3] = $rt_s(1014);
    var$2[4] = $rt_s(1015);
    var$2[5] = $rt_s(1016);
    var$2[6] = $rt_s(1017);
    var$2[7] = $rt_s(1018);
    var$2[8] = $rt_s(1019);
    var$2[9] = $rt_s(17);
    cjj_Deflate_z_errmsg = var$1;
}
function nms_EntityBubbleFX() {
    nms_EntityFX.call(this);
}
function nms_EntityBubbleFX_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $this.$motionY = $this.$motionY + 0.002;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.8500000238418579;
    $this.$motionY = $this.$motionY * 0.8500000238418579;
    $this.$motionZ = $this.$motionZ * 0.8500000238418579;
    if (nms_World_getBlockMaterial($this.$worldObj0, nms_MathHelper_floor_double($this.$posX), nms_MathHelper_floor_double($this.$posY), nms_MathHelper_floor_double($this.$posZ)) !== nms_Material_water)
        nms_Entity_setEntityDead($this);
    var$1 = $this.$field_666_f;
    $this.$field_666_f = var$1 - 1 | 0;
    if (var$1 <= 0)
        nms_Entity_setEntityDead($this);
}
function nms_EntitySmokeFX() {
    nms_EntityFX.call(this);
    this.$field_671_a = 0.0;
}
function nms_EntitySmokeFX__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_EntitySmokeFX();
    nms_EntitySmokeFX__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_EntitySmokeFX__init_0($this, $var1, $var2, $var4, $var6, $var8) {
    var var$6;
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, 0.0, 0.0, 0.0);
    $this.$motionX = $this.$motionX * 0.10000000149011612;
    $this.$motionY = $this.$motionY * 0.10000000149011612;
    $this.$motionZ = $this.$motionZ * 0.10000000149011612;
    var$6 = jl_Math_random() * 0.30000001192092896;
    $this.$field_661_k = var$6;
    $this.$field_662_j = var$6;
    $this.$field_663_i = var$6;
    $this.$field_665_g = $this.$field_665_g * 0.75;
    $this.$field_665_g = $this.$field_665_g * $var8;
    $this.$field_671_a = $this.$field_665_g;
    $this.$field_666_f = 8.0 / (jl_Math_random() * 0.8 + 0.2) | 0;
    $this.$field_666_f = $this.$field_666_f * $var8 | 0;
    $this.$field_9314_ba = 0;
}
function nms_EntitySmokeFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    $var8 = ($this.$e0 + $var2) / $this.$field_666_f * 32.0;
    if ($var8 < 0.0)
        $var8 = 0.0;
    if ($var8 > 1.0)
        $var8 = 1.0;
    $this.$field_665_g = $this.$field_671_a * $var8;
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntitySmokeFX_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    var$1 = $this.$e0;
    $this.$e0 = var$1 + 1 | 0;
    if (var$1 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
    $this.$field_670_b = 7 - (($this.$e0 * 8 | 0) / $this.$field_666_f | 0) | 0;
    $this.$motionY = $this.$motionY + 0.004;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    if ($this.$posY === $this.$prevPosY) {
        $this.$motionX = $this.$motionX * 1.1;
        $this.$motionZ = $this.$motionZ * 1.1;
    }
    $this.$motionX = $this.$motionX * 0.9599999785423279;
    $this.$motionY = $this.$motionY * 0.9599999785423279;
    $this.$motionZ = $this.$motionZ * 0.9599999785423279;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
}
function nms_EntityPortalFX() {
    var a = this; nms_EntityFX.call(a);
    a.$field_4083_a = 0.0;
    a.$field_4086_p = 0.0;
    a.$field_4085_q = 0.0;
    a.$field_4084_r = 0.0;
}
function nms_EntityPortalFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    $var8 = 1.0 - ($this.$e0 + $var2) / $this.$field_666_f;
    $var8 = 1.0 - $var8 * $var8;
    $this.$field_665_g = $this.$field_4083_a * $var8;
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntityPortalFX_getEntityBrightness($this, $var1) {
    var $var2, $var3;
    $var2 = nms_Entity_getEntityBrightness($this, $var1);
    $var3 = $this.$e0 / $this.$field_666_f;
    $var1 = $var3 * $var3;
    $var1 = $var1 * $var1;
    return $var2 * (1.0 - $var1) + $var1;
}
function nms_EntityPortalFX_onUpdate($this) {
    var $var1, var$2, var$3, var$4, var$5, var$6;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    $var1 = $this.$e0 / $this.$field_666_f;
    var$2 = 1.0 - ( -$var1 + $var1 * $var1 * 2.0);
    var$3 = $this.$field_4086_p;
    var$4 = $this.$motionX;
    var$5 = var$2;
    $this.$posX = var$3 + var$4 * var$5;
    $this.$posY = $this.$field_4085_q + $this.$motionY * var$5 + 1.0 - $var1;
    $this.$posZ = $this.$field_4084_r + $this.$motionZ * var$5;
    var$6 = $this.$e0;
    $this.$e0 = var$6 + 1 | 0;
    if (var$6 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
}
function nms_EntityExplodeFX() {
    nms_EntityFX.call(this);
}
function nms_EntityExplodeFX__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new nms_EntityExplodeFX();
    nms_EntityExplodeFX__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function nms_EntityExplodeFX__init_0($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12) {
    var var$8;
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12);
    $this.$motionX = $var8 + (jl_Math_random() * 2.0 - 1.0) * 0.05000000074505806;
    $this.$motionY = $var10 + (jl_Math_random() * 2.0 - 1.0) * 0.05000000074505806;
    $this.$motionZ = $var12 + (jl_Math_random() * 2.0 - 1.0) * 0.05000000074505806;
    var$8 = ju_Random_nextFloat($this.$rand2) * 0.30000001192092896 + 0.699999988079071;
    $this.$field_661_k = var$8;
    $this.$field_662_j = var$8;
    $this.$field_663_i = var$8;
    $this.$field_665_g = ju_Random_nextFloat($this.$rand2) * ju_Random_nextFloat($this.$rand2) * 6.0 + 1.0;
    $this.$field_666_f = (16.0 / (ju_Random_nextFloat($this.$rand2) * 0.8 + 0.2) | 0) + 2 | 0;
}
function nms_EntityExplodeFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntityExplodeFX_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    var$1 = $this.$e0;
    $this.$e0 = var$1 + 1 | 0;
    if (var$1 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
    $this.$field_670_b = 7 - (($this.$e0 * 8 | 0) / $this.$field_666_f | 0) | 0;
    $this.$motionY = $this.$motionY + 0.004;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.8999999761581421;
    $this.$motionY = $this.$motionY * 0.8999999761581421;
    $this.$motionZ = $this.$motionZ * 0.8999999761581421;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
}
function nms_EntityFlameFX() {
    nms_EntityFX.call(this);
    this.$field_672_a = 0.0;
}
function nms_EntityFlameFX__init_(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new nms_EntityFlameFX();
    nms_EntityFlameFX__init_0(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function nms_EntityFlameFX__init_0($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12) {
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, $var8, $var10, $var12);
    $this.$motionX = $this.$motionX * 0.009999999776482582 + $var8;
    $this.$motionY = $this.$motionY * 0.009999999776482582 + $var10;
    $this.$motionZ = $this.$motionZ * 0.009999999776482582 + $var12;
    ju_Random_nextFloat($this.$rand2);
    ju_Random_nextFloat($this.$rand2);
    ju_Random_nextFloat($this.$rand2);
    ju_Random_nextFloat($this.$rand2);
    ju_Random_nextFloat($this.$rand2);
    ju_Random_nextFloat($this.$rand2);
    $this.$field_672_a = $this.$field_665_g;
    $this.$field_661_k = 1.0;
    $this.$field_662_j = 1.0;
    $this.$field_663_i = 1.0;
    $this.$field_666_f = (8.0 / (jl_Math_random() * 0.8 + 0.2) | 0) + 4 | 0;
    $this.$field_9314_ba = 1;
    $this.$field_670_b = 48;
}
function nms_EntityFlameFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    $var8 = ($this.$e0 + $var2) / $this.$field_666_f;
    $this.$field_665_g = $this.$field_672_a * (1.0 - $var8 * $var8 * 0.5);
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntityFlameFX_getEntityBrightness($this, $var1) {
    var $var2;
    $var2 = ($this.$e0 + $var1) / $this.$field_666_f;
    if ($var2 < 0.0)
        $var2 = 0.0;
    if ($var2 > 1.0)
        $var2 = 1.0;
    return nms_Entity_getEntityBrightness($this, $var1) * $var2 + 1.0 - $var2;
}
function nms_EntityFlameFX_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    var$1 = $this.$e0;
    $this.$e0 = var$1 + 1 | 0;
    if (var$1 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.9599999785423279;
    $this.$motionY = $this.$motionY * 0.9599999785423279;
    $this.$motionZ = $this.$motionZ * 0.9599999785423279;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
}
function nms_EntityLavaFX() {
    nms_EntityFX.call(this);
    this.$field_674_a = 0.0;
}
function nms_EntityLavaFX__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new nms_EntityLavaFX();
    nms_EntityLavaFX__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function nms_EntityLavaFX__init_0($this, $var1, $var2, $var4, $var6) {
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, 0.0, 0.0, 0.0);
    $this.$motionX = $this.$motionX * 0.800000011920929;
    $this.$motionY = $this.$motionY * 0.800000011920929;
    $this.$motionZ = $this.$motionZ * 0.800000011920929;
    $this.$motionY = ju_Random_nextFloat($this.$rand2) * 0.4000000059604645 + 0.05000000074505806;
    $this.$field_661_k = 1.0;
    $this.$field_662_j = 1.0;
    $this.$field_663_i = 1.0;
    $this.$field_665_g = $this.$field_665_g * (ju_Random_nextFloat($this.$rand2) * 2.0 + 0.20000000298023224);
    $this.$field_674_a = $this.$field_665_g;
    $this.$field_666_f = 16.0 / (jl_Math_random() * 0.8 + 0.2) | 0;
    $this.$field_9314_ba = 0;
    $this.$field_670_b = 49;
}
function nms_EntityLavaFX_getEntityBrightness($this, $var1) {
    return 1.0;
}
function nms_EntityLavaFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    $var8 = ($this.$e0 + $var2) / $this.$field_666_f;
    $this.$field_665_g = $this.$field_674_a * (1.0 - $var8 * $var8);
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntityLavaFX_onUpdate($this) {
    var var$1, $var1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    var$1 = $this.$e0;
    $this.$e0 = var$1 + 1 | 0;
    if (var$1 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
    $var1 = $this.$e0 / $this.$field_666_f;
    if (ju_Random_nextFloat($this.$rand2) > $var1)
        nms_World_spawnParticle($this.$worldObj0, $rt_s(283), $this.$posX, $this.$posY, $this.$posZ, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionY = $this.$motionY - 0.03;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    $this.$motionX = $this.$motionX * 0.9990000128746033;
    $this.$motionY = $this.$motionY * 0.9990000128746033;
    $this.$motionZ = $this.$motionZ * 0.9990000128746033;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
}
function nms_EntitySplashFX() {
    nms_EntityRainFX.call(this);
}
function nms_EntityReddustFX() {
    nms_EntityFX.call(this);
    this.$field_673_a = 0.0;
}
function nms_EntityReddustFX__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_EntityReddustFX();
    nms_EntityReddustFX__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_EntityReddustFX__init_0($this, $var1, $var2, $var4, $var6, $var8) {
    var var$6;
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, 0.0, 0.0, 0.0);
    $this.$motionX = $this.$motionX * 0.10000000149011612;
    $this.$motionY = $this.$motionY * 0.10000000149011612;
    $this.$motionZ = $this.$motionZ * 0.10000000149011612;
    $this.$field_663_i = jl_Math_random() * 0.30000001192092896 + 0.699999988079071;
    var$6 = jl_Math_random() * 0.10000000149011612;
    $this.$field_661_k = var$6;
    $this.$field_662_j = var$6;
    $this.$field_665_g = $this.$field_665_g * 0.75;
    $this.$field_665_g = $this.$field_665_g * $var8;
    $this.$field_673_a = $this.$field_665_g;
    $this.$field_666_f = 8.0 / (jl_Math_random() * 0.8 + 0.2) | 0;
    $this.$field_666_f = $this.$field_666_f * $var8 | 0;
    $this.$field_9314_ba = 0;
}
function nms_EntityReddustFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8;
    $var8 = ($this.$e0 + $var2) / $this.$field_666_f * 32.0;
    if ($var8 < 0.0)
        $var8 = 0.0;
    if ($var8 > 1.0)
        $var8 = 1.0;
    $this.$field_665_g = $this.$field_673_a * $var8;
    nms_EntityFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7);
}
function nms_EntityReddustFX_onUpdate($this) {
    var var$1;
    $this.$prevPosX = $this.$posX;
    $this.$prevPosY = $this.$posY;
    $this.$prevPosZ = $this.$posZ;
    var$1 = $this.$e0;
    $this.$e0 = var$1 + 1 | 0;
    if (var$1 >= $this.$field_666_f)
        nms_Entity_setEntityDead($this);
    $this.$field_670_b = 7 - (($this.$e0 * 8 | 0) / $this.$field_666_f | 0) | 0;
    nms_Entity_moveEntity($this, $this.$motionX, $this.$motionY, $this.$motionZ);
    if ($this.$posY === $this.$prevPosY) {
        $this.$motionX = $this.$motionX * 1.1;
        $this.$motionZ = $this.$motionZ * 1.1;
    }
    $this.$motionX = $this.$motionX * 0.9599999785423279;
    $this.$motionY = $this.$motionY * 0.9599999785423279;
    $this.$motionZ = $this.$motionZ * 0.9599999785423279;
    if ($this.$onGround) {
        $this.$motionX = $this.$motionX * 0.699999988079071;
        $this.$motionZ = $this.$motionZ * 0.699999988079071;
    }
}
function nms_EntitySlimeFX() {
    nms_EntityFX.call(this);
}
function nms_EntitySlimeFX__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new nms_EntitySlimeFX();
    nms_EntitySlimeFX__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function nms_EntitySlimeFX__init_($this, $var1, $var2, $var4, $var6, $var8) {
    nms_EntityFX__init_($this, $var1, $var2, $var4, $var6, 0.0, 0.0, 0.0);
    $this.$field_670_b = $var8.$iconIndex;
    $this.$field_661_k = 1.0;
    $this.$field_662_j = 1.0;
    $this.$field_663_i = 1.0;
    nms_Block_$callClinit();
    $this.$field_664_h = nms_Block_blockSnow.$field_357_bm;
    $this.$field_665_g = $this.$field_665_g / 2.0;
}
function nms_EntitySlimeFX_func_404_c($this) {
    return 2;
}
function nms_EntitySlimeFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var10, $var11, $var12, var$13, var$14, var$15, $var13, $var14, $var15, $var16, var$20, var$21, var$22, var$23, var$24, var$25;
    $var8 = (($this.$field_670_b % 16 | 0) + $this.$field_669_c / 4.0) / 16.0;
    $var9 = $var8 + 0.015609375201165676;
    $var10 = (($this.$field_670_b / 16 | 0) + $this.$field_668_d / 4.0) / 16.0;
    $var11 = $var10 + 0.015609375201165676;
    $var12 = 0.10000000149011612 * $this.$field_665_g;
    var$13 = $this.$prevPosX;
    var$14 = $this.$posX - $this.$prevPosX;
    var$15 = $var2;
    $var13 = var$13 + var$14 * var$15 - nms_EntityFX_field_660_l;
    $var14 = $this.$prevPosY + ($this.$posY - $this.$prevPosY) * var$15 - nms_EntityFX_field_659_m;
    $var15 = $this.$prevPosZ + ($this.$posZ - $this.$prevPosZ) * var$15 - nms_EntityFX_field_658_n;
    $var16 = nms_Entity_getEntityBrightness($this, $var2);
    nms_Tessellator_setColorOpaque_F($var1, $var16 * $this.$field_663_i, $var16 * $this.$field_662_j, $var16 * $this.$field_661_k);
    $var16 = $var3 * $var12;
    var$20 = $var13 - $var16;
    $var6 = $var6 * $var12;
    var$21 = var$20 - $var6;
    var$22 = $var4 * $var12;
    var$14 = $var14 - var$22;
    $var2 = $var5 * $var12;
    $var3 = $var15 - $var2;
    $var4 = $var7 * $var12;
    var$13 = $var3 - $var4;
    var$23 = $var8;
    var$15 = $var11;
    nms_Tessellator_addVertexWithUV($var1, var$21, var$14, var$13, var$23, var$15);
    var$13 = var$20 + $var6;
    var$21 = $var14 + var$22;
    var$24 = $var3 + $var4;
    var$25 = $var10;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$21, var$24, var$23, var$25);
    $var3 = $var13 + $var16;
    var$13 = $var3 + $var6;
    $var2 = $var15 + $var2;
    var$23 = $var2 + $var4;
    var$24 = $var9;
    nms_Tessellator_addVertexWithUV($var1, var$13, var$21, var$23, var$24, var$25);
    nms_Tessellator_addVertexWithUV($var1, $var3 - $var6, var$14, $var2 - $var4, var$24, var$15);
}
function nms_NoiseGenerator() {
    jl_Object.call(this);
}
function nms_NoiseGeneratorOctaves2() {
    var a = this; nms_NoiseGenerator.call(a);
    a.$field_4234_a = null;
    a.$field_4233_b = 0;
}
function nms_NoiseGeneratorOctaves2__init_(var_0, var_1) {
    var var_2 = new nms_NoiseGeneratorOctaves2();
    nms_NoiseGeneratorOctaves2__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_NoiseGeneratorOctaves2__init_0($this, $var1, $var2) {
    var $var3;
    $this.$field_4233_b = $var2;
    $this.$field_4234_a = $rt_createArray(nms_NoiseGenerator2, $var2);
    $var3 = 0;
    while ($var3 < $var2) {
        $this.$field_4234_a.data[$var3] = nms_NoiseGenerator2__init_0($var1);
        $var3 = $var3 + 1 | 0;
    }
}
function nms_NoiseGeneratorOctaves2_func_4112_a($this, $var1, $var2, $var4, $var6, $var7, $var8, $var10, $var12) {
    return nms_NoiseGeneratorOctaves2_func_4111_a($this, $var1, $var2, $var4, $var6, $var7, $var8, $var10, $var12, 0.5);
}
function nms_NoiseGeneratorOctaves2_func_4111_a($this, $var1, $var2, $var4, $var6, $var7, $var8, $var10, $var12, $var14) {
    var var$10, var$11, var$12, $var16, $var21, $var18, $var20;
    a: {
        $var8 = $var8 / 1.5;
        var$10 = $var10 / 1.5;
        if ($var1 !== null) {
            var$11 = $var1.data;
            var$12 = var$11.length;
            if (var$12 >= $rt_imul($var6, $var7)) {
                $var16 = 0;
                while ($var16 < var$12) {
                    var$11[$var16] = 0.0;
                    $var16 = $var16 + 1 | 0;
                }
                break a;
            }
        }
        $var1 = $rt_createDoubleArray($rt_imul($var6, $var7));
    }
    $var21 = 1.0;
    $var18 = 1.0;
    $var20 = 0;
    while ($var20 < $this.$field_4233_b) {
        nms_NoiseGenerator2_func_4157_a($this.$field_4234_a.data[$var20], $var1, $var2, $var4, $var6, $var7, $var8 * $var18, var$10 * $var18, 0.55 / $var21);
        $var18 = $var18 * $var12;
        $var21 = $var21 * $var14;
        $var20 = $var20 + 1 | 0;
    }
    return $var1;
}
function nms_CraftingInventoryWorkbenchCB() {
    var a = this; nms_CraftingInventoryCB.call(a);
    a.$craftMatrix = null;
    a.$craftResult = null;
}
function nms_CraftingInventoryWorkbenchCB__init_0() {
    var var_0 = new nms_CraftingInventoryWorkbenchCB();
    nms_CraftingInventoryWorkbenchCB__init_(var_0);
    return var_0;
}
function nms_CraftingInventoryWorkbenchCB__init_($this) {
    var var$1;
    nms_CraftingInventoryCB__init_($this);
    var$1 = new nms_InventoryCrafting;
    var$1.$nbrSlots = 9;
    var$1.$stackList = $rt_createArray(nms_ItemStack, var$1.$nbrSlots);
    var$1.$eventHandler = $this;
    $this.$craftMatrix = var$1;
    $this.$craftResult = nms_InventoryCraftResult__init_0();
}
function nms_CraftingInventoryWorkbenchCB_onCraftMatrixChanged($this, $var1) {
    var $var2, var$3, $var3, $var4, $var5, $var6;
    $var2 = $rt_createIntArray(9);
    var$3 = $var2.data;
    $var3 = 0;
    while ($var3 < 3) {
        $var4 = 0;
        while ($var4 < 3) {
            $var5 = $var3 + ($var4 * 3 | 0) | 0;
            $var6 = nms_InventoryCrafting_getStackInSlot($this.$craftMatrix, $var5);
            if ($var6 !== null)
                var$3[$var5] = $var6.$itemID;
            else
                var$3[$var5] = (-1);
            $var4 = $var4 + 1 | 0;
        }
        $var3 = $var3 + 1 | 0;
    }
    nms_InventoryCraftResult_setInventorySlotContents($this.$craftResult, 0, nms_CraftingManager_craft(nms_CraftingManager_getInstance(), $var2));
}
function nms_CraftingInventoryWorkbenchCB_onCraftGuiClosed($this, $var1) {
    var $var3, $var2;
    $var3 = $var1.$inventory0;
    if ($var3.$draggingItemStack !== null)
        nms_EntityPlayer_dropPlayerItem($var1, $var3.$draggingItemStack);
    $var2 = 0;
    while ($var2 < 9) {
        $var3 = nms_InventoryCrafting_getStackInSlot($this.$craftMatrix, $var2);
        if ($var3 !== null)
            nms_EntityPlayer_dropPlayerItem($var1, $var3);
        $var2 = $var2 + 1 | 0;
    }
}
function nms_MapGenBase() {
    var a = this; jl_Object.call(a);
    a.$field_1306_a = 0;
    a.$field_1305_b = null;
}
function nms_MapGenBase__init_0() {
    var var_0 = new nms_MapGenBase();
    nms_MapGenBase__init_(var_0);
    return var_0;
}
function nms_MapGenBase__init_($this) {
    $this.$field_1306_a = 8;
    $this.$field_1305_b = new ju_Random;
}
function nms_MapGenBase_func_867_a($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var11, var$8, var$9, var$10, $var12;
    $var6 = $this.$field_1306_a;
    ju_Random_nextLong($this.$field_1305_b);
    ju_Random_nextLong($this.$field_1305_b);
    $var11 = $var3 - $var6 | 0;
    var$8 = $var3 + $var6 | 0;
    var$9 = $var4 - $var6 | 0;
    var$10 = $var4 + $var6 | 0;
    while ($var11 <= var$8) {
        $var12 = var$9;
        while ($var12 <= var$10) {
            $this.$func_868_a($var2, $var11, $var12, $var3, $var4, $var5);
            $var12 = $var12 + 1 | 0;
        }
        $var11 = $var11 + 1 | 0;
    }
}
function nms_MapGenCaves() {
    nms_MapGenBase.call(this);
}
function nms_MapGenCaves__init_0() {
    var var_0 = new nms_MapGenCaves();
    nms_MapGenCaves__init_(var_0);
    return var_0;
}
function nms_MapGenCaves__init_($this) {
    nms_MapGenBase__init_($this);
}
function nms_MapGenCaves_func_870_a($this, $var1, $var2, $var3, $var4, $var6, $var8) {
    nms_MapGenCaves_func_869_a($this, $var1, $var2, $var3, $var4, $var6, $var8, 1.0 + ju_Random_nextFloat($this.$field_1305_b) * 6.0, 0.0, 0.0, (-1), (-1), 0.5);
}
function nms_MapGenCaves_func_869_a($this, $var1, $var2, $var3, $var4, $var6, $var8, $var10, $var11, $var12, $var13, $var14, $var15) {
    var var$13, $var17, var$15, $var19, $var21, $var22, $var23, $var24, $var52, $var25, $var26, $var39, var$25, var$26, var$27, var$28, $var27, $var29, $var31, $var32, var$33, $var33, $var35, $var37, $var53, $var34, $var54, $var36, $var55, $var38, $var56, $var40, $var41, $var42, $var46, $var43, var$49, $var47, $var57, $var44, $var48, $var49, $var51;
    var$13 = $var1 * 16 | 0;
    $var17 = var$13 + 8 | 0;
    var$15 = $var2 * 16 | 0;
    $var19 = var$15 + 8 | 0;
    $var21 = 0.0;
    $var22 = 0.0;
    $var23 = ju_Random__init_1(ju_Random_nextLong($this.$field_1305_b));
    if ($var14 <= 0) {
        $var24 = ($this.$field_1306_a * 16 | 0) - 16 | 0;
        $var14 = $var24 - ju_Random_nextInt($var23, $var24 / 4 | 0) | 0;
    }
    $var52 = 0;
    if ($var13 == (-1)) {
        $var13 = $var14 / 2 | 0;
        $var52 = 1;
    }
    $var25 = ju_Random_nextInt($var23, $var14 / 2 | 0) + ($var14 / 4 | 0) | 0;
    $var26 = ju_Random_nextInt($var23, 6) ? 0 : 1;
    $var24 = $rt_compare($var10, 1.0);
    $var39 = $var10 + 2.0 + 16.0;
    var$25 = $var39 * $var39;
    var$26 = $var17 - 16.0;
    var$27 = $var19 - 16.0;
    var$28 = $var17 + 16.0;
    $var39 = $var19 + 16.0;
    a: {
        while (true) {
            if ($var13 >= $var14)
                break a;
            $var27 = 1.5 + nms_MathHelper_sin($var13 * 3.1415927410125732 / $var14) * $var10 * 1.0;
            $var29 = $var27 * $var15;
            $var31 = nms_MathHelper_cos($var12);
            $var32 = nms_MathHelper_sin($var12);
            $var4 = $var4 + nms_MathHelper_cos($var11) * $var31;
            $var6 = $var6 + $var32;
            $var8 = $var8 + nms_MathHelper_sin($var11) * $var31;
            $var12 = (!$var26 ? $var12 * 0.699999988079071 : $var12 * 0.9200000166893005) + $var22 * 0.10000000149011612;
            $var11 = $var11 + $var21 * 0.10000000149011612;
            var$33 = $var22 * 0.8999999761581421;
            $var31 = $var21 * 0.75;
            $var22 = var$33 + (ju_Random_nextFloat($var23) - ju_Random_nextFloat($var23)) * ju_Random_nextFloat($var23) * 2.0;
            $var21 = $var31 + (ju_Random_nextFloat($var23) - ju_Random_nextFloat($var23)) * ju_Random_nextFloat($var23) * 4.0;
            if (!$var52 && $var13 == $var25 && $var24 > 0) {
                $var10 = ju_Random_nextFloat($var23) * 0.5 + 0.5;
                var$33 = $var11 - 1.5707963705062866;
                $var12 = $var12 / 3.0;
                nms_MapGenCaves_func_869_a($this, $var1, $var2, $var3, $var4, $var6, $var8, $var10, var$33, $var12, $var13, $var14, 1.0);
                nms_MapGenCaves_func_869_a($this, $var1, $var2, $var3, $var4, $var6, $var8, ju_Random_nextFloat($var23) * 0.5 + 0.5, $var11 + 1.5707963705062866, $var12, $var13, $var14, 1.0);
                return;
            }
            if (!(!$var52 && !ju_Random_nextInt($var23, 4))) {
                $var33 = $var4 - $var17;
                $var35 = $var8 - $var19;
                $var37 = $var14 - $var13 | 0;
                if ($var33 * $var33 + $var35 * $var35 - $var37 * $var37 > var$25)
                    break;
                $var33 = $var27 * 2.0;
                if ($var4 >= var$26 - $var33 && $var8 >= var$27 - $var33 && $var4 <= var$28 + $var33 && $var8 <= $var39 + $var33) {
                    $var53 = (nms_MathHelper_floor_double($var4 - $var27) - var$13 | 0) - 1 | 0;
                    $var34 = (nms_MathHelper_floor_double($var4 + $var27) - var$13 | 0) + 1 | 0;
                    $var54 = nms_MathHelper_floor_double($var6 - $var29) - 1 | 0;
                    $var36 = nms_MathHelper_floor_double($var6 + $var29) + 1 | 0;
                    $var55 = (nms_MathHelper_floor_double($var8 - $var27) - var$15 | 0) - 1 | 0;
                    $var38 = (nms_MathHelper_floor_double($var8 + $var27) - var$15 | 0) + 1 | 0;
                    if ($var53 < 0)
                        $var53 = 0;
                    if ($var34 > 16)
                        $var34 = 16;
                    if ($var54 < 1)
                        $var54 = 1;
                    if ($var36 > 120)
                        $var36 = 120;
                    if ($var55 < 0)
                        $var55 = 0;
                    if ($var38 > 16)
                        $var38 = 16;
                    $var56 = 0;
                    $var40 = $var53;
                    while (!$var56 && $var40 < $var34) {
                        $var41 = $var55;
                        while (!$var56 && $var41 < $var38) {
                            $var42 = $var36 + 1 | 0;
                            while (!$var56) {
                                $var46 = $rt_compare($var42, $var54 - 1 | 0);
                                if ($var46 < 0)
                                    break;
                                $var43 = ((($var40 * 16 | 0) + $var41 | 0) * 128 | 0) + $var42 | 0;
                                if ($var42 >= 0 && $var42 < 128) {
                                    var$49 = $var3.data;
                                    $var47 = var$49[$var43];
                                    nms_Block_$callClinit();
                                    if (!($var47 != nms_Block_waterStill.$blockID && var$49[$var43] != nms_Block_waterMoving.$blockID))
                                        $var56 = 1;
                                    if ($var46 && $var40 != $var53 && $var40 != ($var34 - 1 | 0) && $var41 != $var55 && $var41 != ($var38 - 1 | 0))
                                        $var42 = $var54;
                                }
                                $var42 = $var42 + (-1) | 0;
                            }
                            $var41 = $var41 + 1 | 0;
                        }
                        $var40 = $var40 + 1 | 0;
                    }
                    if (!$var56) {
                        while ($var53 < $var34) {
                            $var57 = (($var53 + var$13 | 0) + 0.5 - $var4) / $var27;
                            $var37 = $var57 * $var57;
                            $var43 = $var55;
                            while ($var43 < $var38) {
                                $var44 = (($var43 + var$15 | 0) + 0.5 - $var8) / $var27;
                                $var46 = ((($var53 * 16 | 0) + $var43 | 0) * 128 | 0) + $var36 | 0;
                                $var47 = 0;
                                $var48 = $var36 - 1 | 0;
                                $var57 = $var44 * $var44;
                                while ($var48 >= $var54) {
                                    $var49 = ($var48 + 0.5 - $var6) / $var29;
                                    if ($var49 > (-0.7) && $var37 + $var49 * $var49 + $var57 < 1.0) {
                                        var$49 = $var3.data;
                                        $var51 = var$49[$var46];
                                        nms_Block_$callClinit();
                                        if ($var51 == nms_Block_grass.$blockID)
                                            $var47 = 1;
                                        if (!($var51 != nms_Block_stone.$blockID && $var51 != nms_Block_dirt.$blockID && $var51 != nms_Block_grass.$blockID)) {
                                            if ($var48 < 10)
                                                var$49[$var46] = nms_Block_lavaStill.$blockID << 24 >> 24;
                                            else {
                                                var$49[$var46] = 0;
                                                if ($var47) {
                                                    $var42 = $var46 - 1 | 0;
                                                    if (var$49[$var42] == nms_Block_dirt.$blockID)
                                                        var$49[$var42] = nms_Block_grass.$blockID << 24 >> 24;
                                                }
                                            }
                                        }
                                    }
                                    $var46 = $var46 + (-1) | 0;
                                    $var48 = $var48 + (-1) | 0;
                                }
                                $var43 = $var43 + 1 | 0;
                            }
                            $var53 = $var53 + 1 | 0;
                        }
                        if ($var52)
                            break a;
                    }
                }
            }
            $var13 = $var13 + 1 | 0;
        }
        return;
    }
}
function nms_MapGenCaves_func_868_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8, var$9, $var9, $var11, $var13, $var15, $var16, $var17, $var18;
    $var7 = ju_Random_nextInt($this.$field_1305_b, ju_Random_nextInt($this.$field_1305_b, ju_Random_nextInt($this.$field_1305_b, 40) + 1 | 0) + 1 | 0);
    if (ju_Random_nextInt($this.$field_1305_b, 15))
        $var7 = 0;
    $var8 = 0;
    var$9 = $var2 * 16 | 0;
    $var3 = $var3 * 16 | 0;
    while ($var8 < $var7) {
        $var9 = var$9 + ju_Random_nextInt($this.$field_1305_b, 16) | 0;
        $var11 = ju_Random_nextInt($this.$field_1305_b, ju_Random_nextInt($this.$field_1305_b, 120) + 8 | 0);
        $var13 = $var3 + ju_Random_nextInt($this.$field_1305_b, 16) | 0;
        $var15 = 1;
        if (!ju_Random_nextInt($this.$field_1305_b, 4)) {
            nms_MapGenCaves_func_870_a($this, $var4, $var5, $var6, $var9, $var11, $var13);
            $var15 = $var15 + ju_Random_nextInt($this.$field_1305_b, 4) | 0;
        }
        $var16 = 0;
        while ($var16 < $var15) {
            $var17 = ju_Random_nextFloat($this.$field_1305_b) * 3.1415927410125732 * 2.0;
            $var18 = (ju_Random_nextFloat($this.$field_1305_b) - 0.5) * 2.0 / 8.0;
            nms_MapGenCaves_func_869_a($this, $var4, $var5, $var6, $var9, $var11, $var13, ju_Random_nextFloat($this.$field_1305_b) * 2.0 + ju_Random_nextFloat($this.$field_1305_b), $var17, $var18, 0, 0, 1.0);
            $var16 = $var16 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
}
function nms_NoiseGeneratorOctaves() {
    var a = this; nms_NoiseGenerator.call(a);
    a.$generatorCollection = null;
    a.$field_1191_b = 0;
}
function nms_NoiseGeneratorOctaves__init_(var_0, var_1) {
    var var_2 = new nms_NoiseGeneratorOctaves();
    nms_NoiseGeneratorOctaves__init_0(var_2, var_0, var_1);
    return var_2;
}
function nms_NoiseGeneratorOctaves__init_0($this, $var1, $var2) {
    var $var3;
    $this.$field_1191_b = $var2;
    $this.$generatorCollection = $rt_createArray(nms_NoiseGeneratorPerlin, $var2);
    $var3 = 0;
    while ($var3 < $var2) {
        $this.$generatorCollection.data[$var3] = nms_NoiseGeneratorPerlin__init_0($var1);
        $var3 = $var3 + 1 | 0;
    }
}
function nms_NoiseGeneratorOctaves_func_806_a($this, $var1, $var3) {
    var $var5, $var7, $var9;
    $var5 = 0.0;
    $var7 = 1.0;
    $var9 = 0;
    while ($var9 < $this.$field_1191_b) {
        $var5 = $var5 + nms_NoiseGeneratorPerlin_func_801_a($this.$generatorCollection.data[$var9], $var1 * $var7, $var3 * $var7) / $var7;
        $var7 = $var7 / 2.0;
        $var9 = $var9 + 1 | 0;
    }
    return $var5;
}
function nms_NoiseGeneratorOctaves_func_807_a($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $var13, $var15) {
    var $var17, var$12, $var20, $var19;
    if ($var1 === null)
        $var1 = $rt_createDoubleArray($rt_imul($rt_imul($var8, $var9), $var10));
    else {
        $var17 = 0;
        while (true) {
            var$12 = $var1.data;
            if ($var17 >= var$12.length)
                break;
            var$12[$var17] = 0.0;
            $var17 = $var17 + 1 | 0;
        }
    }
    $var20 = 1.0;
    $var19 = 0;
    while ($var19 < $this.$field_1191_b) {
        nms_NoiseGeneratorPerlin_func_805_a($this.$generatorCollection.data[$var19], $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11 * $var20, $var13 * $var20, $var15 * $var20, $var20);
        $var20 = $var20 / 2.0;
        $var19 = $var19 + 1 | 0;
    }
    return $var1;
}
function nms_NoiseGeneratorOctaves_func_4109_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var8, $var10) {
    return nms_NoiseGeneratorOctaves_func_807_a($this, $var1, $var2, 10.0, $var3, $var4, 1, $var5, $var6, 1.0, $var8);
}
function nms_MapGenCavesHell() {
    nms_MapGenBase.call(this);
}
function nms_MapGenCavesHell__init_0() {
    var var_0 = new nms_MapGenCavesHell();
    nms_MapGenCavesHell__init_(var_0);
    return var_0;
}
function nms_MapGenCavesHell__init_($this) {
    nms_MapGenBase__init_($this);
}
function nms_MapGenCavesHell_func_4129_a($this, $var1, $var2, $var3, $var4, $var6, $var8) {
    nms_MapGenCavesHell_func_4128_a($this, $var1, $var2, $var3, $var4, $var6, $var8, 1.0 + ju_Random_nextFloat($this.$field_1305_b) * 6.0, 0.0, 0.0, (-1), (-1), 0.5);
}
function nms_MapGenCavesHell_func_4128_a($this, $var1, $var2, $var3, $var4, $var6, $var8, $var10, $var11, $var12, $var13, $var14, $var15) {
    var var$13, $var17, var$15, $var19, $var21, $var22, $var23, $var24, $var51, $var25, $var26, $var39, var$25, var$26, var$27, var$28, $var27, $var29, $var31, $var32, var$33, $var33, $var35, $var37, $var48, $var52, $var34, $var53, $var36, $var54, $var38, $var55, $var40, $var41, $var42, $var50, $var43, var$50, $var47, $var56, $var44, $var46;
    var$13 = $var1 * 16 | 0;
    $var17 = var$13 + 8 | 0;
    var$15 = $var2 * 16 | 0;
    $var19 = var$15 + 8 | 0;
    $var21 = 0.0;
    $var22 = 0.0;
    $var23 = ju_Random__init_1(ju_Random_nextLong($this.$field_1305_b));
    if ($var14 <= 0) {
        $var24 = ($this.$field_1306_a * 16 | 0) - 16 | 0;
        $var14 = $var24 - ju_Random_nextInt($var23, $var24 / 4 | 0) | 0;
    }
    $var51 = 0;
    if ($var13 == (-1)) {
        $var13 = $var14 / 2 | 0;
        $var51 = 1;
    }
    $var25 = ju_Random_nextInt($var23, $var14 / 2 | 0) + ($var14 / 4 | 0) | 0;
    $var26 = ju_Random_nextInt($var23, 6) ? 0 : 1;
    $var24 = $rt_compare($var10, 1.0);
    $var39 = $var10 + 2.0 + 16.0;
    $var39 = $var39 * $var39;
    var$25 = $var17 - 16.0;
    var$26 = $var19 - 16.0;
    var$27 = $var17 + 16.0;
    var$28 = $var19 + 16.0;
    a: {
        while (true) {
            if ($var13 >= $var14)
                break a;
            $var27 = 1.5 + nms_MathHelper_sin($var13 * 3.1415927410125732 / $var14) * $var10 * 1.0;
            $var29 = $var27 * $var15;
            $var31 = nms_MathHelper_cos($var12);
            $var32 = nms_MathHelper_sin($var12);
            $var4 = $var4 + nms_MathHelper_cos($var11) * $var31;
            $var6 = $var6 + $var32;
            $var8 = $var8 + nms_MathHelper_sin($var11) * $var31;
            $var12 = (!$var26 ? $var12 * 0.699999988079071 : $var12 * 0.9200000166893005) + $var22 * 0.10000000149011612;
            $var11 = $var11 + $var21 * 0.10000000149011612;
            var$33 = $var22 * 0.8999999761581421;
            $var31 = $var21 * 0.75;
            $var22 = var$33 + (ju_Random_nextFloat($var23) - ju_Random_nextFloat($var23)) * ju_Random_nextFloat($var23) * 2.0;
            $var21 = $var31 + (ju_Random_nextFloat($var23) - ju_Random_nextFloat($var23)) * ju_Random_nextFloat($var23) * 4.0;
            if (!$var51 && $var13 == $var25 && $var24 > 0) {
                $var10 = ju_Random_nextFloat($var23) * 0.5 + 0.5;
                var$33 = $var11 - 1.5707963705062866;
                $var12 = $var12 / 3.0;
                nms_MapGenCavesHell_func_4128_a($this, $var1, $var2, $var3, $var4, $var6, $var8, $var10, var$33, $var12, $var13, $var14, 1.0);
                nms_MapGenCavesHell_func_4128_a($this, $var1, $var2, $var3, $var4, $var6, $var8, ju_Random_nextFloat($var23) * 0.5 + 0.5, $var11 + 1.5707963705062866, $var12, $var13, $var14, 1.0);
                return;
            }
            if (!(!$var51 && !ju_Random_nextInt($var23, 4))) {
                $var33 = $var4 - $var17;
                $var35 = $var8 - $var19;
                $var37 = $var14 - $var13 | 0;
                if ($var33 * $var33 + $var35 * $var35 - $var37 * $var37 > $var39)
                    break;
                $var48 = $var27 * 2.0;
                if ($var4 >= var$25 - $var48 && $var8 >= var$26 - $var48 && $var4 <= var$27 + $var48 && $var8 <= var$28 + $var48) {
                    $var52 = (nms_MathHelper_floor_double($var4 - $var27) - var$13 | 0) - 1 | 0;
                    $var34 = (nms_MathHelper_floor_double($var4 + $var27) - var$13 | 0) + 1 | 0;
                    $var53 = nms_MathHelper_floor_double($var6 - $var29) - 1 | 0;
                    $var36 = nms_MathHelper_floor_double($var6 + $var29) + 1 | 0;
                    $var54 = (nms_MathHelper_floor_double($var8 - $var27) - var$15 | 0) - 1 | 0;
                    $var38 = (nms_MathHelper_floor_double($var8 + $var27) - var$15 | 0) + 1 | 0;
                    if ($var52 < 0)
                        $var52 = 0;
                    if ($var34 > 16)
                        $var34 = 16;
                    if ($var53 < 1)
                        $var53 = 1;
                    if ($var36 > 120)
                        $var36 = 120;
                    if ($var54 < 0)
                        $var54 = 0;
                    if ($var38 > 16)
                        $var38 = 16;
                    $var55 = 0;
                    $var40 = $var52;
                    while (!$var55 && $var40 < $var34) {
                        $var41 = $var54;
                        while (!$var55 && $var41 < $var38) {
                            $var42 = $var36 + 1 | 0;
                            while (!$var55) {
                                $var50 = $rt_compare($var42, $var53 - 1 | 0);
                                if ($var50 < 0)
                                    break;
                                $var43 = ((($var40 * 16 | 0) + $var41 | 0) * 128 | 0) + $var42 | 0;
                                if ($var42 >= 0 && $var42 < 128) {
                                    var$50 = $var3.data;
                                    $var47 = var$50[$var43];
                                    nms_Block_$callClinit();
                                    if (!($var47 != nms_Block_lavaStill.$blockID && var$50[$var43] != nms_Block_lavaMoving.$blockID))
                                        $var55 = 1;
                                    if ($var50 && $var40 != $var52 && $var40 != ($var34 - 1 | 0) && $var41 != $var54 && $var41 != ($var38 - 1 | 0))
                                        $var42 = $var53;
                                }
                                $var42 = $var42 + (-1) | 0;
                            }
                            $var41 = $var41 + 1 | 0;
                        }
                        $var40 = $var40 + 1 | 0;
                    }
                    if (!$var55) {
                        while ($var52 < $var34) {
                            $var56 = (($var52 + var$13 | 0) + 0.5 - $var4) / $var27;
                            $var33 = $var56 * $var56;
                            $var43 = $var54;
                            while ($var43 < $var38) {
                                $var44 = (($var43 + var$15 | 0) + 0.5 - $var8) / $var27;
                                $var46 = ((($var52 * 16 | 0) + $var43 | 0) * 128 | 0) + $var36 | 0;
                                $var47 = $var36 - 1 | 0;
                                $var56 = $var44 * $var44;
                                while ($var47 >= $var53) {
                                    $var48 = ($var47 + 0.5 - $var6) / $var29;
                                    if ($var48 > (-0.7) && $var33 + $var48 * $var48 + $var56 < 1.0) {
                                        var$50 = $var3.data;
                                        $var50 = var$50[$var46];
                                        nms_Block_$callClinit();
                                        if (!($var50 != nms_Block_bloodStone.$blockID && $var50 != nms_Block_dirt.$blockID && $var50 != nms_Block_grass.$blockID))
                                            var$50[$var46] = 0;
                                    }
                                    $var46 = $var46 + (-1) | 0;
                                    $var47 = $var47 + (-1) | 0;
                                }
                                $var43 = $var43 + 1 | 0;
                            }
                            $var52 = $var52 + 1 | 0;
                        }
                        if ($var51)
                            break a;
                    }
                }
            }
            $var13 = $var13 + 1 | 0;
        }
        return;
    }
}
function nms_MapGenCavesHell_func_868_a($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, $var8, var$9, var$10, $var9, $var11, $var13, $var15, $var16, $var17, $var18;
    $var7 = ju_Random_nextInt($this.$field_1305_b, ju_Random_nextInt($this.$field_1305_b, ju_Random_nextInt($this.$field_1305_b, 10) + 1 | 0) + 1 | 0);
    if (ju_Random_nextInt($this.$field_1305_b, 5))
        $var7 = 0;
    $var8 = 0;
    var$9 = $var2 * 16 | 0;
    var$10 = $var3 * 16 | 0;
    while ($var8 < $var7) {
        $var9 = var$9 + ju_Random_nextInt($this.$field_1305_b, 16) | 0;
        $var11 = ju_Random_nextInt($this.$field_1305_b, 128);
        $var13 = var$10 + ju_Random_nextInt($this.$field_1305_b, 16) | 0;
        $var15 = 1;
        if (!ju_Random_nextInt($this.$field_1305_b, 4)) {
            nms_MapGenCavesHell_func_4129_a($this, $var4, $var5, $var6, $var9, $var11, $var13);
            $var15 = $var15 + ju_Random_nextInt($this.$field_1305_b, 4) | 0;
        }
        $var16 = 0;
        while ($var16 < $var15) {
            $var17 = ju_Random_nextFloat($this.$field_1305_b) * 3.1415927410125732 * 2.0;
            $var18 = (ju_Random_nextFloat($this.$field_1305_b) - 0.5) * 2.0 / 8.0;
            nms_MapGenCavesHell_func_4128_a($this, $var4, $var5, $var6, $var9, $var11, $var13, (ju_Random_nextFloat($this.$field_1305_b) * 2.0 + ju_Random_nextFloat($this.$field_1305_b)) * 2.0, $var17, $var18, 0, 0, 0.5);
            $var16 = $var16 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
}
function cjj_Tree() {
    var a = this; jl_Object.call(a);
    a.$dyn_tree = null;
    a.$max_code = 0;
    a.$stat_desc = null;
}
var cjj_Tree_extra_lbits = null;
var cjj_Tree_extra_dbits = null;
var cjj_Tree_extra_blbits = null;
var cjj_Tree_bl_order = null;
var cjj_Tree__dist_code = null;
var cjj_Tree__length_code = null;
var cjj_Tree_base_length = null;
var cjj_Tree_base_dist = null;
function cjj_Tree__init_0() {
    var var_0 = new cjj_Tree();
    cjj_Tree__init_(var_0);
    return var_0;
}
function cjj_Tree__init_($this) {
    return;
}
function cjj_Tree_d_code($dist) {
    return $dist < 256 ? cjj_Tree__dist_code.data[$dist] : cjj_Tree__dist_code.data[256 + ($dist >>> 7) | 0];
}
function cjj_Tree_gen_bitlen($this, $s) {
    var $tree, $stree, $extra, $base, $max_length, $overflow, $bits, var$9, $h, $n, $m, $n_0, $xbits, $f;
    $tree = $this.$dyn_tree;
    $stree = $this.$stat_desc.$static_tree;
    $extra = $this.$stat_desc.$extra_bits;
    $base = $this.$stat_desc.$extra_base;
    $max_length = $this.$stat_desc.$max_length;
    $overflow = 0;
    $bits = 0;
    while ($bits <= 15) {
        $s.$bl_count.data[$bits] = 0;
        $bits = $bits + 1 | 0;
    }
    var$9 = $tree.data;
    var$9[($s.$heap.data[$s.$heap_max] * 2 | 0) + 1 | 0] = 0;
    $h = $s.$heap_max + 1 | 0;
    while ($h < 573) {
        $n = $s.$heap.data[$h];
        $m = $n * 2 | 0;
        $n_0 = $m + 1 | 0;
        $bits = var$9[(var$9[$n_0] * 2 | 0) + 1 | 0] + 1 | 0;
        if ($bits > $max_length) {
            $overflow = $overflow + 1 | 0;
            $bits = $max_length;
        }
        var$9[$n_0] = $bits << 16 >> 16;
        if ($n <= $this.$max_code) {
            $tree = $s.$bl_count.data;
            $tree[$bits] = ($tree[$bits] + 1 | 0) << 16 >> 16;
            $xbits = 0;
            if ($n >= $base)
                $xbits = $extra.data[$n - $base | 0];
            $f = var$9[$m];
            $s.$opt_len = $s.$opt_len + $rt_imul($f, $bits + $xbits | 0) | 0;
            if ($stree !== null) {
                $tree = $stree.data;
                $s.$static_len = $s.$static_len + $rt_imul($f, $tree[$n_0] + $xbits | 0) | 0;
            }
        }
        $h = $h + 1 | 0;
    }
    if (!$overflow)
        return;
    $xbits = $max_length - 1 | 0;
    while (true) {
        $base = $xbits;
        while (!$s.$bl_count.data[$base]) {
            $base = $base + (-1) | 0;
        }
        $tree = $s.$bl_count.data;
        $tree[$base] = ($tree[$base] - 1 | 0) << 16 >> 16;
        $tree = $s.$bl_count.data;
        $n_0 = $base + 1 | 0;
        $tree[$n_0] = ($tree[$n_0] + 2 | 0) << 16 >> 16;
        $tree = $s.$bl_count.data;
        $tree[$max_length] = ($tree[$max_length] - 1 | 0) << 16 >> 16;
        $overflow = $overflow + (-2) | 0;
        if ($overflow <= 0)
            break;
    }
    while ($max_length) {
        $n_0 = $s.$bl_count.data[$max_length];
        while ($n_0) {
            $tree = $s.$heap.data;
            $h = $h + (-1) | 0;
            $m = $tree[$h];
            if ($m > $this.$max_code)
                continue;
            $overflow = $m * 2 | 0;
            $bits = $overflow + 1 | 0;
            if (var$9[$bits] != $max_length) {
                $s.$opt_len = Long_add(Long_fromInt($s.$opt_len), Long_mul(Long_sub(Long_fromInt($max_length), Long_fromInt(var$9[$bits])), Long_fromInt(var$9[$overflow]))).lo;
                var$9[$bits] = $max_length << 16 >> 16;
            }
            $n_0 = $n_0 + (-1) | 0;
        }
        $max_length = $max_length + (-1) | 0;
    }
}
function cjj_Tree_build_tree($this, $s) {
    var $tree, $stree, $node, $max_code, $n, var$7, $node_0, var$9, var$10, $m, var$12, var$13;
    $tree = $this.$dyn_tree;
    $stree = $this.$stat_desc.$static_tree;
    $node = $this.$stat_desc.$elems;
    $max_code = (-1);
    $s.$heap_len = 0;
    $s.$heap_max = 573;
    $n = 0;
    while ($n < $node) {
        var$7 = $tree.data;
        $node_0 = $n * 2 | 0;
        if (!var$7[$node_0])
            var$7[$node_0 + 1 | 0] = 0;
        else {
            var$7 = $s.$heap.data;
            $node_0 = $s.$heap_len + 1 | 0;
            $s.$heap_len = $node_0;
            var$7[$node_0] = $n;
            $s.$depth.data[$n] = 0;
            $max_code = $n;
        }
        $n = $n + 1 | 0;
    }
    while ($s.$heap_len < 2) {
        var$7 = $s.$heap;
        $node_0 = $s.$heap_len + 1 | 0;
        $s.$heap_len = $node_0;
        if ($max_code >= 2)
            var$9 = 0;
        else {
            $max_code = $max_code + 1 | 0;
            var$9 = $max_code;
        }
        var$7 = var$7.data;
        var$10 = $tree.data;
        var$7[$node_0] = var$9;
        $node_0 = var$9 * 2 | 0;
        var$10[$node_0] = 1;
        $s.$depth.data[var$9] = 0;
        $s.$opt_len = $s.$opt_len - 1 | 0;
        if ($stree === null)
            continue;
        var$7 = $stree.data;
        $s.$static_len = $s.$static_len - var$7[$node_0 + 1 | 0] | 0;
    }
    $this.$max_code = $max_code;
    var$9 = $s.$heap_len / 2 | 0;
    while (var$9 >= 1) {
        cjj_Deflate_pqdownheap($s, $tree, var$9);
        var$9 = var$9 + (-1) | 0;
    }
    while (true) {
        $stree = $tree.data;
        var$9 = $s.$heap.data[1];
        var$10 = $s.$heap.data;
        var$7 = $s.$heap.data;
        $m = $s.$heap_len;
        $s.$heap_len = $m - 1 | 0;
        var$10[1] = var$7[$m];
        cjj_Deflate_pqdownheap($s, $tree, 1);
        $m = $s.$heap.data[1];
        var$7 = $s.$heap.data;
        $node_0 = $s.$heap_max - 1 | 0;
        $s.$heap_max = $node_0;
        var$7[$node_0] = var$9;
        var$7 = $s.$heap.data;
        $node_0 = $s.$heap_max - 1 | 0;
        $s.$heap_max = $node_0;
        var$7[$node_0] = $m;
        $node_0 = $node * 2 | 0;
        var$12 = var$9 * 2 | 0;
        var$13 = $stree[var$12];
        $n = $m * 2 | 0;
        $stree[$node_0] = (var$13 + $stree[$n] | 0) << 16 >> 16;
        $s.$depth.data[$node] = (jl_Math_max($s.$depth.data[var$9], $s.$depth.data[$m]) + 1 | 0) << 24 >> 24;
        $node_0 = var$12 + 1 | 0;
        var$9 = $n + 1 | 0;
        $n = $node << 16 >> 16;
        $stree[var$9] = $n;
        $stree[$node_0] = $n;
        var$7 = $s.$heap.data;
        $node_0 = $node + 1 | 0;
        var$7[1] = $node;
        cjj_Deflate_pqdownheap($s, $tree, 1);
        if ($s.$heap_len < 2)
            break;
        $node = $node_0;
    }
    var$7 = $s.$heap.data;
    $node_0 = $s.$heap_max - 1 | 0;
    $s.$heap_max = $node_0;
    var$7[$node_0] = $s.$heap.data[1];
    cjj_Tree_gen_bitlen($this, $s);
    $tree = $s.$bl_count;
    var$7 = $s.$next_code.data;
    $node_0 = 0;
    var$7[0] = 0;
    var$9 = 1;
    while (var$9 <= 15) {
        $node_0 = ($node_0 + $tree.data[var$9 - 1 | 0] | 0) << 1 << 16 >> 16;
        var$7[var$9] = $node_0;
        var$9 = var$9 + 1 | 0;
    }
    var$9 = 0;
    while (var$9 <= $max_code) {
        $n = var$9 * 2 | 0;
        $node = $stree[$n + 1 | 0];
        if ($node) {
            $m = var$7[$node];
            var$7[$node] = ($m + 1 | 0) << 16 >> 16;
            $node_0 = 0;
            while (true) {
                $node_0 = $node_0 | $m & 1;
                $m = $m >>> 1;
                $node_0 = $node_0 << 1;
                $node = $node + (-1) | 0;
                if ($node <= 0)
                    break;
            }
            $stree[$n] = $node_0 >>> 1 << 16 >> 16;
        }
        var$9 = var$9 + 1 | 0;
    }
}
function cjj_Tree__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(29);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 0;
    var$2[5] = 0;
    var$2[6] = 0;
    var$2[7] = 0;
    var$2[8] = 1;
    var$2[9] = 1;
    var$2[10] = 1;
    var$2[11] = 1;
    var$2[12] = 2;
    var$2[13] = 2;
    var$2[14] = 2;
    var$2[15] = 2;
    var$2[16] = 3;
    var$2[17] = 3;
    var$2[18] = 3;
    var$2[19] = 3;
    var$2[20] = 4;
    var$2[21] = 4;
    var$2[22] = 4;
    var$2[23] = 4;
    var$2[24] = 5;
    var$2[25] = 5;
    var$2[26] = 5;
    var$2[27] = 5;
    var$2[28] = 0;
    cjj_Tree_extra_lbits = var$1;
    var$1 = $rt_createIntArray(30);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 1;
    var$2[5] = 1;
    var$2[6] = 2;
    var$2[7] = 2;
    var$2[8] = 3;
    var$2[9] = 3;
    var$2[10] = 4;
    var$2[11] = 4;
    var$2[12] = 5;
    var$2[13] = 5;
    var$2[14] = 6;
    var$2[15] = 6;
    var$2[16] = 7;
    var$2[17] = 7;
    var$2[18] = 8;
    var$2[19] = 8;
    var$2[20] = 9;
    var$2[21] = 9;
    var$2[22] = 10;
    var$2[23] = 10;
    var$2[24] = 11;
    var$2[25] = 11;
    var$2[26] = 12;
    var$2[27] = 12;
    var$2[28] = 13;
    var$2[29] = 13;
    cjj_Tree_extra_dbits = var$1;
    var$1 = $rt_createIntArray(19);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 0;
    var$2[2] = 0;
    var$2[3] = 0;
    var$2[4] = 0;
    var$2[5] = 0;
    var$2[6] = 0;
    var$2[7] = 0;
    var$2[8] = 0;
    var$2[9] = 0;
    var$2[10] = 0;
    var$2[11] = 0;
    var$2[12] = 0;
    var$2[13] = 0;
    var$2[14] = 0;
    var$2[15] = 0;
    var$2[16] = 2;
    var$2[17] = 3;
    var$2[18] = 7;
    cjj_Tree_extra_blbits = var$1;
    var$1 = $rt_createByteArray(19);
    var$2 = var$1.data;
    var$2[0] = 16;
    var$2[1] = 17;
    var$2[2] = 18;
    var$2[3] = 0;
    var$2[4] = 8;
    var$2[5] = 7;
    var$2[6] = 9;
    var$2[7] = 6;
    var$2[8] = 10;
    var$2[9] = 5;
    var$2[10] = 11;
    var$2[11] = 4;
    var$2[12] = 12;
    var$2[13] = 3;
    var$2[14] = 13;
    var$2[15] = 2;
    var$2[16] = 14;
    var$2[17] = 1;
    var$2[18] = 15;
    cjj_Tree_bl_order = var$1;
    var$1 = $rt_createByteArray(512);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 2;
    var$2[3] = 3;
    var$2[4] = 4;
    var$2[5] = 4;
    var$2[6] = 5;
    var$2[7] = 5;
    var$2[8] = 6;
    var$2[9] = 6;
    var$2[10] = 6;
    var$2[11] = 6;
    var$2[12] = 7;
    var$2[13] = 7;
    var$2[14] = 7;
    var$2[15] = 7;
    var$2[16] = 8;
    var$2[17] = 8;
    var$2[18] = 8;
    var$2[19] = 8;
    var$2[20] = 8;
    var$2[21] = 8;
    var$2[22] = 8;
    var$2[23] = 8;
    var$2[24] = 9;
    var$2[25] = 9;
    var$2[26] = 9;
    var$2[27] = 9;
    var$2[28] = 9;
    var$2[29] = 9;
    var$2[30] = 9;
    var$2[31] = 9;
    var$2[32] = 10;
    var$2[33] = 10;
    var$2[34] = 10;
    var$2[35] = 10;
    var$2[36] = 10;
    var$2[37] = 10;
    var$2[38] = 10;
    var$2[39] = 10;
    var$2[40] = 10;
    var$2[41] = 10;
    var$2[42] = 10;
    var$2[43] = 10;
    var$2[44] = 10;
    var$2[45] = 10;
    var$2[46] = 10;
    var$2[47] = 10;
    var$2[48] = 11;
    var$2[49] = 11;
    var$2[50] = 11;
    var$2[51] = 11;
    var$2[52] = 11;
    var$2[53] = 11;
    var$2[54] = 11;
    var$2[55] = 11;
    var$2[56] = 11;
    var$2[57] = 11;
    var$2[58] = 11;
    var$2[59] = 11;
    var$2[60] = 11;
    var$2[61] = 11;
    var$2[62] = 11;
    var$2[63] = 11;
    var$2[64] = 12;
    var$2[65] = 12;
    var$2[66] = 12;
    var$2[67] = 12;
    var$2[68] = 12;
    var$2[69] = 12;
    var$2[70] = 12;
    var$2[71] = 12;
    var$2[72] = 12;
    var$2[73] = 12;
    var$2[74] = 12;
    var$2[75] = 12;
    var$2[76] = 12;
    var$2[77] = 12;
    var$2[78] = 12;
    var$2[79] = 12;
    var$2[80] = 12;
    var$2[81] = 12;
    var$2[82] = 12;
    var$2[83] = 12;
    var$2[84] = 12;
    var$2[85] = 12;
    var$2[86] = 12;
    var$2[87] = 12;
    var$2[88] = 12;
    var$2[89] = 12;
    var$2[90] = 12;
    var$2[91] = 12;
    var$2[92] = 12;
    var$2[93] = 12;
    var$2[94] = 12;
    var$2[95] = 12;
    var$2[96] = 13;
    var$2[97] = 13;
    var$2[98] = 13;
    var$2[99] = 13;
    var$2[100] = 13;
    var$2[101] = 13;
    var$2[102] = 13;
    var$2[103] = 13;
    var$2[104] = 13;
    var$2[105] = 13;
    var$2[106] = 13;
    var$2[107] = 13;
    var$2[108] = 13;
    var$2[109] = 13;
    var$2[110] = 13;
    var$2[111] = 13;
    var$2[112] = 13;
    var$2[113] = 13;
    var$2[114] = 13;
    var$2[115] = 13;
    var$2[116] = 13;
    var$2[117] = 13;
    var$2[118] = 13;
    var$2[119] = 13;
    var$2[120] = 13;
    var$2[121] = 13;
    var$2[122] = 13;
    var$2[123] = 13;
    var$2[124] = 13;
    var$2[125] = 13;
    var$2[126] = 13;
    var$2[127] = 13;
    var$2[128] = 14;
    var$2[129] = 14;
    var$2[130] = 14;
    var$2[131] = 14;
    var$2[132] = 14;
    var$2[133] = 14;
    var$2[134] = 14;
    var$2[135] = 14;
    var$2[136] = 14;
    var$2[137] = 14;
    var$2[138] = 14;
    var$2[139] = 14;
    var$2[140] = 14;
    var$2[141] = 14;
    var$2[142] = 14;
    var$2[143] = 14;
    var$2[144] = 14;
    var$2[145] = 14;
    var$2[146] = 14;
    var$2[147] = 14;
    var$2[148] = 14;
    var$2[149] = 14;
    var$2[150] = 14;
    var$2[151] = 14;
    var$2[152] = 14;
    var$2[153] = 14;
    var$2[154] = 14;
    var$2[155] = 14;
    var$2[156] = 14;
    var$2[157] = 14;
    var$2[158] = 14;
    var$2[159] = 14;
    var$2[160] = 14;
    var$2[161] = 14;
    var$2[162] = 14;
    var$2[163] = 14;
    var$2[164] = 14;
    var$2[165] = 14;
    var$2[166] = 14;
    var$2[167] = 14;
    var$2[168] = 14;
    var$2[169] = 14;
    var$2[170] = 14;
    var$2[171] = 14;
    var$2[172] = 14;
    var$2[173] = 14;
    var$2[174] = 14;
    var$2[175] = 14;
    var$2[176] = 14;
    var$2[177] = 14;
    var$2[178] = 14;
    var$2[179] = 14;
    var$2[180] = 14;
    var$2[181] = 14;
    var$2[182] = 14;
    var$2[183] = 14;
    var$2[184] = 14;
    var$2[185] = 14;
    var$2[186] = 14;
    var$2[187] = 14;
    var$2[188] = 14;
    var$2[189] = 14;
    var$2[190] = 14;
    var$2[191] = 14;
    var$2[192] = 15;
    var$2[193] = 15;
    var$2[194] = 15;
    var$2[195] = 15;
    var$2[196] = 15;
    var$2[197] = 15;
    var$2[198] = 15;
    var$2[199] = 15;
    var$2[200] = 15;
    var$2[201] = 15;
    var$2[202] = 15;
    var$2[203] = 15;
    var$2[204] = 15;
    var$2[205] = 15;
    var$2[206] = 15;
    var$2[207] = 15;
    var$2[208] = 15;
    var$2[209] = 15;
    var$2[210] = 15;
    var$2[211] = 15;
    var$2[212] = 15;
    var$2[213] = 15;
    var$2[214] = 15;
    var$2[215] = 15;
    var$2[216] = 15;
    var$2[217] = 15;
    var$2[218] = 15;
    var$2[219] = 15;
    var$2[220] = 15;
    var$2[221] = 15;
    var$2[222] = 15;
    var$2[223] = 15;
    var$2[224] = 15;
    var$2[225] = 15;
    var$2[226] = 15;
    var$2[227] = 15;
    var$2[228] = 15;
    var$2[229] = 15;
    var$2[230] = 15;
    var$2[231] = 15;
    var$2[232] = 15;
    var$2[233] = 15;
    var$2[234] = 15;
    var$2[235] = 15;
    var$2[236] = 15;
    var$2[237] = 15;
    var$2[238] = 15;
    var$2[239] = 15;
    var$2[240] = 15;
    var$2[241] = 15;
    var$2[242] = 15;
    var$2[243] = 15;
    var$2[244] = 15;
    var$2[245] = 15;
    var$2[246] = 15;
    var$2[247] = 15;
    var$2[248] = 15;
    var$2[249] = 15;
    var$2[250] = 15;
    var$2[251] = 15;
    var$2[252] = 15;
    var$2[253] = 15;
    var$2[254] = 15;
    var$2[255] = 15;
    var$2[256] = 0;
    var$2[257] = 0;
    var$2[258] = 16;
    var$2[259] = 17;
    var$2[260] = 18;
    var$2[261] = 18;
    var$2[262] = 19;
    var$2[263] = 19;
    var$2[264] = 20;
    var$2[265] = 20;
    var$2[266] = 20;
    var$2[267] = 20;
    var$2[268] = 21;
    var$2[269] = 21;
    var$2[270] = 21;
    var$2[271] = 21;
    var$2[272] = 22;
    var$2[273] = 22;
    var$2[274] = 22;
    var$2[275] = 22;
    var$2[276] = 22;
    var$2[277] = 22;
    var$2[278] = 22;
    var$2[279] = 22;
    var$2[280] = 23;
    var$2[281] = 23;
    var$2[282] = 23;
    var$2[283] = 23;
    var$2[284] = 23;
    var$2[285] = 23;
    var$2[286] = 23;
    var$2[287] = 23;
    var$2[288] = 24;
    var$2[289] = 24;
    var$2[290] = 24;
    var$2[291] = 24;
    var$2[292] = 24;
    var$2[293] = 24;
    var$2[294] = 24;
    var$2[295] = 24;
    var$2[296] = 24;
    var$2[297] = 24;
    var$2[298] = 24;
    var$2[299] = 24;
    var$2[300] = 24;
    var$2[301] = 24;
    var$2[302] = 24;
    var$2[303] = 24;
    var$2[304] = 25;
    var$2[305] = 25;
    var$2[306] = 25;
    var$2[307] = 25;
    var$2[308] = 25;
    var$2[309] = 25;
    var$2[310] = 25;
    var$2[311] = 25;
    var$2[312] = 25;
    var$2[313] = 25;
    var$2[314] = 25;
    var$2[315] = 25;
    var$2[316] = 25;
    var$2[317] = 25;
    var$2[318] = 25;
    var$2[319] = 25;
    var$2[320] = 26;
    var$2[321] = 26;
    var$2[322] = 26;
    var$2[323] = 26;
    var$2[324] = 26;
    var$2[325] = 26;
    var$2[326] = 26;
    var$2[327] = 26;
    var$2[328] = 26;
    var$2[329] = 26;
    var$2[330] = 26;
    var$2[331] = 26;
    var$2[332] = 26;
    var$2[333] = 26;
    var$2[334] = 26;
    var$2[335] = 26;
    var$2[336] = 26;
    var$2[337] = 26;
    var$2[338] = 26;
    var$2[339] = 26;
    var$2[340] = 26;
    var$2[341] = 26;
    var$2[342] = 26;
    var$2[343] = 26;
    var$2[344] = 26;
    var$2[345] = 26;
    var$2[346] = 26;
    var$2[347] = 26;
    var$2[348] = 26;
    var$2[349] = 26;
    var$2[350] = 26;
    var$2[351] = 26;
    var$2[352] = 27;
    var$2[353] = 27;
    var$2[354] = 27;
    var$2[355] = 27;
    var$2[356] = 27;
    var$2[357] = 27;
    var$2[358] = 27;
    var$2[359] = 27;
    var$2[360] = 27;
    var$2[361] = 27;
    var$2[362] = 27;
    var$2[363] = 27;
    var$2[364] = 27;
    var$2[365] = 27;
    var$2[366] = 27;
    var$2[367] = 27;
    var$2[368] = 27;
    var$2[369] = 27;
    var$2[370] = 27;
    var$2[371] = 27;
    var$2[372] = 27;
    var$2[373] = 27;
    var$2[374] = 27;
    var$2[375] = 27;
    var$2[376] = 27;
    var$2[377] = 27;
    var$2[378] = 27;
    var$2[379] = 27;
    var$2[380] = 27;
    var$2[381] = 27;
    var$2[382] = 27;
    var$2[383] = 27;
    var$2[384] = 28;
    var$2[385] = 28;
    var$2[386] = 28;
    var$2[387] = 28;
    var$2[388] = 28;
    var$2[389] = 28;
    var$2[390] = 28;
    var$2[391] = 28;
    var$2[392] = 28;
    var$2[393] = 28;
    var$2[394] = 28;
    var$2[395] = 28;
    var$2[396] = 28;
    var$2[397] = 28;
    var$2[398] = 28;
    var$2[399] = 28;
    var$2[400] = 28;
    var$2[401] = 28;
    var$2[402] = 28;
    var$2[403] = 28;
    var$2[404] = 28;
    var$2[405] = 28;
    var$2[406] = 28;
    var$2[407] = 28;
    var$2[408] = 28;
    var$2[409] = 28;
    var$2[410] = 28;
    var$2[411] = 28;
    var$2[412] = 28;
    var$2[413] = 28;
    var$2[414] = 28;
    var$2[415] = 28;
    var$2[416] = 28;
    var$2[417] = 28;
    var$2[418] = 28;
    var$2[419] = 28;
    var$2[420] = 28;
    var$2[421] = 28;
    var$2[422] = 28;
    var$2[423] = 28;
    var$2[424] = 28;
    var$2[425] = 28;
    var$2[426] = 28;
    var$2[427] = 28;
    var$2[428] = 28;
    var$2[429] = 28;
    var$2[430] = 28;
    var$2[431] = 28;
    var$2[432] = 28;
    var$2[433] = 28;
    var$2[434] = 28;
    var$2[435] = 28;
    var$2[436] = 28;
    var$2[437] = 28;
    var$2[438] = 28;
    var$2[439] = 28;
    var$2[440] = 28;
    var$2[441] = 28;
    var$2[442] = 28;
    var$2[443] = 28;
    var$2[444] = 28;
    var$2[445] = 28;
    var$2[446] = 28;
    var$2[447] = 28;
    var$2[448] = 29;
    var$2[449] = 29;
    var$2[450] = 29;
    var$2[451] = 29;
    var$2[452] = 29;
    var$2[453] = 29;
    var$2[454] = 29;
    var$2[455] = 29;
    var$2[456] = 29;
    var$2[457] = 29;
    var$2[458] = 29;
    var$2[459] = 29;
    var$2[460] = 29;
    var$2[461] = 29;
    var$2[462] = 29;
    var$2[463] = 29;
    var$2[464] = 29;
    var$2[465] = 29;
    var$2[466] = 29;
    var$2[467] = 29;
    var$2[468] = 29;
    var$2[469] = 29;
    var$2[470] = 29;
    var$2[471] = 29;
    var$2[472] = 29;
    var$2[473] = 29;
    var$2[474] = 29;
    var$2[475] = 29;
    var$2[476] = 29;
    var$2[477] = 29;
    var$2[478] = 29;
    var$2[479] = 29;
    var$2[480] = 29;
    var$2[481] = 29;
    var$2[482] = 29;
    var$2[483] = 29;
    var$2[484] = 29;
    var$2[485] = 29;
    var$2[486] = 29;
    var$2[487] = 29;
    var$2[488] = 29;
    var$2[489] = 29;
    var$2[490] = 29;
    var$2[491] = 29;
    var$2[492] = 29;
    var$2[493] = 29;
    var$2[494] = 29;
    var$2[495] = 29;
    var$2[496] = 29;
    var$2[497] = 29;
    var$2[498] = 29;
    var$2[499] = 29;
    var$2[500] = 29;
    var$2[501] = 29;
    var$2[502] = 29;
    var$2[503] = 29;
    var$2[504] = 29;
    var$2[505] = 29;
    var$2[506] = 29;
    var$2[507] = 29;
    var$2[508] = 29;
    var$2[509] = 29;
    var$2[510] = 29;
    var$2[511] = 29;
    cjj_Tree__dist_code = var$1;
    var$1 = $rt_createByteArray(256);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 2;
    var$2[3] = 3;
    var$2[4] = 4;
    var$2[5] = 5;
    var$2[6] = 6;
    var$2[7] = 7;
    var$2[8] = 8;
    var$2[9] = 8;
    var$2[10] = 9;
    var$2[11] = 9;
    var$2[12] = 10;
    var$2[13] = 10;
    var$2[14] = 11;
    var$2[15] = 11;
    var$2[16] = 12;
    var$2[17] = 12;
    var$2[18] = 12;
    var$2[19] = 12;
    var$2[20] = 13;
    var$2[21] = 13;
    var$2[22] = 13;
    var$2[23] = 13;
    var$2[24] = 14;
    var$2[25] = 14;
    var$2[26] = 14;
    var$2[27] = 14;
    var$2[28] = 15;
    var$2[29] = 15;
    var$2[30] = 15;
    var$2[31] = 15;
    var$2[32] = 16;
    var$2[33] = 16;
    var$2[34] = 16;
    var$2[35] = 16;
    var$2[36] = 16;
    var$2[37] = 16;
    var$2[38] = 16;
    var$2[39] = 16;
    var$2[40] = 17;
    var$2[41] = 17;
    var$2[42] = 17;
    var$2[43] = 17;
    var$2[44] = 17;
    var$2[45] = 17;
    var$2[46] = 17;
    var$2[47] = 17;
    var$2[48] = 18;
    var$2[49] = 18;
    var$2[50] = 18;
    var$2[51] = 18;
    var$2[52] = 18;
    var$2[53] = 18;
    var$2[54] = 18;
    var$2[55] = 18;
    var$2[56] = 19;
    var$2[57] = 19;
    var$2[58] = 19;
    var$2[59] = 19;
    var$2[60] = 19;
    var$2[61] = 19;
    var$2[62] = 19;
    var$2[63] = 19;
    var$2[64] = 20;
    var$2[65] = 20;
    var$2[66] = 20;
    var$2[67] = 20;
    var$2[68] = 20;
    var$2[69] = 20;
    var$2[70] = 20;
    var$2[71] = 20;
    var$2[72] = 20;
    var$2[73] = 20;
    var$2[74] = 20;
    var$2[75] = 20;
    var$2[76] = 20;
    var$2[77] = 20;
    var$2[78] = 20;
    var$2[79] = 20;
    var$2[80] = 21;
    var$2[81] = 21;
    var$2[82] = 21;
    var$2[83] = 21;
    var$2[84] = 21;
    var$2[85] = 21;
    var$2[86] = 21;
    var$2[87] = 21;
    var$2[88] = 21;
    var$2[89] = 21;
    var$2[90] = 21;
    var$2[91] = 21;
    var$2[92] = 21;
    var$2[93] = 21;
    var$2[94] = 21;
    var$2[95] = 21;
    var$2[96] = 22;
    var$2[97] = 22;
    var$2[98] = 22;
    var$2[99] = 22;
    var$2[100] = 22;
    var$2[101] = 22;
    var$2[102] = 22;
    var$2[103] = 22;
    var$2[104] = 22;
    var$2[105] = 22;
    var$2[106] = 22;
    var$2[107] = 22;
    var$2[108] = 22;
    var$2[109] = 22;
    var$2[110] = 22;
    var$2[111] = 22;
    var$2[112] = 23;
    var$2[113] = 23;
    var$2[114] = 23;
    var$2[115] = 23;
    var$2[116] = 23;
    var$2[117] = 23;
    var$2[118] = 23;
    var$2[119] = 23;
    var$2[120] = 23;
    var$2[121] = 23;
    var$2[122] = 23;
    var$2[123] = 23;
    var$2[124] = 23;
    var$2[125] = 23;
    var$2[126] = 23;
    var$2[127] = 23;
    var$2[128] = 24;
    var$2[129] = 24;
    var$2[130] = 24;
    var$2[131] = 24;
    var$2[132] = 24;
    var$2[133] = 24;
    var$2[134] = 24;
    var$2[135] = 24;
    var$2[136] = 24;
    var$2[137] = 24;
    var$2[138] = 24;
    var$2[139] = 24;
    var$2[140] = 24;
    var$2[141] = 24;
    var$2[142] = 24;
    var$2[143] = 24;
    var$2[144] = 24;
    var$2[145] = 24;
    var$2[146] = 24;
    var$2[147] = 24;
    var$2[148] = 24;
    var$2[149] = 24;
    var$2[150] = 24;
    var$2[151] = 24;
    var$2[152] = 24;
    var$2[153] = 24;
    var$2[154] = 24;
    var$2[155] = 24;
    var$2[156] = 24;
    var$2[157] = 24;
    var$2[158] = 24;
    var$2[159] = 24;
    var$2[160] = 25;
    var$2[161] = 25;
    var$2[162] = 25;
    var$2[163] = 25;
    var$2[164] = 25;
    var$2[165] = 25;
    var$2[166] = 25;
    var$2[167] = 25;
    var$2[168] = 25;
    var$2[169] = 25;
    var$2[170] = 25;
    var$2[171] = 25;
    var$2[172] = 25;
    var$2[173] = 25;
    var$2[174] = 25;
    var$2[175] = 25;
    var$2[176] = 25;
    var$2[177] = 25;
    var$2[178] = 25;
    var$2[179] = 25;
    var$2[180] = 25;
    var$2[181] = 25;
    var$2[182] = 25;
    var$2[183] = 25;
    var$2[184] = 25;
    var$2[185] = 25;
    var$2[186] = 25;
    var$2[187] = 25;
    var$2[188] = 25;
    var$2[189] = 25;
    var$2[190] = 25;
    var$2[191] = 25;
    var$2[192] = 26;
    var$2[193] = 26;
    var$2[194] = 26;
    var$2[195] = 26;
    var$2[196] = 26;
    var$2[197] = 26;
    var$2[198] = 26;
    var$2[199] = 26;
    var$2[200] = 26;
    var$2[201] = 26;
    var$2[202] = 26;
    var$2[203] = 26;
    var$2[204] = 26;
    var$2[205] = 26;
    var$2[206] = 26;
    var$2[207] = 26;
    var$2[208] = 26;
    var$2[209] = 26;
    var$2[210] = 26;
    var$2[211] = 26;
    var$2[212] = 26;
    var$2[213] = 26;
    var$2[214] = 26;
    var$2[215] = 26;
    var$2[216] = 26;
    var$2[217] = 26;
    var$2[218] = 26;
    var$2[219] = 26;
    var$2[220] = 26;
    var$2[221] = 26;
    var$2[222] = 26;
    var$2[223] = 26;
    var$2[224] = 27;
    var$2[225] = 27;
    var$2[226] = 27;
    var$2[227] = 27;
    var$2[228] = 27;
    var$2[229] = 27;
    var$2[230] = 27;
    var$2[231] = 27;
    var$2[232] = 27;
    var$2[233] = 27;
    var$2[234] = 27;
    var$2[235] = 27;
    var$2[236] = 27;
    var$2[237] = 27;
    var$2[238] = 27;
    var$2[239] = 27;
    var$2[240] = 27;
    var$2[241] = 27;
    var$2[242] = 27;
    var$2[243] = 27;
    var$2[244] = 27;
    var$2[245] = 27;
    var$2[246] = 27;
    var$2[247] = 27;
    var$2[248] = 27;
    var$2[249] = 27;
    var$2[250] = 27;
    var$2[251] = 27;
    var$2[252] = 27;
    var$2[253] = 27;
    var$2[254] = 27;
    var$2[255] = 28;
    cjj_Tree__length_code = var$1;
    var$1 = $rt_createIntArray(29);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 2;
    var$2[3] = 3;
    var$2[4] = 4;
    var$2[5] = 5;
    var$2[6] = 6;
    var$2[7] = 7;
    var$2[8] = 8;
    var$2[9] = 10;
    var$2[10] = 12;
    var$2[11] = 14;
    var$2[12] = 16;
    var$2[13] = 20;
    var$2[14] = 24;
    var$2[15] = 28;
    var$2[16] = 32;
    var$2[17] = 40;
    var$2[18] = 48;
    var$2[19] = 56;
    var$2[20] = 64;
    var$2[21] = 80;
    var$2[22] = 96;
    var$2[23] = 112;
    var$2[24] = 128;
    var$2[25] = 160;
    var$2[26] = 192;
    var$2[27] = 224;
    var$2[28] = 0;
    cjj_Tree_base_length = var$1;
    var$1 = $rt_createIntArray(30);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 1;
    var$2[2] = 2;
    var$2[3] = 3;
    var$2[4] = 4;
    var$2[5] = 6;
    var$2[6] = 8;
    var$2[7] = 12;
    var$2[8] = 16;
    var$2[9] = 24;
    var$2[10] = 32;
    var$2[11] = 48;
    var$2[12] = 64;
    var$2[13] = 96;
    var$2[14] = 128;
    var$2[15] = 192;
    var$2[16] = 256;
    var$2[17] = 384;
    var$2[18] = 512;
    var$2[19] = 768;
    var$2[20] = 1024;
    var$2[21] = 1536;
    var$2[22] = 2048;
    var$2[23] = 3072;
    var$2[24] = 4096;
    var$2[25] = 6144;
    var$2[26] = 8192;
    var$2[27] = 12288;
    var$2[28] = 16384;
    var$2[29] = 24576;
    cjj_Tree_base_dist = var$1;
}
function nms_NoiseGenerator2() {
    var a = this; jl_Object.call(a);
    a.$field_4295_e = null;
    a.$field_4292_a = 0.0;
    a.$field_4291_b = 0.0;
    a.$field_4297_c = 0.0;
}
var nms_NoiseGenerator2_field_4296_d = null;
var nms_NoiseGenerator2_field_4294_f = 0.0;
var nms_NoiseGenerator2_field_4293_g = 0.0;
function nms_NoiseGenerator2__init_1() {
    var var_0 = new nms_NoiseGenerator2();
    nms_NoiseGenerator2__init_(var_0);
    return var_0;
}
function nms_NoiseGenerator2__init_0(var_0) {
    var var_1 = new nms_NoiseGenerator2();
    nms_NoiseGenerator2__init_2(var_1, var_0);
    return var_1;
}
function nms_NoiseGenerator2__init_($this) {
    nms_NoiseGenerator2__init_2($this, new ju_Random);
}
function nms_NoiseGenerator2__init_2($this, $var1) {
    var $var2, var$3, $var2_0, $var3, $var4;
    $this.$field_4295_e = $rt_createIntArray(512);
    $this.$field_4292_a = ju_Random_nextDouble($var1) * 256.0;
    $this.$field_4291_b = ju_Random_nextDouble($var1) * 256.0;
    $this.$field_4297_c = ju_Random_nextDouble($var1) * 256.0;
    $var2 = 0;
    while ($var2 < 256) {
        var$3 = $this.$field_4295_e.data;
        $var2_0 = $var2 + 1 | 0;
        var$3[$var2] = $var2;
        $var2 = $var2_0;
    }
    $var2 = 0;
    while ($var2 < 256) {
        $var3 = ju_Random_nextInt($var1, 256 - $var2 | 0) + $var2 | 0;
        $var4 = $this.$field_4295_e.data[$var2];
        $this.$field_4295_e.data[$var2] = $this.$field_4295_e.data[$var3];
        $this.$field_4295_e.data[$var3] = $var4;
        $this.$field_4295_e.data[$var2 + 256 | 0] = $this.$field_4295_e.data[$var2];
        $var2 = $var2 + 1 | 0;
    }
}
function nms_NoiseGenerator2_func_4155_a($var0) {
    return $var0 > 0.0 ? $var0 | 0 : ($var0 | 0) - 1 | 0;
}
function nms_NoiseGenerator2_func_4156_a($var0, $var1, $var3) {
    $var0 = $var0.data;
    return $var0[0] * $var1 + $var0[1] * $var3;
}
function nms_NoiseGenerator2_func_4157_a($this, $var1, $var2, $var4, $var6, $var7, $var8, $var10, $var12) {
    var $var14, $var15, $var16, $var18, $var19, $var27, $var29, $var30, $var31, $var33, $var35, $var37, $var39, $var41, $var42, $var43, $var45, $var47, $var49, $var51, $var52, $var53, $var54, $var55, $var56, $var21, $var58, $var23, $var60, $var25, var$39;
    $var14 = 0;
    $var15 = 0;
    while ($var15 < $var6) {
        $var16 = ($var2 + $var15) * $var8 + $this.$field_4292_a;
        $var18 = 0;
        while ($var18 < $var7) {
            $var19 = ($var4 + $var18) * $var10 + $this.$field_4291_b;
            $var27 = ($var16 + $var19) * nms_NoiseGenerator2_field_4294_f;
            $var29 = nms_NoiseGenerator2_func_4155_a($var16 + $var27);
            $var30 = nms_NoiseGenerator2_func_4155_a($var19 + $var27);
            $var31 = ($var29 + $var30 | 0) * nms_NoiseGenerator2_field_4293_g;
            $var33 = $var29 - $var31;
            $var35 = $var30 - $var31;
            $var37 = $var16 - $var33;
            $var39 = $var19 - $var35;
            if ($var37 <= $var39) {
                $var41 = 0;
                $var42 = 1;
            } else {
                $var41 = 1;
                $var42 = 0;
            }
            $var43 = $var37 - $var41 + nms_NoiseGenerator2_field_4293_g;
            $var45 = $var39 - $var42 + nms_NoiseGenerator2_field_4293_g;
            $var47 = $var37 - 1.0 + 2.0 * nms_NoiseGenerator2_field_4293_g;
            $var49 = $var39 - 1.0 + 2.0 * nms_NoiseGenerator2_field_4293_g;
            $var51 = $var29 & 255;
            $var52 = $var30 & 255;
            $var53 = $this.$field_4295_e.data[$var51 + $this.$field_4295_e.data[$var52] | 0] % 12 | 0;
            $var54 = $this.$field_4295_e.data[($var51 + $var41 | 0) + $this.$field_4295_e.data[$var52 + $var42 | 0] | 0] % 12 | 0;
            $var55 = $this.$field_4295_e.data[($var51 + 1 | 0) + $this.$field_4295_e.data[$var52 + 1 | 0] | 0] % 12 | 0;
            $var56 = 0.5 - $var37 * $var37 - $var39 * $var39;
            if ($var56 < 0.0)
                $var21 = 0.0;
            else {
                $var19 = $var56 * $var56;
                $var21 = $var19 * $var19 * nms_NoiseGenerator2_func_4156_a(nms_NoiseGenerator2_field_4296_d.data[$var53], $var37, $var39);
            }
            $var58 = 0.5 - $var43 * $var43 - $var45 * $var45;
            if ($var58 < 0.0)
                $var23 = 0.0;
            else {
                $var19 = $var58 * $var58;
                $var23 = $var19 * $var19 * nms_NoiseGenerator2_func_4156_a(nms_NoiseGenerator2_field_4296_d.data[$var54], $var43, $var45);
            }
            $var60 = 0.5 - $var47 * $var47 - $var49 * $var49;
            if ($var60 < 0.0)
                $var25 = 0.0;
            else {
                $var19 = $var60 * $var60;
                $var25 = $var19 * $var19 * nms_NoiseGenerator2_func_4156_a(nms_NoiseGenerator2_field_4296_d.data[$var55], $var47, $var49);
            }
            var$39 = $var1.data;
            $var29 = $var14 + 1 | 0;
            var$39[$var14] = var$39[$var14] + 70.0 * ($var21 + $var23 + $var25) * $var12;
            $var18 = $var18 + 1 | 0;
            $var14 = $var29;
        }
        $var15 = $var15 + 1 | 0;
    }
}
function nms_NoiseGenerator2__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = $rt_createArray($rt_arraycls($rt_intcls()), 12);
    var$2 = var$1.data;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 1;
    var$4[2] = 0;
    var$2[0] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 1;
    var$4[2] = 0;
    var$2[1] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = (-1);
    var$4[2] = 0;
    var$2[2] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = (-1);
    var$4[2] = 0;
    var$2[3] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = 1;
    var$2[4] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = 1;
    var$2[5] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 1;
    var$4[1] = 0;
    var$4[2] = (-1);
    var$2[6] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = (-1);
    var$4[1] = 0;
    var$4[2] = (-1);
    var$2[7] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = 1;
    var$2[8] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = 1;
    var$2[9] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = 1;
    var$4[2] = (-1);
    var$2[10] = var$3;
    var$3 = $rt_createIntArray(3);
    var$4 = var$3.data;
    var$4[0] = 0;
    var$4[1] = (-1);
    var$4[2] = (-1);
    var$2[11] = var$3;
    nms_NoiseGenerator2_field_4296_d = var$1;
    nms_NoiseGenerator2_field_4294_f = 0.5 * (jl_Math_sqrt(3.0) - 1.0);
    nms_NoiseGenerator2_field_4293_g = (3.0 - jl_Math_sqrt(3.0)) / 6.0;
}
function nms_NoiseGeneratorPerlin() {
    var a = this; nms_NoiseGenerator.call(a);
    a.$permutations = null;
    a.$xCoord2 = 0.0;
    a.$yCoord2 = 0.0;
    a.$zCoord2 = 0.0;
}
function nms_NoiseGeneratorPerlin__init_1() {
    var var_0 = new nms_NoiseGeneratorPerlin();
    nms_NoiseGeneratorPerlin__init_(var_0);
    return var_0;
}
function nms_NoiseGeneratorPerlin__init_0(var_0) {
    var var_1 = new nms_NoiseGeneratorPerlin();
    nms_NoiseGeneratorPerlin__init_2(var_1, var_0);
    return var_1;
}
function nms_NoiseGeneratorPerlin__init_($this) {
    nms_NoiseGeneratorPerlin__init_2($this, new ju_Random);
}
function nms_NoiseGeneratorPerlin__init_2($this, $var1) {
    var $var2, var$3, $var2_0, $var3, $var4;
    $this.$permutations = $rt_createIntArray(512);
    $this.$xCoord2 = ju_Random_nextDouble($var1) * 256.0;
    $this.$yCoord2 = ju_Random_nextDouble($var1) * 256.0;
    $this.$zCoord2 = ju_Random_nextDouble($var1) * 256.0;
    $var2 = 0;
    while ($var2 < 256) {
        var$3 = $this.$permutations.data;
        $var2_0 = $var2 + 1 | 0;
        var$3[$var2] = $var2;
        $var2 = $var2_0;
    }
    $var2 = 0;
    while ($var2 < 256) {
        $var3 = ju_Random_nextInt($var1, 256 - $var2 | 0) + $var2 | 0;
        $var4 = $this.$permutations.data[$var2];
        $this.$permutations.data[$var2] = $this.$permutations.data[$var3];
        $this.$permutations.data[$var3] = $var4;
        $this.$permutations.data[$var2 + 256 | 0] = $this.$permutations.data[$var2];
        $var2 = $var2 + 1 | 0;
    }
}
function nms_NoiseGeneratorPerlin_generateNoise($this, $var1, $var3, $var5) {
    var $var7, $var9, $var11, $var13, $var14, $var15, $var16, $var17, $var18, var$13, $var19, $var21, $var23, $var25, $var26, $var27, $var28, $var29, $var30, var$23;
    $var7 = $var1 + $this.$xCoord2;
    $var9 = $var3 + $this.$yCoord2;
    $var11 = $var5 + $this.$zCoord2;
    $var13 = $var7 | 0;
    $var14 = $var9 | 0;
    $var15 = $var11 | 0;
    if ($var7 < $var13)
        $var13 = $var13 + (-1) | 0;
    if ($var9 < $var14)
        $var14 = $var14 + (-1) | 0;
    if ($var11 < $var15)
        $var15 = $var15 + (-1) | 0;
    $var16 = $var13 & 255;
    $var17 = $var14 & 255;
    $var18 = $var15 & 255;
    $var3 = $var7 - $var13;
    $var5 = $var9 - $var14;
    var$13 = $var11 - $var15;
    $var19 = $var3 * $var3 * $var3 * ($var3 * ($var3 * 6.0 - 15.0) + 10.0);
    $var21 = $var5 * $var5 * $var5 * ($var5 * ($var5 * 6.0 - 15.0) + 10.0);
    $var23 = var$13 * var$13 * var$13 * (var$13 * (var$13 * 6.0 - 15.0) + 10.0);
    $var25 = $this.$permutations.data[$var16] + $var17 | 0;
    $var26 = $this.$permutations.data[$var25] + $var18 | 0;
    $var27 = $this.$permutations.data[$var25 + 1 | 0] + $var18 | 0;
    $var28 = $this.$permutations.data[$var16 + 1 | 0] + $var17 | 0;
    $var29 = $this.$permutations.data[$var28] + $var18 | 0;
    $var30 = $this.$permutations.data[$var28 + 1 | 0] + $var18 | 0;
    $var7 = nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var26], $var3, $var5, var$13);
    $var16 = $this.$permutations.data[$var29];
    var$23 = $var3 - 1.0;
    $var1 = nms_NoiseGeneratorPerlin_lerp($this, $var19, $var7, nms_NoiseGeneratorPerlin_grad($this, $var16, var$23, $var5, var$13));
    $var16 = $this.$permutations.data[$var27];
    $var7 = $var5 - 1.0;
    $var1 = nms_NoiseGeneratorPerlin_lerp($this, $var21, $var1, nms_NoiseGeneratorPerlin_lerp($this, $var19, nms_NoiseGeneratorPerlin_grad($this, $var16, $var3, $var7, var$13), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var30], var$23, $var7, var$13)));
    $var16 = $this.$permutations.data[$var26 + 1 | 0];
    $var9 = var$13 - 1.0;
    return nms_NoiseGeneratorPerlin_lerp($this, $var23, $var1, nms_NoiseGeneratorPerlin_lerp($this, $var21, nms_NoiseGeneratorPerlin_lerp($this, $var19, nms_NoiseGeneratorPerlin_grad($this, $var16, $var3, $var5, $var9), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var29 + 1 | 0], var$23, $var5, $var9)), nms_NoiseGeneratorPerlin_lerp($this, $var19, nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var27 + 1 | 0], $var3, $var7, $var9), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var30
    + 1 | 0], var$23, $var7, $var9))));
}
function nms_NoiseGeneratorPerlin_lerp($this, $var1, $var3, $var5) {
    return $var3 + $var1 * ($var5 - $var3);
}
function nms_NoiseGeneratorPerlin_func_4110_a($this, $var1, $var9, $var9_0) {
    var $var6, $var7;
    $var6 = $var1 & 15;
    $var7 = (1 - (($var6 & 8) >> 3) | 0) * $var9;
    if ($var6 < 4)
        $var9 = 0.0;
    else if ($var6 != 12 && $var6 != 14)
        $var9 = $var9_0;
    if ($var6 & 1)
        $var7 =  -$var7;
    if ($var6 & 2)
        $var9 =  -$var9;
    return $var7 + $var9;
}
function nms_NoiseGeneratorPerlin_grad($this, $var1, $var11, $var11_0, $var11_1) {
    var $var8, $var9;
    $var8 = $var1 & 15;
    $var9 = $var8 >= 8 ? $var11_0 : $var11;
    if ($var8 >= 4)
        $var11_0 = $var8 != 12 && $var8 != 14 ? $var11_1 : $var11;
    if ($var8 & 1)
        $var9 =  -$var9;
    if ($var8 & 2)
        $var11_0 =  -$var11_0;
    return $var9 + $var11_0;
}
function nms_NoiseGeneratorPerlin_func_801_a($this, $var1, $var3) {
    return nms_NoiseGeneratorPerlin_generateNoise($this, $var1, $var3, 0.0);
}
function nms_NoiseGeneratorPerlin_func_805_a($this, $var1, $var2, $var4, $var6, $var8, $var9, $var10, $var11, $var13, $var15, $var17) {
    var $var75, $var77, $var30, $var31, $var78, $var34, $var33, $var35, $var37, $var54, $var38, $var40, var$24, $var41, $var42, $var19, $var66, $var67, $var22, $var79, $var19_0, $var20, $var29, $var42_0, $var44, $var45, $var47, $var48, $var49, $var51, $var52, $var55, $var56, $var69, $var71, $var72, $var74, $var76, var$50, $var62;
    a: {
        if ($var9 == 1) {
            $var75 = 0;
            $var77 = 1.0 / $var17;
            $var30 = 0;
            while ($var30 < $var8) {
                $var31 = ($var2 + $var30) * $var11 + $this.$xCoord2;
                $var78 = $var31 | 0;
                if ($var31 < $var78)
                    $var78 = $var78 + (-1) | 0;
                $var34 = $var78 & 255;
                $var33 = $var31 - $var78;
                $var35 = $var33 * $var33 * $var33 * ($var33 * ($var33 * 6.0 - 15.0) + 10.0);
                $var37 = 0;
                $var54 = $var34 + 1 | 0;
                $var13 = $var33 - 1.0;
                while ($var37 < $var10) {
                    $var38 = ($var6 + $var37) * $var15 + $this.$zCoord2;
                    $var40 = $var38 | 0;
                    if ($var38 < $var40)
                        $var40 = $var40 + (-1) | 0;
                    var$24 = $var1.data;
                    $var41 = $var40 & 255;
                    $var17 = $var38 - $var40;
                    $var42 = $var17 * $var17 * $var17 * ($var17 * ($var17 * 6.0 - 15.0) + 10.0);
                    $var19 = $this.$permutations.data[$var34] + 0 | 0;
                    $var66 = $this.$permutations.data[$var19] + $var41 | 0;
                    $var67 = $this.$permutations.data[$var54] + 0 | 0;
                    $var22 = $this.$permutations.data[$var67] + $var41 | 0;
                    $var4 = nms_NoiseGeneratorPerlin_lerp($this, $var35, nms_NoiseGeneratorPerlin_func_4110_a($this, $this.$permutations.data[$var66], $var33, $var17), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var22], $var13, 0.0, $var17));
                    $var9 = $this.$permutations.data[$var66 + 1 | 0];
                    $var17 = $var17 - 1.0;
                    $var79 = nms_NoiseGeneratorPerlin_lerp($this, $var42, $var4, nms_NoiseGeneratorPerlin_lerp($this, $var35, nms_NoiseGeneratorPerlin_grad($this, $var9, $var33, 0.0, $var17), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var22 + 1 | 0], $var13, 0.0, $var17)));
                    $var9 = $var75 + 1 | 0;
                    var$24[$var75] = var$24[$var75] + $var79 * $var77;
                    $var37 = $var37 + 1 | 0;
                    $var75 = $var9;
                }
                $var30 = $var30 + 1 | 0;
            }
        } else {
            $var19_0 = 0;
            $var20 = 1.0 / $var17;
            $var22 = (-1);
            $var29 = 0.0;
            $var31 = 0.0;
            $var33 = 0.0;
            $var35 = 0.0;
            $var37 = 0;
            while (true) {
                if ($var37 >= $var8)
                    break a;
                $var38 = ($var2 + $var37) * $var11 + $this.$xCoord2;
                $var40 = $var38 | 0;
                if ($var38 < $var40)
                    $var40 = $var40 + (-1) | 0;
                $var41 = $var40 & 255;
                $var77 = $var38 - $var40;
                $var42_0 = $var77 * $var77 * $var77 * ($var77 * ($var77 * 6.0 - 15.0) + 10.0);
                $var44 = 0;
                $var19 = $var41 + 1 | 0;
                $var38 = $var77 - 1.0;
                while ($var44 < $var10) {
                    $var45 = ($var6 + $var44) * $var15 + $this.$zCoord2;
                    $var47 = $var45 | 0;
                    if ($var45 < $var47)
                        $var47 = $var47 + (-1) | 0;
                    $var48 = $var47 & 255;
                    $var45 = $var45 - $var47;
                    $var49 = $var45 * $var45 * $var45 * ($var45 * ($var45 * 6.0 - 15.0) + 10.0);
                    $var51 = 0;
                    $var79 = $var45 - 1.0;
                    while ($var51 < $var9) {
                        $var52 = ($var4 + $var51) * $var13 + $this.$yCoord2;
                        $var54 = $var52 | 0;
                        if ($var52 < $var54)
                            $var54 = $var54 + (-1) | 0;
                        $var55 = $var54 & 255;
                        $var17 = $var52 - $var54;
                        $var56 = $var17 * $var17 * $var17 * ($var17 * ($var17 * 6.0 - 15.0) + 10.0);
                        if ($var51 && $var55 == $var22)
                            $var55 = $var22;
                        else {
                            $var69 = $this.$permutations.data[$var41] + $var55 | 0;
                            $var71 = $this.$permutations.data[$var69] + $var48 | 0;
                            $var72 = $this.$permutations.data[$var69 + 1 | 0] + $var48 | 0;
                            $var74 = $this.$permutations.data[$var19] + $var55 | 0;
                            $var75 = $this.$permutations.data[$var74] + $var48 | 0;
                            $var76 = $this.$permutations.data[$var74 + 1 | 0] + $var48 | 0;
                            $var29 = nms_NoiseGeneratorPerlin_lerp($this, $var42_0, nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var71], $var77, $var17, $var45), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var75], $var38, $var17, $var45));
                            $var22 = $this.$permutations.data[$var72];
                            $var52 = $var17 - 1.0;
                            $var31 = nms_NoiseGeneratorPerlin_lerp($this, $var42_0, nms_NoiseGeneratorPerlin_grad($this, $var22, $var77, $var52, $var45), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var76], $var38, $var52, $var45));
                            $var33 = nms_NoiseGeneratorPerlin_lerp($this, $var42_0, nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var71 + 1 | 0], $var77, $var17, $var79), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var75 + 1 | 0], $var38, $var17, $var79));
                            $var35 = nms_NoiseGeneratorPerlin_lerp($this, $var42_0, nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var72 + 1 | 0], $var77, $var52, $var79), nms_NoiseGeneratorPerlin_grad($this, $this.$permutations.data[$var76 + 1 | 0], $var38, $var52, $var79));
                        }
                        var$50 = $var1.data;
                        $var62 = nms_NoiseGeneratorPerlin_lerp($this, $var49, nms_NoiseGeneratorPerlin_lerp($this, $var56, $var29, $var31), nms_NoiseGeneratorPerlin_lerp($this, $var56, $var33, $var35));
                        $var22 = $var19_0 + 1 | 0;
                        var$50[$var19_0] = var$50[$var19_0] + $var62 * $var20;
                        $var51 = $var51 + 1 | 0;
                        $var19_0 = $var22;
                        $var22 = $var55;
                    }
                    $var44 = $var44 + 1 | 0;
                }
                $var37 = $var37 + 1 | 0;
            }
        }
    }
}
function cjj_Deflate$Config() {
    var a = this; jl_Object.call(a);
    a.$good_length = 0;
    a.$max_lazy = 0;
    a.$nice_length = 0;
    a.$max_chain = 0;
    a.$func = 0;
}
function cjj_Deflate$Config__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cjj_Deflate$Config();
    cjj_Deflate$Config__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cjj_Deflate$Config__init_0($this, $good_length, $max_lazy, $nice_length, $max_chain, $func) {
    $this.$good_length = $good_length;
    $this.$max_lazy = $max_lazy;
    $this.$nice_length = $nice_length;
    $this.$max_chain = $max_chain;
    $this.$func = $func;
}
function jl_ReflectiveOperationException() {
    jl_Exception.call(this);
}
function jl_ReflectiveOperationException__init_0() {
    var var_0 = new jl_ReflectiveOperationException();
    jl_ReflectiveOperationException__init_(var_0);
    return var_0;
}
function jl_ReflectiveOperationException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_NoSuchMethodException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_NoSuchMethodException__init_0() {
    var var_0 = new jl_NoSuchMethodException();
    jl_NoSuchMethodException__init_(var_0);
    return var_0;
}
function jl_NoSuchMethodException__init_($this) {
    jl_Throwable__init_0($this);
}
function jlr_Modifier() {
    jl_Object.call(this);
}
var jlr_Modifier_canonicalOrder = null;
function jlr_Modifier__init_0() {
    var var_0 = new jlr_Modifier();
    jlr_Modifier__init_(var_0);
    return var_0;
}
function jlr_Modifier__init_($this) {
    return;
}
function jlr_Modifier__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createIntArray(12);
    var$2 = var$1.data;
    var$2[0] = 1;
    var$2[1] = 4;
    var$2[2] = 2;
    var$2[3] = 1024;
    var$2[4] = 8;
    var$2[5] = 16;
    var$2[6] = 128;
    var$2[7] = 64;
    var$2[8] = 32;
    var$2[9] = 256;
    var$2[10] = 2048;
    var$2[11] = 512;
    jlr_Modifier_canonicalOrder = var$1;
}
function nms_Teleporter() {
    jl_Object.call(this);
    this.$field_4232_a = null;
}
function nms_Teleporter__init_0() {
    var var_0 = new nms_Teleporter();
    nms_Teleporter__init_(var_0);
    return var_0;
}
function nms_Teleporter__init_($this) {
    $this.$field_4232_a = new ju_Random;
}
function nms_Teleporter_func_4107_a($this, $var1, $var2) {
    if (!nms_Teleporter_func_4106_b($this, $var1, $var2)) {
        nms_Teleporter_func_4108_c($this, $var1, $var2);
        nms_Teleporter_func_4106_b($this, $var1, $var2);
    }
}
function nms_Teleporter_func_4106_b($this, $var1, $var2) {
    var $var4, $var6, $var7, $var8, $var9, $var10, $var11, var$10, var$11, $var12, $var22, $var14, $var15, $var17, $var3, $var18, $var20, $var16, var$21;
    $var4 = (-1.0);
    $var6 = 0;
    $var7 = 0;
    $var8 = 0;
    $var9 = nms_MathHelper_floor_double($var2.$posX);
    $var10 = nms_MathHelper_floor_double($var2.$posZ);
    $var11 = $var9 - 128 | 0;
    var$10 = $var9 + 128 | 0;
    var$11 = $var10 - 128 | 0;
    $var10 = $var10 + 128 | 0;
    while ($var11 <= var$10) {
        $var12 = $var11 + 0.5 - $var2.$posX;
        $var22 = $var12 * $var12;
        $var14 = var$11;
        while ($var14 <= $var10) {
            $var15 = $var14 + 0.5 - $var2.$posZ;
            $var17 = 127;
            $var15 = $var15 * $var15;
            while ($var17 >= 0) {
                $var3 = nms_World_getBlockId($var1, $var11, $var17, $var14);
                nms_Block_$callClinit();
                if ($var3 == nms_Block_portal.$blockID) {
                    $var3 = $var17;
                    while (nms_World_getBlockId($var1, $var11, $var3 - 1 | 0, $var14) == nms_Block_portal.$blockID) {
                        $var3 = $var3 + (-1) | 0;
                    }
                    $var18 = $var3 + 0.5 - $var2.$posY;
                    $var20 = $var22 + $var18 * $var18 + $var15;
                    if ($var4 >= 0.0 && $var20 >= $var4)
                        $var17 = $var3;
                    else {
                        $var17 = $var3;
                        $var6 = $var11;
                        $var8 = $var14;
                        $var4 = $var20;
                        $var7 = $var3;
                    }
                }
                $var17 = $var17 + (-1) | 0;
            }
            $var14 = $var14 + 1 | 0;
        }
        $var11 = $var11 + 1 | 0;
    }
    if ($var4 < 0.0)
        return 0;
    $var22 = $var6 + 0.5;
    $var16 = $var7 + 0.5;
    $var18 = $var8 + 0.5;
    $var3 = nms_World_getBlockId($var1, $var6 - 1 | 0, $var7, $var8);
    nms_Block_$callClinit();
    if ($var3 == nms_Block_portal.$blockID)
        $var22 = $var22 - 0.5;
    if (nms_World_getBlockId($var1, $var6 + 1 | 0, $var7, $var8) == nms_Block_portal.$blockID)
        $var22 = $var22 + 0.5;
    if (nms_World_getBlockId($var1, $var6, $var7, $var8 - 1 | 0) == nms_Block_portal.$blockID)
        $var18 = $var18 - 0.5;
    if (nms_World_getBlockId($var1, $var6, $var7, $var8 + 1 | 0) == nms_Block_portal.$blockID)
        $var18 = $var18 + 0.5;
    $var1 = jl_System_out();
    var$21 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$21);
    ji_PrintStream_println($var1, jl_AbstractStringBuilder_toString(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder_append4(jl_StringBuilder_append(var$21, $rt_s(1020)), $var22), $rt_s(311)), $var16), $rt_s(311)), $var18)));
    nms_Entity_setLocationAndAngles($var2, $var22, $var16, $var18, $var2.$rotationYaw, 0.0);
    $var2.$motionZ = 0.0;
    $var2.$motionY = 0.0;
    $var2.$motionX = 0.0;
    return 1;
}
function nms_Teleporter_func_4108_c($this, $var1, $var2) {
    var $var4, $var6, $var7, $var8, $var12, $var13, $var25, $var34, $var23, $var31, $var22, $var14, $var15, var$16, $var17, $var18, $var20, $var21, $var22_0, $var23_0, $var24, $var24_0, $var25_0, $var26, $var29, $var27, $var28, $var32, $var33, $var17_0, $var3, $var26_0, $var19;
    $var4 = (-1.0);
    $var6 = nms_MathHelper_floor_double($var2.$posX);
    $var7 = nms_MathHelper_floor_double($var2.$posY);
    $var8 = nms_MathHelper_floor_double($var2.$posZ);
    $var12 = 0;
    $var13 = ju_Random_nextInt($this.$field_4232_a, 4);
    $var25 = $var6 - 16 | 0;
    $var34 = $var6 + 16 | 0;
    $var23 = $var8 - 16 | 0;
    $var31 = $var8 + 16 | 0;
    $var22 = $var13 + 4 | 0;
    $var14 = $var25;
    while ($var14 <= $var34) {
        $var15 = $var14 + 0.5 - $var2.$posX;
        var$16 = $var15 * $var15;
        $var17 = $var23;
        while ($var17 <= $var31) {
            $var18 = $var17 + 0.5 - $var2.$posZ;
            $var20 = 127;
            $var18 = $var18 * $var18;
            while ($var20 >= 0) {
                a: {
                    if (!nms_World_getBlockId($var1, $var14, $var20, $var17)) {
                        while ($var20 > 0 && !nms_World_getBlockId($var1, $var14, $var20 - 1 | 0, $var17)) {
                            $var20 = $var20 + (-1) | 0;
                        }
                        $var21 = $var13;
                        while ($var21 < $var22) {
                            $var22_0 = $var21 % 2 | 0;
                            $var23_0 = 1 - $var22_0 | 0;
                            $var24 = $var21 % 4 | 0;
                            if ($var24 >= 2) {
                                $var22_0 =  -$var22_0;
                                $var23_0 =  -$var23_0;
                            }
                            $var24_0 = 0;
                            while ($var24_0 < 3) {
                                $var25_0 = 0;
                                while ($var25_0 < 4) {
                                    $var26 = (-1);
                                    while ($var26 < 4) {
                                        $var29 = $var25_0 - 1 | 0;
                                        $var27 = ($var14 + $rt_imul($var29, $var22_0) | 0) + $rt_imul($var24_0, $var23_0) | 0;
                                        $var28 = $var20 + $var26 | 0;
                                        $var29 = ($var17 + $rt_imul($var29, $var23_0) | 0) - $rt_imul($var24_0, $var22_0) | 0;
                                        if ($var26 < 0 && !nms_World_getBlockMaterial($var1, $var27, $var28, $var29).$func_878_a())
                                            break a;
                                        if ($var26 >= 0 && nms_World_getBlockId($var1, $var27, $var28, $var29))
                                            break a;
                                        $var26 = $var26 + 1 | 0;
                                    }
                                    $var25_0 = $var25_0 + 1 | 0;
                                }
                                $var24_0 = $var24_0 + 1 | 0;
                            }
                            $var32 = $var20 + 0.5 - $var2.$posY;
                            $var33 = var$16 + $var32 * $var32 + $var18;
                            if ($var4 >= 0.0 && $var33 >= $var4) {
                                $var33 = $var4;
                                $var24 = $var12;
                            } else {
                                $var6 = $var14;
                                $var7 = $var20;
                                $var8 = $var17;
                            }
                            $var21 = $var21 + 1 | 0;
                            $var4 = $var33;
                            $var12 = $var24;
                        }
                    }
                }
                $var20 = $var20 + (-1) | 0;
            }
            $var17 = $var17 + 1 | 0;
        }
        $var14 = $var14 + 1 | 0;
    }
    if ($var4 < 0.0) {
        $var17 = $var13 + 2 | 0;
        while ($var25 <= $var34) {
            $var15 = $var25 + 0.5 - $var2.$posX;
            var$16 = $var15 * $var15;
            $var17_0 = $var23;
            while ($var17_0 <= $var31) {
                $var18 = $var17_0 + 0.5 - $var2.$posZ;
                $var20 = 127;
                $var18 = $var18 * $var18;
                while ($var20 >= 0) {
                    b: {
                        if (!nms_World_getBlockId($var1, $var25, $var20, $var17_0)) {
                            while (!nms_World_getBlockId($var1, $var25, $var20 - 1 | 0, $var17_0)) {
                                $var20 = $var20 + (-1) | 0;
                            }
                            $var21 = $var13;
                            while ($var21 < $var17) {
                                $var22 = $var21 % 2 | 0;
                                $var23_0 = 1 - $var22 | 0;
                                $var24 = 0;
                                while ($var24 < 4) {
                                    $var25_0 = (-1);
                                    while ($var25_0 < 4) {
                                        $var3 = $var24 - 1 | 0;
                                        $var26_0 = $var25 + $rt_imul($var3, $var22) | 0;
                                        $var27 = $var20 + $var25_0 | 0;
                                        $var28 = $var17_0 + $rt_imul($var3, $var23_0) | 0;
                                        if ($var25_0 < 0 && !nms_World_getBlockMaterial($var1, $var26_0, $var27, $var28).$func_878_a())
                                            break b;
                                        if ($var25_0 >= 0 && nms_World_getBlockId($var1, $var26_0, $var27, $var28))
                                            break b;
                                        $var25_0 = $var25_0 + 1 | 0;
                                    }
                                    $var24 = $var24 + 1 | 0;
                                }
                                $var32 = $var20 + 0.5 - $var2.$posY;
                                $var33 = var$16 + $var32 * $var32 + $var18;
                                if ($var4 >= 0.0 && $var33 >= $var4) {
                                    $var33 = $var4;
                                    $var22 = $var12;
                                } else {
                                    $var6 = $var25;
                                    $var7 = $var20;
                                    $var8 = $var17_0;
                                }
                                $var21 = $var21 + 1 | 0;
                                $var4 = $var33;
                                $var12 = $var22;
                            }
                        }
                    }
                    $var20 = $var20 + (-1) | 0;
                }
                $var17_0 = $var17_0 + 1 | 0;
            }
            $var25 = $var25 + 1 | 0;
        }
    }
    $var31 = $var12 % 2 | 0;
    $var19 = 1 - $var31 | 0;
    if (($var12 % 4 | 0) >= 2) {
        $var31 =  -$var31;
        $var19 =  -$var19;
    }
    if ($var4 < 0.0) {
        if ($var7 < 70)
            $var7 = 70;
        if ($var7 > 118)
            $var7 = 118;
        $var20 = (-1);
        while ($var20 <= 1) {
            $var21 = 1;
            while ($var21 < 3) {
                $var22 = (-1);
                while ($var22 < 3) {
                    $var3 = $var21 - 1 | 0;
                    $var23 = ($var6 + $rt_imul($var3, $var31) | 0) + $rt_imul($var20, $var19) | 0;
                    $var24 = $var7 + $var22 | 0;
                    $var25 = ($var8 + $rt_imul($var3, $var19) | 0) - $rt_imul($var20, $var31) | 0;
                    if (!($var22 >= 0 ? 0 : 1))
                        $var3 = 0;
                    else {
                        nms_Block_$callClinit();
                        $var3 = nms_Block_obsidian.$blockID;
                    }
                    nms_World_setBlockWithNotify($var1, $var23, $var24, $var25, $var3);
                    $var22 = $var22 + 1 | 0;
                }
                $var21 = $var21 + 1 | 0;
            }
            $var20 = $var20 + 1 | 0;
        }
    }
    $var20 = 0;
    while ($var20 < 4) {
        $var1.$field_1043_h = 1;
        $var21 = 0;
        while ($var21 < 4) {
            $var22 = (-1);
            while ($var22 < 4) {
                $var3 = $var21 - 1 | 0;
                $var23 = $var6 + $rt_imul($var3, $var31) | 0;
                $var24 = $var7 + $var22 | 0;
                $var25 = $var8 + $rt_imul($var3, $var19) | 0;
                if (!($var21 && $var21 != 3 && $var22 != (-1) && $var22 != 3 ? 0 : 1)) {
                    nms_Block_$callClinit();
                    $var3 = nms_Block_portal.$blockID;
                } else {
                    nms_Block_$callClinit();
                    $var3 = nms_Block_obsidian.$blockID;
                }
                nms_World_setBlockWithNotify($var1, $var23, $var24, $var25, $var3);
                $var22 = $var22 + 1 | 0;
            }
            $var21 = $var21 + 1 | 0;
        }
        $var1.$field_1043_h = 0;
        $var3 = 0;
        while ($var3 < 4) {
            $var22 = (-1);
            while ($var22 < 4) {
                $var26_0 = $var3 - 1 | 0;
                $var23 = $var6 + $rt_imul($var26_0, $var31) | 0;
                $var24 = $var7 + $var22 | 0;
                $var25 = $var8 + $rt_imul($var26_0, $var19) | 0;
                nms_World_notifyBlocksOfNeighborChange($var1, $var23, $var24, $var25, nms_World_getBlockId($var1, $var23, $var24, $var25));
                $var22 = $var22 + 1 | 0;
            }
            $var3 = $var3 + 1 | 0;
        }
        $var20 = $var20 + 1 | 0;
    }
    return 1;
}
function ju_AbstractMap$SimpleEntry() {
    var a = this; jl_Object.call(a);
    a.$key3 = null;
    a.$value6 = null;
}
function ju_AbstractMap$SimpleEntry_getValue($this) {
    return $this.$value6;
}
function ju_AbstractMap$SimpleEntry_setValue($this, $value) {
    var $old;
    $old = $this.$value6;
    $this.$value6 = $value;
    return $old;
}
function ju_AbstractMap$SimpleEntry_getKey($this) {
    return $this.$key3;
}
function ju_TreeMap$TreeNode() {
    var a = this; ju_AbstractMap$SimpleEntry.call(a);
    a.$left0 = null;
    a.$right = null;
    a.$height3 = 0;
    a.$size7 = 0;
}
function ju_TreeMap$TreeNode_balance($this) {
    var $factor;
    $factor = ju_TreeMap$TreeNode_factor($this);
    if ($factor == 2) {
        if (ju_TreeMap$TreeNode_factor($this.$right) < 0)
            $this.$right = ju_TreeMap$TreeNode_rotateRight($this.$right);
        return ju_TreeMap$TreeNode_rotateLeft($this);
    }
    if ($factor != (-2))
        return $this;
    if (ju_TreeMap$TreeNode_factor($this.$left0) > 0)
        $this.$left0 = ju_TreeMap$TreeNode_rotateLeft($this.$left0);
    return ju_TreeMap$TreeNode_rotateRight($this);
}
function ju_TreeMap$TreeNode_factor($this) {
    return ($this.$right === null ? 0 : $this.$right.$height3) - ($this.$left0 === null ? 0 : $this.$left0.$height3) | 0;
}
function ju_TreeMap$TreeNode_rotateRight($this) {
    var $left;
    $left = $this.$left0;
    $this.$left0 = $left.$right;
    $left.$right = $this;
    ju_TreeMap$TreeNode_fix($this);
    ju_TreeMap$TreeNode_fix($left);
    return $left;
}
function ju_TreeMap$TreeNode_rotateLeft($this) {
    var $right;
    $right = $this.$right;
    $this.$right = $right.$left0;
    $right.$left0 = $this;
    ju_TreeMap$TreeNode_fix($this);
    ju_TreeMap$TreeNode_fix($right);
    return $right;
}
function ju_TreeMap$TreeNode_fix($this) {
    var var$1, var$2;
    var$1 = $this.$right === null ? 0 : $this.$right.$height3;
    var$2 = $this.$left0 === null ? 0 : $this.$left0.$height3;
    $this.$height3 = jl_Math_max(var$1, var$2) + 1 | 0;
    $this.$size7 = 1;
    if ($this.$left0 !== null)
        $this.$size7 = $this.$size7 + $this.$left0.$size7 | 0;
    if ($this.$right !== null)
        $this.$size7 = $this.$size7 + $this.$right.$size7 | 0;
}
function ju_TreeMap$TreeNode_forward($this, $reverse) {
    return $reverse ? $this.$right : $this.$left0;
}
function jur_IntArrHash() {
    jl_Object.call(this);
}
function nms_GuiEditSign() {
    var a = this; nms_GuiScreen.call(a);
    a.$screenTitle = null;
    a.$entitySign = null;
    a.$updateCounter5 = 0;
    a.$editLine = 0;
}
function nms_GuiEditSign_initGui($this) {
    ju_ArrayList_clear($this.$controlList);
    nlea_EaglerAdapterImpl2_enableRepeatEvents0(1);
    ju_ArrayList_add($this.$controlList, nms_GuiButton__init_(0, ($this.$width / 2 | 0) - 100 | 0, ($this.$height0 / 4 | 0) + 120 | 0, $rt_s(897)));
}
function nms_GuiEditSign_onGuiClosed($this) {
    nlea_EaglerAdapterImpl2_enableRepeatEvents0(0);
}
function nms_GuiEditSign_updateScreen($this) {
    $this.$updateCounter5 = $this.$updateCounter5 + 1 | 0;
}
function nms_GuiEditSign_actionPerformed($this, $var1) {
    if ($var1.$enabled && !$var1.$id2) {
        nms_TileEntity_onInventoryChanged($this.$entitySign);
        nmc_Minecraft_displayGuiScreen($this.$mc5, null);
    }
}
function nms_GuiEditSign_keyTyped($this, $var1, $var2) {
    var var$3, var$4;
    if ($var2 == 200)
        $this.$editLine = ($this.$editLine - 1 | 0) & 3;
    if (!($var2 != 208 && $var2 != 28))
        $this.$editLine = ($this.$editLine + 1 | 0) & 3;
    if ($var2 == 14 && jl_String_length($this.$entitySign.$signText.data[$this.$editLine]) > 0)
        $this.$entitySign.$signText.data[$this.$editLine] = jl_String_substring0($this.$entitySign.$signText.data[$this.$editLine], 0, jl_String_length($this.$entitySign.$signText.data[$this.$editLine]) - 1 | 0);
    if (jl_String_indexOf0($rt_s(1021), $var1) >= 0 && jl_String_length($this.$entitySign.$signText.data[$this.$editLine]) < 15) {
        var$3 = $this.$entitySign.$signText.data;
        $var2 = $this.$editLine;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        var$4 = jl_StringBuilder_append(var$4, $this.$entitySign.$signText.data[$this.$editLine]);
        jl_AbstractStringBuilder_append(var$4, $var1);
        var$3[$var2] = jl_AbstractStringBuilder_toString(var$4);
    }
}
function nms_GuiEditSign_drawScreen($this, $var1, $var2, $var3) {
    var $var5, $var8, $var7, var$7, var$8, var$9, var$10, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$var7 = $thread.pop();$var8 = $thread.pop();$var5 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        nms_GuiScreen_drawDefaultBackground($this);
        if ($rt_suspending()) {
            break main;
        }
        nms_Gui_drawCenteredString($this, $this.$fontRenderer0, $this.$screenTitle, $this.$width / 2 | 0, 40, 16777215);
        olo_EaglerAdapterGL30_glPushMatrix();
        olo_EaglerAdapterGL30_glTranslatef($this.$width / 2 | 0, $this.$height0 / 2 | 0, 50.0);
        olo_EaglerAdapterGL30_glScalef((-93.75), (-93.75), (-93.75));
        olo_EaglerAdapterGL30_glRotatef(180.0, 0.0, 1.0, 0.0);
        $var5 = nms_TileEntity_getBlockType($this.$entitySign);
        nms_Block_$callClinit();
        if ($var5 === nms_Block_signPost) {
            olo_EaglerAdapterGL30_glRotatef((nms_TileEntity_getBlockMetadata($this.$entitySign) * 360 | 0) / 16.0, 0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glTranslatef(0.0, 0.3125, 0.0);
        } else {
            $var8 = nms_TileEntity_getBlockMetadata($this.$entitySign);
            $var7 = 0.0;
            if ($var8 == 2)
                $var7 = 180.0;
            if ($var8 == 4)
                $var7 = 90.0;
            if ($var8 == 5)
                $var7 = (-90.0);
            olo_EaglerAdapterGL30_glRotatef($var7, 0.0, 1.0, 0.0);
            olo_EaglerAdapterGL30_glTranslatef(0.0, 0.3125, 0.0);
        }
        if (!(($this.$updateCounter5 / 6 | 0) % 2 | 0))
            $this.$entitySign.$lineBeingEdited = $this.$editLine;
        $var5 = nms_TileEntityRenderer_instance;
        var$7 = $this.$entitySign;
        var$8 = (-0.5);
        var$9 = (-0.75);
        var$10 = (-0.5);
        $var7 = 0.0;
        $ptr = 2;
    case 2:
        nms_TileEntityRenderer_renderTileEntityAt($var5, var$7, var$8, var$9, var$10, $var7);
        if ($rt_suspending()) {
            break main;
        }
        $this.$entitySign.$lineBeingEdited = (-1);
        olo_EaglerAdapterGL30_glPopMatrix();
        $ptr = 3;
    case 3:
        nms_GuiScreen_drawScreen($this, $var1, $var2, $var3);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var5, $var8, $var7, var$7, var$8, var$9, var$10, $ptr);
}
function nms_WorldGenLakes() {
    nms_WorldGenerator.call(this);
    this.$field_15235_a = 0;
}
function nms_WorldGenLakes__init_0(var_0) {
    var var_1 = new nms_WorldGenLakes();
    nms_WorldGenLakes__init_(var_1, var_0);
    return var_1;
}
function nms_WorldGenLakes__init_($this, $var1) {
    $this.$field_15235_a = $var1;
}
function nms_WorldGenLakes_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, var$7, $var6, $var7, $var8, $var9, $var11, $var13, $var17, var$15, $var15, $var19, $var21, $var22, $var23, $var24, $var26, $var28, $var32, $var10, $var32_0, $var33, $var12;
    var$6 = $var3 + (-8) | 0;
    $var5 = $var5 + (-8) | 0;
    while ($var4 > 0 && !nms_World_getBlockId($var1, var$6, $var4, $var5)) {
        $var4 = $var4 + (-1) | 0;
    }
    var$7 = $var4 + (-4) | 0;
    $var6 = $rt_createBooleanArray(2048).data;
    $var7 = ju_Random_nextInt($var2, 4) + 4 | 0;
    $var8 = 0;
    while ($var8 < $var7) {
        $var9 = ju_Random_nextDouble($var2) * 6.0 + 3.0;
        $var11 = ju_Random_nextDouble($var2) * 4.0 + 2.0;
        $var13 = ju_Random_nextDouble($var2) * 6.0 + 3.0;
        $var17 = ju_Random_nextDouble($var2) * (16.0 - $var9 - 2.0) + 1.0;
        var$15 = $var9 / 2.0;
        $var15 = $var17 + var$15;
        $var17 = ju_Random_nextDouble($var2) * (8.0 - $var11 - 4.0) + 2.0;
        $var9 = $var11 / 2.0;
        $var17 = $var17 + $var9;
        $var19 = ju_Random_nextDouble($var2) * (16.0 - $var13 - 2.0) + 1.0;
        $var11 = $var13 / 2.0;
        $var19 = $var19 + $var11;
        $var21 = 1;
        while ($var21 < 15) {
            $var22 = 1;
            while ($var22 < 15) {
                $var23 = 1;
                while ($var23 < 7) {
                    $var24 = ($var21 - $var15) / var$15;
                    $var26 = ($var23 - $var17) / $var9;
                    $var28 = ($var22 - $var19) / $var11;
                    if ($var24 * $var24 + $var26 * $var26 + $var28 * $var28 < 1.0)
                        $var6[((($var21 * 16 | 0) + $var22 | 0) * 8 | 0) + $var23 | 0] = 1;
                    $var23 = $var23 + 1 | 0;
                }
                $var22 = $var22 + 1 | 0;
            }
            $var21 = $var21 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
    $var8 = 0;
    a: while (true) {
        if ($var8 >= 16) {
            $var7 = 0;
            while ($var7 < 16) {
                $var32 = 0;
                while ($var32 < 16) {
                    $var10 = 0;
                    while ($var10 < 8) {
                        if ($var6[((($var7 * 16 | 0) + $var32 | 0) * 8 | 0) + $var10 | 0])
                            nms_World_setBlockWithNotify($var1, var$6 + $var7 | 0, var$7 + $var10 | 0, $var5 + $var32 | 0, $var10 < 4 ? $this.$field_15235_a : 0);
                        $var10 = $var10 + 1 | 0;
                    }
                    $var32 = $var32 + 1 | 0;
                }
                $var7 = $var7 + 1 | 0;
            }
            $var8 = 0;
            while ($var8 < 16) {
                $var32_0 = 0;
                while ($var32_0 < 16) {
                    $var10 = 4;
                    while ($var10 < 8) {
                        if ($var6[((($var8 * 16 | 0) + $var32_0 | 0) * 8 | 0) + $var10 | 0]) {
                            $var3 = var$6 + $var8 | 0;
                            $var4 = var$7 + $var10 | 0;
                            $var21 = $var4 - 1 | 0;
                            $var22 = $var5 + $var32_0 | 0;
                            $var32 = nms_World_getBlockId($var1, $var3, $var21, $var22);
                            nms_Block_$callClinit();
                            if ($var32 == nms_Block_dirt.$blockID && nms_World_getSavedLightValue($var1, nms_EnumSkyBlock_Sky, $var3, $var4, $var22) > 0)
                                nms_World_setBlockWithNotify($var1, $var3, $var21, $var22, nms_Block_grass.$blockID);
                        }
                        $var10 = $var10 + 1 | 0;
                    }
                    $var32_0 = $var32_0 + 1 | 0;
                }
                $var8 = $var8 + 1 | 0;
            }
            return 1;
        }
        $var32 = 0;
        while ($var32 < 16) {
            $var10 = 0;
            while ($var10 < 8) {
                b: {
                    c: {
                        $var21 = $var8 * 16 | 0;
                        $var22 = $var21 + $var32 | 0;
                        $var7 = $var22 * 8 | 0;
                        $var32_0 = $var7 + $var10 | 0;
                        if (!$var6[$var32_0]) {
                            if ($var8 < 15 && $var6[(((($var8 + 1 | 0) * 16 | 0) + $var32 | 0) * 8 | 0) + $var10 | 0])
                                break c;
                            if ($var8 > 0 && $var6[(((($var8 - 1 | 0) * 16 | 0) + $var32 | 0) * 8 | 0) + $var10 | 0])
                                break c;
                            if ($var32 < 15 && $var6[(($var22 + 1 | 0) * 8 | 0) + $var10 | 0])
                                break c;
                            if ($var32 > 0 && $var6[(($var21 + ($var32 - 1 | 0) | 0) * 8 | 0) + $var10 | 0])
                                break c;
                            if ($var10 < 7 && $var6[$var32_0 + 1 | 0])
                                break c;
                            if ($var10 > 0 && $var6[$var7 + ($var10 - 1 | 0) | 0])
                                break c;
                        }
                        $var33 = 0;
                        break b;
                    }
                    $var33 = 1;
                }
                if ($var33) {
                    $var3 = var$6 + $var8 | 0;
                    $var4 = var$7 + $var10 | 0;
                    $var21 = $var5 + $var32 | 0;
                    $var12 = nms_World_getBlockMaterial($var1, $var3, $var4, $var21);
                    $var22 = $rt_compare($var10, 4);
                    if ($var22 >= 0 && $var12.$getIsLiquid())
                        return 0;
                    if ($var22 < 0 && !$var12.$func_878_a() && nms_World_getBlockId($var1, $var3, $var4, $var21) != $this.$field_15235_a)
                        break a;
                }
                $var10 = $var10 + 1 | 0;
            }
            $var32 = $var32 + 1 | 0;
        }
        $var8 = $var8 + 1 | 0;
    }
    return 0;
}
function nms_WorldGenDungeons() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenDungeons__init_0() {
    var var_0 = new nms_WorldGenDungeons();
    nms_WorldGenDungeons__init_(var_0);
    return var_0;
}
function nms_WorldGenDungeons__init_($this) {
    return;
}
function nms_WorldGenDungeons_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var7, $var8, $var9, $var14, var$10, $var11, var$12, $var17, $var12, var$15, $var10, $var6, $var11_0, $var11_1, $var15, $var12_0, $var16, $var18, var$24, $var13;
    $var7 = ju_Random_nextInt($var2, 2) + 2 | 0;
    $var8 = ju_Random_nextInt($var2, 2) + 2 | 0;
    $var9 = 0;
    $var14 = ($var3 - $var7 | 0) - 1 | 0;
    var$10 = ($var3 + $var7 | 0) + 1 | 0;
    $var11 = $var4 - 1 | 0;
    var$12 = $var4 + 3 | 0;
    $var17 = var$12 + 1 | 0;
    $var12 = ($var5 - $var8 | 0) - 1 | 0;
    var$15 = ($var5 + $var8 | 0) + 1 | 0;
    $var10 = $var14;
    a: while (true) {
        $var6 = $rt_compare($var10, var$10);
        if ($var6 > 0) {
            if ($var9 >= 1 && $var9 <= 5) {
                $var6 = $var14;
                while (true) {
                    $var11_0 = $rt_compare($var6, var$10);
                    if ($var11_0 > 0)
                        break;
                    $var11_1 = var$12;
                    while (true) {
                        $var15 = $rt_compare($var11_1, $var11);
                        if ($var15 < 0)
                            break;
                        $var12_0 = $var12;
                        while (true) {
                            $var9 = $rt_compare($var12_0, var$15);
                            if ($var9 > 0)
                                break;
                            if ($var6 != $var14 && $var15 && $var12_0 != $var12 && $var11_0 && $var11_1 != $var17 && $var9)
                                nms_World_setBlockWithNotify($var1, $var6, $var11_1, $var12_0, 0);
                            else if ($var11_1 >= 0 && !nms_World_getBlockMaterial($var1, $var6, $var11_1 - 1 | 0, $var12_0).$func_878_a())
                                nms_World_setBlockWithNotify($var1, $var6, $var11_1, $var12_0, 0);
                            else if (nms_World_getBlockMaterial($var1, $var6, $var11_1, $var12_0).$func_878_a()) {
                                if (!$var15 && ju_Random_nextInt($var2, 4)) {
                                    nms_Block_$callClinit();
                                    nms_World_setBlockWithNotify($var1, $var6, $var11_1, $var12_0, nms_Block_cobblestoneMossy.$blockID);
                                } else {
                                    nms_Block_$callClinit();
                                    nms_World_setBlockWithNotify($var1, $var6, $var11_1, $var12_0, nms_Block_cobblestone.$blockID);
                                }
                            }
                            $var12_0 = $var12_0 + 1 | 0;
                        }
                        $var11_1 = $var11_1 + (-1) | 0;
                    }
                    $var6 = $var6 + 1 | 0;
                }
                $var10 = 0;
                var$12 = ($var7 * 2 | 0) + 1 | 0;
                var$15 = ($var8 * 2 | 0) + 1 | 0;
                while ($var10 < 2) {
                    $var11 = 0;
                    b: {
                        while (true) {
                            if ($var11 >= 3)
                                break b;
                            $var12 = ($var3 + ju_Random_nextInt($var2, var$12) | 0) - $var7 | 0;
                            $var14 = ($var5 + ju_Random_nextInt($var2, var$15) | 0) - $var8 | 0;
                            if (!nms_World_getBlockId($var1, $var12, $var4, $var14)) {
                                $var15 = 0;
                                if (nms_World_getBlockMaterial($var1, $var12 - 1 | 0, $var4, $var14).$func_878_a())
                                    $var15 = 1;
                                if (nms_World_getBlockMaterial($var1, $var12 + 1 | 0, $var4, $var14).$func_878_a())
                                    $var15 = $var15 + 1 | 0;
                                if (nms_World_getBlockMaterial($var1, $var12, $var4, $var14 - 1 | 0).$func_878_a())
                                    $var15 = $var15 + 1 | 0;
                                if (nms_World_getBlockMaterial($var1, $var12, $var4, $var14 + 1 | 0).$func_878_a())
                                    $var15 = $var15 + 1 | 0;
                                if ($var15 == 1)
                                    break;
                            }
                            $var11 = $var11 + 1 | 0;
                        }
                        nms_Block_$callClinit();
                        nms_World_setBlockWithNotify($var1, $var12, $var4, $var14, nms_Block_crate.$blockID);
                        $var16 = nms_World_getBlockTileEntity($var1, $var12, $var4, $var14);
                        $var17 = 0;
                        while ($var17 < 8) {
                            $var18 = nms_WorldGenDungeons_pickCheckLootItem($this, $var2);
                            if ($var18 !== null)
                                nms_TileEntityChest_setInventorySlotContents($var16, ju_Random_nextInt($var2, 27), $var18);
                            $var17 = $var17 + 1 | 0;
                        }
                    }
                    $var10 = $var10 + 1 | 0;
                }
                nms_Block_$callClinit();
                nms_World_setBlockWithNotify($var1, $var3, $var4, $var5, nms_Block_mobSpawner.$blockID);
                nms_World_getBlockTileEntity($var1, $var3, $var4, $var5).$entityID = nms_WorldGenDungeons_pickMobSpawner($this, $var2);
                return 1;
            }
            return 0;
        }
        $var11_0 = $var11;
        while (true) {
            $var11_1 = $rt_compare($var11_0, $var17);
            if ($var11_1 > 0)
                break;
            $var12_0 = $var12;
            while (true) {
                var$24 = $rt_compare($var12_0, var$15);
                if (var$24 > 0)
                    break;
                $var13 = nms_World_getBlockMaterial($var1, $var10, $var11_0, $var12_0);
                if ($var11_0 == $var11 && !$var13.$func_878_a())
                    return 0;
                if (!$var11_1 && !$var13.$func_878_a())
                    break a;
                if (!($var10 != $var14 && $var6 && $var12_0 != $var12 && var$24) && $var11_0 == $var4 && !nms_World_getBlockId($var1, $var10, $var11_0, $var12_0) && !nms_World_getBlockId($var1, $var10, $var11_0 + 1 | 0, $var12_0))
                    $var9 = $var9 + 1 | 0;
                $var12_0 = $var12_0 + 1 | 0;
            }
            $var11_0 = $var11_0 + 1 | 0;
        }
        $var10 = $var10 + 1 | 0;
    }
    return 0;
}
function nms_WorldGenDungeons_pickCheckLootItem($this, $var1) {
    var $var2, var$3;
    a: {
        $var2 = ju_Random_nextInt($var1, 11);
        if (!$var2) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_2(var$3, nms_Item_saddle);
            break a;
        }
        if ($var2 == 1) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_4(var$3, nms_Item_ingotIron, ju_Random_nextInt($var1, 4) + 1 | 0);
            break a;
        }
        if ($var2 == 2) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_2(var$3, nms_Item_bread);
            break a;
        }
        if ($var2 == 3) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_4(var$3, nms_Item_wheat, ju_Random_nextInt($var1, 4) + 1 | 0);
            break a;
        }
        if ($var2 == 4) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_4(var$3, nms_Item_gunpowder, ju_Random_nextInt($var1, 4) + 1 | 0);
            break a;
        }
        if ($var2 == 5) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_4(var$3, nms_Item_silk, ju_Random_nextInt($var1, 4) + 1 | 0);
            break a;
        }
        if ($var2 == 6) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_2(var$3, nms_Item_bucketEmpty);
            break a;
        }
        if ($var2 == 7 && !ju_Random_nextInt($var1, 100)) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_2(var$3, nms_Item_appleGold);
            break a;
        }
        if ($var2 == 8 && !ju_Random_nextInt($var1, 2)) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_4(var$3, nms_Item_redstone, ju_Random_nextInt($var1, 4) + 1 | 0);
            break a;
        }
        if ($var2 == 9 && !ju_Random_nextInt($var1, 10)) {
            var$3 = new nms_ItemStack;
            nms_Item_$callClinit();
            nms_ItemStack__init_2(var$3, nms_Item_itemsList.data[nms_Item_record13.$shiftedIndex + ju_Random_nextInt($var1, 2) | 0]);
            break a;
        }
        var$3 = null;
    }
    return var$3;
}
function nms_WorldGenDungeons_pickMobSpawner($this, $var1) {
    var $var2;
    $var2 = ju_Random_nextInt($var1, 4);
    return !$var2 ? $rt_s(944) : $var2 == 1 ? $rt_s(979) : $var2 == 2 ? $rt_s(979) : $var2 != 3 ? $rt_s(17) : $rt_s(977);
}
function nms_WorldGenClay() {
    var a = this; nms_WorldGenerator.call(a);
    a.$clayBlockId = 0;
    a.$numberOfBlocks = 0;
}
function nms_WorldGenClay__init_(var_0) {
    var var_1 = new nms_WorldGenClay();
    nms_WorldGenClay__init_0(var_1, var_0);
    return var_1;
}
function nms_WorldGenClay__init_0($this, $var1) {
    nms_Block_$callClinit();
    $this.$clayBlockId = nms_Block_blockClay.$blockID;
    $this.$numberOfBlocks = $var1;
}
function nms_WorldGenClay_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, $var7, $var9, $var11, $var13, $var15, $var17, $var19, var$15, var$16, var$17, $var20, $var22, $var24, $var26, $var28, $var30, $var32, var$25, var$26, var$27, $var33, $var34, $var35, $var37, $var39, $var41;
    if (nms_World_getBlockMaterial($var1, $var3, $var4, $var5) !== nms_Material_water)
        return 0;
    $var6 = ju_Random_nextFloat($var2) * 3.1415927410125732;
    var$7 = $var3 + 8 | 0;
    $var7 = var$7 + nms_MathHelper_sin($var6) * $this.$numberOfBlocks / 8.0;
    $var9 = var$7 - nms_MathHelper_sin($var6) * $this.$numberOfBlocks / 8.0;
    var$7 = $var5 + 8 | 0;
    $var11 = var$7 + nms_MathHelper_cos($var6) * $this.$numberOfBlocks / 8.0;
    $var13 = var$7 - nms_MathHelper_cos($var6) * $this.$numberOfBlocks / 8.0;
    $var15 = ($var4 + ju_Random_nextInt($var2, 3) | 0) + 2 | 0;
    $var17 = ($var4 + ju_Random_nextInt($var2, 3) | 0) + 2 | 0;
    $var19 = 0;
    var$15 = $var9 - $var7;
    var$16 = $var17 - $var15;
    var$17 = $var13 - $var11;
    while ($var19 <= $this.$numberOfBlocks) {
        $var9 = $var19;
        $var20 = $var7 + var$15 * $var9 / $this.$numberOfBlocks;
        $var22 = $var15 + var$16 * $var9 / $this.$numberOfBlocks;
        $var24 = $var11 + var$17 * $var9 / $this.$numberOfBlocks;
        $var26 = ju_Random_nextDouble($var2) * $this.$numberOfBlocks / 16.0;
        var$7 = $var19 * 3.1415927410125732;
        $var28 = (nms_MathHelper_sin(var$7 / $this.$numberOfBlocks) + 1.0) * $var26 + 1.0;
        $var30 = (nms_MathHelper_sin(var$7 / $this.$numberOfBlocks) + 1.0) * $var26 + 1.0;
        $var26 = $var28 / 2.0;
        $var32 = $var20 - $var26 | 0;
        var$25 = $var20 + $var26 | 0;
        $var13 = $var30 / 2.0;
        $var3 = $var22 - $var13 | 0;
        $var4 = $var22 + $var13 | 0;
        var$26 = $var24 - $var26 | 0;
        var$27 = $var24 + $var26 | 0;
        while ($var32 <= var$25) {
            $var33 = $var3;
            while ($var33 <= $var4) {
                $var34 = var$26;
                while ($var34 <= var$27) {
                    $var35 = ($var32 + 0.5 - $var20) / $var26;
                    $var37 = ($var33 + 0.5 - $var22) / $var13;
                    $var39 = ($var34 + 0.5 - $var24) / $var26;
                    if ($var35 * $var35 + $var37 * $var37 + $var39 * $var39 < 1.0) {
                        $var41 = nms_World_getBlockId($var1, $var32, $var33, $var34);
                        nms_Block_$callClinit();
                        if ($var41 == nms_Block_sand.$blockID)
                            nms_World_setBlock($var1, $var32, $var33, $var34, $this.$clayBlockId);
                    }
                    $var34 = $var34 + 1 | 0;
                }
                $var33 = $var33 + 1 | 0;
            }
            $var32 = $var32 + 1 | 0;
        }
        $var19 = $var19 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenMinable() {
    var a = this; nms_WorldGenerator.call(a);
    a.$minableBlockId = 0;
    a.$numberOfBlocks0 = 0;
}
function nms_WorldGenMinable__init_0(var_0, var_1) {
    var var_2 = new nms_WorldGenMinable();
    nms_WorldGenMinable__init_(var_2, var_0, var_1);
    return var_2;
}
function nms_WorldGenMinable__init_($this, $var1, $var2) {
    $this.$minableBlockId = $var1;
    $this.$numberOfBlocks0 = $var2;
}
function nms_WorldGenMinable_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, $var7, $var9, $var11, $var13, $var15, $var17, $var19, var$15, $var26, $var20, $var22, $var24, $var28, $var30, $var32, var$23, var$24, var$25, $var33, $var34, $var35, $var37, $var39, var$31;
    $var6 = ju_Random_nextFloat($var2) * 3.1415927410125732;
    var$7 = $var3 + 8 | 0;
    $var7 = var$7 + nms_MathHelper_sin($var6) * $this.$numberOfBlocks0 / 8.0;
    $var9 = var$7 - nms_MathHelper_sin($var6) * $this.$numberOfBlocks0 / 8.0;
    var$7 = $var5 + 8 | 0;
    $var11 = var$7 + nms_MathHelper_cos($var6) * $this.$numberOfBlocks0 / 8.0;
    $var13 = var$7 - nms_MathHelper_cos($var6) * $this.$numberOfBlocks0 / 8.0;
    $var15 = ($var4 + ju_Random_nextInt($var2, 3) | 0) + 2 | 0;
    $var17 = ($var4 + ju_Random_nextInt($var2, 3) | 0) + 2 | 0;
    $var19 = 0;
    $var9 = $var9 - $var7;
    $var17 = $var17 - $var15;
    var$15 = $var13 - $var11;
    while ($var19 <= $this.$numberOfBlocks0) {
        $var26 = $var19;
        $var20 = $var7 + $var9 * $var26 / $this.$numberOfBlocks0;
        $var22 = $var15 + $var17 * $var26 / $this.$numberOfBlocks0;
        $var24 = $var11 + var$15 * $var26 / $this.$numberOfBlocks0;
        $var26 = ju_Random_nextDouble($var2) * $this.$numberOfBlocks0 / 16.0;
        var$7 = $var19 * 3.1415927410125732;
        $var28 = (nms_MathHelper_sin(var$7 / $this.$numberOfBlocks0) + 1.0) * $var26 + 1.0;
        $var30 = (nms_MathHelper_sin(var$7 / $this.$numberOfBlocks0) + 1.0) * $var26 + 1.0;
        $var26 = $var28 / 2.0;
        $var32 = $var20 - $var26 | 0;
        $var4 = $var20 + $var26 | 0;
        $var13 = $var30 / 2.0;
        $var5 = $var22 - $var13 | 0;
        var$23 = $var22 + $var13 | 0;
        var$24 = $var24 - $var26 | 0;
        var$25 = $var24 + $var26 | 0;
        while ($var32 <= $var4) {
            $var33 = $var5;
            while ($var33 <= var$23) {
                $var34 = var$24;
                while ($var34 <= var$25) {
                    $var35 = ($var32 + 0.5 - $var20) / $var26;
                    $var37 = ($var33 + 0.5 - $var22) / $var13;
                    $var39 = ($var34 + 0.5 - $var24) / $var26;
                    if ($var35 * $var35 + $var37 * $var37 + $var39 * $var39 < 1.0) {
                        var$31 = nms_World_getBlockId($var1, $var32, $var33, $var34);
                        nms_Block_$callClinit();
                        if (var$31 == nms_Block_stone.$blockID)
                            nms_World_setBlock($var1, $var32, $var33, $var34, $this.$minableBlockId);
                    }
                    $var34 = $var34 + 1 | 0;
                }
                $var33 = $var33 + 1 | 0;
            }
            $var32 = $var32 + 1 | 0;
        }
        $var19 = $var19 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenFlowers() {
    nms_WorldGenerator.call(this);
    this.$plantBlockId = 0;
}
function nms_WorldGenFlowers__init_0(var_0) {
    var var_1 = new nms_WorldGenFlowers();
    nms_WorldGenFlowers__init_(var_1, var_0);
    return var_1;
}
function nms_WorldGenFlowers__init_($this, $var1) {
    $this.$plantBlockId = $var1;
}
function nms_WorldGenFlowers_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9;
    $var6 = 0;
    while ($var6 < 64) {
        $var7 = ($var3 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        $var8 = ($var4 + ju_Random_nextInt($var2, 4) | 0) - ju_Random_nextInt($var2, 4) | 0;
        $var9 = ($var5 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        if (!nms_World_getBlockId($var1, $var7, $var8, $var9)) {
            nms_Block_$callClinit();
            if (nms_Block_blocksList.data[$this.$plantBlockId].$canBlockStay($var1, $var7, $var8, $var9))
                nms_World_setBlock($var1, $var7, $var8, $var9, $this.$plantBlockId);
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenReed() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenReed__init_0() {
    var var_0 = new nms_WorldGenReed();
    nms_WorldGenReed__init_(var_0);
    return var_0;
}
function nms_WorldGenReed__init_($this) {
    return;
}
function nms_WorldGenReed_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, $var7, $var9, $var10, $var11, var$12, var$13;
    $var6 = 0;
    var$7 = $var4 - 1 | 0;
    while ($var6 < 20) {
        a: {
            $var7 = ($var3 + ju_Random_nextInt($var2, 4) | 0) - ju_Random_nextInt($var2, 4) | 0;
            $var9 = ($var5 + ju_Random_nextInt($var2, 4) | 0) - ju_Random_nextInt($var2, 4) | 0;
            if (!nms_World_getBlockId($var1, $var7, $var4, $var9) && !(nms_World_getBlockMaterial($var1, $var7 - 1 | 0, var$7, $var9) !== nms_Material_water && nms_World_getBlockMaterial($var1, $var7 + 1 | 0, var$7, $var9) !== nms_Material_water && nms_World_getBlockMaterial($var1, $var7, var$7, $var9 - 1 | 0) !== nms_Material_water && nms_World_getBlockMaterial($var1, $var7, var$7, $var9 + 1 | 0) !== nms_Material_water)) {
                $var10 = 2 + ju_Random_nextInt($var2, ju_Random_nextInt($var2, 3) + 1 | 0) | 0;
                $var11 = 0;
                while (true) {
                    if ($var11 >= $var10)
                        break a;
                    nms_Block_$callClinit();
                    var$12 = nms_Block_reed;
                    var$13 = $var4 + $var11 | 0;
                    if (var$12.$canBlockStay($var1, $var7, var$13, $var9))
                        nms_World_setBlock($var1, $var7, var$13, $var9, nms_Block_reed.$blockID);
                    $var11 = $var11 + 1 | 0;
                }
            }
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenPumpkin() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenPumpkin__init_0() {
    var var_0 = new nms_WorldGenPumpkin();
    nms_WorldGenPumpkin__init_(var_0);
    return var_0;
}
function nms_WorldGenPumpkin__init_($this) {
    return;
}
function nms_WorldGenPumpkin_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, var$10;
    $var6 = 0;
    while ($var6 < 64) {
        $var7 = ($var3 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        $var8 = ($var4 + ju_Random_nextInt($var2, 4) | 0) - ju_Random_nextInt($var2, 4) | 0;
        $var9 = ($var5 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        if (!nms_World_getBlockId($var1, $var7, $var8, $var9)) {
            var$10 = nms_World_getBlockId($var1, $var7, $var8 - 1 | 0, $var9);
            nms_Block_$callClinit();
            if (var$10 == nms_Block_grass.$blockID && nms_Block_pumpkin.$canPlaceBlockAt($var1, $var7, $var8, $var9))
                nms_World_setBlockAndMetadata($var1, $var7, $var8, $var9, nms_Block_pumpkin.$blockID, ju_Random_nextInt($var2, 4));
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenCactus() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenCactus__init_0() {
    var var_0 = new nms_WorldGenCactus();
    nms_WorldGenCactus__init_(var_0);
    return var_0;
}
function nms_WorldGenCactus__init_($this) {
    return;
}
function nms_WorldGenCactus_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, $var10, $var11, var$12, var$13;
    $var6 = 0;
    while ($var6 < 10) {
        a: {
            $var7 = ($var3 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
            $var8 = ($var4 + ju_Random_nextInt($var2, 4) | 0) - ju_Random_nextInt($var2, 4) | 0;
            $var9 = ($var5 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
            if (!nms_World_getBlockId($var1, $var7, $var8, $var9)) {
                $var10 = 1 + ju_Random_nextInt($var2, ju_Random_nextInt($var2, 3) + 1 | 0) | 0;
                $var11 = 0;
                while (true) {
                    if ($var11 >= $var10)
                        break a;
                    nms_Block_$callClinit();
                    var$12 = nms_Block_cactus;
                    var$13 = $var8 + $var11 | 0;
                    if (var$12.$canBlockStay($var1, $var7, var$13, $var9))
                        nms_World_setBlock($var1, $var7, var$13, $var9, nms_Block_cactus.$blockID);
                    $var11 = $var11 + 1 | 0;
                }
            }
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenLiquids() {
    nms_WorldGenerator.call(this);
    this.$liquidBlockId = 0;
}
function nms_WorldGenLiquids__init_0(var_0) {
    var var_1 = new nms_WorldGenLiquids();
    nms_WorldGenLiquids__init_(var_1, var_0);
    return var_1;
}
function nms_WorldGenLiquids__init_($this, $var1) {
    $this.$liquidBlockId = $var1;
}
function nms_WorldGenLiquids_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, var$7, var$8, var$9, var$10, $var7;
    $var6 = nms_World_getBlockId($var1, $var3, $var4 + 1 | 0, $var5);
    nms_Block_$callClinit();
    if ($var6 != nms_Block_stone.$blockID)
        return 0;
    if (nms_World_getBlockId($var1, $var3, $var4 - 1 | 0, $var5) != nms_Block_stone.$blockID)
        return 0;
    if (nms_World_getBlockId($var1, $var3, $var4, $var5) && nms_World_getBlockId($var1, $var3, $var4, $var5) != nms_Block_stone.$blockID)
        return 0;
    $var6 = 0;
    var$7 = $var3 - 1 | 0;
    if (nms_World_getBlockId($var1, var$7, $var4, $var5) == nms_Block_stone.$blockID)
        $var6 = 1;
    var$8 = $var3 + 1 | 0;
    if (nms_World_getBlockId($var1, var$8, $var4, $var5) == nms_Block_stone.$blockID)
        $var6 = $var6 + 1 | 0;
    var$9 = $var5 - 1 | 0;
    if (nms_World_getBlockId($var1, $var3, $var4, var$9) == nms_Block_stone.$blockID)
        $var6 = $var6 + 1 | 0;
    var$10 = $var5 + 1 | 0;
    if (nms_World_getBlockId($var1, $var3, $var4, var$10) == nms_Block_stone.$blockID)
        $var6 = $var6 + 1 | 0;
    $var7 = 0;
    if (!nms_World_getBlockId($var1, var$7, $var4, $var5))
        $var7 = 1;
    if (!nms_World_getBlockId($var1, var$8, $var4, $var5))
        $var7 = $var7 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var3, $var4, var$9))
        $var7 = $var7 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var3, $var4, var$10))
        $var7 = $var7 + 1 | 0;
    if ($var6 == 3 && $var7 == 1) {
        nms_World_setBlockWithNotify($var1, $var3, $var4, $var5, $this.$liquidBlockId);
        $var1.$field_4214_a = 1;
        nms_Block_blocksList.data[$this.$liquidBlockId].$updateTick($var1, $var3, $var4, $var5, $var2);
        $var1.$field_4214_a = 0;
    }
    return 1;
}
function nms_WorldGenHellLava() {
    nms_WorldGenerator.call(this);
    this.$field_4158_a = 0;
}
function nms_WorldGenHellLava_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var var$6, $var6, var$8, var$9, var$10, var$11, $var7;
    var$6 = nms_World_getBlockId($var1, $var3, $var4 + 1 | 0, $var5);
    nms_Block_$callClinit();
    if (var$6 != nms_Block_bloodStone.$blockID)
        return 0;
    if (nms_World_getBlockId($var1, $var3, $var4, $var5) && nms_World_getBlockId($var1, $var3, $var4, $var5) != nms_Block_bloodStone.$blockID)
        return 0;
    $var6 = 0;
    var$8 = $var3 - 1 | 0;
    if (nms_World_getBlockId($var1, var$8, $var4, $var5) == nms_Block_bloodStone.$blockID)
        $var6 = 1;
    var$6 = $var3 + 1 | 0;
    if (nms_World_getBlockId($var1, var$6, $var4, $var5) == nms_Block_bloodStone.$blockID)
        $var6 = $var6 + 1 | 0;
    var$9 = $var5 - 1 | 0;
    if (nms_World_getBlockId($var1, $var3, $var4, var$9) == nms_Block_bloodStone.$blockID)
        $var6 = $var6 + 1 | 0;
    var$10 = $var5 + 1 | 0;
    if (nms_World_getBlockId($var1, $var3, $var4, var$10) == nms_Block_bloodStone.$blockID)
        $var6 = $var6 + 1 | 0;
    var$11 = $var4 - 1 | 0;
    if (nms_World_getBlockId($var1, $var3, var$11, $var5) == nms_Block_bloodStone.$blockID)
        $var6 = $var6 + 1 | 0;
    $var7 = 0;
    if (!nms_World_getBlockId($var1, var$8, $var4, $var5))
        $var7 = 1;
    if (!nms_World_getBlockId($var1, var$6, $var4, $var5))
        $var7 = $var7 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var3, $var4, var$9))
        $var7 = $var7 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var3, $var4, var$10))
        $var7 = $var7 + 1 | 0;
    if (!nms_World_getBlockId($var1, $var3, var$11, $var5))
        $var7 = $var7 + 1 | 0;
    if ($var6 == 4 && $var7 == 1) {
        nms_World_setBlockWithNotify($var1, $var3, $var4, $var5, $this.$field_4158_a);
        $var1.$field_4214_a = 1;
        nms_Block_blocksList.data[$this.$field_4158_a].$updateTick($var1, $var3, $var4, $var5, $var2);
        $var1.$field_4214_a = 0;
    }
    return 1;
}
function nms_WorldGenFire() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenFire__init_0() {
    var var_0 = new nms_WorldGenFire();
    nms_WorldGenFire__init_(var_0);
    return var_0;
}
function nms_WorldGenFire__init_($this) {
    return;
}
function nms_WorldGenFire_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, var$10;
    $var6 = 0;
    while ($var6 < 64) {
        $var7 = ($var3 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        $var8 = ($var4 + ju_Random_nextInt($var2, 4) | 0) - ju_Random_nextInt($var2, 4) | 0;
        $var9 = ($var5 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        if (!nms_World_getBlockId($var1, $var7, $var8, $var9)) {
            var$10 = nms_World_getBlockId($var1, $var7, $var8 - 1 | 0, $var9);
            nms_Block_$callClinit();
            if (var$10 == nms_Block_bloodStone.$blockID)
                nms_World_setBlockWithNotify($var1, $var7, $var8, $var9, nms_Block_fire.$blockID);
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenLightStone1() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenLightStone1__init_0() {
    var var_0 = new nms_WorldGenLightStone1();
    nms_WorldGenLightStone1__init_(var_0);
    return var_0;
}
function nms_WorldGenLightStone1__init_($this) {
    return;
}
function nms_WorldGenLightStone1_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, $var10, $var11, var$12, var$13, var$14, var$15, var$16, var$17, $var12;
    if (nms_World_getBlockId($var1, $var3, $var4, $var5))
        return 0;
    $var6 = nms_World_getBlockId($var1, $var3, $var4 + 1 | 0, $var5);
    nms_Block_$callClinit();
    if ($var6 != nms_Block_bloodStone.$blockID)
        return 0;
    nms_World_setBlockWithNotify($var1, $var3, $var4, $var5, nms_Block_lightStone.$blockID);
    $var6 = 0;
    while ($var6 < 1500) {
        $var7 = ($var3 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        $var8 = $var4 - ju_Random_nextInt($var2, 12) | 0;
        $var9 = ($var5 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        if (!nms_World_getBlockId($var1, $var7, $var8, $var9)) {
            $var10 = 0;
            $var11 = 0;
            var$12 = $var7 - 1 | 0;
            var$13 = $var7 + 1 | 0;
            var$14 = $var8 - 1 | 0;
            var$15 = $var8 + 1 | 0;
            var$16 = $var9 - 1 | 0;
            var$17 = $var9 + 1 | 0;
            while ($var11 < 6) {
                $var12 = 0;
                if (!$var11)
                    $var12 = nms_World_getBlockId($var1, var$12, $var8, $var9);
                if ($var11 == 1)
                    $var12 = nms_World_getBlockId($var1, var$13, $var8, $var9);
                if ($var11 == 2)
                    $var12 = nms_World_getBlockId($var1, $var7, var$14, $var9);
                if ($var11 == 3)
                    $var12 = nms_World_getBlockId($var1, $var7, var$15, $var9);
                if ($var11 == 4)
                    $var12 = nms_World_getBlockId($var1, $var7, $var8, var$16);
                if ($var11 == 5)
                    $var12 = nms_World_getBlockId($var1, $var7, $var8, var$17);
                if ($var12 == nms_Block_lightStone.$blockID)
                    $var10 = $var10 + 1 | 0;
                $var11 = $var11 + 1 | 0;
            }
            if ($var10 == 1)
                nms_World_setBlockWithNotify($var1, $var7, $var8, $var9, nms_Block_lightStone.$blockID);
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function nms_WorldGenLightStone2() {
    nms_WorldGenerator.call(this);
}
function nms_WorldGenLightStone2__init_0() {
    var var_0 = new nms_WorldGenLightStone2();
    nms_WorldGenLightStone2__init_(var_0);
    return var_0;
}
function nms_WorldGenLightStone2__init_($this) {
    return;
}
function nms_WorldGenLightStone2_generate($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9, $var10, $var11, var$12, var$13, var$14, var$15, var$16, var$17, $var12;
    if (nms_World_getBlockId($var1, $var3, $var4, $var5))
        return 0;
    $var6 = nms_World_getBlockId($var1, $var3, $var4 + 1 | 0, $var5);
    nms_Block_$callClinit();
    if ($var6 != nms_Block_bloodStone.$blockID)
        return 0;
    nms_World_setBlockWithNotify($var1, $var3, $var4, $var5, nms_Block_lightStone.$blockID);
    $var6 = 0;
    while ($var6 < 1500) {
        $var7 = ($var3 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        $var8 = $var4 - ju_Random_nextInt($var2, 12) | 0;
        $var9 = ($var5 + ju_Random_nextInt($var2, 8) | 0) - ju_Random_nextInt($var2, 8) | 0;
        if (!nms_World_getBlockId($var1, $var7, $var8, $var9)) {
            $var10 = 0;
            $var11 = 0;
            var$12 = $var7 - 1 | 0;
            var$13 = $var7 + 1 | 0;
            var$14 = $var8 - 1 | 0;
            var$15 = $var8 + 1 | 0;
            var$16 = $var9 - 1 | 0;
            var$17 = $var9 + 1 | 0;
            while ($var11 < 6) {
                $var12 = 0;
                if (!$var11)
                    $var12 = nms_World_getBlockId($var1, var$12, $var8, $var9);
                if ($var11 == 1)
                    $var12 = nms_World_getBlockId($var1, var$13, $var8, $var9);
                if ($var11 == 2)
                    $var12 = nms_World_getBlockId($var1, $var7, var$14, $var9);
                if ($var11 == 3)
                    $var12 = nms_World_getBlockId($var1, $var7, var$15, $var9);
                if ($var11 == 4)
                    $var12 = nms_World_getBlockId($var1, $var7, $var8, var$16);
                if ($var11 == 5)
                    $var12 = nms_World_getBlockId($var1, $var7, $var8, var$17);
                if ($var12 == nms_Block_lightStone.$blockID)
                    $var10 = $var10 + 1 | 0;
                $var11 = $var11 + 1 | 0;
            }
            if ($var10 == 1)
                nms_World_setBlockWithNotify($var1, $var7, $var8, $var9, nms_Block_lightStone.$blockID);
        }
        $var6 = $var6 + 1 | 0;
    }
    return 1;
}
function jl_InstantiationException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_InstantiationException__init_0() {
    var var_0 = new jl_InstantiationException();
    jl_InstantiationException__init_(var_0);
    return var_0;
}
function jl_InstantiationException__init_($this) {
    jl_Throwable__init_0($this);
}
function jl_IllegalAccessException() {
    jl_ReflectiveOperationException.call(this);
}
function jl_IllegalAccessException__init_0() {
    var var_0 = new jl_IllegalAccessException();
    jl_IllegalAccessException__init_(var_0);
    return var_0;
}
function jl_IllegalAccessException__init_($this) {
    jl_Throwable__init_0($this);
}
function otcir_Converter() {
    jl_Object.call(this);
}
function otcir_Converter__init_0() {
    var var_0 = new otcir_Converter();
    otcir_Converter__init_(var_0);
    return var_0;
}
function otcir_Converter__init_($this) {
    return;
}
function otcir_Flags() {
    jl_Object.call(this);
}
function otcir_Flags__init_0() {
    var var_0 = new otcir_Flags();
    otcir_Flags__init_(var_0);
    return var_0;
}
function otcir_Flags__init_($this) {
    return;
}
function jl_StrictMath() {
    jl_Object.call(this);
}
function jl_StrictMath__init_0() {
    var var_0 = new jl_StrictMath();
    jl_StrictMath__init_(var_0);
    return var_0;
}
function jl_StrictMath__init_($this) {
    return;
}
function cjj_StaticTree() {
    var a = this; jl_Object.call(a);
    a.$static_tree = null;
    a.$extra_bits = null;
    a.$extra_base = 0;
    a.$elems = 0;
    a.$max_length = 0;
}
var cjj_StaticTree_static_ltree = null;
var cjj_StaticTree_static_dtree = null;
var cjj_StaticTree_static_l_desc = null;
var cjj_StaticTree_static_d_desc = null;
var cjj_StaticTree_static_bl_desc = null;
function cjj_StaticTree_$callClinit() {
    cjj_StaticTree_$callClinit = $rt_eraseClinit(cjj_StaticTree);
    cjj_StaticTree__clinit_();
}
function cjj_StaticTree__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cjj_StaticTree();
    cjj_StaticTree__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cjj_StaticTree__init_0($this, $static_tree, $extra_bits, $extra_base, $elems, $max_length) {
    cjj_StaticTree_$callClinit();
    $this.$static_tree = $static_tree;
    $this.$extra_bits = $extra_bits;
    $this.$extra_base = $extra_base;
    $this.$elems = $elems;
    $this.$max_length = $max_length;
}
function cjj_StaticTree__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createShortArray(576);
    var$2 = var$1.data;
    var$2[0] = 12;
    var$2[1] = 8;
    var$2[2] = 140;
    var$2[3] = 8;
    var$2[4] = 76;
    var$2[5] = 8;
    var$2[6] = 204;
    var$2[7] = 8;
    var$2[8] = 44;
    var$2[9] = 8;
    var$2[10] = 172;
    var$2[11] = 8;
    var$2[12] = 108;
    var$2[13] = 8;
    var$2[14] = 236;
    var$2[15] = 8;
    var$2[16] = 28;
    var$2[17] = 8;
    var$2[18] = 156;
    var$2[19] = 8;
    var$2[20] = 92;
    var$2[21] = 8;
    var$2[22] = 220;
    var$2[23] = 8;
    var$2[24] = 60;
    var$2[25] = 8;
    var$2[26] = 188;
    var$2[27] = 8;
    var$2[28] = 124;
    var$2[29] = 8;
    var$2[30] = 252;
    var$2[31] = 8;
    var$2[32] = 2;
    var$2[33] = 8;
    var$2[34] = 130;
    var$2[35] = 8;
    var$2[36] = 66;
    var$2[37] = 8;
    var$2[38] = 194;
    var$2[39] = 8;
    var$2[40] = 34;
    var$2[41] = 8;
    var$2[42] = 162;
    var$2[43] = 8;
    var$2[44] = 98;
    var$2[45] = 8;
    var$2[46] = 226;
    var$2[47] = 8;
    var$2[48] = 18;
    var$2[49] = 8;
    var$2[50] = 146;
    var$2[51] = 8;
    var$2[52] = 82;
    var$2[53] = 8;
    var$2[54] = 210;
    var$2[55] = 8;
    var$2[56] = 50;
    var$2[57] = 8;
    var$2[58] = 178;
    var$2[59] = 8;
    var$2[60] = 114;
    var$2[61] = 8;
    var$2[62] = 242;
    var$2[63] = 8;
    var$2[64] = 10;
    var$2[65] = 8;
    var$2[66] = 138;
    var$2[67] = 8;
    var$2[68] = 74;
    var$2[69] = 8;
    var$2[70] = 202;
    var$2[71] = 8;
    var$2[72] = 42;
    var$2[73] = 8;
    var$2[74] = 170;
    var$2[75] = 8;
    var$2[76] = 106;
    var$2[77] = 8;
    var$2[78] = 234;
    var$2[79] = 8;
    var$2[80] = 26;
    var$2[81] = 8;
    var$2[82] = 154;
    var$2[83] = 8;
    var$2[84] = 90;
    var$2[85] = 8;
    var$2[86] = 218;
    var$2[87] = 8;
    var$2[88] = 58;
    var$2[89] = 8;
    var$2[90] = 186;
    var$2[91] = 8;
    var$2[92] = 122;
    var$2[93] = 8;
    var$2[94] = 250;
    var$2[95] = 8;
    var$2[96] = 6;
    var$2[97] = 8;
    var$2[98] = 134;
    var$2[99] = 8;
    var$2[100] = 70;
    var$2[101] = 8;
    var$2[102] = 198;
    var$2[103] = 8;
    var$2[104] = 38;
    var$2[105] = 8;
    var$2[106] = 166;
    var$2[107] = 8;
    var$2[108] = 102;
    var$2[109] = 8;
    var$2[110] = 230;
    var$2[111] = 8;
    var$2[112] = 22;
    var$2[113] = 8;
    var$2[114] = 150;
    var$2[115] = 8;
    var$2[116] = 86;
    var$2[117] = 8;
    var$2[118] = 214;
    var$2[119] = 8;
    var$2[120] = 54;
    var$2[121] = 8;
    var$2[122] = 182;
    var$2[123] = 8;
    var$2[124] = 118;
    var$2[125] = 8;
    var$2[126] = 246;
    var$2[127] = 8;
    var$2[128] = 14;
    var$2[129] = 8;
    var$2[130] = 142;
    var$2[131] = 8;
    var$2[132] = 78;
    var$2[133] = 8;
    var$2[134] = 206;
    var$2[135] = 8;
    var$2[136] = 46;
    var$2[137] = 8;
    var$2[138] = 174;
    var$2[139] = 8;
    var$2[140] = 110;
    var$2[141] = 8;
    var$2[142] = 238;
    var$2[143] = 8;
    var$2[144] = 30;
    var$2[145] = 8;
    var$2[146] = 158;
    var$2[147] = 8;
    var$2[148] = 94;
    var$2[149] = 8;
    var$2[150] = 222;
    var$2[151] = 8;
    var$2[152] = 62;
    var$2[153] = 8;
    var$2[154] = 190;
    var$2[155] = 8;
    var$2[156] = 126;
    var$2[157] = 8;
    var$2[158] = 254;
    var$2[159] = 8;
    var$2[160] = 1;
    var$2[161] = 8;
    var$2[162] = 129;
    var$2[163] = 8;
    var$2[164] = 65;
    var$2[165] = 8;
    var$2[166] = 193;
    var$2[167] = 8;
    var$2[168] = 33;
    var$2[169] = 8;
    var$2[170] = 161;
    var$2[171] = 8;
    var$2[172] = 97;
    var$2[173] = 8;
    var$2[174] = 225;
    var$2[175] = 8;
    var$2[176] = 17;
    var$2[177] = 8;
    var$2[178] = 145;
    var$2[179] = 8;
    var$2[180] = 81;
    var$2[181] = 8;
    var$2[182] = 209;
    var$2[183] = 8;
    var$2[184] = 49;
    var$2[185] = 8;
    var$2[186] = 177;
    var$2[187] = 8;
    var$2[188] = 113;
    var$2[189] = 8;
    var$2[190] = 241;
    var$2[191] = 8;
    var$2[192] = 9;
    var$2[193] = 8;
    var$2[194] = 137;
    var$2[195] = 8;
    var$2[196] = 73;
    var$2[197] = 8;
    var$2[198] = 201;
    var$2[199] = 8;
    var$2[200] = 41;
    var$2[201] = 8;
    var$2[202] = 169;
    var$2[203] = 8;
    var$2[204] = 105;
    var$2[205] = 8;
    var$2[206] = 233;
    var$2[207] = 8;
    var$2[208] = 25;
    var$2[209] = 8;
    var$2[210] = 153;
    var$2[211] = 8;
    var$2[212] = 89;
    var$2[213] = 8;
    var$2[214] = 217;
    var$2[215] = 8;
    var$2[216] = 57;
    var$2[217] = 8;
    var$2[218] = 185;
    var$2[219] = 8;
    var$2[220] = 121;
    var$2[221] = 8;
    var$2[222] = 249;
    var$2[223] = 8;
    var$2[224] = 5;
    var$2[225] = 8;
    var$2[226] = 133;
    var$2[227] = 8;
    var$2[228] = 69;
    var$2[229] = 8;
    var$2[230] = 197;
    var$2[231] = 8;
    var$2[232] = 37;
    var$2[233] = 8;
    var$2[234] = 165;
    var$2[235] = 8;
    var$2[236] = 101;
    var$2[237] = 8;
    var$2[238] = 229;
    var$2[239] = 8;
    var$2[240] = 21;
    var$2[241] = 8;
    var$2[242] = 149;
    var$2[243] = 8;
    var$2[244] = 85;
    var$2[245] = 8;
    var$2[246] = 213;
    var$2[247] = 8;
    var$2[248] = 53;
    var$2[249] = 8;
    var$2[250] = 181;
    var$2[251] = 8;
    var$2[252] = 117;
    var$2[253] = 8;
    var$2[254] = 245;
    var$2[255] = 8;
    var$2[256] = 13;
    var$2[257] = 8;
    var$2[258] = 141;
    var$2[259] = 8;
    var$2[260] = 77;
    var$2[261] = 8;
    var$2[262] = 205;
    var$2[263] = 8;
    var$2[264] = 45;
    var$2[265] = 8;
    var$2[266] = 173;
    var$2[267] = 8;
    var$2[268] = 109;
    var$2[269] = 8;
    var$2[270] = 237;
    var$2[271] = 8;
    var$2[272] = 29;
    var$2[273] = 8;
    var$2[274] = 157;
    var$2[275] = 8;
    var$2[276] = 93;
    var$2[277] = 8;
    var$2[278] = 221;
    var$2[279] = 8;
    var$2[280] = 61;
    var$2[281] = 8;
    var$2[282] = 189;
    var$2[283] = 8;
    var$2[284] = 125;
    var$2[285] = 8;
    var$2[286] = 253;
    var$2[287] = 8;
    var$2[288] = 19;
    var$2[289] = 9;
    var$2[290] = 275;
    var$2[291] = 9;
    var$2[292] = 147;
    var$2[293] = 9;
    var$2[294] = 403;
    var$2[295] = 9;
    var$2[296] = 83;
    var$2[297] = 9;
    var$2[298] = 339;
    var$2[299] = 9;
    var$2[300] = 211;
    var$2[301] = 9;
    var$2[302] = 467;
    var$2[303] = 9;
    var$2[304] = 51;
    var$2[305] = 9;
    var$2[306] = 307;
    var$2[307] = 9;
    var$2[308] = 179;
    var$2[309] = 9;
    var$2[310] = 435;
    var$2[311] = 9;
    var$2[312] = 115;
    var$2[313] = 9;
    var$2[314] = 371;
    var$2[315] = 9;
    var$2[316] = 243;
    var$2[317] = 9;
    var$2[318] = 499;
    var$2[319] = 9;
    var$2[320] = 11;
    var$2[321] = 9;
    var$2[322] = 267;
    var$2[323] = 9;
    var$2[324] = 139;
    var$2[325] = 9;
    var$2[326] = 395;
    var$2[327] = 9;
    var$2[328] = 75;
    var$2[329] = 9;
    var$2[330] = 331;
    var$2[331] = 9;
    var$2[332] = 203;
    var$2[333] = 9;
    var$2[334] = 459;
    var$2[335] = 9;
    var$2[336] = 43;
    var$2[337] = 9;
    var$2[338] = 299;
    var$2[339] = 9;
    var$2[340] = 171;
    var$2[341] = 9;
    var$2[342] = 427;
    var$2[343] = 9;
    var$2[344] = 107;
    var$2[345] = 9;
    var$2[346] = 363;
    var$2[347] = 9;
    var$2[348] = 235;
    var$2[349] = 9;
    var$2[350] = 491;
    var$2[351] = 9;
    var$2[352] = 27;
    var$2[353] = 9;
    var$2[354] = 283;
    var$2[355] = 9;
    var$2[356] = 155;
    var$2[357] = 9;
    var$2[358] = 411;
    var$2[359] = 9;
    var$2[360] = 91;
    var$2[361] = 9;
    var$2[362] = 347;
    var$2[363] = 9;
    var$2[364] = 219;
    var$2[365] = 9;
    var$2[366] = 475;
    var$2[367] = 9;
    var$2[368] = 59;
    var$2[369] = 9;
    var$2[370] = 315;
    var$2[371] = 9;
    var$2[372] = 187;
    var$2[373] = 9;
    var$2[374] = 443;
    var$2[375] = 9;
    var$2[376] = 123;
    var$2[377] = 9;
    var$2[378] = 379;
    var$2[379] = 9;
    var$2[380] = 251;
    var$2[381] = 9;
    var$2[382] = 507;
    var$2[383] = 9;
    var$2[384] = 7;
    var$2[385] = 9;
    var$2[386] = 263;
    var$2[387] = 9;
    var$2[388] = 135;
    var$2[389] = 9;
    var$2[390] = 391;
    var$2[391] = 9;
    var$2[392] = 71;
    var$2[393] = 9;
    var$2[394] = 327;
    var$2[395] = 9;
    var$2[396] = 199;
    var$2[397] = 9;
    var$2[398] = 455;
    var$2[399] = 9;
    var$2[400] = 39;
    var$2[401] = 9;
    var$2[402] = 295;
    var$2[403] = 9;
    var$2[404] = 167;
    var$2[405] = 9;
    var$2[406] = 423;
    var$2[407] = 9;
    var$2[408] = 103;
    var$2[409] = 9;
    var$2[410] = 359;
    var$2[411] = 9;
    var$2[412] = 231;
    var$2[413] = 9;
    var$2[414] = 487;
    var$2[415] = 9;
    var$2[416] = 23;
    var$2[417] = 9;
    var$2[418] = 279;
    var$2[419] = 9;
    var$2[420] = 151;
    var$2[421] = 9;
    var$2[422] = 407;
    var$2[423] = 9;
    var$2[424] = 87;
    var$2[425] = 9;
    var$2[426] = 343;
    var$2[427] = 9;
    var$2[428] = 215;
    var$2[429] = 9;
    var$2[430] = 471;
    var$2[431] = 9;
    var$2[432] = 55;
    var$2[433] = 9;
    var$2[434] = 311;
    var$2[435] = 9;
    var$2[436] = 183;
    var$2[437] = 9;
    var$2[438] = 439;
    var$2[439] = 9;
    var$2[440] = 119;
    var$2[441] = 9;
    var$2[442] = 375;
    var$2[443] = 9;
    var$2[444] = 247;
    var$2[445] = 9;
    var$2[446] = 503;
    var$2[447] = 9;
    var$2[448] = 15;
    var$2[449] = 9;
    var$2[450] = 271;
    var$2[451] = 9;
    var$2[452] = 143;
    var$2[453] = 9;
    var$2[454] = 399;
    var$2[455] = 9;
    var$2[456] = 79;
    var$2[457] = 9;
    var$2[458] = 335;
    var$2[459] = 9;
    var$2[460] = 207;
    var$2[461] = 9;
    var$2[462] = 463;
    var$2[463] = 9;
    var$2[464] = 47;
    var$2[465] = 9;
    var$2[466] = 303;
    var$2[467] = 9;
    var$2[468] = 175;
    var$2[469] = 9;
    var$2[470] = 431;
    var$2[471] = 9;
    var$2[472] = 111;
    var$2[473] = 9;
    var$2[474] = 367;
    var$2[475] = 9;
    var$2[476] = 239;
    var$2[477] = 9;
    var$2[478] = 495;
    var$2[479] = 9;
    var$2[480] = 31;
    var$2[481] = 9;
    var$2[482] = 287;
    var$2[483] = 9;
    var$2[484] = 159;
    var$2[485] = 9;
    var$2[486] = 415;
    var$2[487] = 9;
    var$2[488] = 95;
    var$2[489] = 9;
    var$2[490] = 351;
    var$2[491] = 9;
    var$2[492] = 223;
    var$2[493] = 9;
    var$2[494] = 479;
    var$2[495] = 9;
    var$2[496] = 63;
    var$2[497] = 9;
    var$2[498] = 319;
    var$2[499] = 9;
    var$2[500] = 191;
    var$2[501] = 9;
    var$2[502] = 447;
    var$2[503] = 9;
    var$2[504] = 127;
    var$2[505] = 9;
    var$2[506] = 383;
    var$2[507] = 9;
    var$2[508] = 255;
    var$2[509] = 9;
    var$2[510] = 511;
    var$2[511] = 9;
    var$2[512] = 0;
    var$2[513] = 7;
    var$2[514] = 64;
    var$2[515] = 7;
    var$2[516] = 32;
    var$2[517] = 7;
    var$2[518] = 96;
    var$2[519] = 7;
    var$2[520] = 16;
    var$2[521] = 7;
    var$2[522] = 80;
    var$2[523] = 7;
    var$2[524] = 48;
    var$2[525] = 7;
    var$2[526] = 112;
    var$2[527] = 7;
    var$2[528] = 8;
    var$2[529] = 7;
    var$2[530] = 72;
    var$2[531] = 7;
    var$2[532] = 40;
    var$2[533] = 7;
    var$2[534] = 104;
    var$2[535] = 7;
    var$2[536] = 24;
    var$2[537] = 7;
    var$2[538] = 88;
    var$2[539] = 7;
    var$2[540] = 56;
    var$2[541] = 7;
    var$2[542] = 120;
    var$2[543] = 7;
    var$2[544] = 4;
    var$2[545] = 7;
    var$2[546] = 68;
    var$2[547] = 7;
    var$2[548] = 36;
    var$2[549] = 7;
    var$2[550] = 100;
    var$2[551] = 7;
    var$2[552] = 20;
    var$2[553] = 7;
    var$2[554] = 84;
    var$2[555] = 7;
    var$2[556] = 52;
    var$2[557] = 7;
    var$2[558] = 116;
    var$2[559] = 7;
    var$2[560] = 3;
    var$2[561] = 8;
    var$2[562] = 131;
    var$2[563] = 8;
    var$2[564] = 67;
    var$2[565] = 8;
    var$2[566] = 195;
    var$2[567] = 8;
    var$2[568] = 35;
    var$2[569] = 8;
    var$2[570] = 163;
    var$2[571] = 8;
    var$2[572] = 99;
    var$2[573] = 8;
    var$2[574] = 227;
    var$2[575] = 8;
    cjj_StaticTree_static_ltree = var$1;
    var$1 = $rt_createShortArray(60);
    var$2 = var$1.data;
    var$2[0] = 0;
    var$2[1] = 5;
    var$2[2] = 16;
    var$2[3] = 5;
    var$2[4] = 8;
    var$2[5] = 5;
    var$2[6] = 24;
    var$2[7] = 5;
    var$2[8] = 4;
    var$2[9] = 5;
    var$2[10] = 20;
    var$2[11] = 5;
    var$2[12] = 12;
    var$2[13] = 5;
    var$2[14] = 28;
    var$2[15] = 5;
    var$2[16] = 2;
    var$2[17] = 5;
    var$2[18] = 18;
    var$2[19] = 5;
    var$2[20] = 10;
    var$2[21] = 5;
    var$2[22] = 26;
    var$2[23] = 5;
    var$2[24] = 6;
    var$2[25] = 5;
    var$2[26] = 22;
    var$2[27] = 5;
    var$2[28] = 14;
    var$2[29] = 5;
    var$2[30] = 30;
    var$2[31] = 5;
    var$2[32] = 1;
    var$2[33] = 5;
    var$2[34] = 17;
    var$2[35] = 5;
    var$2[36] = 9;
    var$2[37] = 5;
    var$2[38] = 25;
    var$2[39] = 5;
    var$2[40] = 5;
    var$2[41] = 5;
    var$2[42] = 21;
    var$2[43] = 5;
    var$2[44] = 13;
    var$2[45] = 5;
    var$2[46] = 29;
    var$2[47] = 5;
    var$2[48] = 3;
    var$2[49] = 5;
    var$2[50] = 19;
    var$2[51] = 5;
    var$2[52] = 11;
    var$2[53] = 5;
    var$2[54] = 27;
    var$2[55] = 5;
    var$2[56] = 7;
    var$2[57] = 5;
    var$2[58] = 23;
    var$2[59] = 5;
    cjj_StaticTree_static_dtree = var$1;
    cjj_StaticTree_static_l_desc = cjj_StaticTree__init_(cjj_StaticTree_static_ltree, cjj_Tree_extra_lbits, 257, 286, 15);
    cjj_StaticTree_static_d_desc = cjj_StaticTree__init_(cjj_StaticTree_static_dtree, cjj_Tree_extra_dbits, 0, 30, 15);
    cjj_StaticTree_static_bl_desc = cjj_StaticTree__init_(null, cjj_Tree_extra_blbits, 0, 19, 7);
}
function nms_Explosion() {
    var a = this; jl_Object.call(a);
    a.$field_12257_a = 0;
    a.$field_12250_h = null;
    a.$field_12249_i = null;
    a.$field_12256_b = 0.0;
    a.$field_12255_c = 0.0;
    a.$field_12254_d = 0.0;
    a.$field_12253_e = null;
    a.$field_12252_f = 0.0;
    a.$field_12251_g = null;
}
function nms_Explosion_func_12248_a($this) {
    var $var1, $var3, $var4, $var5, $var6, $var8, $var10, $var12, $var14, $var15, $var17, $var19, $var22, $var23, $var24, $var25, $var2, $var29, $var7, $var30, $var9, $var31, $var11, $var33, $var13, $var39, $var41, $var32, $var34, $var35, $var36, $var37, $var16, $var38, $var18;
    $var1 = $this.$field_12252_f;
    $var3 = 0;
    while ($var3 < 16) {
        $var4 = 0;
        while ($var4 < 16) {
            $var5 = 0;
            while ($var5 < 16) {
                a: {
                    if (!($var3 && $var3 != 15 && $var4 && $var4 != 15 && $var5 && $var5 != 15)) {
                        $var6 = $var3 / 15.0 * 2.0 - 1.0;
                        $var8 = $var4 / 15.0 * 2.0 - 1.0;
                        $var10 = $var5 / 15.0 * 2.0 - 1.0;
                        $var12 = jl_Math_sqrt($var6 * $var6 + $var8 * $var8 + $var10 * $var10);
                        $var6 = $var6 / $var12;
                        $var8 = $var8 / $var12;
                        $var12 = $var10 / $var12;
                        $var14 = $this.$field_12252_f * (0.699999988079071 + ju_Random_nextFloat($this.$field_12249_i.$rand1) * 0.6000000238418579);
                        $var15 = $this.$field_12256_b;
                        $var17 = $this.$field_12255_c;
                        $var19 = $this.$field_12254_d;
                        $var6 = $var6 * 0.30000001192092896;
                        $var8 = $var8 * 0.30000001192092896;
                        $var12 = $var12 * 0.30000001192092896;
                        while (true) {
                            if ($var14 <= 0.0)
                                break a;
                            $var22 = nms_MathHelper_floor_double($var15);
                            $var23 = nms_MathHelper_floor_double($var17);
                            $var24 = nms_MathHelper_floor_double($var19);
                            $var25 = nms_World_getBlockId($this.$field_12249_i, $var22, $var23, $var24);
                            if ($var25 > 0) {
                                nms_Block_$callClinit();
                                $var14 = $var14 - (nms_Block_blocksList.data[$var25].$func_227_a($this.$field_12253_e) + 0.30000001192092896) * 0.30000001192092896;
                            }
                            if ($var14 > 0.0)
                                ju_HashSet_add($this.$field_12251_g, nms_ChunkPosition__init_($var22, $var23, $var24));
                            $var15 = $var15 + $var6;
                            $var17 = $var17 + $var8;
                            $var19 = $var19 + $var12;
                            $var14 = $var14 - 0.22500000894069672;
                        }
                    }
                }
                $var5 = $var5 + 1 | 0;
            }
            $var4 = $var4 + 1 | 0;
        }
        $var3 = $var3 + 1 | 0;
    }
    $this.$field_12252_f = $this.$field_12252_f * 2.0;
    $var2 = nms_MathHelper_floor_double($this.$field_12256_b - $this.$field_12252_f - 1.0);
    $var4 = nms_MathHelper_floor_double($this.$field_12256_b + $this.$field_12252_f + 1.0);
    $var5 = nms_MathHelper_floor_double($this.$field_12255_c - $this.$field_12252_f - 1.0);
    $var29 = nms_MathHelper_floor_double($this.$field_12255_c + $this.$field_12252_f + 1.0);
    $var7 = nms_MathHelper_floor_double($this.$field_12254_d - $this.$field_12252_f - 1.0);
    $var30 = nms_MathHelper_floor_double($this.$field_12254_d + $this.$field_12252_f + 1.0);
    $var9 = nms_World_getEntitiesWithinAABBExcludingEntity($this.$field_12249_i, $this.$field_12253_e, nms_AxisAlignedBB_getBoundingBoxFromPool($var2, $var5, $var7, $var4, $var29, $var30));
    $var31 = nms_Vec3D_createVector($this.$field_12256_b, $this.$field_12255_c, $this.$field_12254_d);
    $var11 = 0;
    while ($var11 < ju_ArrayList_size($var9)) {
        $var33 = ju_ArrayList_get($var9, $var11);
        $var13 = nms_Entity_getDistance($var33, $this.$field_12256_b, $this.$field_12255_c, $this.$field_12254_d) / $this.$field_12252_f;
        if ($var13 <= 1.0) {
            $var15 = $var33.$posX - $this.$field_12256_b;
            $var17 = $var33.$posY - $this.$field_12255_c;
            $var19 = $var33.$posZ - $this.$field_12254_d;
            $var39 = nms_MathHelper_sqrt_double($var15 * $var15 + $var17 * $var17 + $var19 * $var19);
            $var12 = $var15 / $var39;
            $var6 = $var17 / $var39;
            $var8 = $var19 / $var39;
            $var41 = (1.0 - $var13) * nms_World_func_675_a($this.$field_12249_i, $var31, $var33.$boundingBox);
            $var33.$canAttackEntity($this.$field_12253_e, ($var41 * $var41 + $var41) / 2.0 * 8.0 * $this.$field_12252_f + 1.0 | 0);
            $var33.$motionX = $var33.$motionX + $var12 * $var41;
            $var33.$motionY = $var33.$motionY + $var6 * $var41;
            $var33.$motionZ = $var33.$motionZ + $var8 * $var41;
        }
        $var11 = $var11 + 1 | 0;
    }
    b: {
        $this.$field_12252_f = $var1;
        $var32 = ju_ArrayList__init_0();
        ju_AbstractCollection_addAll($var32, $this.$field_12251_g);
        if ($this.$field_12257_a) {
            $var34 = ju_ArrayList_size($var32) - 1 | 0;
            while (true) {
                if ($var34 < 0)
                    break b;
                $var35 = ju_ArrayList_get($var32, $var34);
                $var36 = $var35.$x3;
                $var37 = $var35.$y2;
                $var16 = $var35.$z5;
                $var38 = nms_World_getBlockId($this.$field_12249_i, $var36, $var37, $var16);
                $var18 = nms_World_getBlockId($this.$field_12249_i, $var36, $var37 - 1 | 0, $var16);
                if (!$var38) {
                    nms_Block_$callClinit();
                    if (nms_Block_opaqueCubeLookup.data[$var18] && !ju_Random_nextInt($this.$field_12250_h, 3))
                        nms_World_setBlockWithNotify($this.$field_12249_i, $var36, $var37, $var16, nms_Block_fire.$blockID);
                }
                $var34 = $var34 + (-1) | 0;
            }
        }
    }
}
function nms_Explosion_func_12247_b($this) {
    var $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8, var$9, var$10, var$11, $var9, $var11, $var13, $var15, $var17, $var19, $var21, $var23, var$20, var$21;
    nms_World_playSoundEffect($this.$field_12249_i, $this.$field_12256_b, $this.$field_12255_c, $this.$field_12254_d, $rt_s(1022), 4.0, (1.0 + (ju_Random_nextFloat($this.$field_12249_i.$rand1) - ju_Random_nextFloat($this.$field_12249_i.$rand1)) * 0.20000000298023224) * 0.699999988079071);
    $var1 = ju_ArrayList__init_0();
    ju_AbstractCollection_addAll($var1, $this.$field_12251_g);
    $var2 = $var1.$size - 1 | 0;
    while ($var2 >= 0) {
        $var3 = ju_ArrayList_get($var1, $var2);
        $var4 = $var3.$x3;
        $var5 = $var3.$y2;
        $var6 = $var3.$z5;
        $var7 = nms_World_getBlockId($this.$field_12249_i, $var4, $var5, $var6);
        $var8 = 0;
        var$9 = $var4;
        var$10 = $var5;
        var$11 = $var6;
        while ($var8 < 1) {
            $var9 = var$9 + ju_Random_nextFloat($this.$field_12249_i.$rand1);
            $var11 = var$10 + ju_Random_nextFloat($this.$field_12249_i.$rand1);
            $var13 = var$11 + ju_Random_nextFloat($this.$field_12249_i.$rand1);
            $var15 = $var9 - $this.$field_12256_b;
            $var17 = $var11 - $this.$field_12255_c;
            $var19 = $var13 - $this.$field_12254_d;
            $var21 = nms_MathHelper_sqrt_double($var15 * $var15 + $var17 * $var17 + $var19 * $var19);
            $var15 = $var15 / $var21;
            $var17 = $var17 / $var21;
            $var19 = $var19 / $var21;
            $var21 = 0.5 / ($var21 / $this.$field_12252_f + 0.1) * (ju_Random_nextFloat($this.$field_12249_i.$rand1) * ju_Random_nextFloat($this.$field_12249_i.$rand1) + 0.30000001192092896);
            $var23 = $var15 * $var21;
            var$20 = $var17 * $var21;
            var$21 = $var19 * $var21;
            nms_World_spawnParticle($this.$field_12249_i, $rt_s(486), ($var9 + $this.$field_12256_b * 1.0) / 2.0, ($var11 + $this.$field_12255_c * 1.0) / 2.0, ($var13 + $this.$field_12254_d * 1.0) / 2.0, $var23, var$20, var$21);
            nms_World_spawnParticle($this.$field_12249_i, $rt_s(283), $var9, $var11, $var13, $var23, var$20, var$21);
            $var8 = $var8 + 1 | 0;
        }
        if ($var7 > 0) {
            nms_Block_$callClinit();
            nms_Block_blocksList.data[$var7].$dropBlockAsItemWithChance($this.$field_12249_i, $var4, $var5, $var6, nms_World_getBlockMetadata($this.$field_12249_i, $var4, $var5, $var6), 0.30000001192092896);
            nms_World_setBlockWithNotify($this.$field_12249_i, $var4, $var5, $var6, 0);
            nms_Block_blocksList.data[$var7].$onBlockDestroyedByExplosion($this.$field_12249_i, $var4, $var5, $var6);
        }
        $var2 = $var2 + (-1) | 0;
    }
}
function nms_PathEntity() {
    var a = this; jl_Object.call(a);
    a.$points = null;
    a.$pathLength = 0;
    a.$pathIndex = 0;
}
function nms_PathEntity_incrementPathIndex($this) {
    $this.$pathIndex = $this.$pathIndex + 1 | 0;
}
function nms_PathEntity_isFinished($this) {
    return $this.$pathIndex < $this.$points.data.length ? 0 : 1;
}
function nms_PathEntity_getPosition($this, $var1) {
    return nms_Vec3D_createVector($this.$points.data[$this.$pathIndex].$xCoord3 + ($var1.$width0 + 1.0 | 0) * 0.5, $this.$points.data[$this.$pathIndex].$yCoord3, $this.$points.data[$this.$pathIndex].$zCoord3 + ($var1.$width0 + 1.0 | 0) * 0.5);
}
function nms_Pathfinder() {
    var a = this; jl_Object.call(a);
    a.$worldMap = null;
    a.$path0 = null;
    a.$pointMap = null;
    a.$pathOptions = null;
}
function nms_Pathfinder__init_(var_0) {
    var var_1 = new nms_Pathfinder();
    nms_Pathfinder__init_0(var_1, var_0);
    return var_1;
}
function nms_Pathfinder__init_0($this, $var1) {
    $this.$path0 = nms_Path__init_0();
    $this.$pointMap = nms_MCHashTable__init_0();
    $this.$pathOptions = $rt_createArray(nms_PathPoint, 32);
    $this.$worldMap = $var1;
}
function nms_Pathfinder_createEntityPathTo($this, $var1, $var2, $var3) {
    return nms_Pathfinder_createEntityPathTo1($this, $var1, $var2.$posX, $var2.$boundingBox.$minY0, $var2.$posZ, $var3);
}
function nms_Pathfinder_createEntityPathTo0($this, $var1, $var2, $var3, $var4, $var5) {
    return nms_Pathfinder_createEntityPathTo1($this, $var1, $var2 + 0.5, $var3 + 0.5, $var4 + 0.5, $var5);
}
function nms_Pathfinder_createEntityPathTo1($this, $var1, $var2, $var4, $var6, $var8) {
    var $var9, $var10, $var11, var$9, $var12, var$11, var$12, var$13, var$14;
    nms_Path_clearPath($this.$path0);
    nms_MCHashTable_clearMap($this.$pointMap);
    $var9 = nms_Pathfinder_openPoint($this, nms_MathHelper_floor_double($var1.$boundingBox.$minX), nms_MathHelper_floor_double($var1.$boundingBox.$minY0), nms_MathHelper_floor_double($var1.$boundingBox.$minZ0));
    $var10 = nms_Pathfinder_openPoint($this, nms_MathHelper_floor_double($var2 - $var1.$width0 / 2.0), nms_MathHelper_floor_double($var4), nms_MathHelper_floor_double($var6 - $var1.$width0 / 2.0));
    $var11 = nms_PathPoint__init_(nms_MathHelper_floor_float($var1.$width0 + 1.0), nms_MathHelper_floor_float($var1.$height + 1.0), nms_MathHelper_floor_float($var1.$width0 + 1.0));
    $var9.$totalPathDistance = 0.0;
    $var9.$distanceToNext = nms_PathPoint_distanceTo($var9, $var10);
    $var9.$distanceToTarget = $var9.$distanceToNext;
    nms_Path_clearPath($this.$path0);
    nms_Path_addPoint($this.$path0, $var9);
    var$9 = $var9;
    a: {
        while (true) {
            if (nms_Path_isPathEmpty($this.$path0)) {
                if (var$9 !== $var9) {
                    $var12 = nms_Pathfinder_createEntityPath($this, $var9, var$9);
                    break a;
                }
                $var12 = null;
                break a;
            }
            var$11 = nms_Path_dequeue($this.$path0);
            if (var$11.$hash == $var10.$hash)
                break;
            if (nms_PathPoint_distanceTo(var$11, $var10) < nms_PathPoint_distanceTo(var$9, $var10))
                var$9 = var$11;
            var$11.$isFirst = 1;
            var$12 = nms_Pathfinder_findPathOptions($this, $var1, var$11, $var11, $var10, $var8);
            var$13 = 0;
            while (var$13 < var$12) {
                $var12 = $this.$pathOptions.data[var$13];
                var$14 = var$11.$totalPathDistance + nms_PathPoint_distanceTo(var$11, $var12);
                if (!(nms_PathPoint_isAssigned($var12) && var$14 >= $var12.$totalPathDistance)) {
                    $var12.$previous1 = var$11;
                    $var12.$totalPathDistance = var$14;
                    $var12.$distanceToNext = nms_PathPoint_distanceTo($var12, $var10);
                    if (nms_PathPoint_isAssigned($var12))
                        nms_Path_changeDistance($this.$path0, $var12, $var12.$totalPathDistance + $var12.$distanceToNext);
                    else {
                        $var12.$distanceToTarget = $var12.$totalPathDistance + $var12.$distanceToNext;
                        nms_Path_addPoint($this.$path0, $var12);
                    }
                }
                var$13 = var$13 + 1 | 0;
            }
        }
        $var12 = nms_Pathfinder_createEntityPath($this, $var9, $var10);
    }
    return $var12;
}
function nms_Pathfinder_findPathOptions($this, $var1, $var2, $var3, $var4, $var5) {
    var $var7, $var8, $var9, $var10, $var11, var$11, var$12, var$13, var$14;
    $var7 = 0;
    if (nms_Pathfinder_getVerticalOffset($this, $var1, $var2.$xCoord3, $var2.$yCoord3 + 1 | 0, $var2.$zCoord3, $var3) > 0)
        $var7 = 1;
    $var8 = nms_Pathfinder_getSafePoint($this, $var1, $var2.$xCoord3, $var2.$yCoord3, $var2.$zCoord3 + 1 | 0, $var3, $var7);
    $var9 = nms_Pathfinder_getSafePoint($this, $var1, $var2.$xCoord3 - 1 | 0, $var2.$yCoord3, $var2.$zCoord3, $var3, $var7);
    $var10 = nms_Pathfinder_getSafePoint($this, $var1, $var2.$xCoord3 + 1 | 0, $var2.$yCoord3, $var2.$zCoord3, $var3, $var7);
    $var11 = nms_Pathfinder_getSafePoint($this, $var1, $var2.$xCoord3, $var2.$yCoord3, $var2.$zCoord3 - 1 | 0, $var3, $var7);
    if ($var8 === null)
        var$11 = 0;
    else if ($var8.$isFirst)
        var$11 = 0;
    else if (nms_PathPoint_distanceTo($var8, $var4) >= $var5)
        var$11 = 0;
    else {
        var$12 = $this.$pathOptions.data;
        var$11 = 1;
        var$12[0] = $var8;
    }
    if ($var9 === null)
        var$13 = var$11;
    else if ($var9.$isFirst)
        var$13 = var$11;
    else if (nms_PathPoint_distanceTo($var9, $var4) >= $var5)
        var$13 = var$11;
    else {
        var$12 = $this.$pathOptions.data;
        var$13 = var$11 + 1 | 0;
        var$12[var$11] = $var9;
    }
    if ($var10 === null)
        var$14 = var$13;
    else if ($var10.$isFirst)
        var$14 = var$13;
    else if (nms_PathPoint_distanceTo($var10, $var4) >= $var5)
        var$14 = var$13;
    else {
        var$12 = $this.$pathOptions.data;
        var$14 = var$13 + 1 | 0;
        var$12[var$13] = $var10;
    }
    if ($var11 === null)
        var$13 = var$14;
    else if ($var11.$isFirst)
        var$13 = var$14;
    else if (nms_PathPoint_distanceTo($var11, $var4) >= $var5)
        var$13 = var$14;
    else {
        var$12 = $this.$pathOptions.data;
        var$13 = var$14 + 1 | 0;
        var$12[var$14] = $var11;
    }
    return var$13;
}
function nms_Pathfinder_getSafePoint($this, $var1, $var2, $var3, $var4, $var5, $var6) {
    var $var7, var$8, $var8, $var10;
    $var7 = null;
    if (nms_Pathfinder_getVerticalOffset($this, $var1, $var2, $var3, $var4, $var5) > 0)
        $var7 = nms_Pathfinder_openPoint($this, $var2, $var3, $var4);
    if ($var7 !== null)
        var$8 = $var3;
    else {
        var$8 = $var3 + $var6 | 0;
        if (nms_Pathfinder_getVerticalOffset($this, $var1, $var2, var$8, $var4, $var5) > 0)
            $var7 = nms_Pathfinder_openPoint($this, $var2, var$8, $var4);
        else
            var$8 = $var3;
    }
    if ($var7 !== null) {
        $var8 = 0;
        a: {
            while (true) {
                if (var$8 <= 0)
                    break a;
                $var10 = nms_Pathfinder_getVerticalOffset($this, $var1, $var2, var$8 - 1 | 0, $var4, $var5);
                if ($var10 <= 0)
                    break a;
                if ($var10 < 0)
                    return null;
                $var8 = $var8 + 1 | 0;
                if ($var8 >= 4)
                    break;
                var$8 = var$8 + (-1) | 0;
            }
            return null;
        }
        if (var$8 > 0)
            $var7 = nms_Pathfinder_openPoint($this, $var2, var$8, $var4);
    }
    return $var7;
}
function nms_Pathfinder_openPoint($this, $var1, $var2, $var3) {
    var $var4, $var5;
    $var4 = $var1 | $var2 << 10 | $var3 << 20;
    $var5 = nms_MCHashTable_lookup($this.$pointMap, $var4);
    if ($var5 === null) {
        $var5 = nms_PathPoint__init_($var1, $var2, $var3);
        nms_MCHashTable_addKey($this.$pointMap, $var4, $var5);
    }
    return $var5;
}
function nms_Pathfinder_getVerticalOffset($this, $var1, $var2, $var3, $var4, $var5) {
    var $var6, $var7, $var8, $var9;
    $var6 = $var2;
    a: {
        while ($var6 < ($var2 + $var5.$xCoord3 | 0)) {
            $var7 = $var3;
            while ($var7 < ($var3 + $var5.$yCoord3 | 0)) {
                $var8 = $var4;
                while ($var8 < ($var4 + $var5.$zCoord3 | 0)) {
                    $var9 = nms_ChunkCache_getBlockMaterial($this.$worldMap, $var2, $var3, $var4);
                    if ($var9.$func_880_c())
                        return 0;
                    if ($var9 === nms_Material_water)
                        break a;
                    if ($var9 === nms_Material_lava)
                        break a;
                    $var8 = $var8 + 1 | 0;
                }
                $var7 = $var7 + 1 | 0;
            }
            $var6 = $var6 + 1 | 0;
        }
        return 1;
    }
    return (-1);
}
function nms_Pathfinder_createEntityPath($this, $var1, $var2) {
    var $var3, $var4, $var5, var$6;
    $var3 = 1;
    $var4 = $var2;
    while ($var4.$previous1 !== null) {
        $var3 = $var3 + 1 | 0;
        $var4 = $var4.$previous1;
    }
    $var5 = $rt_createArray(nms_PathPoint, $var3);
    var$6 = $var5.data;
    $var3 = $var3 + (-1) | 0;
    var$6[$var3] = $var2;
    while ($var2.$previous1 !== null) {
        $var2 = $var2.$previous1;
        $var3 = $var3 + (-1) | 0;
        var$6[$var3] = $var2;
    }
    $var1 = new nms_PathEntity;
    $var1.$points = $var5;
    $var1.$pathLength = var$6.length;
    return $var1;
}
function nms_EntityPickupFX() {
    var a = this; nms_EntityFX.call(a);
    a.$field_675_a = null;
    a.$field_679_o = null;
    a.$field_678_p = 0;
    a.$field_677_q = 0;
    a.$field_676_r = 0.0;
}
function nms_EntityPickupFX_func_406_a($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7) {
    var $var8, $var9, $var11, $var13, $var17, $var15, $var19, $var25, $var21, $var23, $var27, $var28, $var29, $var30, var$22, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$22 = $thread.pop();$var30 = $thread.pop();$var29 = $thread.pop();$var28 = $thread.pop();$var27 = $thread.pop();$var23 = $thread.pop();$var21 = $thread.pop();$var25 = $thread.pop();$var19 = $thread.pop();$var15 = $thread.pop();$var17 = $thread.pop();$var13 = $thread.pop();$var11 = $thread.pop();$var9 = $thread.pop();$var8 = $thread.pop();$var7 = $thread.pop();$var6 = $thread.pop();$var5 = $thread.pop();$var4 = $thread.pop();$var3 = $thread.pop();$var2 = $thread.pop();$var1 = $thread.pop();$this
        = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $var8 = ($this.$field_678_p + $var2) / $this.$field_677_q;
        $var3 = $var8 * $var8;
        $var9 = $this.$field_675_a.$posX;
        $var11 = $this.$field_675_a.$posY;
        $var13 = $this.$field_675_a.$posZ;
        $var17 = $this.$field_679_o.$lastTickPosX;
        $var15 = $this.$field_679_o.$posX - $this.$field_679_o.$lastTickPosX;
        $var19 = $var2;
        $var15 = $var17 + $var15 * $var19;
        $var17 = $this.$field_679_o.$lastTickPosY + ($this.$field_679_o.$posY - $this.$field_679_o.$lastTickPosY) * $var19 + $this.$field_676_r;
        $var19 = $this.$field_679_o.$lastTickPosZ + ($this.$field_679_o.$posZ - $this.$field_679_o.$lastTickPosZ) * $var19;
        $var15 = $var15 - $var9;
        $var25 = $var3;
        $var21 = $var9 + $var15 * $var25;
        $var23 = $var11 + ($var17 - $var11) * $var25;
        $var25 = $var13 + ($var19 - $var13) * $var25;
        $var27 = nms_MathHelper_floor_double($var21);
        $var28 = nms_MathHelper_floor_double($var23 + $this.$yOffset / 2.0);
        $var29 = nms_MathHelper_floor_double($var25);
        $var30 = nms_World_getLightBrightness($this.$worldObj0, $var27, $var28, $var29);
        $var19 = $var21 - nms_EntityFX_field_660_l;
        $var15 = $var23 - nms_EntityFX_field_659_m;
        $var17 = $var25 - nms_EntityFX_field_658_n;
        olo_EaglerAdapterGL30_glColor4f($var30, $var30, $var30, 1.0);
        nms_RenderManager_$callClinit();
        $var1 = nms_RenderManager_instance;
        var$22 = $this.$field_675_a;
        $var19 = $var19;
        $var15 = $var15;
        $var17 = $var17;
        $var3 = $this.$field_675_a.$rotationYaw;
        $ptr = 1;
    case 1:
        nms_RenderManager_func_853_a($var1, var$22, $var19, $var15, $var17, $var3, $var2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $var1, $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9, $var11, $var13, $var17, $var15, $var19, $var25, $var21, $var23, $var27, $var28, $var29, $var30, var$22, $ptr);
}
function nms_EntityPickupFX_onUpdate($this) {
    $this.$field_678_p = $this.$field_678_p + 1 | 0;
    if ($this.$field_678_p == $this.$field_677_q)
        nms_Entity_setEntityDead($this);
}
function nms_EntityPickupFX_func_404_c($this) {
    return 3;
}
function nms_Path() {
    var a = this; jl_Object.call(a);
    a.$pathPoints = null;
    a.$count3 = 0;
}
function nms_Path__init_0() {
    var var_0 = new nms_Path();
    nms_Path__init_(var_0);
    return var_0;
}
function nms_Path__init_($this) {
    $this.$pathPoints = $rt_createArray(nms_PathPoint, 1024);
    $this.$count3 = 0;
}
function nms_Path_addPoint($this, $var1) {
    var $var2, var$3;
    if ($var1.$index8 >= 0) {
        $var1 = new jl_IllegalStateException;
        jl_Throwable__init_($var1, $rt_s(1023));
        $rt_throw($var1);
    }
    if ($this.$count3 == $this.$pathPoints.data.length) {
        $var2 = $rt_createArray(nms_PathPoint, $this.$count3 << 1);
        jl_System_arraycopy($this.$pathPoints, 0, $var2, 0, $this.$count3);
        $this.$pathPoints = $var2;
    }
    $this.$pathPoints.data[$this.$count3] = $var1;
    $var1.$index8 = $this.$count3;
    var$3 = $this.$count3;
    $this.$count3 = var$3 + 1 | 0;
    nms_Path_sortBack($this, var$3);
    return $var1;
}
function nms_Path_clearPath($this) {
    $this.$count3 = 0;
}
function nms_Path_dequeue($this) {
    var $var1, var$2, var$3, var$4;
    $var1 = $this.$pathPoints.data[0];
    var$2 = $this.$pathPoints.data;
    var$3 = $this.$pathPoints.data;
    var$4 = $this.$count3 - 1 | 0;
    $this.$count3 = var$4;
    var$2[0] = var$3[var$4];
    $this.$pathPoints.data[$this.$count3] = null;
    if ($this.$count3 > 0)
        nms_Path_sortForward($this, 0);
    $var1.$index8 = (-1);
    return $var1;
}
function nms_Path_changeDistance($this, $var1, $var2) {
    var $var3;
    $var3 = $var1.$distanceToTarget;
    $var1.$distanceToTarget = $var2;
    if ($var2 >= $var3)
        nms_Path_sortForward($this, $var1.$index8);
    else
        nms_Path_sortBack($this, $var1.$index8);
}
function nms_Path_sortBack($this, $var1) {
    var $var2, $var3, $var4, $var5;
    $var2 = $this.$pathPoints.data[$var1];
    $var3 = $var2.$distanceToTarget;
    a: {
        while (true) {
            if ($var1 <= 0)
                break a;
            $var4 = ($var1 - 1 | 0) >> 1;
            $var5 = $this.$pathPoints.data[$var4];
            if ($var3 >= $var5.$distanceToTarget)
                break;
            $this.$pathPoints.data[$var1] = $var5;
            $var5.$index8 = $var1;
            $var1 = $var4;
        }
    }
    $this.$pathPoints.data[$var1] = $var2;
    $var2.$index8 = $var1;
}
function nms_Path_sortForward($this, $var1) {
    var $var2, $var3, $var4, $var5, $var6, $var7, $var8, $var9;
    $var2 = $this.$pathPoints.data[$var1];
    $var3 = $var2.$distanceToTarget;
    a: {
        while (true) {
            $var4 = 1 + ($var1 << 1) | 0;
            $var5 = $var4 + 1 | 0;
            if ($var4 >= $this.$count3)
                break;
            $var6 = $this.$pathPoints.data[$var4];
            $var7 = $var6.$distanceToTarget;
            if ($var5 >= $this.$count3) {
                $var8 = null;
                $var9 = Infinity;
            } else {
                $var8 = $this.$pathPoints.data[$var5];
                $var9 = $var8.$distanceToTarget;
            }
            if ($var7 < $var9) {
                if ($var7 >= $var3)
                    break a;
                $this.$pathPoints.data[$var1] = $var6;
                $var6.$index8 = $var1;
            } else {
                if ($var9 >= $var3)
                    break a;
                $this.$pathPoints.data[$var1] = $var8;
                $var8.$index8 = $var1;
                $var4 = $var5;
            }
            $var1 = $var4;
        }
    }
    $this.$pathPoints.data[$var1] = $var2;
    $var2.$index8 = $var1;
}
function nms_Path_isPathEmpty($this) {
    return $this.$count3 ? 0 : 1;
}
function nms_MCHashTable() {
    var a = this; jl_Object.call(a);
    a.$slots = null;
    a.$count4 = 0;
    a.$threshold0 = 0;
    a.$growFactor = 0.75;
    a.$versionStamp = 0;
}
function nms_MCHashTable__init_0() {
    var var_0 = new nms_MCHashTable();
    nms_MCHashTable__init_(var_0);
    return var_0;
}
function nms_MCHashTable__init_($this) {
    $this.$slots = $rt_createArray(nms_HashEntry, 16);
    $this.$threshold0 = 12;
    $this.$growFactor = 0.75;
}
function nms_MCHashTable_computeHash($var0) {
    $var0 = $var0 ^ $var0 >>> 20 ^ $var0 >>> 12;
    return $var0 ^ $var0 >>> 7 ^ $var0 >>> 4;
}
function nms_MCHashTable_getSlotIndex($var0, $var1) {
    return $var0 & ($var1 - 1 | 0);
}
function nms_MCHashTable_lookup($this, $var1) {
    var $var2, $var3;
    $var2 = nms_MCHashTable_computeHash($var1);
    $var3 = $this.$slots.data[nms_MCHashTable_getSlotIndex($var2, $this.$slots.data.length)];
    while ($var3 !== null) {
        if ($var3.$hashEntry == $var1)
            return $var3.$valueEntry;
        $var3 = $var3.$nextEntry0;
    }
    return null;
}
function nms_MCHashTable_addKey($this, $var1, $var2) {
    var $var3, $var4, $var5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $var3 = nms_MCHashTable_computeHash($var1);
    $var4 = nms_MCHashTable_getSlotIndex($var3, $this.$slots.data.length);
    $var5 = $this.$slots.data[$var4];
    while ($var5 !== null) {
        if ($var5.$hashEntry == $var1)
            $var5.$valueEntry = $var2;
        $var5 = $var5.$nextEntry0;
    }
    $this.$versionStamp = $this.$versionStamp + 1 | 0;
    var$6 = $this.$slots.data[$var4];
    var$7 = $this.$slots.data;
    $var5 = new nms_HashEntry;
    $var5.$valueEntry = $var2;
    $var5.$nextEntry0 = var$6;
    $var5.$hashEntry = $var1;
    $var5.$slotHash = $var3;
    var$7[$var4] = $var5;
    $var1 = $this.$count4;
    $this.$count4 = $var1 + 1 | 0;
    if ($var1 >= $this.$threshold0) {
        $var1 = 2 * $this.$slots.data.length | 0;
        if ($this.$slots.data.length == 1073741824)
            $this.$threshold0 = 2147483647;
        else {
            var$7 = $rt_createArray(nms_HashEntry, $var1);
            var$8 = var$7.data;
            var$9 = $this.$slots;
            var$10 = var$8.length;
            $var3 = 0;
            while (true) {
                var$11 = var$9.data;
                if ($var3 >= var$11.length)
                    break;
                a: {
                    $var5 = var$11[$var3];
                    if ($var5 !== null) {
                        var$11[$var3] = null;
                        while (true) {
                            $var2 = $var5.$nextEntry0;
                            $var4 = nms_MCHashTable_getSlotIndex($var5.$slotHash, var$10);
                            $var5.$nextEntry0 = var$8[$var4];
                            var$8[$var4] = $var5;
                            if ($var2 === null)
                                break a;
                            $var5 = $var2;
                        }
                    }
                }
                $var3 = $var3 + 1 | 0;
            }
            $this.$slots = var$7;
            var$12 = $var1;
            jl_Object_getClass($this);
            $this.$threshold0 = var$12 * 0.75 | 0;
        }
    }
}
function nms_MCHashTable_clearMap($this) {
    var $var1, $var2, var$3;
    $this.$versionStamp = $this.$versionStamp + 1 | 0;
    $var1 = $this.$slots;
    $var2 = 0;
    while (true) {
        var$3 = $var1.data;
        if ($var2 >= var$3.length)
            break;
        var$3[$var2] = null;
        $var2 = $var2 + 1 | 0;
    }
    $this.$count4 = 0;
}
function nms_PathPoint() {
    var a = this; jl_Object.call(a);
    a.$xCoord3 = 0;
    a.$yCoord3 = 0;
    a.$zCoord3 = 0;
    a.$hash = 0;
    a.$index8 = 0;
    a.$totalPathDistance = 0.0;
    a.$distanceToNext = 0.0;
    a.$distanceToTarget = 0.0;
    a.$previous1 = null;
    a.$isFirst = 0;
}
function nms_PathPoint__init_(var_0, var_1, var_2) {
    var var_3 = new nms_PathPoint();
    nms_PathPoint__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function nms_PathPoint__init_0($this, $var1, $var2, $var3) {
    $this.$index8 = (-1);
    $this.$isFirst = 0;
    $this.$xCoord3 = $var1;
    $this.$yCoord3 = $var2;
    $this.$zCoord3 = $var3;
    $this.$hash = $var1 | $var2 << 10 | $var3 << 20;
}
function nms_PathPoint_distanceTo($this, $var1) {
    var $var2, $var3, $var4;
    $var2 = $var1.$xCoord3 - $this.$xCoord3 | 0;
    $var3 = $var1.$yCoord3 - $this.$yCoord3 | 0;
    $var4 = $var1.$zCoord3 - $this.$zCoord3 | 0;
    return nms_MathHelper_sqrt_float($var2 * $var2 + $var3 * $var3 + $var4 * $var4);
}
function nms_PathPoint_isAssigned($this) {
    return $this.$index8 < 0 ? 0 : 1;
}
function nms_HashEntry() {
    var a = this; jl_Object.call(a);
    a.$hashEntry = 0;
    a.$valueEntry = null;
    a.$nextEntry0 = null;
    a.$slotHash = 0;
}
$rt_packages([-1, "com", 0, "jcraft", 1, "jzlib", -1, "java", 3, "util", 4, "zip", 4, "regex", 3, "nio", 7, "charset", 3, "io", 3, "text", 3, "lang", 11, "reflect", -1, "org", 13, "teavm", 14, "classlib", 15, "impl", 16, "unicode", -1, "net", 18, "minecraft", 19, "src"
]);
$rt_metadata([jl_Object, "Object", 11, 0, [], 0, 3, 0, ["$hashCode0", function() { return jl_Object_hashCode(this); }, "$equals", function(var_1) { return jl_Object_equals(this, var_1); }, "$toString", function() { return jl_Object_toString(this); }],
nle_Client, 0, jl_Object, [], 0, 3, 0, 0,
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0,
jl_Class, "Class", 11, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0,
otji_JS, 0, jl_Object, [], 4, 0, 0, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0,
jl_CharSequence, 0, jl_Object, [], 3, 3, 0, 0,
jl_String, "String", 11, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, ["$toString", function() { return jl_String_toString(this); }, "$equals", function(var_1) { return jl_String_equals(this, var_1); }, "$hashCode0", function() { return jl_String_hashCode(this); }, "$compareTo5", function(var_1) { return jl_String_compareTo0(this, var_1); }],
jl_Throwable, 0, jl_Object, [], 0, 3, 0, ["$getMessage", function() { return jl_Throwable_getMessage(this); }],
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0,
jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0,
jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0,
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, ["$ensureCapacity", function(var_1) { jl_AbstractStringBuilder_ensureCapacity(this, var_1); }, "$toString", function() { return jl_AbstractStringBuilder_toString(this); }],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, ["$insert1", function(var_1, var_2, var_3, var_4) { return jl_StringBuilder_insert7(this, var_1, var_2, var_3, var_4); }, "$append3", function(var_1, var_2, var_3) { return jl_StringBuilder_append9(this, var_1, var_2, var_3); }, "$toString", function() { return jl_StringBuilder_toString(this); }, "$ensureCapacity", function(var_1) { jl_StringBuilder_ensureCapacity(this, var_1); }, "$insert0", function(var_1, var_2) { return jl_StringBuilder_insert10(this,
var_1, var_2); }],
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, ["$hashCode0", function() { return jl_Integer_hashCode(this); }, "$equals", function(var_1) { return jl_Integer_equals(this, var_1); }, "$compareTo5", function(var_1) { return jl_Integer_compareTo0(this, var_1); }],
jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0,
jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0,
jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0,
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0,
jl_RuntimeException, "RuntimeException", 11, jl_Exception, [], 0, 3, 0, 0,
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0,
otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget], 3, 3, 0, 0,
otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0,
otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, ["$addEventListener$exported$0", function(var_1, var_2) { return otjb_Window_addEventListener$exported$0(this, var_1, var_2); }, "$removeEventListener$exported$1", function(var_1, var_2) { return otjb_Window_removeEventListener$exported$1(this, var_1, var_2); }, "$get$exported$2", function(var_1) { return otjb_Window_get$exported$2(this, var_1); }, "$removeEventListener$exported$3", function(var_1,
var_2, var_3) { return otjb_Window_removeEventListener$exported$3(this, var_1, var_2, var_3); }, "$dispatchEvent$exported$4", function(var_1) { return otjb_Window_dispatchEvent$exported$4(this, var_1); }, "$getLength$exported$5", function() { return otjb_Window_getLength$exported$5(this); }, "$addEventListener$exported$6", function(var_1, var_2, var_3) { return otjb_Window_addEventListener$exported$6(this, var_1, var_2, var_3); }],
nlea_EaglerAdapterImpl2, 0, jl_Object, [], 0, 3, nlea_EaglerAdapterImpl2_$callClinit, 0,
nle_Client$AbortedLaunchException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0,
ji_Writer, 0, jl_Object, [jl_Appendable, ji_Closeable, ji_Flushable], 1, 3, 0, 0,
ji_StringWriter, 0, ji_Writer, [], 0, 3, 0, ["$close", function() { ji_StringWriter_close(this); }, "$flush", function() { ji_StringWriter_flush(this); }, "$write0", function(var_1, var_2, var_3) { ji_StringWriter_write(this, var_1, var_2, var_3); }],
ji_PrintWriter, 0, ji_Writer, [], 0, 3, 0, 0,
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0,
otjc_JSString, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
jl_System, 0, jl_Object, [], 4, 3, 0, 0,
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0,
nmc_Minecraft, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0,
nms_Session, 0, jl_Object, [], 0, 3, nms_Session_$callClinit, 0,
nPs_LocalStorageManager, 0, jl_Object, [], 0, 3, 0, 0,
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0]);
$rt_metadata([nlea_EaglerAdapterImpl2$2, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$2_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$3, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$3_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$4, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$4_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$5, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$5_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$6, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$6_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$7, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$7_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$8, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$8_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$9, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$9_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$10, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$10_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$11, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$11_handleEvent$exported$0(this, var_1); }],
otjw_AudioContext, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
nle_AssetRepository, 0, jl_Object, [], 0, 3, 0, 0,
ji_IOException, "IOException", 9, jl_Exception, [], 0, 3, 0, 0,
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, ["$insert1", function(var_1, var_2, var_3, var_4) { return jl_StringBuffer_insert1(this, var_1, var_2, var_3, var_4); }, "$append3", function(var_1, var_2, var_3) { return jl_StringBuffer_append2(this, var_1, var_2, var_3); }, "$ensureCapacity", function(var_1) { jl_StringBuffer_ensureCapacity(this, var_1); }, "$insert0", function(var_1, var_2) { return jl_StringBuffer_insert2(this, var_1, var_2); }],
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0,
jl_String$_clinit_$lambda$_81_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0,
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, ["$equals", function(var_1) { return jl_Character_equals(this, var_1); }, "$hashCode0", function() { return jl_Character_hashCode(this); }, "$compareTo5", function(var_1) { return jl_Character_compareTo0(this, var_1); }],
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, ["$write2", function(var_1, var_2, var_3) { ji_OutputStream_write0(this, var_1, var_2, var_3); }, "$close", function() { ji_OutputStream_close(this); }, "$flush", function() { ji_OutputStream_flush(this); }],
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, 0,
jl_ConsoleOutputStreamStdout, 0, ji_OutputStream, [], 0, 0, 0, ["$write3", function(var_1) { jl_ConsoleOutputStreamStdout_write(this, var_1); }],
nms_Timer, 0, jl_Object, [], 0, 3, 0, 0,
nms_IProgressUpdate, 0, jl_Object, [], 3, 3, 0, 0,
nms_LoadingScreenRenderer, 0, jl_Object, [nms_IProgressUpdate], 0, 3, 0, 0,
nms_EntityRenderer, 0, jl_Object, [], 0, 3, 0, 0,
nms_ModelBase, 0, jl_Object, [], 1, 3, 0, 0,
nms_ModelBiped, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelBiped_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setRotationAngles", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelBiped_setRotationAngles(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_TextureFX, 0, jl_Object, [], 0, 3, 0, 0,
nms_TextureWaterFX, 0, nms_TextureFX, [], 0, 3, 0, ["$func_783_a", function() { nms_TextureWaterFX_func_783_a(this); }],
nms_TextureLavaFX, 0, nms_TextureFX, [], 0, 3, 0, ["$func_783_a", function() { nms_TextureLavaFX_func_783_a(this); }],
olo_EaglerAdapterGL30, 0, nlea_EaglerAdapterImpl2, [], 0, 3, olo_EaglerAdapterGL30_$callClinit, 0,
olo_GL11, 0, olo_EaglerAdapterGL30, [], 0, 3, 0, 0,
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0,
nms_ThreadSleepForever, 0, jl_Thread, [], 0, 3, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, ["$read", function(var_1) { return ji_InputStream_read(this, var_1); }],
ji_FilterInputStream, 0, ji_InputStream, [], 0, 3, 0, ["$read", function(var_1) { return ji_FilterInputStream_read(this, var_1); }],
ji_DataInput, 0, jl_Object, [], 3, 3, 0, 0,
ji_DataInputStream, 0, ji_FilterInputStream, [ji_DataInput], 0, 3, 0, 0,
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, ["$read1", function() { return ji_ByteArrayInputStream_read(this); }, "$read0", function(var_1, var_2, var_3) { return ji_ByteArrayInputStream_read0(this, var_1, var_2, var_3); }, "$available", function() { return ji_ByteArrayInputStream_available(this); }, "$close", function() { ji_ByteArrayInputStream_close(this); }],
nPn_NBTBase, 0, jl_Object, [], 1, 3, 0, 0,
nPn_NBTTagCompound, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagCompound_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagCompound_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagCompound_getType(this); }],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0,
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, ["$contains", function(var_1) { return ju_AbstractCollection_contains(this, var_1); }],
ju_List, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, ["$iterator", function() { return ju_AbstractList_iterator(this); }, "$hashCode0", function() { return ju_AbstractList_hashCode(this); }, "$equals", function(var_1) { return ju_AbstractList_equals(this, var_1); }],
ju_AbstractSequentialList, 0, ju_AbstractList, [], 1, 3, 0, 0,
ju_Queue, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
ju_Deque, 0, jl_Object, [ju_Queue], 3, 3, 0, 0,
ju_LinkedList, 0, ju_AbstractSequentialList, [ju_Deque], 0, 3, 0, ["$size0", function() { return ju_LinkedList_size(this); }]]);
$rt_metadata([otjt_ArrayBuffer, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0,
jt_Format, 0, jl_Object, [ji_Serializable, jl_Cloneable], 1, 3, 0, 0,
jt_DateFormat, 0, jt_Format, [], 1, 3, 0, 0,
jt_SimpleDateFormat, 0, jt_DateFormat, [], 0, 3, 0, 0,
ju_Map, 0, jl_Object, [], 3, 3, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0,
otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0,
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0,
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, ["$complete", function(var_1) { otpp_AsyncCallbackWrapper_complete(this, var_1); }, "$error", function(var_1) { otpp_AsyncCallbackWrapper_error(this, var_1); }],
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
otja_ReadyStateChangeHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
nlea_EaglerAdapterImpl2$1, 0, jl_Object, [otja_ReadyStateChangeHandler], 4, 0, 0, ["$stateChanged$exported$0", function() { return nlea_EaglerAdapterImpl2$1_stateChanged$exported$0(this); }],
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, ["$compareTo5", function(var_1) { return jnc_Charset_compareTo0(this, var_1); }],
cjj_InflaterInputStream, 0, ji_FilterInputStream, [], 0, 3, 0, ["$read1", function() { return cjj_InflaterInputStream_read(this); }, "$read0", function(var_1, var_2, var_3) { return cjj_InflaterInputStream_read0(this, var_1, var_2, var_3); }, "$available", function() { return cjj_InflaterInputStream_available(this); }, "$close", function() { cjj_InflaterInputStream_close(this); }],
nle_GeneralDigest, 0, jl_Object, [], 1, 3, 0, 0,
nle_SHA1Digest, 0, nle_GeneralDigest, [], 0, 3, 0, 0,
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0,
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, 0,
ju_Random, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0,
nms_GLAllocation, 0, jl_Object, [], 0, 3, 0, 0,
nms_ItemRenderer, 0, jl_Object, [], 0, 3, 0, 0,
nms_Block, "Block", 20, jl_Object, [], 0, 3, nms_Block_$callClinit, ["$renderAsNormalBlock", function() { return nms_Block_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_Block_getRenderType(this); }, "$getBlockBrightness", function(var_1, var_2, var_3, var_4) { return nms_Block_getBlockBrightness(this, var_1, var_2, var_3, var_4); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_Block_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); },
"$getBlockTexture", function(var_1, var_2, var_3, var_4, var_5) { return nms_Block_getBlockTexture(this, var_1, var_2, var_3, var_4, var_5); }, "$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_Block_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$getBlockTextureFromSide", function(var_1) { return nms_Block_getBlockTextureFromSide(this, var_1); }, "$getSelectedBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_Block_getSelectedBoundingBoxFromPool(this,
var_1, var_2, var_3, var_4); }, "$getCollidingBoundingBoxes", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_Block_getCollidingBoundingBoxes(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_Block_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_Block_isOpaqueCube(this); }, "$canCollideCheck", function(var_1, var_2) { return nms_Block_canCollideCheck(this,
var_1, var_2); }, "$isCollidable", function() { return nms_Block_isCollidable(this); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_randomDisplayTick(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockDestroyedByPlayer", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onBlockDestroyedByPlayer(this, var_1, var_2, var_3, var_4, var_5); }, "$onNeighborBlockChange",
function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$tickRate", function() { return nms_Block_tickRate(this); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_Block_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_Block_onBlockRemoval(this, var_1, var_2, var_3, var_4); }, "$quantityDropped", function(var_1) { return nms_Block_quantityDropped(this, var_1); }, "$idDropped",
function(var_1, var_2) { return nms_Block_idDropped(this, var_1, var_2); }, "$dropBlockAsItem", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_dropBlockAsItem(this, var_1, var_2, var_3, var_4, var_5); }, "$dropBlockAsItemWithChance", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_Block_dropBlockAsItemWithChance(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$func_227_a", function(var_1) { return nms_Block_func_227_a(this, var_1); }, "$collisionRayTrace", function(var_1, var_2, var_3,
var_4, var_5, var_6) { return nms_Block_collisionRayTrace(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$onBlockDestroyedByExplosion", function(var_1, var_2, var_3, var_4) { nms_Block_onBlockDestroyedByExplosion(this, var_1, var_2, var_3, var_4); }, "$func_234_g", function() { return nms_Block_func_234_g(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_Block_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5)
{ return nms_Block_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$onEntityWalking", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onEntityWalking(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockPlaced", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onBlockPlaced(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockClicked", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onBlockClicked(this, var_1, var_2, var_3, var_4, var_5); }, "$velocityToAddToEntity", function(var_1,
var_2, var_3, var_4, var_5, var_6) { nms_Block_velocityToAddToEntity(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setBlockBoundsBasedOnState", function(var_1, var_2, var_3, var_4) { nms_Block_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$colorMultiplier", function(var_1, var_2, var_3, var_4) { return nms_Block_colorMultiplier(this, var_1, var_2, var_3, var_4); }, "$isPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_Block_isPoweringTo(this, var_1, var_2, var_3,
var_4, var_5); }, "$canProvidePower", function() { return nms_Block_canProvidePower(this); }, "$onEntityCollidedWithBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onEntityCollidedWithBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$isIndirectlyPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_Block_isIndirectlyPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$func_237_e", function() { nms_Block_func_237_e(this); }, "$harvestBlock", function(var_1, var_2, var_3,
var_4, var_5) { nms_Block_harvestBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$canBlockStay", function(var_1, var_2, var_3, var_4) { return nms_Block_canBlockStay(this, var_1, var_2, var_3, var_4); }, "$onBlockPlacedBy", function(var_1, var_2, var_3, var_4, var_5) { nms_Block_onBlockPlacedBy(this, var_1, var_2, var_3, var_4, var_5); }],
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, ["$size0", function() { return ju_ArrayList_size(this); }, "$add", function(var_1) { return ju_ArrayList_add(this, var_1); }],
nle_BaseNCodec, 0, jl_Object, [], 1, 3, 0, 0,
nle_Base64, 0, nle_BaseNCodec, [], 0, 3, 0, 0,
nPn_NBTTagEnd, 0, nPn_NBTBase, [], 0, 3, 0, ["$readTagContents", function(var_1) { nPn_NBTTagEnd_readTagContents(this, var_1); }, "$writeTagContents", function(var_1) { nPn_NBTTagEnd_writeTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagEnd_getType(this); }],
ju_Locale, 0, jl_Object, [jl_Cloneable, ji_Serializable], 4, 3, 0, ["$equals", function(var_1) { return ju_Locale_equals(this, var_1); }, "$hashCode0", function() { return ju_Locale_hashCode(this); }],
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, 0,
jl_IllegalArgumentException, "IllegalArgumentException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 8, jl_IllegalArgumentException, [], 0, 3, 0, 0,
jl_NullPointerException, "NullPointerException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
otjb_Performance, 0, jl_Object, [otj_JSObject], 4, 3, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0,
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0,
nms_RenderBlocks, 0, jl_Object, [], 0, 3, 0, 0,
nms_ModelRenderer, 0, jl_Object, [], 0, 3, 0, 0,
nPn_NBTTagByte, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagByte_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagByte_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagByte_getType(this); }],
nPn_NBTTagShort, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagShort_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagShort_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagShort_getType(this); }],
nPn_NBTTagInt, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagInt_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagInt_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagInt_getType(this); }],
nPn_NBTTagLong, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagLong_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagLong_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagLong_getType(this); }],
nPn_NBTTagFloat, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagFloat_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagFloat_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagFloat_getType(this); }],
nPn_NBTTagDouble, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagDouble_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagDouble_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagDouble_getType(this); }],
nPn_NBTTagByteArray, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagByteArray_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagByteArray_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagByteArray_getType(this); }],
nPn_NBTTagString, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagString_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagString_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagString_getType(this); }]]);
$rt_metadata([nPn_NBTTagList, 0, nPn_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nPn_NBTTagList_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nPn_NBTTagList_readTagContents(this, var_1); }, "$getType0", function() { return nPn_NBTTagList_getType(this); }],
jt_DateFormatSymbols, 0, jl_Object, [ji_Serializable, jl_Cloneable], 0, 3, 0, 0,
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, ["$write3", function(var_1) { ji_ByteArrayOutputStream_write(this, var_1); }, "$write2", function(var_1, var_2, var_3) { ji_ByteArrayOutputStream_write0(this, var_1, var_2, var_3); }],
ji_DataOutput, 0, jl_Object, [], 3, 3, 0, 0,
ji_DataOutputStream, 0, ji_FilterOutputStream, [ji_DataOutput], 0, 3, 0, 0,
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 8, jl_IllegalArgumentException, [], 0, 3, 0, 0,
cjj_ZStream, 0, jl_Object, [], 128, 3, 0, 0,
cjj_Inflater, 0, cjj_ZStream, [], 4, 3, 0, 0,
nms_StepSound, 0, jl_Object, [], 0, 3, 0, 0,
nms_StepSoundStone, 0, nms_StepSound, [], 4, 0, 0, 0,
nms_StepSoundSand, 0, nms_StepSound, [], 4, 0, 0, 0,
nms_BlockStone, "BlockStone", 20, nms_Block, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockStone_idDropped(this, var_1, var_2); }],
nms_BlockGrass, "BlockGrass", 20, nms_Block, [], 0, 3, 0, ["$getBlockTexture", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockGrass_getBlockTexture(this, var_1, var_2, var_3, var_4, var_5); }, "$colorMultiplier", function(var_1, var_2, var_3, var_4) { return nms_BlockGrass_colorMultiplier(this, var_1, var_2, var_3, var_4); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockGrass_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) {
return nms_BlockGrass_idDropped(this, var_1, var_2); }],
nms_BlockDirt, "BlockDirt", 20, nms_Block, [], 0, 3, 0, 0,
nms_Material, 0, jl_Object, [], 0, 3, 0, ["$getIsLiquid", function() { return nms_Material_getIsLiquid(this); }, "$func_878_a", function() { return nms_Material_func_878_a(this); }, "$getCanBlockGrass", function() { return nms_Material_getCanBlockGrass(this); }, "$func_880_c", function() { return nms_Material_func_880_c(this); }],
nms_BlockFlower, "BlockFlower", 20, nms_Block, [], 0, 3, 0, ["$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockFlower_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$canThisPlantGrowOnThisBlockID", function(var_1) { return nms_BlockFlower_canThisPlantGrowOnThisBlockID(this, var_1); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFlower_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3,
var_4, var_5) { nms_BlockFlower_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$canBlockStay", function(var_1, var_2, var_3, var_4) { return nms_BlockFlower_canBlockStay(this, var_1, var_2, var_3, var_4); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockFlower_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockFlower_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockFlower_renderAsNormalBlock(this);
}, "$getRenderType", function() { return nms_BlockFlower_getRenderType(this); }],
nms_BlockSapling, "BlockSapling", 20, nms_BlockFlower, [], 0, 3, 0, ["$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSapling_updateTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockFluids, 0, nms_Block, [], 1, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockFluids_getBlockTextureFromSide(this, var_1); }, "$renderAsNormalBlock", function() { return nms_BlockFluids_renderAsNormalBlock(this); }, "$isOpaqueCube", function() { return nms_BlockFluids_isOpaqueCube(this); }, "$canCollideCheck", function(var_1, var_2) { return nms_BlockFluids_canCollideCheck(this, var_1, var_2); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockFluids_shouldSideBeRendered(this,
var_1, var_2, var_3, var_4, var_5); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockFluids_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$getRenderType", function() { return nms_BlockFluids_getRenderType(this); }, "$idDropped", function(var_1, var_2) { return nms_BlockFluids_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockFluids_quantityDropped(this, var_1); }, "$velocityToAddToEntity", function(var_1,
var_2, var_3, var_4, var_5, var_6) { nms_BlockFluids_velocityToAddToEntity(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$tickRate", function() { return nms_BlockFluids_tickRate(this); }, "$getBlockBrightness", function(var_1, var_2, var_3, var_4) { return nms_BlockFluids_getBlockBrightness(this, var_1, var_2, var_3, var_4); }, "$func_234_g", function() { return nms_BlockFluids_func_234_g(this); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFluids_randomDisplayTick(this,
var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockFluids_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFluids_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockFlowing, "BlockFlowing", 20, nms_BlockFluids, [], 0, 3, 0, ["$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFlowing_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockFlowing_onBlockAdded(this, var_1, var_2, var_3, var_4); }],
nms_BlockStationary, "BlockStationary", 20, nms_BlockFluids, [], 0, 3, 0, ["$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStationary_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStationary_updateTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockSand, "BlockSand", 20, nms_Block, [], 0, 3, 0, ["$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockSand_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSand_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSand_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$tickRate", function() { return nms_BlockSand_tickRate(this);
}],
nms_BlockGravel, "BlockGravel", 20, nms_BlockSand, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockGravel_idDropped(this, var_1, var_2); }],
nms_BlockOre, "BlockOre", 20, nms_Block, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockOre_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockOre_quantityDropped(this, var_1); }],
nms_BlockLog, "BlockLog", 20, nms_Block, [], 0, 3, 0, ["$quantityDropped", function(var_1) { return nms_BlockLog_quantityDropped(this, var_1); }, "$idDropped", function(var_1, var_2) { return nms_BlockLog_idDropped(this, var_1, var_2); }, "$getBlockTextureFromSide", function(var_1) { return nms_BlockLog_getBlockTextureFromSide(this, var_1); }],
nms_BlockLeavesBase, 0, nms_Block, [], 0, 3, 0, ["$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockLeavesBase_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockLeaves, "BlockLeaves", 20, nms_BlockLeavesBase, [], 0, 3, 0, ["$colorMultiplier", function(var_1, var_2, var_3, var_4) { return nms_BlockLeaves_colorMultiplier(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLeaves_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLeaves_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$quantityDropped",
function(var_1) { return nms_BlockLeaves_quantityDropped(this, var_1); }, "$idDropped", function(var_1, var_2) { return nms_BlockLeaves_idDropped(this, var_1, var_2); }, "$isOpaqueCube", function() { return nms_BlockLeaves_isOpaqueCube(this); }, "$onEntityWalking", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLeaves_onEntityWalking(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockSponge, "BlockSponge", 20, nms_Block, [], 0, 3, 0, ["$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockSponge_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockSponge_onBlockRemoval(this, var_1, var_2, var_3, var_4); }],
nms_BlockBreakable, 0, nms_Block, [], 0, 3, 0, ["$isOpaqueCube", function() { return nms_BlockBreakable_isOpaqueCube(this); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockBreakable_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockGlass, "BlockGlass", 20, nms_BlockBreakable, [], 0, 3, 0, ["$quantityDropped", function(var_1) { return nms_BlockGlass_quantityDropped(this, var_1); }],
nms_BlockMushroom, "BlockMushroom", 20, nms_BlockFlower, [], 0, 3, 0, ["$canThisPlantGrowOnThisBlockID", function(var_1) { return nms_BlockMushroom_canThisPlantGrowOnThisBlockID(this, var_1); }, "$canBlockStay", function(var_1, var_2, var_3, var_4) { return nms_BlockMushroom_canBlockStay(this, var_1, var_2, var_3, var_4); }],
nms_BlockOreBlock, "BlockOreBlock", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockOreBlock_getBlockTextureFromSide(this, var_1); }],
nms_BlockStep, "BlockStep", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockStep_getBlockTextureFromSide(this, var_1); }, "$isOpaqueCube", function() { return nms_BlockStep_isOpaqueCube(this); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStep_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockStep_onBlockAdded(this, var_1, var_2, var_3, var_4); },
"$idDropped", function(var_1, var_2) { return nms_BlockStep_idDropped(this, var_1, var_2); }, "$renderAsNormalBlock", function() { return nms_BlockStep_renderAsNormalBlock(this); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockStep_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockTNT, "BlockTNT", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockTNT_getBlockTextureFromSide(this, var_1); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockTNT_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$quantityDropped", function(var_1) { return nms_BlockTNT_quantityDropped(this, var_1); }, "$onBlockDestroyedByExplosion", function(var_1, var_2, var_3, var_4) { nms_BlockTNT_onBlockDestroyedByExplosion(this,
var_1, var_2, var_3, var_4); }, "$onBlockDestroyedByPlayer", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockTNT_onBlockDestroyedByPlayer(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockBookshelf, "BlockBookshelf", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockBookshelf_getBlockTextureFromSide(this, var_1); }, "$quantityDropped", function(var_1) { return nms_BlockBookshelf_quantityDropped(this, var_1); }],
nms_BlockObsidian, "BlockObsidian", 20, nms_BlockStone, [], 0, 3, 0, ["$quantityDropped", function(var_1) { return nms_BlockObsidian_quantityDropped(this, var_1); }, "$idDropped", function(var_1, var_2) { return nms_BlockObsidian_idDropped(this, var_1, var_2); }],
nms_BlockTorch, "BlockTorch", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockTorch_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockTorch_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockTorch_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockTorch_getRenderType(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3,
var_4) { return nms_BlockTorch_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockPlaced", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockTorch_onBlockPlaced(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockTorch_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockTorch_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1,
var_2, var_3, var_4, var_5) { nms_BlockTorch_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$collisionRayTrace", function(var_1, var_2, var_3, var_4, var_5, var_6) { return nms_BlockTorch_collisionRayTrace(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockTorch_randomDisplayTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockFire, "BlockFire", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockFire_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockFire_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockFire_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockFire_getRenderType(this); }, "$quantityDropped", function(var_1) { return nms_BlockFire_quantityDropped(this,
var_1); }, "$tickRate", function() { return nms_BlockFire_tickRate(this); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFire_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$isCollidable", function() { return nms_BlockFire_isCollidable(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockFire_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFire_onNeighborBlockChange(this,
var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockFire_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFire_randomDisplayTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockContainer, 0, nms_Block, [], 1, 3, 0, ["$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockContainer_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockContainer_onBlockRemoval(this, var_1, var_2, var_3, var_4); }],
nms_BlockMobSpawner, "BlockMobSpawner", 20, nms_BlockContainer, [], 0, 3, 0, ["$SetBlockEntity", function() { return nms_BlockMobSpawner_SetBlockEntity(this); }, "$idDropped", function(var_1, var_2) { return nms_BlockMobSpawner_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockMobSpawner_quantityDropped(this, var_1); }, "$isOpaqueCube", function() { return nms_BlockMobSpawner_isOpaqueCube(this); }],
nms_BlockStairs, "BlockStairs", 20, nms_Block, [], 0, 3, 0, ["$setBlockBoundsBasedOnState", function(var_1, var_2, var_3, var_4) { nms_BlockStairs_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockStairs_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockStairs_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockStairs_renderAsNormalBlock(this);
}, "$getRenderType", function() { return nms_BlockStairs_getRenderType(this); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockStairs_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }, "$getCollidingBoundingBoxes", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_BlockStairs_getCollidingBoundingBoxes(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStairs_randomDisplayTick(this,
var_1, var_2, var_3, var_4, var_5); }, "$onBlockClicked", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStairs_onBlockClicked(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockDestroyedByPlayer", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStairs_onBlockDestroyedByPlayer(this, var_1, var_2, var_3, var_4, var_5); }, "$getBlockBrightness", function(var_1, var_2, var_3, var_4) { return nms_BlockStairs_getBlockBrightness(this, var_1, var_2, var_3, var_4); }, "$func_227_a", function(var_1)
{ return nms_BlockStairs_func_227_a(this, var_1); }, "$func_234_g", function() { return nms_BlockStairs_func_234_g(this); }, "$idDropped", function(var_1, var_2) { return nms_BlockStairs_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockStairs_quantityDropped(this, var_1); }, "$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockStairs_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$getBlockTextureFromSide", function(var_1) { return nms_BlockStairs_getBlockTextureFromSide(this,
var_1); }, "$getBlockTexture", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockStairs_getBlockTexture(this, var_1, var_2, var_3, var_4, var_5); }, "$tickRate", function() { return nms_BlockStairs_tickRate(this); }, "$getSelectedBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockStairs_getSelectedBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$velocityToAddToEntity", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_BlockStairs_velocityToAddToEntity(this,
var_1, var_2, var_3, var_4, var_5, var_6); }, "$isCollidable", function() { return nms_BlockStairs_isCollidable(this); }, "$canCollideCheck", function(var_1, var_2) { return nms_BlockStairs_canCollideCheck(this, var_1, var_2); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockStairs_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockStairs_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1,
var_2, var_3, var_4) { nms_BlockStairs_onBlockRemoval(this, var_1, var_2, var_3, var_4); }, "$dropBlockAsItemWithChance", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_BlockStairs_dropBlockAsItemWithChance(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$dropBlockAsItem", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStairs_dropBlockAsItem(this, var_1, var_2, var_3, var_4, var_5); }, "$onEntityWalking", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStairs_onEntityWalking(this,
var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockStairs_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockStairs_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockDestroyedByExplosion", function(var_1, var_2, var_3, var_4) { nms_BlockStairs_onBlockDestroyedByExplosion(this, var_1, var_2, var_3, var_4); }, "$onBlockPlacedBy", function(var_1, var_2,
var_3, var_4, var_5) { nms_BlockStairs_onBlockPlacedBy(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockChest, "BlockChest", 20, nms_BlockContainer, [], 0, 3, 0, ["$getBlockTexture", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockChest_getBlockTexture(this, var_1, var_2, var_3, var_4, var_5); }, "$getBlockTextureFromSide", function(var_1) { return nms_BlockChest_getBlockTextureFromSide(this, var_1); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockChest_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4)
{ nms_BlockChest_onBlockRemoval(this, var_1, var_2, var_3, var_4); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockChest_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$SetBlockEntity", function() { return nms_BlockChest_SetBlockEntity(this); }],
nms_BlockRedstoneWire, "BlockRedstoneWire", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockRedstoneWire_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockRedstoneWire_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockRedstoneWire_isOpaqueCube(this); }, "$renderAsNormalBlock", function()
{ return nms_BlockRedstoneWire_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockRedstoneWire_getRenderType(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockRedstoneWire_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockRedstoneWire_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockRedstoneWire_onBlockRemoval(this,
var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneWire_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockRedstoneWire_idDropped(this, var_1, var_2); }, "$isIndirectlyPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockRedstoneWire_isIndirectlyPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$isPoweringTo", function(var_1, var_2, var_3, var_4,
var_5) { return nms_BlockRedstoneWire_isPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$canProvidePower", function() { return nms_BlockRedstoneWire_canProvidePower(this); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneWire_randomDisplayTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockWorkbench, "BlockWorkbench", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockWorkbench_getBlockTextureFromSide(this, var_1); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockWorkbench_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockCrops, "BlockCrops", 20, nms_BlockFlower, [], 0, 3, 0, ["$canThisPlantGrowOnThisBlockID", function(var_1) { return nms_BlockCrops_canThisPlantGrowOnThisBlockID(this, var_1); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockCrops_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockCrops_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$getRenderType", function() { return nms_BlockCrops_getRenderType(this);
}, "$onBlockDestroyedByPlayer", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockCrops_onBlockDestroyedByPlayer(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockCrops_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockCrops_quantityDropped(this, var_1); }],
nms_BlockSoil, "BlockSoil", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockSoil_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockSoil_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockSoil_renderAsNormalBlock(this); }, "$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockSoil_getBlockTextureFromSideAndMetadata(this, var_1,
var_2); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSoil_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$onEntityWalking", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSoil_onEntityWalking(this, var_1, var_2, var_3, var_4, var_5); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSoil_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockSoil_idDropped(this, var_1,
var_2); }],
nms_BlockFurnace, "BlockFurnace", 20, nms_BlockContainer, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockFurnace_idDropped(this, var_1, var_2); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockFurnace_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$getBlockTexture", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockFurnace_getBlockTexture(this, var_1, var_2, var_3, var_4, var_5); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFurnace_randomDisplayTick(this,
var_1, var_2, var_3, var_4, var_5); }, "$getBlockTextureFromSide", function(var_1) { return nms_BlockFurnace_getBlockTextureFromSide(this, var_1); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockFurnace_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$SetBlockEntity", function() { return nms_BlockFurnace_SetBlockEntity(this); }, "$onBlockPlacedBy", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockFurnace_onBlockPlacedBy(this, var_1, var_2, var_3, var_4,
var_5); }],
nms_BlockSign, "BlockSign", 20, nms_BlockContainer, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockSign_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$getSelectedBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockSign_getSelectedBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$setBlockBoundsBasedOnState", function(var_1, var_2, var_3, var_4) { nms_BlockSign_setBlockBoundsBasedOnState(this,
var_1, var_2, var_3, var_4); }, "$getRenderType", function() { return nms_BlockSign_getRenderType(this); }, "$renderAsNormalBlock", function() { return nms_BlockSign_renderAsNormalBlock(this); }, "$isOpaqueCube", function() { return nms_BlockSign_isOpaqueCube(this); }, "$SetBlockEntity", function() { return nms_BlockSign_SetBlockEntity(this); }, "$idDropped", function(var_1, var_2) { return nms_BlockSign_idDropped(this, var_1, var_2); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) {
nms_BlockSign_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }],
nms_TileEntity, "TileEntity", 20, jl_Object, [], 0, 3, 0, ["$readFromNBT", function(var_1) { nms_TileEntity_readFromNBT(this, var_1); }, "$writeToNBT", function(var_1) { nms_TileEntity_writeToNBT(this, var_1); }, "$updateEntity", function() { nms_TileEntity_updateEntity(this); }, "$onInventoryChanged", function() { nms_TileEntity_onInventoryChanged(this); }],
nms_TileEntitySign, 0, nms_TileEntity, [], 0, 3, 0, ["$writeToNBT", function(var_1) { nms_TileEntitySign_writeToNBT(this, var_1); }, "$readFromNBT", function(var_1) { nms_TileEntitySign_readFromNBT(this, var_1); }],
nms_BlockDoor, "BlockDoor", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockDoor_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$isOpaqueCube", function() { return nms_BlockDoor_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockDoor_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockDoor_getRenderType(this); }, "$getSelectedBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) {
return nms_BlockDoor_getSelectedBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockDoor_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$setBlockBoundsBasedOnState", function(var_1, var_2, var_3, var_4) { nms_BlockDoor_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$onBlockClicked", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockDoor_onBlockClicked(this, var_1, var_2,
var_3, var_4, var_5); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockDoor_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockDoor_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockDoor_idDropped(this, var_1, var_2); }, "$collisionRayTrace", function(var_1, var_2, var_3, var_4, var_5, var_6) { return nms_BlockDoor_collisionRayTrace(this,
var_1, var_2, var_3, var_4, var_5, var_6); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockDoor_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }]]);
$rt_metadata([nms_BlockLadder, "BlockLadder", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockLadder_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$getSelectedBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockLadder_getSelectedBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockLadder_isOpaqueCube(this); }, "$renderAsNormalBlock", function()
{ return nms_BlockLadder_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockLadder_getRenderType(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockLadder_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockPlaced", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLadder_onBlockPlaced(this, var_1, var_2, var_3, var_4, var_5); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLadder_onNeighborBlockChange(this,
var_1, var_2, var_3, var_4, var_5); }, "$quantityDropped", function(var_1) { return nms_BlockLadder_quantityDropped(this, var_1); }],
nms_BlockMinecartTrack, "BlockMinecartTrack", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockMinecartTrack_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockMinecartTrack_isOpaqueCube(this); }, "$collisionRayTrace", function(var_1, var_2, var_3, var_4, var_5, var_6) { return nms_BlockMinecartTrack_collisionRayTrace(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setBlockBoundsBasedOnState",
function(var_1, var_2, var_3, var_4) { nms_BlockMinecartTrack_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockMinecartTrack_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$renderAsNormalBlock", function() { return nms_BlockMinecartTrack_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockMinecartTrack_getRenderType(this); }, "$quantityDropped", function(var_1) { return nms_BlockMinecartTrack_quantityDropped(this,
var_1); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockMinecartTrack_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockMinecartTrack_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockMinecartTrack_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockLever, "BlockLever", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockLever_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockLever_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockLever_renderAsNormalBlock(this); }, "$getRenderType", function() { return nms_BlockLever_getRenderType(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3,
var_4) { return nms_BlockLever_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockPlaced", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLever_onBlockPlaced(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockLever_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLever_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$setBlockBoundsBasedOnState",
function(var_1, var_2, var_3, var_4) { nms_BlockLever_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$onBlockClicked", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockLever_onBlockClicked(this, var_1, var_2, var_3, var_4, var_5); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockLever_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockLever_onBlockRemoval(this, var_1, var_2,
var_3, var_4); }, "$isPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockLever_isPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$isIndirectlyPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockLever_isIndirectlyPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$canProvidePower", function() { return nms_BlockLever_canProvidePower(this); }],
nms_BlockPressurePlate, "BlockPressurePlate", 20, nms_Block, [], 0, 3, 0, ["$tickRate", function() { return nms_BlockPressurePlate_tickRate(this); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockPressurePlate_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockPressurePlate_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockPressurePlate_renderAsNormalBlock(this); }, "$canPlaceBlockAt",
function(var_1, var_2, var_3, var_4) { return nms_BlockPressurePlate_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockPressurePlate_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPressurePlate_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPressurePlate_updateTick(this,
var_1, var_2, var_3, var_4, var_5); }, "$onEntityCollidedWithBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPressurePlate_onEntityCollidedWithBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockPressurePlate_onBlockRemoval(this, var_1, var_2, var_3, var_4); }, "$setBlockBoundsBasedOnState", function(var_1, var_2, var_3, var_4) { nms_BlockPressurePlate_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$isPoweringTo",
function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockPressurePlate_isPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$isIndirectlyPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockPressurePlate_isIndirectlyPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$canProvidePower", function() { return nms_BlockPressurePlate_canProvidePower(this); }, "$func_237_e", function() { nms_BlockPressurePlate_func_237_e(this); }],
jl_Enum, "Enum", 11, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, ["$equals", function(var_1) { return jl_Enum_equals(this, var_1); }, "$hashCode0", function() { return jl_Enum_hashCode(this); }, "$compareTo5", function(var_1) { return jl_Enum_compareTo0(this, var_1); }],
nms_EnumMobType, 0, jl_Enum, [], 12, 3, 0, 0,
nms_BlockRedstoneOre, "BlockRedstoneOre", 20, nms_Block, [], 0, 3, 0, ["$tickRate", function() { return nms_BlockRedstoneOre_tickRate(this); }, "$onBlockClicked", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneOre_onBlockClicked(this, var_1, var_2, var_3, var_4, var_5); }, "$onEntityWalking", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneOre_onEntityWalking(this, var_1, var_2, var_3, var_4, var_5); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockRedstoneOre_blockActivated(this,
var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneOre_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockRedstoneOre_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockRedstoneOre_quantityDropped(this, var_1); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneOre_randomDisplayTick(this, var_1, var_2, var_3, var_4,
var_5); }],
nms_BlockRedstoneTorch, "BlockRedstoneTorch", 20, nms_BlockTorch, [], 0, 3, 0, ["$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockRedstoneTorch_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$tickRate", function() { return nms_BlockRedstoneTorch_tickRate(this); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockRedstoneTorch_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockRedstoneTorch_onBlockRemoval(this,
var_1, var_2, var_3, var_4); }, "$isPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockRedstoneTorch_isPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneTorch_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneTorch_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$isIndirectlyPoweringTo", function(var_1,
var_2, var_3, var_4, var_5) { return nms_BlockRedstoneTorch_isIndirectlyPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockRedstoneTorch_idDropped(this, var_1, var_2); }, "$canProvidePower", function() { return nms_BlockRedstoneTorch_canProvidePower(this); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockRedstoneTorch_randomDisplayTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockButton, "BlockButton", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockButton_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$tickRate", function() { return nms_BlockButton_tickRate(this); }, "$isOpaqueCube", function() { return nms_BlockButton_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockButton_renderAsNormalBlock(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3,
var_4) { return nms_BlockButton_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onBlockPlaced", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockButton_onBlockPlaced(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockButton_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockButton_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$setBlockBoundsBasedOnState",
function(var_1, var_2, var_3, var_4) { nms_BlockButton_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$onBlockClicked", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockButton_onBlockClicked(this, var_1, var_2, var_3, var_4, var_5); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockButton_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockButton_onBlockRemoval(this, var_1, var_2,
var_3, var_4); }, "$isPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockButton_isPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$isIndirectlyPoweringTo", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockButton_isIndirectlyPoweringTo(this, var_1, var_2, var_3, var_4, var_5); }, "$canProvidePower", function() { return nms_BlockButton_canProvidePower(this); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockButton_updateTick(this, var_1, var_2,
var_3, var_4, var_5); }, "$func_237_e", function() { nms_BlockButton_func_237_e(this); }],
nms_BlockSnow, "BlockSnow", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockSnow_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockSnow_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockSnow_renderAsNormalBlock(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockSnow_canPlaceBlockAt(this, var_1, var_2, var_3, var_4);
}, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSnow_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$harvestBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSnow_harvestBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$idDropped", function(var_1, var_2) { return nms_BlockSnow_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockSnow_quantityDropped(this, var_1); }, "$updateTick", function(var_1, var_2,
var_3, var_4, var_5) { nms_BlockSnow_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockSnow_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockIce, "BlockIce", 20, nms_BlockBreakable, [], 0, 3, 0, ["$func_234_g", function() { return nms_BlockIce_func_234_g(this); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockIce_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }, "$onBlockRemoval", function(var_1, var_2, var_3, var_4) { nms_BlockIce_onBlockRemoval(this, var_1, var_2, var_3, var_4); }, "$quantityDropped", function(var_1) { return nms_BlockIce_quantityDropped(this, var_1); }, "$updateTick",
function(var_1, var_2, var_3, var_4, var_5) { nms_BlockIce_updateTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockSnowBlock, "BlockSnowBlock", 20, nms_Block, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockSnowBlock_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockSnowBlock_quantityDropped(this, var_1); }, "$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSnowBlock_updateTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockCactus, "BlockCactus", 20, nms_Block, [], 0, 3, 0, ["$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockCactus_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockCactus_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$getSelectedBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockCactus_getSelectedBoundingBoxFromPool(this, var_1, var_2, var_3,
var_4); }, "$getBlockTextureFromSide", function(var_1) { return nms_BlockCactus_getBlockTextureFromSide(this, var_1); }, "$renderAsNormalBlock", function() { return nms_BlockCactus_renderAsNormalBlock(this); }, "$isOpaqueCube", function() { return nms_BlockCactus_isOpaqueCube(this); }, "$getRenderType", function() { return nms_BlockCactus_getRenderType(this); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockCactus_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange",
function(var_1, var_2, var_3, var_4, var_5) { nms_BlockCactus_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$canBlockStay", function(var_1, var_2, var_3, var_4) { return nms_BlockCactus_canBlockStay(this, var_1, var_2, var_3, var_4); }, "$onEntityCollidedWithBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockCactus_onEntityCollidedWithBlock(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockClay, "BlockClay", 20, nms_Block, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockClay_idDropped(this, var_1, var_2); }, "$quantityDropped", function(var_1) { return nms_BlockClay_quantityDropped(this, var_1); }],
nms_BlockReed, "BlockReed", 20, nms_Block, [], 0, 3, 0, ["$updateTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockReed_updateTick(this, var_1, var_2, var_3, var_4, var_5); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockReed_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockReed_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$canBlockStay", function(var_1, var_2,
var_3, var_4) { return nms_BlockReed_canBlockStay(this, var_1, var_2, var_3, var_4); }, "$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockReed_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$idDropped", function(var_1, var_2) { return nms_BlockReed_idDropped(this, var_1, var_2); }, "$isOpaqueCube", function() { return nms_BlockReed_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockReed_renderAsNormalBlock(this); }, "$getRenderType",
function() { return nms_BlockReed_getRenderType(this); }],
nms_BlockJukeBox, "BlockJukeBox", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSide", function(var_1) { return nms_BlockJukeBox_getBlockTextureFromSide(this, var_1); }, "$blockActivated", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockJukeBox_blockActivated(this, var_1, var_2, var_3, var_4, var_5); }, "$dropBlockAsItemWithChance", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_BlockJukeBox_dropBlockAsItemWithChance(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_BlockFence, "BlockFence", 20, nms_Block, [], 0, 3, 0, ["$getCollidingBoundingBoxes", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_BlockFence_getCollidingBoundingBoxes(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockFence_canPlaceBlockAt(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockFence_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockFence_renderAsNormalBlock(this);
}, "$getRenderType", function() { return nms_BlockFence_getRenderType(this); }],
nms_BlockPumpkin, "BlockPumpkin", 20, nms_Block, [], 0, 3, 0, ["$getBlockTextureFromSideAndMetadata", function(var_1, var_2) { return nms_BlockPumpkin_getBlockTextureFromSideAndMetadata(this, var_1, var_2); }, "$getBlockTextureFromSide", function(var_1) { return nms_BlockPumpkin_getBlockTextureFromSide(this, var_1); }, "$onBlockAdded", function(var_1, var_2, var_3, var_4) { nms_BlockPumpkin_onBlockAdded(this, var_1, var_2, var_3, var_4); }, "$canPlaceBlockAt", function(var_1, var_2, var_3, var_4) { return nms_BlockPumpkin_canPlaceBlockAt(this,
var_1, var_2, var_3, var_4); }, "$onBlockPlacedBy", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPumpkin_onBlockPlacedBy(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockBloodStone, "BlockBloodStone", 20, nms_Block, [], 0, 3, 0, 0,
nms_BlockSlowSand, "BlockSlowSand", 20, nms_Block, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockSlowSand_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$onEntityCollidedWithBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockSlowSand_onEntityCollidedWithBlock(this, var_1, var_2, var_3, var_4, var_5); }],
nms_BlockLightStone, "BlockLightStone", 20, nms_Block, [], 0, 3, 0, ["$idDropped", function(var_1, var_2) { return nms_BlockLightStone_idDropped(this, var_1, var_2); }],
nms_BlockPortal, "BlockPortal", 20, nms_BlockBreakable, [], 0, 3, 0, ["$getCollisionBoundingBoxFromPool", function(var_1, var_2, var_3, var_4) { return nms_BlockPortal_getCollisionBoundingBoxFromPool(this, var_1, var_2, var_3, var_4); }, "$setBlockBoundsBasedOnState", function(var_1, var_2, var_3, var_4) { nms_BlockPortal_setBlockBoundsBasedOnState(this, var_1, var_2, var_3, var_4); }, "$isOpaqueCube", function() { return nms_BlockPortal_isOpaqueCube(this); }, "$renderAsNormalBlock", function() { return nms_BlockPortal_renderAsNormalBlock(this);
}, "$onNeighborBlockChange", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPortal_onNeighborBlockChange(this, var_1, var_2, var_3, var_4, var_5); }, "$shouldSideBeRendered", function(var_1, var_2, var_3, var_4, var_5) { return nms_BlockPortal_shouldSideBeRendered(this, var_1, var_2, var_3, var_4, var_5); }, "$quantityDropped", function(var_1) { return nms_BlockPortal_quantityDropped(this, var_1); }, "$func_234_g", function() { return nms_BlockPortal_func_234_g(this); }, "$onEntityCollidedWithBlock",
function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPortal_onEntityCollidedWithBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$randomDisplayTick", function(var_1, var_2, var_3, var_4, var_5) { nms_BlockPortal_randomDisplayTick(this, var_1, var_2, var_3, var_4, var_5); }],
nms_Item, 0, jl_Object, [], 0, 3, nms_Item_$callClinit, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_Item_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$getStrVsBlock0", function(var_1, var_2) { return nms_Item_getStrVsBlock(this, var_1, var_2); }, "$onItemRightClick", function(var_1, var_2, var_3) { return nms_Item_onItemRightClick(this, var_1, var_2, var_3); }, "$hitEntity0", function(var_1, var_2) { nms_Item_hitEntity(this, var_1, var_2); },
"$hitBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_Item_hitBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$getDamageVsEntity", function(var_1) { return nms_Item_getDamageVsEntity(this, var_1); }, "$canHarvestBlock", function(var_1) { return nms_Item_canHarvestBlock(this, var_1); }, "$func_4019_b", function(var_1, var_2) { nms_Item_func_4019_b(this, var_1, var_2); }, "$isFull3D", function() { return nms_Item_isFull3D(this); }, "$shouldRotateAroundWhenRendering", function() { return nms_Item_shouldRotateAroundWhenRendering(this);
}],
nms_ItemBlock, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemBlock_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
otciu_CLDRHelper, 0, jl_Object, [], 4, 3, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 11, jl_Exception, [], 0, 3, 0, 0,
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0,
jn_FloatBufferOverArray, 0, jn_FloatBufferImpl, [], 0, 0, 0, 0,
ju_Calendar, 0, jl_Object, [ji_Serializable, jl_Cloneable, jl_Comparable], 1, 3, 0, 0,
jn_ByteBufferImpl, 0, jn_ByteBuffer, [], 0, 0, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0,
cjj_GZIPException, "GZIPException", 2, ji_IOException, [], 0, 3, 0, 0,
nms_MaterialTransparent, 0, nms_Material, [], 0, 3, 0, ["$func_878_a", function() { return nms_MaterialTransparent_func_878_a(this); }, "$getCanBlockGrass", function() { return nms_MaterialTransparent_getCanBlockGrass(this); }, "$func_880_c", function() { return nms_MaterialTransparent_func_880_c(this); }],
nms_MaterialLiquid, 0, nms_Material, [], 0, 3, 0, ["$getIsLiquid", function() { return nms_MaterialLiquid_getIsLiquid(this); }, "$func_880_c", function() { return nms_MaterialLiquid_func_880_c(this); }, "$func_878_a", function() { return nms_MaterialLiquid_func_878_a(this); }],
nms_MaterialLogic, 0, nms_Material, [], 0, 3, 0, ["$func_878_a", function() { return nms_MaterialLogic_func_878_a(this); }, "$getCanBlockGrass", function() { return nms_MaterialLogic_getCanBlockGrass(this); }, "$func_880_c", function() { return nms_MaterialLogic_func_880_c(this); }],
nms_ItemTool, 0, nms_Item, [], 0, 3, 0, ["$getStrVsBlock0", function(var_1, var_2) { return nms_ItemTool_getStrVsBlock(this, var_1, var_2); }, "$hitEntity0", function(var_1, var_2) { nms_ItemTool_hitEntity(this, var_1, var_2); }, "$hitBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_ItemTool_hitBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$getDamageVsEntity", function(var_1) { return nms_ItemTool_getDamageVsEntity(this, var_1); }, "$isFull3D", function() { return nms_ItemTool_isFull3D(this);
}],
nms_ItemSpade, 0, nms_ItemTool, [], 0, 3, nms_ItemSpade_$callClinit, ["$canHarvestBlock", function(var_1) { return nms_ItemSpade_canHarvestBlock(this, var_1); }],
nms_ItemPickaxe, 0, nms_ItemTool, [], 0, 3, nms_ItemPickaxe_$callClinit, ["$canHarvestBlock", function(var_1) { return nms_ItemPickaxe_canHarvestBlock(this, var_1); }],
nms_ItemAxe, 0, nms_ItemTool, [], 0, 3, nms_ItemAxe_$callClinit, 0,
nms_ItemFlintAndSteel, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemFlintAndSteel_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemFood, 0, nms_Item, [], 0, 3, 0, ["$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemFood_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemBow, 0, nms_Item, [], 0, 3, 0, ["$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemBow_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemSword, 0, nms_Item, [], 0, 3, 0, ["$getStrVsBlock0", function(var_1, var_2) { return nms_ItemSword_getStrVsBlock(this, var_1, var_2); }, "$hitEntity0", function(var_1, var_2) { nms_ItemSword_hitEntity(this, var_1, var_2); }, "$hitBlock", function(var_1, var_2, var_3, var_4, var_5) { nms_ItemSword_hitBlock(this, var_1, var_2, var_3, var_4, var_5); }, "$getDamageVsEntity", function(var_1) { return nms_ItemSword_getDamageVsEntity(this, var_1); }, "$isFull3D", function() { return nms_ItemSword_isFull3D(this);
}],
nms_ItemSoup, 0, nms_ItemFood, [], 0, 3, 0, ["$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemSoup_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemHoe, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemHoe_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$isFull3D", function() { return nms_ItemHoe_isFull3D(this); }],
nms_ItemSeeds, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemSeeds_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemArmor, 0, nms_Item, [], 0, 3, 0, 0]);
$rt_metadata([nms_ItemPainting, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemPainting_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemSign, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemSign_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemDoor, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemDoor_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemBucket, 0, nms_Item, [], 0, 3, 0, ["$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemBucket_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemMinecart, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemMinecart_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemSaddle, 0, nms_Item, [], 0, 3, 0, ["$func_4019_b", function(var_1, var_2) { nms_ItemSaddle_func_4019_b(this, var_1, var_2); }, "$hitEntity0", function(var_1, var_2) { nms_ItemSaddle_hitEntity(this, var_1, var_2); }],
nms_ItemRedstone, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemRedstone_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemSnowball, 0, nms_Item, [], 0, 3, 0, ["$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemSnowball_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemBoat, 0, nms_Item, [], 0, 3, 0, ["$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemBoat_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemReed, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemReed_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_ItemFishingRod, 0, nms_Item, [], 0, 3, 0, ["$isFull3D", function() { return nms_ItemFishingRod_isFull3D(this); }, "$shouldRotateAroundWhenRendering", function() { return nms_ItemFishingRod_shouldRotateAroundWhenRendering(this); }, "$onItemRightClick", function(var_1, var_2, var_3) { return nms_ItemFishingRod_onItemRightClick(this, var_1, var_2, var_3); }],
nms_ItemRecord, 0, nms_Item, [], 0, 3, 0, ["$onItemUse", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return nms_ItemRecord_onItemUse(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
ju_GregorianCalendar, 0, ju_Calendar, [], 0, 3, 0, 0,
cjj_Checksum, 0, jl_Object, [], 3, 0, 0, 0,
cjj_Adler32, 0, jl_Object, [cjj_Checksum], 4, 3, 0, ["$reset0", function(var_1) { cjj_Adler32_reset(this, var_1); }, "$reset", function() { cjj_Adler32_reset0(this); }, "$getValue", function() { return cjj_Adler32_getValue(this); }, "$update", function(var_1, var_2, var_3) { cjj_Adler32_update(this, var_1, var_2, var_3); }],
nle_BaseNCodec$CodecPolicy, 0, jl_Enum, [], 12, 0, 0, 0,
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, 0,
ju_TimeZone, 0, jl_Object, [ji_Serializable, jl_Cloneable], 1, 3, 0, 0,
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0,
jl_ArrayStoreException, "ArrayStoreException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
otcit_DateTimeZoneProvider, 0, jl_Object, [], 4, 3, 0, 0,
ju_IANATimeZone, 0, ju_TimeZone, [], 0, 0, 0, 0,
otcit_DateTimeZone, 0, jl_Object, [], 1, 3, 0, 0,
otcit_StorableDateTimeZone, 0, otcit_DateTimeZone, [], 1, 3, 0, 0,
otcit_FixedDateTimeZone, 0, otcit_StorableDateTimeZone, [], 4, 3, 0, ["$getOffset", function(var_1) { return otcit_FixedDateTimeZone_getOffset(this, var_1); }, "$getStandardOffset", function(var_1) { return otcit_FixedDateTimeZone_getStandardOffset(this, var_1); }, "$previousTransition", function(var_1) { return otcit_FixedDateTimeZone_previousTransition(this, var_1); }],
ju_AbstractQueue, 0, ju_AbstractCollection, [ju_Queue], 1, 3, 0, 0,
ju_PriorityQueue, 0, ju_AbstractQueue, [ji_Serializable], 0, 3, 0, ["$size0", function() { return ju_PriorityQueue_size(this); }],
otcit_DateTimeZoneProvider$1, 0, jl_Object, [ju_Comparator], 4, 0, 0, ["$compare", function(var_1, var_2) { return otcit_DateTimeZoneProvider$1_compare0(this, var_1, var_2); }],
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, ["$equals", function(var_1) { return ju_AbstractSet_equals(this, var_1); }, "$hashCode0", function() { return ju_AbstractSet_hashCode(this); }],
ju_HashSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, ["$add", function(var_1) { return ju_HashSet_add(this, var_1); }, "$contains", function(var_1) { return ju_HashSet_contains(this, var_1); }, "$iterator", function() { return ju_HashSet_iterator(this); }, "$size0", function() { return ju_HashSet_size(this); }],
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, ["$hashCode0", function() { return jl_Long_hashCode(this); }, "$equals", function(var_1) { return jl_Long_equals(this, var_1); }, "$compareTo5", function(var_1) { return jl_Long_compareTo0(this, var_1); }],
otcit_AliasDateTimeZone, 0, otcit_StorableDateTimeZone, [], 0, 3, 0, ["$getOffset", function(var_1) { return otcit_AliasDateTimeZone_getOffset(this, var_1); }, "$getStandardOffset", function(var_1) { return otcit_AliasDateTimeZone_getStandardOffset(this, var_1); }, "$previousTransition", function(var_1) { return otcit_AliasDateTimeZone_previousTransition(this, var_1); }],
jl_Math, 0, jl_Object, [], 4, 3, 0, 0,
otcit_DateTimeZoneProvider$Score, 0, jl_Object, [], 0, 0, 0, 0,
juf_Function, 0, jl_Object, [], 3, 3, 0, 0,
otcit_DateTimeZoneProvider$detectTimezone$lambda$_5_0, 0, jl_Object, [juf_Function], 0, 3, 0, 0,
ju_PriorityQueue$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare", function(var_1, var_2) { return ju_PriorityQueue$1_compare(this, var_1, var_2); }],
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0,
otcit_DateTimeZoneBuilder$PrecalculatedZone, 0, otcit_StorableDateTimeZone, [], 4, 0, 0, ["$getOffset", function(var_1) { return otcit_DateTimeZoneBuilder$PrecalculatedZone_getOffset(this, var_1); }, "$getStandardOffset", function(var_1) { return otcit_DateTimeZoneBuilder$PrecalculatedZone_getStandardOffset(this, var_1); }, "$previousTransition", function(var_1) { return otcit_DateTimeZoneBuilder$PrecalculatedZone_previousTransition(this, var_1); }],
otcit_DateTimeZoneBuilder$DSTZone, 0, otcit_StorableDateTimeZone, [], 4, 0, 0, ["$getOffset", function(var_1) { return otcit_DateTimeZoneBuilder$DSTZone_getOffset(this, var_1); }, "$getStandardOffset", function(var_1) { return otcit_DateTimeZoneBuilder$DSTZone_getStandardOffset(this, var_1); }, "$previousTransition", function(var_1) { return otcit_DateTimeZoneBuilder$DSTZone_previousTransition(this, var_1); }],
otcit_CachedDateTimeZone, 0, otcit_StorableDateTimeZone, [], 4, 3, 0, ["$getOffset", function(var_1) { return otcit_CachedDateTimeZone_getOffset(this, var_1); }, "$getStandardOffset", function(var_1) { return otcit_CachedDateTimeZone_getStandardOffset(this, var_1); }, "$previousTransition", function(var_1) { return otcit_CachedDateTimeZone_previousTransition(this, var_1); }],
otcit_DateTimeZoneBuilder$Recurrence, 0, jl_Object, [], 4, 0, 0, 0,
otcit_DateTimeZoneBuilder$OfYear, 0, jl_Object, [], 4, 0, 0, 0,
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0,
otcit_CachedDateTimeZone$Info, 0, jl_Object, [], 4, 0, 0, 0,
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, ["$equals", function(var_1) { return ju_MapEntry_equals(this, var_1); }, "$hashCode0", function() { return ju_MapEntry_hashCode(this); }]]);
$rt_metadata([ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0,
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 11, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0,
nms_MinecraftError, "MinecraftError", 20, jl_Error, [], 0, 3, 0, 0,
nms_AxisAlignedBB, 0, jl_Object, [], 0, 3, 0, 0,
nms_Vec3D, 0, jl_Object, [], 0, 3, 0, 0,
nms_GameSettings, 0, jl_Object, [], 0, 3, 0, 0,
oli_Keyboard, 0, olo_GL11, [], 0, 3, 0, 0,
nms_WorldRenderer, 0, jl_Object, [], 0, 3, nms_WorldRenderer_$callClinit, 0,
nms_UnexpectedThrowable, 0, jl_Object, [], 0, 3, 0, 0,
nms_MinecraftException, "MinecraftException", 20, jl_RuntimeException, [], 0, 3, 0, 0,
nms_Gui, 0, jl_Object, [], 0, 3, 0, 0,
nms_GuiScreen, 0, nms_Gui, [], 0, 3, 0, ["$keyTyped", function(var_1, var_2) { nms_GuiScreen_keyTyped(this, var_1, var_2); }, "$mouseClicked", function(var_1, var_2, var_3) { nms_GuiScreen_mouseClicked(this, var_1, var_2, var_3); }, "$mouseMovedOrUp", function(var_1, var_2, var_3) { nms_GuiScreen_mouseMovedOrUp(this, var_1, var_2, var_3); }, "$actionPerformed", function(var_1) { nms_GuiScreen_actionPerformed(this, var_1); }, "$initGui", function() { nms_GuiScreen_initGui(this); }, "$updateScreen", function()
{ nms_GuiScreen_updateScreen(this); }, "$onGuiClosed", function() { nms_GuiScreen_onGuiClosed(this); }, "$doesGuiPauseGame", function() { return nms_GuiScreen_doesGuiPauseGame(this); }],
nms_GuiConflictWarning, 0, nms_GuiScreen, [], 0, 3, 0, ["$updateScreen", function() { nms_GuiConflictWarning_updateScreen(this); }, "$initGui", function() { nms_GuiConflictWarning_initGui(this); }, "$actionPerformed", function(var_1) { nms_GuiConflictWarning_actionPerformed(this, var_1); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiConflictWarning_drawScreen(this, var_1, var_2, var_3); }],
ji_EOFException, "EOFException", 9, ji_IOException, [], 0, 3, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0,
jl_Thread$start$lambda$_4_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Thread$start$lambda$_4_0_run(this); }],
nms_PositionTexureVertex, 0, jl_Object, [], 0, 3, 0, 0,
nms_TexturedQuad, 0, jl_Object, [], 0, 3, 0, 0,
cjj_Inflate, 0, jl_Object, [], 4, 0, 0, 0,
jl_IllegalStateException, "IllegalStateException", 11, jl_Exception, [], 0, 3, 0, 0,
ju_NoSuchElementException, "NoSuchElementException", 4, jl_RuntimeException, [], 0, 3, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0,
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, ["$hasNext", function() { return ju_AbstractList$1_hasNext(this); }, "$next0", function() { return ju_AbstractList$1_next(this); }],
olug_GLU, 0, olo_GL11, [], 0, 3, 0, 0,
nms_IBlockAccess, 0, jl_Object, [], 3, 3, 0, 0,
nms_World, 0, jl_Object, [nms_IBlockAccess], 0, 3, 0, ["$func_4075_a", function() { return nms_World_func_4075_a(this); }, "$getBlockId", function(var_1, var_2, var_3) { return nms_World_getBlockId(this, var_1, var_2, var_3); }, "$getBlockMaterial", function(var_1, var_2, var_3) { return nms_World_getBlockMaterial(this, var_1, var_2, var_3); }, "$getBlockMetadata", function(var_1, var_2, var_3) { return nms_World_getBlockMetadata(this, var_1, var_2, var_3); }, "$getLightBrightness", function(var_1, var_2, var_3)
{ return nms_World_getLightBrightness(this, var_1, var_2, var_3); }, "$isBlockOpaqueCube", function(var_1, var_2, var_3) { return nms_World_isBlockOpaqueCube(this, var_1, var_2, var_3); }],
otr_EventQueue$Event, 0, jl_Object, [], 3, 3, 0, 0,
jl_ThreadInterruptHandler, 0, jl_Object, [], 3, 3, 0, 0,
jl_Thread$SleepHandler, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event, jl_ThreadInterruptHandler], 0, 0, 0, ["$run", function() { jl_Thread$SleepHandler_run(this); }],
jl_InterruptedException, 0, jl_Exception, [], 0, 3, 0, 0,
nms_PlayerController, 0, jl_Object, [], 0, 3, 0, 0,
nms_Tessellator, 0, jl_Object, [], 0, 3, nms_Tessellator_$callClinit, 0,
nms_ScaledResolution, 0, jl_Object, [], 0, 3, 0, 0,
jl_ConsoleOutputStreamStderr, 0, ji_OutputStream, [], 0, 0, 0, ["$write3", function(var_1) { jl_ConsoleOutputStreamStderr_write(this, var_1); }],
jt_SimpleDatePatternParser, 0, jl_Object, [], 0, 0, 0, 0,
jt_DateFormatElement, "DateFormatElement", 10, jl_Object, [], 1, 0, 0, 0,
jl_NegativeArraySizeException, "NegativeArraySizeException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, 0,
nPgv_Matrix, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0,
nPgv_Matrix4f, 0, nPgv_Matrix, [ji_Serializable], 0, 3, 0, 0,
jl_Thread$switchContext$lambda$_18_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Thread$switchContext$lambda$_18_0_run(this); }],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0,
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, 0,
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0,
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, 0,
nPg_GLObjectMap, 0, jl_Object, [], 0, 3, 0, 0,
nPgv_ReadableVector, 0, jl_Object, [], 3, 3, 0, 0,
nPgv_Vector, 0, jl_Object, [ji_Serializable, nPgv_ReadableVector], 1, 3, 0, 0,
nPgv_ReadableVector2f, 0, jl_Object, [nPgv_ReadableVector], 3, 3, 0, 0,
nPgv_ReadableVector3f, 0, jl_Object, [nPgv_ReadableVector2f], 3, 3, 0, 0]);
$rt_metadata([nPgv_WritableVector2f, 0, jl_Object, [], 3, 3, 0, 0,
nPgv_WritableVector3f, 0, jl_Object, [nPgv_WritableVector2f], 3, 3, 0, 0,
nPgv_Vector3f, 0, nPgv_Vector, [ji_Serializable, nPgv_ReadableVector3f, nPgv_WritableVector3f], 0, 3, 0, 0,
nPgv_ReadableVector4f, 0, jl_Object, [nPgv_ReadableVector3f], 3, 3, 0, 0,
nPgv_WritableVector4f, 0, jl_Object, [nPgv_WritableVector3f], 3, 3, 0, 0,
nPgv_Vector4f, 0, nPgv_Vector, [ji_Serializable, nPgv_ReadableVector4f, nPgv_WritableVector4f], 0, 3, 0, 0,
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0,
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0,
nms_MouseHelper, 0, jl_Object, [], 0, 3, 0, 0,
oli_Mouse, 0, olo_GL11, [], 0, 3, 0, 0,
nms_RenderManager, 0, jl_Object, [], 0, 3, nms_RenderManager_$callClinit, 0,
nms_RenderEngine, 0, jl_Object, [], 0, 3, 0, 0,
nms_FontRenderer, 0, jl_Object, [], 0, 3, 0, 0,
nms_TextureCompassFX, 0, nms_TextureFX, [], 0, 3, 0, ["$func_783_a", function() { nms_TextureCompassFX_func_783_a(this); }],
nms_IWorldAccess, 0, jl_Object, [], 3, 3, 0, 0,
nms_RenderGlobal, 0, jl_Object, [nms_IWorldAccess], 0, 3, 0, 0,
nms_EffectRenderer, 0, jl_Object, [], 0, 3, 0, 0,
nms_GuiIngame, 0, nms_Gui, [], 0, 3, 0, 0,
nms_GuiMainMenu, "GuiMainMenu", 20, nms_GuiScreen, [], 0, 3, 0, ["$updateScreen", function() { nms_GuiMainMenu_updateScreen(this); }, "$keyTyped", function(var_1, var_2) { nms_GuiMainMenu_keyTyped(this, var_1, var_2); }, "$initGui", function() { nms_GuiMainMenu_initGui(this); }, "$actionPerformed", function(var_1) { nms_GuiMainMenu_actionPerformed(this, var_1); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiMainMenu_drawScreen(this, var_1, var_2, var_3); }],
nms_Entity, "Entity", 20, jl_Object, [], 1, 3, 0, ["$equals", function(var_1) { return nms_Entity_equals(this, var_1); }, "$hashCode0", function() { return nms_Entity_hashCode(this); }, "$setEntityDead0", function() { nms_Entity_setEntityDead(this); }, "$func_391_y", function() { nms_Entity_func_391_y(this); }, "$func_4034_G", function() { nms_Entity_func_4034_G(this); }, "$func_381_o", function() { return nms_Entity_func_381_o(this); }, "$func_372_f_", function() { return nms_Entity_func_372_f_(this); }, "$func_355_a",
function(var_1) { nms_Entity_func_355_a(this, var_1); }, "$fall", function(var_1) { nms_Entity_fall(this, var_1); }, "$handleWaterMovement", function() { return nms_Entity_handleWaterMovement(this); }, "$getEntityBrightness", function(var_1) { return nms_Entity_getEntityBrightness(this, var_1); }, "$onCollideWithPlayer", function(var_1) { nms_Entity_onCollideWithPlayer(this, var_1); }, "$applyEntityCollision", function(var_1) { nms_Entity_applyEntityCollision(this, var_1); }, "$canAttackEntity", function(var_1,
var_2) { return nms_Entity_canAttackEntity(this, var_1, var_2); }, "$canBeCollidedWith", function() { return nms_Entity_canBeCollidedWith(this); }, "$canBePushed", function() { return nms_Entity_canBePushed(this); }, "$addToPlayerScore", function(var_1, var_2) { nms_Entity_addToPlayerScore(this, var_1, var_2); }, "$func_384_a", function(var_1) { return nms_Entity_func_384_a(this, var_1); }, "$func_392_h_", function() { return nms_Entity_func_392_h_(this); }, "$interact", function(var_1) { return nms_Entity_interact(this,
var_1); }, "$func_383_b_", function(var_1) { return nms_Entity_func_383_b_(this, var_1); }, "$func_350_p", function() { nms_Entity_func_350_p(this); }, "$func_366_i_", function() { nms_Entity_func_366_i_(this); }, "$func_388_v", function() { return nms_Entity_func_388_v(this); }, "$func_402_h", function() { return nms_Entity_func_402_h(this); }, "$func_4035_j_", function() { return nms_Entity_func_4035_j_(this); }, "$func_4039_q", function() { nms_Entity_func_4039_q(this); }],
nms_EntityLiving, "EntityLiving", 20, nms_Entity, [], 0, 3, 0, ["$canBeCollidedWith", function() { return nms_EntityLiving_canBeCollidedWith(this); }, "$canBePushed", function() { return nms_EntityLiving_canBePushed(this); }, "$func_373_s", function() { return nms_EntityLiving_func_373_s(this); }, "$func_421_b", function() { return nms_EntityLiving_func_421_b(this); }, "$func_391_y", function() { nms_EntityLiving_func_391_y(this); }, "$func_350_p", function() { nms_EntityLiving_func_350_p(this); }, "$onUpdate",
function() { nms_EntityLiving_onUpdate(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityLiving_canAttackEntity(this, var_1, var_2); }, "$damageEntity", function(var_1) { nms_EntityLiving_damageEntity(this, var_1); }, "$getSoundVolume", function() { return nms_EntityLiving_getSoundVolume(this); }, "$getLivingSound", function() { return nms_EntityLiving_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityLiving_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityLiving_getDeathSound(this);
}, "$onDeath", function(var_1) { nms_EntityLiving_onDeath(this, var_1); }, "$getDropItemId", function() { return nms_EntityLiving_getDropItemId(this); }, "$fall", function(var_1) { nms_EntityLiving_fall(this, var_1); }, "$func_435_b", function(var_1, var_2) { nms_EntityLiving_func_435_b(this, var_1, var_2); }, "$isOnLadder", function() { return nms_EntityLiving_isOnLadder(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityLiving_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1)
{ nms_EntityLiving_readEntityFromNBT(this, var_1); }, "$onLivingUpdate", function() { nms_EntityLiving_onLivingUpdate(this); }, "$func_418_b_", function() { nms_EntityLiving_func_418_b_(this); }, "$getCanSpawnHere", function() { return nms_EntityLiving_getCanSpawnHere(this); }, "$func_4034_G", function() { nms_EntityLiving_func_4034_G(this); }, "$func_6391_i", function() { return nms_EntityLiving_func_6391_i(this); }, "$getHeldItem", function() { return nms_EntityLiving_getHeldItem(this); }],
nms_EntityPlayer, "EntityPlayer", 20, nms_EntityLiving, [], 0, 3, 0, ["$func_350_p", function() { nms_EntityPlayer_func_350_p(this); }, "$onDeath", function(var_1) { nms_EntityPlayer_onDeath(this, var_1); }, "$addToPlayerScore", function(var_1, var_2) { nms_EntityPlayer_addToPlayerScore(this, var_1, var_2); }, "$func_373_s", function() { return nms_EntityPlayer_func_373_s(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityPlayer_canAttackEntity(this, var_1, var_2); }, "$damageEntity", function(var_1)
{ nms_EntityPlayer_damageEntity(this, var_1); }, "$func_388_v", function() { return nms_EntityPlayer_func_388_v(this); }],
nms_EntityPlayerSP, "EntityPlayerSP", 20, nms_EntityPlayer, [], 0, 3, 0, ["$func_418_b_", function() { nms_EntityPlayerSP_func_418_b_(this); }, "$onLivingUpdate", function() { nms_EntityPlayerSP_onLivingUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityPlayerSP_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityPlayerSP_readEntityFromNBT(this, var_1); }, "$func_381_o", function() { return nms_EntityPlayerSP_func_381_o(this); }, "$func_4039_q", function() { nms_EntityPlayerSP_func_4039_q(this);
}],
nms_MathHelper, 0, jl_Object, [], 0, 3, 0, 0,
nms_KeyBinding, 0, jl_Object, [], 0, 3, 0, 0,
nms_IInventory, 0, jl_Object, [], 3, 3, 0, 0,
nms_InventoryPlayer, 0, jl_Object, [nms_IInventory], 0, 3, 0, ["$decrStackSize", function(var_1, var_2) { return nms_InventoryPlayer_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_InventoryPlayer_setInventorySlotContents(this, var_1, var_2); }, "$getStackInSlot", function(var_1) { return nms_InventoryPlayer_getStackInSlot(this, var_1); }, "$getInventoryStackLimit", function() { return nms_InventoryPlayer_getInventoryStackLimit(this); }, "$onInventoryChanged",
function() { nms_InventoryPlayer_onInventoryChanged(this); }],
nms_GuiContainer, 0, nms_GuiScreen, [], 1, 3, 0, ["$drawScreen", function(var_1, var_2, var_3) { nms_GuiContainer_drawScreen(this, var_1, var_2, var_3); }, "$mouseClicked", function(var_1, var_2, var_3) { nms_GuiContainer_mouseClicked(this, var_1, var_2, var_3); }, "$mouseMovedOrUp", function(var_1, var_2, var_3) { nms_GuiContainer_mouseMovedOrUp(this, var_1, var_2, var_3); }, "$keyTyped", function(var_1, var_2) { nms_GuiContainer_keyTyped(this, var_1, var_2); }, "$onGuiClosed", function() { nms_GuiContainer_onGuiClosed(this);
}, "$doesGuiPauseGame", function() { return nms_GuiContainer_doesGuiPauseGame(this); }],
nms_GuiInventory, 0, nms_GuiContainer, [], 0, 3, 0, ["$drawGuiContainerForegroundLayer", function() { nms_GuiInventory_drawGuiContainerForegroundLayer(this); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiInventory_drawScreen(this, var_1, var_2, var_3); }, "$drawGuiContainerBackgroundLayer", function(var_1) { nms_GuiInventory_drawGuiContainerBackgroundLayer(this, var_1); }],
nms_GuiUnused, 0, nms_GuiScreen, [], 0, 3, 0, 0,
nms_GuiGameOver, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiGameOver_initGui(this); }, "$keyTyped", function(var_1, var_2) { nms_GuiGameOver_keyTyped(this, var_1, var_2); }, "$actionPerformed", function(var_1) { nms_GuiGameOver_actionPerformed(this, var_1); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiGameOver_drawScreen(this, var_1, var_2, var_3); }, "$doesGuiPauseGame", function() { return nms_GuiGameOver_doesGuiPauseGame(this); }],
nle_BaseNCodec$Context, 0, jl_Object, [], 0, 0, 0, 0,
ju_HashMap$2, 0, ju_AbstractCollection, [], 0, 0, 0, ["$contains", function(var_1) { return ju_HashMap$2_contains(this, var_1); }, "$iterator", function() { return ju_HashMap$2_iterator(this); }],
cjj_InfBlocks, 0, jl_Object, [], 4, 0, 0, 0,
jt_DateFormatElement$Numeric, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$Numeric_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$Numeric_hashCode(this); }],
jt_DateFormatElement$WeekdayText, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$WeekdayText_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$WeekdayText_hashCode(this); }],
jt_DateFormatElement$EraText, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$EraText_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$EraText_hashCode(this); }],
jt_DateFormatElement$BaseTimezone, 0, jt_DateFormatElement, [], 1, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$BaseTimezone_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$BaseTimezone_hashCode(this); }],
jt_DateFormatElement$Rfc822Timezone, 0, jt_DateFormatElement$BaseTimezone, [], 0, 3, 0, 0,
jt_DateFormatElement$AmPmText, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$AmPmText_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$AmPmText_hashCode(this); }],
jt_DateFormatElement$NumericHour, 0, jt_DateFormatElement$Numeric, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$NumericHour_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$NumericHour_hashCode(this); }],
jt_DateFormatElement$NumericWeekday, 0, jt_DateFormatElement$Numeric, [], 0, 3, 0, 0,
jt_DateFormatElement$GeneralTimezone, 0, jt_DateFormatElement$BaseTimezone, [], 0, 3, 0, 0,
jt_DateFormatElement$ConstantText, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$ConstantText_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$ConstantText_hashCode(this); }],
jt_DateFormatElement$Year, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$Year_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$Year_hashCode(this); }],
jt_DateFormatElement$Iso8601Timezone, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$Iso8601Timezone_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$Iso8601Timezone_hashCode(this); }],
jt_DateFormatElement$MonthText, 0, jt_DateFormatElement, [], 0, 3, 0, ["$equals", function(var_1) { return jt_DateFormatElement$MonthText_equals(this, var_1); }, "$hashCode0", function() { return jt_DateFormatElement$MonthText_hashCode(this); }],
jt_DateFormatElement$NumericMonth, 0, jt_DateFormatElement$Numeric, [], 0, 3, 0, 0,
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0,
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0]);
$rt_metadata([ju_ConcurrentModificationException, "ConcurrentModificationException", 4, jl_RuntimeException, [], 0, 3, 0, 0,
nPg_FixedFunctionShader, 0, jl_Object, [], 0, 3, 0, 0,
olo_EaglerAdapterGL30$DisplayList, 0, jl_Object, [], 0, 0, 0, 0,
nle_EaglerImage, 0, jl_Object, [], 0, 3, 0, 0,
nms_RenderList, 0, jl_Object, [], 0, 3, 0, 0,
ji_Reader, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0,
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0,
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0,
nms_MovingObjectPosition, 0, jl_Object, [], 0, 3, 0, 0,
nms_PlayerControllerTest, 0, nms_PlayerController, [], 0, 3, 0, 0,
nms_ItemStack, 0, jl_Object, [], 4, 3, 0, 0,
nms_CraftingInventoryCB, 0, jl_Object, [], 0, 3, 0, 0,
nms_CraftingInventoryPlayerCB, 0, nms_CraftingInventoryCB, [], 0, 3, 0, ["$onCraftMatrixChanged", function(var_1) { nms_CraftingInventoryPlayerCB_onCraftMatrixChanged(this, var_1); }],
nms_Slot, 0, jl_Object, [], 0, 3, 0, ["$onPickupFromSlot", function() { nms_Slot_onPickupFromSlot(this); }, "$isItemValid", function(var_1) { return nms_Slot_isItemValid(this, var_1); }, "$func_775_c", function() { return nms_Slot_func_775_c(this); }, "$getSlotStackLimit", function() { return nms_Slot_getSlotStackLimit(this); }],
nms_SlotInventory, 0, nms_Slot, [], 0, 3, 0, 0,
nms_SlotCrafting, 0, nms_SlotInventory, [], 0, 3, 0, ["$isItemValid", function(var_1) { return nms_SlotCrafting_isItemValid(this, var_1); }, "$onPickupFromSlot", function() { nms_SlotCrafting_onPickupFromSlot(this); }],
nms_SlotArmor, 0, nms_SlotInventory, [], 0, 0, 0, ["$getSlotStackLimit", function() { return nms_SlotArmor_getSlotStackLimit(this); }, "$isItemValid", function(var_1) { return nms_SlotArmor_isItemValid(this, var_1); }, "$func_775_c", function() { return nms_SlotArmor_func_775_c(this); }],
cjj_InfTree, 0, jl_Object, [], 4, 0, 0, 0,
cjj_InfCodes, 0, jl_Object, [], 4, 0, 0, 0,
nlea_EaglerAdapterImpl2$BufferGL, 0, jl_Object, [], 4, 3, 0, 0,
nlea_EaglerAdapterImpl2$BufferArrayGL, 0, jl_Object, [], 4, 3, 0, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0,
nms_Render, 0, jl_Object, [], 1, 3, 0, 0,
nms_RenderItem, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderItem_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nlea_EaglerAdapterImpl2$TextureGL, 0, jl_Object, [], 4, 3, 0, 0,
nms_InventoryCraftResult, 0, jl_Object, [nms_IInventory], 0, 3, 0, ["$getStackInSlot", function(var_1) { return nms_InventoryCraftResult_getStackInSlot(this, var_1); }, "$decrStackSize", function(var_1, var_2) { return nms_InventoryCraftResult_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_InventoryCraftResult_setInventorySlotContents(this, var_1, var_2); }, "$getInventoryStackLimit", function() { return nms_InventoryCraftResult_getInventoryStackLimit(this); },
"$onInventoryChanged", function() { nms_InventoryCraftResult_onInventoryChanged(this); }],
nms_InventoryCrafting, 0, jl_Object, [nms_IInventory], 0, 3, 0, ["$getStackInSlot", function(var_1) { return nms_InventoryCrafting_getStackInSlot(this, var_1); }, "$decrStackSize", function(var_1, var_2) { return nms_InventoryCrafting_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_InventoryCrafting_setInventorySlotContents(this, var_1, var_2); }, "$getInventoryStackLimit", function() { return nms_InventoryCrafting_getInventoryStackLimit(this); }, "$onInventoryChanged",
function() { nms_InventoryCrafting_onInventoryChanged(this); }],
ji_UTFDataFormatException, "UTFDataFormatException", 9, ji_IOException, [], 0, 3, 0, 0,
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0,
nms_EntityCreature, "EntityCreature", 20, nms_EntityLiving, [], 0, 3, 0, ["$func_418_b_", function() { nms_EntityCreature_func_418_b_(this); }, "$attackEntity", function(var_1, var_2) { nms_EntityCreature_attackEntity(this, var_1, var_2); }, "$findPlayerToAttack", function() { return nms_EntityCreature_findPlayerToAttack(this); }],
nms_IMobs, 0, jl_Object, [], 3, 3, 0, 0,
nms_EntityMobs, "EntityMobs", 20, nms_EntityCreature, [nms_IMobs], 0, 3, 0, ["$onLivingUpdate", function() { nms_EntityMobs_onLivingUpdate(this); }, "$onUpdate", function() { nms_EntityMobs_onUpdate(this); }, "$findPlayerToAttack", function() { return nms_EntityMobs_findPlayerToAttack(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityMobs_canAttackEntity(this, var_1, var_2); }, "$attackEntity", function(var_1, var_2) { nms_EntityMobs_attackEntity(this, var_1, var_2); }, "$func_439_a", function(var_1,
var_2, var_3) { return nms_EntityMobs_func_439_a(this, var_1, var_2, var_3); }, "$writeEntityToNBT", function(var_1) { nms_EntityMobs_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityMobs_readEntityFromNBT(this, var_1); }, "$getCanSpawnHere", function() { return nms_EntityMobs_getCanSpawnHere(this); }],
nms_EntitySpider, "EntitySpider", 20, nms_EntityMobs, [], 0, 3, 0, ["$func_402_h", function() { return nms_EntitySpider_func_402_h(this); }, "$findPlayerToAttack", function() { return nms_EntitySpider_findPlayerToAttack(this); }, "$getLivingSound", function() { return nms_EntitySpider_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntitySpider_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntitySpider_getDeathSound(this); }, "$attackEntity", function(var_1, var_2) { nms_EntitySpider_attackEntity(this,
var_1, var_2); }, "$writeEntityToNBT", function(var_1) { nms_EntitySpider_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntitySpider_readEntityFromNBT(this, var_1); }, "$getDropItemId", function() { return nms_EntitySpider_getDropItemId(this); }],
nms_RenderLiving, 0, nms_Render, [], 0, 3, 0, ["$a2", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderLiving_a(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$func_170_d", function(var_1, var_2) { return nms_RenderLiving_func_170_d(this, var_1, var_2); }, "$func_6331_b", function(var_1, var_2) { nms_RenderLiving_func_6331_b(this, var_1, var_2); }, "$func_166_a", function(var_1, var_2) { return nms_RenderLiving_func_166_a(this, var_1, var_2); }, "$func_172_a", function(var_1) { return nms_RenderLiving_func_172_a(this,
var_1); }, "$func_173_a", function(var_1, var_2, var_3) { return nms_RenderLiving_func_173_a(this, var_1, var_2, var_3); }, "$func_6330_a", function(var_1, var_2) { nms_RenderLiving_func_6330_a(this, var_1, var_2); }, "$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderLiving_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_RenderSpider, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_172_a", function(var_1) { return nms_RenderSpider_func_172_a(this, var_1); }, "$func_166_a", function(var_1, var_2) { return nms_RenderSpider_func_166_a(this, var_1, var_2); }],
nms_EntityAnimals, "EntityAnimals", 20, nms_EntityCreature, [], 1, 3, 0, ["$func_439_a", function(var_1, var_2, var_3) { return nms_EntityAnimals_func_439_a(this, var_1, var_2, var_3); }, "$getCanSpawnHere", function() { return nms_EntityAnimals_getCanSpawnHere(this); }, "$func_421_b", function() { return nms_EntityAnimals_func_421_b(this); }],
nms_EntityPig, "EntityPig", 20, nms_EntityAnimals, [], 0, 3, 0, ["$writeEntityToNBT", function(var_1) { nms_EntityPig_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityPig_readEntityFromNBT(this, var_1); }, "$getLivingSound", function() { return nms_EntityPig_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityPig_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityPig_getDeathSound(this); }, "$interact", function(var_1) { return nms_EntityPig_interact(this,
var_1); }, "$getDropItemId", function() { return nms_EntityPig_getDropItemId(this); }],
nms_RenderPig, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_166_a", function(var_1, var_2) { return nms_RenderPig_func_166_a(this, var_1, var_2); }],
nms_ModelQuadraped, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelQuadraped_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setRotationAngles", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelQuadraped_setRotationAngles(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_ModelPig, 0, nms_ModelQuadraped, [], 0, 3, 0, 0,
nms_EntitySheep, "EntitySheep", 20, nms_EntityAnimals, [], 0, 3, 0, ["$canAttackEntity", function(var_1, var_2) { return nms_EntitySheep_canAttackEntity(this, var_1, var_2); }, "$writeEntityToNBT", function(var_1) { nms_EntitySheep_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntitySheep_readEntityFromNBT(this, var_1); }, "$getLivingSound", function() { return nms_EntitySheep_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntitySheep_getHurtSound(this); },
"$getDeathSound", function() { return nms_EntitySheep_getDeathSound(this); }],
nms_RenderSheep, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_166_a", function(var_1, var_2) { return nms_RenderSheep_func_166_a(this, var_1, var_2); }],
nms_ModelSheep2, 0, nms_ModelQuadraped, [], 0, 3, 0, 0,
nms_ModelSheep1, 0, nms_ModelQuadraped, [], 0, 3, 0, 0,
nms_EntityCow, "EntityCow", 20, nms_EntityAnimals, [], 0, 3, 0, ["$writeEntityToNBT", function(var_1) { nms_EntityCow_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityCow_readEntityFromNBT(this, var_1); }, "$getLivingSound", function() { return nms_EntityCow_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityCow_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityCow_getDeathSound(this); }, "$getSoundVolume", function() { return nms_EntityCow_getSoundVolume(this);
}, "$getDropItemId", function() { return nms_EntityCow_getDropItemId(this); }, "$interact", function(var_1) { return nms_EntityCow_interact(this, var_1); }],
nms_RenderCow, 0, nms_RenderLiving, [], 0, 3, 0, ["$a2", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderCow_a0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderCow_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_ModelCow, 0, nms_ModelQuadraped, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelCow_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setRotationAngles", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelCow_setRotationAngles(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityChicken, "EntityChicken", 20, nms_EntityAnimals, [], 0, 3, 0, ["$onLivingUpdate", function() { nms_EntityChicken_onLivingUpdate(this); }, "$fall", function(var_1) { nms_EntityChicken_fall(this, var_1); }, "$writeEntityToNBT", function(var_1) { nms_EntityChicken_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityChicken_readEntityFromNBT(this, var_1); }, "$getLivingSound", function() { return nms_EntityChicken_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityChicken_getHurtSound(this);
}, "$getDeathSound", function() { return nms_EntityChicken_getDeathSound(this); }, "$getDropItemId", function() { return nms_EntityChicken_getDropItemId(this); }],
nms_RenderChicken, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_170_d", function(var_1, var_2) { return nms_RenderChicken_func_170_d(this, var_1, var_2); }, "$a2", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderChicken_a1(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderChicken_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }]]);
$rt_metadata([nms_ModelChicken, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelChicken_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityCreeper, "EntityCreeper", 20, nms_EntityMobs, [], 0, 3, 0, ["$writeEntityToNBT", function(var_1) { nms_EntityCreeper_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityCreeper_readEntityFromNBT(this, var_1); }, "$onUpdate", function() { nms_EntityCreeper_onUpdate(this); }, "$func_418_b_", function() { nms_EntityCreeper_func_418_b_(this); }, "$getHurtSound", function() { return nms_EntityCreeper_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityCreeper_getDeathSound(this);
}, "$onDeath", function(var_1) { nms_EntityCreeper_onDeath(this, var_1); }, "$attackEntity", function(var_1, var_2) { nms_EntityCreeper_attackEntity(this, var_1, var_2); }, "$getDropItemId", function() { return nms_EntityCreeper_getDropItemId(this); }],
nms_RenderCreeper, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_6330_a", function(var_1, var_2) { nms_RenderCreeper_func_6330_a(this, var_1, var_2); }, "$func_173_a", function(var_1, var_2, var_3) { return nms_RenderCreeper_func_173_a(this, var_1, var_2, var_3); }],
nms_EntitySkeleton, "EntitySkeleton", 20, nms_EntityMobs, [], 0, 3, nms_EntitySkeleton_$callClinit, ["$getLivingSound", function() { return nms_EntitySkeleton_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntitySkeleton_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntitySkeleton_getDeathSound(this); }, "$onLivingUpdate", function() { nms_EntitySkeleton_onLivingUpdate(this); }, "$attackEntity", function(var_1, var_2) { nms_EntitySkeleton_attackEntity(this, var_1, var_2);
}, "$writeEntityToNBT", function(var_1) { nms_EntitySkeleton_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntitySkeleton_readEntityFromNBT(this, var_1); }, "$getDropItemId", function() { return nms_EntitySkeleton_getDropItemId(this); }, "$getHeldItem", function() { return nms_EntitySkeleton_getHeldItem(this); }],
nms_RenderBiped, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_6331_b", function(var_1, var_2) { nms_RenderBiped_func_6331_b(this, var_1, var_2); }],
nms_ModelZombie, 0, nms_ModelBiped, [], 0, 3, 0, ["$setRotationAngles", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelZombie_setRotationAngles(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_ModelSkeleton, 0, nms_ModelZombie, [], 0, 3, 0, 0,
nms_EntityZombie, "EntityZombie", 20, nms_EntityMobs, [], 0, 3, 0, ["$onLivingUpdate", function() { nms_EntityZombie_onLivingUpdate(this); }, "$getLivingSound", function() { return nms_EntityZombie_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityZombie_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityZombie_getDeathSound(this); }, "$getDropItemId", function() { return nms_EntityZombie_getDropItemId(this); }],
nms_EntitySlime, "EntitySlime", 20, nms_EntityLiving, [nms_IMobs], 0, 3, 0, ["$writeEntityToNBT", function(var_1) { nms_EntitySlime_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntitySlime_readEntityFromNBT(this, var_1); }, "$onUpdate", function() { nms_EntitySlime_onUpdate(this); }, "$func_418_b_", function() { nms_EntitySlime_func_418_b_(this); }, "$setEntityDead0", function() { nms_EntitySlime_setEntityDead(this); }, "$onCollideWithPlayer", function(var_1) { nms_EntitySlime_onCollideWithPlayer(this,
var_1); }, "$getHurtSound", function() { return nms_EntitySlime_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntitySlime_getDeathSound(this); }, "$getDropItemId", function() { return nms_EntitySlime_getDropItemId(this); }, "$getCanSpawnHere", function() { return nms_EntitySlime_getCanSpawnHere(this); }, "$getSoundVolume", function() { return nms_EntitySlime_getSoundVolume(this); }],
nms_RenderSlime, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_6330_a", function(var_1, var_2) { nms_RenderSlime_func_6330_a(this, var_1, var_2); }, "$func_166_a", function(var_1, var_2) { return nms_RenderSlime_func_166_a(this, var_1, var_2); }],
nms_ModelSlime, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelSlime_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_RenderPlayer, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_6330_a", function(var_1, var_2) { nms_RenderPlayer_func_6330_a(this, var_1, var_2); }, "$func_166_a", function(var_1, var_2) { return nms_RenderPlayer_func_166_a(this, var_1, var_2); }, "$func_6331_b", function(var_1, var_2) { nms_RenderPlayer_func_6331_b(this, var_1, var_2); }, "$a2", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderPlayer_a2(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$doRender", function(var_1, var_2, var_3,
var_4, var_5, var_6) { nms_RenderPlayer_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityZombieSimple, "EntityZombieSimple", 20, nms_EntityMobs, [], 0, 3, 0, ["$func_439_a", function(var_1, var_2, var_3) { return nms_EntityZombieSimple_func_439_a(this, var_1, var_2, var_3); }],
nms_RenderZombieSimple, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_6330_a", function(var_1, var_2) { nms_RenderZombieSimple_func_6330_a(this, var_1, var_2); }],
nms_EntityFlying, "EntityFlying", 20, nms_EntityLiving, [], 0, 3, 0, ["$fall", function(var_1) { nms_EntityFlying_fall(this, var_1); }, "$func_435_b", function(var_1, var_2) { nms_EntityFlying_func_435_b(this, var_1, var_2); }, "$isOnLadder", function() { return nms_EntityFlying_isOnLadder(this); }],
nms_EntityGhast, "EntityGhast", 20, nms_EntityFlying, [nms_IMobs], 0, 3, 0, ["$func_418_b_", function() { nms_EntityGhast_func_418_b_(this); }, "$getLivingSound", function() { return nms_EntityGhast_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityGhast_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityGhast_getDeathSound(this); }, "$getDropItemId", function() { return nms_EntityGhast_getDropItemId(this); }, "$getSoundVolume", function() { return nms_EntityGhast_getSoundVolume(this);
}, "$getCanSpawnHere", function() { return nms_EntityGhast_getCanSpawnHere(this); }, "$func_6391_i", function() { return nms_EntityGhast_func_6391_i(this); }],
nms_RenderGhast, 0, nms_RenderLiving, [], 0, 3, 0, ["$func_6330_a", function(var_1, var_2) { nms_RenderGhast_func_6330_a(this, var_1, var_2); }],
nms_RenderEntity, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderEntity_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityPainting, "EntityPainting", 20, nms_Entity, [], 0, 3, 0, ["$onUpdate", function() { nms_EntityPainting_onUpdate(this); }, "$canBeCollidedWith", function() { return nms_EntityPainting_canBeCollidedWith(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityPainting_canAttackEntity(this, var_1, var_2); }, "$writeEntityToNBT", function(var_1) { nms_EntityPainting_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityPainting_readEntityFromNBT(this, var_1);
}],
nms_RenderPainting, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderPainting_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityArrow, "EntityArrow", 20, nms_Entity, [], 0, 3, 0, ["$onUpdate", function() { nms_EntityArrow_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityArrow_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityArrow_readEntityFromNBT(this, var_1); }, "$onCollideWithPlayer", function(var_1) { nms_EntityArrow_onCollideWithPlayer(this, var_1); }, "$func_392_h_", function() { return nms_EntityArrow_func_392_h_(this); }],
nms_RenderArrow, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderArrow_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntitySnowball, "EntitySnowball", 20, nms_Entity, [], 0, 3, 0, ["$func_384_a", function(var_1) { return nms_EntitySnowball_func_384_a(this, var_1); }, "$onUpdate", function() { nms_EntitySnowball_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntitySnowball_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntitySnowball_readEntityFromNBT(this, var_1); }, "$onCollideWithPlayer", function(var_1) { nms_EntitySnowball_onCollideWithPlayer(this, var_1); }, "$func_392_h_",
function() { return nms_EntitySnowball_func_392_h_(this); }],
nms_RenderSnowball, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderSnowball_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityFireball, "EntityFireball", 20, nms_Entity, [], 0, 3, 0, ["$func_384_a", function(var_1) { return nms_EntityFireball_func_384_a(this, var_1); }, "$onUpdate", function() { nms_EntityFireball_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityFireball_writeEntityToNBT(this, var_1); }, "$canBeCollidedWith", function() { return nms_EntityFireball_canBeCollidedWith(this); }, "$func_4035_j_", function() { return nms_EntityFireball_func_4035_j_(this); }, "$canAttackEntity", function(var_1,
var_2) { return nms_EntityFireball_canAttackEntity(this, var_1, var_2); }, "$func_392_h_", function() { return nms_EntityFireball_func_392_h_(this); }],
nms_RenderFireball, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderFireball_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityItem, "EntityItem", 20, nms_Entity, [], 0, 3, 0, ["$onUpdate", function() { nms_EntityItem_onUpdate(this); }, "$handleWaterMovement", function() { return nms_EntityItem_handleWaterMovement(this); }, "$func_355_a", function(var_1) { nms_EntityItem_func_355_a(this, var_1); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityItem_canAttackEntity(this, var_1, var_2); }, "$writeEntityToNBT", function(var_1) { nms_EntityItem_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1)
{ nms_EntityItem_readEntityFromNBT(this, var_1); }, "$onCollideWithPlayer", function(var_1) { nms_EntityItem_onCollideWithPlayer(this, var_1); }],
nms_EntityTNTPrimed, "EntityTNTPrimed", 20, nms_Entity, [], 0, 3, 0, ["$canBeCollidedWith", function() { return nms_EntityTNTPrimed_canBeCollidedWith(this); }, "$onUpdate", function() { nms_EntityTNTPrimed_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityTNTPrimed_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityTNTPrimed_readEntityFromNBT(this, var_1); }, "$func_392_h_", function() { return nms_EntityTNTPrimed_func_392_h_(this); }],
nms_RenderTNTPrimed, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderTNTPrimed_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityFallingSand, "EntityFallingSand", 20, nms_Entity, [], 0, 3, 0, ["$canBeCollidedWith", function() { return nms_EntityFallingSand_canBeCollidedWith(this); }, "$onUpdate", function() { nms_EntityFallingSand_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityFallingSand_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityFallingSand_readEntityFromNBT(this, var_1); }, "$func_392_h_", function() { return nms_EntityFallingSand_func_392_h_(this); }],
nms_RenderFallingSand, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderFallingSand_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityMinecart, "EntityMinecart", 20, nms_Entity, [nms_IInventory], 0, 3, 0, ["$func_383_b_", function(var_1) { return nms_EntityMinecart_func_383_b_(this, var_1); }, "$func_372_f_", function() { return nms_EntityMinecart_func_372_f_(this); }, "$canBePushed", function() { return nms_EntityMinecart_canBePushed(this); }, "$func_402_h", function() { return nms_EntityMinecart_func_402_h(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityMinecart_canAttackEntity(this, var_1, var_2); }, "$canBeCollidedWith",
function() { return nms_EntityMinecart_canBeCollidedWith(this); }, "$onUpdate", function() { nms_EntityMinecart_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityMinecart_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityMinecart_readEntityFromNBT(this, var_1); }, "$func_392_h_", function() { return nms_EntityMinecart_func_392_h_(this); }, "$applyEntityCollision", function(var_1) { nms_EntityMinecart_applyEntityCollision(this, var_1); }, "$getSizeInventory",
function() { return nms_EntityMinecart_getSizeInventory(this); }, "$getStackInSlot", function(var_1) { return nms_EntityMinecart_getStackInSlot(this, var_1); }, "$decrStackSize", function(var_1, var_2) { return nms_EntityMinecart_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_EntityMinecart_setInventorySlotContents(this, var_1, var_2); }, "$getInvName", function() { return nms_EntityMinecart_getInvName(this); }, "$getInventoryStackLimit", function() { return nms_EntityMinecart_getInventoryStackLimit(this);
}, "$onInventoryChanged", function() { nms_EntityMinecart_onInventoryChanged(this); }, "$interact", function(var_1) { return nms_EntityMinecart_interact(this, var_1); }],
nms_RenderMinecart, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderMinecart_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityBoat, "EntityBoat", 20, nms_Entity, [], 0, 3, 0, ["$func_383_b_", function(var_1) { return nms_EntityBoat_func_383_b_(this, var_1); }, "$func_372_f_", function() { return nms_EntityBoat_func_372_f_(this); }, "$canBePushed", function() { return nms_EntityBoat_canBePushed(this); }, "$func_402_h", function() { return nms_EntityBoat_func_402_h(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityBoat_canAttackEntity(this, var_1, var_2); }, "$canBeCollidedWith", function() { return nms_EntityBoat_canBeCollidedWith(this);
}, "$onUpdate", function() { nms_EntityBoat_onUpdate(this); }, "$func_366_i_", function() { nms_EntityBoat_func_366_i_(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityBoat_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityBoat_readEntityFromNBT(this, var_1); }, "$func_392_h_", function() { return nms_EntityBoat_func_392_h_(this); }, "$interact", function(var_1) { return nms_EntityBoat_interact(this, var_1); }],
nms_RenderBoat, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderBoat_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_EntityFish, "EntityFish", 20, nms_Entity, [], 0, 3, 0, ["$func_384_a", function(var_1) { return nms_EntityFish_func_384_a(this, var_1); }, "$onUpdate", function() { nms_EntityFish_onUpdate(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityFish_writeEntityToNBT(this, var_1); }, "$func_392_h_", function() { return nms_EntityFish_func_392_h_(this); }],
nms_RenderFish, 0, nms_Render, [], 0, 3, 0, ["$doRender", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_RenderFish_doRender(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nlea_EaglerAdapterImpl2$12, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$12_handleEvent$exported$0(this, var_1); }],
nlea_EaglerAdapterImpl2$13, 0, jl_Object, [otjde_EventListener], 4, 0, 0, ["$handleEvent$exported$0", function(var_1) { return nlea_EaglerAdapterImpl2$13_handleEvent$exported$0(this, var_1); }],
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0,
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, ["$run", function() { jl_Object$monitorExit$lambda$_8_0_run(this); }],
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0,
jn_IntBufferOverArray, 0, jn_IntBufferImpl, [], 0, 0, 0, ["$getElement0", function(var_1) { return jn_IntBufferOverArray_getElement(this, var_1); }, "$putElement0", function(var_1, var_2) { jn_IntBufferOverArray_putElement(this, var_1, var_2); }, "$readOnly3", function() { return jn_IntBufferOverArray_readOnly(this); }],
nms_ModelSpider, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelSpider_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_ModelCreeper, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelCreeper_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_ModelGhast, 0, nms_ModelBase, [], 0, 3, 0, ["$render0", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_ModelGhast_render(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_ModelMinecart, 0, nms_ModelBase, [], 0, 3, 0, 0,
nms_ModelBoat, 0, nms_ModelBase, [], 0, 3, 0, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0]);
$rt_metadata([nlea_EaglerAdapterImpl2$ShaderGL, 0, jl_Object, [], 4, 3, 0, 0,
nlea_EaglerAdapterImpl2$ProgramGL, 0, jl_Object, [], 4, 3, 0, 0,
nlea_EaglerAdapterImpl2$UniformGL, 0, jl_Object, [], 4, 3, 0, 0,
jl_ArithmeticException, 0, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0,
jl_AssertionError, "AssertionError", 11, jl_Error, [], 0, 3, 0, 0,
nms_RenderHelper, 0, jl_Object, [], 0, 3, 0, 0,
nms_GuiChat, 0, nms_GuiScreen, [], 0, 3, 0, 0,
nms_ChatLine, 0, jl_Object, [], 0, 3, 0, 0,
ju_HashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, ["$hasNext", function() { return ju_HashMap$AbstractMapIterator_hasNext(this); }],
ju_HashMap$ValueIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next0", function() { return ju_HashMap$ValueIterator_next(this); }],
jl_UnsupportedOperationException, "UnsupportedOperationException", 11, jl_RuntimeException, [], 0, 3, 0, 0,
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 7, jl_UnsupportedOperationException, [], 0, 3, 0, 0,
jn_BufferOverflowException, "BufferOverflowException", 7, jl_RuntimeException, [], 0, 3, 0, 0,
jn_BufferUnderflowException, "BufferUnderflowException", 7, jl_RuntimeException, [], 0, 3, 0, 0,
nms_GuiIngameMenu, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiIngameMenu_initGui(this); }, "$actionPerformed", function(var_1) { nms_GuiIngameMenu_actionPerformed(this, var_1); }, "$updateScreen", function() { nms_GuiIngameMenu_updateScreen(this); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiIngameMenu_drawScreen(this, var_1, var_2, var_3); }],
nms_ClippingHelper, 0, jl_Object, [], 0, 3, 0, 0,
nms_ClippingHelperImplementation, 0, nms_ClippingHelper, [], 0, 3, 0, 0,
nms_ICamera, 0, jl_Object, [], 3, 3, 0, 0,
nms_Frustrum, 0, jl_Object, [nms_ICamera], 0, 3, 0, 0,
nms_EntityFX, "EntityFX", 20, nms_Entity, [], 0, 3, 0, ["$onUpdate", function() { nms_EntityFX_onUpdate(this); }, "$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$func_404_c", function() { return nms_EntityFX_func_404_c(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityFX_writeEntityToNBT(this, var_1); }],
nms_EntityDiggingFX, "EntityDiggingFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_404_c", function() { return nms_EntityDiggingFX_func_404_c(this); }, "$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityDiggingFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_CraftingManager, 0, jl_Object, [], 0, 3, nms_CraftingManager_$callClinit, 0,
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0,
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0,
nms_LogoEffectRandomizer, 0, jl_Object, [], 0, 0, 0, 0,
nms_WorldProvider, 0, jl_Object, [], 0, 3, 0, ["$generateLightBrightnessTable", function() { nms_WorldProvider_generateLightBrightnessTable(this); }, "$registerWorldChunkManager", function() { nms_WorldProvider_registerWorldChunkManager(this); }, "$getChunkProvider", function() { return nms_WorldProvider_getChunkProvider(this); }, "$getChunkLoader", function(var_1) { return nms_WorldProvider_getChunkLoader(this, var_1); }, "$canCoordinateBeSpawn", function(var_1, var_2) { return nms_WorldProvider_canCoordinateBeSpawn(this,
var_1, var_2); }, "$calculateCelestialAngle", function(var_1, var_2) { return nms_WorldProvider_calculateCelestialAngle(this, var_1, var_2); }, "$func_4096_a", function(var_1, var_2) { return nms_WorldProvider_func_4096_a(this, var_1, var_2); }, "$func_6477_d", function() { return nms_WorldProvider_func_6477_d(this); }],
nms_EntityRainFX, "EntityRainFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityRainFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$onUpdate", function() { nms_EntityRainFX_onUpdate(this); }],
jl_ClassLoader, 0, jl_Object, [], 1, 3, 0, 0,
nms_GuiButton, 0, nms_Gui, [], 0, 3, 0, ["$getHoverState", function(var_1) { return nms_GuiButton_getHoverState(this, var_1); }, "$mouseDragged", function(var_1, var_2, var_3) { nms_GuiButton_mouseDragged(this, var_1, var_2, var_3); }, "$mouseReleased", function(var_1, var_2) { nms_GuiButton_mouseReleased(this, var_1, var_2); }, "$mousePressed", function(var_1, var_2, var_3) { return nms_GuiButton_mousePressed(this, var_1, var_2, var_3); }],
ji_UnsupportedEncodingException, "UnsupportedEncodingException", 9, ji_IOException, [], 0, 3, 0, 0,
jl_NumberFormatException, "NumberFormatException", 11, jl_IllegalArgumentException, [], 0, 3, 0, 0,
jl_SystemClassLoader, 0, jl_ClassLoader, [], 0, 0, 0, 0,
nms_RecipesTools, 0, jl_Object, [], 0, 3, 0, 0,
nms_RecipesWeapons, 0, jl_Object, [], 0, 3, 0, 0,
nms_RecipesIngots, 0, jl_Object, [], 0, 3, 0, 0,
nms_RecipesFood, 0, jl_Object, [], 0, 3, 0, 0,
nms_RecipesCrafting, 0, jl_Object, [], 0, 3, 0, 0,
nms_RecipesArmor, 0, jl_Object, [], 0, 3, 0, 0,
nms_RecipeSorter, 0, jl_Object, [ju_Comparator], 0, 0, 0, ["$compare", function(var_1, var_2) { return nms_RecipeSorter_compare(this, var_1, var_2); }],
ju_Collections, 0, jl_Object, [], 0, 3, 0, 0,
ju_Collections$_clinit_$lambda$_61_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, ["$compare", function(var_1, var_2) { return ju_Collections$_clinit_$lambda$_61_0_compare(this, var_1, var_2); }],
ju_Collections$_clinit_$lambda$_61_1, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0,
ju_Collections$5, 0, ju_AbstractSet, [], 4, 0, 0, 0,
ju_Collections$6, 0, ju_AbstractMap, [], 4, 0, 0, 0,
ju_Collections$3, 0, ju_AbstractList, [], 4, 0, 0, 0,
jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [], 1, 0, 0, ["$readOnly3", function() { return jn_IntBufferOverByteBuffer_readOnly(this); }],
jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, ["$getElement0", function(var_1) { return jn_IntBufferOverByteBufferLittleEndian_getElement(this, var_1); }, "$putElement0", function(var_1, var_2) { jn_IntBufferOverByteBufferLittleEndian_putElement(this, var_1, var_2); }],
jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, ["$getElement0", function(var_1) { return jn_IntBufferOverByteBufferBigEndian_getElement(this, var_1); }, "$putElement0", function(var_1, var_2) { jn_IntBufferOverByteBufferBigEndian_putElement(this, var_1, var_2); }],
nms_FontAllowedCharacters, 0, jl_Object, [], 0, 3, 0, 0]);
$rt_metadata([ju_Date, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0,
nms_RenderSorter, 0, jl_Object, [ju_Comparator], 0, 3, 0, ["$compare", function(var_1, var_2) { return nms_RenderSorter_compare(this, var_1, var_2); }],
nms_EntitySorter, 0, jl_Object, [ju_Comparator], 0, 3, 0, ["$compare", function(var_1, var_2) { return nms_EntitySorter_compare(this, var_1, var_2); }],
nms_TileEntityRenderer, 0, jl_Object, [], 0, 3, 0, 0,
nms_MovementInput, 0, jl_Object, [], 0, 3, 0, 0,
nms_MovementInputFromOptions, 0, nms_MovementInput, [], 0, 3, 0, 0,
cjj_Inflate$Return, "Inflate$Return", 2, jl_Exception, [], 0, 0, 0, 0,
cjj_GZIPHeader, 0, jl_Object, [jl_Cloneable], 0, 3, 0, 0,
cjj_CRC32, 0, jl_Object, [cjj_Checksum], 4, 3, 0, ["$update", function(var_1, var_2, var_3) { cjj_CRC32_update(this, var_1, var_2, var_3); }, "$reset", function() { cjj_CRC32_reset(this); }, "$reset0", function(var_1) { cjj_CRC32_reset0(this, var_1); }, "$getValue", function() { return cjj_CRC32_getValue(this); }],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0,
ju_ListIterator, 0, jl_Object, [ju_Iterator], 3, 3, 0, 0,
ju_LinkedList$SequentialListIterator, 0, jl_Object, [ju_ListIterator], 0, 0, 0, 0,
ju_LinkedList$Entry, 0, jl_Object, [], 0, 0, 0, 0,
nms_CraftingRecipe, 0, jl_Object, [], 0, 3, 0, 0,
ji_OutputStreamWriter, 0, ji_Writer, [], 0, 3, 0, ["$close", function() { ji_OutputStreamWriter_close(this); }, "$flush", function() { ji_OutputStreamWriter_flush(this); }, "$write0", function(var_1, var_2, var_3) { ji_OutputStreamWriter_write(this, var_1, var_2, var_3); }],
otjb_TimerHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0,
nlea_EaglerAdapterImpl2$14, 0, jl_Object, [otjb_TimerHandler], 4, 0, 0, ["$onTimer$exported$0", function() { return nlea_EaglerAdapterImpl2$14_onTimer$exported$0(this); }],
jl_VirtualMachineError, 0, jl_Error, [], 0, 3, 0, 0,
jl_OutOfMemoryError, "OutOfMemoryError", 11, jl_VirtualMachineError, [], 0, 3, 0, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, ["$find0", function(var_1, var_2, var_3) { return jur_AbstractSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_AbstractSet_findBack(this, var_1, var_2, var_3, var_4); }, "$getType1", function() { return jur_AbstractSet_getType(this); }, "$setNext", function(var_1) { jur_AbstractSet_setNext(this, var_1); }, "$first0", function(var_1) { return jur_AbstractSet_first(this, var_1); }, "$processBackRefReplacement", function()
{ return jur_AbstractSet_processBackRefReplacement(this); }, "$processSecondPass", function() { jur_AbstractSet_processSecondPass(this); }],
nms_TileEntitySpecialRenderer, 0, jl_Object, [], 1, 3, 0, 0,
nms_TileEntitySignRenderer, 0, nms_TileEntitySpecialRenderer, [], 0, 3, 0, ["$renderTileEntityAt", function(var_1, var_2, var_3, var_4, var_5) { nms_TileEntitySignRenderer_renderTileEntityAt(this, var_1, var_2, var_3, var_4, var_5); }],
nms_TileEntityMobSpawner, 0, nms_TileEntity, [], 0, 3, 0, ["$updateEntity", function() { nms_TileEntityMobSpawner_updateEntity(this); }, "$readFromNBT", function(var_1) { nms_TileEntityMobSpawner_readFromNBT(this, var_1); }, "$writeToNBT", function(var_1) { nms_TileEntityMobSpawner_writeToNBT(this, var_1); }],
nms_TileEntityMobSpawnerRenderer, 0, nms_TileEntitySpecialRenderer, [], 0, 3, 0, ["$renderTileEntityAt", function(var_1, var_2, var_3, var_4, var_5) { nms_TileEntityMobSpawnerRenderer_renderTileEntityAt(this, var_1, var_2, var_3, var_4, var_5); }],
jur_FSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_FSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_FSet_hasConsumed(this, var_1); }],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0,
jur_PatternSyntaxException, "PatternSyntaxException", 6, jl_IllegalArgumentException, [], 0, 3, 0, ["$getMessage", function() { return jur_PatternSyntaxException_getMessage(this); }],
nms_SignModel, 0, jl_Object, [], 0, 3, 0, 0,
jur_NonCapFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_NonCapFSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NonCapFSet_hasConsumed(this, var_1); }],
jur_AheadFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_AheadFSet_matches(this, var_1, var_2, var_3); }],
jur_BehindFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_BehindFSet_matches(this, var_1, var_2, var_3); }],
jur_AtomicFSet, 0, jur_FSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_AtomicFSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_AtomicFSet_hasConsumed(this, var_1); }],
jur_FinalSet, 0, jur_FSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_FinalSet_matches(this, var_1, var_2, var_3); }],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_LeafSet_matches(this, var_1, var_2, var_3); }, "$charCount0", function() { return jur_LeafSet_charCount(this); }, "$hasConsumed", function(var_1) { return jur_LeafSet_hasConsumed(this, var_1); }],
jur_EmptySet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_EmptySet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_EmptySet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_EmptySet_findBack(this, var_1, var_2, var_3, var_4); }, "$hasConsumed", function(var_1) { return jur_EmptySet_hasConsumed(this, var_1); }],
jur_JointSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_JointSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_JointSet_setNext(this, var_1); }, "$first0", function(var_1) { return jur_JointSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_JointSet_hasConsumed(this, var_1); }, "$processSecondPass", function() { jur_JointSet_processSecondPass(this); }],
jur_NonCapJointSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_NonCapJointSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NonCapJointSet_hasConsumed(this, var_1); }],
jur_AtomicJointSet, 0, jur_NonCapJointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_AtomicJointSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AtomicJointSet_setNext(this, var_1); }],
jur_PositiveLookAhead, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PositiveLookAhead_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PositiveLookAhead_hasConsumed(this, var_1); }],
jur_NegativeLookAhead, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_NegativeLookAhead_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NegativeLookAhead_hasConsumed(this, var_1); }],
jur_PositiveLookBehind, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PositiveLookBehind_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PositiveLookBehind_hasConsumed(this, var_1); }],
jur_NegativeLookBehind, 0, jur_AtomicJointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_NegativeLookBehind_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_NegativeLookBehind_hasConsumed(this, var_1); }],
jur_SingleSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_SingleSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_SingleSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SingleSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1) { return jur_SingleSet_first(this, var_1); }, "$processBackRefReplacement", function() { return jur_SingleSet_processBackRefReplacement(this);
}, "$processSecondPass", function() { jur_SingleSet_processSecondPass(this); }],
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, ["$getBits", function() { return jur_AbstractCharClass_getBits(this); }, "$getLowHighSurrogates", function() { return jur_AbstractCharClass_getLowHighSurrogates(this); }, "$getInstance2", function() { return jur_AbstractCharClass_getInstance(this); }, "$hasUCI", function() { return jur_AbstractCharClass_hasUCI(this); }],
jur_CharClass, "CharClass", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass_contains(this, var_1); }, "$getBits", function() { return jur_CharClass_getBits(this); }, "$getLowHighSurrogates", function() { return jur_CharClass_getLowHighSurrogates(this); }, "$getInstance2", function() { return jur_CharClass_getInstance(this); }, "$toString", function() { return jur_CharClass_toString(this); }, "$hasUCI", function() { return jur_CharClass_hasUCI(this); }],
ju_MissingResourceException, "MissingResourceException", 4, jl_RuntimeException, [], 0, 3, 0, 0,
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, ["$first0", function(var_1) { return jur_QuantifierSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_QuantifierSet_hasConsumed(this, var_1); }, "$processSecondPass", function() { jur_QuantifierSet_processSecondPass(this); }],
jur_LeafQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_LeafQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_CompositeQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_CompositeQuantifierSet_matches(this, var_1, var_2, var_3); }]]);
$rt_metadata([jur_GroupQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_GroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_AltQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_AltQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AltQuantifierSet_setNext(this, var_1); }],
jur_UnifiedQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_UnifiedQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_UnifiedQuantifierSet_find(this, var_1, var_2, var_3); }],
jur_Quantifier, "Quantifier", 6, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, ["$toString", function() { return jur_Quantifier_toString(this); }],
jur_FSet$PossessiveFSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_FSet$PossessiveFSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_FSet$PossessiveFSet_hasConsumed(this, var_1); }],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0,
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0,
jur_CompositeRangeSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_CompositeRangeSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_CompositeRangeSet_setNext(this, var_1); }, "$hasConsumed", function(var_1) { return jur_CompositeRangeSet_hasConsumed(this, var_1); }, "$first0", function(var_1) { return jur_CompositeRangeSet_first(this, var_1); }],
jur_SupplRangeSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_SupplRangeSet_matches(this, var_1, var_2, var_3); }, "$contains0", function(var_1) { return jur_SupplRangeSet_contains(this, var_1); }, "$first0", function(var_1) { return jur_SupplRangeSet_first(this, var_1); }, "$setNext", function(var_1) { jur_SupplRangeSet_setNext(this, var_1); }, "$hasConsumed", function(var_1) { return jur_SupplRangeSet_hasConsumed(this, var_1); }],
jur_UCISupplRangeSet, 0, jur_SupplRangeSet, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_UCISupplRangeSet_contains(this, var_1); }],
jur_UCIRangeSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCIRangeSet_accepts(this, var_1, var_2); }],
jur_RangeSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_RangeSet_accepts(this, var_1, var_2); }, "$first0", function(var_1) { return jur_RangeSet_first(this, var_1); }],
jur_HangulDecomposedCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_HangulDecomposedCharSet_setNext(this, var_1); }, "$matches0", function(var_1, var_2, var_3) { return jur_HangulDecomposedCharSet_matches(this, var_1, var_2, var_3); }, "$first0", function(var_1) { return jur_HangulDecomposedCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_HangulDecomposedCharSet_hasConsumed(this, var_1); }],
jur_CharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$charCount0", function() { return jur_CharSet_charCount(this); }, "$accepts", function(var_1, var_2) { return jur_CharSet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_CharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_CharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1) { return jur_CharSet_first(this, var_1); }],
jur_UCICharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCICharSet_accepts(this, var_1, var_2); }],
jur_CICharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_CICharSet_accepts(this, var_1, var_2); }],
jur_DecomposedCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_DecomposedCharSet_setNext(this, var_1); }, "$matches0", function(var_1, var_2, var_3) { return jur_DecomposedCharSet_matches(this, var_1, var_2, var_3); }, "$first0", function(var_1) { return jur_DecomposedCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_DecomposedCharSet_hasConsumed(this, var_1); }],
jur_UCIDecomposedCharSet, 0, jur_DecomposedCharSet, [], 0, 0, 0, 0,
jur_CIDecomposedCharSet, 0, jur_DecomposedCharSet, [], 0, 0, 0, 0,
jur_PossessiveGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PossessiveGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_PosPlusGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PosPlusGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_AltGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_AltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_AltGroupQuantifierSet_setNext(this, var_1); }],
jur_PosAltGroupQuantifierSet, 0, jur_AltGroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PosAltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_PosAltGroupQuantifierSet_setNext(this, var_1); }],
jur_CompositeGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_CompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_PosCompositeGroupQuantifierSet, 0, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PosCompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_ReluctantGroupQuantifierSet, 0, jur_GroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_ReluctantGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_RelAltGroupQuantifierSet, 0, jur_AltGroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_RelAltGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_RelCompositeGroupQuantifierSet, 0, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_RelCompositeGroupQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_DotAllQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_DotAllQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_DotAllQuantifierSet_find(this, var_1, var_2, var_3); }],
jur_DotQuantifierSet, 0, jur_QuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_DotQuantifierSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_DotQuantifierSet_find(this, var_1, var_2, var_3); }],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0,
jur_PossessiveQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PossessiveQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_PossessiveAltQuantifierSet, 0, jur_AltQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PossessiveAltQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_PossessiveCompositeQuantifierSet, 0, jur_CompositeQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PossessiveCompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_ReluctantQuantifierSet, 0, jur_LeafQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_ReluctantQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_ReluctantAltQuantifierSet, 0, jur_AltQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_ReluctantAltQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_ReluctantCompositeQuantifierSet, 0, jur_CompositeQuantifierSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_ReluctantCompositeQuantifierSet_matches(this, var_1, var_2, var_3); }],
jur_SOLSet, 0, jur_AbstractSet, [], 4, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_SOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_SOLSet_hasConsumed(this, var_1); }],
jur_WordBoundary, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_WordBoundary_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_WordBoundary_hasConsumed(this, var_1); }],
jur_PreviousMatch, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_PreviousMatch_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_PreviousMatch_hasConsumed(this, var_1); }],
jur_EOLSet, 0, jur_AbstractSet, [], 4, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_EOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_EOLSet_hasConsumed(this, var_1); }],
jur_EOISet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_EOISet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_EOISet_hasConsumed(this, var_1); }],
jur_MultiLineSOLSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_MultiLineSOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_MultiLineSOLSet_hasConsumed(this, var_1); }],
jur_DotAllSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_DotAllSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_DotAllSet_setNext(this, var_1); }, "$getType1", function() { return jur_DotAllSet_getType(this); }, "$hasConsumed", function(var_1) { return jur_DotAllSet_hasConsumed(this, var_1); }],
jur_DotSet, 0, jur_JointSet, [], 4, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_DotSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_DotSet_setNext(this, var_1); }, "$getType1", function() { return jur_DotSet_getType(this); }, "$hasConsumed", function(var_1) { return jur_DotSet_hasConsumed(this, var_1); }],
jur_UEOLSet, 0, jur_AbstractSet, [], 4, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_UEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_UEOLSet_hasConsumed(this, var_1); }],
jur_UMultiLineEOLSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_UMultiLineEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_UMultiLineEOLSet_hasConsumed(this, var_1); }],
jur_MultiLineEOLSet, 0, jur_AbstractSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_MultiLineEOLSet_matches(this, var_1, var_2, var_3); }, "$hasConsumed", function(var_1) { return jur_MultiLineEOLSet_hasConsumed(this, var_1); }],
jur_CIBackReferenceSet, 0, jur_JointSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_CIBackReferenceSet_matches(this, var_1, var_2, var_3); }, "$setNext", function(var_1) { jur_CIBackReferenceSet_setNext(this, var_1); }, "$hasConsumed", function(var_1) { return jur_CIBackReferenceSet_hasConsumed(this, var_1); }],
jur_BackReferenceSet, 0, jur_CIBackReferenceSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_BackReferenceSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_BackReferenceSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_BackReferenceSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1) { return jur_BackReferenceSet_first(this, var_1); }]]);
$rt_metadata([jur_UCIBackReferenceSet, 0, jur_CIBackReferenceSet, [], 0, 0, 0, ["$matches0", function(var_1, var_2, var_3) { return jur_UCIBackReferenceSet_matches(this, var_1, var_2, var_3); }],
jur_SequenceSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_SequenceSet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_SequenceSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SequenceSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1) { return jur_SequenceSet_first(this, var_1); }],
jur_UCISequenceSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCISequenceSet_accepts(this, var_1, var_2); }],
jur_CISequenceSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_CISequenceSet_accepts(this, var_1, var_2); }],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, 0,
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0,
jur_UCISupplCharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_UCISupplCharSet_accepts(this, var_1, var_2); }],
jur_LowSurrogateCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_LowSurrogateCharSet_setNext(this, var_1); }, "$matches0", function(var_1, var_2, var_3) { return jur_LowSurrogateCharSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_LowSurrogateCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_LowSurrogateCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1)
{ return jur_LowSurrogateCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_LowSurrogateCharSet_hasConsumed(this, var_1); }],
jur_HighSurrogateCharSet, 0, jur_JointSet, [], 0, 0, 0, ["$setNext", function(var_1) { jur_HighSurrogateCharSet_setNext(this, var_1); }, "$matches0", function(var_1, var_2, var_3) { return jur_HighSurrogateCharSet_matches(this, var_1, var_2, var_3); }, "$find0", function(var_1, var_2, var_3) { return jur_HighSurrogateCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_HighSurrogateCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1)
{ return jur_HighSurrogateCharSet_first(this, var_1); }, "$hasConsumed", function(var_1) { return jur_HighSurrogateCharSet_hasConsumed(this, var_1); }],
jur_SupplCharSet, 0, jur_LeafSet, [], 0, 0, 0, ["$accepts", function(var_1, var_2) { return jur_SupplCharSet_accepts(this, var_1, var_2); }, "$find0", function(var_1, var_2, var_3) { return jur_SupplCharSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_SupplCharSet_findBack(this, var_1, var_2, var_3, var_4); }, "$first0", function(var_1) { return jur_SupplCharSet_first(this, var_1); }],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 4, 0, 0, ["$isLineTerminator", function(var_1) { return jur_AbstractLineTerminator$1_isLineTerminator(this, var_1); }, "$isAfterLineTerminator", function(var_1, var_2) { return jur_AbstractLineTerminator$1_isAfterLineTerminator(this, var_1, var_2); }],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 4, 0, 0, ["$isLineTerminator", function(var_1) { return jur_AbstractLineTerminator$2_isLineTerminator(this, var_1); }, "$isAfterLineTerminator", function(var_1, var_2) { return jur_AbstractLineTerminator$2_isAfterLineTerminator(this, var_1, var_2); }],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0,
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0,
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazySpace_computeValue(this); }],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyDigit_computeValue(this); }],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyLower_computeValue(this); }],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyUpper_computeValue(this); }],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyASCII_computeValue(this); }],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyAlpha_computeValue(this); }],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyAlnum_computeValue(this); }],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyPunct_computeValue(this); }],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyGraph_computeValue(this); }],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyPrint_computeValue(this); }],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyBlank_computeValue(this); }],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCntrl_computeValue(this); }],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyXDigit_computeValue(this); }],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLowerCase_computeValue(this); }],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUpperCase_computeValue(this); }],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaWhitespace_computeValue(this); }],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaMirrored_computeValue(this); }],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaDefined_computeValue(this); }],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaDigit_computeValue(this); }],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue(this); }],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaISOControl_computeValue(this); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue(this); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue(this); }],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLetter_computeValue(this); }],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue(this); }],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaSpaceChar_computeValue(this); }],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaTitleCase_computeValue(this); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue(this); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue(this); }],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyWord_computeValue(this); }],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonWord_computeValue(this); }],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonSpace_computeValue(this); }],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyNonDigit_computeValue(this); }],
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyRange_computeValue(this); }],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazySpecialsBlock_computeValue(this); }],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCategory_computeValue(this); }]]);
$rt_metadata([jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, ["$computeValue", function() { return jur_AbstractCharClass$LazyCategoryScope_computeValue(this); }],
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 17, jl_Object, [], 0, 3, 0, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 8, jl_Error, [], 0, 3, 0, 0,
otci_Base64Impl, 0, jl_Object, [], 4, 3, 0, 0,
otcit_DateTimeZoneBuilder, 0, jl_Object, [], 0, 3, 0, 0,
nms_GuiOptions, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiOptions_initGui(this); }, "$actionPerformed", function(var_1) { nms_GuiOptions_actionPerformed(this, var_1); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiOptions_drawScreen(this, var_1, var_2, var_3); }],
nms_GuiSelectWorld, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiSelectWorld_initGui(this); }, "$initGui2", function() { nms_GuiSelectWorld_initGui2(this); }, "$actionPerformed", function(var_1) { nms_GuiSelectWorld_actionPerformed(this, var_1); }, "$selectWorld", function(var_1) { nms_GuiSelectWorld_selectWorld(this, var_1); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiSelectWorld_drawScreen(this, var_1, var_2, var_3); }],
nms_Chunk, 0, jl_Object, [], 0, 3, 0, 0,
nms_ChunkCache, 0, jl_Object, [nms_IBlockAccess], 0, 3, 0, ["$getBlockId", function(var_1, var_2, var_3) { return nms_ChunkCache_getBlockId(this, var_1, var_2, var_3); }, "$getLightBrightness", function(var_1, var_2, var_3) { return nms_ChunkCache_getLightBrightness(this, var_1, var_2, var_3); }, "$getBlockMetadata", function(var_1, var_2, var_3) { return nms_ChunkCache_getBlockMetadata(this, var_1, var_2, var_3); }, "$getBlockMaterial", function(var_1, var_2, var_3) { return nms_ChunkCache_getBlockMaterial(this,
var_1, var_2, var_3); }, "$isBlockOpaqueCube", function(var_1, var_2, var_3) { return nms_ChunkCache_isBlockOpaqueCube(this, var_1, var_2, var_3); }, "$func_4075_a", function() { return nms_ChunkCache_func_4075_a(this); }],
nms_WorldChunkManager, 0, jl_Object, [], 0, 3, 0, ["$func_4074_a", function(var_1) { return nms_WorldChunkManager_func_4074_a(this, var_1); }, "$func_4073_a", function(var_1, var_2) { return nms_WorldChunkManager_func_4073_a(this, var_1, var_2); }, "$func_4072_b", function(var_1, var_2) { return nms_WorldChunkManager_func_4072_b(this, var_1, var_2); }, "$func_4069_a", function(var_1, var_2, var_3, var_4) { return nms_WorldChunkManager_func_4069_a(this, var_1, var_2, var_3, var_4); }, "$getTemperatures", function(var_1,
var_2, var_3, var_4, var_5) { return nms_WorldChunkManager_getTemperatures(this, var_1, var_2, var_3, var_4, var_5); }, "$loadBlockGeneratorData", function(var_1, var_2, var_3, var_4, var_5) { return nms_WorldChunkManager_loadBlockGeneratorData(this, var_1, var_2, var_3, var_4, var_5); }],
nms_ColorizerGrass, 0, jl_Object, [], 0, 3, 0, 0,
nms_ColorizerFoliage, 0, jl_Object, [], 0, 3, 0, 0,
nlea_EaglerAdapterImpl2$14$1, 0, jl_Object, [otjb_TimerHandler], 0, 0, 0, ["$onTimer$exported$0", function() { return nlea_EaglerAdapterImpl2$14$1_onTimer$exported$0(this); }],
jur_AbstractCharClass$1, "AbstractCharClass$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$1_contains(this, var_1); }],
jur_AbstractCharClass$2, "AbstractCharClass$2", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$2_contains(this, var_1); }],
jur_CharClass$18, "CharClass$18", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$18_contains(this, var_1); }, "$toString", function() { return jur_CharClass$18_toString(this); }],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$1_contains(this, var_1); }],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$3_contains(this, var_1); }],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$2_contains(this, var_1); }],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$5_contains(this, var_1); }],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$4_contains(this, var_1); }],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$7_contains(this, var_1); }],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$6_contains(this, var_1); }],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$9_contains(this, var_1); }],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$8_contains(this, var_1); }],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$11_contains(this, var_1); }],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$10_contains(this, var_1); }],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$13_contains(this, var_1); }],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$12_contains(this, var_1); }],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$15_contains(this, var_1); }],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$14_contains(this, var_1); }],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$17_contains(this, var_1); }],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_CharClass$16_contains(this, var_1); }],
nms_TileEntityFurnace, 0, nms_TileEntity, [nms_IInventory], 0, 3, 0, ["$getStackInSlot", function(var_1) { return nms_TileEntityFurnace_getStackInSlot(this, var_1); }, "$decrStackSize", function(var_1, var_2) { return nms_TileEntityFurnace_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_TileEntityFurnace_setInventorySlotContents(this, var_1, var_2); }, "$readFromNBT", function(var_1) { nms_TileEntityFurnace_readFromNBT(this, var_1); }, "$writeToNBT", function(var_1)
{ nms_TileEntityFurnace_writeToNBT(this, var_1); }, "$getInventoryStackLimit", function() { return nms_TileEntityFurnace_getInventoryStackLimit(this); }, "$updateEntity", function() { nms_TileEntityFurnace_updateEntity(this); }],
nms_TileEntityChest, 0, nms_TileEntity, [nms_IInventory], 0, 3, 0, ["$getSizeInventory", function() { return nms_TileEntityChest_getSizeInventory(this); }, "$getStackInSlot", function(var_1) { return nms_TileEntityChest_getStackInSlot(this, var_1); }, "$decrStackSize", function(var_1, var_2) { return nms_TileEntityChest_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_TileEntityChest_setInventorySlotContents(this, var_1, var_2); }, "$getInvName", function() { return nms_TileEntityChest_getInvName(this);
}, "$readFromNBT", function(var_1) { nms_TileEntityChest_readFromNBT(this, var_1); }, "$writeToNBT", function(var_1) { nms_TileEntityChest_writeToNBT(this, var_1); }, "$getInventoryStackLimit", function() { return nms_TileEntityChest_getInventoryStackLimit(this); }],
jur_BackReferencedSingleSet, 0, jur_SingleSet, [], 0, 0, 0, ["$find0", function(var_1, var_2, var_3) { return jur_BackReferencedSingleSet_find(this, var_1, var_2, var_3); }, "$findBack", function(var_1, var_2, var_3, var_4) { return jur_BackReferencedSingleSet_findBack(this, var_1, var_2, var_3, var_4); }, "$processBackRefReplacement", function() { return jur_BackReferencedSingleSet_processBackRefReplacement(this); }],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 8, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_BufferOverflowException, "BufferOverflowException", 8, jl_RuntimeException, [], 0, 3, 0, 0,
jnc_MalformedInputException, "MalformedInputException", 8, jnc_CharacterCodingException, [], 0, 3, 0, ["$getMessage", function() { return jnc_MalformedInputException_getMessage(this); }],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 8, jnc_CharacterCodingException, [], 0, 3, 0, ["$getMessage", function() { return jnc_UnmappableCharacterException_getMessage(this); }],
nms_GuiSlider, 0, nms_GuiButton, [], 0, 3, 0, ["$getHoverState", function(var_1) { return nms_GuiSlider_getHoverState(this, var_1); }, "$mouseDragged", function(var_1, var_2, var_3) { nms_GuiSlider_mouseDragged(this, var_1, var_2, var_3); }, "$mousePressed", function(var_1, var_2, var_3) { return nms_GuiSlider_mousePressed(this, var_1, var_2, var_3); }, "$mouseReleased", function(var_1, var_2) { nms_GuiSlider_mouseReleased(this, var_1, var_2); }],
nms_GuiSmallButton, 0, nms_GuiButton, [], 0, 3, 0, 0,
nms_GuiControls, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiControls_initGui(this); }, "$actionPerformed", function(var_1) { nms_GuiControls_actionPerformed(this, var_1); }, "$keyTyped", function(var_1, var_2) { nms_GuiControls_keyTyped(this, var_1, var_2); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiControls_drawScreen(this, var_1, var_2, var_3); }],
nms_GuiDeleteWorld, 0, nms_GuiSelectWorld, [], 0, 3, 0, ["$initGui2", function() { nms_GuiDeleteWorld_initGui2(this); }, "$selectWorld", function(var_1) { nms_GuiDeleteWorld_selectWorld(this, var_1); }],
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0,
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, ["$hashCode0", function() { return jl_Boolean_hashCode(this); }],
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0,
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0,
nms_CompressedStreamTools, 0, jl_Object, [], 0, 3, 0, 0]);
$rt_metadata([nms_NBTBase, 0, jl_Object, [], 1, 3, 0, 0,
nms_NBTTagCompound, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagCompound_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagCompound_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagCompound_getType(this); }],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, 0,
otcit_DoubleAnalyzer, 0, jl_Object, [], 4, 3, 0, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0,
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, 0,
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0,
juz_InflaterInputStream, 0, ji_FilterInputStream, [], 0, 3, 0, ["$read1", function() { return juz_InflaterInputStream_read(this); }, "$available", function() { return juz_InflaterInputStream_available(this); }],
juz_GZIPInputStream, 0, juz_InflaterInputStream, [], 0, 3, 0, ["$close", function() { juz_GZIPInputStream_close(this); }, "$read0", function(var_1, var_2, var_3) { return juz_GZIPInputStream_read(this, var_1, var_2, var_3); }],
juz_Inflater, 0, jl_Object, [], 0, 3, 0, 0,
juz_Checksum, 0, jl_Object, [], 3, 3, 0, 0,
juz_CRC32, 0, jl_Object, [juz_Checksum], 0, 3, 0, 0,
nms_NBTTagEnd, 0, nms_NBTBase, [], 0, 3, 0, ["$readTagContents", function(var_1) { nms_NBTTagEnd_readTagContents(this, var_1); }, "$writeTagContents", function(var_1) { nms_NBTTagEnd_writeTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagEnd_getType(this); }],
nms_NBTTagByte, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagByte_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagByte_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagByte_getType(this); }],
nms_NBTTagShort, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagShort_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagShort_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagShort_getType(this); }],
nms_NBTTagInt, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagInt_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagInt_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagInt_getType(this); }],
nms_NBTTagLong, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagLong_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagLong_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagLong_getType(this); }],
nms_NBTTagFloat, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagFloat_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagFloat_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagFloat_getType(this); }],
nms_NBTTagDouble, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagDouble_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagDouble_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagDouble_getType(this); }],
nms_NBTTagByteArray, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagByteArray_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagByteArray_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagByteArray_getType(this); }],
nms_NBTTagString, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagString_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagString_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagString_getType(this); }],
nms_NBTTagList, 0, nms_NBTBase, [], 0, 3, 0, ["$writeTagContents", function(var_1) { nms_NBTTagList_writeTagContents(this, var_1); }, "$readTagContents", function(var_1) { nms_NBTTagList_readTagContents(this, var_1); }, "$getType0", function() { return nms_NBTTagList_getType(this); }],
jl_ArrayIndexOutOfBoundsException, "ArrayIndexOutOfBoundsException", 11, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0,
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaLowerCase$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaUpperCase$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaWhitespace$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaMirrored$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaDefined$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaDigit$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaISOControl$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaLetter$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaSpaceChar$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaTitleCase$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains(this, var_1); }],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains(this, var_1); }],
jur_UnicodeCategory, "UnicodeCategory", 6, jur_AbstractCharClass, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_UnicodeCategory_contains(this, var_1); }],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 6, jur_UnicodeCategory, [], 0, 0, 0, ["$contains0", function(var_1) { return jur_UnicodeCategoryScope_contains(this, var_1); }],
nms_PlayerControllerSP, 0, nms_PlayerController, [], 0, 3, 0, 0,
nms_GuiYesNo, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiYesNo_initGui(this); }, "$actionPerformed", function(var_1) { nms_GuiYesNo_actionPerformed(this, var_1); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiYesNo_drawScreen(this, var_1, var_2, var_3); }],
ju_HashMap$1, 0, ju_AbstractSet, [], 0, 0, 0, 0,
juz_DataFormatException, "DataFormatException", 5, jl_Exception, [], 0, 3, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0,
ju_HashMap$KeyIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, ["$next0", function() { return ju_HashMap$KeyIterator_next(this); }],
nms_EnumArt, "EnumArt", 20, jl_Enum, [], 12, 3, 0, 0,
ju_SortedSet, 0, jl_Object, [ju_Set], 3, 3, 0, 0]);
$rt_metadata([ju_NavigableSet, 0, jl_Object, [ju_SortedSet], 3, 3, 0, 0,
ju_TreeSet, 0, ju_AbstractSet, [ju_NavigableSet], 0, 3, 0, 0,
nms_WorldProviderHell, 0, nms_WorldProvider, [], 0, 3, 0, ["$registerWorldChunkManager", function() { nms_WorldProviderHell_registerWorldChunkManager(this); }, "$func_4096_a", function(var_1, var_2) { return nms_WorldProviderHell_func_4096_a(this, var_1, var_2); }, "$generateLightBrightnessTable", function() { nms_WorldProviderHell_generateLightBrightnessTable(this); }, "$getChunkProvider", function() { return nms_WorldProviderHell_getChunkProvider(this); }, "$getChunkLoader", function(var_1) { return nms_WorldProviderHell_getChunkLoader(this,
var_1); }, "$canCoordinateBeSpawn", function(var_1, var_2) { return nms_WorldProviderHell_canCoordinateBeSpawn(this, var_1, var_2); }, "$calculateCelestialAngle", function(var_1, var_2) { return nms_WorldProviderHell_calculateCelestialAngle(this, var_1, var_2); }, "$func_6477_d", function() { return nms_WorldProviderHell_func_6477_d(this); }],
ju_SortedMap, 0, jl_Object, [ju_Map], 3, 3, 0, 0,
ju_NavigableMap, 0, jl_Object, [ju_SortedMap], 3, 3, 0, 0,
ju_TreeMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable, ju_NavigableMap], 0, 3, 0, 0,
ju_TreeMap$1, 0, jl_Object, [ju_Comparator], 0, 0, 0, 0,
nms_InventoryLargeChest, 0, jl_Object, [nms_IInventory], 0, 3, 0, ["$getSizeInventory", function() { return nms_InventoryLargeChest_getSizeInventory(this); }, "$getInvName", function() { return nms_InventoryLargeChest_getInvName(this); }, "$getStackInSlot", function(var_1) { return nms_InventoryLargeChest_getStackInSlot(this, var_1); }, "$decrStackSize", function(var_1, var_2) { return nms_InventoryLargeChest_decrStackSize(this, var_1, var_2); }, "$setInventorySlotContents", function(var_1, var_2) { nms_InventoryLargeChest_setInventorySlotContents(this,
var_1, var_2); }, "$getInventoryStackLimit", function() { return nms_InventoryLargeChest_getInventoryStackLimit(this); }, "$onInventoryChanged", function() { nms_InventoryLargeChest_onInventoryChanged(this); }],
nms_NextTickListEntry, 0, jl_Object, [jl_Comparable], 0, 3, 0, ["$equals", function(var_1) { return nms_NextTickListEntry_equals(this, var_1); }, "$hashCode0", function() { return nms_NextTickListEntry_hashCode(this); }, "$compareTo5", function(var_1) { return nms_NextTickListEntry_compareTo(this, var_1); }],
nms_SpawnerAnimals, 0, jl_Object, [], 4, 3, 0, 0,
nms_IChunkProvider, 0, jl_Object, [], 3, 3, 0, 0,
nms_ChunkProviderLoadOrGenerate, 0, jl_Object, [nms_IChunkProvider], 0, 3, 0, 0,
nms_MobSpawnerBase, 0, jl_Object, [], 0, 3, 0, 0,
nms_MetadataChunkBlock, 0, jl_Object, [], 0, 3, 0, 0,
nms_ChunkCoordIntPair, 0, jl_Object, [], 0, 3, 0, ["$hashCode0", function() { return nms_ChunkCoordIntPair_hashCode(this); }, "$equals", function(var_1) { return nms_ChunkCoordIntPair_equals(this, var_1); }],
nms_EnumCreatureType, "EnumCreatureType", 20, jl_Enum, [], 12, 3, 0, 0,
nms_ChunkPosition, 0, jl_Object, [], 0, 3, 0, ["$equals", function(var_1) { return nms_ChunkPosition_equals(this, var_1); }, "$hashCode0", function() { return nms_ChunkPosition_hashCode(this); }],
nlea_EaglerAdapterImpl2$FileEntry, 0, jl_Object, [], 0, 3, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0,
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0,
jlr_Constructor, "Constructor", 12, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0,
juz_DeflaterOutputStream, 0, ji_FilterOutputStream, [], 0, 3, 0, ["$close", function() { juz_DeflaterOutputStream_close(this); }, "$write3", function(var_1) { juz_DeflaterOutputStream_write(this, var_1); }],
juz_GZIPOutputStream, 0, juz_DeflaterOutputStream, [], 0, 3, 0, ["$flush", function() { juz_GZIPOutputStream_flush(this); }, "$write2", function(var_1, var_2, var_3) { juz_GZIPOutputStream_write(this, var_1, var_2, var_3); }],
nms_NibbleArray, 0, jl_Object, [], 0, 3, 0, 0,
nms_MobSpawnerSwamp, 0, nms_MobSpawnerBase, [], 0, 3, 0, 0,
nms_MobSpawnerDesert, 0, nms_MobSpawnerBase, [], 0, 3, 0, 0,
nms_MobSpawnerHell, 0, nms_MobSpawnerBase, [], 0, 3, 0, 0,
nms_EntityPigZombie, "EntityPigZombie", 20, nms_EntityZombie, [], 0, 3, nms_EntityPigZombie_$callClinit, ["$onUpdate", function() { nms_EntityPigZombie_onUpdate(this); }, "$getCanSpawnHere", function() { return nms_EntityPigZombie_getCanSpawnHere(this); }, "$writeEntityToNBT", function(var_1) { nms_EntityPigZombie_writeEntityToNBT(this, var_1); }, "$readEntityFromNBT", function(var_1) { nms_EntityPigZombie_readEntityFromNBT(this, var_1); }, "$findPlayerToAttack", function() { return nms_EntityPigZombie_findPlayerToAttack(this);
}, "$onLivingUpdate", function() { nms_EntityPigZombie_onLivingUpdate(this); }, "$canAttackEntity", function(var_1, var_2) { return nms_EntityPigZombie_canAttackEntity(this, var_1, var_2); }, "$getLivingSound", function() { return nms_EntityPigZombie_getLivingSound(this); }, "$getHurtSound", function() { return nms_EntityPigZombie_getHurtSound(this); }, "$getDeathSound", function() { return nms_EntityPigZombie_getDeathSound(this); }, "$getDropItemId", function() { return nms_EntityPigZombie_getDropItemId(this);
}, "$getHeldItem", function() { return nms_EntityPigZombie_getHeldItem(this); }],
juz_Deflater, 0, jl_Object, [], 0, 3, 0, 0,
cjj_Deflater, 0, cjj_ZStream, [], 4, 3, 0, 0,
nms_WorldChunkManagerHell, 0, nms_WorldChunkManager, [], 0, 3, 0, ["$func_4074_a", function(var_1) { return nms_WorldChunkManagerHell_func_4074_a(this, var_1); }, "$func_4073_a", function(var_1, var_2) { return nms_WorldChunkManagerHell_func_4073_a(this, var_1, var_2); }, "$func_4072_b", function(var_1, var_2) { return nms_WorldChunkManagerHell_func_4072_b(this, var_1, var_2); }, "$func_4069_a", function(var_1, var_2, var_3, var_4) { return nms_WorldChunkManagerHell_func_4069_a(this, var_1, var_2, var_3, var_4);
}, "$getTemperatures", function(var_1, var_2, var_3, var_4, var_5) { return nms_WorldChunkManagerHell_getTemperatures(this, var_1, var_2, var_3, var_4, var_5); }, "$loadBlockGeneratorData", function(var_1, var_2, var_3, var_4, var_5) { return nms_WorldChunkManagerHell_loadBlockGeneratorData(this, var_1, var_2, var_3, var_4, var_5); }],
nms_GuiChest, 0, nms_GuiContainer, [], 0, 3, 0, ["$drawGuiContainerForegroundLayer", function() { nms_GuiChest_drawGuiContainerForegroundLayer(this); }, "$drawGuiContainerBackgroundLayer", function(var_1) { nms_GuiChest_drawGuiContainerBackgroundLayer(this, var_1); }],
nms_GuiCrafting, 0, nms_GuiContainer, [], 0, 3, 0, ["$onGuiClosed", function() { nms_GuiCrafting_onGuiClosed(this); }, "$drawGuiContainerForegroundLayer", function() { nms_GuiCrafting_drawGuiContainerForegroundLayer(this); }, "$drawGuiContainerBackgroundLayer", function(var_1) { nms_GuiCrafting_drawGuiContainerBackgroundLayer(this, var_1); }],
nms_GuiFurnace, 0, nms_GuiContainer, [], 0, 3, 0, ["$drawGuiContainerForegroundLayer", function() { nms_GuiFurnace_drawGuiContainerForegroundLayer(this); }, "$drawGuiContainerBackgroundLayer", function(var_1) { nms_GuiFurnace_drawGuiContainerBackgroundLayer(this, var_1); }],
nms_EntityList, 0, jl_Object, [], 0, 3, 0, 0,
nms_WorldGenerator, 0, jl_Object, [], 1, 3, 0, ["$func_517_a", function(var_1, var_2, var_3) { nms_WorldGenerator_func_517_a(this, var_1, var_2, var_3); }],
nms_WorldGenTrees, 0, nms_WorldGenerator, [], 0, 3, 0, ["$generate", function(var_1, var_2, var_3, var_4, var_5) { return nms_WorldGenTrees_generate(this, var_1, var_2, var_3, var_4, var_5); }],
nms_WorldGenBigTree, 0, nms_WorldGenerator, [], 0, 3, 0, ["$func_517_a", function(var_1, var_2, var_3) { nms_WorldGenBigTree_func_517_a(this, var_1, var_2, var_3); }, "$generate", function(var_1, var_2, var_3, var_4, var_5) { return nms_WorldGenBigTree_generate(this, var_1, var_2, var_3, var_4, var_5); }],
nms_RedstoneUpdateInfo, 0, jl_Object, [], 0, 0, 0, 0,
nms_EnumSkyBlock, 0, jl_Enum, [], 12, 3, 0, 0,
nms_IChunkLoader, 0, jl_Object, [], 3, 3, 0, 0,
nms_ChunkLoader, 0, jl_Object, [nms_IChunkLoader], 0, 3, 0, 0,
nms_ChunkProviderGenerate, 0, jl_Object, [nms_IChunkProvider], 0, 3, 0, ["$provideChunk", function(var_1, var_2) { return nms_ChunkProviderGenerate_provideChunk(this, var_1, var_2); }, "$populate", function(var_1, var_2, var_3) { nms_ChunkProviderGenerate_populate(this, var_1, var_2, var_3); }, "$func_532_a", function() { return nms_ChunkProviderGenerate_func_532_a(this); }],
nms_ChunkProviderHell, 0, jl_Object, [nms_IChunkProvider], 0, 3, 0, ["$provideChunk", function(var_1, var_2) { return nms_ChunkProviderHell_provideChunk(this, var_1, var_2); }, "$populate", function(var_1, var_2, var_3) { nms_ChunkProviderHell_populate(this, var_1, var_2, var_3); }, "$func_532_a", function() { return nms_ChunkProviderHell_func_532_a(this); }],
nms_MinecartTrackLogic, 0, jl_Object, [], 0, 0, 0, 0,
cjj_Deflate, 0, jl_Object, [jl_Cloneable], 4, 3, 0, 0,
nms_EntityBubbleFX, "EntityBubbleFX", 20, nms_EntityFX, [], 0, 3, 0, ["$onUpdate", function() { nms_EntityBubbleFX_onUpdate(this); }],
nms_EntitySmokeFX, "EntitySmokeFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntitySmokeFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$onUpdate", function() { nms_EntitySmokeFX_onUpdate(this); }],
nms_EntityPortalFX, "EntityPortalFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityPortalFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$getEntityBrightness", function(var_1) { return nms_EntityPortalFX_getEntityBrightness(this, var_1); }, "$onUpdate", function() { nms_EntityPortalFX_onUpdate(this); }],
nms_EntityExplodeFX, "EntityExplodeFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityExplodeFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$onUpdate", function() { nms_EntityExplodeFX_onUpdate(this); }]]);
$rt_metadata([nms_EntityFlameFX, "EntityFlameFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityFlameFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$getEntityBrightness", function(var_1) { return nms_EntityFlameFX_getEntityBrightness(this, var_1); }, "$onUpdate", function() { nms_EntityFlameFX_onUpdate(this); }],
nms_EntityLavaFX, "EntityLavaFX", 20, nms_EntityFX, [], 0, 3, 0, ["$getEntityBrightness", function(var_1) { return nms_EntityLavaFX_getEntityBrightness(this, var_1); }, "$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityLavaFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$onUpdate", function() { nms_EntityLavaFX_onUpdate(this); }],
nms_EntitySplashFX, "EntitySplashFX", 20, nms_EntityRainFX, [], 0, 3, 0, 0,
nms_EntityReddustFX, "EntityReddustFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityReddustFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$onUpdate", function() { nms_EntityReddustFX_onUpdate(this); }],
nms_EntitySlimeFX, "EntitySlimeFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_404_c", function() { return nms_EntitySlimeFX_func_404_c(this); }, "$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntitySlimeFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
nms_NoiseGenerator, 0, jl_Object, [], 1, 3, 0, 0,
nms_NoiseGeneratorOctaves2, 0, nms_NoiseGenerator, [], 0, 3, 0, 0,
nms_CraftingInventoryWorkbenchCB, 0, nms_CraftingInventoryCB, [], 0, 3, 0, ["$onCraftMatrixChanged", function(var_1) { nms_CraftingInventoryWorkbenchCB_onCraftMatrixChanged(this, var_1); }],
nms_MapGenBase, 0, jl_Object, [], 0, 3, 0, 0,
nms_MapGenCaves, 0, nms_MapGenBase, [], 0, 3, 0, ["$func_868_a", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_MapGenCaves_func_868_a(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
nms_NoiseGeneratorOctaves, 0, nms_NoiseGenerator, [], 0, 3, 0, 0,
nms_MapGenCavesHell, 0, nms_MapGenBase, [], 0, 3, 0, ["$func_868_a", function(var_1, var_2, var_3, var_4, var_5, var_6) { nms_MapGenCavesHell_func_868_a(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cjj_Tree, 0, jl_Object, [], 4, 0, 0, 0,
nms_NoiseGenerator2, 0, jl_Object, [], 0, 3, 0, 0,
nms_NoiseGeneratorPerlin, 0, nms_NoiseGenerator, [], 0, 3, 0, 0,
cjj_Deflate$Config, 0, jl_Object, [], 0, 0, 0, 0,
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0,
jl_NoSuchMethodException, "NoSuchMethodException", 11, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, 0,
nms_Teleporter, 0, jl_Object, [], 0, 3, 0, 0,
ju_AbstractMap$SimpleEntry, 0, jl_Object, [ju_Map$Entry, ji_Serializable], 0, 3, 0, 0,
ju_TreeMap$TreeNode, 0, ju_AbstractMap$SimpleEntry, [], 0, 0, 0, 0,
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0,
nms_GuiEditSign, 0, nms_GuiScreen, [], 0, 3, 0, ["$initGui", function() { nms_GuiEditSign_initGui(this); }, "$onGuiClosed", function() { nms_GuiEditSign_onGuiClosed(this); }, "$updateScreen", function() { nms_GuiEditSign_updateScreen(this); }, "$actionPerformed", function(var_1) { nms_GuiEditSign_actionPerformed(this, var_1); }, "$keyTyped", function(var_1, var_2) { nms_GuiEditSign_keyTyped(this, var_1, var_2); }, "$drawScreen", function(var_1, var_2, var_3) { nms_GuiEditSign_drawScreen(this, var_1, var_2, var_3);
}],
nms_WorldGenLakes, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenDungeons, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenClay, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenMinable, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenFlowers, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenReed, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenPumpkin, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenCactus, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenLiquids, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenHellLava, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenFire, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenLightStone1, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
nms_WorldGenLightStone2, 0, nms_WorldGenerator, [], 0, 3, 0, 0,
jl_InstantiationException, "InstantiationException", 11, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
jl_IllegalAccessException, "IllegalAccessException", 11, jl_ReflectiveOperationException, [], 0, 3, 0, 0,
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0,
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0,
jl_StrictMath, 0, jl_Object, [], 4, 3, 0, 0,
cjj_StaticTree, 0, jl_Object, [], 4, 0, cjj_StaticTree_$callClinit, 0,
nms_Explosion, 0, jl_Object, [], 0, 3, 0, 0,
nms_PathEntity, 0, jl_Object, [], 0, 3, 0, 0,
nms_Pathfinder, 0, jl_Object, [], 0, 3, 0, 0,
nms_EntityPickupFX, "EntityPickupFX", 20, nms_EntityFX, [], 0, 3, 0, ["$func_406_a", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { nms_EntityPickupFX_func_406_a(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$onUpdate", function() { nms_EntityPickupFX_onUpdate(this); }, "$func_404_c", function() { return nms_EntityPickupFX_func_404_c(this); }],
nms_Path, 0, jl_Object, [], 0, 3, 0, 0,
nms_MCHashTable, 0, jl_Object, [], 0, 3, 0, 0,
nms_PathPoint, "PathPoint", 20, jl_Object, [], 0, 3, 0, 0]);
$rt_metadata([nms_HashEntry, 0, jl_Object, [], 0, 0, 0, 0]);
function $rt_array(cls, data) {
    this.$monitor = null;
    this.$id$ = 0;
    this.type = cls;
    this.data = data;
    this.constructor = $rt_arraycls(cls);
}
$rt_array.prototype = Object.create(($rt_objcls()).prototype);
$rt_array.prototype.toString = function() {
    var str = "[";
    for (var i = 0;i < this.data.length;++i) {
        if (i > 0) {
            str += ", ";
        }
        str += this.data[i].toString();
    }
    str += "]";
    return str;
};
$rt_setCloneMethod($rt_array.prototype, function() {
    var dataCopy;
    if ('slice' in this.data) {
        dataCopy = this.data.slice();
    } else {
        dataCopy = new this.data.constructor(this.data.length);
        for (var i = 0;i < dataCopy.length;++i) {
            dataCopy[i] = this.data[i];
        }
    }
    return new $rt_array(this.type, dataCopy);
});
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "@", "0", " -------- starting minecraft -------- ", "Player", "g", "p", "Native Browser Exception\n", "----------------------------------\n", "  Line: ", "  Type: ", "  Message: ", "----------------------------------\n\n", "<init>", "/", "null", "Patter is null", "", ": ", "    at ", "Caused by: ", "  at ", "false", "true", "Index out of bounds", "String contains invalid digits: ", "String contains digits out of radix ", "The value is too big for int type: ",
"String is null or empty", "Illegal radix: ", "#version 300 es", "UTF-8", "overflow-x:hidden;overflow-y:hidden;", "WebGL 2.0 is not supported in your browser (", ")", "keyup", "_eaglercraft_beta.", "Input array too big, the output array would be bigger (", ") than the specified maximum size of ", "yyyy-MM-dd_HH.mm.ss", "NONE", "ESCAPE", "1", "2", "3", "4", "5", "6", "7", "8", "9", "MINUS", "EQUALS", "BACK", "TAB", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "LBRACKET", "RBRACKET", "RETURN", "LCONTROL",
"A", "S", "D", "F", "G", "H", "J", "K", "L", "SEMICOLON", "APOSTROPHE", "GRAVE", "LSHIFT", "BACKSLASH", "Z", "X", "C", "V", "B", "N", "M", "COMMA", "PERIOD", "SLASH", "RSHIFT", "MULTIPLY", "LMENU", "SPACE", "CAPITAL", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "NUMLOCK", "SCROLL", "NUMPAD7", "NUMPAD8", "NUMPAD9", "SUBTRACT", "NUMPAD4", "NUMPAD5", "NUMPAD6", "ADD", "NUMPAD1", "NUMPAD2", "NUMPAD3", "NUMPAD0", "DECIMAL", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "KANA", "F19", "CONVERT",
"NOCONVERT", "YEN", "NUMPADEQUALS", "CIRCUMFLEX", "AT", "COLON", "UNDERLINE", "KANJI", "STOP", "AX", "UNLABELED", "NUMPADENTER", "RCONTROL", "SECTION", "NUMPADCOMMA", "DIVIDE", "SYSRQ", "RMENU", "FUNCTION", "PAUSE", "HOME", "UP", "PRIOR", "LEFT", "RIGHT", "END", "DOWN", "NEXT", "INSERT", "DELETE", "CLEAR", "LMETA", "RMETA", "APPS", "POWER", "SLEEP", "\n", "Either src or dest is null", "Timer hack thread", "/font/default.png", "Pre startup", "Startup", "/gui/items.png", "Post startup", "/title/mojang.png", "GL_INVALID_ENUM",
"GL_INVALID_VALUE", "GL_INVALID_OPERATION", "GL_OUT_OF_MEMORY", "Unknown Error", "CONTEXT_LOST_WEBGL", "########## GL ERROR ##########", "@ ", "Failed to start game", "Pre render", "Unexpected error", "Post render", " fps, ", " chunk updates", "/terrain.png", "saves", "Loading level", "Generating level", "Leaving the Nether", "Entering the Nether", "Player is ", "Player is now ", "Building terrain", "Simulating world for a bit", "P: ", ". T: ", "Respawning", "EAGPKG!!", "invalid epk file", "<file>", " end",
"invalid file hash for ", "</file>", "/gui/background.png", "matrix is not supported while recording display list use tessellator class instead", "projection matrix stack overflow", "texture matrix stack overflow", "modelview matrix stack overflow", "projection matrix stack underflow", "texture matrix stack underflow", "modelview matrix stack underflow", "only GL_QUADS supported in a display list", "vertex format inconsistent in display list", "main", "End of stream reached", "Malformed UTF-8 sequence", "yee",
"charsetName is null", "Should never been thrown", "Stream closed", "footer is not found", "Unexpected end of ZLIB input stream", "�", "Replacement preconditions do not hold", "/misc/water.png", "Slot ", " is already occupied by ", " when adding ", "stone", "wood", "gravel", "grass", "cloth", "sand", "Unable to allocate array size: ", "lineSeparator must not contain base64 characters: [", "]", "Impossible modulus ", "Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. Decoding requires at least two trailing 6-bit characters to create bytes.",
"Strict decoding: Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible encoding. Expected the discarded bits from the character to be zero.", "en", "CA", "fr", "zh", "CN", "FR", "de", "DE", "it", "IT", "ja", "JP", "ko", "KR", "TW", "GB", "US", "New position ", " is outside of range [0;", "New limit ", "The last float in dst ", " is outside of array of size ", "Length ", " must be non-negative", "Offset ", "UTF Error", "step.", "/misc/grasscolor.png", "liquid.water",
"lava", "random.fizz", "largesmoke", "/misc/foliagecolor.png", "random.fuse", "smoke", "flame", "fire.fire", "Large chest", "reddust", "Duplicate id: ", "x", "y", "z", "id", " is missing a mapping! This is a bug!", "Furnace", "Chest", "Sign", "MobSpawner", "Text1", "Text2", "Text3", "Text4", "Text", "random.door_close", "random.door_open", "random.click", "Can\'t compare ", " to ", "everything", "mobs", "players", ", ", "portal.portal", "portal", "CONFLICT @ ", "13", "cat", "-", "Capacity is negative: ", "The last byte in dst ",
"The last byte in src ", "ERA=", "YEAR=", "MONTH=", "WEEK_OF_YEAR=", "WEEK_OF_MONTH=", "DAY_OF_MONTH=", "DAY_OF_YEAR=", "DAY_OF_WEEK=", "DAY_OF_WEEK_IN_MONTH=", "AM_PM=", "HOUR=", "HOUR_OF_DAY", "MINUTE=", "SECOND=", "MILLISECOND=", "ZONE_OFFSET=", "DST_OFFSET=", "Index ", "The last char in dst ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "fire.ignite", "random.bow", "UTC", "001", "STRICT", "LENIANT", "BIG_ENDIAN", "LITTLE_ENDIAN", "GMT", ":", "00", "Unknown zone type: ",
"Id must not be null", "Unknown mode: ", "Default", "Forward", "Left", "Back", "Right", "Jump", "Inventory", "Drop", "Chat", "Toggle fog", "Sneak", "Music: ", "OFF", "%", "Sound: ", "Invert mouse: ", "ON", "Sensitivity: *yawn*", "Sensitivity: HYPERSPEED!!!", "Sensitivity: ", "Render distance: ", "View bobbing: ", "3d anaglyph: ", "Limit framerate: ", "Difficulty: ", "Graphics: ", "FAST", "FANCY", "options.txt", "music", "sound", "mouseSensitivity", "invertYMouse", "viewDistance", "bobView", "anaglyph3d", "limitFramerate",
"difficulty", "fancyGraphics", "skin", "lastServer", "key_", "Failed to load options", "music:", "sound:", "invertYMouse:", "mouseSensitivity:", "viewDistance:", "bobView:", "anaglyph3d:", "limitFramerate:", "difficulty:", "fancyGraphics:", "skin:", "lastServer:", "Failed to save options", "FAR", "NORMAL", "SHORT", "TINY", "Peaceful", "Easy", "Normal", "Hard", "Back to title screen", "Level save conflict", "Minecraft detected a conflict in the level save data.", "This could be caused by two copies of the game",
"accessing the same level.", "To prevent level corruption, the current game has quit.", "need dictionary", "unknown compression method", "unknown header flags set", "incorrect data check", "incorrect length check", "incorrect header check", "invalid window size", "bad extra field length", "header crc mismatch", "saves/", "/level.dat", "Data", "/session.lock", "Failed to check session lock, aborting", "RandomSeed", "SpawnX", "SpawnY", "SpawnZ", "Time", "SizeOnDisk", "Dimension", "Saving level", "Saving chunks",
"LastPlayed", "/level.dat_new", "/level.dat_old", "Player count: ", "All: ", "ambient.cave.cave", "TickNextTick list out of synch", "The save is being accessed from another location, aborting", "humanoid", "/mob/char.png", "http://www.minecraft.net/skin/", ".png", "Loading texture ", "Wrong number of repetitions of X pattern at ", "IGNORE", "REPLACE", "REPORT", "Action must be non-null", "mousedown", "wheel", "%%", "!!", "0123456789abcdef", "C: ", ". F: ", ", O: ", ", E: ", "E: ", ". B: ", ", I: ", "/terrain/sun.png",
"/terrain/moon.png", "/environment/clouds.png", "C418 - ", "bubble", "explode", "splash", "snowballpoof", "slime", "/particles.png", "/gui/gui.png", "/gui/icons.png", "Minecraft Alpha v1.2.6 (", "Used memory: ", "% (", "MB) of ", "MB", "Allocated memory: ", "MB)", "x: ", "y: ", "z: ", "Minecraft Alpha v1.2.6", "%blur%/misc/pumpkinblur.png", "%blur%/misc/vignette.png", "Now playing: ", " *   * * *   * *** *** *** *** *** ***", " ** ** * **  * *   *   * * * * *    * ", " * * * * * * * **  *   **  *** **   * ",
" *   * * *  ** *   *   * * * * *    * ", " *   * * *   * *** *** * * * * *    * ", "missingno", "/title/splashes.txt", "Happy birthday, ez!", "Happy birthday, Notch!", "Merry X-mas!", "Happy new year!", "Singleplayer", "Multiplayer", "Mods and Texture Packs", "Options...", "/gui/logo.png", "Copyright Mojang Specifications. Do not distribute.", "/title/black.png", "random.splash", "Pos", "Motion", "Rotation", "FallDistance", "Fire", "Air", "OnGround", "random.hurt", "Health", "HurtTime", "DeathTime", "AttackTime",
"Notch", "Score", "Edit sign message:", "Slot", "Crafting", "/gui/inventory.png", "Respawn", "Title menu", "Game over!", "Score: &e", "invalid stored block lengths", "invalid block type", "too many length or distance symbols", "invalid bit length repeat", "/glsl/core.glsl", "\n#define CC_a_color\n", "#define CC_a_normal\n", "#define CC_a_texture0\n", "#define CC_lighting\n", "#define CC_fog\n", "#define CC_alphatest\n", "#define CC_unit0\n", "\n#define CC_VERT\n", "\n\n", "\n[/glsl/core.glsl][CC_VERT] ", "broken shader file",
"\n#define CC_FRAG\n", "\n[/glsl/core.glsl][CC_FRAG] ", "a_position", "a_texture0", "a_color", "a_normal", "\n[LINKER] ", "matrix_m", "matrix_p", "matrix_t", "colorUniform", "normalUniform", "light0Pos", "light1Pos", "fogColor", "fogMode", "fogStart", "fogEnd", "fogDensity", "fogPremultiply", "alphaTestF", "tex0", "texCoordV0", "Count", "Damage", "oversubscribed dynamic bit lengths tree", "incomplete dynamic bit lengths tree", "oversubscribed distance tree", "incomplete distance tree", "empty distance tree with lengths",
"oversubscribed literal/length tree", "incomplete literal/length tree", "invalid distance code", "invalid literal/length code", "%clamp%/misc/shadow.png", "mob.spider", "mob.spiderdeath", "/mob/spider_eyes.png", "Saddle", "mob.pig", "mob.pigdeath", "/mob/saddle.png", "Sheared", "mob.sheep", "/mob/sheep_fur.png", "mob.cow", "mob.cowhurt", "mob.chickenplop", "mob.chicken", "mob.chickenhurt", "mob.creeper", "mob.creeperdeath", "mob.skeleton", "mob.skeletonhurt", "mob.zombie", "mob.zombiehurt", "mob.zombiedeath",
"Size", "mob.slime", "/mob/slime.png", "mob.slimeattack", "/armor/", "_", "chain", "iron", "diamond", "gold", "mob.ghast.charge", "mob.ghast.fireball", "/mob/ghast.png", "/mob/ghast_fire.png", "mob.ghast.moan", "mob.ghast.scream", "mob.ghast.death", "Dir", "Motive", "TileX", "TileY", "TileZ", "/art/kz.png", "random.drr", "xTile", "yTile", "zTile", "inTile", "shake", "inGround", "random.pop", "/item/arrows.png", "Age", "Item", "Fuse", "Tile", "Type", "PushX", "PushZ", "Fuel", "Items", "Minecart", "/item/cart.png",
"/item/boat.png", "array size does not equal image size", "newAction must be non-null", "Save and quit to title", "Back to game", "Saving level..", "Game menu", "###", "#", "#X#", "XXX", "##", "X#X", "# #", " X ", " # ", "X X", "A ", " B", "#  ", "## ", "  #", " #X", "# X", " recipes", "XX", "X#", " #", "Writer already closed", "/item/sign.png", "> ", " <", "Pig", "EntityId", "Delay", "Is", "In", "{", ",", "}", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl",
"XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "s", "d", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic",
"CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions",
"PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A",
"BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths",
"CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms",
"all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "GMT+00:00", "Options", "Controls...", "Done", "Controls", "Select world", "World", "- empty -", "World ", " (", " MB)", "Delete world...", "Cancel", "Delete world", "Wrong location! ", "Attempted to place a tile entity where there was no entity tile!", "BurnTime", "CookTime",
"Malformed input of length ", "Unmappable characters of length ", "\'", "\' will be lost forever!", "Are you sure you want to delete this world?", "Root tag must be a named compound tag", "Empty string not allowed", "Stream is closed", "Error occurred: ", "Yes", "Kebab", "Aztec", "Alban", "Aztec2", "Bomb", "Plant", "Wasteland", "Pool", "Courbet", "Sea", "Sunset", "Creebet", "Wanderer", "Graham", "Match", "Bust", "Stage", "Void", "SkullAndRoses", "Fighters", "Pointer", "Pigscene", "Skeleton", "DonkeyKong", "/DIM-1/",
"/mob/skeleton.png", "Rainforest", "Swampland", "Seasonal Forest", "Forest", "Savanna", "Shrubland", "Taiga", "Desert", "Plains", "Ice Desert", "Tundra", "Hell", "monster", "creature", "mob.zombiepig.zpigangry", "Anger", "mob.zombiepig.zpig", "mob.zombiepig.zpighurt", "mob.zombiepig.zpigdeath", "Error: ", "/gui/container.png", "/gui/crafting.png", "/gui/furnace.png", "Arrow", "Snowball", "Painting", "Mob", "Monster", "Creeper", "Spider", "Giant", "Zombie", "Slime", "Ghast", "PigZombie", "Sheep", "Cow", "Chicken",
"PrimedTnt", "FallingSand", "Boat", "Sky", "Block", "c.", ".", ".dat", "Level", "Chunk file at ", " is missing level data, skipping", "Blocks", " is missing block data, skipping", " is in the wrong location; relocating. (Expected ", ", got ", "xPos", "zPos", "/tmp_chunk.dat", "LastUpdate", "SkyLight", "BlockLight", "HeightMap", "TerrainPopulated", "Entities", "TileEntities", "Skipping Entity with id ", "Skipping TileEntity with id ", "stream end", "file error", "stream error", "data error", "insufficient memory",
"buffer error", "incompatible version", "Teleporting to ", " !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\'abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»", "random.explode", "OW KNOWS!"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
function Long_eq(a, b) {
    return a.hi === b.hi && a.lo === b.lo;
}
function Long_ne(a, b) {
    return a.hi !== b.hi || a.lo !== b.lo;
}
function Long_gt(a, b) {
    if (a.hi < b.hi) {
        return false;
    }
    if (a.hi > b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x > y;
    }
    return (a.lo & 1) > (b.lo & 1);
}
function Long_ge(a, b) {
    if (a.hi < b.hi) {
        return false;
    }
    if (a.hi > b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x >= y;
    }
    return (a.lo & 1) >= (b.lo & 1);
}
function Long_lt(a, b) {
    if (a.hi > b.hi) {
        return false;
    }
    if (a.hi < b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x < y;
    }
    return (a.lo & 1) < (b.lo & 1);
}
function Long_le(a, b) {
    if (a.hi > b.hi) {
        return false;
    }
    if (a.hi < b.hi) {
        return true;
    }
    var x = a.lo >>> 1;
    var y = b.lo >>> 1;
    if (x !== y) {
        return x <= y;
    }
    return (a.lo & 1) <= (b.lo & 1);
}
function Long_add(a, b) {
    if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
        return Long_fromNumber(a.lo + b.lo);
    } else if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = a_lolo + b_lolo | 0;
    var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
    var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
    var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
    return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
}
function Long_inc(a) {
    var lo = a.lo + 1 | 0;
    var hi = a.hi;
    if (lo === 0) {
        hi = hi + 1 | 0;
    }
    return new Long(lo, hi);
}
function Long_dec(a) {
    var lo = a.lo - 1 | 0;
    var hi = a.hi;
    if (lo ===  -1) {
        hi = hi - 1 | 0;
    }
    return new Long(lo, hi);
}
function Long_neg(a) {
    return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
}
function Long_sub(a, b) {
    if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
        return Long_fromNumber(a.lo - b.lo);
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = a_lolo - b_lolo | 0;
    var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
    var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
    var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
    return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
}
function Long_compare(a, b) {
    var r = a.hi - b.hi;
    if (r !== 0) {
        return r;
    }
    r = (a.lo >>> 1) - (b.lo >>> 1);
    if (r !== 0) {
        return r;
    }
    return (a.lo & 1) - (b.lo & 1);
}
function Long_isPositive(a) {
    return (a.hi & 0x80000000) === 0;
}
function Long_isNegative(a) {
    return (a.hi & 0x80000000) !== 0;
}
function Long_mul(a, b) {
    var positive = Long_isNegative(a) === Long_isNegative(b);
    if (Long_isNegative(a)) {
        a = Long_neg(a);
    }
    if (Long_isNegative(b)) {
        b = Long_neg(b);
    }
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    var lolo = 0;
    var lohi = 0;
    var hilo = 0;
    var hihi = 0;
    lolo = a_lolo * b_lolo | 0;
    lohi = lolo >>> 16;
    lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
    hilo = hilo + (lohi >>> 16) | 0;
    lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
    hilo = hilo + (lohi >>> 16) | 0;
    hihi = hilo >>> 16;
    hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
    hihi = hihi + (hilo >>> 16) | 0;
    hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
    var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
    return positive ? result : Long_neg(result);
}
function Long_div(a, b) {
    if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_divRem(a, b))[0];
}
function Long_udiv(a, b) {
    if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_udivRem(a, b))[0];
}
function Long_rem(a, b) {
    if (Math.abs(a.hi) < Long_MAX_NORMAL && Math.abs(b.hi) < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
    }
    return (Long_divRem(a, b))[1];
}
function Long_urem(a, b) {
    if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
        return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
    }
    return (Long_udivRem(a, b))[1];
}
function Long_divRem(a, b) {
    if (b.lo === 0 && b.hi === 0) {
        throw new Error("Division by zero");
    }
    var positive = Long_isNegative(a) === Long_isNegative(b);
    if (Long_isNegative(a)) {
        a = Long_neg(a);
    }
    if (Long_isNegative(b)) {
        b = Long_neg(b);
    }
    a = new LongInt(a.lo, a.hi, 0);
    b = new LongInt(b.lo, b.hi, 0);
    var q = LongInt_div(a, b);
    a = new Long(a.lo, a.hi);
    q = new Long(q.lo, q.hi);
    return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
}
function Long_udivRem(a, b) {
    if (b.lo === 0 && b.hi === 0) {
        throw new Error("Division by zero");
    }
    a = new LongInt(a.lo, a.hi, 0);
    b = new LongInt(b.lo, b.hi, 0);
    var q = LongInt_div(a, b);
    a = new Long(a.lo, a.hi);
    q = new Long(q.lo, q.hi);
    return [q, a];
}
function Long_shiftLeft16(a) {
    return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
}
function Long_shiftRight16(a) {
    return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
}
function Long_and(a, b) {
    return new Long(a.lo & b.lo, a.hi & b.hi);
}
function Long_or(a, b) {
    return new Long(a.lo | b.lo, a.hi | b.hi);
}
function Long_xor(a, b) {
    return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
}
function Long_shl(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
    } else if (b === 32) {
        return new Long(0, a.lo);
    } else {
        return new Long(0, a.lo << b - 32);
    }
}
function Long_shr(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
    } else if (b === 32) {
        return new Long(a.hi, a.hi >> 31);
    } else {
        return new Long(a.hi >> b - 32, a.hi >> 31);
    }
}
function Long_shru(a, b) {
    b &= 63;
    if (b === 0) {
        return a;
    } else if (b < 32) {
        return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
    } else if (b === 32) {
        return new Long(a.hi, 0);
    } else {
        return new Long(a.hi >>> b - 32, 0);
    }
}
function LongInt(lo, hi, sup) {
    this.lo = lo;
    this.hi = hi;
    this.sup = sup;
}
function LongInt_mul(a, b) {
    var a_lolo = (a.lo & 0xFFFF) * b | 0;
    var a_lohi = (a.lo >>> 16) * b | 0;
    var a_hilo = (a.hi & 0xFFFF) * b | 0;
    var a_hihi = (a.hi >>> 16) * b | 0;
    var sup = a.sup * b | 0;
    a_lohi = a_lohi + (a_lolo >>> 16) | 0;
    a_hilo = a_hilo + (a_lohi >>> 16) | 0;
    a_hihi = a_hihi + (a_hilo >>> 16) | 0;
    sup = sup + (a_hihi >>> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup & 0xFFFF;
}
function LongInt_sub(a, b) {
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    a_lolo = a_lolo - b_lolo | 0;
    a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
    a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
    a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
    var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup;
}
function LongInt_add(a, b) {
    var a_lolo = a.lo & 0xFFFF;
    var a_lohi = a.lo >>> 16;
    var a_hilo = a.hi & 0xFFFF;
    var a_hihi = a.hi >>> 16;
    var b_lolo = b.lo & 0xFFFF;
    var b_lohi = b.lo >>> 16;
    var b_hilo = b.hi & 0xFFFF;
    var b_hihi = b.hi >>> 16;
    a_lolo = a_lolo + b_lolo | 0;
    a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
    a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
    a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
    var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
    a.lo = a_lolo & 0xFFFF | a_lohi << 16;
    a.hi = a_hilo & 0xFFFF | a_hihi << 16;
    a.sup = sup;
}
function LongInt_inc(a) {
    a.lo = a.lo + 1 | 0;
    if (a.lo === 0) {
        a.hi = a.hi + 1 | 0;
        if (a.hi === 0) {
            a.sup = a.sup + 1 & 0xFFFF;
        }
    }
}
function LongInt_dec(a) {
    a.lo = a.lo - 1 | 0;
    if (a.lo ===  -1) {
        a.hi = a.hi - 1 | 0;
        if (a.hi ===  -1) {
            a.sup = a.sup - 1 & 0xFFFF;
        }
    }
}
function LongInt_ucompare(a, b) {
    var r = a.sup - b.sup;
    if (r !== 0) {
        return r;
    }
    r = (a.hi >>> 1) - (b.hi >>> 1);
    if (r !== 0) {
        return r;
    }
    r = (a.hi & 1) - (b.hi & 1);
    if (r !== 0) {
        return r;
    }
    r = (a.lo >>> 1) - (b.lo >>> 1);
    if (r !== 0) {
        return r;
    }
    return (a.lo & 1) - (b.lo & 1);
}
function LongInt_numOfLeadingZeroBits(a) {
    var n = 0;
    var d = 16;
    while (d > 0) {
        if (a >>> d !== 0) {
            a >>>= d;
            n = n + d | 0;
        }
        d = d / 2 | 0;
    }
    return 31 - n;
}
function LongInt_shl(a, b) {
    if (b === 0) {
        return;
    }
    if (b < 32) {
        a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
        a.hi = a.lo >>> 32 - b | a.hi << b;
        a.lo <<= b;
    } else if (b === 32) {
        a.sup = a.hi & 0xFFFF;
        a.hi = a.lo;
        a.lo = 0;
    } else if (b < 64) {
        a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
        a.hi = a.lo << b;
        a.lo = 0;
    } else if (b === 64) {
        a.sup = a.lo & 0xFFFF;
        a.hi = 0;
        a.lo = 0;
    } else {
        a.sup = a.lo << b - 64 & 0xFFFF;
        a.hi = 0;
        a.lo = 0;
    }
}
function LongInt_shr(a, b) {
    if (b === 0) {
        return;
    }
    if (b === 32) {
        a.lo = a.hi;
        a.hi = a.sup;
        a.sup = 0;
    } else if (b < 32) {
        a.lo = a.lo >>> b | a.hi << 32 - b;
        a.hi = a.hi >>> b | a.sup << 32 - b;
        a.sup >>>= b;
    } else if (b === 64) {
        a.lo = a.sup;
        a.hi = 0;
        a.sup = 0;
    } else if (b < 64) {
        a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
        a.hi = a.sup >>> b - 32;
        a.sup = 0;
    } else {
        a.lo = a.sup >>> b - 64;
        a.hi = 0;
        a.sup = 0;
    }
}
function LongInt_copy(a) {
    return new LongInt(a.lo, a.hi, a.sup);
}
function LongInt_div(a, b) {
    var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
    var sz = 1 + (bits / 16 | 0);
    var dividentBits = bits % 16;
    LongInt_shl(b, bits);
    LongInt_shl(a, dividentBits);
    var q = new LongInt(0, 0, 0);
    while (sz-- > 0) {
        LongInt_shl(q, 16);
        var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
        var digitB = b.hi >>> 16;
        var digit = digitA / digitB | 0;
        var t = LongInt_copy(b);
        LongInt_mul(t, digit);
        if (LongInt_ucompare(t, a) >= 0) {
            while (LongInt_ucompare(t, a) > 0) {
                LongInt_sub(t, b);
                 --digit;
            }
        } else {
            while (true) {
                var nextT = LongInt_copy(t);
                LongInt_add(nextT, b);
                if (LongInt_ucompare(nextT, a) > 0) {
                    break;
                }
                t = nextT;
                ++digit;
            }
        }
        LongInt_sub(a, t);
        q.lo |= digit;
        LongInt_shl(a, 16);
    }
    LongInt_shr(a, bits + 16);
    return q;
}
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (var i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : function(result) {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    var result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        var self = this;
        var callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(function() {
            self.resume();
        });
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
function $rt_suspending() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
}
function $rt_resuming() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
}
function $rt_suspend(callback) {
    var nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
    }
    return nativeThread.suspend(callback);
}
function $rt_startThread(runner, callback) {
    (new TeaVMThread(runner)).start(callback);
}
var $rt_currentNativeThread = null;
function $rt_nativeThread() {
    return $rt_currentNativeThread;
}
function $rt_invalidPointer() {
    throw new Error("Invalid recorded state");
}
main = $rt_mainStarter(nle_Client_main);
(function() {
    var c;
    c = otjb_Window.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$4;
    c.addEventListener = c.$addEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.getLength = c.$getLength$exported$5;
    c.get = c.$get$exported$2;
    c.addEventListener = c.$addEventListener$exported$6;
    c.removeEventListener = c.$removeEventListener$exported$3;
    c = nlea_EaglerAdapterImpl2$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$3.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$4.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$5.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$6.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$7.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$8.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$9.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$10.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$11.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$1.prototype;
    c.stateChanged = c.$stateChanged$exported$0;
    c = nlea_EaglerAdapterImpl2$12.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$13.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = nlea_EaglerAdapterImpl2$14.prototype;
    c.onTimer = c.$onTimer$exported$0;
    c = nlea_EaglerAdapterImpl2$14$1.prototype;
    c.onTimer = c.$onTimer$exported$0;
})();
})();

//# sourceMappingURL=app.js.map